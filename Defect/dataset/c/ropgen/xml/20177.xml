<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20177.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:36">uyvytoyv12</name>)<parameter_list pos:start="1:38" pos:end="5:54">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">src</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">ydst</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:80">uint8_t</name> <modifier pos:start="1:82" pos:end="1:82">*</modifier></type><name pos:start="1:83" pos:end="1:86">udst</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:101"><decl pos:start="1:89" pos:end="1:101"><type pos:start="1:89" pos:end="1:101"><name pos:start="1:89" pos:end="1:95">uint8_t</name> <modifier pos:start="1:97" pos:end="1:97">*</modifier></type><name pos:start="1:98" pos:end="1:101">vdst</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:16">unsigned</name> <name pos:start="3:18" pos:end="3:20">int</name></type> <name pos:start="3:22" pos:end="3:26">width</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:47">height</name></decl></parameter>,

	<parameter pos:start="5:9" pos:end="5:21"><decl pos:start="5:9" pos:end="5:21"><type pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:21">lumStride</name></decl></parameter>, <parameter pos:start="5:24" pos:end="5:38"><decl pos:start="5:24" pos:end="5:38"><type pos:start="5:24" pos:end="5:38"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:38">chromStride</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:53"><decl pos:start="5:41" pos:end="5:53"><type pos:start="5:41" pos:end="5:53"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:53">srcStride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="237:1">{<block_content pos:start="9:9" pos:end="236:0">

	<decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:18"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">unsigned</name></type> <name pos:start="9:18" pos:end="9:18">y</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:44"><decl pos:start="11:9" pos:end="11:43"><type pos:start="11:9" pos:end="11:22"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:22">unsigned</name></type> <name pos:start="11:24" pos:end="11:33">chromWidth</name><init pos:start="11:34" pos:end="11:43">= <expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:40">width</name><operator pos:start="11:41" pos:end="11:42">&gt;&gt;</operator><literal type="number" pos:start="11:43" pos:end="11:43">1</literal></expr></init></decl>;</decl_stmt>

	<for pos:start="13:9" pos:end="228:0">for<control pos:start="13:12" pos:end="13:32">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">y</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:26"><expr pos:start="13:18" pos:end="13:25"><name pos:start="13:18" pos:end="13:18">y</name><operator pos:start="13:19" pos:end="13:19">&lt;</operator><name pos:start="13:20" pos:end="13:25">height</name></expr>;</condition> <incr pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:28">y</name><operator pos:start="13:29" pos:end="13:30">+=</operator><literal type="number" pos:start="13:31" pos:end="13:31">2</literal></expr></incr>)</control>

	<block pos:start="15:9" pos:end="228:0">{<block_content pos:start="19:17" pos:end="223:34">

<cpp:ifdef pos:start="17:1" pos:end="17:15">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:15">HAVE_MMX</name></cpp:ifdef>

		<asm pos:start="19:17" pos:end="119:18">asm <specifier pos:start="19:21" pos:end="19:28">volatile</specifier>(

			"xorl %%eax, %%eax		\n\t"

			"pcmpeqw %%mm7, %%mm7		\n\t"

			"psrlw $8, %%mm7		\n\t" <comment type="line" pos:start="25:63" pos:end="25:79">// FF,00,FF,00...</comment>

			".balign 16			\n\t"

			"1:				\n\t"

			PREFETCH" 64(%0, %%eax, 4)	\n\t"

			"movq (%0, %%eax, 4), %%mm0	\n\t" <comment type="line" pos:start="33:63" pos:end="33:77">// UYVY UYVY(0)</comment>

			"movq 8(%0, %%eax, 4), %%mm1	\n\t" <comment type="line" pos:start="35:63" pos:end="35:77">// UYVY UYVY(4)</comment>

			"movq %%mm0, %%mm2		\n\t" <comment type="line" pos:start="37:63" pos:end="37:77">// UYVY UYVY(0)</comment>

			"movq %%mm1, %%mm3		\n\t" <comment type="line" pos:start="39:63" pos:end="39:77">// UYVY UYVY(4)</comment>

			"pand %%mm7, %%mm0		\n\t" <comment type="line" pos:start="41:63" pos:end="41:77">// U0V0 U0V0(0)</comment>

			"pand %%mm7, %%mm1		\n\t" <comment type="line" pos:start="43:63" pos:end="43:77">// U0V0 U0V0(4)</comment>

			"psrlw $8, %%mm2		\n\t" <comment type="line" pos:start="45:63" pos:end="45:77">// Y0Y0 Y0Y0(0)</comment>

			"psrlw $8, %%mm3		\n\t" <comment type="line" pos:start="47:63" pos:end="47:77">// Y0Y0 Y0Y0(4)</comment>

			"packuswb %%mm1, %%mm0		\n\t" <comment type="line" pos:start="49:63" pos:end="49:77">// UVUV UVUV(0)</comment>

			"packuswb %%mm3, %%mm2		\n\t" <comment type="line" pos:start="51:63" pos:end="51:77">// YYYY YYYY(0)</comment>



			MOVNTQ" %%mm2, (%1, %%eax, 2)	\n\t"



			"movq 16(%0, %%eax, 4), %%mm1	\n\t" <comment type="line" pos:start="59:63" pos:end="59:77">// UYVY UYVY(8)</comment>

			"movq 24(%0, %%eax, 4), %%mm2	\n\t" <comment type="line" pos:start="61:63" pos:end="61:78">// UYVY UYVY(12)</comment>

			"movq %%mm1, %%mm3		\n\t" <comment type="line" pos:start="63:63" pos:end="63:77">// UYVY UYVY(8)</comment>

			"movq %%mm2, %%mm4		\n\t" <comment type="line" pos:start="65:63" pos:end="65:78">// UYVY UYVY(12)</comment>

			"pand %%mm7, %%mm1		\n\t" <comment type="line" pos:start="67:63" pos:end="67:77">// U0V0 U0V0(8)</comment>

			"pand %%mm7, %%mm2		\n\t" <comment type="line" pos:start="69:63" pos:end="69:78">// U0V0 U0V0(12)</comment>

			"psrlw $8, %%mm3		\n\t" <comment type="line" pos:start="71:63" pos:end="71:77">// Y0Y0 Y0Y0(8)</comment>

			"psrlw $8, %%mm4		\n\t" <comment type="line" pos:start="73:63" pos:end="73:78">// Y0Y0 Y0Y0(12)</comment>

			"packuswb %%mm2, %%mm1		\n\t" <comment type="line" pos:start="75:63" pos:end="75:77">// UVUV UVUV(8)</comment>

			"packuswb %%mm4, %%mm3		\n\t" <comment type="line" pos:start="77:63" pos:end="77:77">// YYYY YYYY(8)</comment>



			MOVNTQ" %%mm3, 8(%1, %%eax, 2)	\n\t"



			"movq %%mm0, %%mm2		\n\t" <comment type="line" pos:start="85:63" pos:end="85:77">// UVUV UVUV(0)</comment>

			"movq %%mm1, %%mm3		\n\t" <comment type="line" pos:start="87:63" pos:end="87:77">// UVUV UVUV(8)</comment>

			"psrlw $8, %%mm0		\n\t" <comment type="line" pos:start="89:63" pos:end="89:77">// V0V0 V0V0(0)</comment>

			"psrlw $8, %%mm1		\n\t" <comment type="line" pos:start="91:63" pos:end="91:77">// V0V0 V0V0(8)</comment>

			"pand %%mm7, %%mm2		\n\t" <comment type="line" pos:start="93:63" pos:end="93:77">// U0U0 U0U0(0)</comment>

			"pand %%mm7, %%mm3		\n\t" <comment type="line" pos:start="95:63" pos:end="95:77">// U0U0 U0U0(8)</comment>

			"packuswb %%mm1, %%mm0		\n\t" <comment type="line" pos:start="97:63" pos:end="97:77">// VVVV VVVV(0)</comment>

			"packuswb %%mm3, %%mm2		\n\t" <comment type="line" pos:start="99:63" pos:end="99:77">// UUUU UUUU(0)</comment>



			MOVNTQ" %%mm0, (%3, %%eax)	\n\t"

			MOVNTQ" %%mm2, (%2, %%eax)	\n\t"



			"addl $8, %%eax			\n\t"

			"cmpl %4, %%eax			\n\t"

			" jb 1b				\n\t"

			::"r"(src), "r"(ydst), "r"(udst), "r"(vdst), "g" (chromWidth)

			: "memory", "%eax"

		);</asm>



		<expr_stmt pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:20">ydst</name> <operator pos:start="123:22" pos:end="123:23">+=</operator> <name pos:start="123:25" pos:end="123:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="125:17" pos:end="125:34"><expr pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:19">src</name>  <operator pos:start="125:22" pos:end="125:23">+=</operator> <name pos:start="125:25" pos:end="125:33">srcStride</name></expr>;</expr_stmt>



		<asm pos:start="129:17" pos:end="182:0">asm <specifier pos:start="129:21" pos:end="129:28">volatile</specifier>(

			"xorl %%eax, %%eax		\n\t"

			".balign 16			\n\t"

			"1:				\n\t"

			PREFETCH" 64(%0, %%eax, 4)	\n\t"

			"movq (%0, %%eax, 4), %%mm0	\n\t" <comment type="line" pos:start="139:63" pos:end="139:77">// YUYV YUYV(0)</comment>

			"movq 8(%0, %%eax, 4), %%mm1	\n\t" <comment type="line" pos:start="141:63" pos:end="141:77">// YUYV YUYV(4)</comment>

			"movq 16(%0, %%eax, 4), %%mm2	\n\t" <comment type="line" pos:start="143:63" pos:end="143:77">// YUYV YUYV(8)</comment>

			"movq 24(%0, %%eax, 4), %%mm3	\n\t" <comment type="line" pos:start="145:63" pos:end="145:78">// YUYV YUYV(12)</comment>

			"psrlw $8, %%mm0		\n\t" <comment type="line" pos:start="147:63" pos:end="147:77">// Y0Y0 Y0Y0(0)</comment>

			"psrlw $8, %%mm1		\n\t" <comment type="line" pos:start="149:63" pos:end="149:77">// Y0Y0 Y0Y0(4)</comment>

			"psrlw $8, %%mm2		\n\t" <comment type="line" pos:start="151:63" pos:end="151:77">// Y0Y0 Y0Y0(8)</comment>

			"psrlw $8, %%mm3		\n\t" <comment type="line" pos:start="153:63" pos:end="153:78">// Y0Y0 Y0Y0(12)</comment>

			"packuswb %%mm1, %%mm0		\n\t" <comment type="line" pos:start="155:63" pos:end="155:77">// YYYY YYYY(0)</comment>

			"packuswb %%mm3, %%mm2		\n\t" <comment type="line" pos:start="157:63" pos:end="157:77">// YYYY YYYY(8)</comment>



			MOVNTQ" %%mm0, (%1, %%eax, 2)	\n\t"

			MOVNTQ" %%mm2, 8(%1, %%eax, 2)	\n\t"



			"addl $8, %%eax			\n\t"

			"cmpl %4, %%eax			\n\t"

			" jb 1b				\n\t"



			::"r"(src), "r"(ydst), "r"(udst), "r"(vdst), "g" (chromWidth)

			: "memory", "%eax"

		);</asm>

<cpp:else pos:start="181:1" pos:end="181:5">#<cpp:directive pos:start="181:2" pos:end="181:5">else</cpp:directive></cpp:else>

		<decl_stmt pos:start="183:17" pos:end="183:27"><decl pos:start="183:17" pos:end="183:26"><type pos:start="183:17" pos:end="183:24"><name pos:start="183:17" pos:end="183:24">unsigned</name></type> <name pos:start="183:26" pos:end="183:26">i</name></decl>;</decl_stmt>

		<for pos:start="185:17" pos:end="197:17">for<control pos:start="185:20" pos:end="185:43">(<init pos:start="185:21" pos:end="185:24"><expr pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:21">i</name><operator pos:start="185:22" pos:end="185:22">=</operator><literal type="number" pos:start="185:23" pos:end="185:23">0</literal></expr>;</init> <condition pos:start="185:26" pos:end="185:38"><expr pos:start="185:26" pos:end="185:37"><name pos:start="185:26" pos:end="185:26">i</name><operator pos:start="185:27" pos:end="185:27">&lt;</operator><name pos:start="185:28" pos:end="185:37">chromWidth</name></expr>;</condition> <incr pos:start="185:40" pos:end="185:42"><expr pos:start="185:40" pos:end="185:42"><name pos:start="185:40" pos:end="185:40">i</name><operator pos:start="185:41" pos:end="185:42">++</operator></expr></incr>)</control>

		<block pos:start="187:17" pos:end="197:17">{<block_content pos:start="189:25" pos:end="195:53">

			<expr_stmt pos:start="189:25" pos:end="189:53"><expr pos:start="189:25" pos:end="189:52"><name pos:start="189:25" pos:end="189:31"><name pos:start="189:25" pos:end="189:28">udst</name><index pos:start="189:29" pos:end="189:31">[<expr pos:start="189:30" pos:end="189:30"><name pos:start="189:30" pos:end="189:30">i</name></expr>]</index></name> 	<operator pos:start="189:41" pos:end="189:41">=</operator> <name pos:start="189:43" pos:end="189:52"><name pos:start="189:43" pos:end="189:45">src</name><index pos:start="189:46" pos:end="189:52">[<expr pos:start="189:47" pos:end="189:51"><literal type="number" pos:start="189:47" pos:end="189:47">4</literal><operator pos:start="189:48" pos:end="189:48">*</operator><name pos:start="189:49" pos:end="189:49">i</name><operator pos:start="189:50" pos:end="189:50">+</operator><literal type="number" pos:start="189:51" pos:end="189:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="191:25" pos:end="191:53"><expr pos:start="191:25" pos:end="191:52"><name pos:start="191:25" pos:end="191:35"><name pos:start="191:25" pos:end="191:28">ydst</name><index pos:start="191:29" pos:end="191:35">[<expr pos:start="191:30" pos:end="191:34"><literal type="number" pos:start="191:30" pos:end="191:30">2</literal><operator pos:start="191:31" pos:end="191:31">*</operator><name pos:start="191:32" pos:end="191:32">i</name><operator pos:start="191:33" pos:end="191:33">+</operator><literal type="number" pos:start="191:34" pos:end="191:34">0</literal></expr>]</index></name> 	<operator pos:start="191:41" pos:end="191:41">=</operator> <name pos:start="191:43" pos:end="191:52"><name pos:start="191:43" pos:end="191:45">src</name><index pos:start="191:46" pos:end="191:52">[<expr pos:start="191:47" pos:end="191:51"><literal type="number" pos:start="191:47" pos:end="191:47">4</literal><operator pos:start="191:48" pos:end="191:48">*</operator><name pos:start="191:49" pos:end="191:49">i</name><operator pos:start="191:50" pos:end="191:50">+</operator><literal type="number" pos:start="191:51" pos:end="191:51">1</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="193:25" pos:end="193:53"><expr pos:start="193:25" pos:end="193:52"><name pos:start="193:25" pos:end="193:31"><name pos:start="193:25" pos:end="193:28">vdst</name><index pos:start="193:29" pos:end="193:31">[<expr pos:start="193:30" pos:end="193:30"><name pos:start="193:30" pos:end="193:30">i</name></expr>]</index></name> 	<operator pos:start="193:41" pos:end="193:41">=</operator> <name pos:start="193:43" pos:end="193:52"><name pos:start="193:43" pos:end="193:45">src</name><index pos:start="193:46" pos:end="193:52">[<expr pos:start="193:47" pos:end="193:51"><literal type="number" pos:start="193:47" pos:end="193:47">4</literal><operator pos:start="193:48" pos:end="193:48">*</operator><name pos:start="193:49" pos:end="193:49">i</name><operator pos:start="193:50" pos:end="193:50">+</operator><literal type="number" pos:start="193:51" pos:end="193:51">2</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="195:25" pos:end="195:53"><expr pos:start="195:25" pos:end="195:52"><name pos:start="195:25" pos:end="195:35"><name pos:start="195:25" pos:end="195:28">ydst</name><index pos:start="195:29" pos:end="195:35">[<expr pos:start="195:30" pos:end="195:34"><literal type="number" pos:start="195:30" pos:end="195:30">2</literal><operator pos:start="195:31" pos:end="195:31">*</operator><name pos:start="195:32" pos:end="195:32">i</name><operator pos:start="195:33" pos:end="195:33">+</operator><literal type="number" pos:start="195:34" pos:end="195:34">1</literal></expr>]</index></name> 	<operator pos:start="195:41" pos:end="195:41">=</operator> <name pos:start="195:43" pos:end="195:52"><name pos:start="195:43" pos:end="195:45">src</name><index pos:start="195:46" pos:end="195:52">[<expr pos:start="195:47" pos:end="195:51"><literal type="number" pos:start="195:47" pos:end="195:47">4</literal><operator pos:start="195:48" pos:end="195:48">*</operator><name pos:start="195:49" pos:end="195:49">i</name><operator pos:start="195:50" pos:end="195:50">+</operator><literal type="number" pos:start="195:51" pos:end="195:51">3</literal></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:20">ydst</name> <operator pos:start="199:22" pos:end="199:23">+=</operator> <name pos:start="199:25" pos:end="199:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:19">src</name>  <operator pos:start="201:22" pos:end="201:23">+=</operator> <name pos:start="201:25" pos:end="201:33">srcStride</name></expr>;</expr_stmt>



		<for pos:start="205:17" pos:end="216:0">for<control pos:start="205:20" pos:end="205:43">(<init pos:start="205:21" pos:end="205:24"><expr pos:start="205:21" pos:end="205:23"><name pos:start="205:21" pos:end="205:21">i</name><operator pos:start="205:22" pos:end="205:22">=</operator><literal type="number" pos:start="205:23" pos:end="205:23">0</literal></expr>;</init> <condition pos:start="205:26" pos:end="205:38"><expr pos:start="205:26" pos:end="205:37"><name pos:start="205:26" pos:end="205:26">i</name><operator pos:start="205:27" pos:end="205:27">&lt;</operator><name pos:start="205:28" pos:end="205:37">chromWidth</name></expr>;</condition> <incr pos:start="205:40" pos:end="205:42"><expr pos:start="205:40" pos:end="205:42"><name pos:start="205:40" pos:end="205:40">i</name><operator pos:start="205:41" pos:end="205:42">++</operator></expr></incr>)</control>

		<block pos:start="207:17" pos:end="216:0">{<block_content pos:start="209:25" pos:end="211:53">

			<expr_stmt pos:start="209:25" pos:end="209:53"><expr pos:start="209:25" pos:end="209:52"><name pos:start="209:25" pos:end="209:35"><name pos:start="209:25" pos:end="209:28">ydst</name><index pos:start="209:29" pos:end="209:35">[<expr pos:start="209:30" pos:end="209:34"><literal type="number" pos:start="209:30" pos:end="209:30">2</literal><operator pos:start="209:31" pos:end="209:31">*</operator><name pos:start="209:32" pos:end="209:32">i</name><operator pos:start="209:33" pos:end="209:33">+</operator><literal type="number" pos:start="209:34" pos:end="209:34">0</literal></expr>]</index></name> 	<operator pos:start="209:41" pos:end="209:41">=</operator> <name pos:start="209:43" pos:end="209:52"><name pos:start="209:43" pos:end="209:45">src</name><index pos:start="209:46" pos:end="209:52">[<expr pos:start="209:47" pos:end="209:51"><literal type="number" pos:start="209:47" pos:end="209:47">4</literal><operator pos:start="209:48" pos:end="209:48">*</operator><name pos:start="209:49" pos:end="209:49">i</name><operator pos:start="209:50" pos:end="209:50">+</operator><literal type="number" pos:start="209:51" pos:end="209:51">1</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="211:25" pos:end="211:53"><expr pos:start="211:25" pos:end="211:52"><name pos:start="211:25" pos:end="211:35"><name pos:start="211:25" pos:end="211:28">ydst</name><index pos:start="211:29" pos:end="211:35">[<expr pos:start="211:30" pos:end="211:34"><literal type="number" pos:start="211:30" pos:end="211:30">2</literal><operator pos:start="211:31" pos:end="211:31">*</operator><name pos:start="211:32" pos:end="211:32">i</name><operator pos:start="211:33" pos:end="211:33">+</operator><literal type="number" pos:start="211:34" pos:end="211:34">1</literal></expr>]</index></name> 	<operator pos:start="211:41" pos:end="211:41">=</operator> <name pos:start="211:43" pos:end="211:52"><name pos:start="211:43" pos:end="211:45">src</name><index pos:start="211:46" pos:end="211:52">[<expr pos:start="211:47" pos:end="211:51"><literal type="number" pos:start="211:47" pos:end="211:47">4</literal><operator pos:start="211:48" pos:end="211:48">*</operator><name pos:start="211:49" pos:end="211:49">i</name><operator pos:start="211:50" pos:end="211:50">+</operator><literal type="number" pos:start="211:51" pos:end="211:51">3</literal></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

<cpp:endif pos:start="215:1" pos:end="215:6">#<cpp:directive pos:start="215:2" pos:end="215:6">endif</cpp:directive></cpp:endif>

		<expr_stmt pos:start="217:17" pos:end="217:36"><expr pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:20">udst</name> <operator pos:start="217:22" pos:end="217:23">+=</operator> <name pos:start="217:25" pos:end="217:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="219:17" pos:end="219:36"><expr pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:20">vdst</name> <operator pos:start="219:22" pos:end="219:23">+=</operator> <name pos:start="219:25" pos:end="219:35">chromStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="221:17" pos:end="221:34"><expr pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:20">ydst</name> <operator pos:start="221:22" pos:end="221:23">+=</operator> <name pos:start="221:25" pos:end="221:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="223:17" pos:end="223:34"><expr pos:start="223:17" pos:end="223:33"><name pos:start="223:17" pos:end="223:19">src</name>  <operator pos:start="223:22" pos:end="223:23">+=</operator> <name pos:start="223:25" pos:end="223:33">srcStride</name></expr>;</expr_stmt>

	</block_content>}</block></for>

<cpp:ifdef pos:start="227:1" pos:end="227:15">#<cpp:directive pos:start="227:2" pos:end="227:6">ifdef</cpp:directive> <name pos:start="227:8" pos:end="227:15">HAVE_MMX</name></cpp:ifdef>

<asm pos:start="229:1" pos:end="236:0">asm <specifier pos:start="229:5" pos:end="229:12">volatile</specifier>(   EMMS" \n\t"

        	SFENCE" \n\t"

        	:::"memory");</asm>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
