<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13957.c" pos:tabs="8"><function pos:start="1:1" pos:end="577:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:20">set_cp15</name>)<parameter_list pos:start="1:22" pos:end="1:65">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:30">CPUState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">uint32_t</name></type> <name pos:start="1:47" pos:end="1:50">insn</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:64">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="577:1">{<block_content pos:start="5:5" pos:end="575:49">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">crm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">op1</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:15">insn</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">21</literal><operator pos:start="13:22" pos:end="13:22">)</operator> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <literal type="number" pos:start="13:26" pos:end="13:26">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">op2</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:15">insn</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">5</literal><operator pos:start="15:21" pos:end="15:21">)</operator> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">crm</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:14">insn</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <literal type="number" pos:start="17:18" pos:end="17:20">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="565:5">switch <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">insn</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <literal type="number" pos:start="19:22" pos:end="19:23">16</literal><operator pos:start="19:24" pos:end="19:24">)</operator> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <literal type="number" pos:start="19:28" pos:end="19:30">0xf</literal></expr>)</condition> <block pos:start="19:33" pos:end="565:5">{<block_content pos:start="21:5" pos:end="563:14">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:24">/* ID codes.  */</comment>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:23">arm_feature</name><argument_list pos:start="25:24" pos:end="25:48">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">env</name></expr></argument>, <argument pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:47"><name pos:start="25:30" pos:end="25:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:49">(<expr pos:start="29:13" pos:end="29:48"><call pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:23">arm_feature</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">env</name></expr></argument>, <argument pos:start="29:30" pos:end="29:47"><expr pos:start="29:30" pos:end="29:47"><name pos:start="29:30" pos:end="29:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="35:52">(<expr pos:start="33:13" pos:end="35:51"><call pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:23">arm_feature</name><argument_list pos:start="33:24" pos:end="33:44">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">env</name></expr></argument>, <argument pos:start="33:30" pos:end="33:43"><expr pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call>

                <operator pos:start="35:17" pos:end="35:18">&amp;&amp;</operator> <name pos:start="35:20" pos:end="35:22">op1</name> <operator pos:start="35:24" pos:end="35:25">==</operator> <literal type="number" pos:start="35:27" pos:end="35:27">2</literal> <operator pos:start="35:29" pos:end="35:30">&amp;&amp;</operator> <name pos:start="35:32" pos:end="35:34">crm</name> <operator pos:start="35:36" pos:end="35:37">==</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator> <name pos:start="35:44" pos:end="35:46">op2</name> <operator pos:start="35:48" pos:end="35:49">==</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:18">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:21">cp15</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:30">c0_cssel</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:36">val</name> <operator pos:start="37:38" pos:end="37:38">&amp;</operator> <literal type="number" pos:start="37:40" pos:end="37:42">0xf</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">bad_reg</name>;</goto>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:40">/* System configuration.  */</comment>

        <if_stmt pos:start="47:9" pos:end="49:20"><if pos:start="47:9" pos:end="49:20">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><call pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:23">arm_feature</name><argument_list pos:start="47:24" pos:end="47:48">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><name pos:start="47:25" pos:end="47:27">env</name></expr></argument>, <argument pos:start="47:30" pos:end="47:47"><expr pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:20"><block_content pos:start="49:13" pos:end="49:20">

            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">op2</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="51:9" pos:end="103:9">switch <condition pos:start="51:16" pos:end="51:20">(<expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">op2</name></expr>)</condition> <block pos:start="51:22" pos:end="103:9">{<block_content pos:start="53:9" pos:end="101:25">

        <case pos:start="53:9" pos:end="53:15">case <expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>:</case>

            <if_stmt pos:start="55:13" pos:end="57:39"><if pos:start="55:13" pos:end="57:39">if <condition pos:start="55:16" pos:end="55:66">(<expr pos:start="55:17" pos:end="55:65"><operator pos:start="55:17" pos:end="55:17">!</operator><call pos:start="55:18" pos:end="55:53"><name pos:start="55:18" pos:end="55:28">arm_feature</name><argument_list pos:start="55:29" pos:end="55:53">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">env</name></expr></argument>, <argument pos:start="55:35" pos:end="55:52"><expr pos:start="55:35" pos:end="55:52"><name pos:start="55:35" pos:end="55:52">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call> <operator pos:start="55:55" pos:end="55:56">||</operator> <name pos:start="55:58" pos:end="55:60">crm</name> <operator pos:start="55:62" pos:end="55:63">==</operator> <literal type="number" pos:start="55:65" pos:end="55:65">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:39"><block_content pos:start="57:17" pos:end="57:39">

                <expr_stmt pos:start="57:17" pos:end="57:39"><expr pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:19">env</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:25">cp15</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:32">c1_sys</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:38">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:62">/* ??? Lots of these bits are not implemented.  */</comment>

            <comment type="block" pos:start="61:13" pos:end="61:70">/* This may enable/disable the MMU, so do a TLB flush.  */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><call pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:21">tlb_flush</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:25">env</name></expr></argument>, <argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:15">case <expr pos:start="67:14" pos:end="67:14"><literal type="number" pos:start="67:14" pos:end="67:14">1</literal></expr>:</case> <comment type="block" pos:start="67:17" pos:end="67:49">/* Auxiliary cotrol register.  */</comment>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:53">(<expr pos:start="69:17" pos:end="69:52"><call pos:start="69:17" pos:end="69:52"><name pos:start="69:17" pos:end="69:27">arm_feature</name><argument_list pos:start="69:28" pos:end="69:52">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">env</name></expr></argument>, <argument pos:start="69:34" pos:end="69:51"><expr pos:start="69:34" pos:end="69:51"><name pos:start="69:34" pos:end="69:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:55" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:22">

                <expr_stmt pos:start="71:17" pos:end="71:47"><expr pos:start="71:17" pos:end="71:46"><name pos:start="71:17" pos:end="71:40"><name pos:start="71:17" pos:end="71:19">env</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:25">cp15</name><operator pos:start="71:26" pos:end="71:26">.</operator><name pos:start="71:27" pos:end="71:40">c1_xscaleauxcr</name></name> <operator pos:start="71:42" pos:end="71:42">=</operator> <name pos:start="71:44" pos:end="71:46">val</name></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="77:13" pos:end="77:35">/* Not implemented.  */</comment>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">2</literal></expr>:</case>

            <if_stmt pos:start="83:13" pos:end="85:29"><if pos:start="83:13" pos:end="85:29">if <condition pos:start="83:16" pos:end="83:53">(<expr pos:start="83:17" pos:end="83:52"><call pos:start="83:17" pos:end="83:52"><name pos:start="83:17" pos:end="83:27">arm_feature</name><argument_list pos:start="83:28" pos:end="83:52">(<argument pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><name pos:start="83:29" pos:end="83:31">env</name></expr></argument>, <argument pos:start="83:34" pos:end="83:51"><expr pos:start="83:34" pos:end="83:51"><name pos:start="83:34" pos:end="83:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:29"><block_content pos:start="85:17" pos:end="85:29">

                <goto pos:start="85:17" pos:end="85:29">goto <name pos:start="85:22" pos:end="85:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="95:13"><if pos:start="87:13" pos:end="95:13">if <condition pos:start="87:16" pos:end="87:43">(<expr pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:35"><name pos:start="87:17" pos:end="87:19">env</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">cp15</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:35">c1_coproc</name></name> <operator pos:start="87:37" pos:end="87:38">!=</operator> <name pos:start="87:40" pos:end="87:42">val</name></expr>)</condition> <block pos:start="87:45" pos:end="95:13">{<block_content pos:start="89:17" pos:end="93:30">

                <expr_stmt pos:start="89:17" pos:end="89:42"><expr pos:start="89:17" pos:end="89:41"><name pos:start="89:17" pos:end="89:35"><name pos:start="89:17" pos:end="89:19">env</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:25">cp15</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:35">c1_coproc</name></name> <operator pos:start="89:37" pos:end="89:37">=</operator> <name pos:start="89:39" pos:end="89:41">val</name></expr>;</expr_stmt>

                <comment type="block" pos:start="91:17" pos:end="91:69">/* ??? Is this safe when called from within a TB?  */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:30"><expr pos:start="93:17" pos:end="93:29"><call pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:24">tb_flush</name><argument_list pos:start="93:25" pos:end="93:29">(<argument pos:start="93:26" pos:end="93:28"><expr pos:start="93:26" pos:end="93:28"><name pos:start="93:26" pos:end="93:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <default pos:start="99:9" pos:end="99:16">default:</default>

            <goto pos:start="101:13" pos:end="101:25">goto <name pos:start="101:18" pos:end="101:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:11">case <expr pos:start="107:10" pos:end="107:10"><literal type="number" pos:start="107:10" pos:end="107:10">2</literal></expr>:</case> <comment type="block" pos:start="107:13" pos:end="107:62">/* MMU Page table control / MPU cache control.  */</comment>

        <if_stmt pos:start="109:9" pos:end="165:9"><if pos:start="109:9" pos:end="131:9">if <condition pos:start="109:12" pos:end="109:46">(<expr pos:start="109:13" pos:end="109:45"><call pos:start="109:13" pos:end="109:45"><name pos:start="109:13" pos:end="109:23">arm_feature</name><argument_list pos:start="109:24" pos:end="109:45">(<argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:27">env</name></expr></argument>, <argument pos:start="109:30" pos:end="109:44"><expr pos:start="109:30" pos:end="109:44"><name pos:start="109:30" pos:end="109:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:48" pos:end="131:9">{<block_content pos:start="111:13" pos:end="129:13">

            <switch pos:start="111:13" pos:end="129:13">switch <condition pos:start="111:20" pos:end="111:24">(<expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">op2</name></expr>)</condition> <block pos:start="111:26" pos:end="129:13">{<block_content pos:start="113:13" pos:end="127:29">

            <case pos:start="113:13" pos:end="113:19">case <expr pos:start="113:18" pos:end="113:18"><literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>:</case>

                <expr_stmt pos:start="115:17" pos:end="115:40"><expr pos:start="115:17" pos:end="115:39"><name pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:19">env</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:25">cp15</name><operator pos:start="115:26" pos:end="115:26">.</operator><name pos:start="115:27" pos:end="115:33">c2_data</name></name> <operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:39">val</name></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            <case pos:start="119:13" pos:end="119:19">case <expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">1</literal></expr>:</case>

                <expr_stmt pos:start="121:17" pos:end="121:40"><expr pos:start="121:17" pos:end="121:39"><name pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:19">env</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">cp15</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:33">c2_insn</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:39">val</name></expr>;</expr_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <default pos:start="125:13" pos:end="125:20">default:</default>

                <goto pos:start="127:17" pos:end="127:29">goto <name pos:start="127:22" pos:end="127:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="165:9">else <block pos:start="131:16" pos:end="165:9">{<block_content pos:start="133:13" pos:end="163:13">

	    <switch pos:start="133:13" pos:end="163:13">switch <condition pos:start="133:20" pos:end="133:24">(<expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">op2</name></expr>)</condition> <block pos:start="133:26" pos:end="163:13">{<block_content pos:start="135:13" pos:end="161:29">

	    <case pos:start="135:13" pos:end="135:19">case <expr pos:start="135:18" pos:end="135:18"><literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>:</case>

		<expr_stmt pos:start="137:17" pos:end="137:41"><expr pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:34"><name pos:start="137:17" pos:end="137:19">env</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:25">cp15</name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:34">c2_base0</name></name> <operator pos:start="137:36" pos:end="137:36">=</operator> <name pos:start="137:38" pos:end="137:40">val</name></expr>;</expr_stmt>

		<break pos:start="139:17" pos:end="139:22">break;</break>

	    <case pos:start="141:13" pos:end="141:19">case <expr pos:start="141:18" pos:end="141:18"><literal type="number" pos:start="141:18" pos:end="141:18">1</literal></expr>:</case>

		<expr_stmt pos:start="143:17" pos:end="143:41"><expr pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:19">env</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:25">cp15</name><operator pos:start="143:26" pos:end="143:26">.</operator><name pos:start="143:27" pos:end="143:34">c2_base1</name></name> <operator pos:start="143:36" pos:end="143:36">=</operator> <name pos:start="143:38" pos:end="143:40">val</name></expr>;</expr_stmt>

		<break pos:start="145:17" pos:end="145:22">break;</break>

	    <case pos:start="147:13" pos:end="147:19">case <expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">2</literal></expr>:</case>

                <expr_stmt pos:start="149:17" pos:end="149:25"><expr pos:start="149:17" pos:end="149:24"><name pos:start="149:17" pos:end="149:19">val</name> <operator pos:start="149:21" pos:end="149:22">&amp;=</operator> <literal type="number" pos:start="149:24" pos:end="149:24">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:43"><expr pos:start="151:17" pos:end="151:42"><name pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:19">env</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:25">cp15</name><operator pos:start="151:26" pos:end="151:26">.</operator><name pos:start="151:27" pos:end="151:36">c2_control</name></name> <operator pos:start="151:38" pos:end="151:38">=</operator> <name pos:start="151:40" pos:end="151:42">val</name></expr>;</expr_stmt>

		<expr_stmt pos:start="153:17" pos:end="153:70"><expr pos:start="153:17" pos:end="153:69"><name pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:19">env</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">cp15</name><operator pos:start="153:26" pos:end="153:26">.</operator><name pos:start="153:27" pos:end="153:33">c2_mask</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <operator pos:start="153:37" pos:end="153:37">~</operator><operator pos:start="153:38" pos:end="153:38">(</operator><operator pos:start="153:39" pos:end="153:39">(</operator><operator pos:start="153:40" pos:end="153:40">(</operator><name pos:start="153:41" pos:end="153:48">uint32_t</name><operator pos:start="153:49" pos:end="153:49">)</operator><literal type="number" pos:start="153:50" pos:end="153:60">0xffffffffu</literal><operator pos:start="153:61" pos:end="153:61">)</operator> <operator pos:start="153:63" pos:end="153:64">&gt;&gt;</operator> <name pos:start="153:66" pos:end="153:68">val</name><operator pos:start="153:69" pos:end="153:69">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:69"><expr pos:start="155:17" pos:end="155:68"><name pos:start="155:17" pos:end="155:38"><name pos:start="155:17" pos:end="155:19">env</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:25">cp15</name><operator pos:start="155:26" pos:end="155:26">.</operator><name pos:start="155:27" pos:end="155:38">c2_base_mask</name></name> <operator pos:start="155:40" pos:end="155:40">=</operator> <operator pos:start="155:42" pos:end="155:42">~</operator><operator pos:start="155:43" pos:end="155:43">(</operator><operator pos:start="155:44" pos:end="155:44">(</operator><name pos:start="155:45" pos:end="155:52">uint32_t</name><operator pos:start="155:53" pos:end="155:53">)</operator><literal type="number" pos:start="155:54" pos:end="155:60">0x3fffu</literal> <operator pos:start="155:62" pos:end="155:63">&gt;&gt;</operator> <name pos:start="155:65" pos:end="155:67">val</name><operator pos:start="155:68" pos:end="155:68">)</operator></expr>;</expr_stmt>

		<break pos:start="157:17" pos:end="157:22">break;</break>

	    <default pos:start="159:13" pos:end="159:20">default:</default>

		<goto pos:start="161:17" pos:end="161:29">goto <name pos:start="161:22" pos:end="161:28">bad_reg</name>;</goto>

	    </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:11">case <expr pos:start="169:10" pos:end="169:10"><literal type="number" pos:start="169:10" pos:end="169:10">3</literal></expr>:</case> <comment type="block" pos:start="169:13" pos:end="169:72">/* MMU Domain access control / MPU write buffer control.  */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:11">env</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:17">cp15</name><operator pos:start="171:18" pos:end="171:18">.</operator><name pos:start="171:19" pos:end="171:20">c3</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:26">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:26"><expr pos:start="173:9" pos:end="173:25"><call pos:start="173:9" pos:end="173:25"><name pos:start="173:9" pos:end="173:17">tlb_flush</name><argument_list pos:start="173:18" pos:end="173:25">(<argument pos:start="173:19" pos:end="173:21"><expr pos:start="173:19" pos:end="173:21"><name pos:start="173:19" pos:end="173:21">env</name></expr></argument>, <argument pos:start="173:24" pos:end="173:24"><expr pos:start="173:24" pos:end="173:24"><literal type="number" pos:start="173:24" pos:end="173:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="173:28" pos:end="173:71">/* Flush TLB as domain not tracked in TLB */</comment>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:11">case <expr pos:start="177:10" pos:end="177:10"><literal type="number" pos:start="177:10" pos:end="177:10">4</literal></expr>:</case> <comment type="block" pos:start="177:13" pos:end="177:28">/* Reserved.  */</comment>

        <goto pos:start="179:9" pos:end="179:21">goto <name pos:start="179:14" pos:end="179:20">bad_reg</name>;</goto>

    <case pos:start="181:5" pos:end="181:11">case <expr pos:start="181:10" pos:end="181:10"><literal type="number" pos:start="181:10" pos:end="181:10">5</literal></expr>:</case> <comment type="block" pos:start="181:13" pos:end="181:60">/* MMU Fault status / MPU access permission.  */</comment>

        <if_stmt pos:start="183:9" pos:end="185:20"><if pos:start="183:9" pos:end="185:20">if <condition pos:start="183:12" pos:end="183:49">(<expr pos:start="183:13" pos:end="183:48"><call pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:23">arm_feature</name><argument_list pos:start="183:24" pos:end="183:48">(<argument pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:27">env</name></expr></argument>, <argument pos:start="183:30" pos:end="183:47"><expr pos:start="183:30" pos:end="183:47"><name pos:start="183:30" pos:end="183:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:20"><block_content pos:start="185:13" pos:end="185:20">

            <expr_stmt pos:start="185:13" pos:end="185:20"><expr pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:15">op2</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <literal type="number" pos:start="185:19" pos:end="185:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="187:9" pos:end="233:9">switch <condition pos:start="187:16" pos:end="187:20">(<expr pos:start="187:17" pos:end="187:19"><name pos:start="187:17" pos:end="187:19">op2</name></expr>)</condition> <block pos:start="187:22" pos:end="233:9">{<block_content pos:start="189:9" pos:end="231:25">

        <case pos:start="189:9" pos:end="189:15">case <expr pos:start="189:14" pos:end="189:14"><literal type="number" pos:start="189:14" pos:end="189:14">0</literal></expr>:</case>

            <if_stmt pos:start="191:13" pos:end="193:48"><if pos:start="191:13" pos:end="193:48">if <condition pos:start="191:16" pos:end="191:50">(<expr pos:start="191:17" pos:end="191:49"><call pos:start="191:17" pos:end="191:49"><name pos:start="191:17" pos:end="191:27">arm_feature</name><argument_list pos:start="191:28" pos:end="191:49">(<argument pos:start="191:29" pos:end="191:31"><expr pos:start="191:29" pos:end="191:31"><name pos:start="191:29" pos:end="191:31">env</name></expr></argument>, <argument pos:start="191:34" pos:end="191:48"><expr pos:start="191:34" pos:end="191:48"><name pos:start="191:34" pos:end="191:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:48"><block_content pos:start="193:17" pos:end="193:48">

                <expr_stmt pos:start="193:17" pos:end="193:48"><expr pos:start="193:17" pos:end="193:47"><name pos:start="193:17" pos:end="193:19">val</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <call pos:start="193:23" pos:end="193:47"><name pos:start="193:23" pos:end="193:42">extended_mpu_ap_bits</name><argument_list pos:start="193:43" pos:end="193:47">(<argument pos:start="193:44" pos:end="193:46"><expr pos:start="193:44" pos:end="193:46"><name pos:start="193:44" pos:end="193:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:36"><expr pos:start="195:13" pos:end="195:35"><name pos:start="195:13" pos:end="195:29"><name pos:start="195:13" pos:end="195:15">env</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:21">cp15</name><operator pos:start="195:22" pos:end="195:22">.</operator><name pos:start="195:23" pos:end="195:29">c5_data</name></name> <operator pos:start="195:31" pos:end="195:31">=</operator> <name pos:start="195:33" pos:end="195:35">val</name></expr>;</expr_stmt>

            <break pos:start="197:13" pos:end="197:18">break;</break>

        <case pos:start="199:9" pos:end="199:15">case <expr pos:start="199:14" pos:end="199:14"><literal type="number" pos:start="199:14" pos:end="199:14">1</literal></expr>:</case>

            <if_stmt pos:start="201:13" pos:end="203:48"><if pos:start="201:13" pos:end="203:48">if <condition pos:start="201:16" pos:end="201:50">(<expr pos:start="201:17" pos:end="201:49"><call pos:start="201:17" pos:end="201:49"><name pos:start="201:17" pos:end="201:27">arm_feature</name><argument_list pos:start="201:28" pos:end="201:49">(<argument pos:start="201:29" pos:end="201:31"><expr pos:start="201:29" pos:end="201:31"><name pos:start="201:29" pos:end="201:31">env</name></expr></argument>, <argument pos:start="201:34" pos:end="201:48"><expr pos:start="201:34" pos:end="201:48"><name pos:start="201:34" pos:end="201:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:48"><block_content pos:start="203:17" pos:end="203:48">

                <expr_stmt pos:start="203:17" pos:end="203:48"><expr pos:start="203:17" pos:end="203:47"><name pos:start="203:17" pos:end="203:19">val</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <call pos:start="203:23" pos:end="203:47"><name pos:start="203:23" pos:end="203:42">extended_mpu_ap_bits</name><argument_list pos:start="203:43" pos:end="203:47">(<argument pos:start="203:44" pos:end="203:46"><expr pos:start="203:44" pos:end="203:46"><name pos:start="203:44" pos:end="203:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:15">env</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:21">cp15</name><operator pos:start="205:22" pos:end="205:22">.</operator><name pos:start="205:23" pos:end="205:29">c5_insn</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:35">val</name></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:15">case <expr pos:start="209:14" pos:end="209:14"><literal type="number" pos:start="209:14" pos:end="209:14">2</literal></expr>:</case>

            <if_stmt pos:start="211:13" pos:end="213:29"><if pos:start="211:13" pos:end="213:29">if <condition pos:start="211:16" pos:end="211:51">(<expr pos:start="211:17" pos:end="211:50"><operator pos:start="211:17" pos:end="211:17">!</operator><call pos:start="211:18" pos:end="211:50"><name pos:start="211:18" pos:end="211:28">arm_feature</name><argument_list pos:start="211:29" pos:end="211:50">(<argument pos:start="211:30" pos:end="211:32"><expr pos:start="211:30" pos:end="211:32"><name pos:start="211:30" pos:end="211:32">env</name></expr></argument>, <argument pos:start="211:35" pos:end="211:49"><expr pos:start="211:35" pos:end="211:49"><name pos:start="211:35" pos:end="211:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:29"><block_content pos:start="213:17" pos:end="213:29">

                <goto pos:start="213:17" pos:end="213:29">goto <name pos:start="213:22" pos:end="213:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:36"><expr pos:start="215:13" pos:end="215:35"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:15">env</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:21">cp15</name><operator pos:start="215:22" pos:end="215:22">.</operator><name pos:start="215:23" pos:end="215:29">c5_data</name></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <name pos:start="215:33" pos:end="215:35">val</name></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:15">case <expr pos:start="219:14" pos:end="219:14"><literal type="number" pos:start="219:14" pos:end="219:14">3</literal></expr>:</case>

            <if_stmt pos:start="221:13" pos:end="223:29"><if pos:start="221:13" pos:end="223:29">if <condition pos:start="221:16" pos:end="221:51">(<expr pos:start="221:17" pos:end="221:50"><operator pos:start="221:17" pos:end="221:17">!</operator><call pos:start="221:18" pos:end="221:50"><name pos:start="221:18" pos:end="221:28">arm_feature</name><argument_list pos:start="221:29" pos:end="221:50">(<argument pos:start="221:30" pos:end="221:32"><expr pos:start="221:30" pos:end="221:32"><name pos:start="221:30" pos:end="221:32">env</name></expr></argument>, <argument pos:start="221:35" pos:end="221:49"><expr pos:start="221:35" pos:end="221:49"><name pos:start="221:35" pos:end="221:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:29"><block_content pos:start="223:17" pos:end="223:29">

                <goto pos:start="223:17" pos:end="223:29">goto <name pos:start="223:22" pos:end="223:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:15">env</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:21">cp15</name><operator pos:start="225:22" pos:end="225:22">.</operator><name pos:start="225:23" pos:end="225:29">c5_insn</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:35">val</name></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        <default pos:start="229:9" pos:end="229:16">default:</default>

            <goto pos:start="231:13" pos:end="231:25">goto <name pos:start="231:18" pos:end="231:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="235:9" pos:end="235:14">break;</break>

    <case pos:start="237:5" pos:end="237:11">case <expr pos:start="237:10" pos:end="237:10"><literal type="number" pos:start="237:10" pos:end="237:10">6</literal></expr>:</case> <comment type="block" pos:start="237:13" pos:end="237:53">/* MMU Fault address / MPU base/size.  */</comment>

        <if_stmt pos:start="239:9" pos:end="275:9"><if pos:start="239:9" pos:end="247:9">if <condition pos:start="239:12" pos:end="239:46">(<expr pos:start="239:13" pos:end="239:45"><call pos:start="239:13" pos:end="239:45"><name pos:start="239:13" pos:end="239:23">arm_feature</name><argument_list pos:start="239:24" pos:end="239:45">(<argument pos:start="239:25" pos:end="239:27"><expr pos:start="239:25" pos:end="239:27"><name pos:start="239:25" pos:end="239:27">env</name></expr></argument>, <argument pos:start="239:30" pos:end="239:44"><expr pos:start="239:30" pos:end="239:44"><name pos:start="239:30" pos:end="239:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="239:48" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:43">

            <if_stmt pos:start="241:13" pos:end="243:29"><if pos:start="241:13" pos:end="243:29">if <condition pos:start="241:16" pos:end="241:25">(<expr pos:start="241:17" pos:end="241:24"><name pos:start="241:17" pos:end="241:19">crm</name> <operator pos:start="241:21" pos:end="241:22">&gt;=</operator> <literal type="number" pos:start="241:24" pos:end="241:24">8</literal></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:29"><block_content pos:start="243:17" pos:end="243:29">

                <goto pos:start="243:17" pos:end="243:29">goto <name pos:start="243:22" pos:end="243:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:43"><expr pos:start="245:13" pos:end="245:42"><name pos:start="245:13" pos:end="245:36"><name pos:start="245:13" pos:end="245:15">env</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:21">cp15</name><operator pos:start="245:22" pos:end="245:22">.</operator><name pos:start="245:23" pos:end="245:31">c6_region</name><index pos:start="245:32" pos:end="245:36">[<expr pos:start="245:33" pos:end="245:35"><name pos:start="245:33" pos:end="245:35">crm</name></expr>]</index></name> <operator pos:start="245:38" pos:end="245:38">=</operator> <name pos:start="245:40" pos:end="245:42">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="247:11" pos:end="275:9">else <block pos:start="247:16" pos:end="275:9">{<block_content pos:start="249:13" pos:end="273:13">

            <if_stmt pos:start="249:13" pos:end="251:24"><if pos:start="249:13" pos:end="251:24">if <condition pos:start="249:16" pos:end="249:53">(<expr pos:start="249:17" pos:end="249:52"><call pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:27">arm_feature</name><argument_list pos:start="249:28" pos:end="249:52">(<argument pos:start="249:29" pos:end="249:31"><expr pos:start="249:29" pos:end="249:31"><name pos:start="249:29" pos:end="249:31">env</name></expr></argument>, <argument pos:start="249:34" pos:end="249:51"><expr pos:start="249:34" pos:end="249:51"><name pos:start="249:34" pos:end="249:51">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:24"><block_content pos:start="251:17" pos:end="251:24">

                <expr_stmt pos:start="251:17" pos:end="251:24"><expr pos:start="251:17" pos:end="251:23"><name pos:start="251:17" pos:end="251:19">op2</name> <operator pos:start="251:21" pos:end="251:21">=</operator> <literal type="number" pos:start="251:23" pos:end="251:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="253:13" pos:end="273:13">switch <condition pos:start="253:20" pos:end="253:24">(<expr pos:start="253:21" pos:end="253:23"><name pos:start="253:21" pos:end="253:23">op2</name></expr>)</condition> <block pos:start="253:26" pos:end="273:13">{<block_content pos:start="255:13" pos:end="271:29">

            <case pos:start="255:13" pos:end="255:19">case <expr pos:start="255:18" pos:end="255:18"><literal type="number" pos:start="255:18" pos:end="255:18">0</literal></expr>:</case>

                <expr_stmt pos:start="257:17" pos:end="257:40"><expr pos:start="257:17" pos:end="257:39"><name pos:start="257:17" pos:end="257:33"><name pos:start="257:17" pos:end="257:19">env</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:25">cp15</name><operator pos:start="257:26" pos:end="257:26">.</operator><name pos:start="257:27" pos:end="257:33">c6_data</name></name> <operator pos:start="257:35" pos:end="257:35">=</operator> <name pos:start="257:37" pos:end="257:39">val</name></expr>;</expr_stmt>

                <break pos:start="259:17" pos:end="259:22">break;</break>

            <case pos:start="261:13" pos:end="261:19">case <expr pos:start="261:18" pos:end="261:18"><literal type="number" pos:start="261:18" pos:end="261:18">1</literal></expr>:</case> <comment type="block" pos:start="261:21" pos:end="261:51">/* ??? This is WFAR on armv6 */</comment>

            <case pos:start="263:13" pos:end="263:19">case <expr pos:start="263:18" pos:end="263:18"><literal type="number" pos:start="263:18" pos:end="263:18">2</literal></expr>:</case>

                <expr_stmt pos:start="265:17" pos:end="265:40"><expr pos:start="265:17" pos:end="265:39"><name pos:start="265:17" pos:end="265:33"><name pos:start="265:17" pos:end="265:19">env</name><operator pos:start="265:20" pos:end="265:21">-&gt;</operator><name pos:start="265:22" pos:end="265:25">cp15</name><operator pos:start="265:26" pos:end="265:26">.</operator><name pos:start="265:27" pos:end="265:33">c6_insn</name></name> <operator pos:start="265:35" pos:end="265:35">=</operator> <name pos:start="265:37" pos:end="265:39">val</name></expr>;</expr_stmt>

                <break pos:start="267:17" pos:end="267:22">break;</break>

            <default pos:start="269:13" pos:end="269:20">default:</default>

                <goto pos:start="271:17" pos:end="271:29">goto <name pos:start="271:22" pos:end="271:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:11">case <expr pos:start="279:10" pos:end="279:10"><literal type="number" pos:start="279:10" pos:end="279:10">7</literal></expr>:</case> <comment type="block" pos:start="279:13" pos:end="279:33">/* Cache control.  */</comment>

        <expr_stmt pos:start="281:9" pos:end="281:36"><expr pos:start="281:9" pos:end="281:35"><name pos:start="281:9" pos:end="281:27"><name pos:start="281:9" pos:end="281:11">env</name><operator pos:start="281:12" pos:end="281:13">-&gt;</operator><name pos:start="281:14" pos:end="281:17">cp15</name><operator pos:start="281:18" pos:end="281:18">.</operator><name pos:start="281:19" pos:end="281:27">c15_i_max</name></name> <operator pos:start="281:29" pos:end="281:29">=</operator> <literal type="number" pos:start="281:31" pos:end="281:35">0x000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:36"><expr pos:start="283:9" pos:end="283:35"><name pos:start="283:9" pos:end="283:27"><name pos:start="283:9" pos:end="283:11">env</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:17">cp15</name><operator pos:start="283:18" pos:end="283:18">.</operator><name pos:start="283:19" pos:end="283:27">c15_i_min</name></name> <operator pos:start="283:29" pos:end="283:29">=</operator> <literal type="number" pos:start="283:31" pos:end="283:35">0xff0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="285:9" pos:end="285:42">/* No cache, so nothing to do.  */</comment>

        <comment type="block" pos:start="287:9" pos:end="287:61">/* ??? MPCore has VA to PA translation functions.  */</comment>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    <case pos:start="291:5" pos:end="291:11">case <expr pos:start="291:10" pos:end="291:10"><literal type="number" pos:start="291:10" pos:end="291:10">8</literal></expr>:</case> <comment type="block" pos:start="291:13" pos:end="291:35">/* MMU TLB control.  */</comment>

        <switch pos:start="293:9" pos:end="347:9">switch <condition pos:start="293:16" pos:end="293:20">(<expr pos:start="293:17" pos:end="293:19"><name pos:start="293:17" pos:end="293:19">op2</name></expr>)</condition> <block pos:start="293:22" pos:end="347:9">{<block_content pos:start="295:9" pos:end="345:25">

        <case pos:start="295:9" pos:end="295:15">case <expr pos:start="295:14" pos:end="295:14"><literal type="number" pos:start="295:14" pos:end="295:14">0</literal></expr>:</case> <comment type="block" pos:start="295:17" pos:end="295:38">/* Invalidate all.  */</comment>

            <expr_stmt pos:start="297:13" pos:end="297:30"><expr pos:start="297:13" pos:end="297:29"><call pos:start="297:13" pos:end="297:29"><name pos:start="297:13" pos:end="297:21">tlb_flush</name><argument_list pos:start="297:22" pos:end="297:29">(<argument pos:start="297:23" pos:end="297:25"><expr pos:start="297:23" pos:end="297:25"><name pos:start="297:23" pos:end="297:25">env</name></expr></argument>, <argument pos:start="297:28" pos:end="297:28"><expr pos:start="297:28" pos:end="297:28"><literal type="number" pos:start="297:28" pos:end="297:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="299:13" pos:end="299:18">break;</break>

        <case pos:start="301:9" pos:end="322:0">case <expr pos:start="301:14" pos:end="301:14"><literal type="number" pos:start="301:14" pos:end="301:14">1</literal></expr>:</case> <comment type="block" pos:start="301:17" pos:end="301:51">/* Invalidate single TLB entry.  */</comment>

<cpp:if pos:start="303:1" pos:end="303:5">#<cpp:directive pos:start="303:2" pos:end="303:3">if</cpp:directive> <expr pos:start="303:5" pos:end="303:5"><literal type="number" pos:start="303:5" pos:end="303:5">0</literal></expr></cpp:if>

            <comment type="block" pos:start="305:13" pos:end="305:66">/* ??? This is wrong for large pages and sections.  */</comment>

            <comment type="block" pos:start="307:13" pos:end="309:25">/* As an ugly hack to make linux work we always flush a 4K

               pages.  */</comment>

            val &amp;= 0xfffff000;

            tlb_flush_page(env, val);

            tlb_flush_page(env, val + 0x400);

            tlb_flush_page(env, val + 0x800);

            tlb_flush_page(env, val + 0xc00);

<cpp:else pos:start="321:1" pos:end="321:5">#<cpp:directive pos:start="321:2" pos:end="321:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="323:13" pos:end="326:0"><expr pos:start="323:13" pos:end="323:29"><call pos:start="323:13" pos:end="323:29"><name pos:start="323:13" pos:end="323:21">tlb_flush</name><argument_list pos:start="323:22" pos:end="323:29">(<argument pos:start="323:23" pos:end="323:25"><expr pos:start="323:23" pos:end="323:25"><name pos:start="323:23" pos:end="323:25">env</name></expr></argument>, <argument pos:start="323:28" pos:end="323:28"><expr pos:start="323:28" pos:end="323:28"><literal type="number" pos:start="323:28" pos:end="323:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="325:1" pos:end="325:6">#<cpp:directive pos:start="325:2" pos:end="325:6">endif</cpp:directive></cpp:endif>

            <break pos:start="327:13" pos:end="327:18">break;</break>

        <case pos:start="329:9" pos:end="329:15">case <expr pos:start="329:14" pos:end="329:14"><literal type="number" pos:start="329:14" pos:end="329:14">2</literal></expr>:</case> <comment type="block" pos:start="329:17" pos:end="329:42">/* Invalidate on ASID.  */</comment>

            <expr_stmt pos:start="331:13" pos:end="331:37"><expr pos:start="331:13" pos:end="331:36"><call pos:start="331:13" pos:end="331:36"><name pos:start="331:13" pos:end="331:21">tlb_flush</name><argument_list pos:start="331:22" pos:end="331:36">(<argument pos:start="331:23" pos:end="331:25"><expr pos:start="331:23" pos:end="331:25"><name pos:start="331:23" pos:end="331:25">env</name></expr></argument>, <argument pos:start="331:28" pos:end="331:35"><expr pos:start="331:28" pos:end="331:35"><name pos:start="331:28" pos:end="331:30">val</name> <operator pos:start="331:32" pos:end="331:33">==</operator> <literal type="number" pos:start="331:35" pos:end="331:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="333:13" pos:end="333:18">break;</break>

        <case pos:start="335:9" pos:end="335:15">case <expr pos:start="335:14" pos:end="335:14"><literal type="number" pos:start="335:14" pos:end="335:14">3</literal></expr>:</case> <comment type="block" pos:start="335:17" pos:end="335:54">/* Invalidate single entry on MVA.  */</comment>

            <comment type="block" pos:start="337:13" pos:end="337:61">/* ??? This is like case 1, but ignores ASID.  */</comment>

            <expr_stmt pos:start="339:13" pos:end="339:30"><expr pos:start="339:13" pos:end="339:29"><call pos:start="339:13" pos:end="339:29"><name pos:start="339:13" pos:end="339:21">tlb_flush</name><argument_list pos:start="339:22" pos:end="339:29">(<argument pos:start="339:23" pos:end="339:25"><expr pos:start="339:23" pos:end="339:25"><name pos:start="339:23" pos:end="339:25">env</name></expr></argument>, <argument pos:start="339:28" pos:end="339:28"><expr pos:start="339:28" pos:end="339:28"><literal type="number" pos:start="339:28" pos:end="339:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="341:13" pos:end="341:18">break;</break>

        <default pos:start="343:9" pos:end="343:16">default:</default>

            <goto pos:start="345:13" pos:end="345:25">goto <name pos:start="345:18" pos:end="345:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:11">case <expr pos:start="351:10" pos:end="351:10"><literal type="number" pos:start="351:10" pos:end="351:10">9</literal></expr>:</case>

        <if_stmt pos:start="353:9" pos:end="355:18"><if pos:start="353:9" pos:end="355:18">if <condition pos:start="353:12" pos:end="353:49">(<expr pos:start="353:13" pos:end="353:48"><call pos:start="353:13" pos:end="353:48"><name pos:start="353:13" pos:end="353:23">arm_feature</name><argument_list pos:start="353:24" pos:end="353:48">(<argument pos:start="353:25" pos:end="353:27"><expr pos:start="353:25" pos:end="353:27"><name pos:start="353:25" pos:end="353:27">env</name></expr></argument>, <argument pos:start="353:30" pos:end="353:47"><expr pos:start="353:30" pos:end="353:47"><name pos:start="353:30" pos:end="353:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="355:13" pos:end="355:18"><block_content pos:start="355:13" pos:end="355:18">

            <break pos:start="355:13" pos:end="355:18">break;</break></block_content></block></if></if_stmt>

        <switch pos:start="357:9" pos:end="411:9">switch <condition pos:start="357:16" pos:end="357:20">(<expr pos:start="357:17" pos:end="357:19"><name pos:start="357:17" pos:end="357:19">crm</name></expr>)</condition> <block pos:start="357:22" pos:end="411:9">{<block_content pos:start="359:9" pos:end="409:25">

        <case pos:start="359:9" pos:end="359:15">case <expr pos:start="359:14" pos:end="359:14"><literal type="number" pos:start="359:14" pos:end="359:14">0</literal></expr>:</case> <comment type="block" pos:start="359:17" pos:end="359:38">/* Cache lockdown.  */</comment>

	    <switch pos:start="361:13" pos:end="397:13">switch <condition pos:start="361:20" pos:end="361:24">(<expr pos:start="361:21" pos:end="361:23"><name pos:start="361:21" pos:end="361:23">op1</name></expr>)</condition> <block pos:start="361:26" pos:end="397:13">{<block_content pos:start="363:13" pos:end="395:29">

	    <case pos:start="363:13" pos:end="363:19">case <expr pos:start="363:18" pos:end="363:18"><literal type="number" pos:start="363:18" pos:end="363:18">0</literal></expr>:</case> <comment type="block" pos:start="363:21" pos:end="363:36">/* L1 cache.  */</comment>

		<switch pos:start="365:17" pos:end="383:17">switch <condition pos:start="365:24" pos:end="365:28">(<expr pos:start="365:25" pos:end="365:27"><name pos:start="365:25" pos:end="365:27">op2</name></expr>)</condition> <block pos:start="365:30" pos:end="383:17">{<block_content pos:start="367:17" pos:end="381:33">

		<case pos:start="367:17" pos:end="367:23">case <expr pos:start="367:22" pos:end="367:22"><literal type="number" pos:start="367:22" pos:end="367:22">0</literal></expr>:</case>

		    <expr_stmt pos:start="369:21" pos:end="369:44"><expr pos:start="369:21" pos:end="369:43"><name pos:start="369:21" pos:end="369:37"><name pos:start="369:21" pos:end="369:23">env</name><operator pos:start="369:24" pos:end="369:25">-&gt;</operator><name pos:start="369:26" pos:end="369:29">cp15</name><operator pos:start="369:30" pos:end="369:30">.</operator><name pos:start="369:31" pos:end="369:37">c9_data</name></name> <operator pos:start="369:39" pos:end="369:39">=</operator> <name pos:start="369:41" pos:end="369:43">val</name></expr>;</expr_stmt>

		    <break pos:start="371:21" pos:end="371:26">break;</break>

		<case pos:start="373:17" pos:end="373:23">case <expr pos:start="373:22" pos:end="373:22"><literal type="number" pos:start="373:22" pos:end="373:22">1</literal></expr>:</case>

		    <expr_stmt pos:start="375:21" pos:end="375:44"><expr pos:start="375:21" pos:end="375:43"><name pos:start="375:21" pos:end="375:37"><name pos:start="375:21" pos:end="375:23">env</name><operator pos:start="375:24" pos:end="375:25">-&gt;</operator><name pos:start="375:26" pos:end="375:29">cp15</name><operator pos:start="375:30" pos:end="375:30">.</operator><name pos:start="375:31" pos:end="375:37">c9_insn</name></name> <operator pos:start="375:39" pos:end="375:39">=</operator> <name pos:start="375:41" pos:end="375:43">val</name></expr>;</expr_stmt>

		    <break pos:start="377:21" pos:end="377:26">break;</break>

		<default pos:start="379:17" pos:end="379:24">default:</default>

		    <goto pos:start="381:21" pos:end="381:33">goto <name pos:start="381:26" pos:end="381:32">bad_reg</name>;</goto>

		</block_content>}</block></switch>

		<break pos:start="385:17" pos:end="385:22">break;</break>

	    <case pos:start="387:13" pos:end="387:19">case <expr pos:start="387:18" pos:end="387:18"><literal type="number" pos:start="387:18" pos:end="387:18">1</literal></expr>:</case> <comment type="block" pos:start="387:21" pos:end="387:36">/* L2 cache.  */</comment>

		<comment type="block" pos:start="389:17" pos:end="389:72">/* Ignore writes to L2 lockdown/auxiliary registers.  */</comment>

		<break pos:start="391:17" pos:end="391:22">break;</break>

	    <default pos:start="393:13" pos:end="393:20">default:</default>

		<goto pos:start="395:17" pos:end="395:29">goto <name pos:start="395:22" pos:end="395:28">bad_reg</name>;</goto>

	    </block_content>}</block></switch>

	    <break pos:start="399:13" pos:end="399:18">break;</break>

        <case pos:start="401:9" pos:end="401:15">case <expr pos:start="401:14" pos:end="401:14"><literal type="number" pos:start="401:14" pos:end="401:14">1</literal></expr>:</case> <comment type="block" pos:start="401:17" pos:end="401:51">/* TCM memory region registers.  */</comment>

            <comment type="block" pos:start="403:13" pos:end="403:35">/* Not implemented.  */</comment>

            <goto pos:start="405:13" pos:end="405:25">goto <name pos:start="405:18" pos:end="405:24">bad_reg</name>;</goto>

        <default pos:start="407:9" pos:end="407:16">default:</default>

            <goto pos:start="409:13" pos:end="409:25">goto <name pos:start="409:18" pos:end="409:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:12">case <expr pos:start="415:10" pos:end="415:11"><literal type="number" pos:start="415:10" pos:end="415:11">10</literal></expr>:</case> <comment type="block" pos:start="415:14" pos:end="415:37">/* MMU TLB lockdown.  */</comment>

        <comment type="block" pos:start="417:9" pos:end="417:48">/* ??? TLB lockdown not implemented.  */</comment>

        <break pos:start="419:9" pos:end="419:14">break;</break>

    <case pos:start="421:5" pos:end="421:12">case <expr pos:start="421:10" pos:end="421:11"><literal type="number" pos:start="421:10" pos:end="421:11">12</literal></expr>:</case> <comment type="block" pos:start="421:14" pos:end="421:29">/* Reserved.  */</comment>

        <goto pos:start="423:9" pos:end="423:21">goto <name pos:start="423:14" pos:end="423:20">bad_reg</name>;</goto>

    <case pos:start="425:5" pos:end="425:12">case <expr pos:start="425:10" pos:end="425:11"><literal type="number" pos:start="425:10" pos:end="425:11">13</literal></expr>:</case> <comment type="block" pos:start="425:14" pos:end="425:31">/* Process ID.  */</comment>

        <switch pos:start="427:9" pos:end="481:9">switch <condition pos:start="427:16" pos:end="427:20">(<expr pos:start="427:17" pos:end="427:19"><name pos:start="427:17" pos:end="427:19">op2</name></expr>)</condition> <block pos:start="427:22" pos:end="481:9">{<block_content pos:start="429:9" pos:end="479:25">

        <case pos:start="429:9" pos:end="429:15">case <expr pos:start="429:14" pos:end="429:14"><literal type="number" pos:start="429:14" pos:end="429:14">0</literal></expr>:</case>

            <comment type="block" pos:start="431:13" pos:end="435:15">/* Unlike real hardware the qemu TLB uses virtual addresses,

               not modified virtual addresses, so this causes a TLB flush.

             */</comment>

            <if_stmt pos:start="437:13" pos:end="439:32"><if pos:start="437:13" pos:end="439:32">if <condition pos:start="437:16" pos:end="437:42">(<expr pos:start="437:17" pos:end="437:41"><name pos:start="437:17" pos:end="437:34"><name pos:start="437:17" pos:end="437:19">env</name><operator pos:start="437:20" pos:end="437:21">-&gt;</operator><name pos:start="437:22" pos:end="437:25">cp15</name><operator pos:start="437:26" pos:end="437:26">.</operator><name pos:start="437:27" pos:end="437:34">c13_fcse</name></name> <operator pos:start="437:36" pos:end="437:37">!=</operator> <name pos:start="437:39" pos:end="437:41">val</name></expr>)</condition><block type="pseudo" pos:start="439:15" pos:end="439:32"><block_content pos:start="439:15" pos:end="439:32">

              <expr_stmt pos:start="439:15" pos:end="439:32"><expr pos:start="439:15" pos:end="439:31"><call pos:start="439:15" pos:end="439:31"><name pos:start="439:15" pos:end="439:23">tlb_flush</name><argument_list pos:start="439:24" pos:end="439:31">(<argument pos:start="439:25" pos:end="439:27"><expr pos:start="439:25" pos:end="439:27"><name pos:start="439:25" pos:end="439:27">env</name></expr></argument>, <argument pos:start="439:30" pos:end="439:30"><expr pos:start="439:30" pos:end="439:30"><literal type="number" pos:start="439:30" pos:end="439:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:37"><expr pos:start="441:13" pos:end="441:36"><name pos:start="441:13" pos:end="441:30"><name pos:start="441:13" pos:end="441:15">env</name><operator pos:start="441:16" pos:end="441:17">-&gt;</operator><name pos:start="441:18" pos:end="441:21">cp15</name><operator pos:start="441:22" pos:end="441:22">.</operator><name pos:start="441:23" pos:end="441:30">c13_fcse</name></name> <operator pos:start="441:32" pos:end="441:32">=</operator> <name pos:start="441:34" pos:end="441:36">val</name></expr>;</expr_stmt>

            <break pos:start="443:13" pos:end="443:18">break;</break>

        <case pos:start="445:9" pos:end="445:15">case <expr pos:start="445:14" pos:end="445:14"><literal type="number" pos:start="445:14" pos:end="445:14">1</literal></expr>:</case>

            <comment type="block" pos:start="447:13" pos:end="447:60">/* This changes the ASID, so do a TLB flush.  */</comment>

            <if_stmt pos:start="449:13" pos:end="453:32"><if pos:start="449:13" pos:end="453:32">if <condition pos:start="449:16" pos:end="451:54">(<expr pos:start="449:17" pos:end="451:53"><name pos:start="449:17" pos:end="449:37"><name pos:start="449:17" pos:end="449:19">env</name><operator pos:start="449:20" pos:end="449:21">-&gt;</operator><name pos:start="449:22" pos:end="449:25">cp15</name><operator pos:start="449:26" pos:end="449:26">.</operator><name pos:start="449:27" pos:end="449:37">c13_context</name></name> <operator pos:start="449:39" pos:end="449:40">!=</operator> <name pos:start="449:42" pos:end="449:44">val</name>

                <operator pos:start="451:17" pos:end="451:18">&amp;&amp;</operator> <operator pos:start="451:20" pos:end="451:20">!</operator><call pos:start="451:21" pos:end="451:53"><name pos:start="451:21" pos:end="451:31">arm_feature</name><argument_list pos:start="451:32" pos:end="451:53">(<argument pos:start="451:33" pos:end="451:35"><expr pos:start="451:33" pos:end="451:35"><name pos:start="451:33" pos:end="451:35">env</name></expr></argument>, <argument pos:start="451:38" pos:end="451:52"><expr pos:start="451:38" pos:end="451:52"><name pos:start="451:38" pos:end="451:52">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="453:15" pos:end="453:32"><block_content pos:start="453:15" pos:end="453:32">

              <expr_stmt pos:start="453:15" pos:end="453:32"><expr pos:start="453:15" pos:end="453:31"><call pos:start="453:15" pos:end="453:31"><name pos:start="453:15" pos:end="453:23">tlb_flush</name><argument_list pos:start="453:24" pos:end="453:31">(<argument pos:start="453:25" pos:end="453:27"><expr pos:start="453:25" pos:end="453:27"><name pos:start="453:25" pos:end="453:27">env</name></expr></argument>, <argument pos:start="453:30" pos:end="453:30"><expr pos:start="453:30" pos:end="453:30"><literal type="number" pos:start="453:30" pos:end="453:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="455:13" pos:end="455:40"><expr pos:start="455:13" pos:end="455:39"><name pos:start="455:13" pos:end="455:33"><name pos:start="455:13" pos:end="455:15">env</name><operator pos:start="455:16" pos:end="455:17">-&gt;</operator><name pos:start="455:18" pos:end="455:21">cp15</name><operator pos:start="455:22" pos:end="455:22">.</operator><name pos:start="455:23" pos:end="455:33">c13_context</name></name> <operator pos:start="455:35" pos:end="455:35">=</operator> <name pos:start="455:37" pos:end="455:39">val</name></expr>;</expr_stmt>

            <break pos:start="457:13" pos:end="457:18">break;</break>

        <case pos:start="459:9" pos:end="459:15">case <expr pos:start="459:14" pos:end="459:14"><literal type="number" pos:start="459:14" pos:end="459:14">2</literal></expr>:</case>

            <expr_stmt pos:start="461:13" pos:end="461:37"><expr pos:start="461:13" pos:end="461:36"><name pos:start="461:13" pos:end="461:30"><name pos:start="461:13" pos:end="461:15">env</name><operator pos:start="461:16" pos:end="461:17">-&gt;</operator><name pos:start="461:18" pos:end="461:21">cp15</name><operator pos:start="461:22" pos:end="461:22">.</operator><name pos:start="461:23" pos:end="461:30">c13_tls1</name></name> <operator pos:start="461:32" pos:end="461:32">=</operator> <name pos:start="461:34" pos:end="461:36">val</name></expr>;</expr_stmt>

            <break pos:start="463:13" pos:end="463:18">break;</break>

        <case pos:start="465:9" pos:end="465:15">case <expr pos:start="465:14" pos:end="465:14"><literal type="number" pos:start="465:14" pos:end="465:14">3</literal></expr>:</case>

            <expr_stmt pos:start="467:13" pos:end="467:37"><expr pos:start="467:13" pos:end="467:36"><name pos:start="467:13" pos:end="467:30"><name pos:start="467:13" pos:end="467:15">env</name><operator pos:start="467:16" pos:end="467:17">-&gt;</operator><name pos:start="467:18" pos:end="467:21">cp15</name><operator pos:start="467:22" pos:end="467:22">.</operator><name pos:start="467:23" pos:end="467:30">c13_tls2</name></name> <operator pos:start="467:32" pos:end="467:32">=</operator> <name pos:start="467:34" pos:end="467:36">val</name></expr>;</expr_stmt>

            <break pos:start="469:13" pos:end="469:18">break;</break>

        <case pos:start="471:9" pos:end="471:15">case <expr pos:start="471:14" pos:end="471:14"><literal type="number" pos:start="471:14" pos:end="471:14">4</literal></expr>:</case>

            <expr_stmt pos:start="473:13" pos:end="473:37"><expr pos:start="473:13" pos:end="473:36"><name pos:start="473:13" pos:end="473:30"><name pos:start="473:13" pos:end="473:15">env</name><operator pos:start="473:16" pos:end="473:17">-&gt;</operator><name pos:start="473:18" pos:end="473:21">cp15</name><operator pos:start="473:22" pos:end="473:22">.</operator><name pos:start="473:23" pos:end="473:30">c13_tls3</name></name> <operator pos:start="473:32" pos:end="473:32">=</operator> <name pos:start="473:34" pos:end="473:36">val</name></expr>;</expr_stmt>

            <break pos:start="475:13" pos:end="475:18">break;</break>

        <default pos:start="477:9" pos:end="477:16">default:</default>

            <goto pos:start="479:13" pos:end="479:25">goto <name pos:start="479:18" pos:end="479:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="483:9" pos:end="483:14">break;</break>

    <case pos:start="485:5" pos:end="485:12">case <expr pos:start="485:10" pos:end="485:11"><literal type="number" pos:start="485:10" pos:end="485:11">14</literal></expr>:</case> <comment type="block" pos:start="485:14" pos:end="485:29">/* Reserved.  */</comment>

        <goto pos:start="487:9" pos:end="487:21">goto <name pos:start="487:14" pos:end="487:20">bad_reg</name>;</goto>

    <case pos:start="489:5" pos:end="489:12">case <expr pos:start="489:10" pos:end="489:11"><literal type="number" pos:start="489:10" pos:end="489:11">15</literal></expr>:</case> <comment type="block" pos:start="489:14" pos:end="489:44">/* Implementation specific.  */</comment>

        <if_stmt pos:start="491:9" pos:end="511:9"><if pos:start="491:9" pos:end="511:9">if <condition pos:start="491:12" pos:end="491:49">(<expr pos:start="491:13" pos:end="491:48"><call pos:start="491:13" pos:end="491:48"><name pos:start="491:13" pos:end="491:23">arm_feature</name><argument_list pos:start="491:24" pos:end="491:48">(<argument pos:start="491:25" pos:end="491:27"><expr pos:start="491:25" pos:end="491:27"><name pos:start="491:25" pos:end="491:27">env</name></expr></argument>, <argument pos:start="491:30" pos:end="491:47"><expr pos:start="491:30" pos:end="491:47"><name pos:start="491:30" pos:end="491:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="491:51" pos:end="511:9">{<block_content pos:start="493:13" pos:end="509:25">

            <if_stmt pos:start="493:13" pos:end="507:13"><if pos:start="493:13" pos:end="507:13">if <condition pos:start="493:16" pos:end="493:37">(<expr pos:start="493:17" pos:end="493:36"><name pos:start="493:17" pos:end="493:19">op2</name> <operator pos:start="493:21" pos:end="493:22">==</operator> <literal type="number" pos:start="493:24" pos:end="493:24">0</literal> <operator pos:start="493:26" pos:end="493:27">&amp;&amp;</operator> <name pos:start="493:29" pos:end="493:31">crm</name> <operator pos:start="493:33" pos:end="493:34">==</operator> <literal type="number" pos:start="493:36" pos:end="493:36">1</literal></expr>)</condition> <block pos:start="493:39" pos:end="507:13">{<block_content pos:start="495:17" pos:end="505:22">

                <if_stmt pos:start="495:17" pos:end="503:17"><if pos:start="495:17" pos:end="503:17">if <condition pos:start="495:20" pos:end="495:57">(<expr pos:start="495:21" pos:end="495:56"><name pos:start="495:21" pos:end="495:38"><name pos:start="495:21" pos:end="495:23">env</name><operator pos:start="495:24" pos:end="495:25">-&gt;</operator><name pos:start="495:26" pos:end="495:29">cp15</name><operator pos:start="495:30" pos:end="495:30">.</operator><name pos:start="495:31" pos:end="495:38">c15_cpar</name></name> <operator pos:start="495:40" pos:end="495:41">!=</operator> <operator pos:start="495:43" pos:end="495:43">(</operator><name pos:start="495:44" pos:end="495:46">val</name> <operator pos:start="495:48" pos:end="495:48">&amp;</operator> <literal type="number" pos:start="495:50" pos:end="495:55">0x3fff</literal><operator pos:start="495:56" pos:end="495:56">)</operator></expr>)</condition> <block pos:start="495:59" pos:end="503:17">{<block_content pos:start="499:21" pos:end="501:54">

                    <comment type="block" pos:start="497:21" pos:end="497:77">/* Changes cp0 to cp13 behavior, so needs a TB flush.  */</comment>

                    <expr_stmt pos:start="499:21" pos:end="499:34"><expr pos:start="499:21" pos:end="499:33"><call pos:start="499:21" pos:end="499:33"><name pos:start="499:21" pos:end="499:28">tb_flush</name><argument_list pos:start="499:29" pos:end="499:33">(<argument pos:start="499:30" pos:end="499:32"><expr pos:start="499:30" pos:end="499:32"><name pos:start="499:30" pos:end="499:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="501:21" pos:end="501:54"><expr pos:start="501:21" pos:end="501:53"><name pos:start="501:21" pos:end="501:38"><name pos:start="501:21" pos:end="501:23">env</name><operator pos:start="501:24" pos:end="501:25">-&gt;</operator><name pos:start="501:26" pos:end="501:29">cp15</name><operator pos:start="501:30" pos:end="501:30">.</operator><name pos:start="501:31" pos:end="501:38">c15_cpar</name></name> <operator pos:start="501:40" pos:end="501:40">=</operator> <name pos:start="501:42" pos:end="501:44">val</name> <operator pos:start="501:46" pos:end="501:46">&amp;</operator> <literal type="number" pos:start="501:48" pos:end="501:53">0x3fff</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="505:17" pos:end="505:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="509:13" pos:end="509:25">goto <name pos:start="509:18" pos:end="509:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="513:9" pos:end="561:9"><if pos:start="513:9" pos:end="561:9">if <condition pos:start="513:12" pos:end="513:49">(<expr pos:start="513:13" pos:end="513:48"><call pos:start="513:13" pos:end="513:48"><name pos:start="513:13" pos:end="513:23">arm_feature</name><argument_list pos:start="513:24" pos:end="513:48">(<argument pos:start="513:25" pos:end="513:27"><expr pos:start="513:25" pos:end="513:27"><name pos:start="513:25" pos:end="513:27">env</name></expr></argument>, <argument pos:start="513:30" pos:end="513:47"><expr pos:start="513:30" pos:end="513:47"><name pos:start="513:30" pos:end="513:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="513:51" pos:end="561:9">{<block_content pos:start="515:13" pos:end="559:13">

            <switch pos:start="515:13" pos:end="559:13">switch <condition pos:start="515:20" pos:end="515:24">(<expr pos:start="515:21" pos:end="515:23"><name pos:start="515:21" pos:end="515:23">crm</name></expr>)</condition> <block pos:start="515:26" pos:end="559:13">{<block_content pos:start="517:13" pos:end="557:29">

            <case pos:start="517:13" pos:end="517:19">case <expr pos:start="517:18" pos:end="517:18"><literal type="number" pos:start="517:18" pos:end="517:18">0</literal></expr>:</case>

                <break pos:start="519:17" pos:end="519:22">break;</break>

            <case pos:start="521:13" pos:end="521:19">case <expr pos:start="521:18" pos:end="521:18"><literal type="number" pos:start="521:18" pos:end="521:18">1</literal></expr>:</case> <comment type="block" pos:start="521:21" pos:end="521:52">/* Set TI925T configuration.  */</comment>

                <expr_stmt pos:start="523:17" pos:end="523:52"><expr pos:start="523:17" pos:end="523:51"><name pos:start="523:17" pos:end="523:38"><name pos:start="523:17" pos:end="523:19">env</name><operator pos:start="523:20" pos:end="523:21">-&gt;</operator><name pos:start="523:22" pos:end="523:25">cp15</name><operator pos:start="523:26" pos:end="523:26">.</operator><name pos:start="523:27" pos:end="523:38">c15_ticonfig</name></name> <operator pos:start="523:40" pos:end="523:40">=</operator> <name pos:start="523:42" pos:end="523:44">val</name> <operator pos:start="523:46" pos:end="523:46">&amp;</operator> <literal type="number" pos:start="523:48" pos:end="523:51">0xe7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="525:17" pos:end="527:60"><expr pos:start="525:17" pos:end="527:59"><name pos:start="525:17" pos:end="525:34"><name pos:start="525:17" pos:end="525:19">env</name><operator pos:start="525:20" pos:end="525:21">-&gt;</operator><name pos:start="525:22" pos:end="525:25">cp15</name><operator pos:start="525:26" pos:end="525:26">.</operator><name pos:start="525:27" pos:end="525:34">c0_cpuid</name></name> <operator pos:start="525:36" pos:end="525:36">=</operator> <ternary pos:start="525:38" pos:end="527:59"><condition pos:start="525:38" pos:end="525:55"><expr pos:start="525:38" pos:end="525:53"><operator pos:start="525:38" pos:end="525:38">(</operator><name pos:start="525:39" pos:end="525:41">val</name> <operator pos:start="525:43" pos:end="525:43">&amp;</operator> <operator pos:start="525:45" pos:end="525:45">(</operator><literal type="number" pos:start="525:46" pos:end="525:46">1</literal> <operator pos:start="525:48" pos:end="525:49">&lt;&lt;</operator> <literal type="number" pos:start="525:51" pos:end="525:51">5</literal><operator pos:start="525:52" pos:end="525:52">)</operator><operator pos:start="525:53" pos:end="525:53">)</operator></expr> ?</condition><then pos:start="527:25" pos:end="527:40"> <comment type="block" pos:start="525:57" pos:end="525:73">/* OS_TYPE bit */</comment>

                        <expr pos:start="527:25" pos:end="527:40"><name pos:start="527:25" pos:end="527:40">ARM_CPUID_TI915T</name></expr> </then><else pos:start="527:42" pos:end="527:59">: <expr pos:start="527:44" pos:end="527:59"><name pos:start="527:44" pos:end="527:59">ARM_CPUID_TI925T</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="529:17" pos:end="529:22">break;</break>

            <case pos:start="531:13" pos:end="531:19">case <expr pos:start="531:18" pos:end="531:18"><literal type="number" pos:start="531:18" pos:end="531:18">2</literal></expr>:</case> <comment type="block" pos:start="531:21" pos:end="531:37">/* Set I_max.  */</comment>

                <expr_stmt pos:start="533:17" pos:end="533:42"><expr pos:start="533:17" pos:end="533:41"><name pos:start="533:17" pos:end="533:35"><name pos:start="533:17" pos:end="533:19">env</name><operator pos:start="533:20" pos:end="533:21">-&gt;</operator><name pos:start="533:22" pos:end="533:25">cp15</name><operator pos:start="533:26" pos:end="533:26">.</operator><name pos:start="533:27" pos:end="533:35">c15_i_max</name></name> <operator pos:start="533:37" pos:end="533:37">=</operator> <name pos:start="533:39" pos:end="533:41">val</name></expr>;</expr_stmt>

                <break pos:start="535:17" pos:end="535:22">break;</break>

            <case pos:start="537:13" pos:end="537:19">case <expr pos:start="537:18" pos:end="537:18"><literal type="number" pos:start="537:18" pos:end="537:18">3</literal></expr>:</case> <comment type="block" pos:start="537:21" pos:end="537:37">/* Set I_min.  */</comment>

                <expr_stmt pos:start="539:17" pos:end="539:42"><expr pos:start="539:17" pos:end="539:41"><name pos:start="539:17" pos:end="539:35"><name pos:start="539:17" pos:end="539:19">env</name><operator pos:start="539:20" pos:end="539:21">-&gt;</operator><name pos:start="539:22" pos:end="539:25">cp15</name><operator pos:start="539:26" pos:end="539:26">.</operator><name pos:start="539:27" pos:end="539:35">c15_i_min</name></name> <operator pos:start="539:37" pos:end="539:37">=</operator> <name pos:start="539:39" pos:end="539:41">val</name></expr>;</expr_stmt>

                <break pos:start="541:17" pos:end="541:22">break;</break>

            <case pos:start="543:13" pos:end="543:19">case <expr pos:start="543:18" pos:end="543:18"><literal type="number" pos:start="543:18" pos:end="543:18">4</literal></expr>:</case> <comment type="block" pos:start="543:21" pos:end="543:41">/* Set thread-ID.  */</comment>

                <expr_stmt pos:start="545:17" pos:end="545:54"><expr pos:start="545:17" pos:end="545:53"><name pos:start="545:17" pos:end="545:38"><name pos:start="545:17" pos:end="545:19">env</name><operator pos:start="545:20" pos:end="545:21">-&gt;</operator><name pos:start="545:22" pos:end="545:25">cp15</name><operator pos:start="545:26" pos:end="545:26">.</operator><name pos:start="545:27" pos:end="545:38">c15_threadid</name></name> <operator pos:start="545:40" pos:end="545:40">=</operator> <name pos:start="545:42" pos:end="545:44">val</name> <operator pos:start="545:46" pos:end="545:46">&amp;</operator> <literal type="number" pos:start="545:48" pos:end="545:53">0xffff</literal></expr>;</expr_stmt>

                <break pos:start="547:17" pos:end="547:22">break;</break>

            <case pos:start="549:13" pos:end="549:19">case <expr pos:start="549:18" pos:end="549:18"><literal type="number" pos:start="549:18" pos:end="549:18">8</literal></expr>:</case> <comment type="block" pos:start="549:21" pos:end="549:59">/* Wait-for-interrupt (deprecated).  */</comment>

                <expr_stmt pos:start="551:17" pos:end="551:55"><expr pos:start="551:17" pos:end="551:54"><call pos:start="551:17" pos:end="551:54"><name pos:start="551:17" pos:end="551:29">cpu_interrupt</name><argument_list pos:start="551:30" pos:end="551:54">(<argument pos:start="551:31" pos:end="551:33"><expr pos:start="551:31" pos:end="551:33"><name pos:start="551:31" pos:end="551:33">env</name></expr></argument>, <argument pos:start="551:36" pos:end="551:53"><expr pos:start="551:36" pos:end="551:53"><name pos:start="551:36" pos:end="551:53">CPU_INTERRUPT_HALT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="553:17" pos:end="553:22">break;</break>

            <default pos:start="555:13" pos:end="555:20">default:</default>

                <goto pos:start="557:17" pos:end="557:29">goto <name pos:start="557:22" pos:end="557:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <break pos:start="563:9" pos:end="563:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="567:5" pos:end="567:11">return;</return>

<label pos:start="569:1" pos:end="569:8"><name pos:start="569:1" pos:end="569:7">bad_reg</name>:</label>

    <comment type="block" pos:start="571:5" pos:end="571:79">/* ??? For debugging only.  Should raise illegal instruction exception.  */</comment>

    <expr_stmt pos:start="573:5" pos:end="575:49"><expr pos:start="573:5" pos:end="575:48"><call pos:start="573:5" pos:end="575:48"><name pos:start="573:5" pos:end="573:13">cpu_abort</name><argument_list pos:start="573:14" pos:end="575:48">(<argument pos:start="573:15" pos:end="573:17"><expr pos:start="573:15" pos:end="573:17"><name pos:start="573:15" pos:end="573:17">env</name></expr></argument>, <argument pos:start="573:20" pos:end="573:77"><expr pos:start="573:20" pos:end="573:77"><literal type="string" pos:start="573:20" pos:end="573:77">"Unimplemented cp15 register write (c%d, c%d, {%d, %d})\n"</literal></expr></argument>,

              <argument pos:start="575:15" pos:end="575:32"><expr pos:start="575:15" pos:end="575:32"><operator pos:start="575:15" pos:end="575:15">(</operator><name pos:start="575:16" pos:end="575:19">insn</name> <operator pos:start="575:21" pos:end="575:22">&gt;&gt;</operator> <literal type="number" pos:start="575:24" pos:end="575:25">16</literal><operator pos:start="575:26" pos:end="575:26">)</operator> <operator pos:start="575:28" pos:end="575:28">&amp;</operator> <literal type="number" pos:start="575:30" pos:end="575:32">0xf</literal></expr></argument>, <argument pos:start="575:35" pos:end="575:37"><expr pos:start="575:35" pos:end="575:37"><name pos:start="575:35" pos:end="575:37">crm</name></expr></argument>, <argument pos:start="575:40" pos:end="575:42"><expr pos:start="575:40" pos:end="575:42"><name pos:start="575:40" pos:end="575:42">op1</name></expr></argument>, <argument pos:start="575:45" pos:end="575:47"><expr pos:start="575:45" pos:end="575:47"><name pos:start="575:45" pos:end="575:47">op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
