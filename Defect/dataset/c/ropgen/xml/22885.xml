<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22885.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">avi_write_ix</name><parameter_list pos:start="1:24" pos:end="1:43">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AVIContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">avi</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:12">tag</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:15">ix_tag</name><index pos:start="11:16" pos:end="11:17">[]</index></name> <init pos:start="11:19" pos:end="11:26">= <expr pos:start="11:21" pos:end="11:26"><literal type="string" pos:start="11:21" pos:end="11:26">"ix00"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:24">(<argument pos:start="17:12" pos:end="17:23"><expr pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:13">pb</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">seekable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">avi</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:20">riff_id</name></name> <operator pos:start="21:22" pos:end="21:22">&gt;</operator> <name pos:start="21:24" pos:end="21:44">AVI_MASTER_INDEX_SIZE</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="27:5" pos:end="109:5">for <control pos:start="27:9" pos:end="27:39">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:34"><expr pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:33">nb_streams</name></name></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">i</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="109:5">{<block_content pos:start="29:9" pos:end="107:37">

        <decl_stmt pos:start="29:9" pos:end="29:52"><decl pos:start="29:9" pos:end="29:51"><type pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:17">AVIStream</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:24">avist</name> <init pos:start="29:26" pos:end="29:51">= <expr pos:start="29:28" pos:end="29:51"><name pos:start="29:28" pos:end="29:40"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:37">streams</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">i</name></expr>]</index></name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:51">priv_data</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:24"><decl pos:start="31:9" pos:end="31:18"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">int64_t</name></type> <name pos:start="31:17" pos:end="31:18">ix</name></decl>, <decl pos:start="31:21" pos:end="31:23"><type ref="prev" pos:start="31:9" pos:end="31:15"/><name pos:start="31:21" pos:end="31:23">pos</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:25">avi_stream2fourcc</name><argument_list pos:start="35:26" pos:end="35:70">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">tag</name></expr></argument>, <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr></argument>, <argument pos:start="35:35" pos:end="35:69"><expr pos:start="35:35" pos:end="35:69"><name pos:start="35:35" pos:end="35:47"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:44">streams</name><index pos:start="35:45" pos:end="35:47">[<expr pos:start="35:46" pos:end="35:46"><name pos:start="35:46" pos:end="35:46">i</name></expr>]</index></name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:69"><name pos:start="35:50" pos:end="35:57">codecpar</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:69">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:14">ix_tag</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">3</literal></expr>]</index></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="char" pos:start="37:21" pos:end="37:23">'0'</literal> <operator pos:start="37:25" pos:end="37:25">+</operator> <name pos:start="37:27" pos:end="37:27">i</name></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:50">/* Writing AVI OpenDML leaf index chunk */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:10">ix</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:22">avio_tell</name><argument_list pos:start="43:23" pos:end="43:26">(<argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:20">ffio_wfourcc</name><argument_list pos:start="45:21" pos:end="45:32">(<argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><name pos:start="45:22" pos:end="45:23">pb</name></expr></argument>, <argument pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:31">ix_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="45:40" pos:end="45:49">/* ix?? */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:53"><expr pos:start="47:9" pos:end="47:52"><call pos:start="47:9" pos:end="47:52"><name pos:start="47:9" pos:end="47:17">avio_wl32</name><argument_list pos:start="47:18" pos:end="47:52">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:51"><expr pos:start="47:23" pos:end="47:51"><name pos:start="47:23" pos:end="47:42"><name pos:start="47:23" pos:end="47:27">avist</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:36">indexes</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:42">entry</name></name> <operator pos:start="47:44" pos:end="47:44">*</operator> <literal type="number" pos:start="47:46" pos:end="47:48">8</literal> <operator pos:start="47:48" pos:end="47:48">+</operator> <literal type="number" pos:start="47:50" pos:end="47:51">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:24">/* chunk size */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:17">avio_wl16</name><argument_list pos:start="51:18" pos:end="51:24">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="51:37" pos:end="51:56">/* wLongsPerEntry */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><call pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:15">avio_w8</name><argument_list pos:start="53:16" pos:end="53:22">(<argument pos:start="53:17" pos:end="53:18"><expr pos:start="53:17" pos:end="53:18"><name pos:start="53:17" pos:end="53:18">pb</name></expr></argument>, <argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="53:37" pos:end="53:74">/* bIndexSubType (0 == frame index) */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><call pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:15">avio_w8</name><argument_list pos:start="55:16" pos:end="55:22">(<argument pos:start="55:17" pos:end="55:18"><expr pos:start="55:17" pos:end="55:18"><name pos:start="55:17" pos:end="55:18">pb</name></expr></argument>, <argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="55:37" pos:end="55:79">/* bIndexType (1 == AVI_INDEX_OF_CHUNKS) */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><call pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:17">avio_wl32</name><argument_list pos:start="57:18" pos:end="57:43">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:42"><expr pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:27">avist</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:36">indexes</name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:42">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="59:9" pos:end="59:27">/* nEntriesInUse */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:20">ffio_wfourcc</name><argument_list pos:start="61:21" pos:end="61:29">(<argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">pb</name></expr></argument>, <argument pos:start="61:26" pos:end="61:28"><expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="61:40" pos:end="61:54">/* dwChunkId */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><call pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:17">avio_wl64</name><argument_list pos:start="63:18" pos:end="63:37">(<argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><name pos:start="63:19" pos:end="63:20">pb</name></expr></argument>, <argument pos:start="63:23" pos:end="63:36"><expr pos:start="63:23" pos:end="63:36"><name pos:start="63:23" pos:end="63:36"><name pos:start="63:23" pos:end="63:25">avi</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:36">movi_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:40" pos:end="63:57">/* qwBaseOffset */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><call pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:17">avio_wl32</name><argument_list pos:start="65:18" pos:end="65:24">(<argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><name pos:start="65:19" pos:end="65:20">pb</name></expr></argument>, <argument pos:start="65:23" pos:end="65:23"><expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>              <comment type="block" pos:start="65:40" pos:end="65:69">/* dwReserved_3 (must be 0) */</comment>



        <for pos:start="69:9" pos:end="79:9">for <control pos:start="69:13" pos:end="69:50">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">j</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:21">j</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:44"><name pos:start="69:25" pos:end="69:29">avist</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:38">indexes</name><operator pos:start="69:39" pos:end="69:39">.</operator><name pos:start="69:40" pos:end="69:44">entry</name></name></expr>;</condition> <incr pos:start="69:47" pos:end="69:49"><expr pos:start="69:47" pos:end="69:49"><name pos:start="69:47" pos:end="69:47">j</name><operator pos:start="69:48" pos:end="69:49">++</operator></expr></incr>)</control> <block pos:start="69:52" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:63">

            <decl_stmt pos:start="71:13" pos:end="71:63"><decl pos:start="71:13" pos:end="71:62"><type pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:21">AVIIentry</name> <modifier pos:start="71:23" pos:end="71:23">*</modifier></type><name pos:start="71:24" pos:end="71:25">ie</name> <init pos:start="71:27" pos:end="71:62">= <expr pos:start="71:29" pos:end="71:62"><call pos:start="71:29" pos:end="71:62"><name pos:start="71:29" pos:end="71:42">avi_get_ientry</name><argument_list pos:start="71:43" pos:end="71:62">(<argument pos:start="71:44" pos:end="71:58"><expr pos:start="71:44" pos:end="71:58"><operator pos:start="71:44" pos:end="71:44">&amp;</operator><name pos:start="71:45" pos:end="71:58"><name pos:start="71:45" pos:end="71:49">avist</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:58">indexes</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:61"><expr pos:start="71:61" pos:end="71:61"><name pos:start="71:61" pos:end="71:61">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:39"><expr pos:start="73:13" pos:end="73:38"><call pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:21">avio_wl32</name><argument_list pos:start="73:22" pos:end="73:38">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">pb</name></expr></argument>, <argument pos:start="73:27" pos:end="73:37"><expr pos:start="73:27" pos:end="73:37"><name pos:start="73:27" pos:end="73:33"><name pos:start="73:27" pos:end="73:28">ie</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:33">pos</name></name> <operator pos:start="73:35" pos:end="73:35">+</operator> <literal type="number" pos:start="73:37" pos:end="73:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="77:63"><expr pos:start="75:13" pos:end="77:62"><call pos:start="75:13" pos:end="77:62"><name pos:start="75:13" pos:end="75:21">avio_wl32</name><argument_list pos:start="75:22" pos:end="77:62">(<argument pos:start="75:23" pos:end="75:24"><expr pos:start="75:23" pos:end="75:24"><name pos:start="75:23" pos:end="75:24">pb</name></expr></argument>, <argument pos:start="75:27" pos:end="77:61"><expr pos:start="75:27" pos:end="77:61"><operator pos:start="75:27" pos:end="75:27">(</operator><operator pos:start="75:28" pos:end="75:28">(</operator><name pos:start="75:29" pos:end="75:36">uint32_t</name><operator pos:start="75:37" pos:end="75:37">)</operator> <name pos:start="75:39" pos:end="75:45"><name pos:start="75:39" pos:end="75:40">ie</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:45">len</name></name> <operator pos:start="75:47" pos:end="75:47">&amp;</operator> <operator pos:start="75:49" pos:end="75:49">~</operator><literal type="number" pos:start="75:50" pos:end="75:59">0x80000000</literal><operator pos:start="75:60" pos:end="75:60">)</operator> <operator pos:start="75:62" pos:end="75:62">|</operator>

                          <operator pos:start="77:27" pos:end="77:27">(</operator><ternary pos:start="77:28" pos:end="77:60"><condition pos:start="77:28" pos:end="77:45"><expr pos:start="77:28" pos:end="77:43"><name pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:29">ie</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:36">flags</name></name> <operator pos:start="77:38" pos:end="77:38">&amp;</operator> <literal type="number" pos:start="77:40" pos:end="77:43">0x10</literal></expr> ?</condition><then pos:start="77:47" pos:end="77:47"> <expr pos:start="77:47" pos:end="77:47"><literal type="number" pos:start="77:47" pos:end="77:47">0</literal></expr> </then><else pos:start="77:49" pos:end="77:60">: <expr pos:start="77:51" pos:end="77:60"><literal type="number" pos:start="77:51" pos:end="77:60">0x80000000</literal></expr></else></ternary><operator pos:start="77:61" pos:end="77:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><call pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:18">avio_flush</name><argument_list pos:start="81:19" pos:end="81:22">(<argument pos:start="81:20" pos:end="81:21"><expr pos:start="81:20" pos:end="81:21"><name pos:start="81:20" pos:end="81:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:11">pos</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:27"><name pos:start="83:15" pos:end="83:23">avio_tell</name><argument_list pos:start="83:24" pos:end="83:27">(<argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><name pos:start="83:25" pos:end="83:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:64">/* Updating one entry in the AVI OpenDML master index */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:63"><expr pos:start="89:9" pos:end="89:62"><call pos:start="89:9" pos:end="89:62"><name pos:start="89:9" pos:end="89:17">avio_seek</name><argument_list pos:start="89:18" pos:end="89:62">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>, <argument pos:start="89:23" pos:end="89:51"><expr pos:start="89:23" pos:end="89:51"><name pos:start="89:23" pos:end="89:47"><name pos:start="89:23" pos:end="89:27">avist</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:36">indexes</name><operator pos:start="89:37" pos:end="89:37">.</operator><name pos:start="89:38" pos:end="89:47">indx_start</name></name> <operator pos:start="89:49" pos:end="89:49">-</operator> <literal type="number" pos:start="89:51" pos:end="89:51">8</literal></expr></argument>, <argument pos:start="89:54" pos:end="89:61"><expr pos:start="89:54" pos:end="89:61"><name pos:start="89:54" pos:end="89:61">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:20">ffio_wfourcc</name><argument_list pos:start="91:21" pos:end="91:32">(<argument pos:start="91:22" pos:end="91:23"><expr pos:start="91:22" pos:end="91:23"><name pos:start="91:22" pos:end="91:23">pb</name></expr></argument>, <argument pos:start="91:26" pos:end="91:31"><expr pos:start="91:26" pos:end="91:31"><literal type="string" pos:start="91:26" pos:end="91:31">"indx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="91:47" pos:end="91:71">/* enabling this entry */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><call pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:17">avio_skip</name><argument_list pos:start="93:18" pos:end="93:24">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><literal type="number" pos:start="93:23" pos:end="93:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><call pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:17">avio_wl32</name><argument_list pos:start="95:18" pos:end="95:35">(<argument pos:start="95:19" pos:end="95:20"><expr pos:start="95:19" pos:end="95:20"><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:25">avi</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:34">riff_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="block" pos:start="95:47" pos:end="95:65">/* nEntriesInUse */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><call pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:17">avio_skip</name><argument_list pos:start="97:18" pos:end="97:40">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:39"><expr pos:start="97:23" pos:end="97:39"><literal type="number" pos:start="97:23" pos:end="97:24">16</literal> <operator pos:start="97:26" pos:end="97:26">*</operator> <name pos:start="97:28" pos:end="97:39"><name pos:start="97:28" pos:end="97:30">avi</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:39">riff_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17">avio_wl64</name><argument_list pos:start="99:18" pos:end="99:25">(<argument pos:start="99:19" pos:end="99:20"><expr pos:start="99:19" pos:end="99:20"><name pos:start="99:19" pos:end="99:20">pb</name></expr></argument>, <argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                    <comment type="block" pos:start="99:47" pos:end="99:60">/* qwOffset */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:17">avio_wl32</name><argument_list pos:start="101:18" pos:end="101:31">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:30"><expr pos:start="101:23" pos:end="101:30"><name pos:start="101:23" pos:end="101:25">pos</name> <operator pos:start="101:27" pos:end="101:27">-</operator> <name pos:start="101:29" pos:end="101:30">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              <comment type="block" pos:start="101:47" pos:end="101:58">/* dwSize */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:44"><expr pos:start="103:9" pos:end="103:43"><call pos:start="103:9" pos:end="103:43"><name pos:start="103:9" pos:end="103:17">avio_wl32</name><argument_list pos:start="103:18" pos:end="103:43">(<argument pos:start="103:19" pos:end="103:20"><expr pos:start="103:19" pos:end="103:20"><name pos:start="103:19" pos:end="103:20">pb</name></expr></argument>, <argument pos:start="103:23" pos:end="103:42"><expr pos:start="103:23" pos:end="103:42"><name pos:start="103:23" pos:end="103:42"><name pos:start="103:23" pos:end="103:27">avist</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:36">indexes</name><operator pos:start="103:37" pos:end="103:37">.</operator><name pos:start="103:38" pos:end="103:42">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="103:47" pos:end="103:62">/* dwDuration */</comment>



        <expr_stmt pos:start="107:9" pos:end="107:37"><expr pos:start="107:9" pos:end="107:36"><call pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:17">avio_seek</name><argument_list pos:start="107:18" pos:end="107:36">(<argument pos:start="107:19" pos:end="107:20"><expr pos:start="107:19" pos:end="107:20"><name pos:start="107:19" pos:end="107:20">pb</name></expr></argument>, <argument pos:start="107:23" pos:end="107:25"><expr pos:start="107:23" pos:end="107:25"><name pos:start="107:23" pos:end="107:25">pos</name></expr></argument>, <argument pos:start="107:28" pos:end="107:35"><expr pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
