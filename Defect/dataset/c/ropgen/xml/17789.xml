<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17789.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">nvenc_dyload_nvenc</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:13">

    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:60"><type pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:30">PNVENCODEAPICREATEINSTANCE</name></type> <name pos:start="5:32" pos:end="5:56">nvEncodeAPICreateInstance</name> <init pos:start="5:58" pos:end="5:60">= <expr pos:start="5:60" pos:end="5:60"><literal type="number" pos:start="5:60" pos:end="5:60">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">NVENCSTATUS</name></type> <name pos:start="7:17" pos:end="7:24">nvstatus</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">NvencContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ctx</name> <init pos:start="11:23" pos:end="11:40">= <expr pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:29">avctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25">NvencDynLoadFunctions</name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:32">dl_fn</name> <init pos:start="13:34" pos:end="13:58">= <expr pos:start="13:36" pos:end="13:58"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:58"><name pos:start="13:37" pos:end="13:39">ctx</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:32"><name pos:start="17:10" pos:end="17:25">nvenc_check_cuda</name><argument_list pos:start="17:26" pos:end="17:32">(<argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:13">dl_fn</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:24">nvenc_lib</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="30:0"><block_content pos:start="25:9" pos:end="30:0">

        <return pos:start="25:9" pos:end="30:0">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:19">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:19"><call pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:11">defined</name><argument_list pos:start="29:12" pos:end="29:19">(<argument pos:start="29:13" pos:end="29:18"><expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:18">_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="31:5" pos:end="42:0"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><sizeof pos:start="31:9" pos:end="31:21">sizeof<argument_list pos:start="31:15" pos:end="31:21">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:19">void</name><operator pos:start="31:20" pos:end="31:20">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="31:23" pos:end="31:24">==</operator> <literal type="number" pos:start="31:26" pos:end="31:26">8</literal></expr>)</condition> <block pos:start="31:29" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:66">

        <expr_stmt pos:start="33:9" pos:end="33:66"><expr pos:start="33:9" pos:end="33:65"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:13">dl_fn</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">nvenc_lib</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:65"><name pos:start="33:28" pos:end="33:38">LoadLibrary</name><argument_list pos:start="33:39" pos:end="33:65">(<argument pos:start="33:40" pos:end="33:64"><expr pos:start="33:40" pos:end="33:64"><call pos:start="33:40" pos:end="33:64"><name pos:start="33:40" pos:end="33:43">TEXT</name><argument_list pos:start="33:44" pos:end="33:64">(<argument pos:start="33:45" pos:end="33:63"><expr pos:start="33:45" pos:end="33:63"><literal type="string" pos:start="33:45" pos:end="33:63">"nvEncodeAPI64.dll"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="42:0">else <block pos:start="35:12" pos:end="42:0">{<block_content pos:start="37:9" pos:end="37:64">

        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:13">dl_fn</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">nvenc_lib</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:63"><name pos:start="37:28" pos:end="37:38">LoadLibrary</name><argument_list pos:start="37:39" pos:end="37:63">(<argument pos:start="37:40" pos:end="37:62"><expr pos:start="37:40" pos:end="37:62"><call pos:start="37:40" pos:end="37:62"><name pos:start="37:40" pos:end="37:43">TEXT</name><argument_list pos:start="37:44" pos:end="37:62">(<argument pos:start="37:45" pos:end="37:61"><expr pos:start="37:45" pos:end="37:61"><literal type="string" pos:start="37:45" pos:end="37:61">"nvEncodeAPI.dll"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:65"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:9">dl_fn</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">nvenc_lib</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:65"><name pos:start="43:24" pos:end="43:29">dlopen</name><argument_list pos:start="43:30" pos:end="43:65">(<argument pos:start="43:31" pos:end="43:53"><expr pos:start="43:31" pos:end="43:53"><literal type="string" pos:start="43:31" pos:end="43:53">"libnvidia-encode.so.1"</literal></expr></argument>, <argument pos:start="43:56" pos:end="43:64"><expr pos:start="43:56" pos:end="43:64"><name pos:start="43:56" pos:end="43:64">RTLD_LAZY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:25"><name pos:start="49:10" pos:end="49:14">dl_fn</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:25">nvenc_lib</name></name></expr>)</condition> <block pos:start="49:28" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:19">

        <expr_stmt pos:start="51:9" pos:end="51:74"><expr pos:start="51:9" pos:end="51:73"><call pos:start="51:9" pos:end="51:73"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:73">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="51:37" pos:end="51:72"><expr pos:start="51:37" pos:end="51:72"><literal type="string" pos:start="51:37" pos:end="51:72">"Failed loading the nvenc library\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:19">goto <name pos:start="53:14" pos:end="53:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:117"><expr pos:start="59:5" pos:end="59:116"><name pos:start="59:5" pos:end="59:29">nvEncodeAPICreateInstance</name> <operator pos:start="59:31" pos:end="59:31">=</operator> <operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:59">PNVENCODEAPICREATEINSTANCE</name><operator pos:start="59:60" pos:end="59:60">)</operator><call pos:start="59:61" pos:end="59:116"><name pos:start="59:61" pos:end="59:69">LOAD_FUNC</name><argument_list pos:start="59:70" pos:end="59:116">(<argument pos:start="59:71" pos:end="59:86"><expr pos:start="59:71" pos:end="59:86"><name pos:start="59:71" pos:end="59:86"><name pos:start="59:71" pos:end="59:75">dl_fn</name><operator pos:start="59:76" pos:end="59:77">-&gt;</operator><name pos:start="59:78" pos:end="59:86">nvenc_lib</name></name></expr></argument>, <argument pos:start="59:89" pos:end="59:115"><expr pos:start="59:89" pos:end="59:115"><literal type="string" pos:start="59:89" pos:end="59:115">"NvEncodeAPICreateInstance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:35">(<expr pos:start="63:9" pos:end="63:34"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:34">nvEncodeAPICreateInstance</name></expr>)</condition> <block pos:start="63:37" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:19">

        <expr_stmt pos:start="65:9" pos:end="65:73"><expr pos:start="65:9" pos:end="65:72"><call pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:72">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="65:37" pos:end="65:71"><expr pos:start="65:37" pos:end="65:71"><literal type="string" pos:start="65:37" pos:end="65:71">"Failed to load nvenc entrypoint\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:19">goto <name pos:start="67:14" pos:end="67:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:65"><expr pos:start="73:5" pos:end="73:64"><name pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:9">dl_fn</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:22">nvenc_funcs</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:30">version</name></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:64">NV_ENCODE_API_FUNCTION_LIST_VER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:12">nvstatus</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:61"><name pos:start="77:16" pos:end="77:40">nvEncodeAPICreateInstance</name><argument_list pos:start="77:41" pos:end="77:61">(<argument pos:start="77:42" pos:end="77:60"><expr pos:start="77:42" pos:end="77:60"><operator pos:start="77:42" pos:end="77:42">&amp;</operator><name pos:start="77:43" pos:end="77:60"><name pos:start="77:43" pos:end="77:47">dl_fn</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:60">nvenc_funcs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:35">(<expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:16">nvstatus</name> <operator pos:start="81:18" pos:end="81:19">!=</operator> <name pos:start="81:21" pos:end="81:34">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="81:37" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:19">

        <expr_stmt pos:start="83:9" pos:end="83:78"><expr pos:start="83:9" pos:end="83:77"><call pos:start="83:9" pos:end="83:77"><name pos:start="83:9" pos:end="83:25">nvenc_print_error</name><argument_list pos:start="83:26" pos:end="83:77">(<argument pos:start="83:27" pos:end="83:31"><expr pos:start="83:27" pos:end="83:31"><name pos:start="83:27" pos:end="83:31">avctx</name></expr></argument>, <argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:41">nvstatus</name></expr></argument>, <argument pos:start="83:44" pos:end="83:76"><expr pos:start="83:44" pos:end="83:76"><literal type="string" pos:start="83:44" pos:end="83:76">"Failed to create nvenc instance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:19">goto <name pos:start="85:14" pos:end="85:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:70"><expr pos:start="91:5" pos:end="91:69"><call pos:start="91:5" pos:end="91:69"><name pos:start="91:5" pos:end="91:10">av_log</name><argument_list pos:start="91:11" pos:end="91:69">(<argument pos:start="91:12" pos:end="91:16"><expr pos:start="91:12" pos:end="91:16"><name pos:start="91:12" pos:end="91:16">avctx</name></expr></argument>, <argument pos:start="91:19" pos:end="91:32"><expr pos:start="91:19" pos:end="91:32"><name pos:start="91:19" pos:end="91:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="91:35" pos:end="91:68"><expr pos:start="91:35" pos:end="91:68"><literal type="string" pos:start="91:35" pos:end="91:68">"Nvenc initialized successfully\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">1</literal></expr>;</return>



<label pos:start="99:1" pos:end="99:6"><name pos:start="99:1" pos:end="99:5">error</name>:</label>

    <if_stmt pos:start="101:5" pos:end="103:40"><if pos:start="101:5" pos:end="103:40">if <condition pos:start="101:8" pos:end="101:25">(<expr pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:13">dl_fn</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:24">nvenc_lib</name></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:40"><block_content pos:start="103:9" pos:end="103:40">

        <expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:21">DL_CLOSE_FUNC</name><argument_list pos:start="103:22" pos:end="103:39">(<argument pos:start="103:23" pos:end="103:38"><expr pos:start="103:23" pos:end="103:38"><name pos:start="103:23" pos:end="103:38"><name pos:start="103:23" pos:end="103:27">dl_fn</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:38">nvenc_lib</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:9">dl_fn</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:20">nvenc_lib</name></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:27">NULL</name></expr>;</expr_stmt>



    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
