<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17683.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">qcow2_get_refcount</name><parameter_list pos:start="1:23" pos:end="3:42">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:66"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:66">cluster_index</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:31">uint64_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:41">refcount</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:33">refcount_table_index</name></decl>, <decl pos:start="9:36" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:36" pos:end="9:46">block_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:33">refcount_block_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:24">refcount_block</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:24">refcount_table_index</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:40">cluster_index</name> <operator pos:start="19:42" pos:end="19:43">&gt;&gt;</operator> <name pos:start="19:45" pos:end="19:66"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:66">refcount_block_bits</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:55">(<expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:28">refcount_table_index</name> <operator pos:start="21:30" pos:end="21:31">&gt;=</operator> <name pos:start="21:33" pos:end="21:54"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:54">refcount_table_size</name></name></expr>)</condition> <block pos:start="21:57" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:17">

        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:17">refcount</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:67"><expr pos:start="29:5" pos:end="31:66"><name pos:start="29:5" pos:end="29:25">refcount_block_offset</name> <operator pos:start="29:27" pos:end="29:27">=</operator>

        <name pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:25">refcount_table</name><index pos:start="31:26" pos:end="31:47">[<expr pos:start="31:27" pos:end="31:46"><name pos:start="31:27" pos:end="31:46">refcount_table_index</name></expr>]</index></name> <operator pos:start="31:49" pos:end="31:49">&amp;</operator> <name pos:start="31:51" pos:end="31:66">REFT_OFFSET_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:30">refcount_block_offset</name></expr>)</condition> <block pos:start="33:33" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:17">refcount</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:54">(<expr pos:start="43:9" pos:end="43:53"><call pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:27">offset_into_cluster</name><argument_list pos:start="43:28" pos:end="43:53">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>, <argument pos:start="43:32" pos:end="43:52"><expr pos:start="43:32" pos:end="43:52"><name pos:start="43:32" pos:end="43:52">refcount_block_offset</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:56" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:20">

        <expr_stmt pos:start="45:9" pos:end="49:77"><expr pos:start="45:9" pos:end="49:76"><call pos:start="45:9" pos:end="49:76"><name pos:start="45:9" pos:end="45:31">qcow2_signal_corruption</name><argument_list pos:start="45:32" pos:end="49:76">(<argument pos:start="45:33" pos:end="45:34"><expr pos:start="45:33" pos:end="45:34"><name pos:start="45:33" pos:end="45:34">bs</name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">true</name></expr></argument>, <argument pos:start="45:43" pos:end="45:44"><expr pos:start="45:43" pos:end="45:44"><operator pos:start="45:43" pos:end="45:43">-</operator><literal type="number" pos:start="45:44" pos:end="45:44">1</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:48"><expr pos:start="45:47" pos:end="45:48"><operator pos:start="45:47" pos:end="45:47">-</operator><literal type="number" pos:start="45:48" pos:end="45:48">1</literal></expr></argument>, <argument pos:start="45:51" pos:end="47:75"><expr pos:start="45:51" pos:end="47:75"><literal type="string" pos:start="45:51" pos:end="45:70">"Refblock offset %#"</literal> <name pos:start="45:72" pos:end="45:77">PRIx64</name>

                                <literal type="string" pos:start="47:33" pos:end="47:64">" unaligned (reftable index: %#"</literal> <name pos:start="47:66" pos:end="47:71">PRIx64</name> <literal type="string" pos:start="47:73" pos:end="47:75">")"</literal></expr></argument>,

                                <argument pos:start="49:33" pos:end="49:53"><expr pos:start="49:33" pos:end="49:53"><name pos:start="49:33" pos:end="49:53">refcount_block_offset</name></expr></argument>, <argument pos:start="49:56" pos:end="49:75"><expr pos:start="49:56" pos:end="49:75"><name pos:start="49:56" pos:end="49:75">refcount_table_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:20">return <expr pos:start="51:16" pos:end="51:19"><operator pos:start="51:16" pos:end="51:16">-</operator><name pos:start="51:17" pos:end="51:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:43"><expr pos:start="57:5" pos:end="59:42"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="59:42"><name pos:start="57:11" pos:end="57:25">qcow2_cache_get</name><argument_list pos:start="57:26" pos:end="59:42">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">bs</name></expr></argument>, <argument pos:start="57:31" pos:end="57:53"><expr pos:start="57:31" pos:end="57:53"><name pos:start="57:31" pos:end="57:53"><name pos:start="57:31" pos:end="57:31">s</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:53">refcount_block_cache</name></name></expr></argument>, <argument pos:start="57:56" pos:end="57:76"><expr pos:start="57:56" pos:end="57:76"><name pos:start="57:56" pos:end="57:76">refcount_block_offset</name></expr></argument>,

                          <argument pos:start="59:27" pos:end="59:41"><expr pos:start="59:27" pos:end="59:41"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:41">refcount_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">&lt;</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>)</condition> <block pos:start="61:18" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:63"><expr pos:start="69:5" pos:end="69:62"><name pos:start="69:5" pos:end="69:15">block_index</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:31">cluster_index</name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <operator pos:start="69:35" pos:end="69:35">(</operator><name pos:start="69:36" pos:end="69:57"><name pos:start="69:36" pos:end="69:36">s</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:57">refcount_block_size</name></name> <operator pos:start="69:59" pos:end="69:59">-</operator> <literal type="number" pos:start="69:61" pos:end="69:61">1</literal><operator pos:start="69:62" pos:end="69:62">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:61"><expr pos:start="71:5" pos:end="71:60"><operator pos:start="71:5" pos:end="71:5">*</operator><name pos:start="71:6" pos:end="71:13">refcount</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:60"><name pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:31">get_refcount</name></name><argument_list pos:start="71:32" pos:end="71:60">(<argument pos:start="71:33" pos:end="71:46"><expr pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:46">refcount_block</name></expr></argument>, <argument pos:start="71:49" pos:end="71:59"><expr pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:59">block_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:72"><expr pos:start="75:5" pos:end="75:71"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:71"><name pos:start="75:11" pos:end="75:25">qcow2_cache_put</name><argument_list pos:start="75:26" pos:end="75:71">(<argument pos:start="75:27" pos:end="75:28"><expr pos:start="75:27" pos:end="75:28"><name pos:start="75:27" pos:end="75:28">bs</name></expr></argument>, <argument pos:start="75:31" pos:end="75:53"><expr pos:start="75:31" pos:end="75:53"><name pos:start="75:31" pos:end="75:53"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:53">refcount_block_cache</name></name></expr></argument>, <argument pos:start="75:56" pos:end="75:70"><expr pos:start="75:56" pos:end="75:70"><operator pos:start="75:56" pos:end="75:56">&amp;</operator><name pos:start="75:57" pos:end="75:70">refcount_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition> <block pos:start="77:18" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
