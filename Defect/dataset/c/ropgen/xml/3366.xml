<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3366.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">parse_chap</name><parameter_list pos:start="1:23" pos:end="3:36">(<parameter pos:start="1:24" pos:end="1:50"><decl pos:start="1:24" pos:end="1:50"><type pos:start="1:24" pos:end="1:50"><name pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:43">iscsi_context</name></name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">iscsi</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:70">target</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:28">Error</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier><modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:19">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">QemuOptsList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">user</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">password</name> <init pos:start="13:26" pos:end="13:31">= <expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:24">secretid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:16">secret</name> <init pos:start="17:18" pos:end="17:23">= <expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:8">list</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:34"><name pos:start="21:12" pos:end="21:25">qemu_find_opts</name><argument_list pos:start="21:26" pos:end="21:34">(<argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><literal type="string" pos:start="21:27" pos:end="21:33">"iscsi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">list</name></expr>)</condition> <block pos:start="23:16" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:8">opts</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:39"><name pos:start="31:12" pos:end="31:25">qemu_opts_find</name><argument_list pos:start="31:26" pos:end="31:39">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">list</name></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:12">opts</name> <operator pos:start="33:14" pos:end="33:15">==</operator> <name pos:start="33:17" pos:end="33:20">NULL</name></expr>)</condition> <block pos:start="33:23" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:12">opts</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:27">QTAILQ_FIRST</name><argument_list pos:start="35:28" pos:end="35:40">(<argument pos:start="35:29" pos:end="35:39"><expr pos:start="35:29" pos:end="35:39"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:39"><name pos:start="35:30" pos:end="35:33">list</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:39">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:18">(<expr pos:start="37:13" pos:end="37:17"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:17">opts</name></expr>)</condition> <block pos:start="37:20" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:19">

            <return pos:start="39:13" pos:end="39:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:8">user</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:37"><name pos:start="47:12" pos:end="47:23">qemu_opt_get</name><argument_list pos:start="47:24" pos:end="47:37">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">opts</name></expr></argument>, <argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><literal type="string" pos:start="47:31" pos:end="47:36">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:13">user</name></expr>)</condition> <block pos:start="49:16" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:15">

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:12">secretid</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:52"><name pos:start="57:16" pos:end="57:27">qemu_opt_get</name><argument_list pos:start="57:28" pos:end="57:52">(<argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">opts</name></expr></argument>, <argument pos:start="57:35" pos:end="57:51"><expr pos:start="57:35" pos:end="57:51"><literal type="string" pos:start="57:35" pos:end="57:51">"password-secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:12">password</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:45"><name pos:start="59:16" pos:end="59:27">qemu_opt_get</name><argument_list pos:start="59:28" pos:end="59:45">(<argument pos:start="59:29" pos:end="59:32"><expr pos:start="59:29" pos:end="59:32"><name pos:start="59:29" pos:end="59:32">opts</name></expr></argument>, <argument pos:start="59:35" pos:end="59:44"><expr pos:start="59:35" pos:end="59:44"><literal type="string" pos:start="59:35" pos:end="59:44">"password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:16">secretid</name> <operator pos:start="61:18" pos:end="61:19">&amp;&amp;</operator> <name pos:start="61:21" pos:end="61:28">password</name></expr>)</condition> <block pos:start="61:31" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:15">

        <expr_stmt pos:start="63:9" pos:end="65:41"><expr pos:start="63:9" pos:end="65:40"><call pos:start="63:9" pos:end="65:40"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="65:40">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">errp</name></expr></argument>, <argument pos:start="63:26" pos:end="65:39"><expr pos:start="63:26" pos:end="65:39"><literal type="string" pos:start="63:26" pos:end="63:75">"'password' and 'password-secret' properties are "</literal>

                   <literal type="string" pos:start="65:20" pos:end="65:39">"mutually exclusive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="89:5"><if pos:start="71:5" pos:end="83:5">if <condition pos:start="71:8" pos:end="71:17">(<expr pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">secretid</name></expr>)</condition> <block pos:start="71:19" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:26">

        <expr_stmt pos:start="73:9" pos:end="73:63"><expr pos:start="73:9" pos:end="73:62"><name pos:start="73:9" pos:end="73:14">secret</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:62"><name pos:start="73:18" pos:end="73:46">qcrypto_secret_lookup_as_utf8</name><argument_list pos:start="73:47" pos:end="73:62">(<argument pos:start="73:48" pos:end="73:55"><expr pos:start="73:48" pos:end="73:55"><name pos:start="73:48" pos:end="73:55">secretid</name></expr></argument>, <argument pos:start="73:58" pos:end="73:61"><expr pos:start="73:58" pos:end="73:61"><name pos:start="73:58" pos:end="73:61">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:19">secret</name></expr>)</condition> <block pos:start="75:22" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:19">

            <return pos:start="77:13" pos:end="77:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:16">password</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:25">secret</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="89:5">else if <condition pos:start="83:15" pos:end="83:25">(<expr pos:start="83:16" pos:end="83:24"><operator pos:start="83:16" pos:end="83:16">!</operator><name pos:start="83:17" pos:end="83:24">password</name></expr>)</condition> <block pos:start="83:27" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:15">

        <expr_stmt pos:start="85:9" pos:end="85:78"><expr pos:start="85:9" pos:end="85:77"><call pos:start="85:9" pos:end="85:77"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="85:77">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="85:76"><expr pos:start="85:26" pos:end="85:76"><literal type="string" pos:start="85:26" pos:end="85:76">"CHAP username specified but no password was given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:64">(<expr pos:start="93:9" pos:end="93:63"><call pos:start="93:9" pos:end="93:63"><name pos:start="93:9" pos:end="93:40">iscsi_set_initiator_username_pwd</name><argument_list pos:start="93:41" pos:end="93:63">(<argument pos:start="93:42" pos:end="93:46"><expr pos:start="93:42" pos:end="93:46"><name pos:start="93:42" pos:end="93:46">iscsi</name></expr></argument>, <argument pos:start="93:49" pos:end="93:52"><expr pos:start="93:49" pos:end="93:52"><name pos:start="93:49" pos:end="93:52">user</name></expr></argument>, <argument pos:start="93:55" pos:end="93:62"><expr pos:start="93:55" pos:end="93:62"><name pos:start="93:55" pos:end="93:62">password</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:66" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:74">

        <expr_stmt pos:start="95:9" pos:end="95:74"><expr pos:start="95:9" pos:end="95:73"><call pos:start="95:9" pos:end="95:73"><name pos:start="95:9" pos:end="95:18">error_setg</name><argument_list pos:start="95:19" pos:end="95:73">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">errp</name></expr></argument>, <argument pos:start="95:26" pos:end="95:72"><expr pos:start="95:26" pos:end="95:72"><literal type="string" pos:start="95:26" pos:end="95:72">"Failed to set initiator username and password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:19"><expr pos:start="101:5" pos:end="101:18"><call pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:18">(<argument pos:start="101:12" pos:end="101:17"><expr pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:17">secret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
