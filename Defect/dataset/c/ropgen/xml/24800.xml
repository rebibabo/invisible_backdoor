<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24800.c" pos:tabs="8"><function pos:start="1:1" pos:end="250:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_hevc_decode_short_term_rps</name><parameter_list pos:start="1:34" pos:end="3:93">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:47">GetBitContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">gb</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:74"><decl pos:start="1:54" pos:end="1:74"><type pos:start="1:54" pos:end="1:74"><name pos:start="1:54" pos:end="1:67">AVCodecContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">avctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:51"><decl pos:start="3:35" pos:end="3:51"><type pos:start="3:35" pos:end="3:51"><name pos:start="3:35" pos:end="3:46">ShortTermRPS</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:51">rps</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:71"><decl pos:start="3:54" pos:end="3:71"><type pos:start="3:54" pos:end="3:71"><specifier pos:start="3:54" pos:end="3:58">const</specifier> <name pos:start="3:60" pos:end="3:66">HEVCSPS</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:71">sps</name></decl></parameter>, <parameter pos:start="3:74" pos:end="3:92"><decl pos:start="3:74" pos:end="3:92"><type pos:start="3:74" pos:end="3:92"><name pos:start="3:74" pos:end="3:76">int</name></type> <name pos:start="3:78" pos:end="3:92">is_slice_header</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="250:13">{<block_content pos:start="7:5" pos:end="250:13">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:23">rps_predict</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">delta_poc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">k0</name> <init pos:start="11:12" pos:end="11:14">= <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">k1</name> <init pos:start="13:12" pos:end="13:14">= <expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">k</name>  <init pos:start="15:12" pos:end="15:14">= <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:36"><if pos:start="21:5" pos:end="23:36">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:11">rps</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <name pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:18">sps</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:26">st_rps</name></name> <operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator> <name pos:start="21:31" pos:end="21:44"><name pos:start="21:31" pos:end="21:33">sps</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:44">nb_st_rps</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:36"><block_content pos:start="23:9" pos:end="23:36">

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:19">rps_predict</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:35"><name pos:start="23:23" pos:end="23:31">get_bits1</name><argument_list pos:start="23:32" pos:end="23:35">(<argument pos:start="23:33" pos:end="23:34"><expr pos:start="23:33" pos:end="23:34"><name pos:start="23:33" pos:end="23:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="250:13"><if pos:start="27:5" pos:end="250:13">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:19">rps_predict</name></expr>)</condition> <block pos:start="27:22" pos:end="250:13">{<block_content pos:start="29:9" pos:end="250:13">

        <decl_stmt pos:start="29:9" pos:end="29:37"><decl pos:start="29:9" pos:end="29:36"><type pos:start="29:9" pos:end="29:28"><specifier pos:start="29:9" pos:end="29:13">const</specifier> <name pos:start="29:15" pos:end="29:26">ShortTermRPS</name> <modifier pos:start="29:28" pos:end="29:28">*</modifier></type><name pos:start="29:29" pos:end="29:36">rps_ridx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:22"><decl pos:start="31:9" pos:end="31:21"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:21">delta_rps</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:31"><decl pos:start="33:9" pos:end="33:30"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">unsigned</name></type> <name pos:start="33:18" pos:end="33:30">abs_delta_rps</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:35"><decl pos:start="35:9" pos:end="35:34"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">uint8_t</name></type> <name pos:start="35:17" pos:end="35:30">use_delta_flag</name> <init pos:start="35:32" pos:end="35:34">= <expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:31"><decl pos:start="37:9" pos:end="37:30"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">uint8_t</name></type> <name pos:start="37:17" pos:end="37:30">delta_rps_sign</name></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="60:59"><if pos:start="41:9" pos:end="58:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:27">is_slice_header</name></expr>)</condition> <block pos:start="41:30" pos:end="58:9">{<block_content pos:start="43:13" pos:end="56:67">

            <decl_stmt pos:start="43:13" pos:end="43:64"><decl pos:start="43:13" pos:end="43:63"><type pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:20">unsigned</name> <name pos:start="43:22" pos:end="43:24">int</name></type> <name pos:start="43:26" pos:end="43:34">delta_idx</name> <init pos:start="43:36" pos:end="43:63">= <expr pos:start="43:38" pos:end="43:63"><call pos:start="43:38" pos:end="43:59"><name pos:start="43:38" pos:end="43:55">get_ue_golomb_long</name><argument_list pos:start="43:56" pos:end="43:59">(<argument pos:start="43:57" pos:end="43:58"><expr pos:start="43:57" pos:end="43:58"><name pos:start="43:57" pos:end="43:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="43:61" pos:end="43:61">+</operator> <literal type="number" pos:start="43:63" pos:end="43:63">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="45:13" pos:end="50:50"><if pos:start="45:13" pos:end="50:50">if <condition pos:start="45:16" pos:end="45:43">(<expr pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:25">delta_idx</name> <operator pos:start="45:27" pos:end="45:27">&gt;</operator> <name pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:31">sps</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:42">nb_st_rps</name></name></expr>)</condition> <block pos:start="45:45" pos:end="50:49">{<block_content pos:start="48:24" pos:end="50:49">


                       <expr_stmt pos:start="48:24" pos:end="50:48"><expr pos:start="48:24" pos:end="48:83"><literal type="string" pos:start="48:24" pos:end="48:83">"Invalid value of delta_idx in slice header RPS: %d &gt; %d.\n"</literal></expr><operator pos:start="48:84" pos:end="48:84">,</operator>

                       <expr pos:start="50:24" pos:end="50:32"><name pos:start="50:24" pos:end="50:32">delta_idx</name></expr><operator pos:start="50:33" pos:end="50:33">,</operator> <expr pos:start="50:35" pos:end="50:48"><name pos:start="50:35" pos:end="50:48"><name pos:start="50:35" pos:end="50:37">sps</name><operator pos:start="50:38" pos:end="50:39">-&gt;</operator><name pos:start="50:40" pos:end="50:48">nb_st_rps</name></name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="50:50" pos:end="50:50">;</empty_stmt></if></if_stmt>



            <expr_stmt pos:start="54:13" pos:end="54:64"><expr pos:start="54:13" pos:end="54:63"><name pos:start="54:13" pos:end="54:20">rps_ridx</name> <operator pos:start="54:22" pos:end="54:22">=</operator> <operator pos:start="54:24" pos:end="54:24">&amp;</operator><name pos:start="54:25" pos:end="54:63"><name pos:start="54:25" pos:end="54:27">sps</name><operator pos:start="54:28" pos:end="54:29">-&gt;</operator><name pos:start="54:30" pos:end="54:35">st_rps</name><index pos:start="54:36" pos:end="54:63">[<expr pos:start="54:37" pos:end="54:62"><name pos:start="54:37" pos:end="54:50"><name pos:start="54:37" pos:end="54:39">sps</name><operator pos:start="54:40" pos:end="54:41">-&gt;</operator><name pos:start="54:42" pos:end="54:50">nb_st_rps</name></name> <operator pos:start="54:52" pos:end="54:52">-</operator> <name pos:start="54:54" pos:end="54:62">delta_idx</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="56:13" pos:end="56:67"><expr pos:start="56:13" pos:end="56:66"><name pos:start="56:13" pos:end="56:39"><name pos:start="56:13" pos:end="56:15">rps</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:39">rps_idx_num_delta_pocs</name></name> <operator pos:start="56:41" pos:end="56:41">=</operator> <name pos:start="56:43" pos:end="56:66"><name pos:start="56:43" pos:end="56:50">rps_ridx</name><operator pos:start="56:51" pos:end="56:52">-&gt;</operator><name pos:start="56:53" pos:end="56:66">num_delta_pocs</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="58:11" pos:end="60:59">else<block type="pseudo" pos:start="60:13" pos:end="60:59"><block_content pos:start="60:13" pos:end="60:59">

            <expr_stmt pos:start="60:13" pos:end="60:59"><expr pos:start="60:13" pos:end="60:58"><name pos:start="60:13" pos:end="60:20">rps_ridx</name> <operator pos:start="60:22" pos:end="60:22">=</operator> <operator pos:start="60:24" pos:end="60:24">&amp;</operator><name pos:start="60:25" pos:end="60:58"><name pos:start="60:25" pos:end="60:27">sps</name><operator pos:start="60:28" pos:end="60:29">-&gt;</operator><name pos:start="60:30" pos:end="60:35">st_rps</name><index pos:start="60:36" pos:end="60:58">[<expr pos:start="60:37" pos:end="60:57"><name pos:start="60:37" pos:end="60:39">rps</name> <operator pos:start="60:41" pos:end="60:41">-</operator> <name pos:start="60:43" pos:end="60:53"><name pos:start="60:43" pos:end="60:45">sps</name><operator pos:start="60:46" pos:end="60:47">-&gt;</operator><name pos:start="60:48" pos:end="60:53">st_rps</name></name> <operator pos:start="60:55" pos:end="60:55">-</operator> <literal type="number" pos:start="60:57" pos:end="60:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="64:9" pos:end="64:39"><expr pos:start="64:9" pos:end="64:38"><name pos:start="64:9" pos:end="64:22">delta_rps_sign</name> <operator pos:start="64:24" pos:end="64:24">=</operator> <call pos:start="64:26" pos:end="64:38"><name pos:start="64:26" pos:end="64:34">get_bits1</name><argument_list pos:start="64:35" pos:end="64:38">(<argument pos:start="64:36" pos:end="64:37"><expr pos:start="64:36" pos:end="64:37"><name pos:start="64:36" pos:end="64:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:52"><expr pos:start="66:9" pos:end="66:51"><name pos:start="66:9" pos:end="66:21">abs_delta_rps</name>  <operator pos:start="66:24" pos:end="66:24">=</operator> <call pos:start="66:26" pos:end="66:47"><name pos:start="66:26" pos:end="66:43">get_ue_golomb_long</name><argument_list pos:start="66:44" pos:end="66:47">(<argument pos:start="66:45" pos:end="66:46"><expr pos:start="66:45" pos:end="66:46"><name pos:start="66:45" pos:end="66:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="66:49" pos:end="66:49">+</operator> <literal type="number" pos:start="66:51" pos:end="66:51">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="68:9" pos:end="73:34"><if pos:start="68:9" pos:end="73:34">if <condition pos:start="68:12" pos:end="68:55">(<expr pos:start="68:13" pos:end="68:54"><name pos:start="68:13" pos:end="68:48"><name pos:start="68:13" pos:end="68:25">abs_delta_rps</name> <argument_list type="generic" pos:start="68:27" pos:end="68:48">&lt; <argument pos:start="68:29" pos:end="68:46"><expr pos:start="68:29" pos:end="68:46"><literal type="number" pos:start="68:29" pos:end="68:29">1</literal> <operator pos:start="68:31" pos:end="68:32">||</operator> <name pos:start="68:34" pos:end="68:46">abs_delta_rps</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="68:50" pos:end="68:54">32768</literal></expr>)</condition> <block pos:start="68:57" pos:end="73:33">{<block_content pos:start="71:20" pos:end="73:33">


                   <expr_stmt pos:start="71:20" pos:end="73:32"><expr pos:start="71:20" pos:end="71:57"><literal type="string" pos:start="71:20" pos:end="71:57">"Invalid value of abs_delta_rps: %d\n"</literal></expr><operator pos:start="71:58" pos:end="71:58">,</operator>

                   <expr pos:start="73:20" pos:end="73:32"><name pos:start="73:20" pos:end="73:32">abs_delta_rps</name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="73:34" pos:end="73:34">;</empty_stmt></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:69"><expr pos:start="77:9" pos:end="77:68"><name pos:start="77:9" pos:end="77:17">delta_rps</name>      <operator pos:start="77:24" pos:end="77:24">=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><literal type="number" pos:start="77:27" pos:end="77:29">1</literal> <operator pos:start="77:29" pos:end="77:29">-</operator> <operator pos:start="77:31" pos:end="77:31">(</operator><name pos:start="77:32" pos:end="77:45">delta_rps_sign</name> <operator pos:start="77:47" pos:end="77:48">&lt;&lt;</operator> <literal type="number" pos:start="77:50" pos:end="77:50">1</literal><operator pos:start="77:51" pos:end="77:51">)</operator><operator pos:start="77:52" pos:end="77:52">)</operator> <operator pos:start="77:54" pos:end="77:54">*</operator> <name pos:start="77:56" pos:end="77:68">abs_delta_rps</name></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="250:13">for <control pos:start="79:13" pos:end="79:55">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:50"><expr pos:start="79:21" pos:end="79:49"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:24">&lt;=</operator> <name pos:start="79:26" pos:end="79:49"><name pos:start="79:26" pos:end="79:33">rps_ridx</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:49">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="79:52" pos:end="79:54"><expr pos:start="79:52" pos:end="79:54"><name pos:start="79:52" pos:end="79:52">i</name><operator pos:start="79:53" pos:end="79:54">++</operator></expr></incr>)</control> <block pos:start="79:57" pos:end="250:13">{<block_content pos:start="81:13" pos:end="250:13">

            <decl_stmt pos:start="81:13" pos:end="81:52"><decl pos:start="81:13" pos:end="81:51"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:20">used</name> <init pos:start="81:22" pos:end="81:51">= <expr pos:start="81:24" pos:end="81:51"><name pos:start="81:24" pos:end="81:35"><name pos:start="81:24" pos:end="81:26">rps</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:32">used</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">k</name></expr>]</index></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <call pos:start="81:39" pos:end="81:51"><name pos:start="81:39" pos:end="81:47">get_bits1</name><argument_list pos:start="81:48" pos:end="81:51">(<argument pos:start="81:49" pos:end="81:50"><expr pos:start="81:49" pos:end="81:50"><name pos:start="81:49" pos:end="81:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="85:13" pos:end="87:47"><if pos:start="85:13" pos:end="87:47">if <condition pos:start="85:16" pos:end="85:22">(<expr pos:start="85:17" pos:end="85:21"><operator pos:start="85:17" pos:end="85:17">!</operator><name pos:start="85:18" pos:end="85:21">used</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:47"><block_content pos:start="87:17" pos:end="87:47">

                <expr_stmt pos:start="87:17" pos:end="87:47"><expr pos:start="87:17" pos:end="87:46"><name pos:start="87:17" pos:end="87:30">use_delta_flag</name> <operator pos:start="87:32" pos:end="87:32">=</operator> <call pos:start="87:34" pos:end="87:46"><name pos:start="87:34" pos:end="87:42">get_bits1</name><argument_list pos:start="87:43" pos:end="87:46">(<argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><name pos:start="87:44" pos:end="87:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="91:13" pos:end="250:13"><if pos:start="91:13" pos:end="250:13">if <condition pos:start="91:16" pos:end="91:39">(<expr pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:20">used</name> <operator pos:start="91:22" pos:end="91:23">||</operator> <name pos:start="91:25" pos:end="91:38">use_delta_flag</name></expr>)</condition> <block pos:start="91:41" pos:end="250:13">{<block_content pos:start="93:17" pos:end="250:13">

                <if_stmt pos:start="93:17" pos:end="99:42"><if pos:start="93:17" pos:end="95:67">if <condition pos:start="93:20" pos:end="93:49">(<expr pos:start="93:21" pos:end="93:48"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:48"><name pos:start="93:25" pos:end="93:32">rps_ridx</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:48">num_delta_pocs</name></name></expr>)</condition><block type="pseudo" pos:start="95:21" pos:end="95:67"><block_content pos:start="95:21" pos:end="95:67">

                    <expr_stmt pos:start="95:21" pos:end="95:67"><expr pos:start="95:21" pos:end="95:66"><name pos:start="95:21" pos:end="95:29">delta_poc</name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:41">delta_rps</name> <operator pos:start="95:43" pos:end="95:43">+</operator> <name pos:start="95:45" pos:end="95:66"><name pos:start="95:45" pos:end="95:52">rps_ridx</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:63">delta_poc</name><index pos:start="95:64" pos:end="95:66">[<expr pos:start="95:65" pos:end="95:65"><name pos:start="95:65" pos:end="95:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="97:17" pos:end="99:42">else<block type="pseudo" pos:start="99:21" pos:end="99:42"><block_content pos:start="99:21" pos:end="99:42">

                    <expr_stmt pos:start="99:21" pos:end="99:42"><expr pos:start="99:21" pos:end="99:41"><name pos:start="99:21" pos:end="99:29">delta_poc</name> <operator pos:start="99:31" pos:end="99:31">=</operator> <name pos:start="99:33" pos:end="99:41">delta_rps</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:46"><expr pos:start="101:17" pos:end="101:45"><name pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:19">rps</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:30">delta_poc</name><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">k</name></expr>]</index></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <name pos:start="101:37" pos:end="101:45">delta_poc</name></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="109:25"><if pos:start="103:17" pos:end="105:25">if <condition pos:start="103:20" pos:end="103:34">(<expr pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:29">delta_poc</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">0</literal></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:25"><block_content pos:start="105:21" pos:end="105:25">

                    <expr_stmt pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:24"><name pos:start="105:21" pos:end="105:22">k0</name><operator pos:start="105:23" pos:end="105:24">++</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="107:17" pos:end="109:25">else<block type="pseudo" pos:start="109:21" pos:end="109:25"><block_content pos:start="109:21" pos:end="109:25">

                    <expr_stmt pos:start="109:21" pos:end="109:25"><expr pos:start="109:21" pos:end="109:24"><name pos:start="109:21" pos:end="109:22">k1</name><operator pos:start="109:23" pos:end="109:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:20"><expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:17">k</name><operator pos:start="111:18" pos:end="111:19">++</operator></expr>;</expr_stmt>





        <if_stmt pos:start="117:9" pos:end="120:54"><if pos:start="117:9" pos:end="120:54">if <condition pos:start="117:12" pos:end="117:43">(<expr pos:start="117:13" pos:end="117:42"><name pos:start="117:13" pos:end="117:13">k</name> <operator pos:start="117:15" pos:end="117:16">&gt;=</operator> <call pos:start="117:18" pos:end="117:42"><name pos:start="117:18" pos:end="117:31">FF_ARRAY_ELEMS</name><argument_list pos:start="117:32" pos:end="117:42">(<argument pos:start="117:33" pos:end="117:41"><expr pos:start="117:33" pos:end="117:41"><name pos:start="117:33" pos:end="117:41"><name pos:start="117:33" pos:end="117:35">rps</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:41">used</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:45" pos:end="120:53">{<block_content pos:start="120:20" pos:end="120:53">


                   <expr_stmt pos:start="120:20" pos:end="120:52"><expr pos:start="120:20" pos:end="120:49"><literal type="string" pos:start="120:20" pos:end="120:49">"Invalid num_delta_pocs: %d\n"</literal></expr><operator pos:start="120:50" pos:end="120:50">,</operator> <expr pos:start="120:52" pos:end="120:52"><name pos:start="120:52" pos:end="120:52">k</name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="120:54" pos:end="120:54">;</empty_stmt></if></if_stmt>





        <expr_stmt pos:start="126:9" pos:end="126:35"><expr pos:start="126:9" pos:end="126:34"><name pos:start="126:9" pos:end="126:27"><name pos:start="126:9" pos:end="126:11">rps</name><operator pos:start="126:12" pos:end="126:13">-&gt;</operator><name pos:start="126:14" pos:end="126:27">num_delta_pocs</name></name>    <operator pos:start="126:32" pos:end="126:32">=</operator> <name pos:start="126:34" pos:end="126:34">k</name></expr>;</expr_stmt>

        <expr_stmt pos:start="128:9" pos:end="128:36"><expr pos:start="128:9" pos:end="128:35"><name pos:start="128:9" pos:end="128:30"><name pos:start="128:9" pos:end="128:11">rps</name><operator pos:start="128:12" pos:end="128:13">-&gt;</operator><name pos:start="128:14" pos:end="128:30">num_negative_pics</name></name> <operator pos:start="128:32" pos:end="128:32">=</operator> <name pos:start="128:34" pos:end="128:35">k0</name></expr>;</expr_stmt>

        <comment type="line" pos:start="130:9" pos:end="130:52">// sort in increasing order (smallest first)</comment>

        <if_stmt pos:start="132:9" pos:end="250:13"><if pos:start="132:9" pos:end="250:13">if <condition pos:start="132:12" pos:end="132:37">(<expr pos:start="132:13" pos:end="132:36"><name pos:start="132:13" pos:end="132:31"><name pos:start="132:13" pos:end="132:15">rps</name><operator pos:start="132:16" pos:end="132:17">-&gt;</operator><name pos:start="132:18" pos:end="132:31">num_delta_pocs</name></name> <operator pos:start="132:33" pos:end="132:34">!=</operator> <literal type="number" pos:start="132:36" pos:end="132:36">0</literal></expr>)</condition> <block pos:start="132:39" pos:end="250:13">{<block_content pos:start="134:13" pos:end="250:13">

            <decl_stmt pos:start="134:13" pos:end="134:26"><decl pos:start="134:13" pos:end="134:20"><type pos:start="134:13" pos:end="134:15"><name pos:start="134:13" pos:end="134:15">int</name></type> <name pos:start="134:17" pos:end="134:20">used</name></decl>, <decl pos:start="134:23" pos:end="134:25"><type ref="prev" pos:start="134:13" pos:end="134:15"/><name pos:start="134:23" pos:end="134:25">tmp</name></decl>;</decl_stmt>

            <for pos:start="136:13" pos:end="250:13">for <control pos:start="136:17" pos:end="136:53">(<init pos:start="136:18" pos:end="136:23"><expr pos:start="136:18" pos:end="136:22"><name pos:start="136:18" pos:end="136:18">i</name> <operator pos:start="136:20" pos:end="136:20">=</operator> <literal type="number" pos:start="136:22" pos:end="136:22">1</literal></expr>;</init> <condition pos:start="136:25" pos:end="136:48"><expr pos:start="136:25" pos:end="136:47"><name pos:start="136:25" pos:end="136:25">i</name> <operator pos:start="136:27" pos:end="136:27">&lt;</operator> <name pos:start="136:29" pos:end="136:47"><name pos:start="136:29" pos:end="136:31">rps</name><operator pos:start="136:32" pos:end="136:33">-&gt;</operator><name pos:start="136:34" pos:end="136:47">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="136:50" pos:end="136:52"><expr pos:start="136:50" pos:end="136:52"><name pos:start="136:50" pos:end="136:50">i</name><operator pos:start="136:51" pos:end="136:52">++</operator></expr></incr>)</control> <block pos:start="136:55" pos:end="250:13">{<block_content pos:start="138:17" pos:end="250:13">

                <expr_stmt pos:start="138:17" pos:end="138:46"><expr pos:start="138:17" pos:end="138:45"><name pos:start="138:17" pos:end="138:25">delta_poc</name> <operator pos:start="138:27" pos:end="138:27">=</operator> <name pos:start="138:29" pos:end="138:45"><name pos:start="138:29" pos:end="138:31">rps</name><operator pos:start="138:32" pos:end="138:33">-&gt;</operator><name pos:start="138:34" pos:end="138:42">delta_poc</name><index pos:start="138:43" pos:end="138:45">[<expr pos:start="138:44" pos:end="138:44"><name pos:start="138:44" pos:end="138:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="140:17" pos:end="140:41"><expr pos:start="140:17" pos:end="140:40"><name pos:start="140:17" pos:end="140:20">used</name>      <operator pos:start="140:27" pos:end="140:27">=</operator> <name pos:start="140:29" pos:end="140:40"><name pos:start="140:29" pos:end="140:31">rps</name><operator pos:start="140:32" pos:end="140:33">-&gt;</operator><name pos:start="140:34" pos:end="140:37">used</name><index pos:start="140:38" pos:end="140:40">[<expr pos:start="140:39" pos:end="140:39"><name pos:start="140:39" pos:end="140:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="142:17" pos:end="250:13">for <control pos:start="142:21" pos:end="142:44">(<init pos:start="142:22" pos:end="142:31"><expr pos:start="142:22" pos:end="142:30"><name pos:start="142:22" pos:end="142:22">k</name> <operator pos:start="142:24" pos:end="142:24">=</operator> <name pos:start="142:26" pos:end="142:26">i</name> <operator pos:start="142:28" pos:end="142:28">-</operator> <literal type="number" pos:start="142:30" pos:end="142:30">1</literal></expr>;</init> <condition pos:start="142:33" pos:end="142:39"><expr pos:start="142:33" pos:end="142:38"><name pos:start="142:33" pos:end="142:33">k</name> <operator pos:start="142:35" pos:end="142:36">&gt;=</operator> <literal type="number" pos:start="142:38" pos:end="142:38">0</literal></expr>;</condition> <incr pos:start="142:41" pos:end="142:43"><expr pos:start="142:41" pos:end="142:43"><name pos:start="142:41" pos:end="142:41">k</name><operator pos:start="142:42" pos:end="142:43">--</operator></expr></incr>)</control> <block pos:start="142:46" pos:end="250:13">{<block_content pos:start="144:21" pos:end="250:13">

                    <expr_stmt pos:start="144:21" pos:end="144:44"><expr pos:start="144:21" pos:end="144:43"><name pos:start="144:21" pos:end="144:23">tmp</name> <operator pos:start="144:25" pos:end="144:25">=</operator> <name pos:start="144:27" pos:end="144:43"><name pos:start="144:27" pos:end="144:29">rps</name><operator pos:start="144:30" pos:end="144:31">-&gt;</operator><name pos:start="144:32" pos:end="144:40">delta_poc</name><index pos:start="144:41" pos:end="144:43">[<expr pos:start="144:42" pos:end="144:42"><name pos:start="144:42" pos:end="144:42">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="146:21" pos:end="250:13"><if pos:start="146:21" pos:end="250:13">if <condition pos:start="146:24" pos:end="146:40">(<expr pos:start="146:25" pos:end="146:39"><name pos:start="146:25" pos:end="146:33">delta_poc</name> <operator pos:start="146:35" pos:end="146:35">&lt;</operator> <name pos:start="146:37" pos:end="146:39">tmp</name></expr>)</condition> <block pos:start="146:42" pos:end="250:13">{<block_content pos:start="148:25" pos:end="250:13">

                        <expr_stmt pos:start="148:25" pos:end="148:52"><expr pos:start="148:25" pos:end="148:51"><name pos:start="148:25" pos:end="148:45"><name pos:start="148:25" pos:end="148:27">rps</name><operator pos:start="148:28" pos:end="148:29">-&gt;</operator><name pos:start="148:30" pos:end="148:38">delta_poc</name><index pos:start="148:39" pos:end="148:45">[<expr pos:start="148:40" pos:end="148:44"><name pos:start="148:40" pos:end="148:40">k</name> <operator pos:start="148:42" pos:end="148:42">+</operator> <literal type="number" pos:start="148:44" pos:end="148:44">1</literal></expr>]</index></name> <operator pos:start="148:47" pos:end="148:47">=</operator> <name pos:start="148:49" pos:end="148:51">tmp</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="150:25" pos:end="150:61"><expr pos:start="150:25" pos:end="150:60"><name pos:start="150:25" pos:end="150:40"><name pos:start="150:25" pos:end="150:27">rps</name><operator pos:start="150:28" pos:end="150:29">-&gt;</operator><name pos:start="150:30" pos:end="150:33">used</name><index pos:start="150:34" pos:end="150:40">[<expr pos:start="150:35" pos:end="150:39"><name pos:start="150:35" pos:end="150:35">k</name> <operator pos:start="150:37" pos:end="150:37">+</operator> <literal type="number" pos:start="150:39" pos:end="150:39">1</literal></expr>]</index></name>      <operator pos:start="150:47" pos:end="150:47">=</operator> <name pos:start="150:49" pos:end="150:60"><name pos:start="150:49" pos:end="150:51">rps</name><operator pos:start="150:52" pos:end="150:53">-&gt;</operator><name pos:start="150:54" pos:end="150:57">used</name><index pos:start="150:58" pos:end="150:60">[<expr pos:start="150:59" pos:end="150:59"><name pos:start="150:59" pos:end="150:59">k</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="152:25" pos:end="152:58"><expr pos:start="152:25" pos:end="152:57"><name pos:start="152:25" pos:end="152:41"><name pos:start="152:25" pos:end="152:27">rps</name><operator pos:start="152:28" pos:end="152:29">-&gt;</operator><name pos:start="152:30" pos:end="152:38">delta_poc</name><index pos:start="152:39" pos:end="152:41">[<expr pos:start="152:40" pos:end="152:40"><name pos:start="152:40" pos:end="152:40">k</name></expr>]</index></name>     <operator pos:start="152:47" pos:end="152:47">=</operator> <name pos:start="152:49" pos:end="152:57">delta_poc</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="154:25" pos:end="154:53"><expr pos:start="154:25" pos:end="154:52"><name pos:start="154:25" pos:end="154:36"><name pos:start="154:25" pos:end="154:27">rps</name><operator pos:start="154:28" pos:end="154:29">-&gt;</operator><name pos:start="154:30" pos:end="154:33">used</name><index pos:start="154:34" pos:end="154:36">[<expr pos:start="154:35" pos:end="154:35"><name pos:start="154:35" pos:end="154:35">k</name></expr>]</index></name>          <operator pos:start="154:47" pos:end="154:47">=</operator> <name pos:start="154:49" pos:end="154:52">used</name></expr>;</expr_stmt>





        <if_stmt pos:start="160:9" pos:end="250:13"><if pos:start="160:9" pos:end="250:13">if <condition pos:start="160:12" pos:end="160:47">(<expr pos:start="160:13" pos:end="160:46"><operator pos:start="160:13" pos:end="160:13">(</operator><name pos:start="160:14" pos:end="160:35"><name pos:start="160:14" pos:end="160:16">rps</name><operator pos:start="160:17" pos:end="160:18">-&gt;</operator><name pos:start="160:19" pos:end="160:35">num_negative_pics</name></name> <operator pos:start="160:37" pos:end="160:38">&gt;&gt;</operator> <literal type="number" pos:start="160:40" pos:end="160:40">1</literal><operator pos:start="160:41" pos:end="160:41">)</operator> <operator pos:start="160:43" pos:end="160:44">!=</operator> <literal type="number" pos:start="160:46" pos:end="160:46">0</literal></expr>)</condition> <block pos:start="160:49" pos:end="250:13">{<block_content pos:start="162:13" pos:end="250:13">

            <decl_stmt pos:start="162:13" pos:end="162:21"><decl pos:start="162:13" pos:end="162:20"><type pos:start="162:13" pos:end="162:15"><name pos:start="162:13" pos:end="162:15">int</name></type> <name pos:start="162:17" pos:end="162:20">used</name></decl>;</decl_stmt>

            <expr_stmt pos:start="164:13" pos:end="164:43"><expr pos:start="164:13" pos:end="164:42"><name pos:start="164:13" pos:end="164:13">k</name> <operator pos:start="164:15" pos:end="164:15">=</operator> <name pos:start="164:17" pos:end="164:38"><name pos:start="164:17" pos:end="164:19">rps</name><operator pos:start="164:20" pos:end="164:21">-&gt;</operator><name pos:start="164:22" pos:end="164:38">num_negative_pics</name></name> <operator pos:start="164:40" pos:end="164:40">-</operator> <literal type="number" pos:start="164:42" pos:end="164:42">1</literal></expr>;</expr_stmt>

            <comment type="line" pos:start="166:13" pos:end="166:56">// flip the negative values to largest first</comment>

            <for pos:start="168:13" pos:end="186:5">for <control pos:start="168:17" pos:end="168:61">(<init pos:start="168:18" pos:end="168:23"><expr pos:start="168:18" pos:end="168:22"><name pos:start="168:18" pos:end="168:18">i</name> <operator pos:start="168:20" pos:end="168:20">=</operator> <literal type="number" pos:start="168:22" pos:end="168:22">0</literal></expr>;</init> <condition pos:start="168:25" pos:end="168:56"><expr pos:start="168:25" pos:end="168:55"><name pos:start="168:25" pos:end="168:52"><name pos:start="168:25" pos:end="168:25">i</name> <argument_list type="generic" pos:start="168:27" pos:end="168:52">&lt; <argument pos:start="168:29" pos:end="168:50"><expr pos:start="168:29" pos:end="168:50"><name pos:start="168:29" pos:end="168:50"><name pos:start="168:29" pos:end="168:31">rps</name><operator pos:start="168:32" pos:end="168:33">-&gt;</operator><name pos:start="168:34" pos:end="168:50">num_negative_pics</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="168:53" pos:end="168:53">&gt;</operator> <literal type="number" pos:start="168:55" pos:end="168:55">1</literal></expr>;</condition> <incr pos:start="168:58" pos:end="168:60"><expr pos:start="168:58" pos:end="168:60"><name pos:start="168:58" pos:end="168:58">i</name><operator pos:start="168:59" pos:end="168:60">++</operator></expr></incr>)</control> <block pos:start="168:63" pos:end="186:5">{<block_content pos:start="170:17" pos:end="182:20">

                <expr_stmt pos:start="170:17" pos:end="170:54"><expr pos:start="170:17" pos:end="170:53"><name pos:start="170:17" pos:end="170:25">delta_poc</name>         <operator pos:start="170:35" pos:end="170:35">=</operator> <name pos:start="170:37" pos:end="170:53"><name pos:start="170:37" pos:end="170:39">rps</name><operator pos:start="170:40" pos:end="170:41">-&gt;</operator><name pos:start="170:42" pos:end="170:50">delta_poc</name><index pos:start="170:51" pos:end="170:53">[<expr pos:start="170:52" pos:end="170:52"><name pos:start="170:52" pos:end="170:52">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="172:17" pos:end="172:49"><expr pos:start="172:17" pos:end="172:48"><name pos:start="172:17" pos:end="172:20">used</name>              <operator pos:start="172:35" pos:end="172:35">=</operator> <name pos:start="172:37" pos:end="172:48"><name pos:start="172:37" pos:end="172:39">rps</name><operator pos:start="172:40" pos:end="172:41">-&gt;</operator><name pos:start="172:42" pos:end="172:45">used</name><index pos:start="172:46" pos:end="172:48">[<expr pos:start="172:47" pos:end="172:47"><name pos:start="172:47" pos:end="172:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="174:17" pos:end="174:54"><expr pos:start="174:17" pos:end="174:53"><name pos:start="174:17" pos:end="174:33"><name pos:start="174:17" pos:end="174:19">rps</name><operator pos:start="174:20" pos:end="174:21">-&gt;</operator><name pos:start="174:22" pos:end="174:30">delta_poc</name><index pos:start="174:31" pos:end="174:33">[<expr pos:start="174:32" pos:end="174:32"><name pos:start="174:32" pos:end="174:32">i</name></expr>]</index></name> <operator pos:start="174:35" pos:end="174:35">=</operator> <name pos:start="174:37" pos:end="174:53"><name pos:start="174:37" pos:end="174:39">rps</name><operator pos:start="174:40" pos:end="174:41">-&gt;</operator><name pos:start="174:42" pos:end="174:50">delta_poc</name><index pos:start="174:51" pos:end="174:53">[<expr pos:start="174:52" pos:end="174:52"><name pos:start="174:52" pos:end="174:52">k</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="176:17" pos:end="176:49"><expr pos:start="176:17" pos:end="176:48"><name pos:start="176:17" pos:end="176:28"><name pos:start="176:17" pos:end="176:19">rps</name><operator pos:start="176:20" pos:end="176:21">-&gt;</operator><name pos:start="176:22" pos:end="176:25">used</name><index pos:start="176:26" pos:end="176:28">[<expr pos:start="176:27" pos:end="176:27"><name pos:start="176:27" pos:end="176:27">i</name></expr>]</index></name>      <operator pos:start="176:35" pos:end="176:35">=</operator> <name pos:start="176:37" pos:end="176:48"><name pos:start="176:37" pos:end="176:39">rps</name><operator pos:start="176:40" pos:end="176:41">-&gt;</operator><name pos:start="176:42" pos:end="176:45">used</name><index pos:start="176:46" pos:end="176:48">[<expr pos:start="176:47" pos:end="176:47"><name pos:start="176:47" pos:end="176:47">k</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="178:17" pos:end="178:46"><expr pos:start="178:17" pos:end="178:45"><name pos:start="178:17" pos:end="178:33"><name pos:start="178:17" pos:end="178:19">rps</name><operator pos:start="178:20" pos:end="178:21">-&gt;</operator><name pos:start="178:22" pos:end="178:30">delta_poc</name><index pos:start="178:31" pos:end="178:33">[<expr pos:start="178:32" pos:end="178:32"><name pos:start="178:32" pos:end="178:32">k</name></expr>]</index></name> <operator pos:start="178:35" pos:end="178:35">=</operator> <name pos:start="178:37" pos:end="178:45">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="180:17" pos:end="180:41"><expr pos:start="180:17" pos:end="180:40"><name pos:start="180:17" pos:end="180:28"><name pos:start="180:17" pos:end="180:19">rps</name><operator pos:start="180:20" pos:end="180:21">-&gt;</operator><name pos:start="180:22" pos:end="180:25">used</name><index pos:start="180:26" pos:end="180:28">[<expr pos:start="180:27" pos:end="180:27"><name pos:start="180:27" pos:end="180:27">k</name></expr>]</index></name>      <operator pos:start="180:35" pos:end="180:35">=</operator> <name pos:start="180:37" pos:end="180:40">used</name></expr>;</expr_stmt>

                <expr_stmt pos:start="182:17" pos:end="182:20"><expr pos:start="182:17" pos:end="182:19"><name pos:start="182:17" pos:end="182:17">k</name><operator pos:start="182:18" pos:end="182:19">--</operator></expr>;</expr_stmt>



    </block_content>}</block></for> <if_stmt pos:start="186:7" pos:end="250:13"><else pos:start="186:7" pos:end="250:13">else <block pos:start="186:12" pos:end="250:13">{<block_content pos:start="188:9" pos:end="250:13">

        <decl_stmt pos:start="188:9" pos:end="188:44"><decl pos:start="188:9" pos:end="188:25"><type pos:start="188:9" pos:end="188:20"><name pos:start="188:9" pos:end="188:16">unsigned</name> <name pos:start="188:18" pos:end="188:20">int</name></type> <name pos:start="188:22" pos:end="188:25">prev</name></decl>, <decl pos:start="188:28" pos:end="188:43"><type ref="prev" pos:start="188:9" pos:end="188:20"/><name pos:start="188:28" pos:end="188:43">nb_positive_pics</name></decl>;</decl_stmt>

        <expr_stmt pos:start="190:9" pos:end="190:56"><expr pos:start="190:9" pos:end="190:55"><name pos:start="190:9" pos:end="190:30"><name pos:start="190:9" pos:end="190:11">rps</name><operator pos:start="190:12" pos:end="190:13">-&gt;</operator><name pos:start="190:14" pos:end="190:30">num_negative_pics</name></name> <operator pos:start="190:32" pos:end="190:32">=</operator> <call pos:start="190:34" pos:end="190:55"><name pos:start="190:34" pos:end="190:51">get_ue_golomb_long</name><argument_list pos:start="190:52" pos:end="190:55">(<argument pos:start="190:53" pos:end="190:54"><expr pos:start="190:53" pos:end="190:54"><name pos:start="190:53" pos:end="190:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="192:9" pos:end="192:56"><expr pos:start="192:9" pos:end="192:55"><name pos:start="192:9" pos:end="192:24">nb_positive_pics</name>       <operator pos:start="192:32" pos:end="192:32">=</operator> <call pos:start="192:34" pos:end="192:55"><name pos:start="192:34" pos:end="192:51">get_ue_golomb_long</name><argument_list pos:start="192:52" pos:end="192:55">(<argument pos:start="192:53" pos:end="192:54"><expr pos:start="192:53" pos:end="192:54"><name pos:start="192:53" pos:end="192:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="196:9" pos:end="250:13"><if pos:start="196:9" pos:end="250:13">if <condition pos:start="196:12" pos:end="198:46">(<expr pos:start="196:13" pos:end="198:45"><name pos:start="196:13" pos:end="196:34"><name pos:start="196:13" pos:end="196:15">rps</name><operator pos:start="196:16" pos:end="196:17">-&gt;</operator><name pos:start="196:18" pos:end="196:34">num_negative_pics</name></name> <operator pos:start="196:36" pos:end="196:37">&gt;=</operator> <name pos:start="196:39" pos:end="196:51">HEVC_MAX_REFS</name> <operator pos:start="196:53" pos:end="196:54">||</operator>

            <name pos:start="198:13" pos:end="198:28">nb_positive_pics</name> <operator pos:start="198:30" pos:end="198:31">&gt;=</operator> <name pos:start="198:33" pos:end="198:45">HEVC_MAX_REFS</name></expr>)</condition> <block pos:start="198:48" pos:end="250:13">{<block_content pos:start="200:13" pos:end="250:13">

            <expr_stmt pos:start="200:13" pos:end="200:80"><expr pos:start="200:13" pos:end="200:79"><call pos:start="200:13" pos:end="200:79"><name pos:start="200:13" pos:end="200:18">av_log</name><argument_list pos:start="200:19" pos:end="200:79">(<argument pos:start="200:20" pos:end="200:24"><expr pos:start="200:20" pos:end="200:24"><name pos:start="200:20" pos:end="200:24">avctx</name></expr></argument>, <argument pos:start="200:27" pos:end="200:38"><expr pos:start="200:27" pos:end="200:38"><name pos:start="200:27" pos:end="200:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="200:41" pos:end="200:78"><expr pos:start="200:41" pos:end="200:78"><literal type="string" pos:start="200:41" pos:end="200:78">"Too many refs in a short term RPS.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="206:9" pos:end="206:72"><expr pos:start="206:9" pos:end="206:71"><name pos:start="206:9" pos:end="206:27"><name pos:start="206:9" pos:end="206:11">rps</name><operator pos:start="206:12" pos:end="206:13">-&gt;</operator><name pos:start="206:14" pos:end="206:27">num_delta_pocs</name></name> <operator pos:start="206:29" pos:end="206:29">=</operator> <name pos:start="206:31" pos:end="206:52"><name pos:start="206:31" pos:end="206:33">rps</name><operator pos:start="206:34" pos:end="206:35">-&gt;</operator><name pos:start="206:36" pos:end="206:52">num_negative_pics</name></name> <operator pos:start="206:54" pos:end="206:54">+</operator> <name pos:start="206:56" pos:end="206:71">nb_positive_pics</name></expr>;</expr_stmt>

        <if_stmt pos:start="208:9" pos:end="250:13"><if pos:start="208:9" pos:end="250:13">if <condition pos:start="208:12" pos:end="208:32">(<expr pos:start="208:13" pos:end="208:31"><name pos:start="208:13" pos:end="208:31"><name pos:start="208:13" pos:end="208:15">rps</name><operator pos:start="208:16" pos:end="208:17">-&gt;</operator><name pos:start="208:18" pos:end="208:31">num_delta_pocs</name></name></expr>)</condition> <block pos:start="208:34" pos:end="250:13">{<block_content pos:start="210:13" pos:end="250:13">

            <expr_stmt pos:start="210:13" pos:end="210:21"><expr pos:start="210:13" pos:end="210:20"><name pos:start="210:13" pos:end="210:16">prev</name> <operator pos:start="210:18" pos:end="210:18">=</operator> <literal type="number" pos:start="210:20" pos:end="210:20">0</literal></expr>;</expr_stmt>

            <for pos:start="212:13" pos:end="250:13">for <control pos:start="212:17" pos:end="212:56">(<init pos:start="212:18" pos:end="212:23"><expr pos:start="212:18" pos:end="212:22"><name pos:start="212:18" pos:end="212:18">i</name> <operator pos:start="212:20" pos:end="212:20">=</operator> <literal type="number" pos:start="212:22" pos:end="212:22">0</literal></expr>;</init> <condition pos:start="212:25" pos:end="212:51"><expr pos:start="212:25" pos:end="212:50"><name pos:start="212:25" pos:end="212:25">i</name> <operator pos:start="212:27" pos:end="212:27">&lt;</operator> <name pos:start="212:29" pos:end="212:50"><name pos:start="212:29" pos:end="212:31">rps</name><operator pos:start="212:32" pos:end="212:33">-&gt;</operator><name pos:start="212:34" pos:end="212:50">num_negative_pics</name></name></expr>;</condition> <incr pos:start="212:53" pos:end="212:55"><expr pos:start="212:53" pos:end="212:55"><name pos:start="212:53" pos:end="212:53">i</name><operator pos:start="212:54" pos:end="212:55">++</operator></expr></incr>)</control> <block pos:start="212:58" pos:end="250:13">{<block_content pos:start="214:17" pos:end="250:13">

                <expr_stmt pos:start="214:17" pos:end="214:55"><expr pos:start="214:17" pos:end="214:54"><name pos:start="214:17" pos:end="214:25">delta_poc</name> <operator pos:start="214:27" pos:end="214:27">=</operator> <call pos:start="214:29" pos:end="214:50"><name pos:start="214:29" pos:end="214:46">get_ue_golomb_long</name><argument_list pos:start="214:47" pos:end="214:50">(<argument pos:start="214:48" pos:end="214:49"><expr pos:start="214:48" pos:end="214:49"><name pos:start="214:48" pos:end="214:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="214:52" pos:end="214:52">+</operator> <literal type="number" pos:start="214:54" pos:end="214:54">1</literal></expr>;</expr_stmt>







                <expr_stmt pos:start="222:17" pos:end="222:34"><expr pos:start="222:17" pos:end="222:33"><name pos:start="222:17" pos:end="222:20">prev</name> <operator pos:start="222:22" pos:end="222:23">-=</operator> <name pos:start="222:25" pos:end="222:33">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="224:17" pos:end="224:41"><expr pos:start="224:17" pos:end="224:40"><name pos:start="224:17" pos:end="224:33"><name pos:start="224:17" pos:end="224:19">rps</name><operator pos:start="224:20" pos:end="224:21">-&gt;</operator><name pos:start="224:22" pos:end="224:30">delta_poc</name><index pos:start="224:31" pos:end="224:33">[<expr pos:start="224:32" pos:end="224:32"><name pos:start="224:32" pos:end="224:32">i</name></expr>]</index></name> <operator pos:start="224:35" pos:end="224:35">=</operator> <name pos:start="224:37" pos:end="224:40">prev</name></expr>;</expr_stmt>

                <expr_stmt pos:start="226:17" pos:end="226:50"><expr pos:start="226:17" pos:end="226:49"><name pos:start="226:17" pos:end="226:28"><name pos:start="226:17" pos:end="226:19">rps</name><operator pos:start="226:20" pos:end="226:21">-&gt;</operator><name pos:start="226:22" pos:end="226:25">used</name><index pos:start="226:26" pos:end="226:28">[<expr pos:start="226:27" pos:end="226:27"><name pos:start="226:27" pos:end="226:27">i</name></expr>]</index></name>      <operator pos:start="226:35" pos:end="226:35">=</operator> <call pos:start="226:37" pos:end="226:49"><name pos:start="226:37" pos:end="226:45">get_bits1</name><argument_list pos:start="226:46" pos:end="226:49">(<argument pos:start="226:47" pos:end="226:48"><expr pos:start="226:47" pos:end="226:48"><name pos:start="226:47" pos:end="226:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="229:13" pos:end="229:21"><expr pos:start="229:13" pos:end="229:20"><name pos:start="229:13" pos:end="229:16">prev</name> <operator pos:start="229:18" pos:end="229:18">=</operator> <literal type="number" pos:start="229:20" pos:end="229:20">0</literal></expr>;</expr_stmt>

            <for pos:start="231:13" pos:end="250:13">for <control pos:start="231:17" pos:end="231:50">(<init pos:start="231:18" pos:end="231:23"><expr pos:start="231:18" pos:end="231:22"><name pos:start="231:18" pos:end="231:18">i</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <literal type="number" pos:start="231:22" pos:end="231:22">0</literal></expr>;</init> <condition pos:start="231:25" pos:end="231:45"><expr pos:start="231:25" pos:end="231:44"><name pos:start="231:25" pos:end="231:25">i</name> <operator pos:start="231:27" pos:end="231:27">&lt;</operator> <name pos:start="231:29" pos:end="231:44">nb_positive_pics</name></expr>;</condition> <incr pos:start="231:47" pos:end="231:49"><expr pos:start="231:47" pos:end="231:49"><name pos:start="231:47" pos:end="231:47">i</name><operator pos:start="231:48" pos:end="231:49">++</operator></expr></incr>)</control> <block pos:start="231:52" pos:end="250:13">{<block_content pos:start="233:17" pos:end="250:13">

                <expr_stmt pos:start="233:17" pos:end="233:55"><expr pos:start="233:17" pos:end="233:54"><name pos:start="233:17" pos:end="233:25">delta_poc</name> <operator pos:start="233:27" pos:end="233:27">=</operator> <call pos:start="233:29" pos:end="233:50"><name pos:start="233:29" pos:end="233:46">get_ue_golomb_long</name><argument_list pos:start="233:47" pos:end="233:50">(<argument pos:start="233:48" pos:end="233:49"><expr pos:start="233:48" pos:end="233:49"><name pos:start="233:48" pos:end="233:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="233:52" pos:end="233:52">+</operator> <literal type="number" pos:start="233:54" pos:end="233:54">1</literal></expr>;</expr_stmt>







                <expr_stmt pos:start="241:17" pos:end="241:34"><expr pos:start="241:17" pos:end="241:33"><name pos:start="241:17" pos:end="241:20">prev</name> <operator pos:start="241:22" pos:end="241:23">+=</operator> <name pos:start="241:25" pos:end="241:33">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:66"><expr pos:start="243:17" pos:end="243:65"><name pos:start="243:17" pos:end="243:58"><name pos:start="243:17" pos:end="243:19">rps</name><operator pos:start="243:20" pos:end="243:21">-&gt;</operator><name pos:start="243:22" pos:end="243:30">delta_poc</name><index pos:start="243:31" pos:end="243:58">[<expr pos:start="243:32" pos:end="243:57"><name pos:start="243:32" pos:end="243:53"><name pos:start="243:32" pos:end="243:34">rps</name><operator pos:start="243:35" pos:end="243:36">-&gt;</operator><name pos:start="243:37" pos:end="243:53">num_negative_pics</name></name> <operator pos:start="243:55" pos:end="243:55">+</operator> <name pos:start="243:57" pos:end="243:57">i</name></expr>]</index></name> <operator pos:start="243:60" pos:end="243:60">=</operator> <name pos:start="243:62" pos:end="243:65">prev</name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:75"><expr pos:start="245:17" pos:end="245:74"><name pos:start="245:17" pos:end="245:53"><name pos:start="245:17" pos:end="245:19">rps</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:25">used</name><index pos:start="245:26" pos:end="245:53">[<expr pos:start="245:27" pos:end="245:52"><name pos:start="245:27" pos:end="245:48"><name pos:start="245:27" pos:end="245:29">rps</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:48">num_negative_pics</name></name> <operator pos:start="245:50" pos:end="245:50">+</operator> <name pos:start="245:52" pos:end="245:52">i</name></expr>]</index></name>      <operator pos:start="245:60" pos:end="245:60">=</operator> <call pos:start="245:62" pos:end="245:74"><name pos:start="245:62" pos:end="245:70">get_bits1</name><argument_list pos:start="245:71" pos:end="245:74">(<argument pos:start="245:72" pos:end="245:73"><expr pos:start="245:72" pos:end="245:73"><name pos:start="245:72" pos:end="245:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="250:5" pos:end="250:13">return <expr pos:start="250:12" pos:end="250:12"><literal type="number" pos:start="250:12" pos:end="250:12">0</literal></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
