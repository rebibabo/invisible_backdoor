<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5719.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">MemTxResult</name></type>  <name pos:start="1:21" pos:end="1:47">memory_region_read_accessor</name><parameter_list pos:start="1:48" pos:end="13:65">(<parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:60">MemoryRegion</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">mr</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:54">hwaddr</name></type> <name pos:start="3:56" pos:end="3:59">addr</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:63"><decl pos:start="5:49" pos:end="5:63"><type pos:start="5:49" pos:end="5:63"><name pos:start="5:49" pos:end="5:56">uint64_t</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:63">value</name></decl></parameter>,

                                                <parameter pos:start="7:49" pos:end="7:61"><decl pos:start="7:49" pos:end="7:61"><type pos:start="7:49" pos:end="7:61"><name pos:start="7:49" pos:end="7:56">unsigned</name></type> <name pos:start="7:58" pos:end="7:61">size</name></decl></parameter>,

                                                <parameter pos:start="9:49" pos:end="9:62"><decl pos:start="9:49" pos:end="9:62"><type pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:56">unsigned</name></type> <name pos:start="9:58" pos:end="9:62">shift</name></decl></parameter>,

                                                <parameter pos:start="11:49" pos:end="11:61"><decl pos:start="11:49" pos:end="11:61"><type pos:start="11:49" pos:end="11:61"><name pos:start="11:49" pos:end="11:56">uint64_t</name></type> <name pos:start="11:58" pos:end="11:61">mask</name></decl></parameter>,

                                                <parameter pos:start="13:49" pos:end="13:64"><decl pos:start="13:49" pos:end="13:64"><type pos:start="13:49" pos:end="13:64"><name pos:start="13:49" pos:end="13:58">MemTxAttrs</name></type> <name pos:start="13:60" pos:end="13:64">attrs</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="44:1">{<block_content pos:start="17:5" pos:end="42:20">

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:7">tmp</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:47"><name pos:start="21:11" pos:end="21:23"><name pos:start="21:11" pos:end="21:12">mr</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">ops</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">read</name></name><argument_list pos:start="21:24" pos:end="21:47">(<argument pos:start="21:25" pos:end="21:34"><expr pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:26">mr</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">opaque</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">addr</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="38:5"><if pos:start="23:5" pos:end="32:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">mr</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">subpage</name></name></expr>)</condition> <block pos:start="23:22" pos:end="32:5">{<block_content pos:start="25:9" pos:end="25:79">

        <expr_stmt pos:start="25:9" pos:end="25:79"><expr pos:start="25:9" pos:end="25:78"><call pos:start="25:9" pos:end="25:78"><name pos:start="25:9" pos:end="25:40">trace_memory_region_subpage_read</name><argument_list pos:start="25:41" pos:end="25:78">(<argument pos:start="25:42" pos:end="25:56"><expr pos:start="25:42" pos:end="25:56"><call pos:start="25:42" pos:end="25:56"><name pos:start="25:42" pos:end="25:54">get_cpu_index</name><argument_list pos:start="25:55" pos:end="25:56">()</argument_list></call></expr></argument>, <argument pos:start="25:59" pos:end="25:60"><expr pos:start="25:59" pos:end="25:60"><name pos:start="25:59" pos:end="25:60">mr</name></expr></argument>, <argument pos:start="25:63" pos:end="25:66"><expr pos:start="25:63" pos:end="25:66"><name pos:start="25:63" pos:end="25:66">addr</name></expr></argument>, <argument pos:start="25:69" pos:end="25:71"><expr pos:start="25:69" pos:end="25:71"><name pos:start="25:69" pos:end="25:71">tmp</name></expr></argument>, <argument pos:start="25:74" pos:end="25:77"><expr pos:start="25:74" pos:end="25:77"><name pos:start="25:74" pos:end="25:77">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    </block_content>}</block></if> <if type="elseif" pos:start="32:7" pos:end="38:5">else if <condition pos:start="32:15" pos:end="32:52">(<expr pos:start="32:16" pos:end="32:51"><name pos:start="32:16" pos:end="32:51">TRACE_MEMORY_REGION_OPS_READ_ENABLED</name></expr>)</condition> <block pos:start="32:54" pos:end="38:5">{<block_content pos:start="34:9" pos:end="36:79">

        <decl_stmt pos:start="34:9" pos:end="34:67"><decl pos:start="34:9" pos:end="34:66"><type pos:start="34:9" pos:end="34:14"><name pos:start="34:9" pos:end="34:14">hwaddr</name></type> <name pos:start="34:16" pos:end="34:23">abs_addr</name> <init pos:start="34:25" pos:end="34:66">= <expr pos:start="34:27" pos:end="34:66"><call pos:start="34:27" pos:end="34:66"><name pos:start="34:27" pos:end="34:56">memory_region_to_absolute_addr</name><argument_list pos:start="34:57" pos:end="34:66">(<argument pos:start="34:58" pos:end="34:59"><expr pos:start="34:58" pos:end="34:59"><name pos:start="34:58" pos:end="34:59">mr</name></expr></argument>, <argument pos:start="34:62" pos:end="34:65"><expr pos:start="34:62" pos:end="34:65"><name pos:start="34:62" pos:end="34:65">addr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:79"><expr pos:start="36:9" pos:end="36:78"><call pos:start="36:9" pos:end="36:78"><name pos:start="36:9" pos:end="36:36">trace_memory_region_ops_read</name><argument_list pos:start="36:37" pos:end="36:78">(<argument pos:start="36:38" pos:end="36:52"><expr pos:start="36:38" pos:end="36:52"><call pos:start="36:38" pos:end="36:52"><name pos:start="36:38" pos:end="36:50">get_cpu_index</name><argument_list pos:start="36:51" pos:end="36:52">()</argument_list></call></expr></argument>, <argument pos:start="36:55" pos:end="36:56"><expr pos:start="36:55" pos:end="36:56"><name pos:start="36:55" pos:end="36:56">mr</name></expr></argument>, <argument pos:start="36:59" pos:end="36:66"><expr pos:start="36:59" pos:end="36:66"><name pos:start="36:59" pos:end="36:66">abs_addr</name></expr></argument>, <argument pos:start="36:69" pos:end="36:71"><expr pos:start="36:69" pos:end="36:71"><name pos:start="36:69" pos:end="36:71">tmp</name></expr></argument>, <argument pos:start="36:74" pos:end="36:77"><expr pos:start="36:74" pos:end="36:77"><name pos:start="36:74" pos:end="36:77">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:36"><expr pos:start="40:5" pos:end="40:35"><operator pos:start="40:5" pos:end="40:5">*</operator><name pos:start="40:6" pos:end="40:10">value</name> <operator pos:start="40:12" pos:end="40:13">|=</operator> <operator pos:start="40:15" pos:end="40:15">(</operator><name pos:start="40:16" pos:end="40:18">tmp</name> <operator pos:start="40:20" pos:end="40:20">&amp;</operator> <name pos:start="40:22" pos:end="40:25">mask</name><operator pos:start="40:26" pos:end="40:26">)</operator> <operator pos:start="40:28" pos:end="40:29">&lt;&lt;</operator> <name pos:start="40:31" pos:end="40:35">shift</name></expr>;</expr_stmt>

    <return pos:start="42:5" pos:end="42:20">return <expr pos:start="42:12" pos:end="42:19"><name pos:start="42:12" pos:end="42:19">MEMTX_OK</name></expr>;</return>

</block_content>}</block></function></unit>
