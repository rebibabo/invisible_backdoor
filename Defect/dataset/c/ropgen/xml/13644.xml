<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13644.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_rfid</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="28:1">{<block_content pos:start="7:5" pos:end="27:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <comment type="block" pos:start="11:5" pos:end="11:27">/* Restore CPU state */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:31">(<argument pos:start="13:18" pos:end="13:30"><expr pos:start="13:18" pos:end="13:30"><operator pos:start="13:18" pos:end="13:18">!</operator><name pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:21">ctx</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:30">mem_idx</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:34" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:27">gen_inval_exception</name><argument_list pos:start="15:28" pos:end="15:55">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">ctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:54"><expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>


    <expr_stmt pos:start="22:5" pos:end="22:22"><expr pos:start="22:5" pos:end="22:21"><call pos:start="22:5" pos:end="22:21"><name pos:start="22:5" pos:end="22:19">gen_helper_rfid</name><argument_list pos:start="22:20" pos:end="22:21">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="24:5" pos:end="27:0"><expr pos:start="24:5" pos:end="24:27"><call pos:start="24:5" pos:end="24:27"><name pos:start="24:5" pos:end="24:22">gen_sync_exception</name><argument_list pos:start="24:23" pos:end="24:27">(<argument pos:start="24:24" pos:end="24:26"><expr pos:start="24:24" pos:end="24:26"><name pos:start="24:24" pos:end="24:26">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="26:1" pos:end="26:6">#<cpp:directive pos:start="26:2" pos:end="26:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
