<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18589.c" pos:tabs="8"><function pos:start="1:1" pos:end="2379:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">decode_opc</name> <parameter_list pos:start="1:24" pos:end="1:77">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:36">CPUMIPSState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">DisasContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">ctx</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76">is_branch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2379:1">{<block_content pos:start="5:5" pos:end="2377:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rs</name></decl>, <decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">rt</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">rd</name></decl>, <decl pos:start="7:21" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:22">sa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">op</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:20">op1</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:25">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:15">imm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:55">/* make sure instructions are on a word boundary */</comment>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">pc</name></name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:21">0x3</literal></expr>)</condition> <block pos:start="17:24" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:15">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">CP0_BadVAddr</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:31">ctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:26">generate_exception</name><argument_list pos:start="21:27" pos:end="21:42">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">ctx</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">EXCP_AdEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:39">/* Handle blikely not taken case */</comment>

    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="47:5">if <condition pos:start="31:8" pos:end="31:63">(<expr pos:start="31:9" pos:end="31:62"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:12">ctx</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:20">hflags</name></name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:44">MIPS_HFLAG_BMASK_BASE</name><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:62">MIPS_HFLAG_BL</name></expr>)</condition> <block pos:start="31:65" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:26">

        <decl_stmt pos:start="33:9" pos:end="33:33"><decl pos:start="33:9" pos:end="33:32"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:14">l1</name> <init pos:start="33:16" pos:end="33:32">= <expr pos:start="33:18" pos:end="33:32"><call pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:30">gen_new_label</name><argument_list pos:start="33:31" pos:end="33:32">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:73"><expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:72"><name pos:start="37:9" pos:end="37:18">MIPS_DEBUG</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:58"><expr pos:start="37:20" pos:end="37:58"><literal type="string" pos:start="37:20" pos:end="37:40">"blikely condition ("</literal> <name pos:start="37:42" pos:end="37:54">TARGET_FMT_lx</name> <literal type="string" pos:start="37:56" pos:end="37:58">")"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:71"><expr pos:start="37:61" pos:end="37:71"><name pos:start="37:61" pos:end="37:67"><name pos:start="37:61" pos:end="37:63">ctx</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:67">pc</name></name> <operator pos:start="37:69" pos:end="37:69">+</operator> <literal type="number" pos:start="37:71" pos:end="37:71">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:54"><expr pos:start="39:9" pos:end="39:53"><call pos:start="39:9" pos:end="39:53"><name pos:start="39:9" pos:end="39:26">tcg_gen_brcondi_tl</name><argument_list pos:start="39:27" pos:end="39:53">(<argument pos:start="39:28" pos:end="39:38"><expr pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><name pos:start="39:41" pos:end="39:45">bcond</name></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:52"><expr pos:start="39:51" pos:end="39:52"><name pos:start="39:51" pos:end="39:52">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><call pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:24">tcg_gen_movi_i32</name><argument_list pos:start="41:25" pos:end="41:65">(<argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:31">hflags</name></expr></argument>, <argument pos:start="41:34" pos:end="41:64"><expr pos:start="41:34" pos:end="41:64"><name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:36">ctx</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:44">hflags</name></name> <operator pos:start="41:46" pos:end="41:46">&amp;</operator> <operator pos:start="41:48" pos:end="41:48">~</operator><name pos:start="41:49" pos:end="41:64">MIPS_HFLAG_BMASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:19">gen_goto_tb</name><argument_list pos:start="43:20" pos:end="43:40">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">ctx</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:31">ctx</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:35">pc</name></name> <operator pos:start="43:37" pos:end="43:37">+</operator> <literal type="number" pos:start="43:39" pos:end="43:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:21">gen_set_label</name><argument_list pos:start="45:22" pos:end="45:25">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:72">(<expr pos:start="51:9" pos:end="51:71"><call pos:start="51:9" pos:end="51:71"><name pos:start="51:9" pos:end="51:16">unlikely</name><argument_list pos:start="51:17" pos:end="51:71">(<argument pos:start="51:18" pos:end="51:70"><expr pos:start="51:18" pos:end="51:70"><call pos:start="51:18" pos:end="51:70"><name pos:start="51:18" pos:end="51:35">qemu_loglevel_mask</name><argument_list pos:start="51:36" pos:end="51:70">(<argument pos:start="51:37" pos:end="51:69"><expr pos:start="51:37" pos:end="51:69"><name pos:start="51:37" pos:end="51:49">CPU_LOG_TB_OP</name> <operator pos:start="51:51" pos:end="51:51">|</operator> <name pos:start="51:53" pos:end="51:69">CPU_LOG_TB_OP_OPT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:74" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:42">

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:32">tcg_gen_debug_insn_start</name><argument_list pos:start="53:33" pos:end="53:41">(<argument pos:start="53:34" pos:end="53:40"><expr pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:36">ctx</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:6">op</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <call pos:start="59:10" pos:end="59:35"><name pos:start="59:10" pos:end="59:22">MASK_OP_MAJOR</name><argument_list pos:start="59:23" pos:end="59:35">(<argument pos:start="59:24" pos:end="59:34"><expr pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:26">ctx</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:6">rs</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:21"><name pos:start="61:11" pos:end="61:13">ctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">opcode</name></name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <literal type="number" pos:start="61:26" pos:end="61:27">21</literal><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <literal type="number" pos:start="61:32" pos:end="61:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:6">rt</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:21"><name pos:start="63:11" pos:end="63:13">ctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">opcode</name></name> <operator pos:start="63:23" pos:end="63:24">&gt;&gt;</operator> <literal type="number" pos:start="63:26" pos:end="63:27">16</literal><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:6">rd</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:21"><name pos:start="65:11" pos:end="65:13">ctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:21">opcode</name></name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <literal type="number" pos:start="65:26" pos:end="65:27">11</literal><operator pos:start="65:28" pos:end="65:28">)</operator> <operator pos:start="65:30" pos:end="65:30">&amp;</operator> <literal type="number" pos:start="65:32" pos:end="65:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:6">sa</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <operator pos:start="67:10" pos:end="67:10">(</operator><name pos:start="67:11" pos:end="67:21"><name pos:start="67:11" pos:end="67:13">ctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:21">opcode</name></name> <operator pos:start="67:23" pos:end="67:24">&gt;&gt;</operator> <literal type="number" pos:start="67:26" pos:end="67:26">6</literal><operator pos:start="67:27" pos:end="67:27">)</operator> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <literal type="number" pos:start="67:31" pos:end="67:34">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:7">imm</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <operator pos:start="69:11" pos:end="69:11">(</operator><name pos:start="69:12" pos:end="69:18">int16_t</name><operator pos:start="69:19" pos:end="69:19">)</operator><name pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:22">ctx</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:30">opcode</name></name></expr>;</expr_stmt>

    <switch pos:start="71:5" pos:end="2377:5">switch <condition pos:start="71:12" pos:end="71:15">(<expr pos:start="71:13" pos:end="71:14"><name pos:start="71:13" pos:end="71:14">op</name></expr>)</condition> <block pos:start="71:17" pos:end="2377:5">{<block_content pos:start="73:5" pos:end="2375:14">

    <case pos:start="73:5" pos:end="73:21">case <expr pos:start="73:10" pos:end="73:20"><name pos:start="73:10" pos:end="73:20">OPC_SPECIAL</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:40"><expr pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:11">op1</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:39"><name pos:start="75:15" pos:end="75:26">MASK_SPECIAL</name><argument_list pos:start="75:27" pos:end="75:39">(<argument pos:start="75:28" pos:end="75:38"><expr pos:start="75:28" pos:end="75:38"><name pos:start="75:28" pos:end="75:38"><name pos:start="75:28" pos:end="75:30">ctx</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="77:9" pos:end="495:9">switch <condition pos:start="77:16" pos:end="77:20">(<expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">op1</name></expr>)</condition> <block pos:start="77:22" pos:end="495:9">{<block_content pos:start="79:9" pos:end="493:18">

        <case pos:start="79:9" pos:end="79:21">case <expr pos:start="79:14" pos:end="79:20"><name pos:start="79:14" pos:end="79:20">OPC_SLL</name></expr>:</case>          <comment type="block" pos:start="79:32" pos:end="79:57">/* Shift with immediate */</comment>

        <case pos:start="81:9" pos:end="81:21">case <expr pos:start="81:14" pos:end="81:20"><name pos:start="81:14" pos:end="81:20">OPC_SRA</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><call pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:25">gen_shift_imm</name><argument_list pos:start="83:26" pos:end="83:47">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">ctx</name></expr></argument>, <argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">op1</name></expr></argument>, <argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><name pos:start="83:37" pos:end="83:38">rd</name></expr></argument>, <argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">rt</name></expr></argument>, <argument pos:start="83:45" pos:end="83:46"><expr pos:start="83:45" pos:end="83:46"><name pos:start="83:45" pos:end="83:46">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:21">case <expr pos:start="87:14" pos:end="87:20"><name pos:start="87:14" pos:end="87:20">OPC_SRL</name></expr>:</case>

            <switch pos:start="89:13" pos:end="115:13">switch <condition pos:start="89:20" pos:end="89:47">(<expr pos:start="89:21" pos:end="89:46"><operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:32"><name pos:start="89:22" pos:end="89:24">ctx</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:32">opcode</name></name> <operator pos:start="89:34" pos:end="89:35">&gt;&gt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">21</literal><operator pos:start="89:39" pos:end="89:39">)</operator> <operator pos:start="89:41" pos:end="89:41">&amp;</operator> <literal type="number" pos:start="89:43" pos:end="89:46">0x1f</literal></expr>)</condition> <block pos:start="89:49" pos:end="115:13">{<block_content pos:start="91:13" pos:end="113:22">

            <case pos:start="91:13" pos:end="91:19">case <expr pos:start="91:18" pos:end="91:18"><literal type="number" pos:start="91:18" pos:end="91:18">1</literal></expr>:</case>

                <comment type="block" pos:start="93:17" pos:end="93:59">/* rotr is decoded as srl on non-R2 CPUs */</comment>

                <if_stmt pos:start="95:17" pos:end="99:17"><if pos:start="95:17" pos:end="99:17">if <condition pos:start="95:20" pos:end="95:51">(<expr pos:start="95:21" pos:end="95:50"><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:23">ctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:35">insn_flags</name></name> <operator pos:start="95:37" pos:end="95:37">&amp;</operator> <name pos:start="95:39" pos:end="95:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="95:53" pos:end="99:17">{<block_content pos:start="97:21" pos:end="97:35">

                    <expr_stmt pos:start="97:21" pos:end="97:35"><expr pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:23">op1</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:34">OPC_ROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="101:17" pos:end="101:33">/* Fallthrough */</comment>

            <case pos:start="103:13" pos:end="103:19">case <expr pos:start="103:18" pos:end="103:18"><literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>:</case>

                <expr_stmt pos:start="105:17" pos:end="105:52"><expr pos:start="105:17" pos:end="105:51"><call pos:start="105:17" pos:end="105:51"><name pos:start="105:17" pos:end="105:29">gen_shift_imm</name><argument_list pos:start="105:30" pos:end="105:51">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">ctx</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">op1</name></expr></argument>, <argument pos:start="105:41" pos:end="105:42"><expr pos:start="105:41" pos:end="105:42"><name pos:start="105:41" pos:end="105:42">rd</name></expr></argument>, <argument pos:start="105:45" pos:end="105:46"><expr pos:start="105:45" pos:end="105:46"><name pos:start="105:45" pos:end="105:46">rt</name></expr></argument>, <argument pos:start="105:49" pos:end="105:50"><expr pos:start="105:49" pos:end="105:50"><name pos:start="105:49" pos:end="105:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <default pos:start="109:13" pos:end="109:20">default:</default>

                <expr_stmt pos:start="111:17" pos:end="111:49"><expr pos:start="111:17" pos:end="111:48"><call pos:start="111:17" pos:end="111:48"><name pos:start="111:17" pos:end="111:34">generate_exception</name><argument_list pos:start="111:35" pos:end="111:48">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">ctx</name></expr></argument>, <argument pos:start="111:41" pos:end="111:47"><expr pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:22">case <expr pos:start="119:14" pos:end="119:21"><name pos:start="119:14" pos:end="119:21">OPC_MOVN</name></expr>:</case>         <comment type="block" pos:start="119:32" pos:end="119:53">/* Conditional move */</comment>

        <case pos:start="121:9" pos:end="121:22">case <expr pos:start="121:14" pos:end="121:21"><name pos:start="121:14" pos:end="121:21">OPC_MOVZ</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="125:68"><expr pos:start="123:13" pos:end="125:67"><call pos:start="123:13" pos:end="125:67"><name pos:start="123:13" pos:end="123:22">check_insn</name><argument_list pos:start="123:23" pos:end="125:67">(<argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ctx</name></expr></argument>, <argument pos:start="123:29" pos:end="125:66"><expr pos:start="123:29" pos:end="125:66"><name pos:start="123:29" pos:end="123:37">ISA_MIPS4</name> <operator pos:start="123:39" pos:end="123:39">|</operator> <name pos:start="123:41" pos:end="123:50">ISA_MIPS32</name> <operator pos:start="123:52" pos:end="123:52">|</operator>

                                 <name pos:start="125:34" pos:end="125:48">INSN_LOONGSON2E</name> <operator pos:start="125:50" pos:end="125:50">|</operator> <name pos:start="125:52" pos:end="125:66">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><call pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:25">gen_cond_move</name><argument_list pos:start="127:26" pos:end="127:47">(<argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">ctx</name></expr></argument>, <argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><name pos:start="127:32" pos:end="127:34">op1</name></expr></argument>, <argument pos:start="127:37" pos:end="127:38"><expr pos:start="127:37" pos:end="127:38"><name pos:start="127:37" pos:end="127:38">rd</name></expr></argument>, <argument pos:start="127:41" pos:end="127:42"><expr pos:start="127:41" pos:end="127:42"><name pos:start="127:41" pos:end="127:42">rs</name></expr></argument>, <argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:34">case <expr pos:start="131:14" pos:end="131:33"><name pos:start="131:14" pos:end="131:20">OPC_ADD</name> <operator pos:start="131:22" pos:end="131:24">...</operator> <name pos:start="131:26" pos:end="131:33">OPC_SUBU</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:44"><expr pos:start="133:13" pos:end="133:43"><call pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:21">gen_arith</name><argument_list pos:start="133:22" pos:end="133:43">(<argument pos:start="133:23" pos:end="133:25"><expr pos:start="133:23" pos:end="133:25"><name pos:start="133:23" pos:end="133:25">ctx</name></expr></argument>, <argument pos:start="133:28" pos:end="133:30"><expr pos:start="133:28" pos:end="133:30"><name pos:start="133:28" pos:end="133:30">op1</name></expr></argument>, <argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">rd</name></expr></argument>, <argument pos:start="133:37" pos:end="133:38"><expr pos:start="133:37" pos:end="133:38"><name pos:start="133:37" pos:end="133:38">rs</name></expr></argument>, <argument pos:start="133:41" pos:end="133:42"><expr pos:start="133:41" pos:end="133:42"><name pos:start="133:41" pos:end="133:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:22">case <expr pos:start="137:14" pos:end="137:21"><name pos:start="137:14" pos:end="137:21">OPC_SLLV</name></expr>:</case>         <comment type="block" pos:start="137:32" pos:end="137:43">/* Shifts */</comment>

        <case pos:start="139:9" pos:end="139:22">case <expr pos:start="139:14" pos:end="139:21"><name pos:start="139:14" pos:end="139:21">OPC_SRAV</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:44"><expr pos:start="141:13" pos:end="141:43"><call pos:start="141:13" pos:end="141:43"><name pos:start="141:13" pos:end="141:21">gen_shift</name><argument_list pos:start="141:22" pos:end="141:43">(<argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">ctx</name></expr></argument>, <argument pos:start="141:28" pos:end="141:30"><expr pos:start="141:28" pos:end="141:30"><name pos:start="141:28" pos:end="141:30">op1</name></expr></argument>, <argument pos:start="141:33" pos:end="141:34"><expr pos:start="141:33" pos:end="141:34"><name pos:start="141:33" pos:end="141:34">rd</name></expr></argument>, <argument pos:start="141:37" pos:end="141:38"><expr pos:start="141:37" pos:end="141:38"><name pos:start="141:37" pos:end="141:38">rs</name></expr></argument>, <argument pos:start="141:41" pos:end="141:42"><expr pos:start="141:41" pos:end="141:42"><name pos:start="141:41" pos:end="141:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:22">case <expr pos:start="145:14" pos:end="145:21"><name pos:start="145:14" pos:end="145:21">OPC_SRLV</name></expr>:</case>

            <switch pos:start="147:13" pos:end="173:13">switch <condition pos:start="147:20" pos:end="147:46">(<expr pos:start="147:21" pos:end="147:45"><operator pos:start="147:21" pos:end="147:21">(</operator><name pos:start="147:22" pos:end="147:32"><name pos:start="147:22" pos:end="147:24">ctx</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:32">opcode</name></name> <operator pos:start="147:34" pos:end="147:35">&gt;&gt;</operator> <literal type="number" pos:start="147:37" pos:end="147:37">6</literal><operator pos:start="147:38" pos:end="147:38">)</operator> <operator pos:start="147:40" pos:end="147:40">&amp;</operator> <literal type="number" pos:start="147:42" pos:end="147:45">0x1f</literal></expr>)</condition> <block pos:start="147:48" pos:end="173:13">{<block_content pos:start="149:13" pos:end="171:22">

            <case pos:start="149:13" pos:end="149:19">case <expr pos:start="149:18" pos:end="149:18"><literal type="number" pos:start="149:18" pos:end="149:18">1</literal></expr>:</case>

                <comment type="block" pos:start="151:17" pos:end="151:61">/* rotrv is decoded as srlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="153:17" pos:end="157:17"><if pos:start="153:17" pos:end="157:17">if <condition pos:start="153:20" pos:end="153:51">(<expr pos:start="153:21" pos:end="153:50"><name pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:23">ctx</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:35">insn_flags</name></name> <operator pos:start="153:37" pos:end="153:37">&amp;</operator> <name pos:start="153:39" pos:end="153:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="153:53" pos:end="157:17">{<block_content pos:start="155:21" pos:end="155:36">

                    <expr_stmt pos:start="155:21" pos:end="155:36"><expr pos:start="155:21" pos:end="155:35"><name pos:start="155:21" pos:end="155:23">op1</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:35">OPC_ROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="159:17" pos:end="159:33">/* Fallthrough */</comment>

            <case pos:start="161:13" pos:end="161:19">case <expr pos:start="161:18" pos:end="161:18"><literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>:</case>

                <expr_stmt pos:start="163:17" pos:end="163:48"><expr pos:start="163:17" pos:end="163:47"><call pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:25">gen_shift</name><argument_list pos:start="163:26" pos:end="163:47">(<argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">ctx</name></expr></argument>, <argument pos:start="163:32" pos:end="163:34"><expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:34">op1</name></expr></argument>, <argument pos:start="163:37" pos:end="163:38"><expr pos:start="163:37" pos:end="163:38"><name pos:start="163:37" pos:end="163:38">rd</name></expr></argument>, <argument pos:start="163:41" pos:end="163:42"><expr pos:start="163:41" pos:end="163:42"><name pos:start="163:41" pos:end="163:42">rs</name></expr></argument>, <argument pos:start="163:45" pos:end="163:46"><expr pos:start="163:45" pos:end="163:46"><name pos:start="163:45" pos:end="163:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <default pos:start="167:13" pos:end="167:20">default:</default>

                <expr_stmt pos:start="169:17" pos:end="169:49"><expr pos:start="169:17" pos:end="169:48"><call pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:34">generate_exception</name><argument_list pos:start="169:35" pos:end="169:48">(<argument pos:start="169:36" pos:end="169:38"><expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:38">ctx</name></expr></argument>, <argument pos:start="169:41" pos:end="169:47"><expr pos:start="169:41" pos:end="169:47"><name pos:start="169:41" pos:end="169:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:21">case <expr pos:start="177:14" pos:end="177:20"><name pos:start="177:14" pos:end="177:20">OPC_SLT</name></expr>:</case>          <comment type="block" pos:start="177:32" pos:end="177:53">/* Set on less than */</comment>

        <case pos:start="179:9" pos:end="179:22">case <expr pos:start="179:14" pos:end="179:21"><name pos:start="179:14" pos:end="179:21">OPC_SLTU</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><call pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:19">gen_slt</name><argument_list pos:start="181:20" pos:end="181:41">(<argument pos:start="181:21" pos:end="181:23"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:23">ctx</name></expr></argument>, <argument pos:start="181:26" pos:end="181:28"><expr pos:start="181:26" pos:end="181:28"><name pos:start="181:26" pos:end="181:28">op1</name></expr></argument>, <argument pos:start="181:31" pos:end="181:32"><expr pos:start="181:31" pos:end="181:32"><name pos:start="181:31" pos:end="181:32">rd</name></expr></argument>, <argument pos:start="181:35" pos:end="181:36"><expr pos:start="181:35" pos:end="181:36"><name pos:start="181:35" pos:end="181:36">rs</name></expr></argument>, <argument pos:start="181:39" pos:end="181:40"><expr pos:start="181:39" pos:end="181:40"><name pos:start="181:39" pos:end="181:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:21">case <expr pos:start="185:14" pos:end="185:20"><name pos:start="185:14" pos:end="185:20">OPC_AND</name></expr>:</case>          <comment type="block" pos:start="185:32" pos:end="185:41">/* Logic*/</comment>

        <case pos:start="187:9" pos:end="187:20">case <expr pos:start="187:14" pos:end="187:19"><name pos:start="187:14" pos:end="187:19">OPC_OR</name></expr>:</case>

        <case pos:start="189:9" pos:end="189:21">case <expr pos:start="189:14" pos:end="189:20"><name pos:start="189:14" pos:end="189:20">OPC_NOR</name></expr>:</case>

        <case pos:start="191:9" pos:end="191:21">case <expr pos:start="191:14" pos:end="191:20"><name pos:start="191:14" pos:end="191:20">OPC_XOR</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:44"><expr pos:start="193:13" pos:end="193:43"><call pos:start="193:13" pos:end="193:43"><name pos:start="193:13" pos:end="193:21">gen_logic</name><argument_list pos:start="193:22" pos:end="193:43">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">ctx</name></expr></argument>, <argument pos:start="193:28" pos:end="193:30"><expr pos:start="193:28" pos:end="193:30"><name pos:start="193:28" pos:end="193:30">op1</name></expr></argument>, <argument pos:start="193:33" pos:end="193:34"><expr pos:start="193:33" pos:end="193:34"><name pos:start="193:33" pos:end="193:34">rd</name></expr></argument>, <argument pos:start="193:37" pos:end="193:38"><expr pos:start="193:37" pos:end="193:38"><name pos:start="193:37" pos:end="193:38">rs</name></expr></argument>, <argument pos:start="193:41" pos:end="193:42"><expr pos:start="193:41" pos:end="193:42"><name pos:start="193:41" pos:end="193:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:35">case <expr pos:start="197:14" pos:end="197:34"><name pos:start="197:14" pos:end="197:21">OPC_MULT</name> <operator pos:start="197:23" pos:end="197:25">...</operator> <name pos:start="197:27" pos:end="197:34">OPC_DIVU</name></expr>:</case>

            <if_stmt pos:start="199:13" pos:end="209:45"><if pos:start="199:13" pos:end="207:13">if <condition pos:start="199:16" pos:end="199:19">(<expr pos:start="199:17" pos:end="199:18"><name pos:start="199:17" pos:end="199:18">sa</name></expr>)</condition> <block pos:start="199:21" pos:end="207:13">{<block_content pos:start="201:17" pos:end="205:53">

                <expr_stmt pos:start="201:17" pos:end="201:45"><expr pos:start="201:17" pos:end="201:44"><call pos:start="201:17" pos:end="201:44"><name pos:start="201:17" pos:end="201:26">check_insn</name><argument_list pos:start="201:27" pos:end="201:44">(<argument pos:start="201:28" pos:end="201:30"><expr pos:start="201:28" pos:end="201:30"><name pos:start="201:28" pos:end="201:30">ctx</name></expr></argument>, <argument pos:start="201:33" pos:end="201:43"><expr pos:start="201:33" pos:end="201:43"><name pos:start="201:33" pos:end="201:43">INSN_VR54XX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:51"><expr pos:start="203:17" pos:end="203:50"><name pos:start="203:17" pos:end="203:19">op1</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <call pos:start="203:23" pos:end="203:50"><name pos:start="203:23" pos:end="203:37">MASK_MUL_VR54XX</name><argument_list pos:start="203:38" pos:end="203:50">(<argument pos:start="203:39" pos:end="203:49"><expr pos:start="203:39" pos:end="203:49"><name pos:start="203:39" pos:end="203:49"><name pos:start="203:39" pos:end="203:41">ctx</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:53"><expr pos:start="205:17" pos:end="205:52"><call pos:start="205:17" pos:end="205:52"><name pos:start="205:17" pos:end="205:30">gen_mul_vr54xx</name><argument_list pos:start="205:31" pos:end="205:52">(<argument pos:start="205:32" pos:end="205:34"><expr pos:start="205:32" pos:end="205:34"><name pos:start="205:32" pos:end="205:34">ctx</name></expr></argument>, <argument pos:start="205:37" pos:end="205:39"><expr pos:start="205:37" pos:end="205:39"><name pos:start="205:37" pos:end="205:39">op1</name></expr></argument>, <argument pos:start="205:42" pos:end="205:43"><expr pos:start="205:42" pos:end="205:43"><name pos:start="205:42" pos:end="205:43">rd</name></expr></argument>, <argument pos:start="205:46" pos:end="205:47"><expr pos:start="205:46" pos:end="205:47"><name pos:start="205:46" pos:end="205:47">rs</name></expr></argument>, <argument pos:start="205:50" pos:end="205:51"><expr pos:start="205:50" pos:end="205:51"><name pos:start="205:50" pos:end="205:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="207:15" pos:end="209:45">else<block type="pseudo" pos:start="209:17" pos:end="209:45"><block_content pos:start="209:17" pos:end="209:45">

                <expr_stmt pos:start="209:17" pos:end="209:45"><expr pos:start="209:17" pos:end="209:44"><call pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:26">gen_muldiv</name><argument_list pos:start="209:27" pos:end="209:44">(<argument pos:start="209:28" pos:end="209:30"><expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:30">ctx</name></expr></argument>, <argument pos:start="209:33" pos:end="209:35"><expr pos:start="209:33" pos:end="209:35"><name pos:start="209:33" pos:end="209:35">op1</name></expr></argument>, <argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">rs</name></expr></argument>, <argument pos:start="209:42" pos:end="209:43"><expr pos:start="209:42" pos:end="209:43"><name pos:start="209:42" pos:end="209:43">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:33">case <expr pos:start="213:14" pos:end="213:32"><name pos:start="213:14" pos:end="213:19">OPC_JR</name> <operator pos:start="213:21" pos:end="213:23">...</operator> <name pos:start="213:25" pos:end="213:32">OPC_JALR</name></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:56"><expr pos:start="215:13" pos:end="215:55"><call pos:start="215:13" pos:end="215:55"><name pos:start="215:13" pos:end="215:30">gen_compute_branch</name><argument_list pos:start="215:31" pos:end="215:55">(<argument pos:start="215:32" pos:end="215:34"><expr pos:start="215:32" pos:end="215:34"><name pos:start="215:32" pos:end="215:34">ctx</name></expr></argument>, <argument pos:start="215:37" pos:end="215:39"><expr pos:start="215:37" pos:end="215:39"><name pos:start="215:37" pos:end="215:39">op1</name></expr></argument>, <argument pos:start="215:42" pos:end="215:42"><expr pos:start="215:42" pos:end="215:42"><literal type="number" pos:start="215:42" pos:end="215:42">4</literal></expr></argument>, <argument pos:start="215:45" pos:end="215:46"><expr pos:start="215:45" pos:end="215:46"><name pos:start="215:45" pos:end="215:46">rs</name></expr></argument>, <argument pos:start="215:49" pos:end="215:50"><expr pos:start="215:49" pos:end="215:50"><name pos:start="215:49" pos:end="215:50">rd</name></expr></argument>, <argument pos:start="215:53" pos:end="215:54"><expr pos:start="215:53" pos:end="215:54"><name pos:start="215:53" pos:end="215:54">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:27"><expr pos:start="217:13" pos:end="217:26"><operator pos:start="217:13" pos:end="217:13">*</operator><name pos:start="217:14" pos:end="217:22">is_branch</name> <operator pos:start="217:24" pos:end="217:24">=</operator> <literal type="number" pos:start="217:26" pos:end="217:26">1</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:33">case <expr pos:start="221:14" pos:end="221:32"><name pos:start="221:14" pos:end="221:20">OPC_TGE</name> <operator pos:start="221:22" pos:end="221:24">...</operator> <name pos:start="221:26" pos:end="221:32">OPC_TEQ</name></expr>:</case> <comment type="block" pos:start="221:35" pos:end="221:45">/* Traps */</comment>

        <case pos:start="223:9" pos:end="223:21">case <expr pos:start="223:14" pos:end="223:20"><name pos:start="223:14" pos:end="223:20">OPC_TNE</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:43"><expr pos:start="225:13" pos:end="225:42"><call pos:start="225:13" pos:end="225:42"><name pos:start="225:13" pos:end="225:20">gen_trap</name><argument_list pos:start="225:21" pos:end="225:42">(<argument pos:start="225:22" pos:end="225:24"><expr pos:start="225:22" pos:end="225:24"><name pos:start="225:22" pos:end="225:24">ctx</name></expr></argument>, <argument pos:start="225:27" pos:end="225:29"><expr pos:start="225:27" pos:end="225:29"><name pos:start="225:27" pos:end="225:29">op1</name></expr></argument>, <argument pos:start="225:32" pos:end="225:33"><expr pos:start="225:32" pos:end="225:33"><name pos:start="225:32" pos:end="225:33">rs</name></expr></argument>, <argument pos:start="225:36" pos:end="225:37"><expr pos:start="225:36" pos:end="225:37"><name pos:start="225:36" pos:end="225:37">rt</name></expr></argument>, <argument pos:start="225:40" pos:end="225:41"><expr pos:start="225:40" pos:end="225:41"><operator pos:start="225:40" pos:end="225:40">-</operator><literal type="number" pos:start="225:41" pos:end="225:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        <case pos:start="229:9" pos:end="229:22">case <expr pos:start="229:14" pos:end="229:21"><name pos:start="229:14" pos:end="229:21">OPC_MFHI</name></expr>:</case>          <comment type="block" pos:start="229:33" pos:end="229:53">/* Move from HI/LO */</comment>

        <case pos:start="231:9" pos:end="231:22">case <expr pos:start="231:14" pos:end="231:21"><name pos:start="231:14" pos:end="231:21">OPC_MFLO</name></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:35"><expr pos:start="233:13" pos:end="233:34"><call pos:start="233:13" pos:end="233:34"><name pos:start="233:13" pos:end="233:20">gen_HILO</name><argument_list pos:start="233:21" pos:end="233:34">(<argument pos:start="233:22" pos:end="233:24"><expr pos:start="233:22" pos:end="233:24"><name pos:start="233:22" pos:end="233:24">ctx</name></expr></argument>, <argument pos:start="233:27" pos:end="233:29"><expr pos:start="233:27" pos:end="233:29"><name pos:start="233:27" pos:end="233:29">op1</name></expr></argument>, <argument pos:start="233:32" pos:end="233:33"><expr pos:start="233:32" pos:end="233:33"><name pos:start="233:32" pos:end="233:33">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:22">case <expr pos:start="237:14" pos:end="237:21"><name pos:start="237:14" pos:end="237:21">OPC_MTHI</name></expr>:</case>

        <case pos:start="239:9" pos:end="239:22">case <expr pos:start="239:14" pos:end="239:21"><name pos:start="239:14" pos:end="239:21">OPC_MTLO</name></expr>:</case>          <comment type="block" pos:start="239:33" pos:end="239:51">/* Move to HI/LO */</comment>

            <expr_stmt pos:start="241:13" pos:end="241:35"><expr pos:start="241:13" pos:end="241:34"><call pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:20">gen_HILO</name><argument_list pos:start="241:21" pos:end="241:34">(<argument pos:start="241:22" pos:end="241:24"><expr pos:start="241:22" pos:end="241:24"><name pos:start="241:22" pos:end="241:24">ctx</name></expr></argument>, <argument pos:start="241:27" pos:end="241:29"><expr pos:start="241:27" pos:end="241:29"><name pos:start="241:27" pos:end="241:29">op1</name></expr></argument>, <argument pos:start="241:32" pos:end="241:33"><expr pos:start="241:32" pos:end="241:33"><name pos:start="241:32" pos:end="241:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <case pos:start="245:9" pos:end="248:0">case <expr pos:start="245:14" pos:end="245:21"><name pos:start="245:14" pos:end="245:21">OPC_PMON</name></expr>:</case>          <comment type="block" pos:start="245:33" pos:end="245:72">/* Pmon entry point, also R4010 selsl */</comment>

<cpp:ifdef pos:start="247:1" pos:end="247:27">#<cpp:directive pos:start="247:2" pos:end="247:6">ifdef</cpp:directive> <name pos:start="247:8" pos:end="247:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><call pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:22">MIPS_INVAL</name><argument_list pos:start="249:23" pos:end="249:38">(<argument pos:start="249:24" pos:end="249:37"><expr pos:start="249:24" pos:end="249:37"><literal type="string" pos:start="249:24" pos:end="249:37">"PMON / selsl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="254:0"><expr pos:start="251:13" pos:end="251:44"><call pos:start="251:13" pos:end="251:44"><name pos:start="251:13" pos:end="251:30">generate_exception</name><argument_list pos:start="251:31" pos:end="251:44">(<argument pos:start="251:32" pos:end="251:34"><expr pos:start="251:32" pos:end="251:34"><name pos:start="251:32" pos:end="251:34">ctx</name></expr></argument>, <argument pos:start="251:37" pos:end="251:43"><expr pos:start="251:37" pos:end="251:43"><name pos:start="251:37" pos:end="251:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="253:1" pos:end="253:5">#<cpp:directive pos:start="253:2" pos:end="253:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="255:13" pos:end="258:0"><expr pos:start="255:13" pos:end="255:37"><call pos:start="255:13" pos:end="255:37"><name pos:start="255:13" pos:end="255:27">gen_helper_0e0i</name><argument_list pos:start="255:28" pos:end="255:37">(<argument pos:start="255:29" pos:end="255:32"><expr pos:start="255:29" pos:end="255:32"><name pos:start="255:29" pos:end="255:32">pmon</name></expr></argument>, <argument pos:start="255:35" pos:end="255:36"><expr pos:start="255:35" pos:end="255:36"><name pos:start="255:35" pos:end="255:36">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="257:1" pos:end="257:6">#<cpp:directive pos:start="257:2" pos:end="257:6">endif</cpp:directive></cpp:endif>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        <case pos:start="261:9" pos:end="261:25">case <expr pos:start="261:14" pos:end="261:24"><name pos:start="261:14" pos:end="261:24">OPC_SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="263:13" pos:end="263:50"><expr pos:start="263:13" pos:end="263:49"><call pos:start="263:13" pos:end="263:49"><name pos:start="263:13" pos:end="263:30">generate_exception</name><argument_list pos:start="263:31" pos:end="263:49">(<argument pos:start="263:32" pos:end="263:34"><expr pos:start="263:32" pos:end="263:34"><name pos:start="263:32" pos:end="263:34">ctx</name></expr></argument>, <argument pos:start="263:37" pos:end="263:48"><expr pos:start="263:37" pos:end="263:48"><name pos:start="263:37" pos:end="263:48">EXCP_SYSCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:34"><expr pos:start="265:13" pos:end="265:33"><name pos:start="265:13" pos:end="265:23"><name pos:start="265:13" pos:end="265:15">ctx</name><operator pos:start="265:16" pos:end="265:17">-&gt;</operator><name pos:start="265:18" pos:end="265:23">bstate</name></name> <operator pos:start="265:25" pos:end="265:25">=</operator> <name pos:start="265:27" pos:end="265:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="267:13" pos:end="267:18">break;</break>

        <case pos:start="269:9" pos:end="269:23">case <expr pos:start="269:14" pos:end="269:22"><name pos:start="269:14" pos:end="269:22">OPC_BREAK</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="271:48"><expr pos:start="271:13" pos:end="271:47"><call pos:start="271:13" pos:end="271:47"><name pos:start="271:13" pos:end="271:30">generate_exception</name><argument_list pos:start="271:31" pos:end="271:47">(<argument pos:start="271:32" pos:end="271:34"><expr pos:start="271:32" pos:end="271:34"><name pos:start="271:32" pos:end="271:34">ctx</name></expr></argument>, <argument pos:start="271:37" pos:end="271:46"><expr pos:start="271:37" pos:end="271:46"><name pos:start="271:37" pos:end="271:46">EXCP_BREAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="273:13" pos:end="273:18">break;</break>

        <case pos:start="275:9" pos:end="278:0">case <expr pos:start="275:14" pos:end="275:21"><name pos:start="275:14" pos:end="275:21">OPC_SPIM</name></expr>:</case>

<cpp:ifdef pos:start="277:1" pos:end="277:27">#<cpp:directive pos:start="277:2" pos:end="277:6">ifdef</cpp:directive> <name pos:start="277:8" pos:end="277:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="279:13" pos:end="279:31"><expr pos:start="279:13" pos:end="279:30"><call pos:start="279:13" pos:end="279:30"><name pos:start="279:13" pos:end="279:22">MIPS_INVAL</name><argument_list pos:start="279:23" pos:end="279:30">(<argument pos:start="279:24" pos:end="279:29"><expr pos:start="279:24" pos:end="279:29"><literal type="string" pos:start="279:24" pos:end="279:29">"SPIM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="284:0"><expr pos:start="281:13" pos:end="281:44"><call pos:start="281:13" pos:end="281:44"><name pos:start="281:13" pos:end="281:30">generate_exception</name><argument_list pos:start="281:31" pos:end="281:44">(<argument pos:start="281:32" pos:end="281:34"><expr pos:start="281:32" pos:end="281:34"><name pos:start="281:32" pos:end="281:34">ctx</name></expr></argument>, <argument pos:start="281:37" pos:end="281:43"><expr pos:start="281:37" pos:end="281:43"><name pos:start="281:37" pos:end="281:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="283:1" pos:end="283:5">#<cpp:directive pos:start="283:2" pos:end="283:5">else</cpp:directive></cpp:else>

           <comment type="block" pos:start="285:12" pos:end="285:53">/* Implemented as RI exception for now. */</comment>

            <expr_stmt pos:start="287:13" pos:end="287:44"><expr pos:start="287:13" pos:end="287:43"><call pos:start="287:13" pos:end="287:43"><name pos:start="287:13" pos:end="287:22">MIPS_INVAL</name><argument_list pos:start="287:23" pos:end="287:43">(<argument pos:start="287:24" pos:end="287:42"><expr pos:start="287:24" pos:end="287:42"><literal type="string" pos:start="287:24" pos:end="287:42">"spim (unofficial)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="292:0"><expr pos:start="289:13" pos:end="289:44"><call pos:start="289:13" pos:end="289:44"><name pos:start="289:13" pos:end="289:30">generate_exception</name><argument_list pos:start="289:31" pos:end="289:44">(<argument pos:start="289:32" pos:end="289:34"><expr pos:start="289:32" pos:end="289:34"><name pos:start="289:32" pos:end="289:34">ctx</name></expr></argument>, <argument pos:start="289:37" pos:end="289:43"><expr pos:start="289:37" pos:end="289:43"><name pos:start="289:37" pos:end="289:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="291:1" pos:end="291:6">#<cpp:directive pos:start="291:2" pos:end="291:6">endif</cpp:directive></cpp:endif>

            <break pos:start="293:13" pos:end="293:18">break;</break>

        <case pos:start="295:9" pos:end="295:22">case <expr pos:start="295:14" pos:end="295:21"><name pos:start="295:14" pos:end="295:21">OPC_SYNC</name></expr>:</case>

            <comment type="block" pos:start="297:13" pos:end="297:31">/* Treat as NOP. */</comment>

            <break pos:start="299:13" pos:end="299:18">break;</break>



        <case pos:start="303:9" pos:end="303:23">case <expr pos:start="303:14" pos:end="303:22"><name pos:start="303:14" pos:end="303:22">OPC_MOVCI</name></expr>:</case>

            <expr_stmt pos:start="305:13" pos:end="305:52"><expr pos:start="305:13" pos:end="305:51"><call pos:start="305:13" pos:end="305:51"><name pos:start="305:13" pos:end="305:22">check_insn</name><argument_list pos:start="305:23" pos:end="305:51">(<argument pos:start="305:24" pos:end="305:26"><expr pos:start="305:24" pos:end="305:26"><name pos:start="305:24" pos:end="305:26">ctx</name></expr></argument>, <argument pos:start="305:29" pos:end="305:50"><expr pos:start="305:29" pos:end="305:50"><name pos:start="305:29" pos:end="305:37">ISA_MIPS4</name> <operator pos:start="305:39" pos:end="305:39">|</operator> <name pos:start="305:41" pos:end="305:50">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="307:13" pos:end="319:13"><if pos:start="307:13" pos:end="315:13">if <condition pos:start="307:16" pos:end="307:51">(<expr pos:start="307:17" pos:end="307:50"><name pos:start="307:17" pos:end="307:32"><name pos:start="307:17" pos:end="307:19">env</name><operator pos:start="307:20" pos:end="307:21">-&gt;</operator><name pos:start="307:22" pos:end="307:32">CP0_Config1</name></name> <operator pos:start="307:34" pos:end="307:34">&amp;</operator> <operator pos:start="307:36" pos:end="307:36">(</operator><literal type="number" pos:start="307:37" pos:end="307:37">1</literal> <operator pos:start="307:39" pos:end="307:40">&lt;&lt;</operator> <name pos:start="307:42" pos:end="307:49">CP0C1_FP</name><operator pos:start="307:50" pos:end="307:50">)</operator></expr>)</condition> <block pos:start="307:53" pos:end="315:13">{<block_content pos:start="309:17" pos:end="313:51">

                <expr_stmt pos:start="309:17" pos:end="309:39"><expr pos:start="309:17" pos:end="309:38"><call pos:start="309:17" pos:end="309:38"><name pos:start="309:17" pos:end="309:33">check_cp1_enabled</name><argument_list pos:start="309:34" pos:end="309:38">(<argument pos:start="309:35" pos:end="309:37"><expr pos:start="309:35" pos:end="309:37"><name pos:start="309:35" pos:end="309:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="313:51"><expr pos:start="311:17" pos:end="313:50"><call pos:start="311:17" pos:end="313:50"><name pos:start="311:17" pos:end="311:25">gen_movci</name><argument_list pos:start="311:26" pos:end="313:50">(<argument pos:start="311:27" pos:end="311:29"><expr pos:start="311:27" pos:end="311:29"><name pos:start="311:27" pos:end="311:29">ctx</name></expr></argument>, <argument pos:start="311:32" pos:end="311:33"><expr pos:start="311:32" pos:end="311:33"><name pos:start="311:32" pos:end="311:33">rd</name></expr></argument>, <argument pos:start="311:36" pos:end="311:37"><expr pos:start="311:36" pos:end="311:37"><name pos:start="311:36" pos:end="311:37">rs</name></expr></argument>, <argument pos:start="311:40" pos:end="311:64"><expr pos:start="311:40" pos:end="311:64"><operator pos:start="311:40" pos:end="311:40">(</operator><name pos:start="311:41" pos:end="311:51"><name pos:start="311:41" pos:end="311:43">ctx</name><operator pos:start="311:44" pos:end="311:45">-&gt;</operator><name pos:start="311:46" pos:end="311:51">opcode</name></name> <operator pos:start="311:53" pos:end="311:54">&gt;&gt;</operator> <literal type="number" pos:start="311:56" pos:end="311:57">18</literal><operator pos:start="311:58" pos:end="311:58">)</operator> <operator pos:start="311:60" pos:end="311:60">&amp;</operator> <literal type="number" pos:start="311:62" pos:end="311:64">0x7</literal></expr></argument>,

                          <argument pos:start="313:27" pos:end="313:49"><expr pos:start="313:27" pos:end="313:49"><operator pos:start="313:27" pos:end="313:27">(</operator><name pos:start="313:28" pos:end="313:38"><name pos:start="313:28" pos:end="313:30">ctx</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:38">opcode</name></name> <operator pos:start="313:40" pos:end="313:41">&gt;&gt;</operator> <literal type="number" pos:start="313:43" pos:end="313:44">16</literal><operator pos:start="313:45" pos:end="313:45">)</operator> <operator pos:start="313:47" pos:end="313:47">&amp;</operator> <literal type="number" pos:start="313:49" pos:end="313:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="315:15" pos:end="319:13">else <block pos:start="315:20" pos:end="319:13">{<block_content pos:start="317:17" pos:end="317:57">

                <expr_stmt pos:start="317:17" pos:end="317:57"><expr pos:start="317:17" pos:end="317:56"><call pos:start="317:17" pos:end="317:56"><name pos:start="317:17" pos:end="317:38">generate_exception_err</name><argument_list pos:start="317:39" pos:end="317:56">(<argument pos:start="317:40" pos:end="317:42"><expr pos:start="317:40" pos:end="317:42"><name pos:start="317:40" pos:end="317:42">ctx</name></expr></argument>, <argument pos:start="317:45" pos:end="317:52"><expr pos:start="317:45" pos:end="317:52"><name pos:start="317:45" pos:end="317:52">EXCP_CpU</name></expr></argument>, <argument pos:start="317:55" pos:end="317:55"><expr pos:start="317:55" pos:end="317:55"><literal type="number" pos:start="317:55" pos:end="317:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="321:13" pos:end="326:0">break;</break>



<cpp:if pos:start="325:1" pos:end="325:26">#<cpp:directive pos:start="325:2" pos:end="325:3">if</cpp:directive> <expr pos:start="325:5" pos:end="325:26"><call pos:start="325:5" pos:end="325:26"><name pos:start="325:5" pos:end="325:11">defined</name><argument_list pos:start="325:12" pos:end="325:26">(<argument pos:start="325:13" pos:end="325:25"><expr pos:start="325:13" pos:end="325:25"><name pos:start="325:13" pos:end="325:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

       <comment type="block" pos:start="327:8" pos:end="327:36">/* MIPS64 specific opcodes */</comment>

        <case pos:start="329:9" pos:end="329:22">case <expr pos:start="329:14" pos:end="329:21"><name pos:start="329:14" pos:end="329:21">OPC_DSLL</name></expr>:</case>

        <case pos:start="331:9" pos:end="331:22">case <expr pos:start="331:14" pos:end="331:21"><name pos:start="331:14" pos:end="331:21">OPC_DSRA</name></expr>:</case>

        <case pos:start="333:9" pos:end="333:24">case <expr pos:start="333:14" pos:end="333:23"><name pos:start="333:14" pos:end="333:23">OPC_DSLL32</name></expr>:</case>

        <case pos:start="335:9" pos:end="335:24">case <expr pos:start="335:14" pos:end="335:23"><name pos:start="335:14" pos:end="335:23">OPC_DSRA32</name></expr>:</case>

            <expr_stmt pos:start="337:13" pos:end="337:39"><expr pos:start="337:13" pos:end="337:38"><call pos:start="337:13" pos:end="337:38"><name pos:start="337:13" pos:end="337:22">check_insn</name><argument_list pos:start="337:23" pos:end="337:38">(<argument pos:start="337:24" pos:end="337:26"><expr pos:start="337:24" pos:end="337:26"><name pos:start="337:24" pos:end="337:26">ctx</name></expr></argument>, <argument pos:start="337:29" pos:end="337:37"><expr pos:start="337:29" pos:end="337:37"><name pos:start="337:29" pos:end="337:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:31"><expr pos:start="339:13" pos:end="339:30"><call pos:start="339:13" pos:end="339:30"><name pos:start="339:13" pos:end="339:25">check_mips_64</name><argument_list pos:start="339:26" pos:end="339:30">(<argument pos:start="339:27" pos:end="339:29"><expr pos:start="339:27" pos:end="339:29"><name pos:start="339:27" pos:end="339:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:48"><expr pos:start="341:13" pos:end="341:47"><call pos:start="341:13" pos:end="341:47"><name pos:start="341:13" pos:end="341:25">gen_shift_imm</name><argument_list pos:start="341:26" pos:end="341:47">(<argument pos:start="341:27" pos:end="341:29"><expr pos:start="341:27" pos:end="341:29"><name pos:start="341:27" pos:end="341:29">ctx</name></expr></argument>, <argument pos:start="341:32" pos:end="341:34"><expr pos:start="341:32" pos:end="341:34"><name pos:start="341:32" pos:end="341:34">op1</name></expr></argument>, <argument pos:start="341:37" pos:end="341:38"><expr pos:start="341:37" pos:end="341:38"><name pos:start="341:37" pos:end="341:38">rd</name></expr></argument>, <argument pos:start="341:41" pos:end="341:42"><expr pos:start="341:41" pos:end="341:42"><name pos:start="341:41" pos:end="341:42">rt</name></expr></argument>, <argument pos:start="341:45" pos:end="341:46"><expr pos:start="341:45" pos:end="341:46"><name pos:start="341:45" pos:end="341:46">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="343:13" pos:end="343:18">break;</break>

        <case pos:start="345:9" pos:end="345:22">case <expr pos:start="345:14" pos:end="345:21"><name pos:start="345:14" pos:end="345:21">OPC_DSRL</name></expr>:</case>

            <switch pos:start="347:13" pos:end="377:13">switch <condition pos:start="347:20" pos:end="347:47">(<expr pos:start="347:21" pos:end="347:46"><operator pos:start="347:21" pos:end="347:21">(</operator><name pos:start="347:22" pos:end="347:32"><name pos:start="347:22" pos:end="347:24">ctx</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:32">opcode</name></name> <operator pos:start="347:34" pos:end="347:35">&gt;&gt;</operator> <literal type="number" pos:start="347:37" pos:end="347:38">21</literal><operator pos:start="347:39" pos:end="347:39">)</operator> <operator pos:start="347:41" pos:end="347:41">&amp;</operator> <literal type="number" pos:start="347:43" pos:end="347:46">0x1f</literal></expr>)</condition> <block pos:start="347:49" pos:end="377:13">{<block_content pos:start="349:13" pos:end="375:22">

            <case pos:start="349:13" pos:end="349:19">case <expr pos:start="349:18" pos:end="349:18"><literal type="number" pos:start="349:18" pos:end="349:18">1</literal></expr>:</case>

                <comment type="block" pos:start="351:17" pos:end="351:61">/* drotr is decoded as dsrl on non-R2 CPUs */</comment>

                <if_stmt pos:start="353:17" pos:end="357:17"><if pos:start="353:17" pos:end="357:17">if <condition pos:start="353:20" pos:end="353:51">(<expr pos:start="353:21" pos:end="353:50"><name pos:start="353:21" pos:end="353:35"><name pos:start="353:21" pos:end="353:23">ctx</name><operator pos:start="353:24" pos:end="353:25">-&gt;</operator><name pos:start="353:26" pos:end="353:35">insn_flags</name></name> <operator pos:start="353:37" pos:end="353:37">&amp;</operator> <name pos:start="353:39" pos:end="353:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="353:53" pos:end="357:17">{<block_content pos:start="355:21" pos:end="355:36">

                    <expr_stmt pos:start="355:21" pos:end="355:36"><expr pos:start="355:21" pos:end="355:35"><name pos:start="355:21" pos:end="355:23">op1</name> <operator pos:start="355:25" pos:end="355:25">=</operator> <name pos:start="355:27" pos:end="355:35">OPC_DROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="359:17" pos:end="359:33">/* Fallthrough */</comment>

            <case pos:start="361:13" pos:end="361:19">case <expr pos:start="361:18" pos:end="361:18"><literal type="number" pos:start="361:18" pos:end="361:18">0</literal></expr>:</case>

                <expr_stmt pos:start="363:17" pos:end="363:43"><expr pos:start="363:17" pos:end="363:42"><call pos:start="363:17" pos:end="363:42"><name pos:start="363:17" pos:end="363:26">check_insn</name><argument_list pos:start="363:27" pos:end="363:42">(<argument pos:start="363:28" pos:end="363:30"><expr pos:start="363:28" pos:end="363:30"><name pos:start="363:28" pos:end="363:30">ctx</name></expr></argument>, <argument pos:start="363:33" pos:end="363:41"><expr pos:start="363:33" pos:end="363:41"><name pos:start="363:33" pos:end="363:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:35"><expr pos:start="365:17" pos:end="365:34"><call pos:start="365:17" pos:end="365:34"><name pos:start="365:17" pos:end="365:29">check_mips_64</name><argument_list pos:start="365:30" pos:end="365:34">(<argument pos:start="365:31" pos:end="365:33"><expr pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:52"><expr pos:start="367:17" pos:end="367:51"><call pos:start="367:17" pos:end="367:51"><name pos:start="367:17" pos:end="367:29">gen_shift_imm</name><argument_list pos:start="367:30" pos:end="367:51">(<argument pos:start="367:31" pos:end="367:33"><expr pos:start="367:31" pos:end="367:33"><name pos:start="367:31" pos:end="367:33">ctx</name></expr></argument>, <argument pos:start="367:36" pos:end="367:38"><expr pos:start="367:36" pos:end="367:38"><name pos:start="367:36" pos:end="367:38">op1</name></expr></argument>, <argument pos:start="367:41" pos:end="367:42"><expr pos:start="367:41" pos:end="367:42"><name pos:start="367:41" pos:end="367:42">rd</name></expr></argument>, <argument pos:start="367:45" pos:end="367:46"><expr pos:start="367:45" pos:end="367:46"><name pos:start="367:45" pos:end="367:46">rt</name></expr></argument>, <argument pos:start="367:49" pos:end="367:50"><expr pos:start="367:49" pos:end="367:50"><name pos:start="367:49" pos:end="367:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="369:17" pos:end="369:22">break;</break>

            <default pos:start="371:13" pos:end="371:20">default:</default>

                <expr_stmt pos:start="373:17" pos:end="373:49"><expr pos:start="373:17" pos:end="373:48"><call pos:start="373:17" pos:end="373:48"><name pos:start="373:17" pos:end="373:34">generate_exception</name><argument_list pos:start="373:35" pos:end="373:48">(<argument pos:start="373:36" pos:end="373:38"><expr pos:start="373:36" pos:end="373:38"><name pos:start="373:36" pos:end="373:38">ctx</name></expr></argument>, <argument pos:start="373:41" pos:end="373:47"><expr pos:start="373:41" pos:end="373:47"><name pos:start="373:41" pos:end="373:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="375:17" pos:end="375:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="379:13" pos:end="379:18">break;</break>

        <case pos:start="381:9" pos:end="381:24">case <expr pos:start="381:14" pos:end="381:23"><name pos:start="381:14" pos:end="381:23">OPC_DSRL32</name></expr>:</case>

            <switch pos:start="383:13" pos:end="413:13">switch <condition pos:start="383:20" pos:end="383:47">(<expr pos:start="383:21" pos:end="383:46"><operator pos:start="383:21" pos:end="383:21">(</operator><name pos:start="383:22" pos:end="383:32"><name pos:start="383:22" pos:end="383:24">ctx</name><operator pos:start="383:25" pos:end="383:26">-&gt;</operator><name pos:start="383:27" pos:end="383:32">opcode</name></name> <operator pos:start="383:34" pos:end="383:35">&gt;&gt;</operator> <literal type="number" pos:start="383:37" pos:end="383:38">21</literal><operator pos:start="383:39" pos:end="383:39">)</operator> <operator pos:start="383:41" pos:end="383:41">&amp;</operator> <literal type="number" pos:start="383:43" pos:end="383:46">0x1f</literal></expr>)</condition> <block pos:start="383:49" pos:end="413:13">{<block_content pos:start="385:13" pos:end="411:22">

            <case pos:start="385:13" pos:end="385:19">case <expr pos:start="385:18" pos:end="385:18"><literal type="number" pos:start="385:18" pos:end="385:18">1</literal></expr>:</case>

                <comment type="block" pos:start="387:17" pos:end="387:65">/* drotr32 is decoded as dsrl32 on non-R2 CPUs */</comment>

                <if_stmt pos:start="389:17" pos:end="393:17"><if pos:start="389:17" pos:end="393:17">if <condition pos:start="389:20" pos:end="389:51">(<expr pos:start="389:21" pos:end="389:50"><name pos:start="389:21" pos:end="389:35"><name pos:start="389:21" pos:end="389:23">ctx</name><operator pos:start="389:24" pos:end="389:25">-&gt;</operator><name pos:start="389:26" pos:end="389:35">insn_flags</name></name> <operator pos:start="389:37" pos:end="389:37">&amp;</operator> <name pos:start="389:39" pos:end="389:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="389:53" pos:end="393:17">{<block_content pos:start="391:21" pos:end="391:38">

                    <expr_stmt pos:start="391:21" pos:end="391:38"><expr pos:start="391:21" pos:end="391:37"><name pos:start="391:21" pos:end="391:23">op1</name> <operator pos:start="391:25" pos:end="391:25">=</operator> <name pos:start="391:27" pos:end="391:37">OPC_DROTR32</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="395:17" pos:end="395:33">/* Fallthrough */</comment>

            <case pos:start="397:13" pos:end="397:19">case <expr pos:start="397:18" pos:end="397:18"><literal type="number" pos:start="397:18" pos:end="397:18">0</literal></expr>:</case>

                <expr_stmt pos:start="399:17" pos:end="399:43"><expr pos:start="399:17" pos:end="399:42"><call pos:start="399:17" pos:end="399:42"><name pos:start="399:17" pos:end="399:26">check_insn</name><argument_list pos:start="399:27" pos:end="399:42">(<argument pos:start="399:28" pos:end="399:30"><expr pos:start="399:28" pos:end="399:30"><name pos:start="399:28" pos:end="399:30">ctx</name></expr></argument>, <argument pos:start="399:33" pos:end="399:41"><expr pos:start="399:33" pos:end="399:41"><name pos:start="399:33" pos:end="399:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:35"><expr pos:start="401:17" pos:end="401:34"><call pos:start="401:17" pos:end="401:34"><name pos:start="401:17" pos:end="401:29">check_mips_64</name><argument_list pos:start="401:30" pos:end="401:34">(<argument pos:start="401:31" pos:end="401:33"><expr pos:start="401:31" pos:end="401:33"><name pos:start="401:31" pos:end="401:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:52"><expr pos:start="403:17" pos:end="403:51"><call pos:start="403:17" pos:end="403:51"><name pos:start="403:17" pos:end="403:29">gen_shift_imm</name><argument_list pos:start="403:30" pos:end="403:51">(<argument pos:start="403:31" pos:end="403:33"><expr pos:start="403:31" pos:end="403:33"><name pos:start="403:31" pos:end="403:33">ctx</name></expr></argument>, <argument pos:start="403:36" pos:end="403:38"><expr pos:start="403:36" pos:end="403:38"><name pos:start="403:36" pos:end="403:38">op1</name></expr></argument>, <argument pos:start="403:41" pos:end="403:42"><expr pos:start="403:41" pos:end="403:42"><name pos:start="403:41" pos:end="403:42">rd</name></expr></argument>, <argument pos:start="403:45" pos:end="403:46"><expr pos:start="403:45" pos:end="403:46"><name pos:start="403:45" pos:end="403:46">rt</name></expr></argument>, <argument pos:start="403:49" pos:end="403:50"><expr pos:start="403:49" pos:end="403:50"><name pos:start="403:49" pos:end="403:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="405:17" pos:end="405:22">break;</break>

            <default pos:start="407:13" pos:end="407:20">default:</default>

                <expr_stmt pos:start="409:17" pos:end="409:49"><expr pos:start="409:17" pos:end="409:48"><call pos:start="409:17" pos:end="409:48"><name pos:start="409:17" pos:end="409:34">generate_exception</name><argument_list pos:start="409:35" pos:end="409:48">(<argument pos:start="409:36" pos:end="409:38"><expr pos:start="409:36" pos:end="409:38"><name pos:start="409:36" pos:end="409:38">ctx</name></expr></argument>, <argument pos:start="409:41" pos:end="409:47"><expr pos:start="409:41" pos:end="409:47"><name pos:start="409:41" pos:end="409:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="411:17" pos:end="411:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="415:13" pos:end="415:18">break;</break>

        <case pos:start="417:9" pos:end="417:36">case <expr pos:start="417:14" pos:end="417:35"><name pos:start="417:14" pos:end="417:21">OPC_DADD</name> <operator pos:start="417:23" pos:end="417:25">...</operator> <name pos:start="417:27" pos:end="417:35">OPC_DSUBU</name></expr>:</case>

            <expr_stmt pos:start="419:13" pos:end="419:39"><expr pos:start="419:13" pos:end="419:38"><call pos:start="419:13" pos:end="419:38"><name pos:start="419:13" pos:end="419:22">check_insn</name><argument_list pos:start="419:23" pos:end="419:38">(<argument pos:start="419:24" pos:end="419:26"><expr pos:start="419:24" pos:end="419:26"><name pos:start="419:24" pos:end="419:26">ctx</name></expr></argument>, <argument pos:start="419:29" pos:end="419:37"><expr pos:start="419:29" pos:end="419:37"><name pos:start="419:29" pos:end="419:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:31"><expr pos:start="421:13" pos:end="421:30"><call pos:start="421:13" pos:end="421:30"><name pos:start="421:13" pos:end="421:25">check_mips_64</name><argument_list pos:start="421:26" pos:end="421:30">(<argument pos:start="421:27" pos:end="421:29"><expr pos:start="421:27" pos:end="421:29"><name pos:start="421:27" pos:end="421:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:44"><expr pos:start="423:13" pos:end="423:43"><call pos:start="423:13" pos:end="423:43"><name pos:start="423:13" pos:end="423:21">gen_arith</name><argument_list pos:start="423:22" pos:end="423:43">(<argument pos:start="423:23" pos:end="423:25"><expr pos:start="423:23" pos:end="423:25"><name pos:start="423:23" pos:end="423:25">ctx</name></expr></argument>, <argument pos:start="423:28" pos:end="423:30"><expr pos:start="423:28" pos:end="423:30"><name pos:start="423:28" pos:end="423:30">op1</name></expr></argument>, <argument pos:start="423:33" pos:end="423:34"><expr pos:start="423:33" pos:end="423:34"><name pos:start="423:33" pos:end="423:34">rd</name></expr></argument>, <argument pos:start="423:37" pos:end="423:38"><expr pos:start="423:37" pos:end="423:38"><name pos:start="423:37" pos:end="423:38">rs</name></expr></argument>, <argument pos:start="423:41" pos:end="423:42"><expr pos:start="423:41" pos:end="423:42"><name pos:start="423:41" pos:end="423:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="425:13" pos:end="425:18">break;</break>

        <case pos:start="427:9" pos:end="427:23">case <expr pos:start="427:14" pos:end="427:22"><name pos:start="427:14" pos:end="427:22">OPC_DSLLV</name></expr>:</case>

        <case pos:start="429:9" pos:end="429:23">case <expr pos:start="429:14" pos:end="429:22"><name pos:start="429:14" pos:end="429:22">OPC_DSRAV</name></expr>:</case>

            <expr_stmt pos:start="431:13" pos:end="431:39"><expr pos:start="431:13" pos:end="431:38"><call pos:start="431:13" pos:end="431:38"><name pos:start="431:13" pos:end="431:22">check_insn</name><argument_list pos:start="431:23" pos:end="431:38">(<argument pos:start="431:24" pos:end="431:26"><expr pos:start="431:24" pos:end="431:26"><name pos:start="431:24" pos:end="431:26">ctx</name></expr></argument>, <argument pos:start="431:29" pos:end="431:37"><expr pos:start="431:29" pos:end="431:37"><name pos:start="431:29" pos:end="431:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:31"><expr pos:start="433:13" pos:end="433:30"><call pos:start="433:13" pos:end="433:30"><name pos:start="433:13" pos:end="433:25">check_mips_64</name><argument_list pos:start="433:26" pos:end="433:30">(<argument pos:start="433:27" pos:end="433:29"><expr pos:start="433:27" pos:end="433:29"><name pos:start="433:27" pos:end="433:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:44"><expr pos:start="435:13" pos:end="435:43"><call pos:start="435:13" pos:end="435:43"><name pos:start="435:13" pos:end="435:21">gen_shift</name><argument_list pos:start="435:22" pos:end="435:43">(<argument pos:start="435:23" pos:end="435:25"><expr pos:start="435:23" pos:end="435:25"><name pos:start="435:23" pos:end="435:25">ctx</name></expr></argument>, <argument pos:start="435:28" pos:end="435:30"><expr pos:start="435:28" pos:end="435:30"><name pos:start="435:28" pos:end="435:30">op1</name></expr></argument>, <argument pos:start="435:33" pos:end="435:34"><expr pos:start="435:33" pos:end="435:34"><name pos:start="435:33" pos:end="435:34">rd</name></expr></argument>, <argument pos:start="435:37" pos:end="435:38"><expr pos:start="435:37" pos:end="435:38"><name pos:start="435:37" pos:end="435:38">rs</name></expr></argument>, <argument pos:start="435:41" pos:end="435:42"><expr pos:start="435:41" pos:end="435:42"><name pos:start="435:41" pos:end="435:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="437:13" pos:end="437:18">break;</break>

        <case pos:start="439:9" pos:end="439:23">case <expr pos:start="439:14" pos:end="439:22"><name pos:start="439:14" pos:end="439:22">OPC_DSRLV</name></expr>:</case>

            <switch pos:start="441:13" pos:end="471:13">switch <condition pos:start="441:20" pos:end="441:46">(<expr pos:start="441:21" pos:end="441:45"><operator pos:start="441:21" pos:end="441:21">(</operator><name pos:start="441:22" pos:end="441:32"><name pos:start="441:22" pos:end="441:24">ctx</name><operator pos:start="441:25" pos:end="441:26">-&gt;</operator><name pos:start="441:27" pos:end="441:32">opcode</name></name> <operator pos:start="441:34" pos:end="441:35">&gt;&gt;</operator> <literal type="number" pos:start="441:37" pos:end="441:37">6</literal><operator pos:start="441:38" pos:end="441:38">)</operator> <operator pos:start="441:40" pos:end="441:40">&amp;</operator> <literal type="number" pos:start="441:42" pos:end="441:45">0x1f</literal></expr>)</condition> <block pos:start="441:48" pos:end="471:13">{<block_content pos:start="443:13" pos:end="469:22">

            <case pos:start="443:13" pos:end="443:19">case <expr pos:start="443:18" pos:end="443:18"><literal type="number" pos:start="443:18" pos:end="443:18">1</literal></expr>:</case>

                <comment type="block" pos:start="445:17" pos:end="445:63">/* drotrv is decoded as dsrlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="447:17" pos:end="451:17"><if pos:start="447:17" pos:end="451:17">if <condition pos:start="447:20" pos:end="447:51">(<expr pos:start="447:21" pos:end="447:50"><name pos:start="447:21" pos:end="447:35"><name pos:start="447:21" pos:end="447:23">ctx</name><operator pos:start="447:24" pos:end="447:25">-&gt;</operator><name pos:start="447:26" pos:end="447:35">insn_flags</name></name> <operator pos:start="447:37" pos:end="447:37">&amp;</operator> <name pos:start="447:39" pos:end="447:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="447:53" pos:end="451:17">{<block_content pos:start="449:21" pos:end="449:37">

                    <expr_stmt pos:start="449:21" pos:end="449:37"><expr pos:start="449:21" pos:end="449:36"><name pos:start="449:21" pos:end="449:23">op1</name> <operator pos:start="449:25" pos:end="449:25">=</operator> <name pos:start="449:27" pos:end="449:36">OPC_DROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="453:17" pos:end="453:33">/* Fallthrough */</comment>

            <case pos:start="455:13" pos:end="455:19">case <expr pos:start="455:18" pos:end="455:18"><literal type="number" pos:start="455:18" pos:end="455:18">0</literal></expr>:</case>

                <expr_stmt pos:start="457:17" pos:end="457:43"><expr pos:start="457:17" pos:end="457:42"><call pos:start="457:17" pos:end="457:42"><name pos:start="457:17" pos:end="457:26">check_insn</name><argument_list pos:start="457:27" pos:end="457:42">(<argument pos:start="457:28" pos:end="457:30"><expr pos:start="457:28" pos:end="457:30"><name pos:start="457:28" pos:end="457:30">ctx</name></expr></argument>, <argument pos:start="457:33" pos:end="457:41"><expr pos:start="457:33" pos:end="457:41"><name pos:start="457:33" pos:end="457:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="459:17" pos:end="459:35"><expr pos:start="459:17" pos:end="459:34"><call pos:start="459:17" pos:end="459:34"><name pos:start="459:17" pos:end="459:29">check_mips_64</name><argument_list pos:start="459:30" pos:end="459:34">(<argument pos:start="459:31" pos:end="459:33"><expr pos:start="459:31" pos:end="459:33"><name pos:start="459:31" pos:end="459:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:48"><expr pos:start="461:17" pos:end="461:47"><call pos:start="461:17" pos:end="461:47"><name pos:start="461:17" pos:end="461:25">gen_shift</name><argument_list pos:start="461:26" pos:end="461:47">(<argument pos:start="461:27" pos:end="461:29"><expr pos:start="461:27" pos:end="461:29"><name pos:start="461:27" pos:end="461:29">ctx</name></expr></argument>, <argument pos:start="461:32" pos:end="461:34"><expr pos:start="461:32" pos:end="461:34"><name pos:start="461:32" pos:end="461:34">op1</name></expr></argument>, <argument pos:start="461:37" pos:end="461:38"><expr pos:start="461:37" pos:end="461:38"><name pos:start="461:37" pos:end="461:38">rd</name></expr></argument>, <argument pos:start="461:41" pos:end="461:42"><expr pos:start="461:41" pos:end="461:42"><name pos:start="461:41" pos:end="461:42">rs</name></expr></argument>, <argument pos:start="461:45" pos:end="461:46"><expr pos:start="461:45" pos:end="461:46"><name pos:start="461:45" pos:end="461:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="463:17" pos:end="463:22">break;</break>

            <default pos:start="465:13" pos:end="465:20">default:</default>

                <expr_stmt pos:start="467:17" pos:end="467:49"><expr pos:start="467:17" pos:end="467:48"><call pos:start="467:17" pos:end="467:48"><name pos:start="467:17" pos:end="467:34">generate_exception</name><argument_list pos:start="467:35" pos:end="467:48">(<argument pos:start="467:36" pos:end="467:38"><expr pos:start="467:36" pos:end="467:38"><name pos:start="467:36" pos:end="467:38">ctx</name></expr></argument>, <argument pos:start="467:41" pos:end="467:47"><expr pos:start="467:41" pos:end="467:47"><name pos:start="467:41" pos:end="467:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="469:17" pos:end="469:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="473:13" pos:end="473:18">break;</break>

        <case pos:start="475:9" pos:end="475:37">case <expr pos:start="475:14" pos:end="475:36"><name pos:start="475:14" pos:end="475:22">OPC_DMULT</name> <operator pos:start="475:24" pos:end="475:26">...</operator> <name pos:start="475:28" pos:end="475:36">OPC_DDIVU</name></expr>:</case>

            <expr_stmt pos:start="477:13" pos:end="477:39"><expr pos:start="477:13" pos:end="477:38"><call pos:start="477:13" pos:end="477:38"><name pos:start="477:13" pos:end="477:22">check_insn</name><argument_list pos:start="477:23" pos:end="477:38">(<argument pos:start="477:24" pos:end="477:26"><expr pos:start="477:24" pos:end="477:26"><name pos:start="477:24" pos:end="477:26">ctx</name></expr></argument>, <argument pos:start="477:29" pos:end="477:37"><expr pos:start="477:29" pos:end="477:37"><name pos:start="477:29" pos:end="477:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:31"><expr pos:start="479:13" pos:end="479:30"><call pos:start="479:13" pos:end="479:30"><name pos:start="479:13" pos:end="479:25">check_mips_64</name><argument_list pos:start="479:26" pos:end="479:30">(<argument pos:start="479:27" pos:end="479:29"><expr pos:start="479:27" pos:end="479:29"><name pos:start="479:27" pos:end="479:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:41"><expr pos:start="481:13" pos:end="481:40"><call pos:start="481:13" pos:end="481:40"><name pos:start="481:13" pos:end="481:22">gen_muldiv</name><argument_list pos:start="481:23" pos:end="481:40">(<argument pos:start="481:24" pos:end="481:26"><expr pos:start="481:24" pos:end="481:26"><name pos:start="481:24" pos:end="481:26">ctx</name></expr></argument>, <argument pos:start="481:29" pos:end="481:31"><expr pos:start="481:29" pos:end="481:31"><name pos:start="481:29" pos:end="481:31">op1</name></expr></argument>, <argument pos:start="481:34" pos:end="481:35"><expr pos:start="481:34" pos:end="481:35"><name pos:start="481:34" pos:end="481:35">rs</name></expr></argument>, <argument pos:start="481:38" pos:end="481:39"><expr pos:start="481:38" pos:end="481:39"><name pos:start="481:38" pos:end="481:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="483:13" pos:end="486:0">break;</break>

<cpp:endif pos:start="485:1" pos:end="485:6">#<cpp:directive pos:start="485:2" pos:end="485:6">endif</cpp:directive></cpp:endif>

        <default pos:start="487:9" pos:end="487:16">default:</default>            <comment type="block" pos:start="487:29" pos:end="487:41">/* Invalid */</comment>

            <expr_stmt pos:start="489:13" pos:end="489:34"><expr pos:start="489:13" pos:end="489:33"><call pos:start="489:13" pos:end="489:33"><name pos:start="489:13" pos:end="489:22">MIPS_INVAL</name><argument_list pos:start="489:23" pos:end="489:33">(<argument pos:start="489:24" pos:end="489:32"><expr pos:start="489:24" pos:end="489:32"><literal type="string" pos:start="489:24" pos:end="489:32">"special"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:45"><expr pos:start="491:13" pos:end="491:44"><call pos:start="491:13" pos:end="491:44"><name pos:start="491:13" pos:end="491:30">generate_exception</name><argument_list pos:start="491:31" pos:end="491:44">(<argument pos:start="491:32" pos:end="491:34"><expr pos:start="491:32" pos:end="491:34"><name pos:start="491:32" pos:end="491:34">ctx</name></expr></argument>, <argument pos:start="491:37" pos:end="491:43"><expr pos:start="491:37" pos:end="491:43"><name pos:start="491:37" pos:end="491:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="493:13" pos:end="493:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="497:9" pos:end="497:14">break;</break>

    <case pos:start="499:5" pos:end="499:22">case <expr pos:start="499:10" pos:end="499:21"><name pos:start="499:10" pos:end="499:21">OPC_SPECIAL2</name></expr>:</case>

        <expr_stmt pos:start="501:9" pos:end="501:41"><expr pos:start="501:9" pos:end="501:40"><name pos:start="501:9" pos:end="501:11">op1</name> <operator pos:start="501:13" pos:end="501:13">=</operator> <call pos:start="501:15" pos:end="501:40"><name pos:start="501:15" pos:end="501:27">MASK_SPECIAL2</name><argument_list pos:start="501:28" pos:end="501:40">(<argument pos:start="501:29" pos:end="501:39"><expr pos:start="501:29" pos:end="501:39"><name pos:start="501:29" pos:end="501:39"><name pos:start="501:29" pos:end="501:31">ctx</name><operator pos:start="501:32" pos:end="501:33">-&gt;</operator><name pos:start="501:34" pos:end="501:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="503:9" pos:end="615:9">switch <condition pos:start="503:16" pos:end="503:20">(<expr pos:start="503:17" pos:end="503:19"><name pos:start="503:17" pos:end="503:19">op1</name></expr>)</condition> <block pos:start="503:22" pos:end="615:9">{<block_content pos:start="505:9" pos:end="613:18">

        <case pos:start="505:9" pos:end="505:36">case <expr pos:start="505:14" pos:end="505:35"><name pos:start="505:14" pos:end="505:21">OPC_MADD</name> <operator pos:start="505:23" pos:end="505:25">...</operator> <name pos:start="505:27" pos:end="505:35">OPC_MADDU</name></expr>:</case> <comment type="block" pos:start="505:38" pos:end="505:63">/* Multiply and add/sub */</comment>

        <case pos:start="507:9" pos:end="507:36">case <expr pos:start="507:14" pos:end="507:35"><name pos:start="507:14" pos:end="507:21">OPC_MSUB</name> <operator pos:start="507:23" pos:end="507:25">...</operator> <name pos:start="507:27" pos:end="507:35">OPC_MSUBU</name></expr>:</case>

            <expr_stmt pos:start="509:13" pos:end="509:40"><expr pos:start="509:13" pos:end="509:39"><call pos:start="509:13" pos:end="509:39"><name pos:start="509:13" pos:end="509:22">check_insn</name><argument_list pos:start="509:23" pos:end="509:39">(<argument pos:start="509:24" pos:end="509:26"><expr pos:start="509:24" pos:end="509:26"><name pos:start="509:24" pos:end="509:26">ctx</name></expr></argument>, <argument pos:start="509:29" pos:end="509:38"><expr pos:start="509:29" pos:end="509:38"><name pos:start="509:29" pos:end="509:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:41"><expr pos:start="511:13" pos:end="511:40"><call pos:start="511:13" pos:end="511:40"><name pos:start="511:13" pos:end="511:22">gen_muldiv</name><argument_list pos:start="511:23" pos:end="511:40">(<argument pos:start="511:24" pos:end="511:26"><expr pos:start="511:24" pos:end="511:26"><name pos:start="511:24" pos:end="511:26">ctx</name></expr></argument>, <argument pos:start="511:29" pos:end="511:31"><expr pos:start="511:29" pos:end="511:31"><name pos:start="511:29" pos:end="511:31">op1</name></expr></argument>, <argument pos:start="511:34" pos:end="511:35"><expr pos:start="511:34" pos:end="511:35"><name pos:start="511:34" pos:end="511:35">rs</name></expr></argument>, <argument pos:start="511:38" pos:end="511:39"><expr pos:start="511:38" pos:end="511:39"><name pos:start="511:38" pos:end="511:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="513:13" pos:end="513:18">break;</break>

        <case pos:start="515:9" pos:end="515:21">case <expr pos:start="515:14" pos:end="515:20"><name pos:start="515:14" pos:end="515:20">OPC_MUL</name></expr>:</case>

            <expr_stmt pos:start="517:13" pos:end="517:44"><expr pos:start="517:13" pos:end="517:43"><call pos:start="517:13" pos:end="517:43"><name pos:start="517:13" pos:end="517:21">gen_arith</name><argument_list pos:start="517:22" pos:end="517:43">(<argument pos:start="517:23" pos:end="517:25"><expr pos:start="517:23" pos:end="517:25"><name pos:start="517:23" pos:end="517:25">ctx</name></expr></argument>, <argument pos:start="517:28" pos:end="517:30"><expr pos:start="517:28" pos:end="517:30"><name pos:start="517:28" pos:end="517:30">op1</name></expr></argument>, <argument pos:start="517:33" pos:end="517:34"><expr pos:start="517:33" pos:end="517:34"><name pos:start="517:33" pos:end="517:34">rd</name></expr></argument>, <argument pos:start="517:37" pos:end="517:38"><expr pos:start="517:37" pos:end="517:38"><name pos:start="517:37" pos:end="517:38">rs</name></expr></argument>, <argument pos:start="517:41" pos:end="517:42"><expr pos:start="517:41" pos:end="517:42"><name pos:start="517:41" pos:end="517:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="519:13" pos:end="519:18">break;</break>

        <case pos:start="521:9" pos:end="521:21">case <expr pos:start="521:14" pos:end="521:20"><name pos:start="521:14" pos:end="521:20">OPC_CLO</name></expr>:</case>

        <case pos:start="523:9" pos:end="523:21">case <expr pos:start="523:14" pos:end="523:20"><name pos:start="523:14" pos:end="523:20">OPC_CLZ</name></expr>:</case>

            <expr_stmt pos:start="525:13" pos:end="525:40"><expr pos:start="525:13" pos:end="525:39"><call pos:start="525:13" pos:end="525:39"><name pos:start="525:13" pos:end="525:22">check_insn</name><argument_list pos:start="525:23" pos:end="525:39">(<argument pos:start="525:24" pos:end="525:26"><expr pos:start="525:24" pos:end="525:26"><name pos:start="525:24" pos:end="525:26">ctx</name></expr></argument>, <argument pos:start="525:29" pos:end="525:38"><expr pos:start="525:29" pos:end="525:38"><name pos:start="525:29" pos:end="525:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:37"><expr pos:start="527:13" pos:end="527:36"><call pos:start="527:13" pos:end="527:36"><name pos:start="527:13" pos:end="527:18">gen_cl</name><argument_list pos:start="527:19" pos:end="527:36">(<argument pos:start="527:20" pos:end="527:22"><expr pos:start="527:20" pos:end="527:22"><name pos:start="527:20" pos:end="527:22">ctx</name></expr></argument>, <argument pos:start="527:25" pos:end="527:27"><expr pos:start="527:25" pos:end="527:27"><name pos:start="527:25" pos:end="527:27">op1</name></expr></argument>, <argument pos:start="527:30" pos:end="527:31"><expr pos:start="527:30" pos:end="527:31"><name pos:start="527:30" pos:end="527:31">rd</name></expr></argument>, <argument pos:start="527:34" pos:end="527:35"><expr pos:start="527:34" pos:end="527:35"><name pos:start="527:34" pos:end="527:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="529:13" pos:end="529:18">break;</break>

        <case pos:start="531:9" pos:end="531:23">case <expr pos:start="531:14" pos:end="531:22"><name pos:start="531:14" pos:end="531:22">OPC_SDBBP</name></expr>:</case>

            <comment type="block" pos:start="533:13" pos:end="537:15">/* XXX: not clear which exception should be raised

             *      when in debug mode...

             */</comment>

            <expr_stmt pos:start="539:13" pos:end="539:40"><expr pos:start="539:13" pos:end="539:39"><call pos:start="539:13" pos:end="539:39"><name pos:start="539:13" pos:end="539:22">check_insn</name><argument_list pos:start="539:23" pos:end="539:39">(<argument pos:start="539:24" pos:end="539:26"><expr pos:start="539:24" pos:end="539:26"><name pos:start="539:24" pos:end="539:26">ctx</name></expr></argument>, <argument pos:start="539:29" pos:end="539:38"><expr pos:start="539:29" pos:end="539:38"><name pos:start="539:29" pos:end="539:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="541:13" pos:end="549:13"><if pos:start="541:13" pos:end="545:13">if <condition pos:start="541:16" pos:end="541:47">(<expr pos:start="541:17" pos:end="541:46"><operator pos:start="541:17" pos:end="541:17">!</operator><operator pos:start="541:18" pos:end="541:18">(</operator><name pos:start="541:19" pos:end="541:29"><name pos:start="541:19" pos:end="541:21">ctx</name><operator pos:start="541:22" pos:end="541:23">-&gt;</operator><name pos:start="541:24" pos:end="541:29">hflags</name></name> <operator pos:start="541:31" pos:end="541:31">&amp;</operator> <name pos:start="541:33" pos:end="541:45">MIPS_HFLAG_DM</name><operator pos:start="541:46" pos:end="541:46">)</operator></expr>)</condition> <block pos:start="541:49" pos:end="545:13">{<block_content pos:start="543:17" pos:end="543:50">

                <expr_stmt pos:start="543:17" pos:end="543:50"><expr pos:start="543:17" pos:end="543:49"><call pos:start="543:17" pos:end="543:49"><name pos:start="543:17" pos:end="543:34">generate_exception</name><argument_list pos:start="543:35" pos:end="543:49">(<argument pos:start="543:36" pos:end="543:38"><expr pos:start="543:36" pos:end="543:38"><name pos:start="543:36" pos:end="543:38">ctx</name></expr></argument>, <argument pos:start="543:41" pos:end="543:48"><expr pos:start="543:41" pos:end="543:48"><name pos:start="543:41" pos:end="543:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="545:15" pos:end="549:13">else <block pos:start="545:20" pos:end="549:13">{<block_content pos:start="547:17" pos:end="547:50">

                <expr_stmt pos:start="547:17" pos:end="547:50"><expr pos:start="547:17" pos:end="547:49"><call pos:start="547:17" pos:end="547:49"><name pos:start="547:17" pos:end="547:34">generate_exception</name><argument_list pos:start="547:35" pos:end="547:49">(<argument pos:start="547:36" pos:end="547:38"><expr pos:start="547:36" pos:end="547:38"><name pos:start="547:36" pos:end="547:38">ctx</name></expr></argument>, <argument pos:start="547:41" pos:end="547:48"><expr pos:start="547:41" pos:end="547:48"><name pos:start="547:41" pos:end="547:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="551:13" pos:end="551:31">/* Treat as NOP. */</comment>

            <break pos:start="553:13" pos:end="553:18">break;</break>

        <case pos:start="555:9" pos:end="555:26">case <expr pos:start="555:14" pos:end="555:25"><name pos:start="555:14" pos:end="555:25">OPC_DIV_G_2F</name></expr>:</case>

        <case pos:start="557:9" pos:end="557:27">case <expr pos:start="557:14" pos:end="557:26"><name pos:start="557:14" pos:end="557:26">OPC_DIVU_G_2F</name></expr>:</case>

        <case pos:start="559:9" pos:end="559:27">case <expr pos:start="559:14" pos:end="559:26"><name pos:start="559:14" pos:end="559:26">OPC_MULT_G_2F</name></expr>:</case>

        <case pos:start="561:9" pos:end="561:28">case <expr pos:start="561:14" pos:end="561:27"><name pos:start="561:14" pos:end="561:27">OPC_MULTU_G_2F</name></expr>:</case>

        <case pos:start="563:9" pos:end="563:26">case <expr pos:start="563:14" pos:end="563:25"><name pos:start="563:14" pos:end="563:25">OPC_MOD_G_2F</name></expr>:</case>

        <case pos:start="565:9" pos:end="565:27">case <expr pos:start="565:14" pos:end="565:26"><name pos:start="565:14" pos:end="565:26">OPC_MODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="567:13" pos:end="567:45"><expr pos:start="567:13" pos:end="567:44"><call pos:start="567:13" pos:end="567:44"><name pos:start="567:13" pos:end="567:22">check_insn</name><argument_list pos:start="567:23" pos:end="567:44">(<argument pos:start="567:24" pos:end="567:26"><expr pos:start="567:24" pos:end="567:26"><name pos:start="567:24" pos:end="567:26">ctx</name></expr></argument>, <argument pos:start="567:29" pos:end="567:43"><expr pos:start="567:29" pos:end="567:43"><name pos:start="567:29" pos:end="567:43">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:55"><expr pos:start="569:13" pos:end="569:54"><call pos:start="569:13" pos:end="569:54"><name pos:start="569:13" pos:end="569:32">gen_loongson_integer</name><argument_list pos:start="569:33" pos:end="569:54">(<argument pos:start="569:34" pos:end="569:36"><expr pos:start="569:34" pos:end="569:36"><name pos:start="569:34" pos:end="569:36">ctx</name></expr></argument>, <argument pos:start="569:39" pos:end="569:41"><expr pos:start="569:39" pos:end="569:41"><name pos:start="569:39" pos:end="569:41">op1</name></expr></argument>, <argument pos:start="569:44" pos:end="569:45"><expr pos:start="569:44" pos:end="569:45"><name pos:start="569:44" pos:end="569:45">rd</name></expr></argument>, <argument pos:start="569:48" pos:end="569:49"><expr pos:start="569:48" pos:end="569:49"><name pos:start="569:48" pos:end="569:49">rs</name></expr></argument>, <argument pos:start="569:52" pos:end="569:53"><expr pos:start="569:52" pos:end="569:53"><name pos:start="569:52" pos:end="569:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="571:13" pos:end="574:0">break;</break>

<cpp:if pos:start="573:1" pos:end="573:26">#<cpp:directive pos:start="573:2" pos:end="573:3">if</cpp:directive> <expr pos:start="573:5" pos:end="573:26"><call pos:start="573:5" pos:end="573:26"><name pos:start="573:5" pos:end="573:11">defined</name><argument_list pos:start="573:12" pos:end="573:26">(<argument pos:start="573:13" pos:end="573:25"><expr pos:start="573:13" pos:end="573:25"><name pos:start="573:13" pos:end="573:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="575:9" pos:end="575:22">case <expr pos:start="575:14" pos:end="575:21"><name pos:start="575:14" pos:end="575:21">OPC_DCLO</name></expr>:</case>

        <case pos:start="577:9" pos:end="577:22">case <expr pos:start="577:14" pos:end="577:21"><name pos:start="577:14" pos:end="577:21">OPC_DCLZ</name></expr>:</case>

            <expr_stmt pos:start="579:13" pos:end="579:40"><expr pos:start="579:13" pos:end="579:39"><call pos:start="579:13" pos:end="579:39"><name pos:start="579:13" pos:end="579:22">check_insn</name><argument_list pos:start="579:23" pos:end="579:39">(<argument pos:start="579:24" pos:end="579:26"><expr pos:start="579:24" pos:end="579:26"><name pos:start="579:24" pos:end="579:26">ctx</name></expr></argument>, <argument pos:start="579:29" pos:end="579:38"><expr pos:start="579:29" pos:end="579:38"><name pos:start="579:29" pos:end="579:38">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:31"><expr pos:start="581:13" pos:end="581:30"><call pos:start="581:13" pos:end="581:30"><name pos:start="581:13" pos:end="581:25">check_mips_64</name><argument_list pos:start="581:26" pos:end="581:30">(<argument pos:start="581:27" pos:end="581:29"><expr pos:start="581:27" pos:end="581:29"><name pos:start="581:27" pos:end="581:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:37"><expr pos:start="583:13" pos:end="583:36"><call pos:start="583:13" pos:end="583:36"><name pos:start="583:13" pos:end="583:18">gen_cl</name><argument_list pos:start="583:19" pos:end="583:36">(<argument pos:start="583:20" pos:end="583:22"><expr pos:start="583:20" pos:end="583:22"><name pos:start="583:20" pos:end="583:22">ctx</name></expr></argument>, <argument pos:start="583:25" pos:end="583:27"><expr pos:start="583:25" pos:end="583:27"><name pos:start="583:25" pos:end="583:27">op1</name></expr></argument>, <argument pos:start="583:30" pos:end="583:31"><expr pos:start="583:30" pos:end="583:31"><name pos:start="583:30" pos:end="583:31">rd</name></expr></argument>, <argument pos:start="583:34" pos:end="583:35"><expr pos:start="583:34" pos:end="583:35"><name pos:start="583:34" pos:end="583:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="585:13" pos:end="585:18">break;</break>

        <case pos:start="587:9" pos:end="587:28">case <expr pos:start="587:14" pos:end="587:27"><name pos:start="587:14" pos:end="587:27">OPC_DMULT_G_2F</name></expr>:</case>

        <case pos:start="589:9" pos:end="589:29">case <expr pos:start="589:14" pos:end="589:28"><name pos:start="589:14" pos:end="589:28">OPC_DMULTU_G_2F</name></expr>:</case>

        <case pos:start="591:9" pos:end="591:27">case <expr pos:start="591:14" pos:end="591:26"><name pos:start="591:14" pos:end="591:26">OPC_DDIV_G_2F</name></expr>:</case>

        <case pos:start="593:9" pos:end="593:28">case <expr pos:start="593:14" pos:end="593:27"><name pos:start="593:14" pos:end="593:27">OPC_DDIVU_G_2F</name></expr>:</case>

        <case pos:start="595:9" pos:end="595:27">case <expr pos:start="595:14" pos:end="595:26"><name pos:start="595:14" pos:end="595:26">OPC_DMOD_G_2F</name></expr>:</case>

        <case pos:start="597:9" pos:end="597:28">case <expr pos:start="597:14" pos:end="597:27"><name pos:start="597:14" pos:end="597:27">OPC_DMODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="599:13" pos:end="599:45"><expr pos:start="599:13" pos:end="599:44"><call pos:start="599:13" pos:end="599:44"><name pos:start="599:13" pos:end="599:22">check_insn</name><argument_list pos:start="599:23" pos:end="599:44">(<argument pos:start="599:24" pos:end="599:26"><expr pos:start="599:24" pos:end="599:26"><name pos:start="599:24" pos:end="599:26">ctx</name></expr></argument>, <argument pos:start="599:29" pos:end="599:43"><expr pos:start="599:29" pos:end="599:43"><name pos:start="599:29" pos:end="599:43">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="601:13" pos:end="601:55"><expr pos:start="601:13" pos:end="601:54"><call pos:start="601:13" pos:end="601:54"><name pos:start="601:13" pos:end="601:32">gen_loongson_integer</name><argument_list pos:start="601:33" pos:end="601:54">(<argument pos:start="601:34" pos:end="601:36"><expr pos:start="601:34" pos:end="601:36"><name pos:start="601:34" pos:end="601:36">ctx</name></expr></argument>, <argument pos:start="601:39" pos:end="601:41"><expr pos:start="601:39" pos:end="601:41"><name pos:start="601:39" pos:end="601:41">op1</name></expr></argument>, <argument pos:start="601:44" pos:end="601:45"><expr pos:start="601:44" pos:end="601:45"><name pos:start="601:44" pos:end="601:45">rd</name></expr></argument>, <argument pos:start="601:48" pos:end="601:49"><expr pos:start="601:48" pos:end="601:49"><name pos:start="601:48" pos:end="601:49">rs</name></expr></argument>, <argument pos:start="601:52" pos:end="601:53"><expr pos:start="601:52" pos:end="601:53"><name pos:start="601:52" pos:end="601:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="603:13" pos:end="606:0">break;</break>

<cpp:endif pos:start="605:1" pos:end="605:6">#<cpp:directive pos:start="605:2" pos:end="605:6">endif</cpp:directive></cpp:endif>

        <default pos:start="607:9" pos:end="607:16">default:</default>            <comment type="block" pos:start="607:29" pos:end="607:41">/* Invalid */</comment>

            <expr_stmt pos:start="609:13" pos:end="609:35"><expr pos:start="609:13" pos:end="609:34"><call pos:start="609:13" pos:end="609:34"><name pos:start="609:13" pos:end="609:22">MIPS_INVAL</name><argument_list pos:start="609:23" pos:end="609:34">(<argument pos:start="609:24" pos:end="609:33"><expr pos:start="609:24" pos:end="609:33"><literal type="string" pos:start="609:24" pos:end="609:33">"special2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="611:13" pos:end="611:45"><expr pos:start="611:13" pos:end="611:44"><call pos:start="611:13" pos:end="611:44"><name pos:start="611:13" pos:end="611:30">generate_exception</name><argument_list pos:start="611:31" pos:end="611:44">(<argument pos:start="611:32" pos:end="611:34"><expr pos:start="611:32" pos:end="611:34"><name pos:start="611:32" pos:end="611:34">ctx</name></expr></argument>, <argument pos:start="611:37" pos:end="611:43"><expr pos:start="611:37" pos:end="611:43"><name pos:start="611:37" pos:end="611:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="613:13" pos:end="613:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="617:9" pos:end="617:14">break;</break>

    <case pos:start="619:5" pos:end="619:22">case <expr pos:start="619:10" pos:end="619:21"><name pos:start="619:10" pos:end="619:21">OPC_SPECIAL3</name></expr>:</case>

        <expr_stmt pos:start="621:9" pos:end="621:41"><expr pos:start="621:9" pos:end="621:40"><name pos:start="621:9" pos:end="621:11">op1</name> <operator pos:start="621:13" pos:end="621:13">=</operator> <call pos:start="621:15" pos:end="621:40"><name pos:start="621:15" pos:end="621:27">MASK_SPECIAL3</name><argument_list pos:start="621:28" pos:end="621:40">(<argument pos:start="621:29" pos:end="621:39"><expr pos:start="621:29" pos:end="621:39"><name pos:start="621:29" pos:end="621:39"><name pos:start="621:29" pos:end="621:31">ctx</name><operator pos:start="621:32" pos:end="621:33">-&gt;</operator><name pos:start="621:34" pos:end="621:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="623:9" pos:end="1743:9">switch <condition pos:start="623:16" pos:end="623:20">(<expr pos:start="623:17" pos:end="623:19"><name pos:start="623:17" pos:end="623:19">op1</name></expr>)</condition> <block pos:start="623:22" pos:end="1743:9">{<block_content pos:start="625:9" pos:end="1741:18">

        <case pos:start="625:9" pos:end="625:21">case <expr pos:start="625:14" pos:end="625:20"><name pos:start="625:14" pos:end="625:20">OPC_EXT</name></expr>:</case>

        <case pos:start="627:9" pos:end="627:21">case <expr pos:start="627:14" pos:end="627:20"><name pos:start="627:14" pos:end="627:20">OPC_INS</name></expr>:</case>

            <expr_stmt pos:start="629:13" pos:end="629:42"><expr pos:start="629:13" pos:end="629:41"><call pos:start="629:13" pos:end="629:41"><name pos:start="629:13" pos:end="629:22">check_insn</name><argument_list pos:start="629:23" pos:end="629:41">(<argument pos:start="629:24" pos:end="629:26"><expr pos:start="629:24" pos:end="629:26"><name pos:start="629:24" pos:end="629:26">ctx</name></expr></argument>, <argument pos:start="629:29" pos:end="629:40"><expr pos:start="629:29" pos:end="629:40"><name pos:start="629:29" pos:end="629:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:49"><expr pos:start="631:13" pos:end="631:48"><call pos:start="631:13" pos:end="631:48"><name pos:start="631:13" pos:end="631:22">gen_bitops</name><argument_list pos:start="631:23" pos:end="631:48">(<argument pos:start="631:24" pos:end="631:26"><expr pos:start="631:24" pos:end="631:26"><name pos:start="631:24" pos:end="631:26">ctx</name></expr></argument>, <argument pos:start="631:29" pos:end="631:31"><expr pos:start="631:29" pos:end="631:31"><name pos:start="631:29" pos:end="631:31">op1</name></expr></argument>, <argument pos:start="631:34" pos:end="631:35"><expr pos:start="631:34" pos:end="631:35"><name pos:start="631:34" pos:end="631:35">rt</name></expr></argument>, <argument pos:start="631:38" pos:end="631:39"><expr pos:start="631:38" pos:end="631:39"><name pos:start="631:38" pos:end="631:39">rs</name></expr></argument>, <argument pos:start="631:42" pos:end="631:43"><expr pos:start="631:42" pos:end="631:43"><name pos:start="631:42" pos:end="631:43">sa</name></expr></argument>, <argument pos:start="631:46" pos:end="631:47"><expr pos:start="631:46" pos:end="631:47"><name pos:start="631:46" pos:end="631:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="633:13" pos:end="633:18">break;</break>

        <case pos:start="635:9" pos:end="635:23">case <expr pos:start="635:14" pos:end="635:22"><name pos:start="635:14" pos:end="635:22">OPC_BSHFL</name></expr>:</case>

            <expr_stmt pos:start="637:13" pos:end="637:42"><expr pos:start="637:13" pos:end="637:41"><call pos:start="637:13" pos:end="637:41"><name pos:start="637:13" pos:end="637:22">check_insn</name><argument_list pos:start="637:23" pos:end="637:41">(<argument pos:start="637:24" pos:end="637:26"><expr pos:start="637:24" pos:end="637:26"><name pos:start="637:24" pos:end="637:26">ctx</name></expr></argument>, <argument pos:start="637:29" pos:end="637:40"><expr pos:start="637:29" pos:end="637:40"><name pos:start="637:29" pos:end="637:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:42"><expr pos:start="639:13" pos:end="639:41"><name pos:start="639:13" pos:end="639:15">op2</name> <operator pos:start="639:17" pos:end="639:17">=</operator> <call pos:start="639:19" pos:end="639:41"><name pos:start="639:19" pos:end="639:28">MASK_BSHFL</name><argument_list pos:start="639:29" pos:end="639:41">(<argument pos:start="639:30" pos:end="639:40"><expr pos:start="639:30" pos:end="639:40"><name pos:start="639:30" pos:end="639:40"><name pos:start="639:30" pos:end="639:32">ctx</name><operator pos:start="639:33" pos:end="639:34">-&gt;</operator><name pos:start="639:35" pos:end="639:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:40"><expr pos:start="641:13" pos:end="641:39"><call pos:start="641:13" pos:end="641:39"><name pos:start="641:13" pos:end="641:21">gen_bshfl</name><argument_list pos:start="641:22" pos:end="641:39">(<argument pos:start="641:23" pos:end="641:25"><expr pos:start="641:23" pos:end="641:25"><name pos:start="641:23" pos:end="641:25">ctx</name></expr></argument>, <argument pos:start="641:28" pos:end="641:30"><expr pos:start="641:28" pos:end="641:30"><name pos:start="641:28" pos:end="641:30">op2</name></expr></argument>, <argument pos:start="641:33" pos:end="641:34"><expr pos:start="641:33" pos:end="641:34"><name pos:start="641:33" pos:end="641:34">rt</name></expr></argument>, <argument pos:start="641:37" pos:end="641:38"><expr pos:start="641:37" pos:end="641:38"><name pos:start="641:37" pos:end="641:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>

        <case pos:start="645:9" pos:end="645:23">case <expr pos:start="645:14" pos:end="645:22"><name pos:start="645:14" pos:end="645:22">OPC_RDHWR</name></expr>:</case>

            <expr_stmt pos:start="647:13" pos:end="647:35"><expr pos:start="647:13" pos:end="647:34"><call pos:start="647:13" pos:end="647:34"><name pos:start="647:13" pos:end="647:21">gen_rdhwr</name><argument_list pos:start="647:22" pos:end="647:34">(<argument pos:start="647:23" pos:end="647:25"><expr pos:start="647:23" pos:end="647:25"><name pos:start="647:23" pos:end="647:25">ctx</name></expr></argument>, <argument pos:start="647:28" pos:end="647:29"><expr pos:start="647:28" pos:end="647:29"><name pos:start="647:28" pos:end="647:29">rt</name></expr></argument>, <argument pos:start="647:32" pos:end="647:33"><expr pos:start="647:32" pos:end="647:33"><name pos:start="647:32" pos:end="647:33">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:22">case <expr pos:start="651:14" pos:end="651:21"><name pos:start="651:14" pos:end="651:21">OPC_FORK</name></expr>:</case>

            <expr_stmt pos:start="653:13" pos:end="653:36"><expr pos:start="653:13" pos:end="653:35"><call pos:start="653:13" pos:end="653:35"><name pos:start="653:13" pos:end="653:22">check_insn</name><argument_list pos:start="653:23" pos:end="653:35">(<argument pos:start="653:24" pos:end="653:26"><expr pos:start="653:24" pos:end="653:26"><name pos:start="653:24" pos:end="653:26">ctx</name></expr></argument>, <argument pos:start="653:29" pos:end="653:34"><expr pos:start="653:29" pos:end="653:34"><name pos:start="653:29" pos:end="653:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="655:13" pos:end="673:13">{<block_content pos:start="657:17" pos:end="671:34">

                <decl_stmt pos:start="657:17" pos:end="657:41"><decl pos:start="657:17" pos:end="657:40"><type pos:start="657:17" pos:end="657:20"><name pos:start="657:17" pos:end="657:20">TCGv</name></type> <name pos:start="657:22" pos:end="657:23">t0</name> <init pos:start="657:25" pos:end="657:40">= <expr pos:start="657:27" pos:end="657:40"><call pos:start="657:27" pos:end="657:40"><name pos:start="657:27" pos:end="657:38">tcg_temp_new</name><argument_list pos:start="657:39" pos:end="657:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="659:17" pos:end="659:41"><decl pos:start="659:17" pos:end="659:40"><type pos:start="659:17" pos:end="659:20"><name pos:start="659:17" pos:end="659:20">TCGv</name></type> <name pos:start="659:22" pos:end="659:23">t1</name> <init pos:start="659:25" pos:end="659:40">= <expr pos:start="659:27" pos:end="659:40"><call pos:start="659:27" pos:end="659:40"><name pos:start="659:27" pos:end="659:38">tcg_temp_new</name><argument_list pos:start="659:39" pos:end="659:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="663:17" pos:end="663:37"><expr pos:start="663:17" pos:end="663:36"><call pos:start="663:17" pos:end="663:36"><name pos:start="663:17" pos:end="663:28">gen_load_gpr</name><argument_list pos:start="663:29" pos:end="663:36">(<argument pos:start="663:30" pos:end="663:31"><expr pos:start="663:30" pos:end="663:31"><name pos:start="663:30" pos:end="663:31">t0</name></expr></argument>, <argument pos:start="663:34" pos:end="663:35"><expr pos:start="663:34" pos:end="663:35"><name pos:start="663:34" pos:end="663:35">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:37"><expr pos:start="665:17" pos:end="665:36"><call pos:start="665:17" pos:end="665:36"><name pos:start="665:17" pos:end="665:28">gen_load_gpr</name><argument_list pos:start="665:29" pos:end="665:36">(<argument pos:start="665:30" pos:end="665:31"><expr pos:start="665:30" pos:end="665:31"><name pos:start="665:30" pos:end="665:31">t1</name></expr></argument>, <argument pos:start="665:34" pos:end="665:35"><expr pos:start="665:34" pos:end="665:35"><name pos:start="665:34" pos:end="665:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:40"><expr pos:start="667:17" pos:end="667:39"><call pos:start="667:17" pos:end="667:39"><name pos:start="667:17" pos:end="667:31">gen_helper_fork</name><argument_list pos:start="667:32" pos:end="667:39">(<argument pos:start="667:33" pos:end="667:34"><expr pos:start="667:33" pos:end="667:34"><name pos:start="667:33" pos:end="667:34">t0</name></expr></argument>, <argument pos:start="667:37" pos:end="667:38"><expr pos:start="667:37" pos:end="667:38"><name pos:start="667:37" pos:end="667:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="669:17" pos:end="669:34"><expr pos:start="669:17" pos:end="669:33"><call pos:start="669:17" pos:end="669:33"><name pos:start="669:17" pos:end="669:29">tcg_temp_free</name><argument_list pos:start="669:30" pos:end="669:33">(<argument pos:start="669:31" pos:end="669:32"><expr pos:start="669:31" pos:end="669:32"><name pos:start="669:31" pos:end="669:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="671:17" pos:end="671:34"><expr pos:start="671:17" pos:end="671:33"><call pos:start="671:17" pos:end="671:33"><name pos:start="671:17" pos:end="671:29">tcg_temp_free</name><argument_list pos:start="671:30" pos:end="671:33">(<argument pos:start="671:31" pos:end="671:32"><expr pos:start="671:31" pos:end="671:32"><name pos:start="671:31" pos:end="671:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="675:13" pos:end="675:18">break;</break>

        <case pos:start="677:9" pos:end="677:23">case <expr pos:start="677:14" pos:end="677:22"><name pos:start="677:14" pos:end="677:22">OPC_YIELD</name></expr>:</case>

            <expr_stmt pos:start="679:13" pos:end="679:36"><expr pos:start="679:13" pos:end="679:35"><call pos:start="679:13" pos:end="679:35"><name pos:start="679:13" pos:end="679:22">check_insn</name><argument_list pos:start="679:23" pos:end="679:35">(<argument pos:start="679:24" pos:end="679:26"><expr pos:start="679:24" pos:end="679:26"><name pos:start="679:24" pos:end="679:26">ctx</name></expr></argument>, <argument pos:start="679:29" pos:end="679:34"><expr pos:start="679:29" pos:end="679:34"><name pos:start="679:29" pos:end="679:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="681:13" pos:end="697:13">{<block_content pos:start="683:17" pos:end="695:34">

                <decl_stmt pos:start="683:17" pos:end="683:41"><decl pos:start="683:17" pos:end="683:40"><type pos:start="683:17" pos:end="683:20"><name pos:start="683:17" pos:end="683:20">TCGv</name></type> <name pos:start="683:22" pos:end="683:23">t0</name> <init pos:start="683:25" pos:end="683:40">= <expr pos:start="683:27" pos:end="683:40"><call pos:start="683:27" pos:end="683:40"><name pos:start="683:27" pos:end="683:38">tcg_temp_new</name><argument_list pos:start="683:39" pos:end="683:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="687:17" pos:end="687:39"><expr pos:start="687:17" pos:end="687:38"><call pos:start="687:17" pos:end="687:38"><name pos:start="687:17" pos:end="687:30">save_cpu_state</name><argument_list pos:start="687:31" pos:end="687:38">(<argument pos:start="687:32" pos:end="687:34"><expr pos:start="687:32" pos:end="687:34"><name pos:start="687:32" pos:end="687:34">ctx</name></expr></argument>, <argument pos:start="687:37" pos:end="687:37"><expr pos:start="687:37" pos:end="687:37"><literal type="number" pos:start="687:37" pos:end="687:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:37"><expr pos:start="689:17" pos:end="689:36"><call pos:start="689:17" pos:end="689:36"><name pos:start="689:17" pos:end="689:28">gen_load_gpr</name><argument_list pos:start="689:29" pos:end="689:36">(<argument pos:start="689:30" pos:end="689:31"><expr pos:start="689:30" pos:end="689:31"><name pos:start="689:30" pos:end="689:31">t0</name></expr></argument>, <argument pos:start="689:34" pos:end="689:35"><expr pos:start="689:34" pos:end="689:35"><name pos:start="689:34" pos:end="689:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="691:17" pos:end="691:50"><expr pos:start="691:17" pos:end="691:49"><call pos:start="691:17" pos:end="691:49"><name pos:start="691:17" pos:end="691:32">gen_helper_yield</name><argument_list pos:start="691:33" pos:end="691:49">(<argument pos:start="691:34" pos:end="691:35"><expr pos:start="691:34" pos:end="691:35"><name pos:start="691:34" pos:end="691:35">t0</name></expr></argument>, <argument pos:start="691:38" pos:end="691:44"><expr pos:start="691:38" pos:end="691:44"><name pos:start="691:38" pos:end="691:44">cpu_env</name></expr></argument>, <argument pos:start="691:47" pos:end="691:48"><expr pos:start="691:47" pos:end="691:48"><name pos:start="691:47" pos:end="691:48">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="693:17" pos:end="693:38"><expr pos:start="693:17" pos:end="693:37"><call pos:start="693:17" pos:end="693:37"><name pos:start="693:17" pos:end="693:29">gen_store_gpr</name><argument_list pos:start="693:30" pos:end="693:37">(<argument pos:start="693:31" pos:end="693:32"><expr pos:start="693:31" pos:end="693:32"><name pos:start="693:31" pos:end="693:32">t0</name></expr></argument>, <argument pos:start="693:35" pos:end="693:36"><expr pos:start="693:35" pos:end="693:36"><name pos:start="693:35" pos:end="693:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="695:17" pos:end="695:34"><expr pos:start="695:17" pos:end="695:33"><call pos:start="695:17" pos:end="695:33"><name pos:start="695:17" pos:end="695:29">tcg_temp_free</name><argument_list pos:start="695:30" pos:end="695:33">(<argument pos:start="695:31" pos:end="695:32"><expr pos:start="695:31" pos:end="695:32"><name pos:start="695:31" pos:end="695:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="699:13" pos:end="699:18">break;</break>

        <case pos:start="701:9" pos:end="701:44">case <expr pos:start="701:14" pos:end="701:43"><name pos:start="701:14" pos:end="701:25">OPC_DIV_G_2E</name> <operator pos:start="701:27" pos:end="701:29">...</operator> <name pos:start="701:31" pos:end="701:43">OPC_DIVU_G_2E</name></expr>:</case>

        <case pos:start="703:9" pos:end="703:44">case <expr pos:start="703:14" pos:end="703:43"><name pos:start="703:14" pos:end="703:25">OPC_MOD_G_2E</name> <operator pos:start="703:27" pos:end="703:29">...</operator> <name pos:start="703:31" pos:end="703:43">OPC_MODU_G_2E</name></expr>:</case>

        <case pos:start="705:9" pos:end="705:46">case <expr pos:start="705:14" pos:end="705:45"><name pos:start="705:14" pos:end="705:26">OPC_MULT_G_2E</name> <operator pos:start="705:28" pos:end="705:30">...</operator> <name pos:start="705:32" pos:end="705:45">OPC_MULTU_G_2E</name></expr>:</case>

        <comment type="block" pos:start="707:9" pos:end="709:36">/* OPC_MULT_G_2E, OPC_ADDUH_QB_DSP, OPC_MUL_PH_DSP have

         * the same mask and op1. */</comment>

            <if_stmt pos:start="711:13" pos:end="775:13"><if pos:start="711:13" pos:end="767:13">if <condition pos:start="711:16" pos:end="711:72">(<expr pos:start="711:17" pos:end="711:71"><operator pos:start="711:17" pos:end="711:17">(</operator><name pos:start="711:18" pos:end="711:32"><name pos:start="711:18" pos:end="711:20">ctx</name><operator pos:start="711:21" pos:end="711:22">-&gt;</operator><name pos:start="711:23" pos:end="711:32">insn_flags</name></name> <operator pos:start="711:34" pos:end="711:34">&amp;</operator> <name pos:start="711:36" pos:end="711:44">ASE_DSPR2</name><operator pos:start="711:45" pos:end="711:45">)</operator> <operator pos:start="711:47" pos:end="711:48">&amp;&amp;</operator> <operator pos:start="711:50" pos:end="711:50">(</operator><name pos:start="711:51" pos:end="711:53">op1</name> <operator pos:start="711:55" pos:end="711:56">==</operator> <name pos:start="711:58" pos:end="711:70">OPC_MULT_G_2E</name><operator pos:start="711:71" pos:end="711:71">)</operator></expr>)</condition> <block pos:start="711:74" pos:end="767:13">{<block_content pos:start="713:17" pos:end="765:17">

                <expr_stmt pos:start="713:17" pos:end="713:49"><expr pos:start="713:17" pos:end="713:48"><name pos:start="713:17" pos:end="713:19">op2</name> <operator pos:start="713:21" pos:end="713:21">=</operator> <call pos:start="713:23" pos:end="713:48"><name pos:start="713:23" pos:end="713:35">MASK_ADDUH_QB</name><argument_list pos:start="713:36" pos:end="713:48">(<argument pos:start="713:37" pos:end="713:47"><expr pos:start="713:37" pos:end="713:47"><name pos:start="713:37" pos:end="713:47"><name pos:start="713:37" pos:end="713:39">ctx</name><operator pos:start="713:40" pos:end="713:41">-&gt;</operator><name pos:start="713:42" pos:end="713:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="715:17" pos:end="765:17">switch <condition pos:start="715:24" pos:end="715:28">(<expr pos:start="715:25" pos:end="715:27"><name pos:start="715:25" pos:end="715:27">op2</name></expr>)</condition> <block pos:start="715:30" pos:end="765:17">{<block_content pos:start="717:17" pos:end="763:26">

                <case pos:start="717:17" pos:end="717:34">case <expr pos:start="717:22" pos:end="717:33"><name pos:start="717:22" pos:end="717:33">OPC_ADDUH_QB</name></expr>:</case>

                <case pos:start="719:17" pos:end="719:36">case <expr pos:start="719:22" pos:end="719:35"><name pos:start="719:22" pos:end="719:35">OPC_ADDUH_R_QB</name></expr>:</case>

                <case pos:start="721:17" pos:end="721:34">case <expr pos:start="721:22" pos:end="721:33"><name pos:start="721:22" pos:end="721:33">OPC_ADDQH_PH</name></expr>:</case>

                <case pos:start="723:17" pos:end="723:36">case <expr pos:start="723:22" pos:end="723:35"><name pos:start="723:22" pos:end="723:35">OPC_ADDQH_R_PH</name></expr>:</case>

                <case pos:start="725:17" pos:end="725:33">case <expr pos:start="725:22" pos:end="725:32"><name pos:start="725:22" pos:end="725:32">OPC_ADDQH_W</name></expr>:</case>

                <case pos:start="727:17" pos:end="727:35">case <expr pos:start="727:22" pos:end="727:34"><name pos:start="727:22" pos:end="727:34">OPC_ADDQH_R_W</name></expr>:</case>

                <case pos:start="729:17" pos:end="729:34">case <expr pos:start="729:22" pos:end="729:33"><name pos:start="729:22" pos:end="729:33">OPC_SUBUH_QB</name></expr>:</case>

                <case pos:start="731:17" pos:end="731:36">case <expr pos:start="731:22" pos:end="731:35"><name pos:start="731:22" pos:end="731:35">OPC_SUBUH_R_QB</name></expr>:</case>

                <case pos:start="733:17" pos:end="733:34">case <expr pos:start="733:22" pos:end="733:33"><name pos:start="733:22" pos:end="733:33">OPC_SUBQH_PH</name></expr>:</case>

                <case pos:start="735:17" pos:end="735:36">case <expr pos:start="735:22" pos:end="735:35"><name pos:start="735:22" pos:end="735:35">OPC_SUBQH_R_PH</name></expr>:</case>

                <case pos:start="737:17" pos:end="737:33">case <expr pos:start="737:22" pos:end="737:32"><name pos:start="737:22" pos:end="737:32">OPC_SUBQH_W</name></expr>:</case>

                <case pos:start="739:17" pos:end="739:35">case <expr pos:start="739:22" pos:end="739:34"><name pos:start="739:22" pos:end="739:34">OPC_SUBQH_R_W</name></expr>:</case>

                    <expr_stmt pos:start="741:21" pos:end="741:65"><expr pos:start="741:21" pos:end="741:64"><call pos:start="741:21" pos:end="741:64"><name pos:start="741:21" pos:end="741:37">gen_mipsdsp_arith</name><argument_list pos:start="741:38" pos:end="741:64">(<argument pos:start="741:39" pos:end="741:41"><expr pos:start="741:39" pos:end="741:41"><name pos:start="741:39" pos:end="741:41">ctx</name></expr></argument>, <argument pos:start="741:44" pos:end="741:46"><expr pos:start="741:44" pos:end="741:46"><name pos:start="741:44" pos:end="741:46">op1</name></expr></argument>, <argument pos:start="741:49" pos:end="741:51"><expr pos:start="741:49" pos:end="741:51"><name pos:start="741:49" pos:end="741:51">op2</name></expr></argument>, <argument pos:start="741:54" pos:end="741:55"><expr pos:start="741:54" pos:end="741:55"><name pos:start="741:54" pos:end="741:55">rd</name></expr></argument>, <argument pos:start="741:58" pos:end="741:59"><expr pos:start="741:58" pos:end="741:59"><name pos:start="741:58" pos:end="741:59">rs</name></expr></argument>, <argument pos:start="741:62" pos:end="741:63"><expr pos:start="741:62" pos:end="741:63"><name pos:start="741:62" pos:end="741:63">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="743:21" pos:end="743:26">break;</break>

                <case pos:start="745:17" pos:end="745:32">case <expr pos:start="745:22" pos:end="745:31"><name pos:start="745:22" pos:end="745:31">OPC_MUL_PH</name></expr>:</case>

                <case pos:start="747:17" pos:end="747:34">case <expr pos:start="747:22" pos:end="747:33"><name pos:start="747:22" pos:end="747:33">OPC_MUL_S_PH</name></expr>:</case>

                <case pos:start="749:17" pos:end="749:34">case <expr pos:start="749:22" pos:end="749:33"><name pos:start="749:22" pos:end="749:33">OPC_MULQ_S_W</name></expr>:</case>

                <case pos:start="751:17" pos:end="751:35">case <expr pos:start="751:22" pos:end="751:34"><name pos:start="751:22" pos:end="751:34">OPC_MULQ_RS_W</name></expr>:</case>

                    <expr_stmt pos:start="753:21" pos:end="753:71"><expr pos:start="753:21" pos:end="753:70"><call pos:start="753:21" pos:end="753:70"><name pos:start="753:21" pos:end="753:40">gen_mipsdsp_multiply</name><argument_list pos:start="753:41" pos:end="753:70">(<argument pos:start="753:42" pos:end="753:44"><expr pos:start="753:42" pos:end="753:44"><name pos:start="753:42" pos:end="753:44">ctx</name></expr></argument>, <argument pos:start="753:47" pos:end="753:49"><expr pos:start="753:47" pos:end="753:49"><name pos:start="753:47" pos:end="753:49">op1</name></expr></argument>, <argument pos:start="753:52" pos:end="753:54"><expr pos:start="753:52" pos:end="753:54"><name pos:start="753:52" pos:end="753:54">op2</name></expr></argument>, <argument pos:start="753:57" pos:end="753:58"><expr pos:start="753:57" pos:end="753:58"><name pos:start="753:57" pos:end="753:58">rd</name></expr></argument>, <argument pos:start="753:61" pos:end="753:62"><expr pos:start="753:61" pos:end="753:62"><name pos:start="753:61" pos:end="753:62">rs</name></expr></argument>, <argument pos:start="753:65" pos:end="753:66"><expr pos:start="753:65" pos:end="753:66"><name pos:start="753:65" pos:end="753:66">rt</name></expr></argument>, <argument pos:start="753:69" pos:end="753:69"><expr pos:start="753:69" pos:end="753:69"><literal type="number" pos:start="753:69" pos:end="753:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="755:21" pos:end="755:26">break;</break>

                <default pos:start="757:17" pos:end="757:24">default:</default>

                    <expr_stmt pos:start="759:21" pos:end="759:48"><expr pos:start="759:21" pos:end="759:47"><call pos:start="759:21" pos:end="759:47"><name pos:start="759:21" pos:end="759:30">MIPS_INVAL</name><argument_list pos:start="759:31" pos:end="759:47">(<argument pos:start="759:32" pos:end="759:46"><expr pos:start="759:32" pos:end="759:46"><literal type="string" pos:start="759:32" pos:end="759:46">"MASK ADDUH.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="761:21" pos:end="761:53"><expr pos:start="761:21" pos:end="761:52"><call pos:start="761:21" pos:end="761:52"><name pos:start="761:21" pos:end="761:38">generate_exception</name><argument_list pos:start="761:39" pos:end="761:52">(<argument pos:start="761:40" pos:end="761:42"><expr pos:start="761:40" pos:end="761:42"><name pos:start="761:40" pos:end="761:42">ctx</name></expr></argument>, <argument pos:start="761:45" pos:end="761:51"><expr pos:start="761:45" pos:end="761:51"><name pos:start="761:45" pos:end="761:51">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="763:21" pos:end="763:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="767:15" pos:end="771:13">else if <condition pos:start="767:23" pos:end="767:57">(<expr pos:start="767:24" pos:end="767:56"><name pos:start="767:24" pos:end="767:38"><name pos:start="767:24" pos:end="767:26">ctx</name><operator pos:start="767:27" pos:end="767:28">-&gt;</operator><name pos:start="767:29" pos:end="767:38">insn_flags</name></name> <operator pos:start="767:40" pos:end="767:40">&amp;</operator> <name pos:start="767:42" pos:end="767:56">INSN_LOONGSON2E</name></expr>)</condition> <block pos:start="767:59" pos:end="771:13">{<block_content pos:start="769:17" pos:end="769:59">

                <expr_stmt pos:start="769:17" pos:end="769:59"><expr pos:start="769:17" pos:end="769:58"><call pos:start="769:17" pos:end="769:58"><name pos:start="769:17" pos:end="769:36">gen_loongson_integer</name><argument_list pos:start="769:37" pos:end="769:58">(<argument pos:start="769:38" pos:end="769:40"><expr pos:start="769:38" pos:end="769:40"><name pos:start="769:38" pos:end="769:40">ctx</name></expr></argument>, <argument pos:start="769:43" pos:end="769:45"><expr pos:start="769:43" pos:end="769:45"><name pos:start="769:43" pos:end="769:45">op1</name></expr></argument>, <argument pos:start="769:48" pos:end="769:49"><expr pos:start="769:48" pos:end="769:49"><name pos:start="769:48" pos:end="769:49">rd</name></expr></argument>, <argument pos:start="769:52" pos:end="769:53"><expr pos:start="769:52" pos:end="769:53"><name pos:start="769:52" pos:end="769:53">rs</name></expr></argument>, <argument pos:start="769:56" pos:end="769:57"><expr pos:start="769:56" pos:end="769:57"><name pos:start="769:56" pos:end="769:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="771:15" pos:end="775:13">else <block pos:start="771:20" pos:end="775:13">{<block_content pos:start="773:17" pos:end="773:49">

                <expr_stmt pos:start="773:17" pos:end="773:49"><expr pos:start="773:17" pos:end="773:48"><call pos:start="773:17" pos:end="773:48"><name pos:start="773:17" pos:end="773:34">generate_exception</name><argument_list pos:start="773:35" pos:end="773:48">(<argument pos:start="773:36" pos:end="773:38"><expr pos:start="773:36" pos:end="773:38"><name pos:start="773:36" pos:end="773:38">ctx</name></expr></argument>, <argument pos:start="773:41" pos:end="773:47"><expr pos:start="773:41" pos:end="773:47"><name pos:start="773:41" pos:end="773:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="777:13" pos:end="777:18">break;</break>

        <case pos:start="779:9" pos:end="779:24">case <expr pos:start="779:14" pos:end="779:23"><name pos:start="779:14" pos:end="779:23">OPC_LX_DSP</name></expr>:</case>

            <expr_stmt pos:start="781:13" pos:end="781:39"><expr pos:start="781:13" pos:end="781:38"><name pos:start="781:13" pos:end="781:15">op2</name> <operator pos:start="781:17" pos:end="781:17">=</operator> <call pos:start="781:19" pos:end="781:38"><name pos:start="781:19" pos:end="781:25">MASK_LX</name><argument_list pos:start="781:26" pos:end="781:38">(<argument pos:start="781:27" pos:end="781:37"><expr pos:start="781:27" pos:end="781:37"><name pos:start="781:27" pos:end="781:37"><name pos:start="781:27" pos:end="781:29">ctx</name><operator pos:start="781:30" pos:end="781:31">-&gt;</operator><name pos:start="781:32" pos:end="781:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="783:13" pos:end="809:13">switch <condition pos:start="783:20" pos:end="783:24">(<expr pos:start="783:21" pos:end="783:23"><name pos:start="783:21" pos:end="783:23">op2</name></expr>)</condition> <block pos:start="783:26" pos:end="809:13">{<block_content pos:start="787:13" pos:end="807:22">

<cpp:if pos:start="785:1" pos:end="785:26">#<cpp:directive pos:start="785:2" pos:end="785:3">if</cpp:directive> <expr pos:start="785:5" pos:end="785:26"><call pos:start="785:5" pos:end="785:26"><name pos:start="785:5" pos:end="785:11">defined</name><argument_list pos:start="785:12" pos:end="785:26">(<argument pos:start="785:13" pos:end="785:25"><expr pos:start="785:13" pos:end="785:25"><name pos:start="785:13" pos:end="785:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="787:13" pos:end="790:0">case <expr pos:start="787:18" pos:end="787:24"><name pos:start="787:18" pos:end="787:24">OPC_LDX</name></expr>:</case>

<cpp:endif pos:start="789:1" pos:end="789:6">#<cpp:directive pos:start="789:2" pos:end="789:6">endif</cpp:directive></cpp:endif>

            <case pos:start="791:13" pos:end="791:26">case <expr pos:start="791:18" pos:end="791:25"><name pos:start="791:18" pos:end="791:25">OPC_LBUX</name></expr>:</case>

            <case pos:start="793:13" pos:end="793:25">case <expr pos:start="793:18" pos:end="793:24"><name pos:start="793:18" pos:end="793:24">OPC_LHX</name></expr>:</case>

            <case pos:start="795:13" pos:end="795:25">case <expr pos:start="795:18" pos:end="795:24"><name pos:start="795:18" pos:end="795:24">OPC_LWX</name></expr>:</case>

                <expr_stmt pos:start="797:17" pos:end="797:53"><expr pos:start="797:17" pos:end="797:52"><call pos:start="797:17" pos:end="797:52"><name pos:start="797:17" pos:end="797:30">gen_mipsdsp_ld</name><argument_list pos:start="797:31" pos:end="797:52">(<argument pos:start="797:32" pos:end="797:34"><expr pos:start="797:32" pos:end="797:34"><name pos:start="797:32" pos:end="797:34">ctx</name></expr></argument>, <argument pos:start="797:37" pos:end="797:39"><expr pos:start="797:37" pos:end="797:39"><name pos:start="797:37" pos:end="797:39">op2</name></expr></argument>, <argument pos:start="797:42" pos:end="797:43"><expr pos:start="797:42" pos:end="797:43"><name pos:start="797:42" pos:end="797:43">rd</name></expr></argument>, <argument pos:start="797:46" pos:end="797:47"><expr pos:start="797:46" pos:end="797:47"><name pos:start="797:46" pos:end="797:47">rs</name></expr></argument>, <argument pos:start="797:50" pos:end="797:51"><expr pos:start="797:50" pos:end="797:51"><name pos:start="797:50" pos:end="797:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="799:17" pos:end="799:22">break;</break>

            <default pos:start="801:13" pos:end="801:20">default:</default>            <comment type="block" pos:start="801:33" pos:end="801:45">/* Invalid */</comment>

                <expr_stmt pos:start="803:17" pos:end="803:38"><expr pos:start="803:17" pos:end="803:37"><call pos:start="803:17" pos:end="803:37"><name pos:start="803:17" pos:end="803:26">MIPS_INVAL</name><argument_list pos:start="803:27" pos:end="803:37">(<argument pos:start="803:28" pos:end="803:36"><expr pos:start="803:28" pos:end="803:36"><literal type="string" pos:start="803:28" pos:end="803:36">"MASK LX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="805:17" pos:end="805:49"><expr pos:start="805:17" pos:end="805:48"><call pos:start="805:17" pos:end="805:48"><name pos:start="805:17" pos:end="805:34">generate_exception</name><argument_list pos:start="805:35" pos:end="805:48">(<argument pos:start="805:36" pos:end="805:38"><expr pos:start="805:36" pos:end="805:38"><name pos:start="805:36" pos:end="805:38">ctx</name></expr></argument>, <argument pos:start="805:41" pos:end="805:47"><expr pos:start="805:41" pos:end="805:47"><name pos:start="805:41" pos:end="805:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="807:17" pos:end="807:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="811:13" pos:end="811:18">break;</break>

        <case pos:start="813:9" pos:end="813:31">case <expr pos:start="813:14" pos:end="813:30"><name pos:start="813:14" pos:end="813:30">OPC_ABSQ_S_PH_DSP</name></expr>:</case>

            <expr_stmt pos:start="815:13" pos:end="815:46"><expr pos:start="815:13" pos:end="815:45"><name pos:start="815:13" pos:end="815:15">op2</name> <operator pos:start="815:17" pos:end="815:17">=</operator> <call pos:start="815:19" pos:end="815:45"><name pos:start="815:19" pos:end="815:32">MASK_ABSQ_S_PH</name><argument_list pos:start="815:33" pos:end="815:45">(<argument pos:start="815:34" pos:end="815:44"><expr pos:start="815:34" pos:end="815:44"><name pos:start="815:34" pos:end="815:44"><name pos:start="815:34" pos:end="815:36">ctx</name><operator pos:start="815:37" pos:end="815:38">-&gt;</operator><name pos:start="815:39" pos:end="815:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="817:13" pos:end="871:13">switch <condition pos:start="817:20" pos:end="817:24">(<expr pos:start="817:21" pos:end="817:23"><name pos:start="817:21" pos:end="817:23">op2</name></expr>)</condition> <block pos:start="817:26" pos:end="871:13">{<block_content pos:start="819:13" pos:end="869:22">

            <case pos:start="819:13" pos:end="819:31">case <expr pos:start="819:18" pos:end="819:30"><name pos:start="819:18" pos:end="819:30">OPC_ABSQ_S_QB</name></expr>:</case>

            <case pos:start="821:13" pos:end="821:31">case <expr pos:start="821:18" pos:end="821:30"><name pos:start="821:18" pos:end="821:30">OPC_ABSQ_S_PH</name></expr>:</case>

            <case pos:start="823:13" pos:end="823:30">case <expr pos:start="823:18" pos:end="823:29"><name pos:start="823:18" pos:end="823:29">OPC_ABSQ_S_W</name></expr>:</case>

            <case pos:start="825:13" pos:end="825:34">case <expr pos:start="825:18" pos:end="825:33"><name pos:start="825:18" pos:end="825:33">OPC_PRECEQ_W_PHL</name></expr>:</case>

            <case pos:start="827:13" pos:end="827:34">case <expr pos:start="827:18" pos:end="827:33"><name pos:start="827:18" pos:end="827:33">OPC_PRECEQ_W_PHR</name></expr>:</case>

            <case pos:start="829:13" pos:end="829:36">case <expr pos:start="829:18" pos:end="829:35"><name pos:start="829:18" pos:end="829:35">OPC_PRECEQU_PH_QBL</name></expr>:</case>

            <case pos:start="831:13" pos:end="831:36">case <expr pos:start="831:18" pos:end="831:35"><name pos:start="831:18" pos:end="831:35">OPC_PRECEQU_PH_QBR</name></expr>:</case>

            <case pos:start="833:13" pos:end="833:37">case <expr pos:start="833:18" pos:end="833:36"><name pos:start="833:18" pos:end="833:36">OPC_PRECEQU_PH_QBLA</name></expr>:</case>

            <case pos:start="835:13" pos:end="835:37">case <expr pos:start="835:18" pos:end="835:36"><name pos:start="835:18" pos:end="835:36">OPC_PRECEQU_PH_QBRA</name></expr>:</case>

            <case pos:start="837:13" pos:end="837:35">case <expr pos:start="837:18" pos:end="837:34"><name pos:start="837:18" pos:end="837:34">OPC_PRECEU_PH_QBL</name></expr>:</case>

            <case pos:start="839:13" pos:end="839:35">case <expr pos:start="839:18" pos:end="839:34"><name pos:start="839:18" pos:end="839:34">OPC_PRECEU_PH_QBR</name></expr>:</case>

            <case pos:start="841:13" pos:end="841:36">case <expr pos:start="841:18" pos:end="841:35"><name pos:start="841:18" pos:end="841:35">OPC_PRECEU_PH_QBLA</name></expr>:</case>

            <case pos:start="843:13" pos:end="843:36">case <expr pos:start="843:18" pos:end="843:35"><name pos:start="843:18" pos:end="843:35">OPC_PRECEU_PH_QBRA</name></expr>:</case>

                <expr_stmt pos:start="845:17" pos:end="845:61"><expr pos:start="845:17" pos:end="845:60"><call pos:start="845:17" pos:end="845:60"><name pos:start="845:17" pos:end="845:33">gen_mipsdsp_arith</name><argument_list pos:start="845:34" pos:end="845:60">(<argument pos:start="845:35" pos:end="845:37"><expr pos:start="845:35" pos:end="845:37"><name pos:start="845:35" pos:end="845:37">ctx</name></expr></argument>, <argument pos:start="845:40" pos:end="845:42"><expr pos:start="845:40" pos:end="845:42"><name pos:start="845:40" pos:end="845:42">op1</name></expr></argument>, <argument pos:start="845:45" pos:end="845:47"><expr pos:start="845:45" pos:end="845:47"><name pos:start="845:45" pos:end="845:47">op2</name></expr></argument>, <argument pos:start="845:50" pos:end="845:51"><expr pos:start="845:50" pos:end="845:51"><name pos:start="845:50" pos:end="845:51">rd</name></expr></argument>, <argument pos:start="845:54" pos:end="845:55"><expr pos:start="845:54" pos:end="845:55"><name pos:start="845:54" pos:end="845:55">rs</name></expr></argument>, <argument pos:start="845:58" pos:end="845:59"><expr pos:start="845:58" pos:end="845:59"><name pos:start="845:58" pos:end="845:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="847:17" pos:end="847:22">break;</break>

            <case pos:start="849:13" pos:end="849:28">case <expr pos:start="849:18" pos:end="849:27"><name pos:start="849:18" pos:end="849:27">OPC_BITREV</name></expr>:</case>

            <case pos:start="851:13" pos:end="851:29">case <expr pos:start="851:18" pos:end="851:28"><name pos:start="851:18" pos:end="851:28">OPC_REPL_QB</name></expr>:</case>

            <case pos:start="853:13" pos:end="853:30">case <expr pos:start="853:18" pos:end="853:29"><name pos:start="853:18" pos:end="853:29">OPC_REPLV_QB</name></expr>:</case>

            <case pos:start="855:13" pos:end="855:29">case <expr pos:start="855:18" pos:end="855:28"><name pos:start="855:18" pos:end="855:28">OPC_REPL_PH</name></expr>:</case>

            <case pos:start="857:13" pos:end="857:30">case <expr pos:start="857:18" pos:end="857:29"><name pos:start="857:18" pos:end="857:29">OPC_REPLV_PH</name></expr>:</case>

                <expr_stmt pos:start="859:17" pos:end="859:59"><expr pos:start="859:17" pos:end="859:58"><call pos:start="859:17" pos:end="859:58"><name pos:start="859:17" pos:end="859:35">gen_mipsdsp_bitinsn</name><argument_list pos:start="859:36" pos:end="859:58">(<argument pos:start="859:37" pos:end="859:39"><expr pos:start="859:37" pos:end="859:39"><name pos:start="859:37" pos:end="859:39">ctx</name></expr></argument>, <argument pos:start="859:42" pos:end="859:44"><expr pos:start="859:42" pos:end="859:44"><name pos:start="859:42" pos:end="859:44">op1</name></expr></argument>, <argument pos:start="859:47" pos:end="859:49"><expr pos:start="859:47" pos:end="859:49"><name pos:start="859:47" pos:end="859:49">op2</name></expr></argument>, <argument pos:start="859:52" pos:end="859:53"><expr pos:start="859:52" pos:end="859:53"><name pos:start="859:52" pos:end="859:53">rd</name></expr></argument>, <argument pos:start="859:56" pos:end="859:57"><expr pos:start="859:56" pos:end="859:57"><name pos:start="859:56" pos:end="859:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="861:17" pos:end="861:22">break;</break>

            <default pos:start="863:13" pos:end="863:20">default:</default>

                <expr_stmt pos:start="865:17" pos:end="865:45"><expr pos:start="865:17" pos:end="865:44"><call pos:start="865:17" pos:end="865:44"><name pos:start="865:17" pos:end="865:26">MIPS_INVAL</name><argument_list pos:start="865:27" pos:end="865:44">(<argument pos:start="865:28" pos:end="865:43"><expr pos:start="865:28" pos:end="865:43"><literal type="string" pos:start="865:28" pos:end="865:43">"MASK ABSQ_S.PH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="867:17" pos:end="867:49"><expr pos:start="867:17" pos:end="867:48"><call pos:start="867:17" pos:end="867:48"><name pos:start="867:17" pos:end="867:34">generate_exception</name><argument_list pos:start="867:35" pos:end="867:48">(<argument pos:start="867:36" pos:end="867:38"><expr pos:start="867:36" pos:end="867:38"><name pos:start="867:36" pos:end="867:38">ctx</name></expr></argument>, <argument pos:start="867:41" pos:end="867:47"><expr pos:start="867:41" pos:end="867:47"><name pos:start="867:41" pos:end="867:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="869:17" pos:end="869:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="873:13" pos:end="873:18">break;</break>

        <case pos:start="875:9" pos:end="875:29">case <expr pos:start="875:14" pos:end="875:28"><name pos:start="875:14" pos:end="875:28">OPC_ADDU_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="877:13" pos:end="877:44"><expr pos:start="877:13" pos:end="877:43"><name pos:start="877:13" pos:end="877:15">op2</name> <operator pos:start="877:17" pos:end="877:17">=</operator> <call pos:start="877:19" pos:end="877:43"><name pos:start="877:19" pos:end="877:30">MASK_ADDU_QB</name><argument_list pos:start="877:31" pos:end="877:43">(<argument pos:start="877:32" pos:end="877:42"><expr pos:start="877:32" pos:end="877:42"><name pos:start="877:32" pos:end="877:42"><name pos:start="877:32" pos:end="877:34">ctx</name><operator pos:start="877:35" pos:end="877:36">-&gt;</operator><name pos:start="877:37" pos:end="877:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="879:13" pos:end="947:13">switch <condition pos:start="879:20" pos:end="879:24">(<expr pos:start="879:21" pos:end="879:23"><name pos:start="879:21" pos:end="879:23">op2</name></expr>)</condition> <block pos:start="879:26" pos:end="947:13">{<block_content pos:start="881:13" pos:end="943:22">

            <case pos:start="881:13" pos:end="881:29">case <expr pos:start="881:18" pos:end="881:28"><name pos:start="881:18" pos:end="881:28">OPC_ADDQ_PH</name></expr>:</case>

            <case pos:start="883:13" pos:end="883:31">case <expr pos:start="883:18" pos:end="883:30"><name pos:start="883:18" pos:end="883:30">OPC_ADDQ_S_PH</name></expr>:</case>

            <case pos:start="885:13" pos:end="885:30">case <expr pos:start="885:18" pos:end="885:29"><name pos:start="885:18" pos:end="885:29">OPC_ADDQ_S_W</name></expr>:</case>

            <case pos:start="887:13" pos:end="887:29">case <expr pos:start="887:18" pos:end="887:28"><name pos:start="887:18" pos:end="887:28">OPC_ADDU_QB</name></expr>:</case>

            <case pos:start="889:13" pos:end="889:31">case <expr pos:start="889:18" pos:end="889:30"><name pos:start="889:18" pos:end="889:30">OPC_ADDU_S_QB</name></expr>:</case>

            <case pos:start="891:13" pos:end="891:29">case <expr pos:start="891:18" pos:end="891:28"><name pos:start="891:18" pos:end="891:28">OPC_ADDU_PH</name></expr>:</case>

            <case pos:start="893:13" pos:end="893:31">case <expr pos:start="893:18" pos:end="893:30"><name pos:start="893:18" pos:end="893:30">OPC_ADDU_S_PH</name></expr>:</case>

            <case pos:start="895:13" pos:end="895:29">case <expr pos:start="895:18" pos:end="895:28"><name pos:start="895:18" pos:end="895:28">OPC_SUBQ_PH</name></expr>:</case>

            <case pos:start="897:13" pos:end="897:31">case <expr pos:start="897:18" pos:end="897:30"><name pos:start="897:18" pos:end="897:30">OPC_SUBQ_S_PH</name></expr>:</case>

            <case pos:start="899:13" pos:end="899:30">case <expr pos:start="899:18" pos:end="899:29"><name pos:start="899:18" pos:end="899:29">OPC_SUBQ_S_W</name></expr>:</case>

            <case pos:start="901:13" pos:end="901:29">case <expr pos:start="901:18" pos:end="901:28"><name pos:start="901:18" pos:end="901:28">OPC_SUBU_QB</name></expr>:</case>

            <case pos:start="903:13" pos:end="903:31">case <expr pos:start="903:18" pos:end="903:30"><name pos:start="903:18" pos:end="903:30">OPC_SUBU_S_QB</name></expr>:</case>

            <case pos:start="905:13" pos:end="905:29">case <expr pos:start="905:18" pos:end="905:28"><name pos:start="905:18" pos:end="905:28">OPC_SUBU_PH</name></expr>:</case>

            <case pos:start="907:13" pos:end="907:31">case <expr pos:start="907:18" pos:end="907:30"><name pos:start="907:18" pos:end="907:30">OPC_SUBU_S_PH</name></expr>:</case>

            <case pos:start="909:13" pos:end="909:27">case <expr pos:start="909:18" pos:end="909:26"><name pos:start="909:18" pos:end="909:26">OPC_ADDSC</name></expr>:</case>

            <case pos:start="911:13" pos:end="911:27">case <expr pos:start="911:18" pos:end="911:26"><name pos:start="911:18" pos:end="911:26">OPC_ADDWC</name></expr>:</case>

            <case pos:start="913:13" pos:end="913:28">case <expr pos:start="913:18" pos:end="913:27"><name pos:start="913:18" pos:end="913:27">OPC_MODSUB</name></expr>:</case>

            <case pos:start="915:13" pos:end="915:32">case <expr pos:start="915:18" pos:end="915:31"><name pos:start="915:18" pos:end="915:31">OPC_RADDU_W_QB</name></expr>:</case>

                <expr_stmt pos:start="917:17" pos:end="917:61"><expr pos:start="917:17" pos:end="917:60"><call pos:start="917:17" pos:end="917:60"><name pos:start="917:17" pos:end="917:33">gen_mipsdsp_arith</name><argument_list pos:start="917:34" pos:end="917:60">(<argument pos:start="917:35" pos:end="917:37"><expr pos:start="917:35" pos:end="917:37"><name pos:start="917:35" pos:end="917:37">ctx</name></expr></argument>, <argument pos:start="917:40" pos:end="917:42"><expr pos:start="917:40" pos:end="917:42"><name pos:start="917:40" pos:end="917:42">op1</name></expr></argument>, <argument pos:start="917:45" pos:end="917:47"><expr pos:start="917:45" pos:end="917:47"><name pos:start="917:45" pos:end="917:47">op2</name></expr></argument>, <argument pos:start="917:50" pos:end="917:51"><expr pos:start="917:50" pos:end="917:51"><name pos:start="917:50" pos:end="917:51">rd</name></expr></argument>, <argument pos:start="917:54" pos:end="917:55"><expr pos:start="917:54" pos:end="917:55"><name pos:start="917:54" pos:end="917:55">rs</name></expr></argument>, <argument pos:start="917:58" pos:end="917:59"><expr pos:start="917:58" pos:end="917:59"><name pos:start="917:58" pos:end="917:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="919:17" pos:end="919:22">break;</break>

            <case pos:start="921:13" pos:end="921:36">case <expr pos:start="921:18" pos:end="921:35"><name pos:start="921:18" pos:end="921:35">OPC_MULEU_S_PH_QBL</name></expr>:</case>

            <case pos:start="923:13" pos:end="923:36">case <expr pos:start="923:18" pos:end="923:35"><name pos:start="923:18" pos:end="923:35">OPC_MULEU_S_PH_QBR</name></expr>:</case>

            <case pos:start="925:13" pos:end="925:32">case <expr pos:start="925:18" pos:end="925:31"><name pos:start="925:18" pos:end="925:31">OPC_MULQ_RS_PH</name></expr>:</case>

            <case pos:start="927:13" pos:end="927:35">case <expr pos:start="927:18" pos:end="927:34"><name pos:start="927:18" pos:end="927:34">OPC_MULEQ_S_W_PHL</name></expr>:</case>

            <case pos:start="929:13" pos:end="929:35">case <expr pos:start="929:18" pos:end="929:34"><name pos:start="929:18" pos:end="929:34">OPC_MULEQ_S_W_PHR</name></expr>:</case>

            <case pos:start="931:13" pos:end="931:31">case <expr pos:start="931:18" pos:end="931:30"><name pos:start="931:18" pos:end="931:30">OPC_MULQ_S_PH</name></expr>:</case>

                <expr_stmt pos:start="933:17" pos:end="933:67"><expr pos:start="933:17" pos:end="933:66"><call pos:start="933:17" pos:end="933:66"><name pos:start="933:17" pos:end="933:36">gen_mipsdsp_multiply</name><argument_list pos:start="933:37" pos:end="933:66">(<argument pos:start="933:38" pos:end="933:40"><expr pos:start="933:38" pos:end="933:40"><name pos:start="933:38" pos:end="933:40">ctx</name></expr></argument>, <argument pos:start="933:43" pos:end="933:45"><expr pos:start="933:43" pos:end="933:45"><name pos:start="933:43" pos:end="933:45">op1</name></expr></argument>, <argument pos:start="933:48" pos:end="933:50"><expr pos:start="933:48" pos:end="933:50"><name pos:start="933:48" pos:end="933:50">op2</name></expr></argument>, <argument pos:start="933:53" pos:end="933:54"><expr pos:start="933:53" pos:end="933:54"><name pos:start="933:53" pos:end="933:54">rd</name></expr></argument>, <argument pos:start="933:57" pos:end="933:58"><expr pos:start="933:57" pos:end="933:58"><name pos:start="933:57" pos:end="933:58">rs</name></expr></argument>, <argument pos:start="933:61" pos:end="933:62"><expr pos:start="933:61" pos:end="933:62"><name pos:start="933:61" pos:end="933:62">rt</name></expr></argument>, <argument pos:start="933:65" pos:end="933:65"><expr pos:start="933:65" pos:end="933:65"><literal type="number" pos:start="933:65" pos:end="933:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="935:17" pos:end="935:22">break;</break>

            <default pos:start="937:13" pos:end="937:20">default:</default>            <comment type="block" pos:start="937:33" pos:end="937:45">/* Invalid */</comment>

                <expr_stmt pos:start="939:17" pos:end="939:43"><expr pos:start="939:17" pos:end="939:42"><call pos:start="939:17" pos:end="939:42"><name pos:start="939:17" pos:end="939:26">MIPS_INVAL</name><argument_list pos:start="939:27" pos:end="939:42">(<argument pos:start="939:28" pos:end="939:41"><expr pos:start="939:28" pos:end="939:41"><literal type="string" pos:start="939:28" pos:end="939:41">"MASK ADDU.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="941:17" pos:end="941:49"><expr pos:start="941:17" pos:end="941:48"><call pos:start="941:17" pos:end="941:48"><name pos:start="941:17" pos:end="941:34">generate_exception</name><argument_list pos:start="941:35" pos:end="941:48">(<argument pos:start="941:36" pos:end="941:38"><expr pos:start="941:36" pos:end="941:38"><name pos:start="941:36" pos:end="941:38">ctx</name></expr></argument>, <argument pos:start="941:41" pos:end="941:47"><expr pos:start="941:41" pos:end="941:47"><name pos:start="941:41" pos:end="941:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="943:17" pos:end="943:22">break;</break>



            </block_content>}</block></switch>

            <break pos:start="949:13" pos:end="949:18">break;</break>

        <case pos:start="951:9" pos:end="951:32">case <expr pos:start="951:14" pos:end="951:31"><name pos:start="951:14" pos:end="951:31">OPC_CMPU_EQ_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="953:13" pos:end="953:47"><expr pos:start="953:13" pos:end="953:46"><name pos:start="953:13" pos:end="953:15">op2</name> <operator pos:start="953:17" pos:end="953:17">=</operator> <call pos:start="953:19" pos:end="953:46"><name pos:start="953:19" pos:end="953:33">MASK_CMPU_EQ_QB</name><argument_list pos:start="953:34" pos:end="953:46">(<argument pos:start="953:35" pos:end="953:45"><expr pos:start="953:35" pos:end="953:45"><name pos:start="953:35" pos:end="953:45"><name pos:start="953:35" pos:end="953:37">ctx</name><operator pos:start="953:38" pos:end="953:39">-&gt;</operator><name pos:start="953:40" pos:end="953:45">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="955:13" pos:end="1025:13">switch <condition pos:start="955:20" pos:end="955:24">(<expr pos:start="955:21" pos:end="955:23"><name pos:start="955:21" pos:end="955:23">op2</name></expr>)</condition> <block pos:start="955:26" pos:end="1025:13">{<block_content pos:start="957:13" pos:end="1023:22">

            <case pos:start="957:13" pos:end="957:36">case <expr pos:start="957:18" pos:end="957:35"><name pos:start="957:18" pos:end="957:35">OPC_PRECR_SRA_PH_W</name></expr>:</case>

            <case pos:start="959:13" pos:end="959:38">case <expr pos:start="959:18" pos:end="959:37"><name pos:start="959:18" pos:end="959:37">OPC_PRECR_SRA_R_PH_W</name></expr>:</case>

                <expr_stmt pos:start="961:17" pos:end="961:61"><expr pos:start="961:17" pos:end="961:60"><call pos:start="961:17" pos:end="961:60"><name pos:start="961:17" pos:end="961:33">gen_mipsdsp_arith</name><argument_list pos:start="961:34" pos:end="961:60">(<argument pos:start="961:35" pos:end="961:37"><expr pos:start="961:35" pos:end="961:37"><name pos:start="961:35" pos:end="961:37">ctx</name></expr></argument>, <argument pos:start="961:40" pos:end="961:42"><expr pos:start="961:40" pos:end="961:42"><name pos:start="961:40" pos:end="961:42">op1</name></expr></argument>, <argument pos:start="961:45" pos:end="961:47"><expr pos:start="961:45" pos:end="961:47"><name pos:start="961:45" pos:end="961:47">op2</name></expr></argument>, <argument pos:start="961:50" pos:end="961:51"><expr pos:start="961:50" pos:end="961:51"><name pos:start="961:50" pos:end="961:51">rt</name></expr></argument>, <argument pos:start="961:54" pos:end="961:55"><expr pos:start="961:54" pos:end="961:55"><name pos:start="961:54" pos:end="961:55">rs</name></expr></argument>, <argument pos:start="961:58" pos:end="961:59"><expr pos:start="961:58" pos:end="961:59"><name pos:start="961:58" pos:end="961:59">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="963:17" pos:end="963:22">break;</break>

            <case pos:start="965:13" pos:end="965:33">case <expr pos:start="965:18" pos:end="965:32"><name pos:start="965:18" pos:end="965:32">OPC_PRECR_QB_PH</name></expr>:</case>

            <case pos:start="967:13" pos:end="967:34">case <expr pos:start="967:18" pos:end="967:33"><name pos:start="967:18" pos:end="967:33">OPC_PRECRQ_QB_PH</name></expr>:</case>

            <case pos:start="969:13" pos:end="969:33">case <expr pos:start="969:18" pos:end="969:32"><name pos:start="969:18" pos:end="969:32">OPC_PRECRQ_PH_W</name></expr>:</case>

            <case pos:start="971:13" pos:end="971:36">case <expr pos:start="971:18" pos:end="971:35"><name pos:start="971:18" pos:end="971:35">OPC_PRECRQ_RS_PH_W</name></expr>:</case>

            <case pos:start="973:13" pos:end="973:37">case <expr pos:start="973:18" pos:end="973:36"><name pos:start="973:18" pos:end="973:36">OPC_PRECRQU_S_QB_PH</name></expr>:</case>

                <expr_stmt pos:start="975:17" pos:end="975:61"><expr pos:start="975:17" pos:end="975:60"><call pos:start="975:17" pos:end="975:60"><name pos:start="975:17" pos:end="975:33">gen_mipsdsp_arith</name><argument_list pos:start="975:34" pos:end="975:60">(<argument pos:start="975:35" pos:end="975:37"><expr pos:start="975:35" pos:end="975:37"><name pos:start="975:35" pos:end="975:37">ctx</name></expr></argument>, <argument pos:start="975:40" pos:end="975:42"><expr pos:start="975:40" pos:end="975:42"><name pos:start="975:40" pos:end="975:42">op1</name></expr></argument>, <argument pos:start="975:45" pos:end="975:47"><expr pos:start="975:45" pos:end="975:47"><name pos:start="975:45" pos:end="975:47">op2</name></expr></argument>, <argument pos:start="975:50" pos:end="975:51"><expr pos:start="975:50" pos:end="975:51"><name pos:start="975:50" pos:end="975:51">rd</name></expr></argument>, <argument pos:start="975:54" pos:end="975:55"><expr pos:start="975:54" pos:end="975:55"><name pos:start="975:54" pos:end="975:55">rs</name></expr></argument>, <argument pos:start="975:58" pos:end="975:59"><expr pos:start="975:58" pos:end="975:59"><name pos:start="975:58" pos:end="975:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="977:17" pos:end="977:22">break;</break>

            <case pos:start="979:13" pos:end="979:32">case <expr pos:start="979:18" pos:end="979:31"><name pos:start="979:18" pos:end="979:31">OPC_CMPU_EQ_QB</name></expr>:</case>

            <case pos:start="981:13" pos:end="981:32">case <expr pos:start="981:18" pos:end="981:31"><name pos:start="981:18" pos:end="981:31">OPC_CMPU_LT_QB</name></expr>:</case>

            <case pos:start="983:13" pos:end="983:32">case <expr pos:start="983:18" pos:end="983:31"><name pos:start="983:18" pos:end="983:31">OPC_CMPU_LE_QB</name></expr>:</case>

            <case pos:start="985:13" pos:end="985:31">case <expr pos:start="985:18" pos:end="985:30"><name pos:start="985:18" pos:end="985:30">OPC_CMP_EQ_PH</name></expr>:</case>

            <case pos:start="987:13" pos:end="987:31">case <expr pos:start="987:18" pos:end="987:30"><name pos:start="987:18" pos:end="987:30">OPC_CMP_LT_PH</name></expr>:</case>

            <case pos:start="989:13" pos:end="989:31">case <expr pos:start="989:18" pos:end="989:30"><name pos:start="989:18" pos:end="989:30">OPC_CMP_LE_PH</name></expr>:</case>

                <expr_stmt pos:start="991:17" pos:end="991:71"><expr pos:start="991:17" pos:end="991:70"><call pos:start="991:17" pos:end="991:70"><name pos:start="991:17" pos:end="991:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="991:41" pos:end="991:70">(<argument pos:start="991:42" pos:end="991:44"><expr pos:start="991:42" pos:end="991:44"><name pos:start="991:42" pos:end="991:44">ctx</name></expr></argument>, <argument pos:start="991:47" pos:end="991:49"><expr pos:start="991:47" pos:end="991:49"><name pos:start="991:47" pos:end="991:49">op1</name></expr></argument>, <argument pos:start="991:52" pos:end="991:54"><expr pos:start="991:52" pos:end="991:54"><name pos:start="991:52" pos:end="991:54">op2</name></expr></argument>, <argument pos:start="991:57" pos:end="991:58"><expr pos:start="991:57" pos:end="991:58"><name pos:start="991:57" pos:end="991:58">rd</name></expr></argument>, <argument pos:start="991:61" pos:end="991:62"><expr pos:start="991:61" pos:end="991:62"><name pos:start="991:61" pos:end="991:62">rs</name></expr></argument>, <argument pos:start="991:65" pos:end="991:66"><expr pos:start="991:65" pos:end="991:66"><name pos:start="991:65" pos:end="991:66">rt</name></expr></argument>, <argument pos:start="991:69" pos:end="991:69"><expr pos:start="991:69" pos:end="991:69"><literal type="number" pos:start="991:69" pos:end="991:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="993:17" pos:end="993:22">break;</break>

            <case pos:start="995:13" pos:end="995:33">case <expr pos:start="995:18" pos:end="995:32"><name pos:start="995:18" pos:end="995:32">OPC_CMPGU_EQ_QB</name></expr>:</case>

            <case pos:start="997:13" pos:end="997:33">case <expr pos:start="997:18" pos:end="997:32"><name pos:start="997:18" pos:end="997:32">OPC_CMPGU_LT_QB</name></expr>:</case>

            <case pos:start="999:13" pos:end="999:33">case <expr pos:start="999:18" pos:end="999:32"><name pos:start="999:18" pos:end="999:32">OPC_CMPGU_LE_QB</name></expr>:</case>

            <case pos:start="1001:13" pos:end="1001:34">case <expr pos:start="1001:18" pos:end="1001:33"><name pos:start="1001:18" pos:end="1001:33">OPC_CMPGDU_EQ_QB</name></expr>:</case>

            <case pos:start="1003:13" pos:end="1003:34">case <expr pos:start="1003:18" pos:end="1003:33"><name pos:start="1003:18" pos:end="1003:33">OPC_CMPGDU_LT_QB</name></expr>:</case>

            <case pos:start="1005:13" pos:end="1005:34">case <expr pos:start="1005:18" pos:end="1005:33"><name pos:start="1005:18" pos:end="1005:33">OPC_CMPGDU_LE_QB</name></expr>:</case>

            <case pos:start="1007:13" pos:end="1007:29">case <expr pos:start="1007:18" pos:end="1007:28"><name pos:start="1007:18" pos:end="1007:28">OPC_PICK_QB</name></expr>:</case>

            <case pos:start="1009:13" pos:end="1009:29">case <expr pos:start="1009:18" pos:end="1009:28"><name pos:start="1009:18" pos:end="1009:28">OPC_PICK_PH</name></expr>:</case>

            <case pos:start="1011:13" pos:end="1011:31">case <expr pos:start="1011:18" pos:end="1011:30"><name pos:start="1011:18" pos:end="1011:30">OPC_PACKRL_PH</name></expr>:</case>

                <expr_stmt pos:start="1013:17" pos:end="1013:71"><expr pos:start="1013:17" pos:end="1013:70"><call pos:start="1013:17" pos:end="1013:70"><name pos:start="1013:17" pos:end="1013:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1013:41" pos:end="1013:70">(<argument pos:start="1013:42" pos:end="1013:44"><expr pos:start="1013:42" pos:end="1013:44"><name pos:start="1013:42" pos:end="1013:44">ctx</name></expr></argument>, <argument pos:start="1013:47" pos:end="1013:49"><expr pos:start="1013:47" pos:end="1013:49"><name pos:start="1013:47" pos:end="1013:49">op1</name></expr></argument>, <argument pos:start="1013:52" pos:end="1013:54"><expr pos:start="1013:52" pos:end="1013:54"><name pos:start="1013:52" pos:end="1013:54">op2</name></expr></argument>, <argument pos:start="1013:57" pos:end="1013:58"><expr pos:start="1013:57" pos:end="1013:58"><name pos:start="1013:57" pos:end="1013:58">rd</name></expr></argument>, <argument pos:start="1013:61" pos:end="1013:62"><expr pos:start="1013:61" pos:end="1013:62"><name pos:start="1013:61" pos:end="1013:62">rs</name></expr></argument>, <argument pos:start="1013:65" pos:end="1013:66"><expr pos:start="1013:65" pos:end="1013:66"><name pos:start="1013:65" pos:end="1013:66">rt</name></expr></argument>, <argument pos:start="1013:69" pos:end="1013:69"><expr pos:start="1013:69" pos:end="1013:69"><literal type="number" pos:start="1013:69" pos:end="1013:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1015:17" pos:end="1015:22">break;</break>

            <default pos:start="1017:13" pos:end="1017:20">default:</default>            <comment type="block" pos:start="1017:33" pos:end="1017:45">/* Invalid */</comment>

                <expr_stmt pos:start="1019:17" pos:end="1019:46"><expr pos:start="1019:17" pos:end="1019:45"><call pos:start="1019:17" pos:end="1019:45"><name pos:start="1019:17" pos:end="1019:26">MIPS_INVAL</name><argument_list pos:start="1019:27" pos:end="1019:45">(<argument pos:start="1019:28" pos:end="1019:44"><expr pos:start="1019:28" pos:end="1019:44"><literal type="string" pos:start="1019:28" pos:end="1019:44">"MASK CMPU.EQ.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1021:17" pos:end="1021:49"><expr pos:start="1021:17" pos:end="1021:48"><call pos:start="1021:17" pos:end="1021:48"><name pos:start="1021:17" pos:end="1021:34">generate_exception</name><argument_list pos:start="1021:35" pos:end="1021:48">(<argument pos:start="1021:36" pos:end="1021:38"><expr pos:start="1021:36" pos:end="1021:38"><name pos:start="1021:36" pos:end="1021:38">ctx</name></expr></argument>, <argument pos:start="1021:41" pos:end="1021:47"><expr pos:start="1021:41" pos:end="1021:47"><name pos:start="1021:41" pos:end="1021:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1023:17" pos:end="1023:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1027:13" pos:end="1027:18">break;</break>

        <case pos:start="1029:9" pos:end="1029:29">case <expr pos:start="1029:14" pos:end="1029:28"><name pos:start="1029:14" pos:end="1029:28">OPC_SHLL_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1031:13" pos:end="1031:52"><expr pos:start="1031:13" pos:end="1031:51"><call pos:start="1031:13" pos:end="1031:51"><name pos:start="1031:13" pos:end="1031:29">gen_mipsdsp_shift</name><argument_list pos:start="1031:30" pos:end="1031:51">(<argument pos:start="1031:31" pos:end="1031:33"><expr pos:start="1031:31" pos:end="1031:33"><name pos:start="1031:31" pos:end="1031:33">ctx</name></expr></argument>, <argument pos:start="1031:36" pos:end="1031:38"><expr pos:start="1031:36" pos:end="1031:38"><name pos:start="1031:36" pos:end="1031:38">op1</name></expr></argument>, <argument pos:start="1031:41" pos:end="1031:42"><expr pos:start="1031:41" pos:end="1031:42"><name pos:start="1031:41" pos:end="1031:42">rd</name></expr></argument>, <argument pos:start="1031:45" pos:end="1031:46"><expr pos:start="1031:45" pos:end="1031:46"><name pos:start="1031:45" pos:end="1031:46">rs</name></expr></argument>, <argument pos:start="1031:49" pos:end="1031:50"><expr pos:start="1031:49" pos:end="1031:50"><name pos:start="1031:49" pos:end="1031:50">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1033:13" pos:end="1033:18">break;</break>

        <case pos:start="1035:9" pos:end="1035:30">case <expr pos:start="1035:14" pos:end="1035:29"><name pos:start="1035:14" pos:end="1035:29">OPC_DPA_W_PH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1037:13" pos:end="1037:45"><expr pos:start="1037:13" pos:end="1037:44"><name pos:start="1037:13" pos:end="1037:15">op2</name> <operator pos:start="1037:17" pos:end="1037:17">=</operator> <call pos:start="1037:19" pos:end="1037:44"><name pos:start="1037:19" pos:end="1037:31">MASK_DPA_W_PH</name><argument_list pos:start="1037:32" pos:end="1037:44">(<argument pos:start="1037:33" pos:end="1037:43"><expr pos:start="1037:33" pos:end="1037:43"><name pos:start="1037:33" pos:end="1037:43"><name pos:start="1037:33" pos:end="1037:35">ctx</name><operator pos:start="1037:36" pos:end="1037:37">-&gt;</operator><name pos:start="1037:38" pos:end="1037:43">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1039:13" pos:end="1097:13">switch <condition pos:start="1039:20" pos:end="1039:24">(<expr pos:start="1039:21" pos:end="1039:23"><name pos:start="1039:21" pos:end="1039:23">op2</name></expr>)</condition> <block pos:start="1039:26" pos:end="1097:13">{<block_content pos:start="1041:13" pos:end="1095:22">

            <case pos:start="1041:13" pos:end="1041:32">case <expr pos:start="1041:18" pos:end="1041:31"><name pos:start="1041:18" pos:end="1041:31">OPC_DPAU_H_QBL</name></expr>:</case>

            <case pos:start="1043:13" pos:end="1043:32">case <expr pos:start="1043:18" pos:end="1043:31"><name pos:start="1043:18" pos:end="1043:31">OPC_DPAU_H_QBR</name></expr>:</case>

            <case pos:start="1045:13" pos:end="1045:32">case <expr pos:start="1045:18" pos:end="1045:31"><name pos:start="1045:18" pos:end="1045:31">OPC_DPSU_H_QBL</name></expr>:</case>

            <case pos:start="1047:13" pos:end="1047:32">case <expr pos:start="1047:18" pos:end="1047:31"><name pos:start="1047:18" pos:end="1047:31">OPC_DPSU_H_QBR</name></expr>:</case>

            <case pos:start="1049:13" pos:end="1049:30">case <expr pos:start="1049:18" pos:end="1049:29"><name pos:start="1049:18" pos:end="1049:29">OPC_DPA_W_PH</name></expr>:</case>

            <case pos:start="1051:13" pos:end="1051:31">case <expr pos:start="1051:18" pos:end="1051:30"><name pos:start="1051:18" pos:end="1051:30">OPC_DPAX_W_PH</name></expr>:</case>

            <case pos:start="1053:13" pos:end="1053:33">case <expr pos:start="1053:18" pos:end="1053:32"><name pos:start="1053:18" pos:end="1053:32">OPC_DPAQ_S_W_PH</name></expr>:</case>

            <case pos:start="1055:13" pos:end="1055:34">case <expr pos:start="1055:18" pos:end="1055:33"><name pos:start="1055:18" pos:end="1055:33">OPC_DPAQX_S_W_PH</name></expr>:</case>

            <case pos:start="1057:13" pos:end="1057:35">case <expr pos:start="1057:18" pos:end="1057:34"><name pos:start="1057:18" pos:end="1057:34">OPC_DPAQX_SA_W_PH</name></expr>:</case>

            <case pos:start="1059:13" pos:end="1059:30">case <expr pos:start="1059:18" pos:end="1059:29"><name pos:start="1059:18" pos:end="1059:29">OPC_DPS_W_PH</name></expr>:</case>

            <case pos:start="1061:13" pos:end="1061:31">case <expr pos:start="1061:18" pos:end="1061:30"><name pos:start="1061:18" pos:end="1061:30">OPC_DPSX_W_PH</name></expr>:</case>

            <case pos:start="1063:13" pos:end="1063:33">case <expr pos:start="1063:18" pos:end="1063:32"><name pos:start="1063:18" pos:end="1063:32">OPC_DPSQ_S_W_PH</name></expr>:</case>

            <case pos:start="1065:13" pos:end="1065:34">case <expr pos:start="1065:18" pos:end="1065:33"><name pos:start="1065:18" pos:end="1065:33">OPC_DPSQX_S_W_PH</name></expr>:</case>

            <case pos:start="1067:13" pos:end="1067:35">case <expr pos:start="1067:18" pos:end="1067:34"><name pos:start="1067:18" pos:end="1067:34">OPC_DPSQX_SA_W_PH</name></expr>:</case>

            <case pos:start="1069:13" pos:end="1069:35">case <expr pos:start="1069:18" pos:end="1069:34"><name pos:start="1069:18" pos:end="1069:34">OPC_MULSAQ_S_W_PH</name></expr>:</case>

            <case pos:start="1071:13" pos:end="1071:33">case <expr pos:start="1071:18" pos:end="1071:32"><name pos:start="1071:18" pos:end="1071:32">OPC_DPAQ_SA_L_W</name></expr>:</case>

            <case pos:start="1073:13" pos:end="1073:33">case <expr pos:start="1073:18" pos:end="1073:32"><name pos:start="1073:18" pos:end="1073:32">OPC_DPSQ_SA_L_W</name></expr>:</case>

            <case pos:start="1075:13" pos:end="1075:33">case <expr pos:start="1075:18" pos:end="1075:32"><name pos:start="1075:18" pos:end="1075:32">OPC_MAQ_S_W_PHL</name></expr>:</case>

            <case pos:start="1077:13" pos:end="1077:33">case <expr pos:start="1077:18" pos:end="1077:32"><name pos:start="1077:18" pos:end="1077:32">OPC_MAQ_S_W_PHR</name></expr>:</case>

            <case pos:start="1079:13" pos:end="1079:34">case <expr pos:start="1079:18" pos:end="1079:33"><name pos:start="1079:18" pos:end="1079:33">OPC_MAQ_SA_W_PHL</name></expr>:</case>

            <case pos:start="1081:13" pos:end="1081:34">case <expr pos:start="1081:18" pos:end="1081:33"><name pos:start="1081:18" pos:end="1081:33">OPC_MAQ_SA_W_PHR</name></expr>:</case>

            <case pos:start="1083:13" pos:end="1083:32">case <expr pos:start="1083:18" pos:end="1083:31"><name pos:start="1083:18" pos:end="1083:31">OPC_MULSA_W_PH</name></expr>:</case>

                <expr_stmt pos:start="1085:17" pos:end="1085:67"><expr pos:start="1085:17" pos:end="1085:66"><call pos:start="1085:17" pos:end="1085:66"><name pos:start="1085:17" pos:end="1085:36">gen_mipsdsp_multiply</name><argument_list pos:start="1085:37" pos:end="1085:66">(<argument pos:start="1085:38" pos:end="1085:40"><expr pos:start="1085:38" pos:end="1085:40"><name pos:start="1085:38" pos:end="1085:40">ctx</name></expr></argument>, <argument pos:start="1085:43" pos:end="1085:45"><expr pos:start="1085:43" pos:end="1085:45"><name pos:start="1085:43" pos:end="1085:45">op1</name></expr></argument>, <argument pos:start="1085:48" pos:end="1085:50"><expr pos:start="1085:48" pos:end="1085:50"><name pos:start="1085:48" pos:end="1085:50">op2</name></expr></argument>, <argument pos:start="1085:53" pos:end="1085:54"><expr pos:start="1085:53" pos:end="1085:54"><name pos:start="1085:53" pos:end="1085:54">rd</name></expr></argument>, <argument pos:start="1085:57" pos:end="1085:58"><expr pos:start="1085:57" pos:end="1085:58"><name pos:start="1085:57" pos:end="1085:58">rs</name></expr></argument>, <argument pos:start="1085:61" pos:end="1085:62"><expr pos:start="1085:61" pos:end="1085:62"><name pos:start="1085:61" pos:end="1085:62">rt</name></expr></argument>, <argument pos:start="1085:65" pos:end="1085:65"><expr pos:start="1085:65" pos:end="1085:65"><literal type="number" pos:start="1085:65" pos:end="1085:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1087:17" pos:end="1087:22">break;</break>

            <default pos:start="1089:13" pos:end="1089:20">default:</default>            <comment type="block" pos:start="1089:33" pos:end="1089:45">/* Invalid */</comment>

                <expr_stmt pos:start="1091:17" pos:end="1091:43"><expr pos:start="1091:17" pos:end="1091:42"><call pos:start="1091:17" pos:end="1091:42"><name pos:start="1091:17" pos:end="1091:26">MIPS_INVAL</name><argument_list pos:start="1091:27" pos:end="1091:42">(<argument pos:start="1091:28" pos:end="1091:41"><expr pos:start="1091:28" pos:end="1091:41"><literal type="string" pos:start="1091:28" pos:end="1091:41">"MASK DPAW.PH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1093:17" pos:end="1093:49"><expr pos:start="1093:17" pos:end="1093:48"><call pos:start="1093:17" pos:end="1093:48"><name pos:start="1093:17" pos:end="1093:34">generate_exception</name><argument_list pos:start="1093:35" pos:end="1093:48">(<argument pos:start="1093:36" pos:end="1093:38"><expr pos:start="1093:36" pos:end="1093:38"><name pos:start="1093:36" pos:end="1093:38">ctx</name></expr></argument>, <argument pos:start="1093:41" pos:end="1093:47"><expr pos:start="1093:41" pos:end="1093:47"><name pos:start="1093:41" pos:end="1093:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1095:17" pos:end="1095:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1099:13" pos:end="1099:18">break;</break>

        <case pos:start="1101:9" pos:end="1101:26">case <expr pos:start="1101:14" pos:end="1101:25"><name pos:start="1101:14" pos:end="1101:25">OPC_INSV_DSP</name></expr>:</case>

            <expr_stmt pos:start="1103:13" pos:end="1103:41"><expr pos:start="1103:13" pos:end="1103:40"><name pos:start="1103:13" pos:end="1103:15">op2</name> <operator pos:start="1103:17" pos:end="1103:17">=</operator> <call pos:start="1103:19" pos:end="1103:40"><name pos:start="1103:19" pos:end="1103:27">MASK_INSV</name><argument_list pos:start="1103:28" pos:end="1103:40">(<argument pos:start="1103:29" pos:end="1103:39"><expr pos:start="1103:29" pos:end="1103:39"><name pos:start="1103:29" pos:end="1103:39"><name pos:start="1103:29" pos:end="1103:31">ctx</name><operator pos:start="1103:32" pos:end="1103:33">-&gt;</operator><name pos:start="1103:34" pos:end="1103:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1105:13" pos:end="1159:13">switch <condition pos:start="1105:20" pos:end="1105:24">(<expr pos:start="1105:21" pos:end="1105:23"><name pos:start="1105:21" pos:end="1105:23">op2</name></expr>)</condition> <block pos:start="1105:26" pos:end="1159:13">{<block_content pos:start="1107:13" pos:end="1157:22">

            <case pos:start="1107:13" pos:end="1107:26">case <expr pos:start="1107:18" pos:end="1107:25"><name pos:start="1107:18" pos:end="1107:25">OPC_INSV</name></expr>:</case>

                <expr_stmt pos:start="1109:17" pos:end="1109:31"><expr pos:start="1109:17" pos:end="1109:30"><call pos:start="1109:17" pos:end="1109:30"><name pos:start="1109:17" pos:end="1109:25">check_dsp</name><argument_list pos:start="1109:26" pos:end="1109:30">(<argument pos:start="1109:27" pos:end="1109:29"><expr pos:start="1109:27" pos:end="1109:29"><name pos:start="1109:27" pos:end="1109:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1111:17" pos:end="1149:17">{<block_content pos:start="1113:21" pos:end="1147:26">

                    <decl_stmt pos:start="1113:21" pos:end="1113:32"><decl pos:start="1113:21" pos:end="1113:27"><type pos:start="1113:21" pos:end="1113:24"><name pos:start="1113:21" pos:end="1113:24">TCGv</name></type> <name pos:start="1113:26" pos:end="1113:27">t0</name></decl>, <decl pos:start="1113:30" pos:end="1113:31"><type ref="prev" pos:start="1113:21" pos:end="1113:24"/><name pos:start="1113:30" pos:end="1113:31">t1</name></decl>;</decl_stmt>



                    <if_stmt pos:start="1117:21" pos:end="1123:21"><if pos:start="1117:21" pos:end="1123:21">if <condition pos:start="1117:24" pos:end="1117:32">(<expr pos:start="1117:25" pos:end="1117:31"><name pos:start="1117:25" pos:end="1117:26">rt</name> <operator pos:start="1117:28" pos:end="1117:29">==</operator> <literal type="number" pos:start="1117:31" pos:end="1117:31">0</literal></expr>)</condition> <block pos:start="1117:34" pos:end="1123:21">{<block_content pos:start="1119:25" pos:end="1121:30">

                        <expr_stmt pos:start="1119:25" pos:end="1119:42"><expr pos:start="1119:25" pos:end="1119:41"><call pos:start="1119:25" pos:end="1119:41"><name pos:start="1119:25" pos:end="1119:34">MIPS_DEBUG</name><argument_list pos:start="1119:35" pos:end="1119:41">(<argument pos:start="1119:36" pos:end="1119:40"><expr pos:start="1119:36" pos:end="1119:40"><literal type="string" pos:start="1119:36" pos:end="1119:40">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1121:25" pos:end="1121:30">break;</break>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="1127:21" pos:end="1127:40"><expr pos:start="1127:21" pos:end="1127:39"><name pos:start="1127:21" pos:end="1127:22">t0</name> <operator pos:start="1127:24" pos:end="1127:24">=</operator> <call pos:start="1127:26" pos:end="1127:39"><name pos:start="1127:26" pos:end="1127:37">tcg_temp_new</name><argument_list pos:start="1127:38" pos:end="1127:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1129:21" pos:end="1129:40"><expr pos:start="1129:21" pos:end="1129:39"><name pos:start="1129:21" pos:end="1129:22">t1</name> <operator pos:start="1129:24" pos:end="1129:24">=</operator> <call pos:start="1129:26" pos:end="1129:39"><name pos:start="1129:26" pos:end="1129:37">tcg_temp_new</name><argument_list pos:start="1129:38" pos:end="1129:39">()</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1133:21" pos:end="1133:41"><expr pos:start="1133:21" pos:end="1133:40"><call pos:start="1133:21" pos:end="1133:40"><name pos:start="1133:21" pos:end="1133:32">gen_load_gpr</name><argument_list pos:start="1133:33" pos:end="1133:40">(<argument pos:start="1133:34" pos:end="1133:35"><expr pos:start="1133:34" pos:end="1133:35"><name pos:start="1133:34" pos:end="1133:35">t0</name></expr></argument>, <argument pos:start="1133:38" pos:end="1133:39"><expr pos:start="1133:38" pos:end="1133:39"><name pos:start="1133:38" pos:end="1133:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1135:21" pos:end="1135:41"><expr pos:start="1135:21" pos:end="1135:40"><call pos:start="1135:21" pos:end="1135:40"><name pos:start="1135:21" pos:end="1135:32">gen_load_gpr</name><argument_list pos:start="1135:33" pos:end="1135:40">(<argument pos:start="1135:34" pos:end="1135:35"><expr pos:start="1135:34" pos:end="1135:35"><name pos:start="1135:34" pos:end="1135:35">t1</name></expr></argument>, <argument pos:start="1135:38" pos:end="1135:39"><expr pos:start="1135:38" pos:end="1135:39"><name pos:start="1135:38" pos:end="1135:39">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1139:21" pos:end="1139:66"><expr pos:start="1139:21" pos:end="1139:65"><call pos:start="1139:21" pos:end="1139:65"><name pos:start="1139:21" pos:end="1139:35">gen_helper_insv</name><argument_list pos:start="1139:36" pos:end="1139:65">(<argument pos:start="1139:37" pos:end="1139:47"><expr pos:start="1139:37" pos:end="1139:47"><name pos:start="1139:37" pos:end="1139:47"><name pos:start="1139:37" pos:end="1139:43">cpu_gpr</name><index pos:start="1139:44" pos:end="1139:47">[<expr pos:start="1139:45" pos:end="1139:46"><name pos:start="1139:45" pos:end="1139:46">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="1139:50" pos:end="1139:56"><expr pos:start="1139:50" pos:end="1139:56"><name pos:start="1139:50" pos:end="1139:56">cpu_env</name></expr></argument>, <argument pos:start="1139:59" pos:end="1139:60"><expr pos:start="1139:59" pos:end="1139:60"><name pos:start="1139:59" pos:end="1139:60">t1</name></expr></argument>, <argument pos:start="1139:63" pos:end="1139:64"><expr pos:start="1139:63" pos:end="1139:64"><name pos:start="1139:63" pos:end="1139:64">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1143:21" pos:end="1143:38"><expr pos:start="1143:21" pos:end="1143:37"><call pos:start="1143:21" pos:end="1143:37"><name pos:start="1143:21" pos:end="1143:33">tcg_temp_free</name><argument_list pos:start="1143:34" pos:end="1143:37">(<argument pos:start="1143:35" pos:end="1143:36"><expr pos:start="1143:35" pos:end="1143:36"><name pos:start="1143:35" pos:end="1143:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1145:21" pos:end="1145:38"><expr pos:start="1145:21" pos:end="1145:37"><call pos:start="1145:21" pos:end="1145:37"><name pos:start="1145:21" pos:end="1145:33">tcg_temp_free</name><argument_list pos:start="1145:34" pos:end="1145:37">(<argument pos:start="1145:35" pos:end="1145:36"><expr pos:start="1145:35" pos:end="1145:36"><name pos:start="1145:35" pos:end="1145:36">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1147:21" pos:end="1147:26">break;</break>

                </block_content>}</block>

            <default pos:start="1151:13" pos:end="1151:20">default:</default>            <comment type="block" pos:start="1151:33" pos:end="1151:45">/* Invalid */</comment>

                <expr_stmt pos:start="1153:17" pos:end="1153:40"><expr pos:start="1153:17" pos:end="1153:39"><call pos:start="1153:17" pos:end="1153:39"><name pos:start="1153:17" pos:end="1153:26">MIPS_INVAL</name><argument_list pos:start="1153:27" pos:end="1153:39">(<argument pos:start="1153:28" pos:end="1153:38"><expr pos:start="1153:28" pos:end="1153:38"><literal type="string" pos:start="1153:28" pos:end="1153:38">"MASK INSV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1155:17" pos:end="1155:49"><expr pos:start="1155:17" pos:end="1155:48"><call pos:start="1155:17" pos:end="1155:48"><name pos:start="1155:17" pos:end="1155:34">generate_exception</name><argument_list pos:start="1155:35" pos:end="1155:48">(<argument pos:start="1155:36" pos:end="1155:38"><expr pos:start="1155:36" pos:end="1155:38"><name pos:start="1155:36" pos:end="1155:38">ctx</name></expr></argument>, <argument pos:start="1155:41" pos:end="1155:47"><expr pos:start="1155:41" pos:end="1155:47"><name pos:start="1155:41" pos:end="1155:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1157:17" pos:end="1157:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1161:13" pos:end="1161:18">break;</break>

        <case pos:start="1163:9" pos:end="1163:28">case <expr pos:start="1163:14" pos:end="1163:27"><name pos:start="1163:14" pos:end="1163:27">OPC_APPEND_DSP</name></expr>:</case>

            <expr_stmt pos:start="1165:13" pos:end="1165:29"><expr pos:start="1165:13" pos:end="1165:28"><call pos:start="1165:13" pos:end="1165:28"><name pos:start="1165:13" pos:end="1165:23">check_dspr2</name><argument_list pos:start="1165:24" pos:end="1165:28">(<argument pos:start="1165:25" pos:end="1165:27"><expr pos:start="1165:25" pos:end="1165:27"><name pos:start="1165:25" pos:end="1165:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1167:13" pos:end="1167:43"><expr pos:start="1167:13" pos:end="1167:42"><name pos:start="1167:13" pos:end="1167:15">op2</name> <operator pos:start="1167:17" pos:end="1167:17">=</operator> <call pos:start="1167:19" pos:end="1167:42"><name pos:start="1167:19" pos:end="1167:29">MASK_APPEND</name><argument_list pos:start="1167:30" pos:end="1167:42">(<argument pos:start="1167:31" pos:end="1167:41"><expr pos:start="1167:31" pos:end="1167:41"><name pos:start="1167:31" pos:end="1167:41"><name pos:start="1167:31" pos:end="1167:33">ctx</name><operator pos:start="1167:34" pos:end="1167:35">-&gt;</operator><name pos:start="1167:36" pos:end="1167:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:67"><expr pos:start="1169:13" pos:end="1169:66"><call pos:start="1169:13" pos:end="1169:66"><name pos:start="1169:13" pos:end="1169:36">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1169:37" pos:end="1169:66">(<argument pos:start="1169:38" pos:end="1169:40"><expr pos:start="1169:38" pos:end="1169:40"><name pos:start="1169:38" pos:end="1169:40">ctx</name></expr></argument>, <argument pos:start="1169:43" pos:end="1169:45"><expr pos:start="1169:43" pos:end="1169:45"><name pos:start="1169:43" pos:end="1169:45">op1</name></expr></argument>, <argument pos:start="1169:48" pos:end="1169:50"><expr pos:start="1169:48" pos:end="1169:50"><name pos:start="1169:48" pos:end="1169:50">op2</name></expr></argument>, <argument pos:start="1169:53" pos:end="1169:54"><expr pos:start="1169:53" pos:end="1169:54"><name pos:start="1169:53" pos:end="1169:54">rt</name></expr></argument>, <argument pos:start="1169:57" pos:end="1169:58"><expr pos:start="1169:57" pos:end="1169:58"><name pos:start="1169:57" pos:end="1169:58">rs</name></expr></argument>, <argument pos:start="1169:61" pos:end="1169:62"><expr pos:start="1169:61" pos:end="1169:62"><name pos:start="1169:61" pos:end="1169:62">rd</name></expr></argument>, <argument pos:start="1169:65" pos:end="1169:65"><expr pos:start="1169:65" pos:end="1169:65"><literal type="number" pos:start="1169:65" pos:end="1169:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1171:13" pos:end="1171:18">break;</break>

        <case pos:start="1173:9" pos:end="1173:28">case <expr pos:start="1173:14" pos:end="1173:27"><name pos:start="1173:14" pos:end="1173:27">OPC_EXTR_W_DSP</name></expr>:</case>

            <expr_stmt pos:start="1175:13" pos:end="1175:43"><expr pos:start="1175:13" pos:end="1175:42"><name pos:start="1175:13" pos:end="1175:15">op2</name> <operator pos:start="1175:17" pos:end="1175:17">=</operator> <call pos:start="1175:19" pos:end="1175:42"><name pos:start="1175:19" pos:end="1175:29">MASK_EXTR_W</name><argument_list pos:start="1175:30" pos:end="1175:42">(<argument pos:start="1175:31" pos:end="1175:41"><expr pos:start="1175:31" pos:end="1175:41"><name pos:start="1175:31" pos:end="1175:41"><name pos:start="1175:31" pos:end="1175:33">ctx</name><operator pos:start="1175:34" pos:end="1175:35">-&gt;</operator><name pos:start="1175:36" pos:end="1175:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1177:13" pos:end="1233:13">switch <condition pos:start="1177:20" pos:end="1177:24">(<expr pos:start="1177:21" pos:end="1177:23"><name pos:start="1177:21" pos:end="1177:23">op2</name></expr>)</condition> <block pos:start="1177:26" pos:end="1233:13">{<block_content pos:start="1179:13" pos:end="1231:22">

            <case pos:start="1179:13" pos:end="1179:28">case <expr pos:start="1179:18" pos:end="1179:27"><name pos:start="1179:18" pos:end="1179:27">OPC_EXTR_W</name></expr>:</case>

            <case pos:start="1181:13" pos:end="1181:30">case <expr pos:start="1181:18" pos:end="1181:29"><name pos:start="1181:18" pos:end="1181:29">OPC_EXTR_R_W</name></expr>:</case>

            <case pos:start="1183:13" pos:end="1183:31">case <expr pos:start="1183:18" pos:end="1183:30"><name pos:start="1183:18" pos:end="1183:30">OPC_EXTR_RS_W</name></expr>:</case>

            <case pos:start="1185:13" pos:end="1185:30">case <expr pos:start="1185:18" pos:end="1185:29"><name pos:start="1185:18" pos:end="1185:29">OPC_EXTR_S_H</name></expr>:</case>

            <case pos:start="1187:13" pos:end="1187:31">case <expr pos:start="1187:18" pos:end="1187:30"><name pos:start="1187:18" pos:end="1187:30">OPC_EXTRV_S_H</name></expr>:</case>

            <case pos:start="1189:13" pos:end="1189:29">case <expr pos:start="1189:18" pos:end="1189:28"><name pos:start="1189:18" pos:end="1189:28">OPC_EXTRV_W</name></expr>:</case>

            <case pos:start="1191:13" pos:end="1191:31">case <expr pos:start="1191:18" pos:end="1191:30"><name pos:start="1191:18" pos:end="1191:30">OPC_EXTRV_R_W</name></expr>:</case>

            <case pos:start="1193:13" pos:end="1193:32">case <expr pos:start="1193:18" pos:end="1193:31"><name pos:start="1193:18" pos:end="1193:31">OPC_EXTRV_RS_W</name></expr>:</case>

            <case pos:start="1195:13" pos:end="1195:26">case <expr pos:start="1195:18" pos:end="1195:25"><name pos:start="1195:18" pos:end="1195:25">OPC_EXTP</name></expr>:</case>

            <case pos:start="1197:13" pos:end="1197:27">case <expr pos:start="1197:18" pos:end="1197:26"><name pos:start="1197:18" pos:end="1197:26">OPC_EXTPV</name></expr>:</case>

            <case pos:start="1199:13" pos:end="1199:28">case <expr pos:start="1199:18" pos:end="1199:27"><name pos:start="1199:18" pos:end="1199:27">OPC_EXTPDP</name></expr>:</case>

            <case pos:start="1201:13" pos:end="1201:29">case <expr pos:start="1201:18" pos:end="1201:28"><name pos:start="1201:18" pos:end="1201:28">OPC_EXTPDPV</name></expr>:</case>

                <expr_stmt pos:start="1203:17" pos:end="1203:66"><expr pos:start="1203:17" pos:end="1203:65"><call pos:start="1203:17" pos:end="1203:65"><name pos:start="1203:17" pos:end="1203:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1203:36" pos:end="1203:65">(<argument pos:start="1203:37" pos:end="1203:39"><expr pos:start="1203:37" pos:end="1203:39"><name pos:start="1203:37" pos:end="1203:39">ctx</name></expr></argument>, <argument pos:start="1203:42" pos:end="1203:44"><expr pos:start="1203:42" pos:end="1203:44"><name pos:start="1203:42" pos:end="1203:44">op1</name></expr></argument>, <argument pos:start="1203:47" pos:end="1203:49"><expr pos:start="1203:47" pos:end="1203:49"><name pos:start="1203:47" pos:end="1203:49">op2</name></expr></argument>, <argument pos:start="1203:52" pos:end="1203:53"><expr pos:start="1203:52" pos:end="1203:53"><name pos:start="1203:52" pos:end="1203:53">rt</name></expr></argument>, <argument pos:start="1203:56" pos:end="1203:57"><expr pos:start="1203:56" pos:end="1203:57"><name pos:start="1203:56" pos:end="1203:57">rs</name></expr></argument>, <argument pos:start="1203:60" pos:end="1203:61"><expr pos:start="1203:60" pos:end="1203:61"><name pos:start="1203:60" pos:end="1203:61">rd</name></expr></argument>, <argument pos:start="1203:64" pos:end="1203:64"><expr pos:start="1203:64" pos:end="1203:64"><literal type="number" pos:start="1203:64" pos:end="1203:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1205:17" pos:end="1205:22">break;</break>

            <case pos:start="1207:13" pos:end="1207:27">case <expr pos:start="1207:18" pos:end="1207:26"><name pos:start="1207:18" pos:end="1207:26">OPC_RDDSP</name></expr>:</case>

                <expr_stmt pos:start="1209:17" pos:end="1209:66"><expr pos:start="1209:17" pos:end="1209:65"><call pos:start="1209:17" pos:end="1209:65"><name pos:start="1209:17" pos:end="1209:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1209:36" pos:end="1209:65">(<argument pos:start="1209:37" pos:end="1209:39"><expr pos:start="1209:37" pos:end="1209:39"><name pos:start="1209:37" pos:end="1209:39">ctx</name></expr></argument>, <argument pos:start="1209:42" pos:end="1209:44"><expr pos:start="1209:42" pos:end="1209:44"><name pos:start="1209:42" pos:end="1209:44">op1</name></expr></argument>, <argument pos:start="1209:47" pos:end="1209:49"><expr pos:start="1209:47" pos:end="1209:49"><name pos:start="1209:47" pos:end="1209:49">op2</name></expr></argument>, <argument pos:start="1209:52" pos:end="1209:53"><expr pos:start="1209:52" pos:end="1209:53"><name pos:start="1209:52" pos:end="1209:53">rd</name></expr></argument>, <argument pos:start="1209:56" pos:end="1209:57"><expr pos:start="1209:56" pos:end="1209:57"><name pos:start="1209:56" pos:end="1209:57">rs</name></expr></argument>, <argument pos:start="1209:60" pos:end="1209:61"><expr pos:start="1209:60" pos:end="1209:61"><name pos:start="1209:60" pos:end="1209:61">rt</name></expr></argument>, <argument pos:start="1209:64" pos:end="1209:64"><expr pos:start="1209:64" pos:end="1209:64"><literal type="number" pos:start="1209:64" pos:end="1209:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1211:17" pos:end="1211:22">break;</break>

            <case pos:start="1213:13" pos:end="1213:27">case <expr pos:start="1213:18" pos:end="1213:26"><name pos:start="1213:18" pos:end="1213:26">OPC_SHILO</name></expr>:</case>

            <case pos:start="1215:13" pos:end="1215:28">case <expr pos:start="1215:18" pos:end="1215:27"><name pos:start="1215:18" pos:end="1215:27">OPC_SHILOV</name></expr>:</case>

            <case pos:start="1217:13" pos:end="1217:28">case <expr pos:start="1217:18" pos:end="1217:27"><name pos:start="1217:18" pos:end="1217:27">OPC_MTHLIP</name></expr>:</case>

            <case pos:start="1219:13" pos:end="1219:27">case <expr pos:start="1219:18" pos:end="1219:26"><name pos:start="1219:18" pos:end="1219:26">OPC_WRDSP</name></expr>:</case>

                <expr_stmt pos:start="1221:17" pos:end="1221:66"><expr pos:start="1221:17" pos:end="1221:65"><call pos:start="1221:17" pos:end="1221:65"><name pos:start="1221:17" pos:end="1221:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1221:36" pos:end="1221:65">(<argument pos:start="1221:37" pos:end="1221:39"><expr pos:start="1221:37" pos:end="1221:39"><name pos:start="1221:37" pos:end="1221:39">ctx</name></expr></argument>, <argument pos:start="1221:42" pos:end="1221:44"><expr pos:start="1221:42" pos:end="1221:44"><name pos:start="1221:42" pos:end="1221:44">op1</name></expr></argument>, <argument pos:start="1221:47" pos:end="1221:49"><expr pos:start="1221:47" pos:end="1221:49"><name pos:start="1221:47" pos:end="1221:49">op2</name></expr></argument>, <argument pos:start="1221:52" pos:end="1221:53"><expr pos:start="1221:52" pos:end="1221:53"><name pos:start="1221:52" pos:end="1221:53">rd</name></expr></argument>, <argument pos:start="1221:56" pos:end="1221:57"><expr pos:start="1221:56" pos:end="1221:57"><name pos:start="1221:56" pos:end="1221:57">rs</name></expr></argument>, <argument pos:start="1221:60" pos:end="1221:61"><expr pos:start="1221:60" pos:end="1221:61"><name pos:start="1221:60" pos:end="1221:61">rt</name></expr></argument>, <argument pos:start="1221:64" pos:end="1221:64"><expr pos:start="1221:64" pos:end="1221:64"><literal type="number" pos:start="1221:64" pos:end="1221:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1223:17" pos:end="1223:22">break;</break>

            <default pos:start="1225:13" pos:end="1225:20">default:</default>            <comment type="block" pos:start="1225:33" pos:end="1225:45">/* Invalid */</comment>

                <expr_stmt pos:start="1227:17" pos:end="1227:42"><expr pos:start="1227:17" pos:end="1227:41"><call pos:start="1227:17" pos:end="1227:41"><name pos:start="1227:17" pos:end="1227:26">MIPS_INVAL</name><argument_list pos:start="1227:27" pos:end="1227:41">(<argument pos:start="1227:28" pos:end="1227:40"><expr pos:start="1227:28" pos:end="1227:40"><literal type="string" pos:start="1227:28" pos:end="1227:40">"MASK EXTR.W"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1229:17" pos:end="1229:49"><expr pos:start="1229:17" pos:end="1229:48"><call pos:start="1229:17" pos:end="1229:48"><name pos:start="1229:17" pos:end="1229:34">generate_exception</name><argument_list pos:start="1229:35" pos:end="1229:48">(<argument pos:start="1229:36" pos:end="1229:38"><expr pos:start="1229:36" pos:end="1229:38"><name pos:start="1229:36" pos:end="1229:38">ctx</name></expr></argument>, <argument pos:start="1229:41" pos:end="1229:47"><expr pos:start="1229:41" pos:end="1229:47"><name pos:start="1229:41" pos:end="1229:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1231:17" pos:end="1231:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1235:13" pos:end="1238:0">break;</break>

<cpp:if pos:start="1237:1" pos:end="1237:26">#<cpp:directive pos:start="1237:2" pos:end="1237:3">if</cpp:directive> <expr pos:start="1237:5" pos:end="1237:26"><call pos:start="1237:5" pos:end="1237:26"><name pos:start="1237:5" pos:end="1237:11">defined</name><argument_list pos:start="1237:12" pos:end="1237:26">(<argument pos:start="1237:13" pos:end="1237:25"><expr pos:start="1237:13" pos:end="1237:25"><name pos:start="1237:13" pos:end="1237:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1239:9" pos:end="1239:36">case <expr pos:start="1239:14" pos:end="1239:35"><name pos:start="1239:14" pos:end="1239:22">OPC_DEXTM</name> <operator pos:start="1239:24" pos:end="1239:26">...</operator> <name pos:start="1239:28" pos:end="1239:35">OPC_DEXT</name></expr>:</case>

        <case pos:start="1241:9" pos:end="1241:36">case <expr pos:start="1241:14" pos:end="1241:35"><name pos:start="1241:14" pos:end="1241:22">OPC_DINSM</name> <operator pos:start="1241:24" pos:end="1241:26">...</operator> <name pos:start="1241:28" pos:end="1241:35">OPC_DINS</name></expr>:</case>

            <expr_stmt pos:start="1243:13" pos:end="1243:42"><expr pos:start="1243:13" pos:end="1243:41"><call pos:start="1243:13" pos:end="1243:41"><name pos:start="1243:13" pos:end="1243:22">check_insn</name><argument_list pos:start="1243:23" pos:end="1243:41">(<argument pos:start="1243:24" pos:end="1243:26"><expr pos:start="1243:24" pos:end="1243:26"><name pos:start="1243:24" pos:end="1243:26">ctx</name></expr></argument>, <argument pos:start="1243:29" pos:end="1243:40"><expr pos:start="1243:29" pos:end="1243:40"><name pos:start="1243:29" pos:end="1243:40">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1245:13" pos:end="1245:31"><expr pos:start="1245:13" pos:end="1245:30"><call pos:start="1245:13" pos:end="1245:30"><name pos:start="1245:13" pos:end="1245:25">check_mips_64</name><argument_list pos:start="1245:26" pos:end="1245:30">(<argument pos:start="1245:27" pos:end="1245:29"><expr pos:start="1245:27" pos:end="1245:29"><name pos:start="1245:27" pos:end="1245:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1247:13" pos:end="1247:49"><expr pos:start="1247:13" pos:end="1247:48"><call pos:start="1247:13" pos:end="1247:48"><name pos:start="1247:13" pos:end="1247:22">gen_bitops</name><argument_list pos:start="1247:23" pos:end="1247:48">(<argument pos:start="1247:24" pos:end="1247:26"><expr pos:start="1247:24" pos:end="1247:26"><name pos:start="1247:24" pos:end="1247:26">ctx</name></expr></argument>, <argument pos:start="1247:29" pos:end="1247:31"><expr pos:start="1247:29" pos:end="1247:31"><name pos:start="1247:29" pos:end="1247:31">op1</name></expr></argument>, <argument pos:start="1247:34" pos:end="1247:35"><expr pos:start="1247:34" pos:end="1247:35"><name pos:start="1247:34" pos:end="1247:35">rt</name></expr></argument>, <argument pos:start="1247:38" pos:end="1247:39"><expr pos:start="1247:38" pos:end="1247:39"><name pos:start="1247:38" pos:end="1247:39">rs</name></expr></argument>, <argument pos:start="1247:42" pos:end="1247:43"><expr pos:start="1247:42" pos:end="1247:43"><name pos:start="1247:42" pos:end="1247:43">sa</name></expr></argument>, <argument pos:start="1247:46" pos:end="1247:47"><expr pos:start="1247:46" pos:end="1247:47"><name pos:start="1247:46" pos:end="1247:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1249:13" pos:end="1249:18">break;</break>

        <case pos:start="1251:9" pos:end="1251:24">case <expr pos:start="1251:14" pos:end="1251:23"><name pos:start="1251:14" pos:end="1251:23">OPC_DBSHFL</name></expr>:</case>

            <expr_stmt pos:start="1253:13" pos:end="1253:42"><expr pos:start="1253:13" pos:end="1253:41"><call pos:start="1253:13" pos:end="1253:41"><name pos:start="1253:13" pos:end="1253:22">check_insn</name><argument_list pos:start="1253:23" pos:end="1253:41">(<argument pos:start="1253:24" pos:end="1253:26"><expr pos:start="1253:24" pos:end="1253:26"><name pos:start="1253:24" pos:end="1253:26">ctx</name></expr></argument>, <argument pos:start="1253:29" pos:end="1253:40"><expr pos:start="1253:29" pos:end="1253:40"><name pos:start="1253:29" pos:end="1253:40">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1255:13" pos:end="1255:31"><expr pos:start="1255:13" pos:end="1255:30"><call pos:start="1255:13" pos:end="1255:30"><name pos:start="1255:13" pos:end="1255:25">check_mips_64</name><argument_list pos:start="1255:26" pos:end="1255:30">(<argument pos:start="1255:27" pos:end="1255:29"><expr pos:start="1255:27" pos:end="1255:29"><name pos:start="1255:27" pos:end="1255:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1257:13" pos:end="1257:43"><expr pos:start="1257:13" pos:end="1257:42"><name pos:start="1257:13" pos:end="1257:15">op2</name> <operator pos:start="1257:17" pos:end="1257:17">=</operator> <call pos:start="1257:19" pos:end="1257:42"><name pos:start="1257:19" pos:end="1257:29">MASK_DBSHFL</name><argument_list pos:start="1257:30" pos:end="1257:42">(<argument pos:start="1257:31" pos:end="1257:41"><expr pos:start="1257:31" pos:end="1257:41"><name pos:start="1257:31" pos:end="1257:41"><name pos:start="1257:31" pos:end="1257:33">ctx</name><operator pos:start="1257:34" pos:end="1257:35">-&gt;</operator><name pos:start="1257:36" pos:end="1257:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1259:13" pos:end="1259:40"><expr pos:start="1259:13" pos:end="1259:39"><call pos:start="1259:13" pos:end="1259:39"><name pos:start="1259:13" pos:end="1259:21">gen_bshfl</name><argument_list pos:start="1259:22" pos:end="1259:39">(<argument pos:start="1259:23" pos:end="1259:25"><expr pos:start="1259:23" pos:end="1259:25"><name pos:start="1259:23" pos:end="1259:25">ctx</name></expr></argument>, <argument pos:start="1259:28" pos:end="1259:30"><expr pos:start="1259:28" pos:end="1259:30"><name pos:start="1259:28" pos:end="1259:30">op2</name></expr></argument>, <argument pos:start="1259:33" pos:end="1259:34"><expr pos:start="1259:33" pos:end="1259:34"><name pos:start="1259:33" pos:end="1259:34">rt</name></expr></argument>, <argument pos:start="1259:37" pos:end="1259:38"><expr pos:start="1259:37" pos:end="1259:38"><name pos:start="1259:37" pos:end="1259:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1261:13" pos:end="1261:18">break;</break>

        <case pos:start="1263:9" pos:end="1263:46">case <expr pos:start="1263:14" pos:end="1263:45"><name pos:start="1263:14" pos:end="1263:26">OPC_DDIV_G_2E</name> <operator pos:start="1263:28" pos:end="1263:30">...</operator> <name pos:start="1263:32" pos:end="1263:45">OPC_DDIVU_G_2E</name></expr>:</case>

        <case pos:start="1265:9" pos:end="1265:48">case <expr pos:start="1265:14" pos:end="1265:47"><name pos:start="1265:14" pos:end="1265:27">OPC_DMULT_G_2E</name> <operator pos:start="1265:29" pos:end="1265:31">...</operator> <name pos:start="1265:33" pos:end="1265:47">OPC_DMULTU_G_2E</name></expr>:</case>

        <case pos:start="1267:9" pos:end="1267:46">case <expr pos:start="1267:14" pos:end="1267:45"><name pos:start="1267:14" pos:end="1267:26">OPC_DMOD_G_2E</name> <operator pos:start="1267:28" pos:end="1267:30">...</operator> <name pos:start="1267:32" pos:end="1267:45">OPC_DMODU_G_2E</name></expr>:</case>

            <expr_stmt pos:start="1269:13" pos:end="1269:45"><expr pos:start="1269:13" pos:end="1269:44"><call pos:start="1269:13" pos:end="1269:44"><name pos:start="1269:13" pos:end="1269:22">check_insn</name><argument_list pos:start="1269:23" pos:end="1269:44">(<argument pos:start="1269:24" pos:end="1269:26"><expr pos:start="1269:24" pos:end="1269:26"><name pos:start="1269:24" pos:end="1269:26">ctx</name></expr></argument>, <argument pos:start="1269:29" pos:end="1269:43"><expr pos:start="1269:29" pos:end="1269:43"><name pos:start="1269:29" pos:end="1269:43">INSN_LOONGSON2E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1271:13" pos:end="1271:55"><expr pos:start="1271:13" pos:end="1271:54"><call pos:start="1271:13" pos:end="1271:54"><name pos:start="1271:13" pos:end="1271:32">gen_loongson_integer</name><argument_list pos:start="1271:33" pos:end="1271:54">(<argument pos:start="1271:34" pos:end="1271:36"><expr pos:start="1271:34" pos:end="1271:36"><name pos:start="1271:34" pos:end="1271:36">ctx</name></expr></argument>, <argument pos:start="1271:39" pos:end="1271:41"><expr pos:start="1271:39" pos:end="1271:41"><name pos:start="1271:39" pos:end="1271:41">op1</name></expr></argument>, <argument pos:start="1271:44" pos:end="1271:45"><expr pos:start="1271:44" pos:end="1271:45"><name pos:start="1271:44" pos:end="1271:45">rd</name></expr></argument>, <argument pos:start="1271:48" pos:end="1271:49"><expr pos:start="1271:48" pos:end="1271:49"><name pos:start="1271:48" pos:end="1271:49">rs</name></expr></argument>, <argument pos:start="1271:52" pos:end="1271:53"><expr pos:start="1271:52" pos:end="1271:53"><name pos:start="1271:52" pos:end="1271:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1273:13" pos:end="1273:18">break;</break>

        <case pos:start="1275:9" pos:end="1275:31">case <expr pos:start="1275:14" pos:end="1275:30"><name pos:start="1275:14" pos:end="1275:30">OPC_ABSQ_S_QH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1277:13" pos:end="1277:46"><expr pos:start="1277:13" pos:end="1277:45"><name pos:start="1277:13" pos:end="1277:15">op2</name> <operator pos:start="1277:17" pos:end="1277:17">=</operator> <call pos:start="1277:19" pos:end="1277:45"><name pos:start="1277:19" pos:end="1277:32">MASK_ABSQ_S_QH</name><argument_list pos:start="1277:33" pos:end="1277:45">(<argument pos:start="1277:34" pos:end="1277:44"><expr pos:start="1277:34" pos:end="1277:44"><name pos:start="1277:34" pos:end="1277:44"><name pos:start="1277:34" pos:end="1277:36">ctx</name><operator pos:start="1277:37" pos:end="1277:38">-&gt;</operator><name pos:start="1277:39" pos:end="1277:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1279:13" pos:end="1343:13">switch <condition pos:start="1279:20" pos:end="1279:24">(<expr pos:start="1279:21" pos:end="1279:23"><name pos:start="1279:21" pos:end="1279:23">op2</name></expr>)</condition> <block pos:start="1279:26" pos:end="1343:13">{<block_content pos:start="1281:13" pos:end="1341:22">

            <case pos:start="1281:13" pos:end="1281:34">case <expr pos:start="1281:18" pos:end="1281:33"><name pos:start="1281:18" pos:end="1281:33">OPC_PRECEQ_L_PWL</name></expr>:</case>

            <case pos:start="1283:13" pos:end="1283:34">case <expr pos:start="1283:18" pos:end="1283:33"><name pos:start="1283:18" pos:end="1283:33">OPC_PRECEQ_L_PWR</name></expr>:</case>

            <case pos:start="1285:13" pos:end="1285:35">case <expr pos:start="1285:18" pos:end="1285:34"><name pos:start="1285:18" pos:end="1285:34">OPC_PRECEQ_PW_QHL</name></expr>:</case>

            <case pos:start="1287:13" pos:end="1287:35">case <expr pos:start="1287:18" pos:end="1287:34"><name pos:start="1287:18" pos:end="1287:34">OPC_PRECEQ_PW_QHR</name></expr>:</case>

            <case pos:start="1289:13" pos:end="1289:36">case <expr pos:start="1289:18" pos:end="1289:35"><name pos:start="1289:18" pos:end="1289:35">OPC_PRECEQ_PW_QHLA</name></expr>:</case>

            <case pos:start="1291:13" pos:end="1291:36">case <expr pos:start="1291:18" pos:end="1291:35"><name pos:start="1291:18" pos:end="1291:35">OPC_PRECEQ_PW_QHRA</name></expr>:</case>

            <case pos:start="1293:13" pos:end="1293:36">case <expr pos:start="1293:18" pos:end="1293:35"><name pos:start="1293:18" pos:end="1293:35">OPC_PRECEQU_QH_OBL</name></expr>:</case>

            <case pos:start="1295:13" pos:end="1295:36">case <expr pos:start="1295:18" pos:end="1295:35"><name pos:start="1295:18" pos:end="1295:35">OPC_PRECEQU_QH_OBR</name></expr>:</case>

            <case pos:start="1297:13" pos:end="1297:37">case <expr pos:start="1297:18" pos:end="1297:36"><name pos:start="1297:18" pos:end="1297:36">OPC_PRECEQU_QH_OBLA</name></expr>:</case>

            <case pos:start="1299:13" pos:end="1299:37">case <expr pos:start="1299:18" pos:end="1299:36"><name pos:start="1299:18" pos:end="1299:36">OPC_PRECEQU_QH_OBRA</name></expr>:</case>

            <case pos:start="1301:13" pos:end="1301:35">case <expr pos:start="1301:18" pos:end="1301:34"><name pos:start="1301:18" pos:end="1301:34">OPC_PRECEU_QH_OBL</name></expr>:</case>

            <case pos:start="1303:13" pos:end="1303:35">case <expr pos:start="1303:18" pos:end="1303:34"><name pos:start="1303:18" pos:end="1303:34">OPC_PRECEU_QH_OBR</name></expr>:</case>

            <case pos:start="1305:13" pos:end="1305:36">case <expr pos:start="1305:18" pos:end="1305:35"><name pos:start="1305:18" pos:end="1305:35">OPC_PRECEU_QH_OBLA</name></expr>:</case>

            <case pos:start="1307:13" pos:end="1307:36">case <expr pos:start="1307:18" pos:end="1307:35"><name pos:start="1307:18" pos:end="1307:35">OPC_PRECEU_QH_OBRA</name></expr>:</case>

            <case pos:start="1309:13" pos:end="1309:31">case <expr pos:start="1309:18" pos:end="1309:30"><name pos:start="1309:18" pos:end="1309:30">OPC_ABSQ_S_OB</name></expr>:</case>

            <case pos:start="1311:13" pos:end="1311:31">case <expr pos:start="1311:18" pos:end="1311:30"><name pos:start="1311:18" pos:end="1311:30">OPC_ABSQ_S_PW</name></expr>:</case>

            <case pos:start="1313:13" pos:end="1313:31">case <expr pos:start="1313:18" pos:end="1313:30"><name pos:start="1313:18" pos:end="1313:30">OPC_ABSQ_S_QH</name></expr>:</case>

                <expr_stmt pos:start="1315:17" pos:end="1315:61"><expr pos:start="1315:17" pos:end="1315:60"><call pos:start="1315:17" pos:end="1315:60"><name pos:start="1315:17" pos:end="1315:33">gen_mipsdsp_arith</name><argument_list pos:start="1315:34" pos:end="1315:60">(<argument pos:start="1315:35" pos:end="1315:37"><expr pos:start="1315:35" pos:end="1315:37"><name pos:start="1315:35" pos:end="1315:37">ctx</name></expr></argument>, <argument pos:start="1315:40" pos:end="1315:42"><expr pos:start="1315:40" pos:end="1315:42"><name pos:start="1315:40" pos:end="1315:42">op1</name></expr></argument>, <argument pos:start="1315:45" pos:end="1315:47"><expr pos:start="1315:45" pos:end="1315:47"><name pos:start="1315:45" pos:end="1315:47">op2</name></expr></argument>, <argument pos:start="1315:50" pos:end="1315:51"><expr pos:start="1315:50" pos:end="1315:51"><name pos:start="1315:50" pos:end="1315:51">rd</name></expr></argument>, <argument pos:start="1315:54" pos:end="1315:55"><expr pos:start="1315:54" pos:end="1315:55"><name pos:start="1315:54" pos:end="1315:55">rs</name></expr></argument>, <argument pos:start="1315:58" pos:end="1315:59"><expr pos:start="1315:58" pos:end="1315:59"><name pos:start="1315:58" pos:end="1315:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1317:17" pos:end="1317:22">break;</break>

            <case pos:start="1319:13" pos:end="1319:29">case <expr pos:start="1319:18" pos:end="1319:28"><name pos:start="1319:18" pos:end="1319:28">OPC_REPL_OB</name></expr>:</case>

            <case pos:start="1321:13" pos:end="1321:29">case <expr pos:start="1321:18" pos:end="1321:28"><name pos:start="1321:18" pos:end="1321:28">OPC_REPL_PW</name></expr>:</case>

            <case pos:start="1323:13" pos:end="1323:29">case <expr pos:start="1323:18" pos:end="1323:28"><name pos:start="1323:18" pos:end="1323:28">OPC_REPL_QH</name></expr>:</case>

            <case pos:start="1325:13" pos:end="1325:30">case <expr pos:start="1325:18" pos:end="1325:29"><name pos:start="1325:18" pos:end="1325:29">OPC_REPLV_OB</name></expr>:</case>

            <case pos:start="1327:13" pos:end="1327:30">case <expr pos:start="1327:18" pos:end="1327:29"><name pos:start="1327:18" pos:end="1327:29">OPC_REPLV_PW</name></expr>:</case>

            <case pos:start="1329:13" pos:end="1329:30">case <expr pos:start="1329:18" pos:end="1329:29"><name pos:start="1329:18" pos:end="1329:29">OPC_REPLV_QH</name></expr>:</case>

                <expr_stmt pos:start="1331:17" pos:end="1331:59"><expr pos:start="1331:17" pos:end="1331:58"><call pos:start="1331:17" pos:end="1331:58"><name pos:start="1331:17" pos:end="1331:35">gen_mipsdsp_bitinsn</name><argument_list pos:start="1331:36" pos:end="1331:58">(<argument pos:start="1331:37" pos:end="1331:39"><expr pos:start="1331:37" pos:end="1331:39"><name pos:start="1331:37" pos:end="1331:39">ctx</name></expr></argument>, <argument pos:start="1331:42" pos:end="1331:44"><expr pos:start="1331:42" pos:end="1331:44"><name pos:start="1331:42" pos:end="1331:44">op1</name></expr></argument>, <argument pos:start="1331:47" pos:end="1331:49"><expr pos:start="1331:47" pos:end="1331:49"><name pos:start="1331:47" pos:end="1331:49">op2</name></expr></argument>, <argument pos:start="1331:52" pos:end="1331:53"><expr pos:start="1331:52" pos:end="1331:53"><name pos:start="1331:52" pos:end="1331:53">rd</name></expr></argument>, <argument pos:start="1331:56" pos:end="1331:57"><expr pos:start="1331:56" pos:end="1331:57"><name pos:start="1331:56" pos:end="1331:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1333:17" pos:end="1333:22">break;</break>

            <default pos:start="1335:13" pos:end="1335:20">default:</default>            <comment type="block" pos:start="1335:33" pos:end="1335:45">/* Invalid */</comment>

                <expr_stmt pos:start="1337:17" pos:end="1337:45"><expr pos:start="1337:17" pos:end="1337:44"><call pos:start="1337:17" pos:end="1337:44"><name pos:start="1337:17" pos:end="1337:26">MIPS_INVAL</name><argument_list pos:start="1337:27" pos:end="1337:44">(<argument pos:start="1337:28" pos:end="1337:43"><expr pos:start="1337:28" pos:end="1337:43"><literal type="string" pos:start="1337:28" pos:end="1337:43">"MASK ABSQ_S.QH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1339:17" pos:end="1339:49"><expr pos:start="1339:17" pos:end="1339:48"><call pos:start="1339:17" pos:end="1339:48"><name pos:start="1339:17" pos:end="1339:34">generate_exception</name><argument_list pos:start="1339:35" pos:end="1339:48">(<argument pos:start="1339:36" pos:end="1339:38"><expr pos:start="1339:36" pos:end="1339:38"><name pos:start="1339:36" pos:end="1339:38">ctx</name></expr></argument>, <argument pos:start="1339:41" pos:end="1339:47"><expr pos:start="1339:41" pos:end="1339:47"><name pos:start="1339:41" pos:end="1339:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1341:17" pos:end="1341:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1345:13" pos:end="1345:18">break;</break>

        <case pos:start="1347:9" pos:end="1347:29">case <expr pos:start="1347:14" pos:end="1347:28"><name pos:start="1347:14" pos:end="1347:28">OPC_ADDU_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1349:13" pos:end="1349:44"><expr pos:start="1349:13" pos:end="1349:43"><name pos:start="1349:13" pos:end="1349:15">op2</name> <operator pos:start="1349:17" pos:end="1349:17">=</operator> <call pos:start="1349:19" pos:end="1349:43"><name pos:start="1349:19" pos:end="1349:30">MASK_ADDU_OB</name><argument_list pos:start="1349:31" pos:end="1349:43">(<argument pos:start="1349:32" pos:end="1349:42"><expr pos:start="1349:32" pos:end="1349:42"><name pos:start="1349:32" pos:end="1349:42"><name pos:start="1349:32" pos:end="1349:34">ctx</name><operator pos:start="1349:35" pos:end="1349:36">-&gt;</operator><name pos:start="1349:37" pos:end="1349:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1351:13" pos:end="1421:13">switch <condition pos:start="1351:20" pos:end="1351:24">(<expr pos:start="1351:21" pos:end="1351:23"><name pos:start="1351:21" pos:end="1351:23">op2</name></expr>)</condition> <block pos:start="1351:26" pos:end="1421:13">{<block_content pos:start="1353:13" pos:end="1419:22">

            <case pos:start="1353:13" pos:end="1353:32">case <expr pos:start="1353:18" pos:end="1353:31"><name pos:start="1353:18" pos:end="1353:31">OPC_RADDU_L_OB</name></expr>:</case>

            <case pos:start="1355:13" pos:end="1355:29">case <expr pos:start="1355:18" pos:end="1355:28"><name pos:start="1355:18" pos:end="1355:28">OPC_SUBQ_PW</name></expr>:</case>

            <case pos:start="1357:13" pos:end="1357:31">case <expr pos:start="1357:18" pos:end="1357:30"><name pos:start="1357:18" pos:end="1357:30">OPC_SUBQ_S_PW</name></expr>:</case>

            <case pos:start="1359:13" pos:end="1359:29">case <expr pos:start="1359:18" pos:end="1359:28"><name pos:start="1359:18" pos:end="1359:28">OPC_SUBQ_QH</name></expr>:</case>

            <case pos:start="1361:13" pos:end="1361:31">case <expr pos:start="1361:18" pos:end="1361:30"><name pos:start="1361:18" pos:end="1361:30">OPC_SUBQ_S_QH</name></expr>:</case>

            <case pos:start="1363:13" pos:end="1363:29">case <expr pos:start="1363:18" pos:end="1363:28"><name pos:start="1363:18" pos:end="1363:28">OPC_SUBU_OB</name></expr>:</case>

            <case pos:start="1365:13" pos:end="1365:31">case <expr pos:start="1365:18" pos:end="1365:30"><name pos:start="1365:18" pos:end="1365:30">OPC_SUBU_S_OB</name></expr>:</case>

            <case pos:start="1367:13" pos:end="1367:29">case <expr pos:start="1367:18" pos:end="1367:28"><name pos:start="1367:18" pos:end="1367:28">OPC_SUBU_QH</name></expr>:</case>

            <case pos:start="1369:13" pos:end="1369:31">case <expr pos:start="1369:18" pos:end="1369:30"><name pos:start="1369:18" pos:end="1369:30">OPC_SUBU_S_QH</name></expr>:</case>

            <case pos:start="1371:13" pos:end="1371:30">case <expr pos:start="1371:18" pos:end="1371:29"><name pos:start="1371:18" pos:end="1371:29">OPC_SUBUH_OB</name></expr>:</case>

            <case pos:start="1373:13" pos:end="1373:32">case <expr pos:start="1373:18" pos:end="1373:31"><name pos:start="1373:18" pos:end="1373:31">OPC_SUBUH_R_OB</name></expr>:</case>

            <case pos:start="1375:13" pos:end="1375:29">case <expr pos:start="1375:18" pos:end="1375:28"><name pos:start="1375:18" pos:end="1375:28">OPC_ADDQ_PW</name></expr>:</case>

            <case pos:start="1377:13" pos:end="1377:31">case <expr pos:start="1377:18" pos:end="1377:30"><name pos:start="1377:18" pos:end="1377:30">OPC_ADDQ_S_PW</name></expr>:</case>

            <case pos:start="1379:13" pos:end="1379:29">case <expr pos:start="1379:18" pos:end="1379:28"><name pos:start="1379:18" pos:end="1379:28">OPC_ADDQ_QH</name></expr>:</case>

            <case pos:start="1381:13" pos:end="1381:31">case <expr pos:start="1381:18" pos:end="1381:30"><name pos:start="1381:18" pos:end="1381:30">OPC_ADDQ_S_QH</name></expr>:</case>

            <case pos:start="1383:13" pos:end="1383:29">case <expr pos:start="1383:18" pos:end="1383:28"><name pos:start="1383:18" pos:end="1383:28">OPC_ADDU_OB</name></expr>:</case>

            <case pos:start="1385:13" pos:end="1385:31">case <expr pos:start="1385:18" pos:end="1385:30"><name pos:start="1385:18" pos:end="1385:30">OPC_ADDU_S_OB</name></expr>:</case>

            <case pos:start="1387:13" pos:end="1387:29">case <expr pos:start="1387:18" pos:end="1387:28"><name pos:start="1387:18" pos:end="1387:28">OPC_ADDU_QH</name></expr>:</case>

            <case pos:start="1389:13" pos:end="1389:31">case <expr pos:start="1389:18" pos:end="1389:30"><name pos:start="1389:18" pos:end="1389:30">OPC_ADDU_S_QH</name></expr>:</case>

            <case pos:start="1391:13" pos:end="1391:30">case <expr pos:start="1391:18" pos:end="1391:29"><name pos:start="1391:18" pos:end="1391:29">OPC_ADDUH_OB</name></expr>:</case>

            <case pos:start="1393:13" pos:end="1393:32">case <expr pos:start="1393:18" pos:end="1393:31"><name pos:start="1393:18" pos:end="1393:31">OPC_ADDUH_R_OB</name></expr>:</case>

                <expr_stmt pos:start="1395:17" pos:end="1395:61"><expr pos:start="1395:17" pos:end="1395:60"><call pos:start="1395:17" pos:end="1395:60"><name pos:start="1395:17" pos:end="1395:33">gen_mipsdsp_arith</name><argument_list pos:start="1395:34" pos:end="1395:60">(<argument pos:start="1395:35" pos:end="1395:37"><expr pos:start="1395:35" pos:end="1395:37"><name pos:start="1395:35" pos:end="1395:37">ctx</name></expr></argument>, <argument pos:start="1395:40" pos:end="1395:42"><expr pos:start="1395:40" pos:end="1395:42"><name pos:start="1395:40" pos:end="1395:42">op1</name></expr></argument>, <argument pos:start="1395:45" pos:end="1395:47"><expr pos:start="1395:45" pos:end="1395:47"><name pos:start="1395:45" pos:end="1395:47">op2</name></expr></argument>, <argument pos:start="1395:50" pos:end="1395:51"><expr pos:start="1395:50" pos:end="1395:51"><name pos:start="1395:50" pos:end="1395:51">rd</name></expr></argument>, <argument pos:start="1395:54" pos:end="1395:55"><expr pos:start="1395:54" pos:end="1395:55"><name pos:start="1395:54" pos:end="1395:55">rs</name></expr></argument>, <argument pos:start="1395:58" pos:end="1395:59"><expr pos:start="1395:58" pos:end="1395:59"><name pos:start="1395:58" pos:end="1395:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1397:17" pos:end="1397:22">break;</break>

            <case pos:start="1399:13" pos:end="1399:36">case <expr pos:start="1399:18" pos:end="1399:35"><name pos:start="1399:18" pos:end="1399:35">OPC_MULEQ_S_PW_QHL</name></expr>:</case>

            <case pos:start="1401:13" pos:end="1401:36">case <expr pos:start="1401:18" pos:end="1401:35"><name pos:start="1401:18" pos:end="1401:35">OPC_MULEQ_S_PW_QHR</name></expr>:</case>

            <case pos:start="1403:13" pos:end="1403:36">case <expr pos:start="1403:18" pos:end="1403:35"><name pos:start="1403:18" pos:end="1403:35">OPC_MULEU_S_QH_OBL</name></expr>:</case>

            <case pos:start="1405:13" pos:end="1405:36">case <expr pos:start="1405:18" pos:end="1405:35"><name pos:start="1405:18" pos:end="1405:35">OPC_MULEU_S_QH_OBR</name></expr>:</case>

            <case pos:start="1407:13" pos:end="1407:32">case <expr pos:start="1407:18" pos:end="1407:31"><name pos:start="1407:18" pos:end="1407:31">OPC_MULQ_RS_QH</name></expr>:</case>

                <expr_stmt pos:start="1409:17" pos:end="1409:67"><expr pos:start="1409:17" pos:end="1409:66"><call pos:start="1409:17" pos:end="1409:66"><name pos:start="1409:17" pos:end="1409:36">gen_mipsdsp_multiply</name><argument_list pos:start="1409:37" pos:end="1409:66">(<argument pos:start="1409:38" pos:end="1409:40"><expr pos:start="1409:38" pos:end="1409:40"><name pos:start="1409:38" pos:end="1409:40">ctx</name></expr></argument>, <argument pos:start="1409:43" pos:end="1409:45"><expr pos:start="1409:43" pos:end="1409:45"><name pos:start="1409:43" pos:end="1409:45">op1</name></expr></argument>, <argument pos:start="1409:48" pos:end="1409:50"><expr pos:start="1409:48" pos:end="1409:50"><name pos:start="1409:48" pos:end="1409:50">op2</name></expr></argument>, <argument pos:start="1409:53" pos:end="1409:54"><expr pos:start="1409:53" pos:end="1409:54"><name pos:start="1409:53" pos:end="1409:54">rd</name></expr></argument>, <argument pos:start="1409:57" pos:end="1409:58"><expr pos:start="1409:57" pos:end="1409:58"><name pos:start="1409:57" pos:end="1409:58">rs</name></expr></argument>, <argument pos:start="1409:61" pos:end="1409:62"><expr pos:start="1409:61" pos:end="1409:62"><name pos:start="1409:61" pos:end="1409:62">rt</name></expr></argument>, <argument pos:start="1409:65" pos:end="1409:65"><expr pos:start="1409:65" pos:end="1409:65"><literal type="number" pos:start="1409:65" pos:end="1409:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1411:17" pos:end="1411:22">break;</break>

            <default pos:start="1413:13" pos:end="1413:20">default:</default>            <comment type="block" pos:start="1413:33" pos:end="1413:45">/* Invalid */</comment>

                <expr_stmt pos:start="1415:17" pos:end="1415:43"><expr pos:start="1415:17" pos:end="1415:42"><call pos:start="1415:17" pos:end="1415:42"><name pos:start="1415:17" pos:end="1415:26">MIPS_INVAL</name><argument_list pos:start="1415:27" pos:end="1415:42">(<argument pos:start="1415:28" pos:end="1415:41"><expr pos:start="1415:28" pos:end="1415:41"><literal type="string" pos:start="1415:28" pos:end="1415:41">"MASK ADDU.OB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1417:17" pos:end="1417:49"><expr pos:start="1417:17" pos:end="1417:48"><call pos:start="1417:17" pos:end="1417:48"><name pos:start="1417:17" pos:end="1417:34">generate_exception</name><argument_list pos:start="1417:35" pos:end="1417:48">(<argument pos:start="1417:36" pos:end="1417:38"><expr pos:start="1417:36" pos:end="1417:38"><name pos:start="1417:36" pos:end="1417:38">ctx</name></expr></argument>, <argument pos:start="1417:41" pos:end="1417:47"><expr pos:start="1417:41" pos:end="1417:47"><name pos:start="1417:41" pos:end="1417:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1419:17" pos:end="1419:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1423:13" pos:end="1423:18">break;</break>

        <case pos:start="1425:9" pos:end="1425:32">case <expr pos:start="1425:14" pos:end="1425:31"><name pos:start="1425:14" pos:end="1425:31">OPC_CMPU_EQ_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1427:13" pos:end="1427:47"><expr pos:start="1427:13" pos:end="1427:46"><name pos:start="1427:13" pos:end="1427:15">op2</name> <operator pos:start="1427:17" pos:end="1427:17">=</operator> <call pos:start="1427:19" pos:end="1427:46"><name pos:start="1427:19" pos:end="1427:33">MASK_CMPU_EQ_OB</name><argument_list pos:start="1427:34" pos:end="1427:46">(<argument pos:start="1427:35" pos:end="1427:45"><expr pos:start="1427:35" pos:end="1427:45"><name pos:start="1427:35" pos:end="1427:45"><name pos:start="1427:35" pos:end="1427:37">ctx</name><operator pos:start="1427:38" pos:end="1427:39">-&gt;</operator><name pos:start="1427:40" pos:end="1427:45">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1429:13" pos:end="1511:13">switch <condition pos:start="1429:20" pos:end="1429:24">(<expr pos:start="1429:21" pos:end="1429:23"><name pos:start="1429:21" pos:end="1429:23">op2</name></expr>)</condition> <block pos:start="1429:26" pos:end="1511:13">{<block_content pos:start="1431:13" pos:end="1509:22">

            <case pos:start="1431:13" pos:end="1431:37">case <expr pos:start="1431:18" pos:end="1431:36"><name pos:start="1431:18" pos:end="1431:36">OPC_PRECR_SRA_QH_PW</name></expr>:</case>

            <case pos:start="1433:13" pos:end="1433:39">case <expr pos:start="1433:18" pos:end="1433:38"><name pos:start="1433:18" pos:end="1433:38">OPC_PRECR_SRA_R_QH_PW</name></expr>:</case>

                <comment type="block" pos:start="1435:17" pos:end="1435:41">/* Return value is rt. */</comment>

                <expr_stmt pos:start="1437:17" pos:end="1437:61"><expr pos:start="1437:17" pos:end="1437:60"><call pos:start="1437:17" pos:end="1437:60"><name pos:start="1437:17" pos:end="1437:33">gen_mipsdsp_arith</name><argument_list pos:start="1437:34" pos:end="1437:60">(<argument pos:start="1437:35" pos:end="1437:37"><expr pos:start="1437:35" pos:end="1437:37"><name pos:start="1437:35" pos:end="1437:37">ctx</name></expr></argument>, <argument pos:start="1437:40" pos:end="1437:42"><expr pos:start="1437:40" pos:end="1437:42"><name pos:start="1437:40" pos:end="1437:42">op1</name></expr></argument>, <argument pos:start="1437:45" pos:end="1437:47"><expr pos:start="1437:45" pos:end="1437:47"><name pos:start="1437:45" pos:end="1437:47">op2</name></expr></argument>, <argument pos:start="1437:50" pos:end="1437:51"><expr pos:start="1437:50" pos:end="1437:51"><name pos:start="1437:50" pos:end="1437:51">rt</name></expr></argument>, <argument pos:start="1437:54" pos:end="1437:55"><expr pos:start="1437:54" pos:end="1437:55"><name pos:start="1437:54" pos:end="1437:55">rs</name></expr></argument>, <argument pos:start="1437:58" pos:end="1437:59"><expr pos:start="1437:58" pos:end="1437:59"><name pos:start="1437:58" pos:end="1437:59">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1439:17" pos:end="1439:22">break;</break>

            <case pos:start="1441:13" pos:end="1441:33">case <expr pos:start="1441:18" pos:end="1441:32"><name pos:start="1441:18" pos:end="1441:32">OPC_PRECR_OB_QH</name></expr>:</case>

            <case pos:start="1443:13" pos:end="1443:34">case <expr pos:start="1443:18" pos:end="1443:33"><name pos:start="1443:18" pos:end="1443:33">OPC_PRECRQ_OB_QH</name></expr>:</case>

            <case pos:start="1445:13" pos:end="1445:33">case <expr pos:start="1445:18" pos:end="1445:32"><name pos:start="1445:18" pos:end="1445:32">OPC_PRECRQ_PW_L</name></expr>:</case>

            <case pos:start="1447:13" pos:end="1447:34">case <expr pos:start="1447:18" pos:end="1447:33"><name pos:start="1447:18" pos:end="1447:33">OPC_PRECRQ_QH_PW</name></expr>:</case>

            <case pos:start="1449:13" pos:end="1449:37">case <expr pos:start="1449:18" pos:end="1449:36"><name pos:start="1449:18" pos:end="1449:36">OPC_PRECRQ_RS_QH_PW</name></expr>:</case>

            <case pos:start="1451:13" pos:end="1451:37">case <expr pos:start="1451:18" pos:end="1451:36"><name pos:start="1451:18" pos:end="1451:36">OPC_PRECRQU_S_OB_QH</name></expr>:</case>

                <expr_stmt pos:start="1453:17" pos:end="1453:61"><expr pos:start="1453:17" pos:end="1453:60"><call pos:start="1453:17" pos:end="1453:60"><name pos:start="1453:17" pos:end="1453:33">gen_mipsdsp_arith</name><argument_list pos:start="1453:34" pos:end="1453:60">(<argument pos:start="1453:35" pos:end="1453:37"><expr pos:start="1453:35" pos:end="1453:37"><name pos:start="1453:35" pos:end="1453:37">ctx</name></expr></argument>, <argument pos:start="1453:40" pos:end="1453:42"><expr pos:start="1453:40" pos:end="1453:42"><name pos:start="1453:40" pos:end="1453:42">op1</name></expr></argument>, <argument pos:start="1453:45" pos:end="1453:47"><expr pos:start="1453:45" pos:end="1453:47"><name pos:start="1453:45" pos:end="1453:47">op2</name></expr></argument>, <argument pos:start="1453:50" pos:end="1453:51"><expr pos:start="1453:50" pos:end="1453:51"><name pos:start="1453:50" pos:end="1453:51">rd</name></expr></argument>, <argument pos:start="1453:54" pos:end="1453:55"><expr pos:start="1453:54" pos:end="1453:55"><name pos:start="1453:54" pos:end="1453:55">rs</name></expr></argument>, <argument pos:start="1453:58" pos:end="1453:59"><expr pos:start="1453:58" pos:end="1453:59"><name pos:start="1453:58" pos:end="1453:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1455:17" pos:end="1455:22">break;</break>

            <case pos:start="1457:13" pos:end="1457:32">case <expr pos:start="1457:18" pos:end="1457:31"><name pos:start="1457:18" pos:end="1457:31">OPC_CMPU_EQ_OB</name></expr>:</case>

            <case pos:start="1459:13" pos:end="1459:32">case <expr pos:start="1459:18" pos:end="1459:31"><name pos:start="1459:18" pos:end="1459:31">OPC_CMPU_LT_OB</name></expr>:</case>

            <case pos:start="1461:13" pos:end="1461:32">case <expr pos:start="1461:18" pos:end="1461:31"><name pos:start="1461:18" pos:end="1461:31">OPC_CMPU_LE_OB</name></expr>:</case>

            <case pos:start="1463:13" pos:end="1463:31">case <expr pos:start="1463:18" pos:end="1463:30"><name pos:start="1463:18" pos:end="1463:30">OPC_CMP_EQ_QH</name></expr>:</case>

            <case pos:start="1465:13" pos:end="1465:31">case <expr pos:start="1465:18" pos:end="1465:30"><name pos:start="1465:18" pos:end="1465:30">OPC_CMP_LT_QH</name></expr>:</case>

            <case pos:start="1467:13" pos:end="1467:31">case <expr pos:start="1467:18" pos:end="1467:30"><name pos:start="1467:18" pos:end="1467:30">OPC_CMP_LE_QH</name></expr>:</case>

            <case pos:start="1469:13" pos:end="1469:31">case <expr pos:start="1469:18" pos:end="1469:30"><name pos:start="1469:18" pos:end="1469:30">OPC_CMP_EQ_PW</name></expr>:</case>

            <case pos:start="1471:13" pos:end="1471:31">case <expr pos:start="1471:18" pos:end="1471:30"><name pos:start="1471:18" pos:end="1471:30">OPC_CMP_LT_PW</name></expr>:</case>

            <case pos:start="1473:13" pos:end="1473:31">case <expr pos:start="1473:18" pos:end="1473:30"><name pos:start="1473:18" pos:end="1473:30">OPC_CMP_LE_PW</name></expr>:</case>

                <expr_stmt pos:start="1475:17" pos:end="1475:71"><expr pos:start="1475:17" pos:end="1475:70"><call pos:start="1475:17" pos:end="1475:70"><name pos:start="1475:17" pos:end="1475:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1475:41" pos:end="1475:70">(<argument pos:start="1475:42" pos:end="1475:44"><expr pos:start="1475:42" pos:end="1475:44"><name pos:start="1475:42" pos:end="1475:44">ctx</name></expr></argument>, <argument pos:start="1475:47" pos:end="1475:49"><expr pos:start="1475:47" pos:end="1475:49"><name pos:start="1475:47" pos:end="1475:49">op1</name></expr></argument>, <argument pos:start="1475:52" pos:end="1475:54"><expr pos:start="1475:52" pos:end="1475:54"><name pos:start="1475:52" pos:end="1475:54">op2</name></expr></argument>, <argument pos:start="1475:57" pos:end="1475:58"><expr pos:start="1475:57" pos:end="1475:58"><name pos:start="1475:57" pos:end="1475:58">rd</name></expr></argument>, <argument pos:start="1475:61" pos:end="1475:62"><expr pos:start="1475:61" pos:end="1475:62"><name pos:start="1475:61" pos:end="1475:62">rs</name></expr></argument>, <argument pos:start="1475:65" pos:end="1475:66"><expr pos:start="1475:65" pos:end="1475:66"><name pos:start="1475:65" pos:end="1475:66">rt</name></expr></argument>, <argument pos:start="1475:69" pos:end="1475:69"><expr pos:start="1475:69" pos:end="1475:69"><literal type="number" pos:start="1475:69" pos:end="1475:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1477:17" pos:end="1477:22">break;</break>

            <case pos:start="1479:13" pos:end="1479:34">case <expr pos:start="1479:18" pos:end="1479:33"><name pos:start="1479:18" pos:end="1479:33">OPC_CMPGDU_EQ_OB</name></expr>:</case>

            <case pos:start="1481:13" pos:end="1481:34">case <expr pos:start="1481:18" pos:end="1481:33"><name pos:start="1481:18" pos:end="1481:33">OPC_CMPGDU_LT_OB</name></expr>:</case>

            <case pos:start="1483:13" pos:end="1483:34">case <expr pos:start="1483:18" pos:end="1483:33"><name pos:start="1483:18" pos:end="1483:33">OPC_CMPGDU_LE_OB</name></expr>:</case>

            <case pos:start="1485:13" pos:end="1485:33">case <expr pos:start="1485:18" pos:end="1485:32"><name pos:start="1485:18" pos:end="1485:32">OPC_CMPGU_EQ_OB</name></expr>:</case>

            <case pos:start="1487:13" pos:end="1487:33">case <expr pos:start="1487:18" pos:end="1487:32"><name pos:start="1487:18" pos:end="1487:32">OPC_CMPGU_LT_OB</name></expr>:</case>

            <case pos:start="1489:13" pos:end="1489:33">case <expr pos:start="1489:18" pos:end="1489:32"><name pos:start="1489:18" pos:end="1489:32">OPC_CMPGU_LE_OB</name></expr>:</case>

            <case pos:start="1491:13" pos:end="1491:31">case <expr pos:start="1491:18" pos:end="1491:30"><name pos:start="1491:18" pos:end="1491:30">OPC_PACKRL_PW</name></expr>:</case>

            <case pos:start="1493:13" pos:end="1493:29">case <expr pos:start="1493:18" pos:end="1493:28"><name pos:start="1493:18" pos:end="1493:28">OPC_PICK_OB</name></expr>:</case>

            <case pos:start="1495:13" pos:end="1495:29">case <expr pos:start="1495:18" pos:end="1495:28"><name pos:start="1495:18" pos:end="1495:28">OPC_PICK_PW</name></expr>:</case>

            <case pos:start="1497:13" pos:end="1497:29">case <expr pos:start="1497:18" pos:end="1497:28"><name pos:start="1497:18" pos:end="1497:28">OPC_PICK_QH</name></expr>:</case>

                <expr_stmt pos:start="1499:17" pos:end="1499:71"><expr pos:start="1499:17" pos:end="1499:70"><call pos:start="1499:17" pos:end="1499:70"><name pos:start="1499:17" pos:end="1499:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1499:41" pos:end="1499:70">(<argument pos:start="1499:42" pos:end="1499:44"><expr pos:start="1499:42" pos:end="1499:44"><name pos:start="1499:42" pos:end="1499:44">ctx</name></expr></argument>, <argument pos:start="1499:47" pos:end="1499:49"><expr pos:start="1499:47" pos:end="1499:49"><name pos:start="1499:47" pos:end="1499:49">op1</name></expr></argument>, <argument pos:start="1499:52" pos:end="1499:54"><expr pos:start="1499:52" pos:end="1499:54"><name pos:start="1499:52" pos:end="1499:54">op2</name></expr></argument>, <argument pos:start="1499:57" pos:end="1499:58"><expr pos:start="1499:57" pos:end="1499:58"><name pos:start="1499:57" pos:end="1499:58">rd</name></expr></argument>, <argument pos:start="1499:61" pos:end="1499:62"><expr pos:start="1499:61" pos:end="1499:62"><name pos:start="1499:61" pos:end="1499:62">rs</name></expr></argument>, <argument pos:start="1499:65" pos:end="1499:66"><expr pos:start="1499:65" pos:end="1499:66"><name pos:start="1499:65" pos:end="1499:66">rt</name></expr></argument>, <argument pos:start="1499:69" pos:end="1499:69"><expr pos:start="1499:69" pos:end="1499:69"><literal type="number" pos:start="1499:69" pos:end="1499:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1501:17" pos:end="1501:22">break;</break>

            <default pos:start="1503:13" pos:end="1503:20">default:</default>            <comment type="block" pos:start="1503:33" pos:end="1503:45">/* Invalid */</comment>

                <expr_stmt pos:start="1505:17" pos:end="1505:46"><expr pos:start="1505:17" pos:end="1505:45"><call pos:start="1505:17" pos:end="1505:45"><name pos:start="1505:17" pos:end="1505:26">MIPS_INVAL</name><argument_list pos:start="1505:27" pos:end="1505:45">(<argument pos:start="1505:28" pos:end="1505:44"><expr pos:start="1505:28" pos:end="1505:44"><literal type="string" pos:start="1505:28" pos:end="1505:44">"MASK CMPU_EQ.OB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1507:17" pos:end="1507:49"><expr pos:start="1507:17" pos:end="1507:48"><call pos:start="1507:17" pos:end="1507:48"><name pos:start="1507:17" pos:end="1507:34">generate_exception</name><argument_list pos:start="1507:35" pos:end="1507:48">(<argument pos:start="1507:36" pos:end="1507:38"><expr pos:start="1507:36" pos:end="1507:38"><name pos:start="1507:36" pos:end="1507:38">ctx</name></expr></argument>, <argument pos:start="1507:41" pos:end="1507:47"><expr pos:start="1507:41" pos:end="1507:47"><name pos:start="1507:41" pos:end="1507:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1509:17" pos:end="1509:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1513:13" pos:end="1513:18">break;</break>

        <case pos:start="1515:9" pos:end="1515:29">case <expr pos:start="1515:14" pos:end="1515:28"><name pos:start="1515:14" pos:end="1515:28">OPC_DAPPEND_DSP</name></expr>:</case>

            <expr_stmt pos:start="1517:13" pos:end="1517:29"><expr pos:start="1517:13" pos:end="1517:28"><call pos:start="1517:13" pos:end="1517:28"><name pos:start="1517:13" pos:end="1517:23">check_dspr2</name><argument_list pos:start="1517:24" pos:end="1517:28">(<argument pos:start="1517:25" pos:end="1517:27"><expr pos:start="1517:25" pos:end="1517:27"><name pos:start="1517:25" pos:end="1517:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1519:13" pos:end="1519:44"><expr pos:start="1519:13" pos:end="1519:43"><name pos:start="1519:13" pos:end="1519:15">op2</name> <operator pos:start="1519:17" pos:end="1519:17">=</operator> <call pos:start="1519:19" pos:end="1519:43"><name pos:start="1519:19" pos:end="1519:30">MASK_DAPPEND</name><argument_list pos:start="1519:31" pos:end="1519:43">(<argument pos:start="1519:32" pos:end="1519:42"><expr pos:start="1519:32" pos:end="1519:42"><name pos:start="1519:32" pos:end="1519:42"><name pos:start="1519:32" pos:end="1519:34">ctx</name><operator pos:start="1519:35" pos:end="1519:36">-&gt;</operator><name pos:start="1519:37" pos:end="1519:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1521:13" pos:end="1521:67"><expr pos:start="1521:13" pos:end="1521:66"><call pos:start="1521:13" pos:end="1521:66"><name pos:start="1521:13" pos:end="1521:36">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1521:37" pos:end="1521:66">(<argument pos:start="1521:38" pos:end="1521:40"><expr pos:start="1521:38" pos:end="1521:40"><name pos:start="1521:38" pos:end="1521:40">ctx</name></expr></argument>, <argument pos:start="1521:43" pos:end="1521:45"><expr pos:start="1521:43" pos:end="1521:45"><name pos:start="1521:43" pos:end="1521:45">op1</name></expr></argument>, <argument pos:start="1521:48" pos:end="1521:50"><expr pos:start="1521:48" pos:end="1521:50"><name pos:start="1521:48" pos:end="1521:50">op2</name></expr></argument>, <argument pos:start="1521:53" pos:end="1521:54"><expr pos:start="1521:53" pos:end="1521:54"><name pos:start="1521:53" pos:end="1521:54">rt</name></expr></argument>, <argument pos:start="1521:57" pos:end="1521:58"><expr pos:start="1521:57" pos:end="1521:58"><name pos:start="1521:57" pos:end="1521:58">rs</name></expr></argument>, <argument pos:start="1521:61" pos:end="1521:62"><expr pos:start="1521:61" pos:end="1521:62"><name pos:start="1521:61" pos:end="1521:62">rd</name></expr></argument>, <argument pos:start="1521:65" pos:end="1521:65"><expr pos:start="1521:65" pos:end="1521:65"><literal type="number" pos:start="1521:65" pos:end="1521:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1523:13" pos:end="1523:18">break;</break>

        <case pos:start="1525:9" pos:end="1525:29">case <expr pos:start="1525:14" pos:end="1525:28"><name pos:start="1525:14" pos:end="1525:28">OPC_DEXTR_W_DSP</name></expr>:</case>

            <expr_stmt pos:start="1527:13" pos:end="1527:44"><expr pos:start="1527:13" pos:end="1527:43"><name pos:start="1527:13" pos:end="1527:15">op2</name> <operator pos:start="1527:17" pos:end="1527:17">=</operator> <call pos:start="1527:19" pos:end="1527:43"><name pos:start="1527:19" pos:end="1527:30">MASK_DEXTR_W</name><argument_list pos:start="1527:31" pos:end="1527:43">(<argument pos:start="1527:32" pos:end="1527:42"><expr pos:start="1527:32" pos:end="1527:42"><name pos:start="1527:32" pos:end="1527:42"><name pos:start="1527:32" pos:end="1527:34">ctx</name><operator pos:start="1527:35" pos:end="1527:36">-&gt;</operator><name pos:start="1527:37" pos:end="1527:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1529:13" pos:end="1589:13">switch <condition pos:start="1529:20" pos:end="1529:24">(<expr pos:start="1529:21" pos:end="1529:23"><name pos:start="1529:21" pos:end="1529:23">op2</name></expr>)</condition> <block pos:start="1529:26" pos:end="1589:13">{<block_content pos:start="1531:13" pos:end="1587:22">

            <case pos:start="1531:13" pos:end="1531:27">case <expr pos:start="1531:18" pos:end="1531:26"><name pos:start="1531:18" pos:end="1531:26">OPC_DEXTP</name></expr>:</case>

            <case pos:start="1533:13" pos:end="1533:29">case <expr pos:start="1533:18" pos:end="1533:28"><name pos:start="1533:18" pos:end="1533:28">OPC_DEXTPDP</name></expr>:</case>

            <case pos:start="1535:13" pos:end="1535:30">case <expr pos:start="1535:18" pos:end="1535:29"><name pos:start="1535:18" pos:end="1535:29">OPC_DEXTPDPV</name></expr>:</case>

            <case pos:start="1537:13" pos:end="1537:28">case <expr pos:start="1537:18" pos:end="1537:27"><name pos:start="1537:18" pos:end="1537:27">OPC_DEXTPV</name></expr>:</case>

            <case pos:start="1539:13" pos:end="1539:29">case <expr pos:start="1539:18" pos:end="1539:28"><name pos:start="1539:18" pos:end="1539:28">OPC_DEXTR_L</name></expr>:</case>

            <case pos:start="1541:13" pos:end="1541:31">case <expr pos:start="1541:18" pos:end="1541:30"><name pos:start="1541:18" pos:end="1541:30">OPC_DEXTR_R_L</name></expr>:</case>

            <case pos:start="1543:13" pos:end="1543:32">case <expr pos:start="1543:18" pos:end="1543:31"><name pos:start="1543:18" pos:end="1543:31">OPC_DEXTR_RS_L</name></expr>:</case>

            <case pos:start="1545:13" pos:end="1545:29">case <expr pos:start="1545:18" pos:end="1545:28"><name pos:start="1545:18" pos:end="1545:28">OPC_DEXTR_W</name></expr>:</case>

            <case pos:start="1547:13" pos:end="1547:31">case <expr pos:start="1547:18" pos:end="1547:30"><name pos:start="1547:18" pos:end="1547:30">OPC_DEXTR_R_W</name></expr>:</case>

            <case pos:start="1549:13" pos:end="1549:32">case <expr pos:start="1549:18" pos:end="1549:31"><name pos:start="1549:18" pos:end="1549:31">OPC_DEXTR_RS_W</name></expr>:</case>

            <case pos:start="1551:13" pos:end="1551:31">case <expr pos:start="1551:18" pos:end="1551:30"><name pos:start="1551:18" pos:end="1551:30">OPC_DEXTR_S_H</name></expr>:</case>

            <case pos:start="1553:13" pos:end="1553:30">case <expr pos:start="1553:18" pos:end="1553:29"><name pos:start="1553:18" pos:end="1553:29">OPC_DEXTRV_L</name></expr>:</case>

            <case pos:start="1555:13" pos:end="1555:32">case <expr pos:start="1555:18" pos:end="1555:31"><name pos:start="1555:18" pos:end="1555:31">OPC_DEXTRV_R_L</name></expr>:</case>

            <case pos:start="1557:13" pos:end="1557:33">case <expr pos:start="1557:18" pos:end="1557:32"><name pos:start="1557:18" pos:end="1557:32">OPC_DEXTRV_RS_L</name></expr>:</case>

            <case pos:start="1559:13" pos:end="1559:32">case <expr pos:start="1559:18" pos:end="1559:31"><name pos:start="1559:18" pos:end="1559:31">OPC_DEXTRV_S_H</name></expr>:</case>

            <case pos:start="1561:13" pos:end="1561:30">case <expr pos:start="1561:18" pos:end="1561:29"><name pos:start="1561:18" pos:end="1561:29">OPC_DEXTRV_W</name></expr>:</case>

            <case pos:start="1563:13" pos:end="1563:32">case <expr pos:start="1563:18" pos:end="1563:31"><name pos:start="1563:18" pos:end="1563:31">OPC_DEXTRV_R_W</name></expr>:</case>

            <case pos:start="1565:13" pos:end="1565:33">case <expr pos:start="1565:18" pos:end="1565:32"><name pos:start="1565:18" pos:end="1565:32">OPC_DEXTRV_RS_W</name></expr>:</case>

                <expr_stmt pos:start="1567:17" pos:end="1567:66"><expr pos:start="1567:17" pos:end="1567:65"><call pos:start="1567:17" pos:end="1567:65"><name pos:start="1567:17" pos:end="1567:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1567:36" pos:end="1567:65">(<argument pos:start="1567:37" pos:end="1567:39"><expr pos:start="1567:37" pos:end="1567:39"><name pos:start="1567:37" pos:end="1567:39">ctx</name></expr></argument>, <argument pos:start="1567:42" pos:end="1567:44"><expr pos:start="1567:42" pos:end="1567:44"><name pos:start="1567:42" pos:end="1567:44">op1</name></expr></argument>, <argument pos:start="1567:47" pos:end="1567:49"><expr pos:start="1567:47" pos:end="1567:49"><name pos:start="1567:47" pos:end="1567:49">op2</name></expr></argument>, <argument pos:start="1567:52" pos:end="1567:53"><expr pos:start="1567:52" pos:end="1567:53"><name pos:start="1567:52" pos:end="1567:53">rt</name></expr></argument>, <argument pos:start="1567:56" pos:end="1567:57"><expr pos:start="1567:56" pos:end="1567:57"><name pos:start="1567:56" pos:end="1567:57">rs</name></expr></argument>, <argument pos:start="1567:60" pos:end="1567:61"><expr pos:start="1567:60" pos:end="1567:61"><name pos:start="1567:60" pos:end="1567:61">rd</name></expr></argument>, <argument pos:start="1567:64" pos:end="1567:64"><expr pos:start="1567:64" pos:end="1567:64"><literal type="number" pos:start="1567:64" pos:end="1567:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1569:17" pos:end="1569:22">break;</break>

            <case pos:start="1571:13" pos:end="1571:29">case <expr pos:start="1571:18" pos:end="1571:28"><name pos:start="1571:18" pos:end="1571:28">OPC_DMTHLIP</name></expr>:</case>

            <case pos:start="1573:13" pos:end="1573:28">case <expr pos:start="1573:18" pos:end="1573:27"><name pos:start="1573:18" pos:end="1573:27">OPC_DSHILO</name></expr>:</case>

            <case pos:start="1575:13" pos:end="1575:29">case <expr pos:start="1575:18" pos:end="1575:28"><name pos:start="1575:18" pos:end="1575:28">OPC_DSHILOV</name></expr>:</case>

                <expr_stmt pos:start="1577:17" pos:end="1577:66"><expr pos:start="1577:17" pos:end="1577:65"><call pos:start="1577:17" pos:end="1577:65"><name pos:start="1577:17" pos:end="1577:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1577:36" pos:end="1577:65">(<argument pos:start="1577:37" pos:end="1577:39"><expr pos:start="1577:37" pos:end="1577:39"><name pos:start="1577:37" pos:end="1577:39">ctx</name></expr></argument>, <argument pos:start="1577:42" pos:end="1577:44"><expr pos:start="1577:42" pos:end="1577:44"><name pos:start="1577:42" pos:end="1577:44">op1</name></expr></argument>, <argument pos:start="1577:47" pos:end="1577:49"><expr pos:start="1577:47" pos:end="1577:49"><name pos:start="1577:47" pos:end="1577:49">op2</name></expr></argument>, <argument pos:start="1577:52" pos:end="1577:53"><expr pos:start="1577:52" pos:end="1577:53"><name pos:start="1577:52" pos:end="1577:53">rd</name></expr></argument>, <argument pos:start="1577:56" pos:end="1577:57"><expr pos:start="1577:56" pos:end="1577:57"><name pos:start="1577:56" pos:end="1577:57">rs</name></expr></argument>, <argument pos:start="1577:60" pos:end="1577:61"><expr pos:start="1577:60" pos:end="1577:61"><name pos:start="1577:60" pos:end="1577:61">rt</name></expr></argument>, <argument pos:start="1577:64" pos:end="1577:64"><expr pos:start="1577:64" pos:end="1577:64"><literal type="number" pos:start="1577:64" pos:end="1577:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1579:17" pos:end="1579:22">break;</break>

            <default pos:start="1581:13" pos:end="1581:20">default:</default>            <comment type="block" pos:start="1581:33" pos:end="1581:45">/* Invalid */</comment>

                <expr_stmt pos:start="1583:17" pos:end="1583:42"><expr pos:start="1583:17" pos:end="1583:41"><call pos:start="1583:17" pos:end="1583:41"><name pos:start="1583:17" pos:end="1583:26">MIPS_INVAL</name><argument_list pos:start="1583:27" pos:end="1583:41">(<argument pos:start="1583:28" pos:end="1583:40"><expr pos:start="1583:28" pos:end="1583:40"><literal type="string" pos:start="1583:28" pos:end="1583:40">"MASK EXTR.W"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1585:17" pos:end="1585:49"><expr pos:start="1585:17" pos:end="1585:48"><call pos:start="1585:17" pos:end="1585:48"><name pos:start="1585:17" pos:end="1585:34">generate_exception</name><argument_list pos:start="1585:35" pos:end="1585:48">(<argument pos:start="1585:36" pos:end="1585:38"><expr pos:start="1585:36" pos:end="1585:38"><name pos:start="1585:36" pos:end="1585:38">ctx</name></expr></argument>, <argument pos:start="1585:41" pos:end="1585:47"><expr pos:start="1585:41" pos:end="1585:47"><name pos:start="1585:41" pos:end="1585:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1587:17" pos:end="1587:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1591:13" pos:end="1591:18">break;</break>

        <case pos:start="1593:9" pos:end="1593:31">case <expr pos:start="1593:14" pos:end="1593:30"><name pos:start="1593:14" pos:end="1593:30">OPC_DPAQ_W_QH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1595:13" pos:end="1595:46"><expr pos:start="1595:13" pos:end="1595:45"><name pos:start="1595:13" pos:end="1595:15">op2</name> <operator pos:start="1595:17" pos:end="1595:17">=</operator> <call pos:start="1595:19" pos:end="1595:45"><name pos:start="1595:19" pos:end="1595:32">MASK_DPAQ_W_QH</name><argument_list pos:start="1595:33" pos:end="1595:45">(<argument pos:start="1595:34" pos:end="1595:44"><expr pos:start="1595:34" pos:end="1595:44"><name pos:start="1595:34" pos:end="1595:44"><name pos:start="1595:34" pos:end="1595:36">ctx</name><operator pos:start="1595:37" pos:end="1595:38">-&gt;</operator><name pos:start="1595:39" pos:end="1595:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1597:13" pos:end="1667:13">switch <condition pos:start="1597:20" pos:end="1597:24">(<expr pos:start="1597:21" pos:end="1597:23"><name pos:start="1597:21" pos:end="1597:23">op2</name></expr>)</condition> <block pos:start="1597:26" pos:end="1667:13">{<block_content pos:start="1599:13" pos:end="1665:22">

            <case pos:start="1599:13" pos:end="1599:32">case <expr pos:start="1599:18" pos:end="1599:31"><name pos:start="1599:18" pos:end="1599:31">OPC_DPAU_H_OBL</name></expr>:</case>

            <case pos:start="1601:13" pos:end="1601:32">case <expr pos:start="1601:18" pos:end="1601:31"><name pos:start="1601:18" pos:end="1601:31">OPC_DPAU_H_OBR</name></expr>:</case>

            <case pos:start="1603:13" pos:end="1603:32">case <expr pos:start="1603:18" pos:end="1603:31"><name pos:start="1603:18" pos:end="1603:31">OPC_DPSU_H_OBL</name></expr>:</case>

            <case pos:start="1605:13" pos:end="1605:32">case <expr pos:start="1605:18" pos:end="1605:31"><name pos:start="1605:18" pos:end="1605:31">OPC_DPSU_H_OBR</name></expr>:</case>

            <case pos:start="1607:13" pos:end="1607:30">case <expr pos:start="1607:18" pos:end="1607:29"><name pos:start="1607:18" pos:end="1607:29">OPC_DPA_W_QH</name></expr>:</case>

            <case pos:start="1609:13" pos:end="1609:33">case <expr pos:start="1609:18" pos:end="1609:32"><name pos:start="1609:18" pos:end="1609:32">OPC_DPAQ_S_W_QH</name></expr>:</case>

            <case pos:start="1611:13" pos:end="1611:30">case <expr pos:start="1611:18" pos:end="1611:29"><name pos:start="1611:18" pos:end="1611:29">OPC_DPS_W_QH</name></expr>:</case>

            <case pos:start="1613:13" pos:end="1613:33">case <expr pos:start="1613:18" pos:end="1613:32"><name pos:start="1613:18" pos:end="1613:32">OPC_DPSQ_S_W_QH</name></expr>:</case>

            <case pos:start="1615:13" pos:end="1615:35">case <expr pos:start="1615:18" pos:end="1615:34"><name pos:start="1615:18" pos:end="1615:34">OPC_MULSAQ_S_W_QH</name></expr>:</case>

            <case pos:start="1617:13" pos:end="1617:34">case <expr pos:start="1617:18" pos:end="1617:33"><name pos:start="1617:18" pos:end="1617:33">OPC_DPAQ_SA_L_PW</name></expr>:</case>

            <case pos:start="1619:13" pos:end="1619:34">case <expr pos:start="1619:18" pos:end="1619:33"><name pos:start="1619:18" pos:end="1619:33">OPC_DPSQ_SA_L_PW</name></expr>:</case>

            <case pos:start="1621:13" pos:end="1621:35">case <expr pos:start="1621:18" pos:end="1621:34"><name pos:start="1621:18" pos:end="1621:34">OPC_MULSAQ_S_L_PW</name></expr>:</case>

                <expr_stmt pos:start="1623:17" pos:end="1623:67"><expr pos:start="1623:17" pos:end="1623:66"><call pos:start="1623:17" pos:end="1623:66"><name pos:start="1623:17" pos:end="1623:36">gen_mipsdsp_multiply</name><argument_list pos:start="1623:37" pos:end="1623:66">(<argument pos:start="1623:38" pos:end="1623:40"><expr pos:start="1623:38" pos:end="1623:40"><name pos:start="1623:38" pos:end="1623:40">ctx</name></expr></argument>, <argument pos:start="1623:43" pos:end="1623:45"><expr pos:start="1623:43" pos:end="1623:45"><name pos:start="1623:43" pos:end="1623:45">op1</name></expr></argument>, <argument pos:start="1623:48" pos:end="1623:50"><expr pos:start="1623:48" pos:end="1623:50"><name pos:start="1623:48" pos:end="1623:50">op2</name></expr></argument>, <argument pos:start="1623:53" pos:end="1623:54"><expr pos:start="1623:53" pos:end="1623:54"><name pos:start="1623:53" pos:end="1623:54">rd</name></expr></argument>, <argument pos:start="1623:57" pos:end="1623:58"><expr pos:start="1623:57" pos:end="1623:58"><name pos:start="1623:57" pos:end="1623:58">rs</name></expr></argument>, <argument pos:start="1623:61" pos:end="1623:62"><expr pos:start="1623:61" pos:end="1623:62"><name pos:start="1623:61" pos:end="1623:62">rt</name></expr></argument>, <argument pos:start="1623:65" pos:end="1623:65"><expr pos:start="1623:65" pos:end="1623:65"><literal type="number" pos:start="1623:65" pos:end="1623:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1625:17" pos:end="1625:22">break;</break>

            <case pos:start="1627:13" pos:end="1627:34">case <expr pos:start="1627:18" pos:end="1627:33"><name pos:start="1627:18" pos:end="1627:33">OPC_MAQ_S_W_QHLL</name></expr>:</case>

            <case pos:start="1629:13" pos:end="1629:34">case <expr pos:start="1629:18" pos:end="1629:33"><name pos:start="1629:18" pos:end="1629:33">OPC_MAQ_S_W_QHLR</name></expr>:</case>

            <case pos:start="1631:13" pos:end="1631:34">case <expr pos:start="1631:18" pos:end="1631:33"><name pos:start="1631:18" pos:end="1631:33">OPC_MAQ_S_W_QHRL</name></expr>:</case>

            <case pos:start="1633:13" pos:end="1633:34">case <expr pos:start="1633:18" pos:end="1633:33"><name pos:start="1633:18" pos:end="1633:33">OPC_MAQ_S_W_QHRR</name></expr>:</case>

            <case pos:start="1635:13" pos:end="1635:35">case <expr pos:start="1635:18" pos:end="1635:34"><name pos:start="1635:18" pos:end="1635:34">OPC_MAQ_SA_W_QHLL</name></expr>:</case>

            <case pos:start="1637:13" pos:end="1637:35">case <expr pos:start="1637:18" pos:end="1637:34"><name pos:start="1637:18" pos:end="1637:34">OPC_MAQ_SA_W_QHLR</name></expr>:</case>

            <case pos:start="1639:13" pos:end="1639:35">case <expr pos:start="1639:18" pos:end="1639:34"><name pos:start="1639:18" pos:end="1639:34">OPC_MAQ_SA_W_QHRL</name></expr>:</case>

            <case pos:start="1641:13" pos:end="1641:35">case <expr pos:start="1641:18" pos:end="1641:34"><name pos:start="1641:18" pos:end="1641:34">OPC_MAQ_SA_W_QHRR</name></expr>:</case>

            <case pos:start="1643:13" pos:end="1643:33">case <expr pos:start="1643:18" pos:end="1643:32"><name pos:start="1643:18" pos:end="1643:32">OPC_MAQ_S_L_PWL</name></expr>:</case>

            <case pos:start="1645:13" pos:end="1645:33">case <expr pos:start="1645:18" pos:end="1645:32"><name pos:start="1645:18" pos:end="1645:32">OPC_MAQ_S_L_PWR</name></expr>:</case>

            <case pos:start="1647:13" pos:end="1647:27">case <expr pos:start="1647:18" pos:end="1647:26"><name pos:start="1647:18" pos:end="1647:26">OPC_DMADD</name></expr>:</case>

            <case pos:start="1649:13" pos:end="1649:28">case <expr pos:start="1649:18" pos:end="1649:27"><name pos:start="1649:18" pos:end="1649:27">OPC_DMADDU</name></expr>:</case>

            <case pos:start="1651:13" pos:end="1651:27">case <expr pos:start="1651:18" pos:end="1651:26"><name pos:start="1651:18" pos:end="1651:26">OPC_DMSUB</name></expr>:</case>

            <case pos:start="1653:13" pos:end="1653:28">case <expr pos:start="1653:18" pos:end="1653:27"><name pos:start="1653:18" pos:end="1653:27">OPC_DMSUBU</name></expr>:</case>

                <expr_stmt pos:start="1655:17" pos:end="1655:67"><expr pos:start="1655:17" pos:end="1655:66"><call pos:start="1655:17" pos:end="1655:66"><name pos:start="1655:17" pos:end="1655:36">gen_mipsdsp_multiply</name><argument_list pos:start="1655:37" pos:end="1655:66">(<argument pos:start="1655:38" pos:end="1655:40"><expr pos:start="1655:38" pos:end="1655:40"><name pos:start="1655:38" pos:end="1655:40">ctx</name></expr></argument>, <argument pos:start="1655:43" pos:end="1655:45"><expr pos:start="1655:43" pos:end="1655:45"><name pos:start="1655:43" pos:end="1655:45">op1</name></expr></argument>, <argument pos:start="1655:48" pos:end="1655:50"><expr pos:start="1655:48" pos:end="1655:50"><name pos:start="1655:48" pos:end="1655:50">op2</name></expr></argument>, <argument pos:start="1655:53" pos:end="1655:54"><expr pos:start="1655:53" pos:end="1655:54"><name pos:start="1655:53" pos:end="1655:54">rd</name></expr></argument>, <argument pos:start="1655:57" pos:end="1655:58"><expr pos:start="1655:57" pos:end="1655:58"><name pos:start="1655:57" pos:end="1655:58">rs</name></expr></argument>, <argument pos:start="1655:61" pos:end="1655:62"><expr pos:start="1655:61" pos:end="1655:62"><name pos:start="1655:61" pos:end="1655:62">rt</name></expr></argument>, <argument pos:start="1655:65" pos:end="1655:65"><expr pos:start="1655:65" pos:end="1655:65"><literal type="number" pos:start="1655:65" pos:end="1655:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1657:17" pos:end="1657:22">break;</break>

            <default pos:start="1659:13" pos:end="1659:20">default:</default>            <comment type="block" pos:start="1659:33" pos:end="1659:45">/* Invalid */</comment>

                <expr_stmt pos:start="1661:17" pos:end="1661:45"><expr pos:start="1661:17" pos:end="1661:44"><call pos:start="1661:17" pos:end="1661:44"><name pos:start="1661:17" pos:end="1661:26">MIPS_INVAL</name><argument_list pos:start="1661:27" pos:end="1661:44">(<argument pos:start="1661:28" pos:end="1661:43"><expr pos:start="1661:28" pos:end="1661:43"><literal type="string" pos:start="1661:28" pos:end="1661:43">"MASK DPAQ.W.QH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1663:17" pos:end="1663:49"><expr pos:start="1663:17" pos:end="1663:48"><call pos:start="1663:17" pos:end="1663:48"><name pos:start="1663:17" pos:end="1663:34">generate_exception</name><argument_list pos:start="1663:35" pos:end="1663:48">(<argument pos:start="1663:36" pos:end="1663:38"><expr pos:start="1663:36" pos:end="1663:38"><name pos:start="1663:36" pos:end="1663:38">ctx</name></expr></argument>, <argument pos:start="1663:41" pos:end="1663:47"><expr pos:start="1663:41" pos:end="1663:47"><name pos:start="1663:41" pos:end="1663:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1665:17" pos:end="1665:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1669:13" pos:end="1669:18">break;</break>

        <case pos:start="1671:9" pos:end="1671:27">case <expr pos:start="1671:14" pos:end="1671:26"><name pos:start="1671:14" pos:end="1671:26">OPC_DINSV_DSP</name></expr>:</case>

            <expr_stmt pos:start="1673:13" pos:end="1673:41"><expr pos:start="1673:13" pos:end="1673:40"><name pos:start="1673:13" pos:end="1673:15">op2</name> <operator pos:start="1673:17" pos:end="1673:17">=</operator> <call pos:start="1673:19" pos:end="1673:40"><name pos:start="1673:19" pos:end="1673:27">MASK_INSV</name><argument_list pos:start="1673:28" pos:end="1673:40">(<argument pos:start="1673:29" pos:end="1673:39"><expr pos:start="1673:29" pos:end="1673:39"><name pos:start="1673:29" pos:end="1673:39"><name pos:start="1673:29" pos:end="1673:31">ctx</name><operator pos:start="1673:32" pos:end="1673:33">-&gt;</operator><name pos:start="1673:34" pos:end="1673:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1675:13" pos:end="1723:13">switch <condition pos:start="1675:20" pos:end="1675:24">(<expr pos:start="1675:21" pos:end="1675:23"><name pos:start="1675:21" pos:end="1675:23">op2</name></expr>)</condition> <block pos:start="1675:26" pos:end="1723:13">{<block_content pos:start="1677:13" pos:end="1721:22">

            <case pos:start="1677:13" pos:end="1677:27">case <expr pos:start="1677:18" pos:end="1677:26"><name pos:start="1677:18" pos:end="1677:26">OPC_DINSV</name></expr>:</case>

                <block pos:start="1679:17" pos:end="1713:17">{<block_content pos:start="1681:21" pos:end="1711:26">

                    <decl_stmt pos:start="1681:21" pos:end="1681:32"><decl pos:start="1681:21" pos:end="1681:27"><type pos:start="1681:21" pos:end="1681:24"><name pos:start="1681:21" pos:end="1681:24">TCGv</name></type> <name pos:start="1681:26" pos:end="1681:27">t0</name></decl>, <decl pos:start="1681:30" pos:end="1681:31"><type ref="prev" pos:start="1681:21" pos:end="1681:24"/><name pos:start="1681:30" pos:end="1681:31">t1</name></decl>;</decl_stmt>



                    <if_stmt pos:start="1685:21" pos:end="1691:21"><if pos:start="1685:21" pos:end="1691:21">if <condition pos:start="1685:24" pos:end="1685:32">(<expr pos:start="1685:25" pos:end="1685:31"><name pos:start="1685:25" pos:end="1685:26">rt</name> <operator pos:start="1685:28" pos:end="1685:29">==</operator> <literal type="number" pos:start="1685:31" pos:end="1685:31">0</literal></expr>)</condition> <block pos:start="1685:34" pos:end="1691:21">{<block_content pos:start="1687:25" pos:end="1689:30">

                        <expr_stmt pos:start="1687:25" pos:end="1687:42"><expr pos:start="1687:25" pos:end="1687:41"><call pos:start="1687:25" pos:end="1687:41"><name pos:start="1687:25" pos:end="1687:34">MIPS_DEBUG</name><argument_list pos:start="1687:35" pos:end="1687:41">(<argument pos:start="1687:36" pos:end="1687:40"><expr pos:start="1687:36" pos:end="1687:40"><literal type="string" pos:start="1687:36" pos:end="1687:40">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1689:25" pos:end="1689:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="1693:21" pos:end="1693:35"><expr pos:start="1693:21" pos:end="1693:34"><call pos:start="1693:21" pos:end="1693:34"><name pos:start="1693:21" pos:end="1693:29">check_dsp</name><argument_list pos:start="1693:30" pos:end="1693:34">(<argument pos:start="1693:31" pos:end="1693:33"><expr pos:start="1693:31" pos:end="1693:33"><name pos:start="1693:31" pos:end="1693:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1697:21" pos:end="1697:40"><expr pos:start="1697:21" pos:end="1697:39"><name pos:start="1697:21" pos:end="1697:22">t0</name> <operator pos:start="1697:24" pos:end="1697:24">=</operator> <call pos:start="1697:26" pos:end="1697:39"><name pos:start="1697:26" pos:end="1697:37">tcg_temp_new</name><argument_list pos:start="1697:38" pos:end="1697:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1699:21" pos:end="1699:40"><expr pos:start="1699:21" pos:end="1699:39"><name pos:start="1699:21" pos:end="1699:22">t1</name> <operator pos:start="1699:24" pos:end="1699:24">=</operator> <call pos:start="1699:26" pos:end="1699:39"><name pos:start="1699:26" pos:end="1699:37">tcg_temp_new</name><argument_list pos:start="1699:38" pos:end="1699:39">()</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1703:21" pos:end="1703:41"><expr pos:start="1703:21" pos:end="1703:40"><call pos:start="1703:21" pos:end="1703:40"><name pos:start="1703:21" pos:end="1703:32">gen_load_gpr</name><argument_list pos:start="1703:33" pos:end="1703:40">(<argument pos:start="1703:34" pos:end="1703:35"><expr pos:start="1703:34" pos:end="1703:35"><name pos:start="1703:34" pos:end="1703:35">t0</name></expr></argument>, <argument pos:start="1703:38" pos:end="1703:39"><expr pos:start="1703:38" pos:end="1703:39"><name pos:start="1703:38" pos:end="1703:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1705:21" pos:end="1705:41"><expr pos:start="1705:21" pos:end="1705:40"><call pos:start="1705:21" pos:end="1705:40"><name pos:start="1705:21" pos:end="1705:32">gen_load_gpr</name><argument_list pos:start="1705:33" pos:end="1705:40">(<argument pos:start="1705:34" pos:end="1705:35"><expr pos:start="1705:34" pos:end="1705:35"><name pos:start="1705:34" pos:end="1705:35">t1</name></expr></argument>, <argument pos:start="1705:38" pos:end="1705:39"><expr pos:start="1705:38" pos:end="1705:39"><name pos:start="1705:38" pos:end="1705:39">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1709:21" pos:end="1709:67"><expr pos:start="1709:21" pos:end="1709:66"><call pos:start="1709:21" pos:end="1709:66"><name pos:start="1709:21" pos:end="1709:36">gen_helper_dinsv</name><argument_list pos:start="1709:37" pos:end="1709:66">(<argument pos:start="1709:38" pos:end="1709:48"><expr pos:start="1709:38" pos:end="1709:48"><name pos:start="1709:38" pos:end="1709:48"><name pos:start="1709:38" pos:end="1709:44">cpu_gpr</name><index pos:start="1709:45" pos:end="1709:48">[<expr pos:start="1709:46" pos:end="1709:47"><name pos:start="1709:46" pos:end="1709:47">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="1709:51" pos:end="1709:57"><expr pos:start="1709:51" pos:end="1709:57"><name pos:start="1709:51" pos:end="1709:57">cpu_env</name></expr></argument>, <argument pos:start="1709:60" pos:end="1709:61"><expr pos:start="1709:60" pos:end="1709:61"><name pos:start="1709:60" pos:end="1709:61">t1</name></expr></argument>, <argument pos:start="1709:64" pos:end="1709:65"><expr pos:start="1709:64" pos:end="1709:65"><name pos:start="1709:64" pos:end="1709:65">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1711:21" pos:end="1711:26">break;</break>

                </block_content>}</block>

            <default pos:start="1715:13" pos:end="1715:20">default:</default>            <comment type="block" pos:start="1715:33" pos:end="1715:45">/* Invalid */</comment>

                <expr_stmt pos:start="1717:17" pos:end="1717:41"><expr pos:start="1717:17" pos:end="1717:40"><call pos:start="1717:17" pos:end="1717:40"><name pos:start="1717:17" pos:end="1717:26">MIPS_INVAL</name><argument_list pos:start="1717:27" pos:end="1717:40">(<argument pos:start="1717:28" pos:end="1717:39"><expr pos:start="1717:28" pos:end="1717:39"><literal type="string" pos:start="1717:28" pos:end="1717:39">"MASK DINSV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1719:17" pos:end="1719:49"><expr pos:start="1719:17" pos:end="1719:48"><call pos:start="1719:17" pos:end="1719:48"><name pos:start="1719:17" pos:end="1719:34">generate_exception</name><argument_list pos:start="1719:35" pos:end="1719:48">(<argument pos:start="1719:36" pos:end="1719:38"><expr pos:start="1719:36" pos:end="1719:38"><name pos:start="1719:36" pos:end="1719:38">ctx</name></expr></argument>, <argument pos:start="1719:41" pos:end="1719:47"><expr pos:start="1719:41" pos:end="1719:47"><name pos:start="1719:41" pos:end="1719:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1721:17" pos:end="1721:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1725:13" pos:end="1725:18">break;</break>

        <case pos:start="1727:9" pos:end="1727:29">case <expr pos:start="1727:14" pos:end="1727:28"><name pos:start="1727:14" pos:end="1727:28">OPC_SHLL_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1729:13" pos:end="1729:52"><expr pos:start="1729:13" pos:end="1729:51"><call pos:start="1729:13" pos:end="1729:51"><name pos:start="1729:13" pos:end="1729:29">gen_mipsdsp_shift</name><argument_list pos:start="1729:30" pos:end="1729:51">(<argument pos:start="1729:31" pos:end="1729:33"><expr pos:start="1729:31" pos:end="1729:33"><name pos:start="1729:31" pos:end="1729:33">ctx</name></expr></argument>, <argument pos:start="1729:36" pos:end="1729:38"><expr pos:start="1729:36" pos:end="1729:38"><name pos:start="1729:36" pos:end="1729:38">op1</name></expr></argument>, <argument pos:start="1729:41" pos:end="1729:42"><expr pos:start="1729:41" pos:end="1729:42"><name pos:start="1729:41" pos:end="1729:42">rd</name></expr></argument>, <argument pos:start="1729:45" pos:end="1729:46"><expr pos:start="1729:45" pos:end="1729:46"><name pos:start="1729:45" pos:end="1729:46">rs</name></expr></argument>, <argument pos:start="1729:49" pos:end="1729:50"><expr pos:start="1729:49" pos:end="1729:50"><name pos:start="1729:49" pos:end="1729:50">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1731:13" pos:end="1734:0">break;</break>

<cpp:endif pos:start="1733:1" pos:end="1733:6">#<cpp:directive pos:start="1733:2" pos:end="1733:6">endif</cpp:directive></cpp:endif>

        <default pos:start="1735:9" pos:end="1735:16">default:</default>            <comment type="block" pos:start="1735:29" pos:end="1735:41">/* Invalid */</comment>

            <expr_stmt pos:start="1737:13" pos:end="1737:35"><expr pos:start="1737:13" pos:end="1737:34"><call pos:start="1737:13" pos:end="1737:34"><name pos:start="1737:13" pos:end="1737:22">MIPS_INVAL</name><argument_list pos:start="1737:23" pos:end="1737:34">(<argument pos:start="1737:24" pos:end="1737:33"><expr pos:start="1737:24" pos:end="1737:33"><literal type="string" pos:start="1737:24" pos:end="1737:33">"special3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1739:13" pos:end="1739:45"><expr pos:start="1739:13" pos:end="1739:44"><call pos:start="1739:13" pos:end="1739:44"><name pos:start="1739:13" pos:end="1739:30">generate_exception</name><argument_list pos:start="1739:31" pos:end="1739:44">(<argument pos:start="1739:32" pos:end="1739:34"><expr pos:start="1739:32" pos:end="1739:34"><name pos:start="1739:32" pos:end="1739:34">ctx</name></expr></argument>, <argument pos:start="1739:37" pos:end="1739:43"><expr pos:start="1739:37" pos:end="1739:43"><name pos:start="1739:37" pos:end="1739:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1741:13" pos:end="1741:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1745:9" pos:end="1745:14">break;</break>

    <case pos:start="1747:5" pos:end="1747:20">case <expr pos:start="1747:10" pos:end="1747:19"><name pos:start="1747:10" pos:end="1747:19">OPC_REGIMM</name></expr>:</case>

        <expr_stmt pos:start="1749:9" pos:end="1749:39"><expr pos:start="1749:9" pos:end="1749:38"><name pos:start="1749:9" pos:end="1749:11">op1</name> <operator pos:start="1749:13" pos:end="1749:13">=</operator> <call pos:start="1749:15" pos:end="1749:38"><name pos:start="1749:15" pos:end="1749:25">MASK_REGIMM</name><argument_list pos:start="1749:26" pos:end="1749:38">(<argument pos:start="1749:27" pos:end="1749:37"><expr pos:start="1749:27" pos:end="1749:37"><name pos:start="1749:27" pos:end="1749:37"><name pos:start="1749:27" pos:end="1749:29">ctx</name><operator pos:start="1749:30" pos:end="1749:31">-&gt;</operator><name pos:start="1749:32" pos:end="1749:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1751:9" pos:end="1803:9">switch <condition pos:start="1751:16" pos:end="1751:20">(<expr pos:start="1751:17" pos:end="1751:19"><name pos:start="1751:17" pos:end="1751:19">op1</name></expr>)</condition> <block pos:start="1751:22" pos:end="1803:9">{<block_content pos:start="1753:9" pos:end="1801:18">

        <case pos:start="1753:9" pos:end="1753:36">case <expr pos:start="1753:14" pos:end="1753:35"><name pos:start="1753:14" pos:end="1753:21">OPC_BLTZ</name> <operator pos:start="1753:23" pos:end="1753:25">...</operator> <name pos:start="1753:27" pos:end="1753:35">OPC_BGEZL</name></expr>:</case> <comment type="block" pos:start="1753:38" pos:end="1753:58">/* REGIMM branches */</comment>

        <case pos:start="1755:9" pos:end="1755:40">case <expr pos:start="1755:14" pos:end="1755:39"><name pos:start="1755:14" pos:end="1755:23">OPC_BLTZAL</name> <operator pos:start="1755:25" pos:end="1755:27">...</operator> <name pos:start="1755:29" pos:end="1755:39">OPC_BGEZALL</name></expr>:</case>

            <expr_stmt pos:start="1757:13" pos:end="1757:62"><expr pos:start="1757:13" pos:end="1757:61"><call pos:start="1757:13" pos:end="1757:61"><name pos:start="1757:13" pos:end="1757:30">gen_compute_branch</name><argument_list pos:start="1757:31" pos:end="1757:61">(<argument pos:start="1757:32" pos:end="1757:34"><expr pos:start="1757:32" pos:end="1757:34"><name pos:start="1757:32" pos:end="1757:34">ctx</name></expr></argument>, <argument pos:start="1757:37" pos:end="1757:39"><expr pos:start="1757:37" pos:end="1757:39"><name pos:start="1757:37" pos:end="1757:39">op1</name></expr></argument>, <argument pos:start="1757:42" pos:end="1757:42"><expr pos:start="1757:42" pos:end="1757:42"><literal type="number" pos:start="1757:42" pos:end="1757:42">4</literal></expr></argument>, <argument pos:start="1757:45" pos:end="1757:46"><expr pos:start="1757:45" pos:end="1757:46"><name pos:start="1757:45" pos:end="1757:46">rs</name></expr></argument>, <argument pos:start="1757:49" pos:end="1757:50"><expr pos:start="1757:49" pos:end="1757:50"><operator pos:start="1757:49" pos:end="1757:49">-</operator><literal type="number" pos:start="1757:50" pos:end="1757:50">1</literal></expr></argument>, <argument pos:start="1757:53" pos:end="1757:60"><expr pos:start="1757:53" pos:end="1757:60"><name pos:start="1757:53" pos:end="1757:55">imm</name> <operator pos:start="1757:57" pos:end="1757:58">&lt;&lt;</operator> <literal type="number" pos:start="1757:60" pos:end="1757:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1759:13" pos:end="1759:27"><expr pos:start="1759:13" pos:end="1759:26"><operator pos:start="1759:13" pos:end="1759:13">*</operator><name pos:start="1759:14" pos:end="1759:22">is_branch</name> <operator pos:start="1759:24" pos:end="1759:24">=</operator> <literal type="number" pos:start="1759:26" pos:end="1759:26">1</literal></expr>;</expr_stmt>

            <break pos:start="1761:13" pos:end="1761:18">break;</break>

        <case pos:start="1763:9" pos:end="1763:35">case <expr pos:start="1763:14" pos:end="1763:34"><name pos:start="1763:14" pos:end="1763:21">OPC_TGEI</name> <operator pos:start="1763:23" pos:end="1763:25">...</operator> <name pos:start="1763:27" pos:end="1763:34">OPC_TEQI</name></expr>:</case> <comment type="block" pos:start="1763:37" pos:end="1763:54">/* REGIMM traps */</comment>

        <case pos:start="1765:9" pos:end="1765:22">case <expr pos:start="1765:14" pos:end="1765:21"><name pos:start="1765:14" pos:end="1765:21">OPC_TNEI</name></expr>:</case>

            <expr_stmt pos:start="1767:13" pos:end="1767:44"><expr pos:start="1767:13" pos:end="1767:43"><call pos:start="1767:13" pos:end="1767:43"><name pos:start="1767:13" pos:end="1767:20">gen_trap</name><argument_list pos:start="1767:21" pos:end="1767:43">(<argument pos:start="1767:22" pos:end="1767:24"><expr pos:start="1767:22" pos:end="1767:24"><name pos:start="1767:22" pos:end="1767:24">ctx</name></expr></argument>, <argument pos:start="1767:27" pos:end="1767:29"><expr pos:start="1767:27" pos:end="1767:29"><name pos:start="1767:27" pos:end="1767:29">op1</name></expr></argument>, <argument pos:start="1767:32" pos:end="1767:33"><expr pos:start="1767:32" pos:end="1767:33"><name pos:start="1767:32" pos:end="1767:33">rs</name></expr></argument>, <argument pos:start="1767:36" pos:end="1767:37"><expr pos:start="1767:36" pos:end="1767:37"><operator pos:start="1767:36" pos:end="1767:36">-</operator><literal type="number" pos:start="1767:37" pos:end="1767:37">1</literal></expr></argument>, <argument pos:start="1767:40" pos:end="1767:42"><expr pos:start="1767:40" pos:end="1767:42"><name pos:start="1767:40" pos:end="1767:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1769:13" pos:end="1769:18">break;</break>

        <case pos:start="1771:9" pos:end="1771:23">case <expr pos:start="1771:14" pos:end="1771:22"><name pos:start="1771:14" pos:end="1771:22">OPC_SYNCI</name></expr>:</case>

            <expr_stmt pos:start="1773:13" pos:end="1773:42"><expr pos:start="1773:13" pos:end="1773:41"><call pos:start="1773:13" pos:end="1773:41"><name pos:start="1773:13" pos:end="1773:22">check_insn</name><argument_list pos:start="1773:23" pos:end="1773:41">(<argument pos:start="1773:24" pos:end="1773:26"><expr pos:start="1773:24" pos:end="1773:26"><name pos:start="1773:24" pos:end="1773:26">ctx</name></expr></argument>, <argument pos:start="1773:29" pos:end="1773:40"><expr pos:start="1773:29" pos:end="1773:40"><name pos:start="1773:29" pos:end="1773:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1775:13" pos:end="1775:31">/* Treat as NOP. */</comment>

            <break pos:start="1777:13" pos:end="1777:18">break;</break>

        <case pos:start="1779:9" pos:end="1782:0">case <expr pos:start="1779:14" pos:end="1779:25"><name pos:start="1779:14" pos:end="1779:25">OPC_BPOSGE32</name></expr>:</case>    <comment type="block" pos:start="1779:31" pos:end="1779:51">/* MIPS DSP branch */</comment>

<cpp:if pos:start="1781:1" pos:end="1781:26">#<cpp:directive pos:start="1781:2" pos:end="1781:3">if</cpp:directive> <expr pos:start="1781:5" pos:end="1781:26"><call pos:start="1781:5" pos:end="1781:26"><name pos:start="1781:5" pos:end="1781:11">defined</name><argument_list pos:start="1781:12" pos:end="1781:26">(<argument pos:start="1781:13" pos:end="1781:25"><expr pos:start="1781:13" pos:end="1781:25"><name pos:start="1781:13" pos:end="1781:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1783:9" pos:end="1786:0">case <expr pos:start="1783:14" pos:end="1783:25"><name pos:start="1783:14" pos:end="1783:25">OPC_BPOSGE64</name></expr>:</case>

<cpp:endif pos:start="1785:1" pos:end="1785:6">#<cpp:directive pos:start="1785:2" pos:end="1785:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="1787:13" pos:end="1787:27"><expr pos:start="1787:13" pos:end="1787:26"><call pos:start="1787:13" pos:end="1787:26"><name pos:start="1787:13" pos:end="1787:21">check_dsp</name><argument_list pos:start="1787:22" pos:end="1787:26">(<argument pos:start="1787:23" pos:end="1787:25"><expr pos:start="1787:23" pos:end="1787:25"><name pos:start="1787:23" pos:end="1787:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1789:13" pos:end="1789:71"><expr pos:start="1789:13" pos:end="1789:70"><call pos:start="1789:13" pos:end="1789:70"><name pos:start="1789:13" pos:end="1789:30">gen_compute_branch</name><argument_list pos:start="1789:31" pos:end="1789:70">(<argument pos:start="1789:32" pos:end="1789:34"><expr pos:start="1789:32" pos:end="1789:34"><name pos:start="1789:32" pos:end="1789:34">ctx</name></expr></argument>, <argument pos:start="1789:37" pos:end="1789:39"><expr pos:start="1789:37" pos:end="1789:39"><name pos:start="1789:37" pos:end="1789:39">op1</name></expr></argument>, <argument pos:start="1789:42" pos:end="1789:42"><expr pos:start="1789:42" pos:end="1789:42"><literal type="number" pos:start="1789:42" pos:end="1789:42">4</literal></expr></argument>, <argument pos:start="1789:45" pos:end="1789:46"><expr pos:start="1789:45" pos:end="1789:46"><operator pos:start="1789:45" pos:end="1789:45">-</operator><literal type="number" pos:start="1789:46" pos:end="1789:46">1</literal></expr></argument>, <argument pos:start="1789:49" pos:end="1789:50"><expr pos:start="1789:49" pos:end="1789:50"><operator pos:start="1789:49" pos:end="1789:49">-</operator><literal type="number" pos:start="1789:50" pos:end="1789:50">2</literal></expr></argument>, <argument pos:start="1789:53" pos:end="1789:69"><expr pos:start="1789:53" pos:end="1789:69"><operator pos:start="1789:53" pos:end="1789:53">(</operator><name pos:start="1789:54" pos:end="1789:60">int32_t</name><operator pos:start="1789:61" pos:end="1789:61">)</operator><name pos:start="1789:62" pos:end="1789:64">imm</name> <operator pos:start="1789:66" pos:end="1789:67">&lt;&lt;</operator> <literal type="number" pos:start="1789:69" pos:end="1789:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1791:13" pos:end="1791:27"><expr pos:start="1791:13" pos:end="1791:26"><operator pos:start="1791:13" pos:end="1791:13">*</operator><name pos:start="1791:14" pos:end="1791:22">is_branch</name> <operator pos:start="1791:24" pos:end="1791:24">=</operator> <literal type="number" pos:start="1791:26" pos:end="1791:26">1</literal></expr>;</expr_stmt>

            <break pos:start="1793:13" pos:end="1793:18">break;</break>

        <default pos:start="1795:9" pos:end="1795:16">default:</default>            <comment type="block" pos:start="1795:29" pos:end="1795:41">/* Invalid */</comment>

            <expr_stmt pos:start="1797:13" pos:end="1797:33"><expr pos:start="1797:13" pos:end="1797:32"><call pos:start="1797:13" pos:end="1797:32"><name pos:start="1797:13" pos:end="1797:22">MIPS_INVAL</name><argument_list pos:start="1797:23" pos:end="1797:32">(<argument pos:start="1797:24" pos:end="1797:31"><expr pos:start="1797:24" pos:end="1797:31"><literal type="string" pos:start="1797:24" pos:end="1797:31">"regimm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1799:13" pos:end="1799:45"><expr pos:start="1799:13" pos:end="1799:44"><call pos:start="1799:13" pos:end="1799:44"><name pos:start="1799:13" pos:end="1799:30">generate_exception</name><argument_list pos:start="1799:31" pos:end="1799:44">(<argument pos:start="1799:32" pos:end="1799:34"><expr pos:start="1799:32" pos:end="1799:34"><name pos:start="1799:32" pos:end="1799:34">ctx</name></expr></argument>, <argument pos:start="1799:37" pos:end="1799:43"><expr pos:start="1799:37" pos:end="1799:43"><name pos:start="1799:37" pos:end="1799:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1801:13" pos:end="1801:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1805:9" pos:end="1805:14">break;</break>

    <case pos:start="1807:5" pos:end="1807:17">case <expr pos:start="1807:10" pos:end="1807:16"><name pos:start="1807:10" pos:end="1807:16">OPC_CP0</name></expr>:</case>

        <expr_stmt pos:start="1809:9" pos:end="1809:31"><expr pos:start="1809:9" pos:end="1809:30"><call pos:start="1809:9" pos:end="1809:30"><name pos:start="1809:9" pos:end="1809:25">check_cp0_enabled</name><argument_list pos:start="1809:26" pos:end="1809:30">(<argument pos:start="1809:27" pos:end="1809:29"><expr pos:start="1809:27" pos:end="1809:29"><name pos:start="1809:27" pos:end="1809:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1811:9" pos:end="1811:36"><expr pos:start="1811:9" pos:end="1811:35"><name pos:start="1811:9" pos:end="1811:11">op1</name> <operator pos:start="1811:13" pos:end="1811:13">=</operator> <call pos:start="1811:15" pos:end="1811:35"><name pos:start="1811:15" pos:end="1811:22">MASK_CP0</name><argument_list pos:start="1811:23" pos:end="1811:35">(<argument pos:start="1811:24" pos:end="1811:34"><expr pos:start="1811:24" pos:end="1811:34"><name pos:start="1811:24" pos:end="1811:34"><name pos:start="1811:24" pos:end="1811:26">ctx</name><operator pos:start="1811:27" pos:end="1811:28">-&gt;</operator><name pos:start="1811:29" pos:end="1811:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1813:9" pos:end="1977:9">switch <condition pos:start="1813:16" pos:end="1813:20">(<expr pos:start="1813:17" pos:end="1813:19"><name pos:start="1813:17" pos:end="1813:19">op1</name></expr>)</condition> <block pos:start="1813:22" pos:end="1977:9">{<block_content pos:start="1815:9" pos:end="1975:18">

        <case pos:start="1815:9" pos:end="1815:22">case <expr pos:start="1815:14" pos:end="1815:21"><name pos:start="1815:14" pos:end="1815:21">OPC_MFC0</name></expr>:</case>

        <case pos:start="1817:9" pos:end="1817:22">case <expr pos:start="1817:14" pos:end="1817:21"><name pos:start="1817:14" pos:end="1817:21">OPC_MTC0</name></expr>:</case>

        <case pos:start="1819:9" pos:end="1819:22">case <expr pos:start="1819:14" pos:end="1819:21"><name pos:start="1819:14" pos:end="1819:21">OPC_MFTR</name></expr>:</case>

        <case pos:start="1821:9" pos:end="1824:0">case <expr pos:start="1821:14" pos:end="1821:21"><name pos:start="1821:14" pos:end="1821:21">OPC_MTTR</name></expr>:</case>

<cpp:if pos:start="1823:1" pos:end="1823:26">#<cpp:directive pos:start="1823:2" pos:end="1823:3">if</cpp:directive> <expr pos:start="1823:5" pos:end="1823:26"><call pos:start="1823:5" pos:end="1823:26"><name pos:start="1823:5" pos:end="1823:11">defined</name><argument_list pos:start="1823:12" pos:end="1823:26">(<argument pos:start="1823:13" pos:end="1823:25"><expr pos:start="1823:13" pos:end="1823:25"><name pos:start="1823:13" pos:end="1823:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1825:9" pos:end="1825:23">case <expr pos:start="1825:14" pos:end="1825:22"><name pos:start="1825:14" pos:end="1825:22">OPC_DMFC0</name></expr>:</case>

        <case pos:start="1827:9" pos:end="1832:0">case <expr pos:start="1827:14" pos:end="1827:22"><name pos:start="1827:14" pos:end="1827:22">OPC_DMTC0</name></expr>:</case>

<cpp:endif pos:start="1829:1" pos:end="1829:6">#<cpp:directive pos:start="1829:2" pos:end="1829:6">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:start="1831:1" pos:end="1831:24">#<cpp:directive pos:start="1831:2" pos:end="1831:7">ifndef</cpp:directive> <name pos:start="1831:9" pos:end="1831:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="1833:13" pos:end="1836:0"><expr pos:start="1833:13" pos:end="1833:42"><call pos:start="1833:13" pos:end="1833:42"><name pos:start="1833:13" pos:end="1833:19">gen_cp0</name><argument_list pos:start="1833:20" pos:end="1833:42">(<argument pos:start="1833:21" pos:end="1833:23"><expr pos:start="1833:21" pos:end="1833:23"><name pos:start="1833:21" pos:end="1833:23">env</name></expr></argument>, <argument pos:start="1833:26" pos:end="1833:28"><expr pos:start="1833:26" pos:end="1833:28"><name pos:start="1833:26" pos:end="1833:28">ctx</name></expr></argument>, <argument pos:start="1833:31" pos:end="1833:33"><expr pos:start="1833:31" pos:end="1833:33"><name pos:start="1833:31" pos:end="1833:33">op1</name></expr></argument>, <argument pos:start="1833:36" pos:end="1833:37"><expr pos:start="1833:36" pos:end="1833:37"><name pos:start="1833:36" pos:end="1833:37">rt</name></expr></argument>, <argument pos:start="1833:40" pos:end="1833:41"><expr pos:start="1833:40" pos:end="1833:41"><name pos:start="1833:40" pos:end="1833:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1835:1" pos:end="1835:6">#<cpp:directive pos:start="1835:2" pos:end="1835:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1835:8" pos:end="1835:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1837:13" pos:end="1837:18">break;</break>

        <case pos:start="1839:9" pos:end="1842:0">case <expr pos:start="1839:14" pos:end="1839:41"><name pos:start="1839:14" pos:end="1839:25">OPC_C0_FIRST</name> <operator pos:start="1839:27" pos:end="1839:29">...</operator> <name pos:start="1839:31" pos:end="1839:41">OPC_C0_LAST</name></expr>:</case>

<cpp:ifndef pos:start="1841:1" pos:end="1841:24">#<cpp:directive pos:start="1841:2" pos:end="1841:7">ifndef</cpp:directive> <name pos:start="1841:9" pos:end="1841:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="1843:13" pos:end="1846:0"><expr pos:start="1843:13" pos:end="1843:59"><call pos:start="1843:13" pos:end="1843:59"><name pos:start="1843:13" pos:end="1843:19">gen_cp0</name><argument_list pos:start="1843:20" pos:end="1843:59">(<argument pos:start="1843:21" pos:end="1843:23"><expr pos:start="1843:21" pos:end="1843:23"><name pos:start="1843:21" pos:end="1843:23">env</name></expr></argument>, <argument pos:start="1843:26" pos:end="1843:28"><expr pos:start="1843:26" pos:end="1843:28"><name pos:start="1843:26" pos:end="1843:28">ctx</name></expr></argument>, <argument pos:start="1843:31" pos:end="1843:50"><expr pos:start="1843:31" pos:end="1843:50"><call pos:start="1843:31" pos:end="1843:50"><name pos:start="1843:31" pos:end="1843:37">MASK_C0</name><argument_list pos:start="1843:38" pos:end="1843:50">(<argument pos:start="1843:39" pos:end="1843:49"><expr pos:start="1843:39" pos:end="1843:49"><name pos:start="1843:39" pos:end="1843:49"><name pos:start="1843:39" pos:end="1843:41">ctx</name><operator pos:start="1843:42" pos:end="1843:43">-&gt;</operator><name pos:start="1843:44" pos:end="1843:49">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1843:53" pos:end="1843:54"><expr pos:start="1843:53" pos:end="1843:54"><name pos:start="1843:53" pos:end="1843:54">rt</name></expr></argument>, <argument pos:start="1843:57" pos:end="1843:58"><expr pos:start="1843:57" pos:end="1843:58"><name pos:start="1843:57" pos:end="1843:58">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1845:1" pos:end="1845:6">#<cpp:directive pos:start="1845:2" pos:end="1845:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1845:8" pos:end="1845:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1847:13" pos:end="1847:18">break;</break>

        <case pos:start="1849:9" pos:end="1852:0">case <expr pos:start="1849:14" pos:end="1849:22"><name pos:start="1849:14" pos:end="1849:22">OPC_MFMC0</name></expr>:</case>

<cpp:ifndef pos:start="1851:1" pos:end="1851:24">#<cpp:directive pos:start="1851:2" pos:end="1851:7">ifndef</cpp:directive> <name pos:start="1851:9" pos:end="1851:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <block pos:start="1853:13" pos:end="1950:0">{<block_content pos:start="1855:17" pos:end="1945:34">

                <decl_stmt pos:start="1855:17" pos:end="1855:41"><decl pos:start="1855:17" pos:end="1855:40"><type pos:start="1855:17" pos:end="1855:20"><name pos:start="1855:17" pos:end="1855:20">TCGv</name></type> <name pos:start="1855:22" pos:end="1855:23">t0</name> <init pos:start="1855:25" pos:end="1855:40">= <expr pos:start="1855:27" pos:end="1855:40"><call pos:start="1855:27" pos:end="1855:40"><name pos:start="1855:27" pos:end="1855:38">tcg_temp_new</name><argument_list pos:start="1855:39" pos:end="1855:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="1859:17" pos:end="1859:46"><expr pos:start="1859:17" pos:end="1859:45"><name pos:start="1859:17" pos:end="1859:19">op2</name> <operator pos:start="1859:21" pos:end="1859:21">=</operator> <call pos:start="1859:23" pos:end="1859:45"><name pos:start="1859:23" pos:end="1859:32">MASK_MFMC0</name><argument_list pos:start="1859:33" pos:end="1859:45">(<argument pos:start="1859:34" pos:end="1859:44"><expr pos:start="1859:34" pos:end="1859:44"><name pos:start="1859:34" pos:end="1859:44"><name pos:start="1859:34" pos:end="1859:36">ctx</name><operator pos:start="1859:37" pos:end="1859:38">-&gt;</operator><name pos:start="1859:39" pos:end="1859:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="1861:17" pos:end="1943:17">switch <condition pos:start="1861:24" pos:end="1861:28">(<expr pos:start="1861:25" pos:end="1861:27"><name pos:start="1861:25" pos:end="1861:27">op2</name></expr>)</condition> <block pos:start="1861:30" pos:end="1943:17">{<block_content pos:start="1863:17" pos:end="1941:26">

                <case pos:start="1863:17" pos:end="1863:29">case <expr pos:start="1863:22" pos:end="1863:28"><name pos:start="1863:22" pos:end="1863:28">OPC_DMT</name></expr>:</case>

                    <expr_stmt pos:start="1865:21" pos:end="1865:44"><expr pos:start="1865:21" pos:end="1865:43"><call pos:start="1865:21" pos:end="1865:43"><name pos:start="1865:21" pos:end="1865:30">check_insn</name><argument_list pos:start="1865:31" pos:end="1865:43">(<argument pos:start="1865:32" pos:end="1865:34"><expr pos:start="1865:32" pos:end="1865:34"><name pos:start="1865:32" pos:end="1865:34">ctx</name></expr></argument>, <argument pos:start="1865:37" pos:end="1865:42"><expr pos:start="1865:37" pos:end="1865:42"><name pos:start="1865:37" pos:end="1865:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1867:21" pos:end="1867:39"><expr pos:start="1867:21" pos:end="1867:38"><call pos:start="1867:21" pos:end="1867:38"><name pos:start="1867:21" pos:end="1867:34">gen_helper_dmt</name><argument_list pos:start="1867:35" pos:end="1867:38">(<argument pos:start="1867:36" pos:end="1867:37"><expr pos:start="1867:36" pos:end="1867:37"><name pos:start="1867:36" pos:end="1867:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1869:21" pos:end="1869:42"><expr pos:start="1869:21" pos:end="1869:41"><call pos:start="1869:21" pos:end="1869:41"><name pos:start="1869:21" pos:end="1869:33">gen_store_gpr</name><argument_list pos:start="1869:34" pos:end="1869:41">(<argument pos:start="1869:35" pos:end="1869:36"><expr pos:start="1869:35" pos:end="1869:36"><name pos:start="1869:35" pos:end="1869:36">t0</name></expr></argument>, <argument pos:start="1869:39" pos:end="1869:40"><expr pos:start="1869:39" pos:end="1869:40"><name pos:start="1869:39" pos:end="1869:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1871:21" pos:end="1871:26">break;</break>

                <case pos:start="1873:17" pos:end="1873:29">case <expr pos:start="1873:22" pos:end="1873:28"><name pos:start="1873:22" pos:end="1873:28">OPC_EMT</name></expr>:</case>

                    <expr_stmt pos:start="1875:21" pos:end="1875:44"><expr pos:start="1875:21" pos:end="1875:43"><call pos:start="1875:21" pos:end="1875:43"><name pos:start="1875:21" pos:end="1875:30">check_insn</name><argument_list pos:start="1875:31" pos:end="1875:43">(<argument pos:start="1875:32" pos:end="1875:34"><expr pos:start="1875:32" pos:end="1875:34"><name pos:start="1875:32" pos:end="1875:34">ctx</name></expr></argument>, <argument pos:start="1875:37" pos:end="1875:42"><expr pos:start="1875:37" pos:end="1875:42"><name pos:start="1875:37" pos:end="1875:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1877:21" pos:end="1877:39"><expr pos:start="1877:21" pos:end="1877:38"><call pos:start="1877:21" pos:end="1877:38"><name pos:start="1877:21" pos:end="1877:34">gen_helper_emt</name><argument_list pos:start="1877:35" pos:end="1877:38">(<argument pos:start="1877:36" pos:end="1877:37"><expr pos:start="1877:36" pos:end="1877:37"><name pos:start="1877:36" pos:end="1877:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1879:21" pos:end="1879:42"><expr pos:start="1879:21" pos:end="1879:41"><call pos:start="1879:21" pos:end="1879:41"><name pos:start="1879:21" pos:end="1879:33">gen_store_gpr</name><argument_list pos:start="1879:34" pos:end="1879:41">(<argument pos:start="1879:35" pos:end="1879:36"><expr pos:start="1879:35" pos:end="1879:36"><name pos:start="1879:35" pos:end="1879:36">t0</name></expr></argument>, <argument pos:start="1879:39" pos:end="1879:40"><expr pos:start="1879:39" pos:end="1879:40"><name pos:start="1879:39" pos:end="1879:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1881:21" pos:end="1881:26">break;</break>

                <case pos:start="1883:17" pos:end="1883:30">case <expr pos:start="1883:22" pos:end="1883:29"><name pos:start="1883:22" pos:end="1883:29">OPC_DVPE</name></expr>:</case>

                    <expr_stmt pos:start="1885:21" pos:end="1885:44"><expr pos:start="1885:21" pos:end="1885:43"><call pos:start="1885:21" pos:end="1885:43"><name pos:start="1885:21" pos:end="1885:30">check_insn</name><argument_list pos:start="1885:31" pos:end="1885:43">(<argument pos:start="1885:32" pos:end="1885:34"><expr pos:start="1885:32" pos:end="1885:34"><name pos:start="1885:32" pos:end="1885:34">ctx</name></expr></argument>, <argument pos:start="1885:37" pos:end="1885:42"><expr pos:start="1885:37" pos:end="1885:42"><name pos:start="1885:37" pos:end="1885:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1887:21" pos:end="1887:49"><expr pos:start="1887:21" pos:end="1887:48"><call pos:start="1887:21" pos:end="1887:48"><name pos:start="1887:21" pos:end="1887:35">gen_helper_dvpe</name><argument_list pos:start="1887:36" pos:end="1887:48">(<argument pos:start="1887:37" pos:end="1887:38"><expr pos:start="1887:37" pos:end="1887:38"><name pos:start="1887:37" pos:end="1887:38">t0</name></expr></argument>, <argument pos:start="1887:41" pos:end="1887:47"><expr pos:start="1887:41" pos:end="1887:47"><name pos:start="1887:41" pos:end="1887:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1889:21" pos:end="1889:42"><expr pos:start="1889:21" pos:end="1889:41"><call pos:start="1889:21" pos:end="1889:41"><name pos:start="1889:21" pos:end="1889:33">gen_store_gpr</name><argument_list pos:start="1889:34" pos:end="1889:41">(<argument pos:start="1889:35" pos:end="1889:36"><expr pos:start="1889:35" pos:end="1889:36"><name pos:start="1889:35" pos:end="1889:36">t0</name></expr></argument>, <argument pos:start="1889:39" pos:end="1889:40"><expr pos:start="1889:39" pos:end="1889:40"><name pos:start="1889:39" pos:end="1889:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1891:21" pos:end="1891:26">break;</break>

                <case pos:start="1893:17" pos:end="1893:30">case <expr pos:start="1893:22" pos:end="1893:29"><name pos:start="1893:22" pos:end="1893:29">OPC_EVPE</name></expr>:</case>

                    <expr_stmt pos:start="1895:21" pos:end="1895:44"><expr pos:start="1895:21" pos:end="1895:43"><call pos:start="1895:21" pos:end="1895:43"><name pos:start="1895:21" pos:end="1895:30">check_insn</name><argument_list pos:start="1895:31" pos:end="1895:43">(<argument pos:start="1895:32" pos:end="1895:34"><expr pos:start="1895:32" pos:end="1895:34"><name pos:start="1895:32" pos:end="1895:34">ctx</name></expr></argument>, <argument pos:start="1895:37" pos:end="1895:42"><expr pos:start="1895:37" pos:end="1895:42"><name pos:start="1895:37" pos:end="1895:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1897:21" pos:end="1897:49"><expr pos:start="1897:21" pos:end="1897:48"><call pos:start="1897:21" pos:end="1897:48"><name pos:start="1897:21" pos:end="1897:35">gen_helper_evpe</name><argument_list pos:start="1897:36" pos:end="1897:48">(<argument pos:start="1897:37" pos:end="1897:38"><expr pos:start="1897:37" pos:end="1897:38"><name pos:start="1897:37" pos:end="1897:38">t0</name></expr></argument>, <argument pos:start="1897:41" pos:end="1897:47"><expr pos:start="1897:41" pos:end="1897:47"><name pos:start="1897:41" pos:end="1897:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1899:21" pos:end="1899:42"><expr pos:start="1899:21" pos:end="1899:41"><call pos:start="1899:21" pos:end="1899:41"><name pos:start="1899:21" pos:end="1899:33">gen_store_gpr</name><argument_list pos:start="1899:34" pos:end="1899:41">(<argument pos:start="1899:35" pos:end="1899:36"><expr pos:start="1899:35" pos:end="1899:36"><name pos:start="1899:35" pos:end="1899:36">t0</name></expr></argument>, <argument pos:start="1899:39" pos:end="1899:40"><expr pos:start="1899:39" pos:end="1899:40"><name pos:start="1899:39" pos:end="1899:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1901:21" pos:end="1901:26">break;</break>

                <case pos:start="1903:17" pos:end="1903:28">case <expr pos:start="1903:22" pos:end="1903:27"><name pos:start="1903:22" pos:end="1903:27">OPC_DI</name></expr>:</case>

                    <expr_stmt pos:start="1905:21" pos:end="1905:50"><expr pos:start="1905:21" pos:end="1905:49"><call pos:start="1905:21" pos:end="1905:49"><name pos:start="1905:21" pos:end="1905:30">check_insn</name><argument_list pos:start="1905:31" pos:end="1905:49">(<argument pos:start="1905:32" pos:end="1905:34"><expr pos:start="1905:32" pos:end="1905:34"><name pos:start="1905:32" pos:end="1905:34">ctx</name></expr></argument>, <argument pos:start="1905:37" pos:end="1905:48"><expr pos:start="1905:37" pos:end="1905:48"><name pos:start="1905:37" pos:end="1905:48">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1907:21" pos:end="1907:43"><expr pos:start="1907:21" pos:end="1907:42"><call pos:start="1907:21" pos:end="1907:42"><name pos:start="1907:21" pos:end="1907:34">save_cpu_state</name><argument_list pos:start="1907:35" pos:end="1907:42">(<argument pos:start="1907:36" pos:end="1907:38"><expr pos:start="1907:36" pos:end="1907:38"><name pos:start="1907:36" pos:end="1907:38">ctx</name></expr></argument>, <argument pos:start="1907:41" pos:end="1907:41"><expr pos:start="1907:41" pos:end="1907:41"><literal type="number" pos:start="1907:41" pos:end="1907:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1909:21" pos:end="1909:47"><expr pos:start="1909:21" pos:end="1909:46"><call pos:start="1909:21" pos:end="1909:46"><name pos:start="1909:21" pos:end="1909:33">gen_helper_di</name><argument_list pos:start="1909:34" pos:end="1909:46">(<argument pos:start="1909:35" pos:end="1909:36"><expr pos:start="1909:35" pos:end="1909:36"><name pos:start="1909:35" pos:end="1909:36">t0</name></expr></argument>, <argument pos:start="1909:39" pos:end="1909:45"><expr pos:start="1909:39" pos:end="1909:45"><name pos:start="1909:39" pos:end="1909:45">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1911:21" pos:end="1911:42"><expr pos:start="1911:21" pos:end="1911:41"><call pos:start="1911:21" pos:end="1911:41"><name pos:start="1911:21" pos:end="1911:33">gen_store_gpr</name><argument_list pos:start="1911:34" pos:end="1911:41">(<argument pos:start="1911:35" pos:end="1911:36"><expr pos:start="1911:35" pos:end="1911:36"><name pos:start="1911:35" pos:end="1911:36">t0</name></expr></argument>, <argument pos:start="1911:39" pos:end="1911:40"><expr pos:start="1911:39" pos:end="1911:40"><name pos:start="1911:39" pos:end="1911:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1913:21" pos:end="1913:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="1915:21" pos:end="1915:42"><expr pos:start="1915:21" pos:end="1915:41"><name pos:start="1915:21" pos:end="1915:31"><name pos:start="1915:21" pos:end="1915:23">ctx</name><operator pos:start="1915:24" pos:end="1915:25">-&gt;</operator><name pos:start="1915:26" pos:end="1915:31">bstate</name></name> <operator pos:start="1915:33" pos:end="1915:33">=</operator> <name pos:start="1915:35" pos:end="1915:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="1917:21" pos:end="1917:26">break;</break>

                <case pos:start="1919:17" pos:end="1919:28">case <expr pos:start="1919:22" pos:end="1919:27"><name pos:start="1919:22" pos:end="1919:27">OPC_EI</name></expr>:</case>

                    <expr_stmt pos:start="1921:21" pos:end="1921:50"><expr pos:start="1921:21" pos:end="1921:49"><call pos:start="1921:21" pos:end="1921:49"><name pos:start="1921:21" pos:end="1921:30">check_insn</name><argument_list pos:start="1921:31" pos:end="1921:49">(<argument pos:start="1921:32" pos:end="1921:34"><expr pos:start="1921:32" pos:end="1921:34"><name pos:start="1921:32" pos:end="1921:34">ctx</name></expr></argument>, <argument pos:start="1921:37" pos:end="1921:48"><expr pos:start="1921:37" pos:end="1921:48"><name pos:start="1921:37" pos:end="1921:48">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1923:21" pos:end="1923:43"><expr pos:start="1923:21" pos:end="1923:42"><call pos:start="1923:21" pos:end="1923:42"><name pos:start="1923:21" pos:end="1923:34">save_cpu_state</name><argument_list pos:start="1923:35" pos:end="1923:42">(<argument pos:start="1923:36" pos:end="1923:38"><expr pos:start="1923:36" pos:end="1923:38"><name pos:start="1923:36" pos:end="1923:38">ctx</name></expr></argument>, <argument pos:start="1923:41" pos:end="1923:41"><expr pos:start="1923:41" pos:end="1923:41"><literal type="number" pos:start="1923:41" pos:end="1923:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1925:21" pos:end="1925:47"><expr pos:start="1925:21" pos:end="1925:46"><call pos:start="1925:21" pos:end="1925:46"><name pos:start="1925:21" pos:end="1925:33">gen_helper_ei</name><argument_list pos:start="1925:34" pos:end="1925:46">(<argument pos:start="1925:35" pos:end="1925:36"><expr pos:start="1925:35" pos:end="1925:36"><name pos:start="1925:35" pos:end="1925:36">t0</name></expr></argument>, <argument pos:start="1925:39" pos:end="1925:45"><expr pos:start="1925:39" pos:end="1925:45"><name pos:start="1925:39" pos:end="1925:45">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1927:21" pos:end="1927:42"><expr pos:start="1927:21" pos:end="1927:41"><call pos:start="1927:21" pos:end="1927:41"><name pos:start="1927:21" pos:end="1927:33">gen_store_gpr</name><argument_list pos:start="1927:34" pos:end="1927:41">(<argument pos:start="1927:35" pos:end="1927:36"><expr pos:start="1927:35" pos:end="1927:36"><name pos:start="1927:35" pos:end="1927:36">t0</name></expr></argument>, <argument pos:start="1927:39" pos:end="1927:40"><expr pos:start="1927:39" pos:end="1927:40"><name pos:start="1927:39" pos:end="1927:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1929:21" pos:end="1929:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="1931:21" pos:end="1931:42"><expr pos:start="1931:21" pos:end="1931:41"><name pos:start="1931:21" pos:end="1931:31"><name pos:start="1931:21" pos:end="1931:23">ctx</name><operator pos:start="1931:24" pos:end="1931:25">-&gt;</operator><name pos:start="1931:26" pos:end="1931:31">bstate</name></name> <operator pos:start="1931:33" pos:end="1931:33">=</operator> <name pos:start="1931:35" pos:end="1931:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="1933:21" pos:end="1933:26">break;</break>

                <default pos:start="1935:17" pos:end="1935:24">default:</default>            <comment type="block" pos:start="1935:37" pos:end="1935:49">/* Invalid */</comment>

                    <expr_stmt pos:start="1937:21" pos:end="1937:40"><expr pos:start="1937:21" pos:end="1937:39"><call pos:start="1937:21" pos:end="1937:39"><name pos:start="1937:21" pos:end="1937:30">MIPS_INVAL</name><argument_list pos:start="1937:31" pos:end="1937:39">(<argument pos:start="1937:32" pos:end="1937:38"><expr pos:start="1937:32" pos:end="1937:38"><literal type="string" pos:start="1937:32" pos:end="1937:38">"mfmc0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1939:21" pos:end="1939:53"><expr pos:start="1939:21" pos:end="1939:52"><call pos:start="1939:21" pos:end="1939:52"><name pos:start="1939:21" pos:end="1939:38">generate_exception</name><argument_list pos:start="1939:39" pos:end="1939:52">(<argument pos:start="1939:40" pos:end="1939:42"><expr pos:start="1939:40" pos:end="1939:42"><name pos:start="1939:40" pos:end="1939:42">ctx</name></expr></argument>, <argument pos:start="1939:45" pos:end="1939:51"><expr pos:start="1939:45" pos:end="1939:51"><name pos:start="1939:45" pos:end="1939:51">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1941:21" pos:end="1941:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1945:17" pos:end="1945:34"><expr pos:start="1945:17" pos:end="1945:33"><call pos:start="1945:17" pos:end="1945:33"><name pos:start="1945:17" pos:end="1945:29">tcg_temp_free</name><argument_list pos:start="1945:30" pos:end="1945:33">(<argument pos:start="1945:31" pos:end="1945:32"><expr pos:start="1945:31" pos:end="1945:32"><name pos:start="1945:31" pos:end="1945:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="1949:1" pos:end="1949:6">#<cpp:directive pos:start="1949:2" pos:end="1949:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1949:8" pos:end="1949:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1951:13" pos:end="1951:18">break;</break>

        <case pos:start="1953:9" pos:end="1953:24">case <expr pos:start="1953:14" pos:end="1953:23"><name pos:start="1953:14" pos:end="1953:23">OPC_RDPGPR</name></expr>:</case>

            <expr_stmt pos:start="1955:13" pos:end="1955:42"><expr pos:start="1955:13" pos:end="1955:41"><call pos:start="1955:13" pos:end="1955:41"><name pos:start="1955:13" pos:end="1955:22">check_insn</name><argument_list pos:start="1955:23" pos:end="1955:41">(<argument pos:start="1955:24" pos:end="1955:26"><expr pos:start="1955:24" pos:end="1955:26"><name pos:start="1955:24" pos:end="1955:26">ctx</name></expr></argument>, <argument pos:start="1955:29" pos:end="1955:40"><expr pos:start="1955:29" pos:end="1955:40"><name pos:start="1955:29" pos:end="1955:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1957:13" pos:end="1957:36"><expr pos:start="1957:13" pos:end="1957:35"><call pos:start="1957:13" pos:end="1957:35"><name pos:start="1957:13" pos:end="1957:27">gen_load_srsgpr</name><argument_list pos:start="1957:28" pos:end="1957:35">(<argument pos:start="1957:29" pos:end="1957:30"><expr pos:start="1957:29" pos:end="1957:30"><name pos:start="1957:29" pos:end="1957:30">rt</name></expr></argument>, <argument pos:start="1957:33" pos:end="1957:34"><expr pos:start="1957:33" pos:end="1957:34"><name pos:start="1957:33" pos:end="1957:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1959:13" pos:end="1959:18">break;</break>

        <case pos:start="1961:9" pos:end="1961:24">case <expr pos:start="1961:14" pos:end="1961:23"><name pos:start="1961:14" pos:end="1961:23">OPC_WRPGPR</name></expr>:</case>

            <expr_stmt pos:start="1963:13" pos:end="1963:42"><expr pos:start="1963:13" pos:end="1963:41"><call pos:start="1963:13" pos:end="1963:41"><name pos:start="1963:13" pos:end="1963:22">check_insn</name><argument_list pos:start="1963:23" pos:end="1963:41">(<argument pos:start="1963:24" pos:end="1963:26"><expr pos:start="1963:24" pos:end="1963:26"><name pos:start="1963:24" pos:end="1963:26">ctx</name></expr></argument>, <argument pos:start="1963:29" pos:end="1963:40"><expr pos:start="1963:29" pos:end="1963:40"><name pos:start="1963:29" pos:end="1963:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1965:13" pos:end="1965:37"><expr pos:start="1965:13" pos:end="1965:36"><call pos:start="1965:13" pos:end="1965:36"><name pos:start="1965:13" pos:end="1965:28">gen_store_srsgpr</name><argument_list pos:start="1965:29" pos:end="1965:36">(<argument pos:start="1965:30" pos:end="1965:31"><expr pos:start="1965:30" pos:end="1965:31"><name pos:start="1965:30" pos:end="1965:31">rt</name></expr></argument>, <argument pos:start="1965:34" pos:end="1965:35"><expr pos:start="1965:34" pos:end="1965:35"><name pos:start="1965:34" pos:end="1965:35">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1967:13" pos:end="1967:18">break;</break>

        <default pos:start="1969:9" pos:end="1969:16">default:</default>

            <expr_stmt pos:start="1971:13" pos:end="1971:30"><expr pos:start="1971:13" pos:end="1971:29"><call pos:start="1971:13" pos:end="1971:29"><name pos:start="1971:13" pos:end="1971:22">MIPS_INVAL</name><argument_list pos:start="1971:23" pos:end="1971:29">(<argument pos:start="1971:24" pos:end="1971:28"><expr pos:start="1971:24" pos:end="1971:28"><literal type="string" pos:start="1971:24" pos:end="1971:28">"cp0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1973:13" pos:end="1973:45"><expr pos:start="1973:13" pos:end="1973:44"><call pos:start="1973:13" pos:end="1973:44"><name pos:start="1973:13" pos:end="1973:30">generate_exception</name><argument_list pos:start="1973:31" pos:end="1973:44">(<argument pos:start="1973:32" pos:end="1973:34"><expr pos:start="1973:32" pos:end="1973:34"><name pos:start="1973:32" pos:end="1973:34">ctx</name></expr></argument>, <argument pos:start="1973:37" pos:end="1973:43"><expr pos:start="1973:37" pos:end="1973:43"><name pos:start="1973:37" pos:end="1973:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1975:13" pos:end="1975:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1979:9" pos:end="1979:14">break;</break>

    <case pos:start="1981:5" pos:end="1981:18">case <expr pos:start="1981:10" pos:end="1981:17"><name pos:start="1981:10" pos:end="1981:17">OPC_ADDI</name></expr>:</case> <comment type="block" pos:start="1981:20" pos:end="1981:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="1983:5" pos:end="1983:19">case <expr pos:start="1983:10" pos:end="1983:18"><name pos:start="1983:10" pos:end="1983:18">OPC_ADDIU</name></expr>:</case>

         <expr_stmt pos:start="1985:10" pos:end="1985:45"><expr pos:start="1985:10" pos:end="1985:44"><call pos:start="1985:10" pos:end="1985:44"><name pos:start="1985:10" pos:end="1985:22">gen_arith_imm</name><argument_list pos:start="1985:23" pos:end="1985:44">(<argument pos:start="1985:24" pos:end="1985:26"><expr pos:start="1985:24" pos:end="1985:26"><name pos:start="1985:24" pos:end="1985:26">ctx</name></expr></argument>, <argument pos:start="1985:29" pos:end="1985:30"><expr pos:start="1985:29" pos:end="1985:30"><name pos:start="1985:29" pos:end="1985:30">op</name></expr></argument>, <argument pos:start="1985:33" pos:end="1985:34"><expr pos:start="1985:33" pos:end="1985:34"><name pos:start="1985:33" pos:end="1985:34">rt</name></expr></argument>, <argument pos:start="1985:37" pos:end="1985:38"><expr pos:start="1985:37" pos:end="1985:38"><name pos:start="1985:37" pos:end="1985:38">rs</name></expr></argument>, <argument pos:start="1985:41" pos:end="1985:43"><expr pos:start="1985:41" pos:end="1985:43"><name pos:start="1985:41" pos:end="1985:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1987:10" pos:end="1987:15">break;</break>

    <case pos:start="1989:5" pos:end="1989:18">case <expr pos:start="1989:10" pos:end="1989:17"><name pos:start="1989:10" pos:end="1989:17">OPC_SLTI</name></expr>:</case> <comment type="block" pos:start="1989:20" pos:end="1989:63">/* Set on less than with immediate opcode */</comment>

    <case pos:start="1991:5" pos:end="1991:19">case <expr pos:start="1991:10" pos:end="1991:18"><name pos:start="1991:10" pos:end="1991:18">OPC_SLTIU</name></expr>:</case>

         <expr_stmt pos:start="1993:10" pos:end="1993:43"><expr pos:start="1993:10" pos:end="1993:42"><call pos:start="1993:10" pos:end="1993:42"><name pos:start="1993:10" pos:end="1993:20">gen_slt_imm</name><argument_list pos:start="1993:21" pos:end="1993:42">(<argument pos:start="1993:22" pos:end="1993:24"><expr pos:start="1993:22" pos:end="1993:24"><name pos:start="1993:22" pos:end="1993:24">ctx</name></expr></argument>, <argument pos:start="1993:27" pos:end="1993:28"><expr pos:start="1993:27" pos:end="1993:28"><name pos:start="1993:27" pos:end="1993:28">op</name></expr></argument>, <argument pos:start="1993:31" pos:end="1993:32"><expr pos:start="1993:31" pos:end="1993:32"><name pos:start="1993:31" pos:end="1993:32">rt</name></expr></argument>, <argument pos:start="1993:35" pos:end="1993:36"><expr pos:start="1993:35" pos:end="1993:36"><name pos:start="1993:35" pos:end="1993:36">rs</name></expr></argument>, <argument pos:start="1993:39" pos:end="1993:41"><expr pos:start="1993:39" pos:end="1993:41"><name pos:start="1993:39" pos:end="1993:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1995:10" pos:end="1995:15">break;</break>

    <case pos:start="1997:5" pos:end="1997:18">case <expr pos:start="1997:10" pos:end="1997:17"><name pos:start="1997:10" pos:end="1997:17">OPC_ANDI</name></expr>:</case> <comment type="block" pos:start="1997:20" pos:end="1997:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="1999:5" pos:end="1999:17">case <expr pos:start="1999:10" pos:end="1999:16"><name pos:start="1999:10" pos:end="1999:16">OPC_LUI</name></expr>:</case>

    <case pos:start="2001:5" pos:end="2001:17">case <expr pos:start="2001:10" pos:end="2001:16"><name pos:start="2001:10" pos:end="2001:16">OPC_ORI</name></expr>:</case>

    <case pos:start="2003:5" pos:end="2003:18">case <expr pos:start="2003:10" pos:end="2003:17"><name pos:start="2003:10" pos:end="2003:17">OPC_XORI</name></expr>:</case>

         <expr_stmt pos:start="2005:10" pos:end="2005:45"><expr pos:start="2005:10" pos:end="2005:44"><call pos:start="2005:10" pos:end="2005:44"><name pos:start="2005:10" pos:end="2005:22">gen_logic_imm</name><argument_list pos:start="2005:23" pos:end="2005:44">(<argument pos:start="2005:24" pos:end="2005:26"><expr pos:start="2005:24" pos:end="2005:26"><name pos:start="2005:24" pos:end="2005:26">ctx</name></expr></argument>, <argument pos:start="2005:29" pos:end="2005:30"><expr pos:start="2005:29" pos:end="2005:30"><name pos:start="2005:29" pos:end="2005:30">op</name></expr></argument>, <argument pos:start="2005:33" pos:end="2005:34"><expr pos:start="2005:33" pos:end="2005:34"><name pos:start="2005:33" pos:end="2005:34">rt</name></expr></argument>, <argument pos:start="2005:37" pos:end="2005:38"><expr pos:start="2005:37" pos:end="2005:38"><name pos:start="2005:37" pos:end="2005:38">rs</name></expr></argument>, <argument pos:start="2005:41" pos:end="2005:43"><expr pos:start="2005:41" pos:end="2005:43"><name pos:start="2005:41" pos:end="2005:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2007:10" pos:end="2007:15">break;</break>

    <case pos:start="2009:5" pos:end="2009:27">case <expr pos:start="2009:10" pos:end="2009:26"><name pos:start="2009:10" pos:end="2009:14">OPC_J</name> <operator pos:start="2009:16" pos:end="2009:18">...</operator> <name pos:start="2009:20" pos:end="2009:26">OPC_JAL</name></expr>:</case> <comment type="block" pos:start="2009:29" pos:end="2009:38">/* Jump */</comment>

         <expr_stmt pos:start="2011:10" pos:end="2011:58"><expr pos:start="2011:10" pos:end="2011:57"><name pos:start="2011:10" pos:end="2011:15">offset</name> <operator pos:start="2011:17" pos:end="2011:17">=</operator> <operator pos:start="2011:19" pos:end="2011:19">(</operator><name pos:start="2011:20" pos:end="2011:26">int32_t</name><operator pos:start="2011:27" pos:end="2011:27">)</operator><operator pos:start="2011:28" pos:end="2011:28">(</operator><name pos:start="2011:29" pos:end="2011:39"><name pos:start="2011:29" pos:end="2011:31">ctx</name><operator pos:start="2011:32" pos:end="2011:33">-&gt;</operator><name pos:start="2011:34" pos:end="2011:39">opcode</name></name> <operator pos:start="2011:41" pos:end="2011:41">&amp;</operator> <literal type="number" pos:start="2011:43" pos:end="2011:51">0x3FFFFFF</literal><operator pos:start="2011:52" pos:end="2011:52">)</operator> <operator pos:start="2011:54" pos:end="2011:55">&lt;&lt;</operator> <literal type="number" pos:start="2011:57" pos:end="2011:57">2</literal></expr>;</expr_stmt>

         <expr_stmt pos:start="2013:10" pos:end="2013:56"><expr pos:start="2013:10" pos:end="2013:55"><call pos:start="2013:10" pos:end="2013:55"><name pos:start="2013:10" pos:end="2013:27">gen_compute_branch</name><argument_list pos:start="2013:28" pos:end="2013:55">(<argument pos:start="2013:29" pos:end="2013:31"><expr pos:start="2013:29" pos:end="2013:31"><name pos:start="2013:29" pos:end="2013:31">ctx</name></expr></argument>, <argument pos:start="2013:34" pos:end="2013:35"><expr pos:start="2013:34" pos:end="2013:35"><name pos:start="2013:34" pos:end="2013:35">op</name></expr></argument>, <argument pos:start="2013:38" pos:end="2013:38"><expr pos:start="2013:38" pos:end="2013:38"><literal type="number" pos:start="2013:38" pos:end="2013:38">4</literal></expr></argument>, <argument pos:start="2013:41" pos:end="2013:42"><expr pos:start="2013:41" pos:end="2013:42"><name pos:start="2013:41" pos:end="2013:42">rs</name></expr></argument>, <argument pos:start="2013:45" pos:end="2013:46"><expr pos:start="2013:45" pos:end="2013:46"><name pos:start="2013:45" pos:end="2013:46">rt</name></expr></argument>, <argument pos:start="2013:49" pos:end="2013:54"><expr pos:start="2013:49" pos:end="2013:54"><name pos:start="2013:49" pos:end="2013:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="2015:10" pos:end="2015:24"><expr pos:start="2015:10" pos:end="2015:23"><operator pos:start="2015:10" pos:end="2015:10">*</operator><name pos:start="2015:11" pos:end="2015:19">is_branch</name> <operator pos:start="2015:21" pos:end="2015:21">=</operator> <literal type="number" pos:start="2015:23" pos:end="2015:23">1</literal></expr>;</expr_stmt>

         <break pos:start="2017:10" pos:end="2017:15">break;</break>

    <case pos:start="2019:5" pos:end="2019:30">case <expr pos:start="2019:10" pos:end="2019:29"><name pos:start="2019:10" pos:end="2019:16">OPC_BEQ</name> <operator pos:start="2019:18" pos:end="2019:20">...</operator> <name pos:start="2019:22" pos:end="2019:29">OPC_BGTZ</name></expr>:</case> <comment type="block" pos:start="2019:32" pos:end="2019:43">/* Branch */</comment>

    <case pos:start="2021:5" pos:end="2021:32">case <expr pos:start="2021:10" pos:end="2021:31"><name pos:start="2021:10" pos:end="2021:17">OPC_BEQL</name> <operator pos:start="2021:19" pos:end="2021:21">...</operator> <name pos:start="2021:23" pos:end="2021:31">OPC_BGTZL</name></expr>:</case>

         <expr_stmt pos:start="2023:10" pos:end="2023:58"><expr pos:start="2023:10" pos:end="2023:57"><call pos:start="2023:10" pos:end="2023:57"><name pos:start="2023:10" pos:end="2023:27">gen_compute_branch</name><argument_list pos:start="2023:28" pos:end="2023:57">(<argument pos:start="2023:29" pos:end="2023:31"><expr pos:start="2023:29" pos:end="2023:31"><name pos:start="2023:29" pos:end="2023:31">ctx</name></expr></argument>, <argument pos:start="2023:34" pos:end="2023:35"><expr pos:start="2023:34" pos:end="2023:35"><name pos:start="2023:34" pos:end="2023:35">op</name></expr></argument>, <argument pos:start="2023:38" pos:end="2023:38"><expr pos:start="2023:38" pos:end="2023:38"><literal type="number" pos:start="2023:38" pos:end="2023:38">4</literal></expr></argument>, <argument pos:start="2023:41" pos:end="2023:42"><expr pos:start="2023:41" pos:end="2023:42"><name pos:start="2023:41" pos:end="2023:42">rs</name></expr></argument>, <argument pos:start="2023:45" pos:end="2023:46"><expr pos:start="2023:45" pos:end="2023:46"><name pos:start="2023:45" pos:end="2023:46">rt</name></expr></argument>, <argument pos:start="2023:49" pos:end="2023:56"><expr pos:start="2023:49" pos:end="2023:56"><name pos:start="2023:49" pos:end="2023:51">imm</name> <operator pos:start="2023:53" pos:end="2023:54">&lt;&lt;</operator> <literal type="number" pos:start="2023:56" pos:end="2023:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="2025:10" pos:end="2025:24"><expr pos:start="2025:10" pos:end="2025:23"><operator pos:start="2025:10" pos:end="2025:10">*</operator><name pos:start="2025:11" pos:end="2025:19">is_branch</name> <operator pos:start="2025:21" pos:end="2025:21">=</operator> <literal type="number" pos:start="2025:23" pos:end="2025:23">1</literal></expr>;</expr_stmt>

         <break pos:start="2027:10" pos:end="2027:15">break;</break>

    <case pos:start="2029:5" pos:end="2029:28">case <expr pos:start="2029:10" pos:end="2029:27"><name pos:start="2029:10" pos:end="2029:15">OPC_LB</name> <operator pos:start="2029:17" pos:end="2029:19">...</operator> <name pos:start="2029:21" pos:end="2029:27">OPC_LWR</name></expr>:</case> <comment type="block" pos:start="2029:30" pos:end="2029:50">/* Load and stores */</comment>

    <case pos:start="2031:5" pos:end="2031:16">case <expr pos:start="2031:10" pos:end="2031:15"><name pos:start="2031:10" pos:end="2031:15">OPC_LL</name></expr>:</case>

         <expr_stmt pos:start="2033:10" pos:end="2033:38"><expr pos:start="2033:10" pos:end="2033:37"><call pos:start="2033:10" pos:end="2033:37"><name pos:start="2033:10" pos:end="2033:15">gen_ld</name><argument_list pos:start="2033:16" pos:end="2033:37">(<argument pos:start="2033:17" pos:end="2033:19"><expr pos:start="2033:17" pos:end="2033:19"><name pos:start="2033:17" pos:end="2033:19">ctx</name></expr></argument>, <argument pos:start="2033:22" pos:end="2033:23"><expr pos:start="2033:22" pos:end="2033:23"><name pos:start="2033:22" pos:end="2033:23">op</name></expr></argument>, <argument pos:start="2033:26" pos:end="2033:27"><expr pos:start="2033:26" pos:end="2033:27"><name pos:start="2033:26" pos:end="2033:27">rt</name></expr></argument>, <argument pos:start="2033:30" pos:end="2033:31"><expr pos:start="2033:30" pos:end="2033:31"><name pos:start="2033:30" pos:end="2033:31">rs</name></expr></argument>, <argument pos:start="2033:34" pos:end="2033:36"><expr pos:start="2033:34" pos:end="2033:36"><name pos:start="2033:34" pos:end="2033:36">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2035:10" pos:end="2035:15">break;</break>

    <case pos:start="2037:5" pos:end="2037:27">case <expr pos:start="2037:10" pos:end="2037:26"><name pos:start="2037:10" pos:end="2037:15">OPC_SB</name> <operator pos:start="2037:17" pos:end="2037:19">...</operator> <name pos:start="2037:21" pos:end="2037:26">OPC_SW</name></expr>:</case>

    <case pos:start="2039:5" pos:end="2039:17">case <expr pos:start="2039:10" pos:end="2039:16"><name pos:start="2039:10" pos:end="2039:16">OPC_SWR</name></expr>:</case>

         <expr_stmt pos:start="2041:10" pos:end="2041:38"><expr pos:start="2041:10" pos:end="2041:37"><call pos:start="2041:10" pos:end="2041:37"><name pos:start="2041:10" pos:end="2041:15">gen_st</name><argument_list pos:start="2041:16" pos:end="2041:37">(<argument pos:start="2041:17" pos:end="2041:19"><expr pos:start="2041:17" pos:end="2041:19"><name pos:start="2041:17" pos:end="2041:19">ctx</name></expr></argument>, <argument pos:start="2041:22" pos:end="2041:23"><expr pos:start="2041:22" pos:end="2041:23"><name pos:start="2041:22" pos:end="2041:23">op</name></expr></argument>, <argument pos:start="2041:26" pos:end="2041:27"><expr pos:start="2041:26" pos:end="2041:27"><name pos:start="2041:26" pos:end="2041:27">rt</name></expr></argument>, <argument pos:start="2041:30" pos:end="2041:31"><expr pos:start="2041:30" pos:end="2041:31"><name pos:start="2041:30" pos:end="2041:31">rs</name></expr></argument>, <argument pos:start="2041:34" pos:end="2041:36"><expr pos:start="2041:34" pos:end="2041:36"><name pos:start="2041:34" pos:end="2041:36">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2043:10" pos:end="2043:15">break;</break>

    <case pos:start="2045:5" pos:end="2045:16">case <expr pos:start="2045:10" pos:end="2045:15"><name pos:start="2045:10" pos:end="2045:15">OPC_SC</name></expr>:</case>

         <expr_stmt pos:start="2047:10" pos:end="2047:43"><expr pos:start="2047:10" pos:end="2047:42"><call pos:start="2047:10" pos:end="2047:42"><name pos:start="2047:10" pos:end="2047:20">gen_st_cond</name><argument_list pos:start="2047:21" pos:end="2047:42">(<argument pos:start="2047:22" pos:end="2047:24"><expr pos:start="2047:22" pos:end="2047:24"><name pos:start="2047:22" pos:end="2047:24">ctx</name></expr></argument>, <argument pos:start="2047:27" pos:end="2047:28"><expr pos:start="2047:27" pos:end="2047:28"><name pos:start="2047:27" pos:end="2047:28">op</name></expr></argument>, <argument pos:start="2047:31" pos:end="2047:32"><expr pos:start="2047:31" pos:end="2047:32"><name pos:start="2047:31" pos:end="2047:32">rt</name></expr></argument>, <argument pos:start="2047:35" pos:end="2047:36"><expr pos:start="2047:35" pos:end="2047:36"><name pos:start="2047:35" pos:end="2047:36">rs</name></expr></argument>, <argument pos:start="2047:39" pos:end="2047:41"><expr pos:start="2047:39" pos:end="2047:41"><name pos:start="2047:39" pos:end="2047:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2049:10" pos:end="2049:15">break;</break>

    <case pos:start="2051:5" pos:end="2051:19">case <expr pos:start="2051:10" pos:end="2051:18"><name pos:start="2051:10" pos:end="2051:18">OPC_CACHE</name></expr>:</case>

        <expr_stmt pos:start="2053:9" pos:end="2053:31"><expr pos:start="2053:9" pos:end="2053:30"><call pos:start="2053:9" pos:end="2053:30"><name pos:start="2053:9" pos:end="2053:25">check_cp0_enabled</name><argument_list pos:start="2053:26" pos:end="2053:30">(<argument pos:start="2053:27" pos:end="2053:29"><expr pos:start="2053:27" pos:end="2053:29"><name pos:start="2053:27" pos:end="2053:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2055:9" pos:end="2055:48"><expr pos:start="2055:9" pos:end="2055:47"><call pos:start="2055:9" pos:end="2055:47"><name pos:start="2055:9" pos:end="2055:18">check_insn</name><argument_list pos:start="2055:19" pos:end="2055:47">(<argument pos:start="2055:20" pos:end="2055:22"><expr pos:start="2055:20" pos:end="2055:22"><name pos:start="2055:20" pos:end="2055:22">ctx</name></expr></argument>, <argument pos:start="2055:25" pos:end="2055:46"><expr pos:start="2055:25" pos:end="2055:46"><name pos:start="2055:25" pos:end="2055:33">ISA_MIPS3</name> <operator pos:start="2055:35" pos:end="2055:35">|</operator> <name pos:start="2055:37" pos:end="2055:46">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2057:9" pos:end="2057:27">/* Treat as NOP. */</comment>

        <break pos:start="2059:9" pos:end="2059:14">break;</break>

    <case pos:start="2061:5" pos:end="2061:18">case <expr pos:start="2061:10" pos:end="2061:17"><name pos:start="2061:10" pos:end="2061:17">OPC_PREF</name></expr>:</case>

        <expr_stmt pos:start="2063:9" pos:end="2063:48"><expr pos:start="2063:9" pos:end="2063:47"><call pos:start="2063:9" pos:end="2063:47"><name pos:start="2063:9" pos:end="2063:18">check_insn</name><argument_list pos:start="2063:19" pos:end="2063:47">(<argument pos:start="2063:20" pos:end="2063:22"><expr pos:start="2063:20" pos:end="2063:22"><name pos:start="2063:20" pos:end="2063:22">ctx</name></expr></argument>, <argument pos:start="2063:25" pos:end="2063:46"><expr pos:start="2063:25" pos:end="2063:46"><name pos:start="2063:25" pos:end="2063:33">ISA_MIPS4</name> <operator pos:start="2063:35" pos:end="2063:35">|</operator> <name pos:start="2063:37" pos:end="2063:46">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2065:9" pos:end="2065:27">/* Treat as NOP. */</comment>

        <break pos:start="2067:9" pos:end="2067:14">break;</break>



    <comment type="block" pos:start="2071:5" pos:end="2071:32">/* Floating point (COP1). */</comment>

    <case pos:start="2073:5" pos:end="2073:18">case <expr pos:start="2073:10" pos:end="2073:17"><name pos:start="2073:10" pos:end="2073:17">OPC_LWC1</name></expr>:</case>

    <case pos:start="2075:5" pos:end="2075:18">case <expr pos:start="2075:10" pos:end="2075:17"><name pos:start="2075:10" pos:end="2075:17">OPC_LDC1</name></expr>:</case>

    <case pos:start="2077:5" pos:end="2077:18">case <expr pos:start="2077:10" pos:end="2077:17"><name pos:start="2077:10" pos:end="2077:17">OPC_SWC1</name></expr>:</case>

    <case pos:start="2079:5" pos:end="2079:18">case <expr pos:start="2079:10" pos:end="2079:17"><name pos:start="2079:10" pos:end="2079:17">OPC_SDC1</name></expr>:</case>

        <expr_stmt pos:start="2081:9" pos:end="2081:49"><expr pos:start="2081:9" pos:end="2081:48"><call pos:start="2081:9" pos:end="2081:48"><name pos:start="2081:9" pos:end="2081:21">gen_cop1_ldst</name><argument_list pos:start="2081:22" pos:end="2081:48">(<argument pos:start="2081:23" pos:end="2081:25"><expr pos:start="2081:23" pos:end="2081:25"><name pos:start="2081:23" pos:end="2081:25">env</name></expr></argument>, <argument pos:start="2081:28" pos:end="2081:30"><expr pos:start="2081:28" pos:end="2081:30"><name pos:start="2081:28" pos:end="2081:30">ctx</name></expr></argument>, <argument pos:start="2081:33" pos:end="2081:34"><expr pos:start="2081:33" pos:end="2081:34"><name pos:start="2081:33" pos:end="2081:34">op</name></expr></argument>, <argument pos:start="2081:37" pos:end="2081:38"><expr pos:start="2081:37" pos:end="2081:38"><name pos:start="2081:37" pos:end="2081:38">rt</name></expr></argument>, <argument pos:start="2081:41" pos:end="2081:42"><expr pos:start="2081:41" pos:end="2081:42"><name pos:start="2081:41" pos:end="2081:42">rs</name></expr></argument>, <argument pos:start="2081:45" pos:end="2081:47"><expr pos:start="2081:45" pos:end="2081:47"><name pos:start="2081:45" pos:end="2081:47">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2083:9" pos:end="2083:14">break;</break>



    <case pos:start="2087:5" pos:end="2087:17">case <expr pos:start="2087:10" pos:end="2087:16"><name pos:start="2087:10" pos:end="2087:16">OPC_CP1</name></expr>:</case>

        <if_stmt pos:start="2089:9" pos:end="2179:9"><if pos:start="2089:9" pos:end="2175:9">if <condition pos:start="2089:12" pos:end="2089:47">(<expr pos:start="2089:13" pos:end="2089:46"><name pos:start="2089:13" pos:end="2089:28"><name pos:start="2089:13" pos:end="2089:15">env</name><operator pos:start="2089:16" pos:end="2089:17">-&gt;</operator><name pos:start="2089:18" pos:end="2089:28">CP0_Config1</name></name> <operator pos:start="2089:30" pos:end="2089:30">&amp;</operator> <operator pos:start="2089:32" pos:end="2089:32">(</operator><literal type="number" pos:start="2089:33" pos:end="2089:33">1</literal> <operator pos:start="2089:35" pos:end="2089:36">&lt;&lt;</operator> <name pos:start="2089:38" pos:end="2089:45">CP0C1_FP</name><operator pos:start="2089:46" pos:end="2089:46">)</operator></expr>)</condition> <block pos:start="2089:49" pos:end="2175:9">{<block_content pos:start="2091:13" pos:end="2173:13">

            <expr_stmt pos:start="2091:13" pos:end="2091:35"><expr pos:start="2091:13" pos:end="2091:34"><call pos:start="2091:13" pos:end="2091:34"><name pos:start="2091:13" pos:end="2091:29">check_cp1_enabled</name><argument_list pos:start="2091:30" pos:end="2091:34">(<argument pos:start="2091:31" pos:end="2091:33"><expr pos:start="2091:31" pos:end="2091:33"><name pos:start="2091:31" pos:end="2091:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2093:13" pos:end="2093:40"><expr pos:start="2093:13" pos:end="2093:39"><name pos:start="2093:13" pos:end="2093:15">op1</name> <operator pos:start="2093:17" pos:end="2093:17">=</operator> <call pos:start="2093:19" pos:end="2093:39"><name pos:start="2093:19" pos:end="2093:26">MASK_CP1</name><argument_list pos:start="2093:27" pos:end="2093:39">(<argument pos:start="2093:28" pos:end="2093:38"><expr pos:start="2093:28" pos:end="2093:38"><name pos:start="2093:28" pos:end="2093:38"><name pos:start="2093:28" pos:end="2093:30">ctx</name><operator pos:start="2093:31" pos:end="2093:32">-&gt;</operator><name pos:start="2093:33" pos:end="2093:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2095:13" pos:end="2173:13">switch <condition pos:start="2095:20" pos:end="2095:24">(<expr pos:start="2095:21" pos:end="2095:23"><name pos:start="2095:21" pos:end="2095:23">op1</name></expr>)</condition> <block pos:start="2095:26" pos:end="2173:13">{<block_content pos:start="2097:13" pos:end="2171:22">

            <case pos:start="2097:13" pos:end="2097:27">case <expr pos:start="2097:18" pos:end="2097:26"><name pos:start="2097:18" pos:end="2097:26">OPC_MFHC1</name></expr>:</case>

            <case pos:start="2099:13" pos:end="2099:27">case <expr pos:start="2099:18" pos:end="2099:26"><name pos:start="2099:18" pos:end="2099:26">OPC_MTHC1</name></expr>:</case>

                <expr_stmt pos:start="2101:17" pos:end="2101:46"><expr pos:start="2101:17" pos:end="2101:45"><call pos:start="2101:17" pos:end="2101:45"><name pos:start="2101:17" pos:end="2101:26">check_insn</name><argument_list pos:start="2101:27" pos:end="2101:45">(<argument pos:start="2101:28" pos:end="2101:30"><expr pos:start="2101:28" pos:end="2101:30"><name pos:start="2101:28" pos:end="2101:30">ctx</name></expr></argument>, <argument pos:start="2101:33" pos:end="2101:44"><expr pos:start="2101:33" pos:end="2101:44"><name pos:start="2101:33" pos:end="2101:44">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="2103:13" pos:end="2103:26">case <expr pos:start="2103:18" pos:end="2103:25"><name pos:start="2103:18" pos:end="2103:25">OPC_MFC1</name></expr>:</case>

            <case pos:start="2105:13" pos:end="2105:26">case <expr pos:start="2105:18" pos:end="2105:25"><name pos:start="2105:18" pos:end="2105:25">OPC_CFC1</name></expr>:</case>

            <case pos:start="2107:13" pos:end="2107:26">case <expr pos:start="2107:18" pos:end="2107:25"><name pos:start="2107:18" pos:end="2107:25">OPC_MTC1</name></expr>:</case>

            <case pos:start="2109:13" pos:end="2109:26">case <expr pos:start="2109:18" pos:end="2109:25"><name pos:start="2109:18" pos:end="2109:25">OPC_CTC1</name></expr>:</case>

                <expr_stmt pos:start="2111:17" pos:end="2111:42"><expr pos:start="2111:17" pos:end="2111:41"><call pos:start="2111:17" pos:end="2111:41"><name pos:start="2111:17" pos:end="2111:23">gen_cp1</name><argument_list pos:start="2111:24" pos:end="2111:41">(<argument pos:start="2111:25" pos:end="2111:27"><expr pos:start="2111:25" pos:end="2111:27"><name pos:start="2111:25" pos:end="2111:27">ctx</name></expr></argument>, <argument pos:start="2111:30" pos:end="2111:32"><expr pos:start="2111:30" pos:end="2111:32"><name pos:start="2111:30" pos:end="2111:32">op1</name></expr></argument>, <argument pos:start="2111:35" pos:end="2111:36"><expr pos:start="2111:35" pos:end="2111:36"><name pos:start="2111:35" pos:end="2111:36">rt</name></expr></argument>, <argument pos:start="2111:39" pos:end="2111:40"><expr pos:start="2111:39" pos:end="2111:40"><name pos:start="2111:39" pos:end="2111:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2113:17" pos:end="2116:0">break;</break>

<cpp:if pos:start="2115:1" pos:end="2115:26">#<cpp:directive pos:start="2115:2" pos:end="2115:3">if</cpp:directive> <expr pos:start="2115:5" pos:end="2115:26"><call pos:start="2115:5" pos:end="2115:26"><name pos:start="2115:5" pos:end="2115:11">defined</name><argument_list pos:start="2115:12" pos:end="2115:26">(<argument pos:start="2115:13" pos:end="2115:25"><expr pos:start="2115:13" pos:end="2115:25"><name pos:start="2115:13" pos:end="2115:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="2117:13" pos:end="2117:27">case <expr pos:start="2117:18" pos:end="2117:26"><name pos:start="2117:18" pos:end="2117:26">OPC_DMFC1</name></expr>:</case>

            <case pos:start="2119:13" pos:end="2119:27">case <expr pos:start="2119:18" pos:end="2119:26"><name pos:start="2119:18" pos:end="2119:26">OPC_DMTC1</name></expr>:</case>

                <expr_stmt pos:start="2121:17" pos:end="2121:43"><expr pos:start="2121:17" pos:end="2121:42"><call pos:start="2121:17" pos:end="2121:42"><name pos:start="2121:17" pos:end="2121:26">check_insn</name><argument_list pos:start="2121:27" pos:end="2121:42">(<argument pos:start="2121:28" pos:end="2121:30"><expr pos:start="2121:28" pos:end="2121:30"><name pos:start="2121:28" pos:end="2121:30">ctx</name></expr></argument>, <argument pos:start="2121:33" pos:end="2121:41"><expr pos:start="2121:33" pos:end="2121:41"><name pos:start="2121:33" pos:end="2121:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2123:17" pos:end="2123:42"><expr pos:start="2123:17" pos:end="2123:41"><call pos:start="2123:17" pos:end="2123:41"><name pos:start="2123:17" pos:end="2123:23">gen_cp1</name><argument_list pos:start="2123:24" pos:end="2123:41">(<argument pos:start="2123:25" pos:end="2123:27"><expr pos:start="2123:25" pos:end="2123:27"><name pos:start="2123:25" pos:end="2123:27">ctx</name></expr></argument>, <argument pos:start="2123:30" pos:end="2123:32"><expr pos:start="2123:30" pos:end="2123:32"><name pos:start="2123:30" pos:end="2123:32">op1</name></expr></argument>, <argument pos:start="2123:35" pos:end="2123:36"><expr pos:start="2123:35" pos:end="2123:36"><name pos:start="2123:35" pos:end="2123:36">rt</name></expr></argument>, <argument pos:start="2123:39" pos:end="2123:40"><expr pos:start="2123:39" pos:end="2123:40"><name pos:start="2123:39" pos:end="2123:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2125:17" pos:end="2128:0">break;</break>

<cpp:endif pos:start="2127:1" pos:end="2127:6">#<cpp:directive pos:start="2127:2" pos:end="2127:6">endif</cpp:directive></cpp:endif>

            <case pos:start="2129:13" pos:end="2129:29">case <expr pos:start="2129:18" pos:end="2129:28"><name pos:start="2129:18" pos:end="2129:28">OPC_BC1ANY2</name></expr>:</case>

            <case pos:start="2131:13" pos:end="2131:29">case <expr pos:start="2131:18" pos:end="2131:28"><name pos:start="2131:18" pos:end="2131:28">OPC_BC1ANY4</name></expr>:</case>

                <expr_stmt pos:start="2133:17" pos:end="2133:33"><expr pos:start="2133:17" pos:end="2133:32"><call pos:start="2133:17" pos:end="2133:32"><name pos:start="2133:17" pos:end="2133:27">check_cop1x</name><argument_list pos:start="2133:28" pos:end="2133:32">(<argument pos:start="2133:29" pos:end="2133:31"><expr pos:start="2133:29" pos:end="2133:31"><name pos:start="2133:29" pos:end="2133:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2135:17" pos:end="2135:44"><expr pos:start="2135:17" pos:end="2135:43"><call pos:start="2135:17" pos:end="2135:43"><name pos:start="2135:17" pos:end="2135:26">check_insn</name><argument_list pos:start="2135:27" pos:end="2135:43">(<argument pos:start="2135:28" pos:end="2135:30"><expr pos:start="2135:28" pos:end="2135:30"><name pos:start="2135:28" pos:end="2135:30">ctx</name></expr></argument>, <argument pos:start="2135:33" pos:end="2135:42"><expr pos:start="2135:33" pos:end="2135:42"><name pos:start="2135:33" pos:end="2135:42">ASE_MIPS3D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="2137:17" pos:end="2137:34">/* fall through */</comment>

            <case pos:start="2139:13" pos:end="2139:25">case <expr pos:start="2139:18" pos:end="2139:24"><name pos:start="2139:18" pos:end="2139:24">OPC_BC1</name></expr>:</case>

                <expr_stmt pos:start="2141:17" pos:end="2143:63"><expr pos:start="2141:17" pos:end="2143:62"><call pos:start="2141:17" pos:end="2143:62"><name pos:start="2141:17" pos:end="2141:35">gen_compute_branch1</name><argument_list pos:start="2141:36" pos:end="2143:62">(<argument pos:start="2141:37" pos:end="2141:39"><expr pos:start="2141:37" pos:end="2141:39"><name pos:start="2141:37" pos:end="2141:39">ctx</name></expr></argument>, <argument pos:start="2141:42" pos:end="2141:62"><expr pos:start="2141:42" pos:end="2141:62"><call pos:start="2141:42" pos:end="2141:62"><name pos:start="2141:42" pos:end="2141:49">MASK_BC1</name><argument_list pos:start="2141:50" pos:end="2141:62">(<argument pos:start="2141:51" pos:end="2141:61"><expr pos:start="2141:51" pos:end="2141:61"><name pos:start="2141:51" pos:end="2141:61"><name pos:start="2141:51" pos:end="2141:53">ctx</name><operator pos:start="2141:54" pos:end="2141:55">-&gt;</operator><name pos:start="2141:56" pos:end="2141:61">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="2143:37" pos:end="2143:51"><expr pos:start="2143:37" pos:end="2143:51"><operator pos:start="2143:37" pos:end="2143:37">(</operator><name pos:start="2143:38" pos:end="2143:39">rt</name> <operator pos:start="2143:41" pos:end="2143:42">&gt;&gt;</operator> <literal type="number" pos:start="2143:44" pos:end="2143:44">2</literal><operator pos:start="2143:45" pos:end="2143:45">)</operator> <operator pos:start="2143:47" pos:end="2143:47">&amp;</operator> <literal type="number" pos:start="2143:49" pos:end="2143:51">0x7</literal></expr></argument>, <argument pos:start="2143:54" pos:end="2143:61"><expr pos:start="2143:54" pos:end="2143:61"><name pos:start="2143:54" pos:end="2143:56">imm</name> <operator pos:start="2143:58" pos:end="2143:59">&lt;&lt;</operator> <literal type="number" pos:start="2143:61" pos:end="2143:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2145:17" pos:end="2145:31"><expr pos:start="2145:17" pos:end="2145:30"><operator pos:start="2145:17" pos:end="2145:17">*</operator><name pos:start="2145:18" pos:end="2145:26">is_branch</name> <operator pos:start="2145:28" pos:end="2145:28">=</operator> <literal type="number" pos:start="2145:30" pos:end="2145:30">1</literal></expr>;</expr_stmt>

                <break pos:start="2147:17" pos:end="2147:22">break;</break>

            <case pos:start="2149:13" pos:end="2149:27">case <expr pos:start="2149:18" pos:end="2149:26"><name pos:start="2149:18" pos:end="2149:26">OPC_S_FMT</name></expr>:</case>

            <case pos:start="2151:13" pos:end="2151:27">case <expr pos:start="2151:18" pos:end="2151:26"><name pos:start="2151:18" pos:end="2151:26">OPC_D_FMT</name></expr>:</case>

            <case pos:start="2153:13" pos:end="2153:27">case <expr pos:start="2153:18" pos:end="2153:26"><name pos:start="2153:18" pos:end="2153:26">OPC_W_FMT</name></expr>:</case>

            <case pos:start="2155:13" pos:end="2155:27">case <expr pos:start="2155:18" pos:end="2155:26"><name pos:start="2155:18" pos:end="2155:26">OPC_L_FMT</name></expr>:</case>

            <case pos:start="2157:13" pos:end="2157:28">case <expr pos:start="2157:18" pos:end="2157:27"><name pos:start="2157:18" pos:end="2157:27">OPC_PS_FMT</name></expr>:</case>

                <expr_stmt pos:start="2159:17" pos:end="2161:45"><expr pos:start="2159:17" pos:end="2161:44"><call pos:start="2159:17" pos:end="2161:44"><name pos:start="2159:17" pos:end="2159:26">gen_farith</name><argument_list pos:start="2159:27" pos:end="2161:44">(<argument pos:start="2159:28" pos:end="2159:30"><expr pos:start="2159:28" pos:end="2159:30"><name pos:start="2159:28" pos:end="2159:30">ctx</name></expr></argument>, <argument pos:start="2159:33" pos:end="2159:61"><expr pos:start="2159:33" pos:end="2159:61"><name pos:start="2159:33" pos:end="2159:43"><name pos:start="2159:33" pos:end="2159:35">ctx</name><operator pos:start="2159:36" pos:end="2159:37">-&gt;</operator><name pos:start="2159:38" pos:end="2159:43">opcode</name></name> <operator pos:start="2159:45" pos:end="2159:45">&amp;</operator> <call pos:start="2159:47" pos:end="2159:61"><name pos:start="2159:47" pos:end="2159:49">FOP</name><argument_list pos:start="2159:50" pos:end="2159:61">(<argument pos:start="2159:51" pos:end="2159:54"><expr pos:start="2159:51" pos:end="2159:54"><literal type="number" pos:start="2159:51" pos:end="2159:54">0x3f</literal></expr></argument>, <argument pos:start="2159:57" pos:end="2159:60"><expr pos:start="2159:57" pos:end="2159:60"><literal type="number" pos:start="2159:57" pos:end="2159:60">0x1f</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2159:64" pos:end="2159:65"><expr pos:start="2159:64" pos:end="2159:65"><name pos:start="2159:64" pos:end="2159:65">rt</name></expr></argument>, <argument pos:start="2159:68" pos:end="2159:69"><expr pos:start="2159:68" pos:end="2159:69"><name pos:start="2159:68" pos:end="2159:69">rd</name></expr></argument>, <argument pos:start="2159:72" pos:end="2159:73"><expr pos:start="2159:72" pos:end="2159:73"><name pos:start="2159:72" pos:end="2159:73">sa</name></expr></argument>,

                           <argument pos:start="2161:28" pos:end="2161:43"><expr pos:start="2161:28" pos:end="2161:43"><operator pos:start="2161:28" pos:end="2161:28">(</operator><name pos:start="2161:29" pos:end="2161:31">imm</name> <operator pos:start="2161:33" pos:end="2161:34">&gt;&gt;</operator> <literal type="number" pos:start="2161:36" pos:end="2161:36">8</literal><operator pos:start="2161:37" pos:end="2161:37">)</operator> <operator pos:start="2161:39" pos:end="2161:39">&amp;</operator> <literal type="number" pos:start="2161:41" pos:end="2161:43">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2163:17" pos:end="2163:22">break;</break>

            <default pos:start="2165:13" pos:end="2165:20">default:</default>

                <expr_stmt pos:start="2167:17" pos:end="2167:34"><expr pos:start="2167:17" pos:end="2167:33"><call pos:start="2167:17" pos:end="2167:33"><name pos:start="2167:17" pos:end="2167:26">MIPS_INVAL</name><argument_list pos:start="2167:27" pos:end="2167:33">(<argument pos:start="2167:28" pos:end="2167:32"><expr pos:start="2167:28" pos:end="2167:32"><literal type="string" pos:start="2167:28" pos:end="2167:32">"cp1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2169:17" pos:end="2169:50"><expr pos:start="2169:17" pos:end="2169:49"><call pos:start="2169:17" pos:end="2169:49"><name pos:start="2169:17" pos:end="2169:34">generate_exception</name> <argument_list pos:start="2169:36" pos:end="2169:49">(<argument pos:start="2169:37" pos:end="2169:39"><expr pos:start="2169:37" pos:end="2169:39"><name pos:start="2169:37" pos:end="2169:39">ctx</name></expr></argument>, <argument pos:start="2169:42" pos:end="2169:48"><expr pos:start="2169:42" pos:end="2169:48"><name pos:start="2169:42" pos:end="2169:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2171:17" pos:end="2171:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="2175:11" pos:end="2179:9">else <block pos:start="2175:16" pos:end="2179:9">{<block_content pos:start="2177:13" pos:end="2177:53">

            <expr_stmt pos:start="2177:13" pos:end="2177:53"><expr pos:start="2177:13" pos:end="2177:52"><call pos:start="2177:13" pos:end="2177:52"><name pos:start="2177:13" pos:end="2177:34">generate_exception_err</name><argument_list pos:start="2177:35" pos:end="2177:52">(<argument pos:start="2177:36" pos:end="2177:38"><expr pos:start="2177:36" pos:end="2177:38"><name pos:start="2177:36" pos:end="2177:38">ctx</name></expr></argument>, <argument pos:start="2177:41" pos:end="2177:48"><expr pos:start="2177:41" pos:end="2177:48"><name pos:start="2177:41" pos:end="2177:48">EXCP_CpU</name></expr></argument>, <argument pos:start="2177:51" pos:end="2177:51"><expr pos:start="2177:51" pos:end="2177:51"><literal type="number" pos:start="2177:51" pos:end="2177:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2181:9" pos:end="2181:14">break;</break>



    <comment type="block" pos:start="2185:5" pos:end="2185:16">/* COP2.  */</comment>

    <case pos:start="2187:5" pos:end="2187:18">case <expr pos:start="2187:10" pos:end="2187:17"><name pos:start="2187:10" pos:end="2187:17">OPC_LWC2</name></expr>:</case>

    <case pos:start="2189:5" pos:end="2189:18">case <expr pos:start="2189:10" pos:end="2189:17"><name pos:start="2189:10" pos:end="2189:17">OPC_LDC2</name></expr>:</case>

    <case pos:start="2191:5" pos:end="2191:18">case <expr pos:start="2191:10" pos:end="2191:17"><name pos:start="2191:10" pos:end="2191:17">OPC_SWC2</name></expr>:</case>

    <case pos:start="2193:5" pos:end="2193:18">case <expr pos:start="2193:10" pos:end="2193:17"><name pos:start="2193:10" pos:end="2193:17">OPC_SDC2</name></expr>:</case>

        <comment type="block" pos:start="2195:9" pos:end="2195:36">/* COP2: Not implemented. */</comment>

        <expr_stmt pos:start="2197:9" pos:end="2197:49"><expr pos:start="2197:9" pos:end="2197:48"><call pos:start="2197:9" pos:end="2197:48"><name pos:start="2197:9" pos:end="2197:30">generate_exception_err</name><argument_list pos:start="2197:31" pos:end="2197:48">(<argument pos:start="2197:32" pos:end="2197:34"><expr pos:start="2197:32" pos:end="2197:34"><name pos:start="2197:32" pos:end="2197:34">ctx</name></expr></argument>, <argument pos:start="2197:37" pos:end="2197:44"><expr pos:start="2197:37" pos:end="2197:44"><name pos:start="2197:37" pos:end="2197:44">EXCP_CpU</name></expr></argument>, <argument pos:start="2197:47" pos:end="2197:47"><expr pos:start="2197:47" pos:end="2197:47"><literal type="number" pos:start="2197:47" pos:end="2197:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2199:9" pos:end="2199:14">break;</break>

    <case pos:start="2201:5" pos:end="2201:17">case <expr pos:start="2201:10" pos:end="2201:16"><name pos:start="2201:10" pos:end="2201:16">OPC_CP2</name></expr>:</case>

        <expr_stmt pos:start="2203:9" pos:end="2203:41"><expr pos:start="2203:9" pos:end="2203:40"><call pos:start="2203:9" pos:end="2203:40"><name pos:start="2203:9" pos:end="2203:18">check_insn</name><argument_list pos:start="2203:19" pos:end="2203:40">(<argument pos:start="2203:20" pos:end="2203:22"><expr pos:start="2203:20" pos:end="2203:22"><name pos:start="2203:20" pos:end="2203:22">ctx</name></expr></argument>, <argument pos:start="2203:25" pos:end="2203:39"><expr pos:start="2203:25" pos:end="2203:39"><name pos:start="2203:25" pos:end="2203:39">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2205:9" pos:end="2205:65">/* Note that these instructions use different fields.  */</comment>

        <expr_stmt pos:start="2207:9" pos:end="2207:49"><expr pos:start="2207:9" pos:end="2207:48"><call pos:start="2207:9" pos:end="2207:48"><name pos:start="2207:9" pos:end="2207:31">gen_loongson_multimedia</name><argument_list pos:start="2207:32" pos:end="2207:48">(<argument pos:start="2207:33" pos:end="2207:35"><expr pos:start="2207:33" pos:end="2207:35"><name pos:start="2207:33" pos:end="2207:35">ctx</name></expr></argument>, <argument pos:start="2207:38" pos:end="2207:39"><expr pos:start="2207:38" pos:end="2207:39"><name pos:start="2207:38" pos:end="2207:39">sa</name></expr></argument>, <argument pos:start="2207:42" pos:end="2207:43"><expr pos:start="2207:42" pos:end="2207:43"><name pos:start="2207:42" pos:end="2207:43">rd</name></expr></argument>, <argument pos:start="2207:46" pos:end="2207:47"><expr pos:start="2207:46" pos:end="2207:47"><name pos:start="2207:46" pos:end="2207:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2209:9" pos:end="2209:14">break;</break>



    <case pos:start="2213:5" pos:end="2213:17">case <expr pos:start="2213:10" pos:end="2213:16"><name pos:start="2213:10" pos:end="2213:16">OPC_CP3</name></expr>:</case>

        <if_stmt pos:start="2215:9" pos:end="2289:9"><if pos:start="2215:9" pos:end="2285:9">if <condition pos:start="2215:12" pos:end="2215:47">(<expr pos:start="2215:13" pos:end="2215:46"><name pos:start="2215:13" pos:end="2215:28"><name pos:start="2215:13" pos:end="2215:15">env</name><operator pos:start="2215:16" pos:end="2215:17">-&gt;</operator><name pos:start="2215:18" pos:end="2215:28">CP0_Config1</name></name> <operator pos:start="2215:30" pos:end="2215:30">&amp;</operator> <operator pos:start="2215:32" pos:end="2215:32">(</operator><literal type="number" pos:start="2215:33" pos:end="2215:33">1</literal> <operator pos:start="2215:35" pos:end="2215:36">&lt;&lt;</operator> <name pos:start="2215:38" pos:end="2215:45">CP0C1_FP</name><operator pos:start="2215:46" pos:end="2215:46">)</operator></expr>)</condition> <block pos:start="2215:49" pos:end="2285:9">{<block_content pos:start="2217:13" pos:end="2283:13">

            <expr_stmt pos:start="2217:13" pos:end="2217:35"><expr pos:start="2217:13" pos:end="2217:34"><call pos:start="2217:13" pos:end="2217:34"><name pos:start="2217:13" pos:end="2217:29">check_cp1_enabled</name><argument_list pos:start="2217:30" pos:end="2217:34">(<argument pos:start="2217:31" pos:end="2217:33"><expr pos:start="2217:31" pos:end="2217:33"><name pos:start="2217:31" pos:end="2217:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2219:13" pos:end="2219:40"><expr pos:start="2219:13" pos:end="2219:39"><name pos:start="2219:13" pos:end="2219:15">op1</name> <operator pos:start="2219:17" pos:end="2219:17">=</operator> <call pos:start="2219:19" pos:end="2219:39"><name pos:start="2219:19" pos:end="2219:26">MASK_CP3</name><argument_list pos:start="2219:27" pos:end="2219:39">(<argument pos:start="2219:28" pos:end="2219:38"><expr pos:start="2219:28" pos:end="2219:38"><name pos:start="2219:28" pos:end="2219:38"><name pos:start="2219:28" pos:end="2219:30">ctx</name><operator pos:start="2219:31" pos:end="2219:32">-&gt;</operator><name pos:start="2219:33" pos:end="2219:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2221:13" pos:end="2283:13">switch <condition pos:start="2221:20" pos:end="2221:24">(<expr pos:start="2221:21" pos:end="2221:23"><name pos:start="2221:21" pos:end="2221:23">op1</name></expr>)</condition> <block pos:start="2221:26" pos:end="2283:13">{<block_content pos:start="2223:13" pos:end="2281:22">

            <case pos:start="2223:13" pos:end="2223:27">case <expr pos:start="2223:18" pos:end="2223:26"><name pos:start="2223:18" pos:end="2223:26">OPC_LWXC1</name></expr>:</case>

            <case pos:start="2225:13" pos:end="2225:27">case <expr pos:start="2225:18" pos:end="2225:26"><name pos:start="2225:18" pos:end="2225:26">OPC_LDXC1</name></expr>:</case>

            <case pos:start="2227:13" pos:end="2227:27">case <expr pos:start="2227:18" pos:end="2227:26"><name pos:start="2227:18" pos:end="2227:26">OPC_LUXC1</name></expr>:</case>

            <case pos:start="2229:13" pos:end="2229:27">case <expr pos:start="2229:18" pos:end="2229:26"><name pos:start="2229:18" pos:end="2229:26">OPC_SWXC1</name></expr>:</case>

            <case pos:start="2231:13" pos:end="2231:27">case <expr pos:start="2231:18" pos:end="2231:26"><name pos:start="2231:18" pos:end="2231:26">OPC_SDXC1</name></expr>:</case>

            <case pos:start="2233:13" pos:end="2233:27">case <expr pos:start="2233:18" pos:end="2233:26"><name pos:start="2233:18" pos:end="2233:26">OPC_SUXC1</name></expr>:</case>

                <expr_stmt pos:start="2235:17" pos:end="2235:56"><expr pos:start="2235:17" pos:end="2235:55"><call pos:start="2235:17" pos:end="2235:55"><name pos:start="2235:17" pos:end="2235:29">gen_flt3_ldst</name><argument_list pos:start="2235:30" pos:end="2235:55">(<argument pos:start="2235:31" pos:end="2235:33"><expr pos:start="2235:31" pos:end="2235:33"><name pos:start="2235:31" pos:end="2235:33">ctx</name></expr></argument>, <argument pos:start="2235:36" pos:end="2235:38"><expr pos:start="2235:36" pos:end="2235:38"><name pos:start="2235:36" pos:end="2235:38">op1</name></expr></argument>, <argument pos:start="2235:41" pos:end="2235:42"><expr pos:start="2235:41" pos:end="2235:42"><name pos:start="2235:41" pos:end="2235:42">sa</name></expr></argument>, <argument pos:start="2235:45" pos:end="2235:46"><expr pos:start="2235:45" pos:end="2235:46"><name pos:start="2235:45" pos:end="2235:46">rd</name></expr></argument>, <argument pos:start="2235:49" pos:end="2235:50"><expr pos:start="2235:49" pos:end="2235:50"><name pos:start="2235:49" pos:end="2235:50">rs</name></expr></argument>, <argument pos:start="2235:53" pos:end="2235:54"><expr pos:start="2235:53" pos:end="2235:54"><name pos:start="2235:53" pos:end="2235:54">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2237:17" pos:end="2237:22">break;</break>

            <case pos:start="2239:13" pos:end="2239:27">case <expr pos:start="2239:18" pos:end="2239:26"><name pos:start="2239:18" pos:end="2239:26">OPC_PREFX</name></expr>:</case>

                <comment type="block" pos:start="2241:17" pos:end="2241:35">/* Treat as NOP. */</comment>

                <break pos:start="2243:17" pos:end="2243:22">break;</break>

            <case pos:start="2245:13" pos:end="2245:29">case <expr pos:start="2245:18" pos:end="2245:28"><name pos:start="2245:18" pos:end="2245:28">OPC_ALNV_PS</name></expr>:</case>

            <case pos:start="2247:13" pos:end="2247:28">case <expr pos:start="2247:18" pos:end="2247:27"><name pos:start="2247:18" pos:end="2247:27">OPC_MADD_S</name></expr>:</case>

            <case pos:start="2249:13" pos:end="2249:28">case <expr pos:start="2249:18" pos:end="2249:27"><name pos:start="2249:18" pos:end="2249:27">OPC_MADD_D</name></expr>:</case>

            <case pos:start="2251:13" pos:end="2251:29">case <expr pos:start="2251:18" pos:end="2251:28"><name pos:start="2251:18" pos:end="2251:28">OPC_MADD_PS</name></expr>:</case>

            <case pos:start="2253:13" pos:end="2253:28">case <expr pos:start="2253:18" pos:end="2253:27"><name pos:start="2253:18" pos:end="2253:27">OPC_MSUB_S</name></expr>:</case>

            <case pos:start="2255:13" pos:end="2255:28">case <expr pos:start="2255:18" pos:end="2255:27"><name pos:start="2255:18" pos:end="2255:27">OPC_MSUB_D</name></expr>:</case>

            <case pos:start="2257:13" pos:end="2257:29">case <expr pos:start="2257:18" pos:end="2257:28"><name pos:start="2257:18" pos:end="2257:28">OPC_MSUB_PS</name></expr>:</case>

            <case pos:start="2259:13" pos:end="2259:29">case <expr pos:start="2259:18" pos:end="2259:28"><name pos:start="2259:18" pos:end="2259:28">OPC_NMADD_S</name></expr>:</case>

            <case pos:start="2261:13" pos:end="2261:29">case <expr pos:start="2261:18" pos:end="2261:28"><name pos:start="2261:18" pos:end="2261:28">OPC_NMADD_D</name></expr>:</case>

            <case pos:start="2263:13" pos:end="2263:30">case <expr pos:start="2263:18" pos:end="2263:29"><name pos:start="2263:18" pos:end="2263:29">OPC_NMADD_PS</name></expr>:</case>

            <case pos:start="2265:13" pos:end="2265:29">case <expr pos:start="2265:18" pos:end="2265:28"><name pos:start="2265:18" pos:end="2265:28">OPC_NMSUB_S</name></expr>:</case>

            <case pos:start="2267:13" pos:end="2267:29">case <expr pos:start="2267:18" pos:end="2267:28"><name pos:start="2267:18" pos:end="2267:28">OPC_NMSUB_D</name></expr>:</case>

            <case pos:start="2269:13" pos:end="2269:30">case <expr pos:start="2269:18" pos:end="2269:29"><name pos:start="2269:18" pos:end="2269:29">OPC_NMSUB_PS</name></expr>:</case>

                <expr_stmt pos:start="2271:17" pos:end="2271:57"><expr pos:start="2271:17" pos:end="2271:56"><call pos:start="2271:17" pos:end="2271:56"><name pos:start="2271:17" pos:end="2271:30">gen_flt3_arith</name><argument_list pos:start="2271:31" pos:end="2271:56">(<argument pos:start="2271:32" pos:end="2271:34"><expr pos:start="2271:32" pos:end="2271:34"><name pos:start="2271:32" pos:end="2271:34">ctx</name></expr></argument>, <argument pos:start="2271:37" pos:end="2271:39"><expr pos:start="2271:37" pos:end="2271:39"><name pos:start="2271:37" pos:end="2271:39">op1</name></expr></argument>, <argument pos:start="2271:42" pos:end="2271:43"><expr pos:start="2271:42" pos:end="2271:43"><name pos:start="2271:42" pos:end="2271:43">sa</name></expr></argument>, <argument pos:start="2271:46" pos:end="2271:47"><expr pos:start="2271:46" pos:end="2271:47"><name pos:start="2271:46" pos:end="2271:47">rs</name></expr></argument>, <argument pos:start="2271:50" pos:end="2271:51"><expr pos:start="2271:50" pos:end="2271:51"><name pos:start="2271:50" pos:end="2271:51">rd</name></expr></argument>, <argument pos:start="2271:54" pos:end="2271:55"><expr pos:start="2271:54" pos:end="2271:55"><name pos:start="2271:54" pos:end="2271:55">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2273:17" pos:end="2273:22">break;</break>

            <default pos:start="2275:13" pos:end="2275:20">default:</default>

                <expr_stmt pos:start="2277:17" pos:end="2277:34"><expr pos:start="2277:17" pos:end="2277:33"><call pos:start="2277:17" pos:end="2277:33"><name pos:start="2277:17" pos:end="2277:26">MIPS_INVAL</name><argument_list pos:start="2277:27" pos:end="2277:33">(<argument pos:start="2277:28" pos:end="2277:32"><expr pos:start="2277:28" pos:end="2277:32"><literal type="string" pos:start="2277:28" pos:end="2277:32">"cp3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2279:17" pos:end="2279:50"><expr pos:start="2279:17" pos:end="2279:49"><call pos:start="2279:17" pos:end="2279:49"><name pos:start="2279:17" pos:end="2279:34">generate_exception</name> <argument_list pos:start="2279:36" pos:end="2279:49">(<argument pos:start="2279:37" pos:end="2279:39"><expr pos:start="2279:37" pos:end="2279:39"><name pos:start="2279:37" pos:end="2279:39">ctx</name></expr></argument>, <argument pos:start="2279:42" pos:end="2279:48"><expr pos:start="2279:42" pos:end="2279:48"><name pos:start="2279:42" pos:end="2279:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2281:17" pos:end="2281:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="2285:11" pos:end="2289:9">else <block pos:start="2285:16" pos:end="2289:9">{<block_content pos:start="2287:13" pos:end="2287:53">

            <expr_stmt pos:start="2287:13" pos:end="2287:53"><expr pos:start="2287:13" pos:end="2287:52"><call pos:start="2287:13" pos:end="2287:52"><name pos:start="2287:13" pos:end="2287:34">generate_exception_err</name><argument_list pos:start="2287:35" pos:end="2287:52">(<argument pos:start="2287:36" pos:end="2287:38"><expr pos:start="2287:36" pos:end="2287:38"><name pos:start="2287:36" pos:end="2287:38">ctx</name></expr></argument>, <argument pos:start="2287:41" pos:end="2287:48"><expr pos:start="2287:41" pos:end="2287:48"><name pos:start="2287:41" pos:end="2287:48">EXCP_CpU</name></expr></argument>, <argument pos:start="2287:51" pos:end="2287:51"><expr pos:start="2287:51" pos:end="2287:51"><literal type="number" pos:start="2287:51" pos:end="2287:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2291:9" pos:end="2296:0">break;</break>



<cpp:if pos:start="2295:1" pos:end="2295:26">#<cpp:directive pos:start="2295:2" pos:end="2295:3">if</cpp:directive> <expr pos:start="2295:5" pos:end="2295:26"><call pos:start="2295:5" pos:end="2295:26"><name pos:start="2295:5" pos:end="2295:11">defined</name><argument_list pos:start="2295:12" pos:end="2295:26">(<argument pos:start="2295:13" pos:end="2295:25"><expr pos:start="2295:13" pos:end="2295:25"><name pos:start="2295:13" pos:end="2295:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="2297:5" pos:end="2297:24">/* MIPS64 opcodes */</comment>

    <case pos:start="2299:5" pos:end="2299:17">case <expr pos:start="2299:10" pos:end="2299:16"><name pos:start="2299:10" pos:end="2299:16">OPC_LWU</name></expr>:</case>

    <case pos:start="2301:5" pos:end="2301:29">case <expr pos:start="2301:10" pos:end="2301:28"><name pos:start="2301:10" pos:end="2301:16">OPC_LDL</name> <operator pos:start="2301:18" pos:end="2301:20">...</operator> <name pos:start="2301:22" pos:end="2301:28">OPC_LDR</name></expr>:</case>

    <case pos:start="2303:5" pos:end="2303:17">case <expr pos:start="2303:10" pos:end="2303:16"><name pos:start="2303:10" pos:end="2303:16">OPC_LLD</name></expr>:</case>

    <case pos:start="2305:5" pos:end="2305:16">case <expr pos:start="2305:10" pos:end="2305:15"><name pos:start="2305:10" pos:end="2305:15">OPC_LD</name></expr>:</case>

        <expr_stmt pos:start="2307:9" pos:end="2307:35"><expr pos:start="2307:9" pos:end="2307:34"><call pos:start="2307:9" pos:end="2307:34"><name pos:start="2307:9" pos:end="2307:18">check_insn</name><argument_list pos:start="2307:19" pos:end="2307:34">(<argument pos:start="2307:20" pos:end="2307:22"><expr pos:start="2307:20" pos:end="2307:22"><name pos:start="2307:20" pos:end="2307:22">ctx</name></expr></argument>, <argument pos:start="2307:25" pos:end="2307:33"><expr pos:start="2307:25" pos:end="2307:33"><name pos:start="2307:25" pos:end="2307:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2309:9" pos:end="2309:27"><expr pos:start="2309:9" pos:end="2309:26"><call pos:start="2309:9" pos:end="2309:26"><name pos:start="2309:9" pos:end="2309:21">check_mips_64</name><argument_list pos:start="2309:22" pos:end="2309:26">(<argument pos:start="2309:23" pos:end="2309:25"><expr pos:start="2309:23" pos:end="2309:25"><name pos:start="2309:23" pos:end="2309:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2311:9" pos:end="2311:37"><expr pos:start="2311:9" pos:end="2311:36"><call pos:start="2311:9" pos:end="2311:36"><name pos:start="2311:9" pos:end="2311:14">gen_ld</name><argument_list pos:start="2311:15" pos:end="2311:36">(<argument pos:start="2311:16" pos:end="2311:18"><expr pos:start="2311:16" pos:end="2311:18"><name pos:start="2311:16" pos:end="2311:18">ctx</name></expr></argument>, <argument pos:start="2311:21" pos:end="2311:22"><expr pos:start="2311:21" pos:end="2311:22"><name pos:start="2311:21" pos:end="2311:22">op</name></expr></argument>, <argument pos:start="2311:25" pos:end="2311:26"><expr pos:start="2311:25" pos:end="2311:26"><name pos:start="2311:25" pos:end="2311:26">rt</name></expr></argument>, <argument pos:start="2311:29" pos:end="2311:30"><expr pos:start="2311:29" pos:end="2311:30"><name pos:start="2311:29" pos:end="2311:30">rs</name></expr></argument>, <argument pos:start="2311:33" pos:end="2311:35"><expr pos:start="2311:33" pos:end="2311:35"><name pos:start="2311:33" pos:end="2311:35">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2313:9" pos:end="2313:14">break;</break>

    <case pos:start="2315:5" pos:end="2315:29">case <expr pos:start="2315:10" pos:end="2315:28"><name pos:start="2315:10" pos:end="2315:16">OPC_SDL</name> <operator pos:start="2315:18" pos:end="2315:20">...</operator> <name pos:start="2315:22" pos:end="2315:28">OPC_SDR</name></expr>:</case>

    <case pos:start="2317:5" pos:end="2317:16">case <expr pos:start="2317:10" pos:end="2317:15"><name pos:start="2317:10" pos:end="2317:15">OPC_SD</name></expr>:</case>

        <expr_stmt pos:start="2319:9" pos:end="2319:35"><expr pos:start="2319:9" pos:end="2319:34"><call pos:start="2319:9" pos:end="2319:34"><name pos:start="2319:9" pos:end="2319:18">check_insn</name><argument_list pos:start="2319:19" pos:end="2319:34">(<argument pos:start="2319:20" pos:end="2319:22"><expr pos:start="2319:20" pos:end="2319:22"><name pos:start="2319:20" pos:end="2319:22">ctx</name></expr></argument>, <argument pos:start="2319:25" pos:end="2319:33"><expr pos:start="2319:25" pos:end="2319:33"><name pos:start="2319:25" pos:end="2319:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2321:9" pos:end="2321:27"><expr pos:start="2321:9" pos:end="2321:26"><call pos:start="2321:9" pos:end="2321:26"><name pos:start="2321:9" pos:end="2321:21">check_mips_64</name><argument_list pos:start="2321:22" pos:end="2321:26">(<argument pos:start="2321:23" pos:end="2321:25"><expr pos:start="2321:23" pos:end="2321:25"><name pos:start="2321:23" pos:end="2321:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2323:9" pos:end="2323:37"><expr pos:start="2323:9" pos:end="2323:36"><call pos:start="2323:9" pos:end="2323:36"><name pos:start="2323:9" pos:end="2323:14">gen_st</name><argument_list pos:start="2323:15" pos:end="2323:36">(<argument pos:start="2323:16" pos:end="2323:18"><expr pos:start="2323:16" pos:end="2323:18"><name pos:start="2323:16" pos:end="2323:18">ctx</name></expr></argument>, <argument pos:start="2323:21" pos:end="2323:22"><expr pos:start="2323:21" pos:end="2323:22"><name pos:start="2323:21" pos:end="2323:22">op</name></expr></argument>, <argument pos:start="2323:25" pos:end="2323:26"><expr pos:start="2323:25" pos:end="2323:26"><name pos:start="2323:25" pos:end="2323:26">rt</name></expr></argument>, <argument pos:start="2323:29" pos:end="2323:30"><expr pos:start="2323:29" pos:end="2323:30"><name pos:start="2323:29" pos:end="2323:30">rs</name></expr></argument>, <argument pos:start="2323:33" pos:end="2323:35"><expr pos:start="2323:33" pos:end="2323:35"><name pos:start="2323:33" pos:end="2323:35">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2325:9" pos:end="2325:14">break;</break>

    <case pos:start="2327:5" pos:end="2327:17">case <expr pos:start="2327:10" pos:end="2327:16"><name pos:start="2327:10" pos:end="2327:16">OPC_SCD</name></expr>:</case>

        <expr_stmt pos:start="2329:9" pos:end="2329:35"><expr pos:start="2329:9" pos:end="2329:34"><call pos:start="2329:9" pos:end="2329:34"><name pos:start="2329:9" pos:end="2329:18">check_insn</name><argument_list pos:start="2329:19" pos:end="2329:34">(<argument pos:start="2329:20" pos:end="2329:22"><expr pos:start="2329:20" pos:end="2329:22"><name pos:start="2329:20" pos:end="2329:22">ctx</name></expr></argument>, <argument pos:start="2329:25" pos:end="2329:33"><expr pos:start="2329:25" pos:end="2329:33"><name pos:start="2329:25" pos:end="2329:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2331:9" pos:end="2331:27"><expr pos:start="2331:9" pos:end="2331:26"><call pos:start="2331:9" pos:end="2331:26"><name pos:start="2331:9" pos:end="2331:21">check_mips_64</name><argument_list pos:start="2331:22" pos:end="2331:26">(<argument pos:start="2331:23" pos:end="2331:25"><expr pos:start="2331:23" pos:end="2331:25"><name pos:start="2331:23" pos:end="2331:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2333:9" pos:end="2333:42"><expr pos:start="2333:9" pos:end="2333:41"><call pos:start="2333:9" pos:end="2333:41"><name pos:start="2333:9" pos:end="2333:19">gen_st_cond</name><argument_list pos:start="2333:20" pos:end="2333:41">(<argument pos:start="2333:21" pos:end="2333:23"><expr pos:start="2333:21" pos:end="2333:23"><name pos:start="2333:21" pos:end="2333:23">ctx</name></expr></argument>, <argument pos:start="2333:26" pos:end="2333:27"><expr pos:start="2333:26" pos:end="2333:27"><name pos:start="2333:26" pos:end="2333:27">op</name></expr></argument>, <argument pos:start="2333:30" pos:end="2333:31"><expr pos:start="2333:30" pos:end="2333:31"><name pos:start="2333:30" pos:end="2333:31">rt</name></expr></argument>, <argument pos:start="2333:34" pos:end="2333:35"><expr pos:start="2333:34" pos:end="2333:35"><name pos:start="2333:34" pos:end="2333:35">rs</name></expr></argument>, <argument pos:start="2333:38" pos:end="2333:40"><expr pos:start="2333:38" pos:end="2333:40"><name pos:start="2333:38" pos:end="2333:40">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2335:9" pos:end="2335:14">break;</break>

    <case pos:start="2337:5" pos:end="2337:19">case <expr pos:start="2337:10" pos:end="2337:18"><name pos:start="2337:10" pos:end="2337:18">OPC_DADDI</name></expr>:</case>

    <case pos:start="2339:5" pos:end="2339:20">case <expr pos:start="2339:10" pos:end="2339:19"><name pos:start="2339:10" pos:end="2339:19">OPC_DADDIU</name></expr>:</case>

        <expr_stmt pos:start="2341:9" pos:end="2341:35"><expr pos:start="2341:9" pos:end="2341:34"><call pos:start="2341:9" pos:end="2341:34"><name pos:start="2341:9" pos:end="2341:18">check_insn</name><argument_list pos:start="2341:19" pos:end="2341:34">(<argument pos:start="2341:20" pos:end="2341:22"><expr pos:start="2341:20" pos:end="2341:22"><name pos:start="2341:20" pos:end="2341:22">ctx</name></expr></argument>, <argument pos:start="2341:25" pos:end="2341:33"><expr pos:start="2341:25" pos:end="2341:33"><name pos:start="2341:25" pos:end="2341:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2343:9" pos:end="2343:27"><expr pos:start="2343:9" pos:end="2343:26"><call pos:start="2343:9" pos:end="2343:26"><name pos:start="2343:9" pos:end="2343:21">check_mips_64</name><argument_list pos:start="2343:22" pos:end="2343:26">(<argument pos:start="2343:23" pos:end="2343:25"><expr pos:start="2343:23" pos:end="2343:25"><name pos:start="2343:23" pos:end="2343:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2345:9" pos:end="2345:44"><expr pos:start="2345:9" pos:end="2345:43"><call pos:start="2345:9" pos:end="2345:43"><name pos:start="2345:9" pos:end="2345:21">gen_arith_imm</name><argument_list pos:start="2345:22" pos:end="2345:43">(<argument pos:start="2345:23" pos:end="2345:25"><expr pos:start="2345:23" pos:end="2345:25"><name pos:start="2345:23" pos:end="2345:25">ctx</name></expr></argument>, <argument pos:start="2345:28" pos:end="2345:29"><expr pos:start="2345:28" pos:end="2345:29"><name pos:start="2345:28" pos:end="2345:29">op</name></expr></argument>, <argument pos:start="2345:32" pos:end="2345:33"><expr pos:start="2345:32" pos:end="2345:33"><name pos:start="2345:32" pos:end="2345:33">rt</name></expr></argument>, <argument pos:start="2345:36" pos:end="2345:37"><expr pos:start="2345:36" pos:end="2345:37"><name pos:start="2345:36" pos:end="2345:37">rs</name></expr></argument>, <argument pos:start="2345:40" pos:end="2345:42"><expr pos:start="2345:40" pos:end="2345:42"><name pos:start="2345:40" pos:end="2345:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2347:9" pos:end="2350:0">break;</break>

<cpp:endif pos:start="2349:1" pos:end="2349:6">#<cpp:directive pos:start="2349:2" pos:end="2349:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2351:5" pos:end="2351:18">case <expr pos:start="2351:10" pos:end="2351:17"><name pos:start="2351:10" pos:end="2351:17">OPC_JALX</name></expr>:</case>

        <expr_stmt pos:start="2353:9" pos:end="2353:52"><expr pos:start="2353:9" pos:end="2353:51"><call pos:start="2353:9" pos:end="2353:51"><name pos:start="2353:9" pos:end="2353:18">check_insn</name><argument_list pos:start="2353:19" pos:end="2353:51">(<argument pos:start="2353:20" pos:end="2353:22"><expr pos:start="2353:20" pos:end="2353:22"><name pos:start="2353:20" pos:end="2353:22">ctx</name></expr></argument>, <argument pos:start="2353:25" pos:end="2353:50"><expr pos:start="2353:25" pos:end="2353:50"><name pos:start="2353:25" pos:end="2353:34">ASE_MIPS16</name> <operator pos:start="2353:36" pos:end="2353:36">|</operator> <name pos:start="2353:38" pos:end="2353:50">ASE_MICROMIPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2355:9" pos:end="2355:57"><expr pos:start="2355:9" pos:end="2355:56"><name pos:start="2355:9" pos:end="2355:14">offset</name> <operator pos:start="2355:16" pos:end="2355:16">=</operator> <operator pos:start="2355:18" pos:end="2355:18">(</operator><name pos:start="2355:19" pos:end="2355:25">int32_t</name><operator pos:start="2355:26" pos:end="2355:26">)</operator><operator pos:start="2355:27" pos:end="2355:27">(</operator><name pos:start="2355:28" pos:end="2355:38"><name pos:start="2355:28" pos:end="2355:30">ctx</name><operator pos:start="2355:31" pos:end="2355:32">-&gt;</operator><name pos:start="2355:33" pos:end="2355:38">opcode</name></name> <operator pos:start="2355:40" pos:end="2355:40">&amp;</operator> <literal type="number" pos:start="2355:42" pos:end="2355:50">0x3FFFFFF</literal><operator pos:start="2355:51" pos:end="2355:51">)</operator> <operator pos:start="2355:53" pos:end="2355:54">&lt;&lt;</operator> <literal type="number" pos:start="2355:56" pos:end="2355:56">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="2357:9" pos:end="2357:55"><expr pos:start="2357:9" pos:end="2357:54"><call pos:start="2357:9" pos:end="2357:54"><name pos:start="2357:9" pos:end="2357:26">gen_compute_branch</name><argument_list pos:start="2357:27" pos:end="2357:54">(<argument pos:start="2357:28" pos:end="2357:30"><expr pos:start="2357:28" pos:end="2357:30"><name pos:start="2357:28" pos:end="2357:30">ctx</name></expr></argument>, <argument pos:start="2357:33" pos:end="2357:34"><expr pos:start="2357:33" pos:end="2357:34"><name pos:start="2357:33" pos:end="2357:34">op</name></expr></argument>, <argument pos:start="2357:37" pos:end="2357:37"><expr pos:start="2357:37" pos:end="2357:37"><literal type="number" pos:start="2357:37" pos:end="2357:37">4</literal></expr></argument>, <argument pos:start="2357:40" pos:end="2357:41"><expr pos:start="2357:40" pos:end="2357:41"><name pos:start="2357:40" pos:end="2357:41">rs</name></expr></argument>, <argument pos:start="2357:44" pos:end="2357:45"><expr pos:start="2357:44" pos:end="2357:45"><name pos:start="2357:44" pos:end="2357:45">rt</name></expr></argument>, <argument pos:start="2357:48" pos:end="2357:53"><expr pos:start="2357:48" pos:end="2357:53"><name pos:start="2357:48" pos:end="2357:53">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2359:9" pos:end="2359:23"><expr pos:start="2359:9" pos:end="2359:22"><operator pos:start="2359:9" pos:end="2359:9">*</operator><name pos:start="2359:10" pos:end="2359:18">is_branch</name> <operator pos:start="2359:20" pos:end="2359:20">=</operator> <literal type="number" pos:start="2359:22" pos:end="2359:22">1</literal></expr>;</expr_stmt>

        <break pos:start="2361:9" pos:end="2361:14">break;</break>

    <case pos:start="2363:5" pos:end="2363:18">case <expr pos:start="2363:10" pos:end="2363:17"><name pos:start="2363:10" pos:end="2363:17">OPC_MDMX</name></expr>:</case>

        <expr_stmt pos:start="2365:9" pos:end="2365:34"><expr pos:start="2365:9" pos:end="2365:33"><call pos:start="2365:9" pos:end="2365:33"><name pos:start="2365:9" pos:end="2365:18">check_insn</name><argument_list pos:start="2365:19" pos:end="2365:33">(<argument pos:start="2365:20" pos:end="2365:22"><expr pos:start="2365:20" pos:end="2365:22"><name pos:start="2365:20" pos:end="2365:22">ctx</name></expr></argument>, <argument pos:start="2365:25" pos:end="2365:32"><expr pos:start="2365:25" pos:end="2365:32"><name pos:start="2365:25" pos:end="2365:32">ASE_MDMX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2367:9" pos:end="2367:36">/* MDMX: Not implemented. */</comment>

    <default pos:start="2369:5" pos:end="2369:12">default:</default>            <comment type="block" pos:start="2369:25" pos:end="2369:37">/* Invalid */</comment>

        <expr_stmt pos:start="2371:9" pos:end="2371:35"><expr pos:start="2371:9" pos:end="2371:34"><call pos:start="2371:9" pos:end="2371:34"><name pos:start="2371:9" pos:end="2371:18">MIPS_INVAL</name><argument_list pos:start="2371:19" pos:end="2371:34">(<argument pos:start="2371:20" pos:end="2371:33"><expr pos:start="2371:20" pos:end="2371:33"><literal type="string" pos:start="2371:20" pos:end="2371:33">"major opcode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2373:9" pos:end="2373:41"><expr pos:start="2373:9" pos:end="2373:40"><call pos:start="2373:9" pos:end="2373:40"><name pos:start="2373:9" pos:end="2373:26">generate_exception</name><argument_list pos:start="2373:27" pos:end="2373:40">(<argument pos:start="2373:28" pos:end="2373:30"><expr pos:start="2373:28" pos:end="2373:30"><name pos:start="2373:28" pos:end="2373:30">ctx</name></expr></argument>, <argument pos:start="2373:33" pos:end="2373:39"><expr pos:start="2373:33" pos:end="2373:39"><name pos:start="2373:33" pos:end="2373:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2375:9" pos:end="2375:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
