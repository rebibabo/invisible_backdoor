<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19775.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">handle_packets</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:39">MpegTSContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ts</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:59">nb_packets</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:15">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:35">= <expr pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:27">ts</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">stream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:34"><name pos:start="7:13" pos:end="7:18">packet</name><index pos:start="7:19" pos:end="7:34">[<expr pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:33">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">packet_num</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">ret</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="43:5">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:17">avio_tell</name><argument_list pos:start="13:18" pos:end="13:24">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:26" pos:end="13:27">!=</operator> <name pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:30">ts</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">last_pos</name></name></expr>)</condition> <block pos:start="13:43" pos:end="43:5">{<block_content pos:start="15:9" pos:end="41:9">

        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:15">av_dlog</name><argument_list pos:start="17:16" pos:end="17:52">(<argument pos:start="17:17" pos:end="17:26"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:18">ts</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:26">stream</name></name></expr></argument>, <argument pos:start="17:29" pos:end="17:51"><expr pos:start="17:29" pos:end="17:51"><literal type="string" pos:start="17:29" pos:end="17:51">"Skipping after seek\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="19:9" pos:end="19:45">/* seek detected, flush pes buffer */</comment>

        <for pos:start="21:9" pos:end="41:9">for <control pos:start="21:13" pos:end="21:40">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:34"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:34">NB_PID_MAX</name></expr>;</condition> <incr pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:37">i</name><operator pos:start="21:38" pos:end="21:39">++</operator></expr></incr>)</control> <block pos:start="21:42" pos:end="41:9">{<block_content pos:start="23:13" pos:end="39:13">

            <if_stmt pos:start="23:13" pos:end="39:13"><if pos:start="23:13" pos:end="39:13">if <condition pos:start="23:16" pos:end="23:28">(<expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:18">ts</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:24">pids</name><index pos:start="23:25" pos:end="23:27">[<expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">i</name></expr>]</index></name></expr>)</condition> <block pos:start="23:30" pos:end="39:13">{<block_content pos:start="25:17" pos:end="37:42">

                <if_stmt pos:start="25:17" pos:end="35:17"><if pos:start="25:17" pos:end="35:17">if <condition pos:start="25:20" pos:end="25:52">(<expr pos:start="25:21" pos:end="25:51"><name pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:22">ts</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:28">pids</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">i</name></expr>]</index></name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:37">type</name> <operator pos:start="25:39" pos:end="25:40">==</operator> <name pos:start="25:42" pos:end="25:51">MPEGTS_PES</name></expr>)</condition> <block pos:start="25:54" pos:end="35:17">{<block_content pos:start="27:20" pos:end="33:44">

                   <decl_stmt pos:start="27:20" pos:end="27:70"><decl pos:start="27:20" pos:end="27:69"><type pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:29">PESContext</name> <modifier pos:start="27:31" pos:end="27:31">*</modifier></type><name pos:start="27:32" pos:end="27:34">pes</name> <init pos:start="27:36" pos:end="27:69">= <expr pos:start="27:38" pos:end="27:69"><name pos:start="27:38" pos:end="27:48"><name pos:start="27:38" pos:end="27:39">ts</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:45">pids</name><index pos:start="27:46" pos:end="27:48">[<expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">i</name></expr>]</index></name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:69"><name pos:start="27:51" pos:end="27:51">u</name><operator pos:start="27:52" pos:end="27:52">.</operator><name pos:start="27:53" pos:end="27:62">pes_filter</name><operator pos:start="27:63" pos:end="27:63">.</operator><name pos:start="27:64" pos:end="27:69">opaque</name></name></expr></init></decl>;</decl_stmt>

                   <expr_stmt pos:start="29:20" pos:end="29:42"><expr pos:start="29:20" pos:end="29:41"><call pos:start="29:20" pos:end="29:41"><name pos:start="29:20" pos:end="29:27">av_freep</name><argument_list pos:start="29:28" pos:end="29:41">(<argument pos:start="29:29" pos:end="29:40"><expr pos:start="29:29" pos:end="29:40"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:32">pes</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:40">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                   <expr_stmt pos:start="31:20" pos:end="31:39"><expr pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:22">pes</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:34">data_index</name></name> <operator pos:start="31:36" pos:end="31:36">=</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>;</expr_stmt>

                   <expr_stmt pos:start="33:20" pos:end="33:44"><expr pos:start="33:20" pos:end="33:43"><name pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:22">pes</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:29">state</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:43">MPEGTS_SKIP</name></expr>;</expr_stmt> <comment type="block" pos:start="33:46" pos:end="33:72">/* skip until pes header */</comment>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:42"><expr pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:18">ts</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:24">pids</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><name pos:start="37:26" pos:end="37:26">i</name></expr>]</index></name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:36">last_cc</name> <operator pos:start="37:38" pos:end="37:38">=</operator> <operator pos:start="37:40" pos:end="37:40">-</operator><literal type="number" pos:start="37:41" pos:end="37:41">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:6">ts</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:18">stop_parse</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:19"><expr pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:14">packet_num</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="75:5">for<control pos:start="51:8" pos:end="51:11">(<init pos:start="51:9" pos:end="51:9">;</init><condition pos:start="51:10" pos:end="51:10">;</condition><incr/>)</control> <block pos:start="51:13" pos:end="75:5">{<block_content pos:start="53:9" pos:end="73:18">

        <if_stmt pos:start="53:9" pos:end="55:18"><if pos:start="53:9" pos:end="55:18">if <condition pos:start="53:12" pos:end="53:29">(<expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:14">ts</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:26">stop_parse</name></name><operator pos:start="53:27" pos:end="53:27">&gt;</operator><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:18"><block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:18">packet_num</name><operator pos:start="57:19" pos:end="57:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:56">(<expr pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:22">nb_packets</name> <operator pos:start="59:24" pos:end="59:25">!=</operator> <literal type="number" pos:start="59:27" pos:end="59:27">0</literal> <operator pos:start="59:29" pos:end="59:30">&amp;&amp;</operator> <name pos:start="59:32" pos:end="59:41">packet_num</name> <operator pos:start="59:43" pos:end="59:44">&gt;=</operator> <name pos:start="59:46" pos:end="59:55">nb_packets</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:58"><expr pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:57"><name pos:start="63:15" pos:end="63:25">read_packet</name><argument_list pos:start="63:26" pos:end="63:57">(<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">s</name></expr></argument>, <argument pos:start="63:30" pos:end="63:35"><expr pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:35">packet</name></expr></argument>, <argument pos:start="63:38" pos:end="63:56"><expr pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:39">ts</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:56">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:18"><if pos:start="65:9" pos:end="67:18">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:18">!=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:18"><block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:39"><name pos:start="69:15" pos:end="69:27">handle_packet</name><argument_list pos:start="69:28" pos:end="69:39">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">ts</name></expr></argument>, <argument pos:start="69:33" pos:end="69:38"><expr pos:start="69:33" pos:end="69:38"><name pos:start="69:33" pos:end="69:38">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:18"><if pos:start="71:9" pos:end="73:18">if <condition pos:start="71:12" pos:end="71:21">(<expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:18">!=</operator> <literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:18"><block_content pos:start="73:13" pos:end="73:18">

            <break pos:start="73:13" pos:end="73:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:6">ts</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:16">last_pos</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:28">avio_tell</name><argument_list pos:start="77:29" pos:end="77:35">(<argument pos:start="77:30" pos:end="77:34"><expr pos:start="77:30" pos:end="77:34"><name pos:start="77:30" pos:end="77:34"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
