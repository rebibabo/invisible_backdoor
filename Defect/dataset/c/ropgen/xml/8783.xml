<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8783.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">kmvc_decode_inter_8x8</name><parameter_list pos:start="1:33" pos:end="1:65">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:44">KmvcContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:57"><decl pos:start="1:53" pos:end="1:57"><type pos:start="1:53" pos:end="1:57"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:57">w</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:64"><decl pos:start="1:60" pos:end="1:64"><type pos:start="1:60" pos:end="1:64"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:64">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">BitBuf</name></type> <name pos:start="5:12" pos:end="5:13">bb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">bx</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">by</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">l0x</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">l1x</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">l0y</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">l1y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">mx</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">my</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:21">kmvc_init_getbits</name><argument_list pos:start="19:22" pos:end="19:34">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">bb</name></expr></argument>, <argument pos:start="19:27" pos:end="19:33"><expr pos:start="19:27" pos:end="19:33"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:30">ctx</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:33">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="191:9">for <control pos:start="23:9" pos:end="23:33">(<init pos:start="23:10" pos:end="23:16"><expr pos:start="23:10" pos:end="23:15"><name pos:start="23:10" pos:end="23:11">by</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>;</init> <condition pos:start="23:18" pos:end="23:24"><expr pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:19">by</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">h</name></expr>;</condition> <incr pos:start="23:26" pos:end="23:32"><expr pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:27">by</name> <operator pos:start="23:29" pos:end="23:30">+=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">8</literal></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="191:9"><block_content pos:start="25:9" pos:end="191:9">

        <for pos:start="25:9" pos:end="191:9">for <control pos:start="25:13" pos:end="25:37">(<init pos:start="25:14" pos:end="25:20"><expr pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:15">bx</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</init> <condition pos:start="25:22" pos:end="25:28"><expr pos:start="25:22" pos:end="25:27"><name pos:start="25:22" pos:end="25:23">bx</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:27">w</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:31">bx</name> <operator pos:start="25:33" pos:end="25:34">+=</operator> <literal type="number" pos:start="25:36" pos:end="25:36">8</literal></expr></incr>)</control> <block pos:start="25:39" pos:end="191:9">{<block_content pos:start="27:13" pos:end="189:13">

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:23">kmvc_getbit</name><argument_list pos:start="27:24" pos:end="27:41">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">bb</name></expr></argument>, <argument pos:start="27:29" pos:end="27:35"><expr pos:start="27:29" pos:end="27:35"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:32">ctx</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:35">g</name></name></expr></argument>, <argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="189:13"><if pos:start="29:13" pos:end="59:13">if <condition pos:start="29:16" pos:end="29:21">(<expr pos:start="29:17" pos:end="29:20"><operator pos:start="29:17" pos:end="29:17">!</operator><name pos:start="29:18" pos:end="29:20">res</name></expr>)</condition> <block pos:start="29:23" pos:end="59:13">{<block_content pos:start="31:17" pos:end="57:17">

                <expr_stmt pos:start="31:17" pos:end="31:46"><expr pos:start="31:17" pos:end="31:45"><call pos:start="31:17" pos:end="31:45"><name pos:start="31:17" pos:end="31:27">kmvc_getbit</name><argument_list pos:start="31:28" pos:end="31:45">(<argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">bb</name></expr></argument>, <argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:36">ctx</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:39">g</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="33:17" pos:end="57:17"><if pos:start="33:17" pos:end="49:17">if <condition pos:start="33:20" pos:end="33:25">(<expr pos:start="33:21" pos:end="33:24"><operator pos:start="33:21" pos:end="33:21">!</operator><name pos:start="33:22" pos:end="33:24">res</name></expr>)</condition> <block pos:start="33:27" pos:end="49:17">{<block_content pos:start="35:21" pos:end="47:75">     <comment type="line" pos:start="33:33" pos:end="33:55">// fill whole 8x8 block</comment>

                    <if_stmt pos:start="35:21" pos:end="41:21"><if pos:start="35:21" pos:end="41:21">if <condition pos:start="35:24" pos:end="35:61">(<expr pos:start="35:25" pos:end="35:60"><operator pos:start="35:25" pos:end="35:25">!</operator><call pos:start="35:26" pos:end="35:60"><name pos:start="35:26" pos:end="35:51">bytestream2_get_bytes_left</name><argument_list pos:start="35:52" pos:end="35:60">(<argument pos:start="35:53" pos:end="35:59"><expr pos:start="35:53" pos:end="35:59"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:59"><name pos:start="35:54" pos:end="35:56">ctx</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:59">g</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:63" pos:end="41:21">{<block_content pos:start="37:25" pos:end="39:51">

                        <expr_stmt pos:start="37:25" pos:end="37:75"><expr pos:start="37:25" pos:end="37:74"><call pos:start="37:25" pos:end="37:74"><name pos:start="37:25" pos:end="37:30">av_log</name><argument_list pos:start="37:31" pos:end="37:74">(<argument pos:start="37:32" pos:end="37:41"><expr pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:34">ctx</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">avctx</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:55"><expr pos:start="37:44" pos:end="37:55"><name pos:start="37:44" pos:end="37:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:58" pos:end="37:73"><expr pos:start="37:58" pos:end="37:73"><literal type="string" pos:start="37:58" pos:end="37:73">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="39:25" pos:end="39:51">return <expr pos:start="39:32" pos:end="39:50"><name pos:start="39:32" pos:end="39:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:56"><expr pos:start="43:21" pos:end="43:55"><name pos:start="43:21" pos:end="43:23">val</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:55"><name pos:start="43:27" pos:end="43:46">bytestream2_get_byte</name><argument_list pos:start="43:47" pos:end="43:55">(<argument pos:start="43:48" pos:end="43:54"><expr pos:start="43:48" pos:end="43:54"><operator pos:start="43:48" pos:end="43:48">&amp;</operator><name pos:start="43:49" pos:end="43:54"><name pos:start="43:49" pos:end="43:51">ctx</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="45:21" pos:end="47:75">for <control pos:start="45:25" pos:end="45:44">(<init pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:30"><name pos:start="45:26" pos:end="45:26">i</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>;</init> <condition pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:38"><name pos:start="45:33" pos:end="45:33">i</name> <operator pos:start="45:35" pos:end="45:35">&lt;</operator> <literal type="number" pos:start="45:37" pos:end="45:38">64</literal></expr>;</condition> <incr pos:start="45:41" pos:end="45:43"><expr pos:start="45:41" pos:end="45:43"><name pos:start="45:41" pos:end="45:41">i</name><operator pos:start="45:42" pos:end="45:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:25" pos:end="47:75"><block_content pos:start="47:25" pos:end="47:75">

                        <expr_stmt pos:start="47:25" pos:end="47:75"><expr pos:start="47:25" pos:end="47:74"><call pos:start="47:25" pos:end="47:68"><name pos:start="47:25" pos:end="47:27">BLK</name><argument_list pos:start="47:28" pos:end="47:68">(<argument pos:start="47:29" pos:end="47:36"><expr pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:31">ctx</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:36">cur</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:52"><expr pos:start="47:39" pos:end="47:52"><name pos:start="47:39" pos:end="47:40">bx</name> <operator pos:start="47:42" pos:end="47:42">+</operator> <operator pos:start="47:44" pos:end="47:44">(</operator><name pos:start="47:45" pos:end="47:45">i</name> <operator pos:start="47:47" pos:end="47:47">&amp;</operator> <literal type="number" pos:start="47:49" pos:end="47:51">0x7</literal><operator pos:start="47:52" pos:end="47:52">)</operator></expr></argument>, <argument pos:start="47:55" pos:end="47:67"><expr pos:start="47:55" pos:end="47:67"><name pos:start="47:55" pos:end="47:56">by</name> <operator pos:start="47:58" pos:end="47:58">+</operator> <operator pos:start="47:60" pos:end="47:60">(</operator><name pos:start="47:61" pos:end="47:61">i</name> <operator pos:start="47:63" pos:end="47:64">&gt;&gt;</operator> <literal type="number" pos:start="47:66" pos:end="47:66">3</literal><operator pos:start="47:67" pos:end="47:67">)</operator></expr></argument>)</argument_list></call> <operator pos:start="47:70" pos:end="47:70">=</operator> <name pos:start="47:72" pos:end="47:74">val</name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="49:19" pos:end="57:17">else <block pos:start="49:24" pos:end="57:17">{<block_content pos:start="51:21" pos:end="55:74">        <comment type="line" pos:start="49:33" pos:end="49:65">// copy block from previous frame</comment>

                    <for pos:start="51:21" pos:end="55:74">for <control pos:start="51:25" pos:end="51:44">(<init pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">i</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>;</init> <condition pos:start="51:33" pos:end="51:39"><expr pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:33">i</name> <operator pos:start="51:35" pos:end="51:35">&lt;</operator> <literal type="number" pos:start="51:37" pos:end="51:38">64</literal></expr>;</condition> <incr pos:start="51:41" pos:end="51:43"><expr pos:start="51:41" pos:end="51:43"><name pos:start="51:41" pos:end="51:41">i</name><operator pos:start="51:42" pos:end="51:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:25" pos:end="55:74"><block_content pos:start="53:25" pos:end="55:74">

                        <expr_stmt pos:start="53:25" pos:end="55:74"><expr pos:start="53:25" pos:end="55:73"><call pos:start="53:25" pos:end="53:68"><name pos:start="53:25" pos:end="53:27">BLK</name><argument_list pos:start="53:28" pos:end="53:68">(<argument pos:start="53:29" pos:end="53:36"><expr pos:start="53:29" pos:end="53:36"><name pos:start="53:29" pos:end="53:36"><name pos:start="53:29" pos:end="53:31">ctx</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:36">cur</name></name></expr></argument>, <argument pos:start="53:39" pos:end="53:52"><expr pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:40">bx</name> <operator pos:start="53:42" pos:end="53:42">+</operator> <operator pos:start="53:44" pos:end="53:44">(</operator><name pos:start="53:45" pos:end="53:45">i</name> <operator pos:start="53:47" pos:end="53:47">&amp;</operator> <literal type="number" pos:start="53:49" pos:end="53:51">0x7</literal><operator pos:start="53:52" pos:end="53:52">)</operator></expr></argument>, <argument pos:start="53:55" pos:end="53:67"><expr pos:start="53:55" pos:end="53:67"><name pos:start="53:55" pos:end="53:56">by</name> <operator pos:start="53:58" pos:end="53:58">+</operator> <operator pos:start="53:60" pos:end="53:60">(</operator><name pos:start="53:61" pos:end="53:61">i</name> <operator pos:start="53:63" pos:end="53:64">&gt;&gt;</operator> <literal type="number" pos:start="53:66" pos:end="53:66">3</literal><operator pos:start="53:67" pos:end="53:67">)</operator></expr></argument>)</argument_list></call> <operator pos:start="53:70" pos:end="53:70">=</operator>

                            <call pos:start="55:29" pos:end="55:73"><name pos:start="55:29" pos:end="55:31">BLK</name><argument_list pos:start="55:32" pos:end="55:73">(<argument pos:start="55:33" pos:end="55:41"><expr pos:start="55:33" pos:end="55:41"><name pos:start="55:33" pos:end="55:41"><name pos:start="55:33" pos:end="55:35">ctx</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:41">prev</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:57"><expr pos:start="55:44" pos:end="55:57"><name pos:start="55:44" pos:end="55:45">bx</name> <operator pos:start="55:47" pos:end="55:47">+</operator> <operator pos:start="55:49" pos:end="55:49">(</operator><name pos:start="55:50" pos:end="55:50">i</name> <operator pos:start="55:52" pos:end="55:52">&amp;</operator> <literal type="number" pos:start="55:54" pos:end="55:56">0x7</literal><operator pos:start="55:57" pos:end="55:57">)</operator></expr></argument>, <argument pos:start="55:60" pos:end="55:72"><expr pos:start="55:60" pos:end="55:72"><name pos:start="55:60" pos:end="55:61">by</name> <operator pos:start="55:63" pos:end="55:63">+</operator> <operator pos:start="55:65" pos:end="55:65">(</operator><name pos:start="55:66" pos:end="55:66">i</name> <operator pos:start="55:68" pos:end="55:69">&gt;&gt;</operator> <literal type="number" pos:start="55:71" pos:end="55:71">3</literal><operator pos:start="55:72" pos:end="55:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="189:13">else <block pos:start="59:20" pos:end="189:13">{<block_content pos:start="61:17" pos:end="187:17">            <comment type="line" pos:start="59:33" pos:end="59:60">// handle four 4x4 subblocks</comment>

                <if_stmt pos:start="61:17" pos:end="67:17"><if pos:start="61:17" pos:end="67:17">if <condition pos:start="61:20" pos:end="61:57">(<expr pos:start="61:21" pos:end="61:56"><operator pos:start="61:21" pos:end="61:21">!</operator><call pos:start="61:22" pos:end="61:56"><name pos:start="61:22" pos:end="61:47">bytestream2_get_bytes_left</name><argument_list pos:start="61:48" pos:end="61:56">(<argument pos:start="61:49" pos:end="61:55"><expr pos:start="61:49" pos:end="61:55"><operator pos:start="61:49" pos:end="61:49">&amp;</operator><name pos:start="61:50" pos:end="61:55"><name pos:start="61:50" pos:end="61:52">ctx</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:55">g</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:59" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:47">

                    <expr_stmt pos:start="63:21" pos:end="63:71"><expr pos:start="63:21" pos:end="63:70"><call pos:start="63:21" pos:end="63:70"><name pos:start="63:21" pos:end="63:26">av_log</name><argument_list pos:start="63:27" pos:end="63:70">(<argument pos:start="63:28" pos:end="63:37"><expr pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:30">ctx</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:37">avctx</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:51"><expr pos:start="63:40" pos:end="63:51"><name pos:start="63:40" pos:end="63:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:54" pos:end="63:69"><expr pos:start="63:54" pos:end="63:69"><literal type="string" pos:start="63:54" pos:end="63:69">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="65:21" pos:end="65:47">return <expr pos:start="65:28" pos:end="65:46"><name pos:start="65:28" pos:end="65:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <for pos:start="69:17" pos:end="187:17">for <control pos:start="69:21" pos:end="69:39">(<init pos:start="69:22" pos:end="69:27"><expr pos:start="69:22" pos:end="69:26"><name pos:start="69:22" pos:end="69:22">i</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>;</init> <condition pos:start="69:29" pos:end="69:34"><expr pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:29">i</name> <operator pos:start="69:31" pos:end="69:31">&lt;</operator> <literal type="number" pos:start="69:33" pos:end="69:33">4</literal></expr>;</condition> <incr pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:36">i</name><operator pos:start="69:37" pos:end="69:38">++</operator></expr></incr>)</control> <block pos:start="69:41" pos:end="187:17">{<block_content pos:start="71:21" pos:end="185:21">

                    <expr_stmt pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:23">l0x</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:28">bx</name> <operator pos:start="71:30" pos:end="71:30">+</operator> <operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:33">i</name> <operator pos:start="71:35" pos:end="71:35">&amp;</operator> <literal type="number" pos:start="71:37" pos:end="71:37">1</literal><operator pos:start="71:38" pos:end="71:38">)</operator> <operator pos:start="71:40" pos:end="71:40">*</operator> <literal type="number" pos:start="71:42" pos:end="71:42">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:43"><expr pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:23">l0y</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:28">by</name> <operator pos:start="73:30" pos:end="73:30">+</operator> <operator pos:start="73:32" pos:end="73:32">(</operator><name pos:start="73:33" pos:end="73:33">i</name> <operator pos:start="73:35" pos:end="73:35">&amp;</operator> <literal type="number" pos:start="73:37" pos:end="73:37">2</literal><operator pos:start="73:38" pos:end="73:38">)</operator> <operator pos:start="73:40" pos:end="73:40">*</operator> <literal type="number" pos:start="73:42" pos:end="73:42">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:50"><expr pos:start="75:21" pos:end="75:49"><call pos:start="75:21" pos:end="75:49"><name pos:start="75:21" pos:end="75:31">kmvc_getbit</name><argument_list pos:start="75:32" pos:end="75:49">(<argument pos:start="75:33" pos:end="75:34"><expr pos:start="75:33" pos:end="75:34"><name pos:start="75:33" pos:end="75:34">bb</name></expr></argument>, <argument pos:start="75:37" pos:end="75:43"><expr pos:start="75:37" pos:end="75:43"><operator pos:start="75:37" pos:end="75:37">&amp;</operator><name pos:start="75:38" pos:end="75:43"><name pos:start="75:38" pos:end="75:40">ctx</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:43">g</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="77:21" pos:end="185:21"><if pos:start="77:21" pos:end="113:21">if <condition pos:start="77:24" pos:end="77:29">(<expr pos:start="77:25" pos:end="77:28"><operator pos:start="77:25" pos:end="77:25">!</operator><name pos:start="77:26" pos:end="77:28">res</name></expr>)</condition> <block pos:start="77:31" pos:end="113:21">{<block_content pos:start="79:25" pos:end="111:25">

                        <expr_stmt pos:start="79:25" pos:end="79:54"><expr pos:start="79:25" pos:end="79:53"><call pos:start="79:25" pos:end="79:53"><name pos:start="79:25" pos:end="79:35">kmvc_getbit</name><argument_list pos:start="79:36" pos:end="79:53">(<argument pos:start="79:37" pos:end="79:38"><expr pos:start="79:37" pos:end="79:38"><name pos:start="79:37" pos:end="79:38">bb</name></expr></argument>, <argument pos:start="79:41" pos:end="79:47"><expr pos:start="79:41" pos:end="79:47"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:47"><name pos:start="79:42" pos:end="79:44">ctx</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:47">g</name></name></expr></argument>, <argument pos:start="79:50" pos:end="79:52"><expr pos:start="79:50" pos:end="79:52"><name pos:start="79:50" pos:end="79:52">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="81:25" pos:end="111:25"><if pos:start="81:25" pos:end="89:25">if <condition pos:start="81:28" pos:end="81:33">(<expr pos:start="81:29" pos:end="81:32"><operator pos:start="81:29" pos:end="81:29">!</operator><name pos:start="81:30" pos:end="81:32">res</name></expr>)</condition> <block pos:start="81:35" pos:end="89:25">{<block_content pos:start="83:29" pos:end="87:83">     <comment type="line" pos:start="81:41" pos:end="81:63">// fill whole 4x4 block</comment>

                            <expr_stmt pos:start="83:29" pos:end="83:64"><expr pos:start="83:29" pos:end="83:63"><name pos:start="83:29" pos:end="83:31">val</name> <operator pos:start="83:33" pos:end="83:33">=</operator> <call pos:start="83:35" pos:end="83:63"><name pos:start="83:35" pos:end="83:54">bytestream2_get_byte</name><argument_list pos:start="83:55" pos:end="83:63">(<argument pos:start="83:56" pos:end="83:62"><expr pos:start="83:56" pos:end="83:62"><operator pos:start="83:56" pos:end="83:56">&amp;</operator><name pos:start="83:57" pos:end="83:62"><name pos:start="83:57" pos:end="83:59">ctx</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:62">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <for pos:start="85:29" pos:end="87:83">for <control pos:start="85:33" pos:end="85:52">(<init pos:start="85:34" pos:end="85:39"><expr pos:start="85:34" pos:end="85:38"><name pos:start="85:34" pos:end="85:34">j</name> <operator pos:start="85:36" pos:end="85:36">=</operator> <literal type="number" pos:start="85:38" pos:end="85:38">0</literal></expr>;</init> <condition pos:start="85:41" pos:end="85:47"><expr pos:start="85:41" pos:end="85:46"><name pos:start="85:41" pos:end="85:41">j</name> <operator pos:start="85:43" pos:end="85:43">&lt;</operator> <literal type="number" pos:start="85:45" pos:end="85:46">16</literal></expr>;</condition> <incr pos:start="85:49" pos:end="85:51"><expr pos:start="85:49" pos:end="85:51"><name pos:start="85:49" pos:end="85:49">j</name><operator pos:start="85:50" pos:end="85:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:33" pos:end="87:83"><block_content pos:start="87:33" pos:end="87:83">

                                <expr_stmt pos:start="87:33" pos:end="87:83"><expr pos:start="87:33" pos:end="87:82"><call pos:start="87:33" pos:end="87:76"><name pos:start="87:33" pos:end="87:35">BLK</name><argument_list pos:start="87:36" pos:end="87:76">(<argument pos:start="87:37" pos:end="87:44"><expr pos:start="87:37" pos:end="87:44"><name pos:start="87:37" pos:end="87:44"><name pos:start="87:37" pos:end="87:39">ctx</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:44">cur</name></name></expr></argument>, <argument pos:start="87:47" pos:end="87:59"><expr pos:start="87:47" pos:end="87:59"><name pos:start="87:47" pos:end="87:49">l0x</name> <operator pos:start="87:51" pos:end="87:51">+</operator> <operator pos:start="87:53" pos:end="87:53">(</operator><name pos:start="87:54" pos:end="87:54">j</name> <operator pos:start="87:56" pos:end="87:56">&amp;</operator> <literal type="number" pos:start="87:58" pos:end="87:58">3</literal><operator pos:start="87:59" pos:end="87:59">)</operator></expr></argument>, <argument pos:start="87:62" pos:end="87:75"><expr pos:start="87:62" pos:end="87:75"><name pos:start="87:62" pos:end="87:64">l0y</name> <operator pos:start="87:66" pos:end="87:66">+</operator> <operator pos:start="87:68" pos:end="87:68">(</operator><name pos:start="87:69" pos:end="87:69">j</name> <operator pos:start="87:71" pos:end="87:72">&gt;&gt;</operator> <literal type="number" pos:start="87:74" pos:end="87:74">2</literal><operator pos:start="87:75" pos:end="87:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="87:78" pos:end="87:78">=</operator> <name pos:start="87:80" pos:end="87:82">val</name></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="89:27" pos:end="111:25">else <block pos:start="89:32" pos:end="111:25">{<block_content pos:start="91:29" pos:end="109:92">        <comment type="line" pos:start="89:41" pos:end="89:53">// copy block</comment>

                            <expr_stmt pos:start="91:29" pos:end="91:64"><expr pos:start="91:29" pos:end="91:63"><name pos:start="91:29" pos:end="91:31">val</name> <operator pos:start="91:33" pos:end="91:33">=</operator> <call pos:start="91:35" pos:end="91:63"><name pos:start="91:35" pos:end="91:54">bytestream2_get_byte</name><argument_list pos:start="91:55" pos:end="91:63">(<argument pos:start="91:56" pos:end="91:62"><expr pos:start="91:56" pos:end="91:62"><operator pos:start="91:56" pos:end="91:56">&amp;</operator><name pos:start="91:57" pos:end="91:62"><name pos:start="91:57" pos:end="91:59">ctx</name><operator pos:start="91:60" pos:end="91:61">-&gt;</operator><name pos:start="91:62" pos:end="91:62">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="93:29" pos:end="93:49"><expr pos:start="93:29" pos:end="93:48"><name pos:start="93:29" pos:end="93:30">mx</name> <operator pos:start="93:32" pos:end="93:32">=</operator> <operator pos:start="93:34" pos:end="93:34">(</operator><name pos:start="93:35" pos:end="93:37">val</name> <operator pos:start="93:39" pos:end="93:39">&amp;</operator> <literal type="number" pos:start="93:41" pos:end="93:43">0xF</literal><operator pos:start="93:44" pos:end="93:44">)</operator> <operator pos:start="93:46" pos:end="93:46">-</operator> <literal type="number" pos:start="93:48" pos:end="93:48">8</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="95:29" pos:end="95:48"><expr pos:start="95:29" pos:end="95:47"><name pos:start="95:29" pos:end="95:30">my</name> <operator pos:start="95:32" pos:end="95:32">=</operator> <operator pos:start="95:34" pos:end="95:34">(</operator><name pos:start="95:35" pos:end="95:37">val</name> <operator pos:start="95:39" pos:end="95:40">&gt;&gt;</operator> <literal type="number" pos:start="95:42" pos:end="95:42">4</literal><operator pos:start="95:43" pos:end="95:43">)</operator> <operator pos:start="95:45" pos:end="95:45">-</operator> <literal type="number" pos:start="95:47" pos:end="95:47">8</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="97:29" pos:end="103:29"><if pos:start="97:29" pos:end="103:29">if <condition pos:start="97:32" pos:end="97:97">(<expr pos:start="97:33" pos:end="97:96"><operator pos:start="97:33" pos:end="97:33">(</operator><name pos:start="97:34" pos:end="97:36">l0x</name><operator pos:start="97:37" pos:end="97:37">+</operator><name pos:start="97:38" pos:end="97:39">mx</name><operator pos:start="97:40" pos:end="97:40">)</operator> <operator pos:start="97:42" pos:end="97:42">+</operator> <literal type="number" pos:start="97:44" pos:end="97:46">320</literal><operator pos:start="97:47" pos:end="97:47">*</operator><operator pos:start="97:48" pos:end="97:48">(</operator><name pos:start="97:49" pos:end="97:51">l0y</name><operator pos:start="97:52" pos:end="97:52">+</operator><name pos:start="97:53" pos:end="97:54">my</name><operator pos:start="97:55" pos:end="97:55">)</operator> <operator pos:start="97:57" pos:end="97:57">&lt;</operator> <literal type="number" pos:start="97:59" pos:end="97:59">0</literal> <operator pos:start="97:61" pos:end="97:62">||</operator> <operator pos:start="97:64" pos:end="97:64">(</operator><name pos:start="97:65" pos:end="97:67">l0x</name><operator pos:start="97:68" pos:end="97:68">+</operator><name pos:start="97:69" pos:end="97:70">mx</name><operator pos:start="97:71" pos:end="97:71">)</operator> <operator pos:start="97:73" pos:end="97:73">+</operator> <literal type="number" pos:start="97:75" pos:end="97:77">320</literal><operator pos:start="97:78" pos:end="97:78">*</operator><operator pos:start="97:79" pos:end="97:79">(</operator><name pos:start="97:80" pos:end="97:82">l0y</name><operator pos:start="97:83" pos:end="97:83">+</operator><name pos:start="97:84" pos:end="97:85">my</name><operator pos:start="97:86" pos:end="97:86">)</operator> <operator pos:start="97:88" pos:end="97:88">&gt;</operator> <literal type="number" pos:start="97:90" pos:end="97:92">318</literal><operator pos:start="97:93" pos:end="97:93">*</operator><literal type="number" pos:start="97:94" pos:end="97:96">198</literal></expr>)</condition> <block pos:start="97:99" pos:end="103:29">{<block_content pos:start="99:33" pos:end="101:59">

                                <expr_stmt pos:start="99:33" pos:end="99:81"><expr pos:start="99:33" pos:end="99:80"><call pos:start="99:33" pos:end="99:80"><name pos:start="99:33" pos:end="99:38">av_log</name><argument_list pos:start="99:39" pos:end="99:80">(<argument pos:start="99:40" pos:end="99:49"><expr pos:start="99:40" pos:end="99:49"><name pos:start="99:40" pos:end="99:49"><name pos:start="99:40" pos:end="99:42">ctx</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:49">avctx</name></name></expr></argument>, <argument pos:start="99:52" pos:end="99:63"><expr pos:start="99:52" pos:end="99:63"><name pos:start="99:52" pos:end="99:63">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:66" pos:end="99:79"><expr pos:start="99:66" pos:end="99:79"><literal type="string" pos:start="99:66" pos:end="99:79">"Invalid MV\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="101:33" pos:end="101:59">return <expr pos:start="101:40" pos:end="101:58"><name pos:start="101:40" pos:end="101:58">AVERROR_INVALIDDATA</name></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <for pos:start="105:29" pos:end="109:92">for <control pos:start="105:33" pos:end="105:52">(<init pos:start="105:34" pos:end="105:39"><expr pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:34">j</name> <operator pos:start="105:36" pos:end="105:36">=</operator> <literal type="number" pos:start="105:38" pos:end="105:38">0</literal></expr>;</init> <condition pos:start="105:41" pos:end="105:47"><expr pos:start="105:41" pos:end="105:46"><name pos:start="105:41" pos:end="105:41">j</name> <operator pos:start="105:43" pos:end="105:43">&lt;</operator> <literal type="number" pos:start="105:45" pos:end="105:46">16</literal></expr>;</condition> <incr pos:start="105:49" pos:end="105:51"><expr pos:start="105:49" pos:end="105:51"><name pos:start="105:49" pos:end="105:49">j</name><operator pos:start="105:50" pos:end="105:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:33" pos:end="109:92"><block_content pos:start="107:33" pos:end="109:92">

                                <expr_stmt pos:start="107:33" pos:end="109:92"><expr pos:start="107:33" pos:end="109:91"><call pos:start="107:33" pos:end="107:76"><name pos:start="107:33" pos:end="107:35">BLK</name><argument_list pos:start="107:36" pos:end="107:76">(<argument pos:start="107:37" pos:end="107:44"><expr pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:39">ctx</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:44">cur</name></name></expr></argument>, <argument pos:start="107:47" pos:end="107:59"><expr pos:start="107:47" pos:end="107:59"><name pos:start="107:47" pos:end="107:49">l0x</name> <operator pos:start="107:51" pos:end="107:51">+</operator> <operator pos:start="107:53" pos:end="107:53">(</operator><name pos:start="107:54" pos:end="107:54">j</name> <operator pos:start="107:56" pos:end="107:56">&amp;</operator> <literal type="number" pos:start="107:58" pos:end="107:58">3</literal><operator pos:start="107:59" pos:end="107:59">)</operator></expr></argument>, <argument pos:start="107:62" pos:end="107:75"><expr pos:start="107:62" pos:end="107:75"><name pos:start="107:62" pos:end="107:64">l0y</name> <operator pos:start="107:66" pos:end="107:66">+</operator> <operator pos:start="107:68" pos:end="107:68">(</operator><name pos:start="107:69" pos:end="107:69">j</name> <operator pos:start="107:71" pos:end="107:72">&gt;&gt;</operator> <literal type="number" pos:start="107:74" pos:end="107:74">2</literal><operator pos:start="107:75" pos:end="107:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="107:78" pos:end="107:78">=</operator>

                                    <call pos:start="109:37" pos:end="109:91"><name pos:start="109:37" pos:end="109:39">BLK</name><argument_list pos:start="109:40" pos:end="109:91">(<argument pos:start="109:41" pos:end="109:49"><expr pos:start="109:41" pos:end="109:49"><name pos:start="109:41" pos:end="109:49"><name pos:start="109:41" pos:end="109:43">ctx</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:49">prev</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:69"><expr pos:start="109:52" pos:end="109:69"><name pos:start="109:52" pos:end="109:54">l0x</name> <operator pos:start="109:56" pos:end="109:56">+</operator> <operator pos:start="109:58" pos:end="109:58">(</operator><name pos:start="109:59" pos:end="109:59">j</name> <operator pos:start="109:61" pos:end="109:61">&amp;</operator> <literal type="number" pos:start="109:63" pos:end="109:63">3</literal><operator pos:start="109:64" pos:end="109:64">)</operator> <operator pos:start="109:66" pos:end="109:66">+</operator> <name pos:start="109:68" pos:end="109:69">mx</name></expr></argument>, <argument pos:start="109:72" pos:end="109:90"><expr pos:start="109:72" pos:end="109:90"><name pos:start="109:72" pos:end="109:74">l0y</name> <operator pos:start="109:76" pos:end="109:76">+</operator> <operator pos:start="109:78" pos:end="109:78">(</operator><name pos:start="109:79" pos:end="109:79">j</name> <operator pos:start="109:81" pos:end="109:82">&gt;&gt;</operator> <literal type="number" pos:start="109:84" pos:end="109:84">2</literal><operator pos:start="109:85" pos:end="109:85">)</operator> <operator pos:start="109:87" pos:end="109:87">+</operator> <name pos:start="109:89" pos:end="109:90">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="113:23" pos:end="185:21">else <block pos:start="113:28" pos:end="185:21">{<block_content pos:start="115:25" pos:end="183:25">    <comment type="line" pos:start="113:33" pos:end="113:64">// descend to 2x2 sub-sub-blocks</comment>

                        <for pos:start="115:25" pos:end="183:25">for <control pos:start="115:29" pos:end="115:47">(<init pos:start="115:30" pos:end="115:35"><expr pos:start="115:30" pos:end="115:34"><name pos:start="115:30" pos:end="115:30">j</name> <operator pos:start="115:32" pos:end="115:32">=</operator> <literal type="number" pos:start="115:34" pos:end="115:34">0</literal></expr>;</init> <condition pos:start="115:37" pos:end="115:42"><expr pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:37">j</name> <operator pos:start="115:39" pos:end="115:39">&lt;</operator> <literal type="number" pos:start="115:41" pos:end="115:41">4</literal></expr>;</condition> <incr pos:start="115:44" pos:end="115:46"><expr pos:start="115:44" pos:end="115:46"><name pos:start="115:44" pos:end="115:44">j</name><operator pos:start="115:45" pos:end="115:46">++</operator></expr></incr>)</control> <block pos:start="115:49" pos:end="183:25">{<block_content pos:start="117:29" pos:end="181:29">

                            <expr_stmt pos:start="117:29" pos:end="117:52"><expr pos:start="117:29" pos:end="117:51"><name pos:start="117:29" pos:end="117:31">l1x</name> <operator pos:start="117:33" pos:end="117:33">=</operator> <name pos:start="117:35" pos:end="117:37">l0x</name> <operator pos:start="117:39" pos:end="117:39">+</operator> <operator pos:start="117:41" pos:end="117:41">(</operator><name pos:start="117:42" pos:end="117:42">j</name> <operator pos:start="117:44" pos:end="117:44">&amp;</operator> <literal type="number" pos:start="117:46" pos:end="117:46">1</literal><operator pos:start="117:47" pos:end="117:47">)</operator> <operator pos:start="117:49" pos:end="117:49">*</operator> <literal type="number" pos:start="117:51" pos:end="117:51">2</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="119:29" pos:end="119:48"><expr pos:start="119:29" pos:end="119:47"><name pos:start="119:29" pos:end="119:31">l1y</name> <operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:37">l0y</name> <operator pos:start="119:39" pos:end="119:39">+</operator> <operator pos:start="119:41" pos:end="119:41">(</operator><name pos:start="119:42" pos:end="119:42">j</name> <operator pos:start="119:44" pos:end="119:44">&amp;</operator> <literal type="number" pos:start="119:46" pos:end="119:46">2</literal><operator pos:start="119:47" pos:end="119:47">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="121:29" pos:end="121:58"><expr pos:start="121:29" pos:end="121:57"><call pos:start="121:29" pos:end="121:57"><name pos:start="121:29" pos:end="121:39">kmvc_getbit</name><argument_list pos:start="121:40" pos:end="121:57">(<argument pos:start="121:41" pos:end="121:42"><expr pos:start="121:41" pos:end="121:42"><name pos:start="121:41" pos:end="121:42">bb</name></expr></argument>, <argument pos:start="121:45" pos:end="121:51"><expr pos:start="121:45" pos:end="121:51"><operator pos:start="121:45" pos:end="121:45">&amp;</operator><name pos:start="121:46" pos:end="121:51"><name pos:start="121:46" pos:end="121:48">ctx</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:51">g</name></name></expr></argument>, <argument pos:start="121:54" pos:end="121:56"><expr pos:start="121:54" pos:end="121:56"><name pos:start="121:54" pos:end="121:56">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="123:29" pos:end="181:29"><if pos:start="123:29" pos:end="171:29">if <condition pos:start="123:32" pos:end="123:37">(<expr pos:start="123:33" pos:end="123:36"><operator pos:start="123:33" pos:end="123:33">!</operator><name pos:start="123:34" pos:end="123:36">res</name></expr>)</condition> <block pos:start="123:39" pos:end="171:29">{<block_content pos:start="125:33" pos:end="169:33">

                                <expr_stmt pos:start="125:33" pos:end="125:62"><expr pos:start="125:33" pos:end="125:61"><call pos:start="125:33" pos:end="125:61"><name pos:start="125:33" pos:end="125:43">kmvc_getbit</name><argument_list pos:start="125:44" pos:end="125:61">(<argument pos:start="125:45" pos:end="125:46"><expr pos:start="125:45" pos:end="125:46"><name pos:start="125:45" pos:end="125:46">bb</name></expr></argument>, <argument pos:start="125:49" pos:end="125:55"><expr pos:start="125:49" pos:end="125:55"><operator pos:start="125:49" pos:end="125:49">&amp;</operator><name pos:start="125:50" pos:end="125:55"><name pos:start="125:50" pos:end="125:52">ctx</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:55">g</name></name></expr></argument>, <argument pos:start="125:58" pos:end="125:60"><expr pos:start="125:58" pos:end="125:60"><name pos:start="125:58" pos:end="125:60">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="127:33" pos:end="169:33"><if pos:start="127:33" pos:end="139:33">if <condition pos:start="127:36" pos:end="127:41">(<expr pos:start="127:37" pos:end="127:40"><operator pos:start="127:37" pos:end="127:37">!</operator><name pos:start="127:38" pos:end="127:40">res</name></expr>)</condition> <block pos:start="127:43" pos:end="139:33">{<block_content pos:start="129:37" pos:end="137:74">     <comment type="line" pos:start="127:49" pos:end="127:71">// fill whole 2x2 block</comment>

                                    <expr_stmt pos:start="129:37" pos:end="129:72"><expr pos:start="129:37" pos:end="129:71"><name pos:start="129:37" pos:end="129:39">val</name> <operator pos:start="129:41" pos:end="129:41">=</operator> <call pos:start="129:43" pos:end="129:71"><name pos:start="129:43" pos:end="129:62">bytestream2_get_byte</name><argument_list pos:start="129:63" pos:end="129:71">(<argument pos:start="129:64" pos:end="129:70"><expr pos:start="129:64" pos:end="129:70"><operator pos:start="129:64" pos:end="129:64">&amp;</operator><name pos:start="129:65" pos:end="129:70"><name pos:start="129:65" pos:end="129:67">ctx</name><operator pos:start="129:68" pos:end="129:69">-&gt;</operator><name pos:start="129:70" pos:end="129:70">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="131:37" pos:end="131:66"><expr pos:start="131:37" pos:end="131:65"><call pos:start="131:37" pos:end="131:59"><name pos:start="131:37" pos:end="131:39">BLK</name><argument_list pos:start="131:40" pos:end="131:59">(<argument pos:start="131:41" pos:end="131:48"><expr pos:start="131:41" pos:end="131:48"><name pos:start="131:41" pos:end="131:48"><name pos:start="131:41" pos:end="131:43">ctx</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:48">cur</name></name></expr></argument>, <argument pos:start="131:51" pos:end="131:53"><expr pos:start="131:51" pos:end="131:53"><name pos:start="131:51" pos:end="131:53">l1x</name></expr></argument>, <argument pos:start="131:56" pos:end="131:58"><expr pos:start="131:56" pos:end="131:58"><name pos:start="131:56" pos:end="131:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="131:61" pos:end="131:61">=</operator> <name pos:start="131:63" pos:end="131:65">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="133:37" pos:end="133:70"><expr pos:start="133:37" pos:end="133:69"><call pos:start="133:37" pos:end="133:63"><name pos:start="133:37" pos:end="133:39">BLK</name><argument_list pos:start="133:40" pos:end="133:63">(<argument pos:start="133:41" pos:end="133:48"><expr pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:43">ctx</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:48">cur</name></name></expr></argument>, <argument pos:start="133:51" pos:end="133:57"><expr pos:start="133:51" pos:end="133:57"><name pos:start="133:51" pos:end="133:53">l1x</name> <operator pos:start="133:55" pos:end="133:55">+</operator> <literal type="number" pos:start="133:57" pos:end="133:57">1</literal></expr></argument>, <argument pos:start="133:60" pos:end="133:62"><expr pos:start="133:60" pos:end="133:62"><name pos:start="133:60" pos:end="133:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="133:65" pos:end="133:65">=</operator> <name pos:start="133:67" pos:end="133:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="135:37" pos:end="135:70"><expr pos:start="135:37" pos:end="135:69"><call pos:start="135:37" pos:end="135:63"><name pos:start="135:37" pos:end="135:39">BLK</name><argument_list pos:start="135:40" pos:end="135:63">(<argument pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:48"><name pos:start="135:41" pos:end="135:48"><name pos:start="135:41" pos:end="135:43">ctx</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:48">cur</name></name></expr></argument>, <argument pos:start="135:51" pos:end="135:53"><expr pos:start="135:51" pos:end="135:53"><name pos:start="135:51" pos:end="135:53">l1x</name></expr></argument>, <argument pos:start="135:56" pos:end="135:62"><expr pos:start="135:56" pos:end="135:62"><name pos:start="135:56" pos:end="135:58">l1y</name> <operator pos:start="135:60" pos:end="135:60">+</operator> <literal type="number" pos:start="135:62" pos:end="135:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="135:65" pos:end="135:65">=</operator> <name pos:start="135:67" pos:end="135:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="137:37" pos:end="137:74"><expr pos:start="137:37" pos:end="137:73"><call pos:start="137:37" pos:end="137:67"><name pos:start="137:37" pos:end="137:39">BLK</name><argument_list pos:start="137:40" pos:end="137:67">(<argument pos:start="137:41" pos:end="137:48"><expr pos:start="137:41" pos:end="137:48"><name pos:start="137:41" pos:end="137:48"><name pos:start="137:41" pos:end="137:43">ctx</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:48">cur</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:57"><expr pos:start="137:51" pos:end="137:57"><name pos:start="137:51" pos:end="137:53">l1x</name> <operator pos:start="137:55" pos:end="137:55">+</operator> <literal type="number" pos:start="137:57" pos:end="137:57">1</literal></expr></argument>, <argument pos:start="137:60" pos:end="137:66"><expr pos:start="137:60" pos:end="137:66"><name pos:start="137:60" pos:end="137:62">l1y</name> <operator pos:start="137:64" pos:end="137:64">+</operator> <literal type="number" pos:start="137:66" pos:end="137:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="137:69" pos:end="137:69">=</operator> <name pos:start="137:71" pos:end="137:73">val</name></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="139:35" pos:end="169:33">else <block pos:start="139:40" pos:end="169:33">{<block_content pos:start="141:37" pos:end="167:83">        <comment type="line" pos:start="139:49" pos:end="139:61">// copy block</comment>

                                    <expr_stmt pos:start="141:37" pos:end="141:72"><expr pos:start="141:37" pos:end="141:71"><name pos:start="141:37" pos:end="141:39">val</name> <operator pos:start="141:41" pos:end="141:41">=</operator> <call pos:start="141:43" pos:end="141:71"><name pos:start="141:43" pos:end="141:62">bytestream2_get_byte</name><argument_list pos:start="141:63" pos:end="141:71">(<argument pos:start="141:64" pos:end="141:70"><expr pos:start="141:64" pos:end="141:70"><operator pos:start="141:64" pos:end="141:64">&amp;</operator><name pos:start="141:65" pos:end="141:70"><name pos:start="141:65" pos:end="141:67">ctx</name><operator pos:start="141:68" pos:end="141:69">-&gt;</operator><name pos:start="141:70" pos:end="141:70">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="143:37" pos:end="143:57"><expr pos:start="143:37" pos:end="143:56"><name pos:start="143:37" pos:end="143:38">mx</name> <operator pos:start="143:40" pos:end="143:40">=</operator> <operator pos:start="143:42" pos:end="143:42">(</operator><name pos:start="143:43" pos:end="143:45">val</name> <operator pos:start="143:47" pos:end="143:47">&amp;</operator> <literal type="number" pos:start="143:49" pos:end="143:51">0xF</literal><operator pos:start="143:52" pos:end="143:52">)</operator> <operator pos:start="143:54" pos:end="143:54">-</operator> <literal type="number" pos:start="143:56" pos:end="143:56">8</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="145:37" pos:end="145:56"><expr pos:start="145:37" pos:end="145:55"><name pos:start="145:37" pos:end="145:38">my</name> <operator pos:start="145:40" pos:end="145:40">=</operator> <operator pos:start="145:42" pos:end="145:42">(</operator><name pos:start="145:43" pos:end="145:45">val</name> <operator pos:start="145:47" pos:end="145:48">&gt;&gt;</operator> <literal type="number" pos:start="145:50" pos:end="145:50">4</literal><operator pos:start="145:51" pos:end="145:51">)</operator> <operator pos:start="145:53" pos:end="145:53">-</operator> <literal type="number" pos:start="145:55" pos:end="145:55">8</literal></expr>;</expr_stmt>

                                    <if_stmt pos:start="147:37" pos:end="153:37"><if pos:start="147:37" pos:end="153:37">if <condition pos:start="147:40" pos:end="147:105">(<expr pos:start="147:41" pos:end="147:104"><operator pos:start="147:41" pos:end="147:41">(</operator><name pos:start="147:42" pos:end="147:44">l1x</name><operator pos:start="147:45" pos:end="147:45">+</operator><name pos:start="147:46" pos:end="147:47">mx</name><operator pos:start="147:48" pos:end="147:48">)</operator> <operator pos:start="147:50" pos:end="147:50">+</operator> <literal type="number" pos:start="147:52" pos:end="147:54">320</literal><operator pos:start="147:55" pos:end="147:55">*</operator><operator pos:start="147:56" pos:end="147:56">(</operator><name pos:start="147:57" pos:end="147:59">l1y</name><operator pos:start="147:60" pos:end="147:60">+</operator><name pos:start="147:61" pos:end="147:62">my</name><operator pos:start="147:63" pos:end="147:63">)</operator> <operator pos:start="147:65" pos:end="147:65">&lt;</operator> <literal type="number" pos:start="147:67" pos:end="147:67">0</literal> <operator pos:start="147:69" pos:end="147:70">||</operator> <operator pos:start="147:72" pos:end="147:72">(</operator><name pos:start="147:73" pos:end="147:75">l1x</name><operator pos:start="147:76" pos:end="147:76">+</operator><name pos:start="147:77" pos:end="147:78">mx</name><operator pos:start="147:79" pos:end="147:79">)</operator> <operator pos:start="147:81" pos:end="147:81">+</operator> <literal type="number" pos:start="147:83" pos:end="147:85">320</literal><operator pos:start="147:86" pos:end="147:86">*</operator><operator pos:start="147:87" pos:end="147:87">(</operator><name pos:start="147:88" pos:end="147:90">l1y</name><operator pos:start="147:91" pos:end="147:91">+</operator><name pos:start="147:92" pos:end="147:93">my</name><operator pos:start="147:94" pos:end="147:94">)</operator> <operator pos:start="147:96" pos:end="147:96">&gt;</operator> <literal type="number" pos:start="147:98" pos:end="147:100">318</literal><operator pos:start="147:101" pos:end="147:101">*</operator><literal type="number" pos:start="147:102" pos:end="147:104">198</literal></expr>)</condition> <block pos:start="147:107" pos:end="153:37">{<block_content pos:start="149:41" pos:end="151:67">

                                        <expr_stmt pos:start="149:41" pos:end="149:89"><expr pos:start="149:41" pos:end="149:88"><call pos:start="149:41" pos:end="149:88"><name pos:start="149:41" pos:end="149:46">av_log</name><argument_list pos:start="149:47" pos:end="149:88">(<argument pos:start="149:48" pos:end="149:57"><expr pos:start="149:48" pos:end="149:57"><name pos:start="149:48" pos:end="149:57"><name pos:start="149:48" pos:end="149:50">ctx</name><operator pos:start="149:51" pos:end="149:52">-&gt;</operator><name pos:start="149:53" pos:end="149:57">avctx</name></name></expr></argument>, <argument pos:start="149:60" pos:end="149:71"><expr pos:start="149:60" pos:end="149:71"><name pos:start="149:60" pos:end="149:71">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:74" pos:end="149:87"><expr pos:start="149:74" pos:end="149:87"><literal type="string" pos:start="149:74" pos:end="149:87">"Invalid MV\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                        <return pos:start="151:41" pos:end="151:67">return <expr pos:start="151:48" pos:end="151:66"><name pos:start="151:48" pos:end="151:66">AVERROR_INVALIDDATA</name></expr>;</return>

                                    </block_content>}</block></if></if_stmt>

                                    <expr_stmt pos:start="155:37" pos:end="155:97"><expr pos:start="155:37" pos:end="155:96"><call pos:start="155:37" pos:end="155:59"><name pos:start="155:37" pos:end="155:39">BLK</name><argument_list pos:start="155:40" pos:end="155:59">(<argument pos:start="155:41" pos:end="155:48"><expr pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:43">ctx</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:48">cur</name></name></expr></argument>, <argument pos:start="155:51" pos:end="155:53"><expr pos:start="155:51" pos:end="155:53"><name pos:start="155:51" pos:end="155:53">l1x</name></expr></argument>, <argument pos:start="155:56" pos:end="155:58"><expr pos:start="155:56" pos:end="155:58"><name pos:start="155:56" pos:end="155:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="155:61" pos:end="155:61">=</operator> <call pos:start="155:63" pos:end="155:96"><name pos:start="155:63" pos:end="155:65">BLK</name><argument_list pos:start="155:66" pos:end="155:96">(<argument pos:start="155:67" pos:end="155:75"><expr pos:start="155:67" pos:end="155:75"><name pos:start="155:67" pos:end="155:75"><name pos:start="155:67" pos:end="155:69">ctx</name><operator pos:start="155:70" pos:end="155:71">-&gt;</operator><name pos:start="155:72" pos:end="155:75">prev</name></name></expr></argument>, <argument pos:start="155:78" pos:end="155:85"><expr pos:start="155:78" pos:end="155:85"><name pos:start="155:78" pos:end="155:80">l1x</name> <operator pos:start="155:82" pos:end="155:82">+</operator> <name pos:start="155:84" pos:end="155:85">mx</name></expr></argument>, <argument pos:start="155:88" pos:end="155:95"><expr pos:start="155:88" pos:end="155:95"><name pos:start="155:88" pos:end="155:90">l1y</name> <operator pos:start="155:92" pos:end="155:92">+</operator> <name pos:start="155:94" pos:end="155:95">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="157:37" pos:end="159:79"><expr pos:start="157:37" pos:end="159:78"><call pos:start="157:37" pos:end="157:63"><name pos:start="157:37" pos:end="157:39">BLK</name><argument_list pos:start="157:40" pos:end="157:63">(<argument pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:43">ctx</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:48">cur</name></name></expr></argument>, <argument pos:start="157:51" pos:end="157:57"><expr pos:start="157:51" pos:end="157:57"><name pos:start="157:51" pos:end="157:53">l1x</name> <operator pos:start="157:55" pos:end="157:55">+</operator> <literal type="number" pos:start="157:57" pos:end="157:57">1</literal></expr></argument>, <argument pos:start="157:60" pos:end="157:62"><expr pos:start="157:60" pos:end="157:62"><name pos:start="157:60" pos:end="157:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="157:65" pos:end="157:65">=</operator>

                                        <call pos:start="159:41" pos:end="159:78"><name pos:start="159:41" pos:end="159:43">BLK</name><argument_list pos:start="159:44" pos:end="159:78">(<argument pos:start="159:45" pos:end="159:53"><expr pos:start="159:45" pos:end="159:53"><name pos:start="159:45" pos:end="159:53"><name pos:start="159:45" pos:end="159:47">ctx</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:53">prev</name></name></expr></argument>, <argument pos:start="159:56" pos:end="159:67"><expr pos:start="159:56" pos:end="159:67"><name pos:start="159:56" pos:end="159:58">l1x</name> <operator pos:start="159:60" pos:end="159:60">+</operator> <literal type="number" pos:start="159:62" pos:end="159:64">1</literal> <operator pos:start="159:64" pos:end="159:64">+</operator> <name pos:start="159:66" pos:end="159:67">mx</name></expr></argument>, <argument pos:start="159:70" pos:end="159:77"><expr pos:start="159:70" pos:end="159:77"><name pos:start="159:70" pos:end="159:72">l1y</name> <operator pos:start="159:74" pos:end="159:74">+</operator> <name pos:start="159:76" pos:end="159:77">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="161:37" pos:end="163:79"><expr pos:start="161:37" pos:end="163:78"><call pos:start="161:37" pos:end="161:63"><name pos:start="161:37" pos:end="161:39">BLK</name><argument_list pos:start="161:40" pos:end="161:63">(<argument pos:start="161:41" pos:end="161:48"><expr pos:start="161:41" pos:end="161:48"><name pos:start="161:41" pos:end="161:48"><name pos:start="161:41" pos:end="161:43">ctx</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:48">cur</name></name></expr></argument>, <argument pos:start="161:51" pos:end="161:53"><expr pos:start="161:51" pos:end="161:53"><name pos:start="161:51" pos:end="161:53">l1x</name></expr></argument>, <argument pos:start="161:56" pos:end="161:62"><expr pos:start="161:56" pos:end="161:62"><name pos:start="161:56" pos:end="161:58">l1y</name> <operator pos:start="161:60" pos:end="161:60">+</operator> <literal type="number" pos:start="161:62" pos:end="161:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="161:65" pos:end="161:65">=</operator>

                                        <call pos:start="163:41" pos:end="163:78"><name pos:start="163:41" pos:end="163:43">BLK</name><argument_list pos:start="163:44" pos:end="163:78">(<argument pos:start="163:45" pos:end="163:53"><expr pos:start="163:45" pos:end="163:53"><name pos:start="163:45" pos:end="163:53"><name pos:start="163:45" pos:end="163:47">ctx</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:53">prev</name></name></expr></argument>, <argument pos:start="163:56" pos:end="163:63"><expr pos:start="163:56" pos:end="163:63"><name pos:start="163:56" pos:end="163:58">l1x</name> <operator pos:start="163:60" pos:end="163:60">+</operator> <name pos:start="163:62" pos:end="163:63">mx</name></expr></argument>, <argument pos:start="163:66" pos:end="163:77"><expr pos:start="163:66" pos:end="163:77"><name pos:start="163:66" pos:end="163:68">l1y</name> <operator pos:start="163:70" pos:end="163:70">+</operator> <literal type="number" pos:start="163:72" pos:end="163:74">1</literal> <operator pos:start="163:74" pos:end="163:74">+</operator> <name pos:start="163:76" pos:end="163:77">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="165:37" pos:end="167:83"><expr pos:start="165:37" pos:end="167:82"><call pos:start="165:37" pos:end="165:67"><name pos:start="165:37" pos:end="165:39">BLK</name><argument_list pos:start="165:40" pos:end="165:67">(<argument pos:start="165:41" pos:end="165:48"><expr pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:43">ctx</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:48">cur</name></name></expr></argument>, <argument pos:start="165:51" pos:end="165:57"><expr pos:start="165:51" pos:end="165:57"><name pos:start="165:51" pos:end="165:53">l1x</name> <operator pos:start="165:55" pos:end="165:55">+</operator> <literal type="number" pos:start="165:57" pos:end="165:57">1</literal></expr></argument>, <argument pos:start="165:60" pos:end="165:66"><expr pos:start="165:60" pos:end="165:66"><name pos:start="165:60" pos:end="165:62">l1y</name> <operator pos:start="165:64" pos:end="165:64">+</operator> <literal type="number" pos:start="165:66" pos:end="165:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="165:69" pos:end="165:69">=</operator>

                                        <call pos:start="167:41" pos:end="167:82"><name pos:start="167:41" pos:end="167:43">BLK</name><argument_list pos:start="167:44" pos:end="167:82">(<argument pos:start="167:45" pos:end="167:53"><expr pos:start="167:45" pos:end="167:53"><name pos:start="167:45" pos:end="167:53"><name pos:start="167:45" pos:end="167:47">ctx</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:53">prev</name></name></expr></argument>, <argument pos:start="167:56" pos:end="167:67"><expr pos:start="167:56" pos:end="167:67"><name pos:start="167:56" pos:end="167:58">l1x</name> <operator pos:start="167:60" pos:end="167:60">+</operator> <literal type="number" pos:start="167:62" pos:end="167:64">1</literal> <operator pos:start="167:64" pos:end="167:64">+</operator> <name pos:start="167:66" pos:end="167:67">mx</name></expr></argument>, <argument pos:start="167:70" pos:end="167:81"><expr pos:start="167:70" pos:end="167:81"><name pos:start="167:70" pos:end="167:72">l1y</name> <operator pos:start="167:74" pos:end="167:74">+</operator> <literal type="number" pos:start="167:76" pos:end="167:78">1</literal> <operator pos:start="167:78" pos:end="167:78">+</operator> <name pos:start="167:80" pos:end="167:81">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>

                            </block_content>}</block></if> <else pos:start="171:31" pos:end="181:29">else <block pos:start="171:36" pos:end="181:29">{<block_content pos:start="173:33" pos:end="179:96">    <comment type="line" pos:start="171:41" pos:end="171:64">// read values for block</comment>

                                <expr_stmt pos:start="173:33" pos:end="173:88"><expr pos:start="173:33" pos:end="173:87"><call pos:start="173:33" pos:end="173:55"><name pos:start="173:33" pos:end="173:35">BLK</name><argument_list pos:start="173:36" pos:end="173:55">(<argument pos:start="173:37" pos:end="173:44"><expr pos:start="173:37" pos:end="173:44"><name pos:start="173:37" pos:end="173:44"><name pos:start="173:37" pos:end="173:39">ctx</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:44">cur</name></name></expr></argument>, <argument pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><name pos:start="173:47" pos:end="173:49">l1x</name></expr></argument>, <argument pos:start="173:52" pos:end="173:54"><expr pos:start="173:52" pos:end="173:54"><name pos:start="173:52" pos:end="173:54">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="173:57" pos:end="173:57">=</operator> <call pos:start="173:59" pos:end="173:87"><name pos:start="173:59" pos:end="173:78">bytestream2_get_byte</name><argument_list pos:start="173:79" pos:end="173:87">(<argument pos:start="173:80" pos:end="173:86"><expr pos:start="173:80" pos:end="173:86"><operator pos:start="173:80" pos:end="173:80">&amp;</operator><name pos:start="173:81" pos:end="173:86"><name pos:start="173:81" pos:end="173:83">ctx</name><operator pos:start="173:84" pos:end="173:85">-&gt;</operator><name pos:start="173:86" pos:end="173:86">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="175:33" pos:end="175:92"><expr pos:start="175:33" pos:end="175:91"><call pos:start="175:33" pos:end="175:59"><name pos:start="175:33" pos:end="175:35">BLK</name><argument_list pos:start="175:36" pos:end="175:59">(<argument pos:start="175:37" pos:end="175:44"><expr pos:start="175:37" pos:end="175:44"><name pos:start="175:37" pos:end="175:44"><name pos:start="175:37" pos:end="175:39">ctx</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:44">cur</name></name></expr></argument>, <argument pos:start="175:47" pos:end="175:53"><expr pos:start="175:47" pos:end="175:53"><name pos:start="175:47" pos:end="175:49">l1x</name> <operator pos:start="175:51" pos:end="175:51">+</operator> <literal type="number" pos:start="175:53" pos:end="175:53">1</literal></expr></argument>, <argument pos:start="175:56" pos:end="175:58"><expr pos:start="175:56" pos:end="175:58"><name pos:start="175:56" pos:end="175:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="175:61" pos:end="175:61">=</operator> <call pos:start="175:63" pos:end="175:91"><name pos:start="175:63" pos:end="175:82">bytestream2_get_byte</name><argument_list pos:start="175:83" pos:end="175:91">(<argument pos:start="175:84" pos:end="175:90"><expr pos:start="175:84" pos:end="175:90"><operator pos:start="175:84" pos:end="175:84">&amp;</operator><name pos:start="175:85" pos:end="175:90"><name pos:start="175:85" pos:end="175:87">ctx</name><operator pos:start="175:88" pos:end="175:89">-&gt;</operator><name pos:start="175:90" pos:end="175:90">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="177:33" pos:end="177:92"><expr pos:start="177:33" pos:end="177:91"><call pos:start="177:33" pos:end="177:59"><name pos:start="177:33" pos:end="177:35">BLK</name><argument_list pos:start="177:36" pos:end="177:59">(<argument pos:start="177:37" pos:end="177:44"><expr pos:start="177:37" pos:end="177:44"><name pos:start="177:37" pos:end="177:44"><name pos:start="177:37" pos:end="177:39">ctx</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:44">cur</name></name></expr></argument>, <argument pos:start="177:47" pos:end="177:49"><expr pos:start="177:47" pos:end="177:49"><name pos:start="177:47" pos:end="177:49">l1x</name></expr></argument>, <argument pos:start="177:52" pos:end="177:58"><expr pos:start="177:52" pos:end="177:58"><name pos:start="177:52" pos:end="177:54">l1y</name> <operator pos:start="177:56" pos:end="177:56">+</operator> <literal type="number" pos:start="177:58" pos:end="177:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="177:61" pos:end="177:61">=</operator> <call pos:start="177:63" pos:end="177:91"><name pos:start="177:63" pos:end="177:82">bytestream2_get_byte</name><argument_list pos:start="177:83" pos:end="177:91">(<argument pos:start="177:84" pos:end="177:90"><expr pos:start="177:84" pos:end="177:90"><operator pos:start="177:84" pos:end="177:84">&amp;</operator><name pos:start="177:85" pos:end="177:90"><name pos:start="177:85" pos:end="177:87">ctx</name><operator pos:start="177:88" pos:end="177:89">-&gt;</operator><name pos:start="177:90" pos:end="177:90">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="179:33" pos:end="179:96"><expr pos:start="179:33" pos:end="179:95"><call pos:start="179:33" pos:end="179:63"><name pos:start="179:33" pos:end="179:35">BLK</name><argument_list pos:start="179:36" pos:end="179:63">(<argument pos:start="179:37" pos:end="179:44"><expr pos:start="179:37" pos:end="179:44"><name pos:start="179:37" pos:end="179:44"><name pos:start="179:37" pos:end="179:39">ctx</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:44">cur</name></name></expr></argument>, <argument pos:start="179:47" pos:end="179:53"><expr pos:start="179:47" pos:end="179:53"><name pos:start="179:47" pos:end="179:49">l1x</name> <operator pos:start="179:51" pos:end="179:51">+</operator> <literal type="number" pos:start="179:53" pos:end="179:53">1</literal></expr></argument>, <argument pos:start="179:56" pos:end="179:62"><expr pos:start="179:56" pos:end="179:62"><name pos:start="179:56" pos:end="179:58">l1y</name> <operator pos:start="179:60" pos:end="179:60">+</operator> <literal type="number" pos:start="179:62" pos:end="179:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="179:65" pos:end="179:65">=</operator> <call pos:start="179:67" pos:end="179:95"><name pos:start="179:67" pos:end="179:86">bytestream2_get_byte</name><argument_list pos:start="179:87" pos:end="179:95">(<argument pos:start="179:88" pos:end="179:94"><expr pos:start="179:88" pos:end="179:94"><operator pos:start="179:88" pos:end="179:88">&amp;</operator><name pos:start="179:89" pos:end="179:94"><name pos:start="179:89" pos:end="179:91">ctx</name><operator pos:start="179:92" pos:end="179:93">-&gt;</operator><name pos:start="179:94" pos:end="179:94">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for></block_content></block></for>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
