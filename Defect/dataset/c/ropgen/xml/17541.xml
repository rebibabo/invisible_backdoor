<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17541.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">ff_compute_frame_duration</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:60"><decl pos:start="1:52" pos:end="1:60"><type pos:start="1:52" pos:end="1:60"><name pos:start="1:52" pos:end="1:54">int</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">pnum</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">pden</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:85"><decl pos:start="1:74" pos:end="1:85"><type pos:start="1:74" pos:end="1:85"><name pos:start="1:74" pos:end="1:81">AVStream</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:85">st</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:55"><decl pos:start="3:32" pos:end="3:55"><type pos:start="3:32" pos:end="3:55"><name pos:start="3:32" pos:end="3:51">AVCodecParserContext</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:55">pc</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:65">AVPacket</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:70">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="9:77"><decl pos:start="7:5" pos:end="9:76"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">AVRational</name></type> <name pos:start="7:16" pos:end="7:30">codec_framerate</name> <init pos:start="7:32" pos:end="9:76">= <expr pos:start="7:34" pos:end="9:76"><ternary pos:start="7:34" pos:end="9:76"><condition pos:start="7:34" pos:end="7:45"><expr pos:start="7:34" pos:end="7:43"><name pos:start="7:34" pos:end="7:43"><name pos:start="7:34" pos:end="7:34">s</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:43">iformat</name></name></expr> ?</condition><then pos:start="7:47" pos:end="7:66"> <expr pos:start="7:47" pos:end="7:66"><name pos:start="7:47" pos:end="7:66"><name pos:start="7:47" pos:end="7:48">st</name><operator pos:start="7:49" pos:end="7:50">-&gt;</operator><name pos:start="7:51" pos:end="7:55">codec</name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:66">framerate</name></name></expr> </then><else pos:start="7:68" pos:end="9:76">:

                                              <expr pos:start="9:47" pos:end="9:76"><call pos:start="9:47" pos:end="9:76"><name pos:start="9:47" pos:end="9:54">av_inv_q</name><argument_list pos:start="9:55" pos:end="9:76">(<argument pos:start="9:56" pos:end="9:75"><expr pos:start="9:56" pos:end="9:75"><name pos:start="9:56" pos:end="9:75"><name pos:start="9:56" pos:end="9:57">st</name><operator pos:start="9:58" pos:end="9:59">-&gt;</operator><name pos:start="9:60" pos:end="9:64">codec</name><operator pos:start="9:65" pos:end="9:66">-&gt;</operator><name pos:start="9:67" pos:end="9:75">time_base</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">frame_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:9">pnum</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:9">pden</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="93:5">switch <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:14">st</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">codec</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">codec_type</name></name></expr>)</condition> <block pos:start="19:36" pos:end="93:5">{<block_content pos:start="21:5" pos:end="91:14">

    <case pos:start="21:5" pos:end="21:28">case <expr pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="71:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:40">(<expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:14">st</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:28">r_frame_rate</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:32">num</name></name> <operator pos:start="23:34" pos:end="23:35">&amp;&amp;</operator> <operator pos:start="23:37" pos:end="23:37">!</operator><name pos:start="23:38" pos:end="23:39">pc</name></expr>)</condition> <block pos:start="23:42" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:41">

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:17">pnum</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:22">st</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:36">r_frame_rate</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:40">den</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:41"><expr pos:start="27:13" pos:end="27:40"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:17">pden</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:40"><name pos:start="27:21" pos:end="27:22">st</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:36">r_frame_rate</name><operator pos:start="27:37" pos:end="27:37">.</operator><name pos:start="27:38" pos:end="27:40">num</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="35:9">else if <condition pos:start="29:19" pos:end="29:66">(<expr pos:start="29:20" pos:end="29:65"><name pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:21">st</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:32">time_base</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:36">num</name></name> <operator pos:start="29:38" pos:end="29:38">*</operator> <literal type="number" pos:start="29:40" pos:end="29:45">1000LL</literal> <operator pos:start="29:47" pos:end="29:47">&gt;</operator> <name pos:start="29:49" pos:end="29:65"><name pos:start="29:49" pos:end="29:50">st</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:61">time_base</name><operator pos:start="29:62" pos:end="29:62">.</operator><name pos:start="29:63" pos:end="29:65">den</name></name></expr>)</condition> <block pos:start="29:68" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:38">

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:17">pnum</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:22">st</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:33">time_base</name><operator pos:start="31:34" pos:end="31:34">.</operator><name pos:start="31:35" pos:end="31:37">num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:37"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:17">pden</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:22">st</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:33">time_base</name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:37">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="71:9">else if <condition pos:start="35:19" pos:end="35:70">(<expr pos:start="35:20" pos:end="35:69"><name pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:34">codec_framerate</name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:38">den</name></name> <operator pos:start="35:40" pos:end="35:40">*</operator> <literal type="number" pos:start="35:42" pos:end="35:47">1000LL</literal> <operator pos:start="35:49" pos:end="35:49">&gt;</operator> <name pos:start="35:51" pos:end="35:69"><name pos:start="35:51" pos:end="35:65">codec_framerate</name><operator pos:start="35:66" pos:end="35:66">.</operator><name pos:start="35:67" pos:end="35:69">num</name></name></expr>)</condition> <block pos:start="35:72" pos:end="71:9">{<block_content pos:start="37:13" pos:end="69:34">

            <expr_stmt pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:39"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:17">pnum</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:35">codec_framerate</name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:39">den</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:17">pden</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:35">codec_framerate</name><operator pos:start="39:36" pos:end="39:36">.</operator><name pos:start="39:37" pos:end="39:39">num</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:48"><expr pos:start="43:13" pos:end="43:47"><operator pos:start="43:13" pos:end="43:13">*</operator><name pos:start="43:14" pos:end="43:17">pden</name> <operator pos:start="43:19" pos:end="43:20">*=</operator> <name pos:start="43:22" pos:end="43:47"><name pos:start="43:22" pos:end="43:23">st</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:30">codec</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:47">ticks_per_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:22">av_assert0</name><argument_list pos:start="45:23" pos:end="45:50">(<argument pos:start="45:24" pos:end="45:49"><expr pos:start="45:24" pos:end="45:49"><name pos:start="45:24" pos:end="45:49"><name pos:start="45:24" pos:end="45:25">st</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">codec</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:49">ticks_per_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="59:13"><if pos:start="47:13" pos:end="59:13">if <condition pos:start="47:16" pos:end="47:38">(<expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:18">pc</name> <operator pos:start="47:20" pos:end="47:21">&amp;&amp;</operator> <name pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:24">pc</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:37">repeat_pict</name></name></expr>)</condition> <block pos:start="47:40" pos:end="59:13">{<block_content pos:start="49:17" pos:end="57:49">

                <expr_stmt pos:start="49:17" pos:end="49:39"><expr pos:start="49:17" pos:end="49:38"><call pos:start="49:17" pos:end="49:38"><name pos:start="49:17" pos:end="49:26">av_assert0</name><argument_list pos:start="49:27" pos:end="49:38">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:37">iformat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="49:41" pos:end="49:115">// this may be wrong for interlaced encoding but its not used for that case</comment>

                <if_stmt pos:start="51:17" pos:end="57:49"><if pos:start="51:17" pos:end="53:49">if <condition pos:start="51:20" pos:end="51:60">(<expr pos:start="51:21" pos:end="51:59"><operator pos:start="51:21" pos:end="51:21">*</operator><name pos:start="51:22" pos:end="51:25">pnum</name> <operator pos:start="51:27" pos:end="51:27">&gt;</operator> <name pos:start="51:29" pos:end="51:35">INT_MAX</name> <operator pos:start="51:37" pos:end="51:37">/</operator> <operator pos:start="51:39" pos:end="51:39">(</operator><literal type="number" pos:start="51:40" pos:end="51:42">1</literal> <operator pos:start="51:42" pos:end="51:42">+</operator> <name pos:start="51:44" pos:end="51:58"><name pos:start="51:44" pos:end="51:45">pc</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:58">repeat_pict</name></name><operator pos:start="51:59" pos:end="51:59">)</operator></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:49"><block_content pos:start="53:21" pos:end="53:49">

                    <expr_stmt pos:start="53:21" pos:end="53:49"><expr pos:start="53:21" pos:end="53:48"><operator pos:start="53:21" pos:end="53:21">*</operator><name pos:start="53:22" pos:end="53:25">pden</name> <operator pos:start="53:27" pos:end="53:28">/=</operator> <literal type="number" pos:start="53:30" pos:end="53:32">1</literal> <operator pos:start="53:32" pos:end="53:32">+</operator> <name pos:start="53:34" pos:end="53:48"><name pos:start="53:34" pos:end="53:35">pc</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:48">repeat_pict</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="55:17" pos:end="57:49">else<block type="pseudo" pos:start="57:21" pos:end="57:49"><block_content pos:start="57:21" pos:end="57:49">

                    <expr_stmt pos:start="57:21" pos:end="57:49"><expr pos:start="57:21" pos:end="57:48"><operator pos:start="57:21" pos:end="57:21">*</operator><name pos:start="57:22" pos:end="57:25">pnum</name> <operator pos:start="57:27" pos:end="57:28">*=</operator> <literal type="number" pos:start="57:30" pos:end="57:32">1</literal> <operator pos:start="57:32" pos:end="57:32">+</operator> <name pos:start="57:34" pos:end="57:48"><name pos:start="57:34" pos:end="57:35">pc</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:48">repeat_pict</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="61:13" pos:end="65:66">/* If this codec can be interlaced or progressive then we need

             * a parser to compute duration of a packet. Thus if we have

             * no parser in such case leave duration undefined. */</comment>

            <if_stmt pos:start="67:13" pos:end="69:34"><if pos:start="67:13" pos:end="69:34">if <condition pos:start="67:16" pos:end="67:54">(<expr pos:start="67:17" pos:end="67:53"><name pos:start="67:17" pos:end="67:42"><name pos:start="67:17" pos:end="67:18">st</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:25">codec</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:42">ticks_per_frame</name></name> <operator pos:start="67:44" pos:end="67:44">&gt;</operator> <literal type="number" pos:start="67:46" pos:end="67:46">1</literal> <operator pos:start="67:48" pos:end="67:49">&amp;&amp;</operator> <operator pos:start="67:51" pos:end="67:51">!</operator><name pos:start="67:52" pos:end="67:53">pc</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:34"><block_content pos:start="69:17" pos:end="69:34">

                <expr_stmt pos:start="69:17" pos:end="69:34"><expr pos:start="69:17" pos:end="69:33"><operator pos:start="69:17" pos:end="69:17">*</operator><name pos:start="69:18" pos:end="69:21">pnum</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">*</operator><name pos:start="69:26" pos:end="69:29">pden</name> <operator pos:start="69:31" pos:end="69:31">=</operator> <literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:71"><expr pos:start="77:9" pos:end="77:70"><name pos:start="77:9" pos:end="77:18">frame_size</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:70"><name pos:start="77:22" pos:end="77:48">av_get_audio_frame_duration</name><argument_list pos:start="77:49" pos:end="77:70">(<argument pos:start="77:50" pos:end="77:58"><expr pos:start="77:50" pos:end="77:58"><name pos:start="77:50" pos:end="77:58"><name pos:start="77:50" pos:end="77:51">st</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:58">codec</name></name></expr></argument>, <argument pos:start="77:61" pos:end="77:69"><expr pos:start="77:61" pos:end="77:69"><name pos:start="77:61" pos:end="77:69"><name pos:start="77:61" pos:end="77:63">pkt</name><operator pos:start="77:64" pos:end="77:65">-&gt;</operator><name pos:start="77:66" pos:end="77:69">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:18"><if pos:start="79:9" pos:end="81:18">if <condition pos:start="79:12" pos:end="79:59">(<expr pos:start="79:13" pos:end="79:58"><name pos:start="79:13" pos:end="79:22">frame_size</name> <operator pos:start="79:24" pos:end="79:25">&lt;=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">0</literal> <operator pos:start="79:29" pos:end="79:30">||</operator> <name pos:start="79:32" pos:end="79:53"><name pos:start="79:32" pos:end="79:33">st</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:40">codec</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:53">sample_rate</name></name> <operator pos:start="79:55" pos:end="79:56">&lt;=</operator> <literal type="number" pos:start="79:58" pos:end="79:58">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:18"><block_content pos:start="81:13" pos:end="81:18">

            <break pos:start="81:13" pos:end="81:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:13">pnum</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:26">frame_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><operator pos:start="85:9" pos:end="85:9">*</operator><name pos:start="85:10" pos:end="85:13">pden</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:18">st</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:25">codec</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:38">sample_rate</name></name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
