<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26510.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:33">parse_nal_units</name><parameter_list pos:start="1:34" pos:end="5:67">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVCodecParserContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:55"><decl pos:start="3:35" pos:end="3:55"><type pos:start="3:35" pos:end="3:55"><name pos:start="3:35" pos:end="3:48">AVCodecContext</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:55">avctx</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:52"><decl pos:start="5:35" pos:end="5:52"><type pos:start="5:35" pos:end="5:52"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:47">uint8_t</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:52">buf</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:66"><decl pos:start="5:55" pos:end="5:66"><type pos:start="5:55" pos:end="5:66"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:66">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="251:1">{<block_content pos:start="9:5" pos:end="249:14">

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">H264Context</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">h</name> <init pos:start="9:20" pos:end="9:33">= <expr pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:27">slice_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">ptr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:38">/* set some sane default values */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">pict_type</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:28">FF_I_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">key_frame</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:14">avctx</name></name><operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:21">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:5">h</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:29">sei_recovery_frame_cnt</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <operator pos:start="33:33" pos:end="33:33">-</operator><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:27">sei_dpb_output_delay</name></name>         <operator pos:start="35:37" pos:end="35:37">=</operator>  <literal type="number" pos:start="35:40" pos:end="35:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:5">h</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:28">sei_cpb_removal_delay</name></name>        <operator pos:start="37:37" pos:end="37:37">=</operator> <operator pos:start="37:39" pos:end="37:39">-</operator><literal type="number" pos:start="37:40" pos:end="37:40">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:35">sei_buffering_period_present</name></name> <operator pos:start="39:37" pos:end="39:37">=</operator>  <literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="243:5">for<control pos:start="43:8" pos:end="43:11">(<init pos:start="43:9" pos:end="43:9">;</init><condition pos:start="43:10" pos:end="43:10">;</condition><incr/>)</control> <block pos:start="43:13" pos:end="243:5">{<block_content pos:start="45:9" pos:end="241:24">

        <decl_stmt pos:start="45:9" pos:end="45:45"><decl pos:start="45:9" pos:end="45:22"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:22">src_length</name></decl>, <decl pos:start="45:25" pos:end="45:34"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:25" pos:end="45:34">dst_length</name></decl>, <decl pos:start="45:37" pos:end="45:44"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:37" pos:end="45:44">consumed</name></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:11">buf</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:54"><name pos:start="47:15" pos:end="47:32">ff_find_start_code</name><argument_list pos:start="47:33" pos:end="47:54">(<argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">buf</name></expr></argument>, <argument pos:start="47:39" pos:end="47:45"><expr pos:start="47:39" pos:end="47:45"><name pos:start="47:39" pos:end="47:45">buf_end</name></expr></argument>, <argument pos:start="47:48" pos:end="47:53"><expr pos:start="47:48" pos:end="47:53"><operator pos:start="47:48" pos:end="47:48">&amp;</operator><name pos:start="47:49" pos:end="47:53">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:18"><if pos:start="49:9" pos:end="51:18">if<condition pos:start="49:11" pos:end="49:26">(<expr pos:start="49:12" pos:end="49:25"><name pos:start="49:12" pos:end="49:14">buf</name> <operator pos:start="49:16" pos:end="49:17">&gt;=</operator> <name pos:start="49:19" pos:end="49:25">buf_end</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:18"><block_content pos:start="51:13" pos:end="51:18">

            <break pos:start="51:13" pos:end="51:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:14"><expr pos:start="53:9" pos:end="53:13"><operator pos:start="53:9" pos:end="53:10">--</operator><name pos:start="53:11" pos:end="53:13">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:18">src_length</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:28">buf_end</name> <operator pos:start="55:30" pos:end="55:30">-</operator> <name pos:start="55:32" pos:end="55:34">buf</name></expr>;</expr_stmt>

        <switch pos:start="57:9" pos:end="71:9">switch <condition pos:start="57:16" pos:end="57:29">(<expr pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:21">state</name> <operator pos:start="57:23" pos:end="57:23">&amp;</operator> <literal type="number" pos:start="57:25" pos:end="57:28">0x1f</literal></expr>)</condition> <block pos:start="57:31" pos:end="71:9">{<block_content pos:start="59:9" pos:end="69:18">

        <case pos:start="59:9" pos:end="59:23">case <expr pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:22">NAL_SLICE</name></expr>:</case>

        <case pos:start="61:9" pos:end="61:27">case <expr pos:start="61:14" pos:end="61:26"><name pos:start="61:14" pos:end="61:26">NAL_IDR_SLICE</name></expr>:</case>

            <comment type="line" pos:start="63:13" pos:end="63:71">// Do not walk the whole buffer just to decode slice header</comment>

            <if_stmt pos:start="65:13" pos:end="67:32"><if pos:start="65:13" pos:end="67:32">if <condition pos:start="65:16" pos:end="65:32">(<expr pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:26">src_length</name> <operator pos:start="65:28" pos:end="65:28">&gt;</operator> <literal type="number" pos:start="65:30" pos:end="65:31">20</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:32"><block_content pos:start="67:17" pos:end="67:32">

                <expr_stmt pos:start="67:17" pos:end="67:32"><expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:26">src_length</name> <operator pos:start="67:28" pos:end="67:28">=</operator> <literal type="number" pos:start="67:30" pos:end="67:31">20</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:11">ptr</name><operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:75"><name pos:start="73:14" pos:end="73:31">ff_h264_decode_nal</name><argument_list pos:start="73:32" pos:end="73:75">(<argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><name pos:start="73:33" pos:end="73:33">h</name></expr></argument>, <argument pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:38">buf</name></expr></argument>, <argument pos:start="73:41" pos:end="73:51"><expr pos:start="73:41" pos:end="73:51"><operator pos:start="73:41" pos:end="73:41">&amp;</operator><name pos:start="73:42" pos:end="73:51">dst_length</name></expr></argument>, <argument pos:start="73:54" pos:end="73:62"><expr pos:start="73:54" pos:end="73:62"><operator pos:start="73:54" pos:end="73:54">&amp;</operator><name pos:start="73:55" pos:end="73:62">consumed</name></expr></argument>, <argument pos:start="73:65" pos:end="73:74"><expr pos:start="73:65" pos:end="73:74"><name pos:start="73:65" pos:end="73:74">src_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:18"><if pos:start="75:9" pos:end="77:18">if <condition pos:start="75:12" pos:end="75:40">(<expr pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:15">ptr</name><operator pos:start="75:16" pos:end="75:17">==</operator><name pos:start="75:18" pos:end="75:21">NULL</name> <operator pos:start="75:23" pos:end="75:24">||</operator> <name pos:start="75:26" pos:end="75:35">dst_length</name> <operator pos:start="75:37" pos:end="75:37">&lt;</operator> <literal type="number" pos:start="75:39" pos:end="75:39">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:18"><block_content pos:start="77:13" pos:end="77:18">

            <break pos:start="77:13" pos:end="77:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:51"><expr pos:start="81:9" pos:end="81:50"><call pos:start="81:9" pos:end="81:50"><name pos:start="81:9" pos:end="81:21">init_get_bits</name><argument_list pos:start="81:22" pos:end="81:50">(<argument pos:start="81:23" pos:end="81:30"><expr pos:start="81:23" pos:end="81:30"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:24">h</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:28">.</operator><name pos:start="81:29" pos:end="81:30">gb</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:35"><expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:35">ptr</name></expr></argument>, <argument pos:start="81:38" pos:end="81:49"><expr pos:start="81:38" pos:end="81:49"><literal type="number" pos:start="81:38" pos:end="81:38">8</literal><operator pos:start="81:39" pos:end="81:39">*</operator><name pos:start="81:40" pos:end="81:49">dst_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="83:9" pos:end="239:9">switch<condition pos:start="83:15" pos:end="83:32">(<expr pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:16">h</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:31">nal_unit_type</name></name></expr>)</condition> <block pos:start="83:34" pos:end="239:9">{<block_content pos:start="85:9" pos:end="237:21">

        <case pos:start="85:9" pos:end="85:21">case <expr pos:start="85:14" pos:end="85:20"><name pos:start="85:14" pos:end="85:20">NAL_SPS</name></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><call pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:44">ff_h264_decode_seq_parameter_set</name><argument_list pos:start="87:45" pos:end="87:47">(<argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:21">case <expr pos:start="91:14" pos:end="91:20"><name pos:start="91:14" pos:end="91:20">NAL_PPS</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:74"><expr pos:start="93:13" pos:end="93:73"><call pos:start="93:13" pos:end="93:73"><name pos:start="93:13" pos:end="93:48">ff_h264_decode_picture_parameter_set</name><argument_list pos:start="93:49" pos:end="93:73">(<argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><name pos:start="93:50" pos:end="93:50">h</name></expr></argument>, <argument pos:start="93:53" pos:end="93:72"><expr pos:start="93:53" pos:end="93:72"><name pos:start="93:53" pos:end="93:72"><name pos:start="93:53" pos:end="93:53">h</name><operator pos:start="93:54" pos:end="93:55">-&gt;</operator><name pos:start="93:56" pos:end="93:56">s</name><operator pos:start="93:57" pos:end="93:57">.</operator><name pos:start="93:58" pos:end="93:59">gb</name><operator pos:start="93:60" pos:end="93:60">.</operator><name pos:start="93:61" pos:end="93:72">size_in_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:21">case <expr pos:start="97:14" pos:end="97:20"><name pos:start="97:14" pos:end="97:20">NAL_SEI</name></expr>:</case>

            <expr_stmt pos:start="99:13" pos:end="99:34"><expr pos:start="99:13" pos:end="99:33"><call pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:30">ff_h264_decode_sei</name><argument_list pos:start="99:31" pos:end="99:33">(<argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:27">case <expr pos:start="103:14" pos:end="103:26"><name pos:start="103:14" pos:end="103:26">NAL_IDR_SLICE</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:29"><expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:24">key_frame</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="107:13" pos:end="107:30">/* fall through */</comment>

        <case pos:start="109:9" pos:end="109:23">case <expr pos:start="109:14" pos:end="109:22"><name pos:start="109:14" pos:end="109:22">NAL_SLICE</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><call pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:25">get_ue_golomb</name><argument_list pos:start="111:26" pos:end="111:35">(<argument pos:start="111:27" pos:end="111:34"><expr pos:start="111:27" pos:end="111:34"><operator pos:start="111:27" pos:end="111:27">&amp;</operator><name pos:start="111:28" pos:end="111:34"><name pos:start="111:28" pos:end="111:28">h</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:31">s</name><operator pos:start="111:32" pos:end="111:32">.</operator><name pos:start="111:33" pos:end="111:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="111:39" pos:end="111:63">// skip first_mb_in_slice</comment>

            <expr_stmt pos:start="113:13" pos:end="113:52"><expr pos:start="113:13" pos:end="113:51"><name pos:start="113:13" pos:end="113:22">slice_type</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <call pos:start="113:26" pos:end="113:51"><name pos:start="113:26" pos:end="113:41">get_ue_golomb_31</name><argument_list pos:start="113:42" pos:end="113:51">(<argument pos:start="113:43" pos:end="113:50"><expr pos:start="113:43" pos:end="113:50"><operator pos:start="113:43" pos:end="113:43">&amp;</operator><name pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:44">h</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:47">s</name><operator pos:start="113:48" pos:end="113:48">.</operator><name pos:start="113:49" pos:end="113:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:63"><expr pos:start="115:13" pos:end="115:62"><name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:24">pict_type</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:62"><name pos:start="115:28" pos:end="115:46">golomb_to_pict_type</name><index pos:start="115:47" pos:end="115:62">[<expr pos:start="115:48" pos:end="115:61"><name pos:start="115:48" pos:end="115:57">slice_type</name> <operator pos:start="115:59" pos:end="115:59">%</operator> <literal type="number" pos:start="115:61" pos:end="115:61">5</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:47">(<expr pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:17">h</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:41">sei_recovery_frame_cnt</name></name> <operator pos:start="117:43" pos:end="117:44">&gt;=</operator> <literal type="number" pos:start="117:46" pos:end="117:46">0</literal></expr>)</condition> <block pos:start="117:49" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:33">

                <comment type="block" pos:start="119:17" pos:end="119:64">/* key frame, since recovery_frame_cnt is set */</comment>

                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:28">key_frame</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:44"><expr pos:start="125:13" pos:end="125:43"><name pos:start="125:13" pos:end="125:18">pps_id</name><operator pos:start="125:19" pos:end="125:19">=</operator> <call pos:start="125:21" pos:end="125:43"><name pos:start="125:21" pos:end="125:33">get_ue_golomb</name><argument_list pos:start="125:34" pos:end="125:43">(<argument pos:start="125:35" pos:end="125:42"><expr pos:start="125:35" pos:end="125:42"><operator pos:start="125:35" pos:end="125:35">&amp;</operator><name pos:start="125:36" pos:end="125:42"><name pos:start="125:36" pos:end="125:36">h</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:39">s</name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if<condition pos:start="127:15" pos:end="127:37">(<expr pos:start="127:16" pos:end="127:36"><name pos:start="127:16" pos:end="127:21">pps_id</name><operator pos:start="127:22" pos:end="127:23">&gt;=</operator><name pos:start="127:24" pos:end="127:36">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="127:39" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:26">

                <expr_stmt pos:start="129:17" pos:end="129:74"><expr pos:start="129:17" pos:end="129:73"><call pos:start="129:17" pos:end="129:73"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="129:73">(<argument pos:start="129:24" pos:end="129:33"><expr pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:24">h</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:27">s</name><operator pos:start="129:28" pos:end="129:28">.</operator><name pos:start="129:29" pos:end="129:33">avctx</name></name></expr></argument>, <argument pos:start="129:36" pos:end="129:47"><expr pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:50" pos:end="129:72"><expr pos:start="129:50" pos:end="129:72"><literal type="string" pos:start="129:50" pos:end="129:72">"pps_id out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="135:13" pos:end="141:13"><if pos:start="135:13" pos:end="141:13">if<condition pos:start="135:15" pos:end="135:39">(<expr pos:start="135:16" pos:end="135:38"><operator pos:start="135:16" pos:end="135:16">!</operator><name pos:start="135:17" pos:end="135:38"><name pos:start="135:17" pos:end="135:17">h</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:30">pps_buffers</name><index pos:start="135:31" pos:end="135:38">[<expr pos:start="135:32" pos:end="135:37"><name pos:start="135:32" pos:end="135:37">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="135:41" pos:end="141:13">{<block_content pos:start="137:17" pos:end="139:26">

                <expr_stmt pos:start="137:17" pos:end="137:82"><expr pos:start="137:17" pos:end="137:81"><call pos:start="137:17" pos:end="137:81"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:81">(<argument pos:start="137:24" pos:end="137:33"><expr pos:start="137:24" pos:end="137:33"><name pos:start="137:24" pos:end="137:33"><name pos:start="137:24" pos:end="137:24">h</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:27">s</name><operator pos:start="137:28" pos:end="137:28">.</operator><name pos:start="137:29" pos:end="137:33">avctx</name></name></expr></argument>, <argument pos:start="137:36" pos:end="137:47"><expr pos:start="137:36" pos:end="137:47"><name pos:start="137:36" pos:end="137:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:50" pos:end="137:80"><expr pos:start="137:50" pos:end="137:80"><literal type="string" pos:start="137:50" pos:end="137:80">"non-existing PPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="139:17" pos:end="139:26">return <expr pos:start="139:24" pos:end="139:25"><operator pos:start="139:24" pos:end="139:24">-</operator><literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:44"><expr pos:start="143:13" pos:end="143:43"><name pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:13">h</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:18">pps</name></name><operator pos:start="143:19" pos:end="143:19">=</operator> <operator pos:start="143:21" pos:end="143:21">*</operator><name pos:start="143:22" pos:end="143:43"><name pos:start="143:22" pos:end="143:22">h</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:35">pps_buffers</name><index pos:start="143:36" pos:end="143:43">[<expr pos:start="143:37" pos:end="143:42"><name pos:start="143:37" pos:end="143:42">pps_id</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="151:13"><if pos:start="145:13" pos:end="151:13">if<condition pos:start="145:15" pos:end="145:46">(<expr pos:start="145:16" pos:end="145:45"><operator pos:start="145:16" pos:end="145:16">!</operator><name pos:start="145:17" pos:end="145:45"><name pos:start="145:17" pos:end="145:17">h</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:30">sps_buffers</name><index pos:start="145:31" pos:end="145:45">[<expr pos:start="145:32" pos:end="145:44"><name pos:start="145:32" pos:end="145:44"><name pos:start="145:32" pos:end="145:32">h</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:37">pps</name><operator pos:start="145:38" pos:end="145:38">.</operator><name pos:start="145:39" pos:end="145:44">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="145:48" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:26">

                <expr_stmt pos:start="147:17" pos:end="147:82"><expr pos:start="147:17" pos:end="147:81"><call pos:start="147:17" pos:end="147:81"><name pos:start="147:17" pos:end="147:22">av_log</name><argument_list pos:start="147:23" pos:end="147:81">(<argument pos:start="147:24" pos:end="147:33"><expr pos:start="147:24" pos:end="147:33"><name pos:start="147:24" pos:end="147:33"><name pos:start="147:24" pos:end="147:24">h</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:27">s</name><operator pos:start="147:28" pos:end="147:28">.</operator><name pos:start="147:29" pos:end="147:33">avctx</name></name></expr></argument>, <argument pos:start="147:36" pos:end="147:47"><expr pos:start="147:36" pos:end="147:47"><name pos:start="147:36" pos:end="147:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:50" pos:end="147:80"><expr pos:start="147:50" pos:end="147:80"><literal type="string" pos:start="147:50" pos:end="147:80">"non-existing SPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="149:17" pos:end="149:26">return <expr pos:start="149:24" pos:end="149:25"><operator pos:start="149:24" pos:end="149:24">-</operator><literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:52"><expr pos:start="153:13" pos:end="153:51"><name pos:start="153:13" pos:end="153:18"><name pos:start="153:13" pos:end="153:13">h</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:18">sps</name></name> <operator pos:start="153:20" pos:end="153:20">=</operator> <operator pos:start="153:22" pos:end="153:22">*</operator><name pos:start="153:23" pos:end="153:51"><name pos:start="153:23" pos:end="153:23">h</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:36">sps_buffers</name><index pos:start="153:37" pos:end="153:51">[<expr pos:start="153:38" pos:end="153:50"><name pos:start="153:38" pos:end="153:50"><name pos:start="153:38" pos:end="153:38">h</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:43">pps</name><operator pos:start="153:44" pos:end="153:44">.</operator><name pos:start="153:45" pos:end="153:50">sps_id</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:73"><expr pos:start="155:13" pos:end="155:72"><name pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:13">h</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:24">frame_num</name></name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:72"><name pos:start="155:28" pos:end="155:35">get_bits</name><argument_list pos:start="155:36" pos:end="155:72">(<argument pos:start="155:37" pos:end="155:44"><expr pos:start="155:37" pos:end="155:44"><operator pos:start="155:37" pos:end="155:37">&amp;</operator><name pos:start="155:38" pos:end="155:44"><name pos:start="155:38" pos:end="155:38">h</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:42">.</operator><name pos:start="155:43" pos:end="155:44">gb</name></name></expr></argument>, <argument pos:start="155:47" pos:end="155:71"><expr pos:start="155:47" pos:end="155:71"><name pos:start="155:47" pos:end="155:71"><name pos:start="155:47" pos:end="155:47">h</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:52">sps</name><operator pos:start="155:53" pos:end="155:53">.</operator><name pos:start="155:54" pos:end="155:71">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="159:13" pos:end="175:13"><if pos:start="159:13" pos:end="163:13">if<condition pos:start="159:15" pos:end="159:42">(<expr pos:start="159:16" pos:end="159:41"><name pos:start="159:16" pos:end="159:41"><name pos:start="159:16" pos:end="159:16">h</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:21">sps</name><operator pos:start="159:22" pos:end="159:22">.</operator><name pos:start="159:23" pos:end="159:41">frame_mbs_only_flag</name></name></expr>)</condition><block pos:start="159:43" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:51">

                <expr_stmt pos:start="161:17" pos:end="161:51"><expr pos:start="161:17" pos:end="161:50"><name pos:start="161:17" pos:end="161:38"><name pos:start="161:17" pos:end="161:17">h</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:20">s</name><operator pos:start="161:21" pos:end="161:21">.</operator><name pos:start="161:22" pos:end="161:38">picture_structure</name></name><operator pos:start="161:39" pos:end="161:39">=</operator> <name pos:start="161:41" pos:end="161:50">PICT_FRAME</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="163:14" pos:end="175:13">else<block pos:start="163:18" pos:end="175:13">{<block_content pos:start="165:17" pos:end="173:17">

                <if_stmt pos:start="165:17" pos:end="173:17"><if pos:start="165:17" pos:end="169:17">if<condition pos:start="165:19" pos:end="165:39">(<expr pos:start="165:20" pos:end="165:38"><call pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:28">get_bits1</name><argument_list pos:start="165:29" pos:end="165:38">(<argument pos:start="165:30" pos:end="165:37"><expr pos:start="165:30" pos:end="165:37"><operator pos:start="165:30" pos:end="165:30">&amp;</operator><name pos:start="165:31" pos:end="165:37"><name pos:start="165:31" pos:end="165:31">h</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:34">s</name><operator pos:start="165:35" pos:end="165:35">.</operator><name pos:start="165:36" pos:end="165:37">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:41" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:81"> <comment type="line" pos:start="165:43" pos:end="165:58">//field_pic_flag</comment>

                    <expr_stmt pos:start="167:21" pos:end="167:81"><expr pos:start="167:21" pos:end="167:80"><name pos:start="167:21" pos:end="167:42"><name pos:start="167:21" pos:end="167:21">h</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:25">.</operator><name pos:start="167:26" pos:end="167:42">picture_structure</name></name><operator pos:start="167:43" pos:end="167:43">=</operator> <name pos:start="167:45" pos:end="167:58">PICT_TOP_FIELD</name> <operator pos:start="167:60" pos:end="167:60">+</operator> <call pos:start="167:62" pos:end="167:80"><name pos:start="167:62" pos:end="167:70">get_bits1</name><argument_list pos:start="167:71" pos:end="167:80">(<argument pos:start="167:72" pos:end="167:79"><expr pos:start="167:72" pos:end="167:79"><operator pos:start="167:72" pos:end="167:72">&amp;</operator><name pos:start="167:73" pos:end="167:79"><name pos:start="167:73" pos:end="167:73">h</name><operator pos:start="167:74" pos:end="167:75">-&gt;</operator><name pos:start="167:76" pos:end="167:76">s</name><operator pos:start="167:77" pos:end="167:77">.</operator><name pos:start="167:78" pos:end="167:79">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="167:83" pos:end="167:101">//bottom_field_flag</comment>

                </block_content>}</block></if> <else pos:start="169:19" pos:end="173:17">else <block pos:start="169:24" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:55">

                    <expr_stmt pos:start="171:21" pos:end="171:55"><expr pos:start="171:21" pos:end="171:54"><name pos:start="171:21" pos:end="171:42"><name pos:start="171:21" pos:end="171:21">h</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:24">s</name><operator pos:start="171:25" pos:end="171:25">.</operator><name pos:start="171:26" pos:end="171:42">picture_structure</name></name><operator pos:start="171:43" pos:end="171:43">=</operator> <name pos:start="171:45" pos:end="171:54">PICT_FRAME</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="179:13" pos:end="233:13"><if pos:start="179:13" pos:end="229:13">if<condition pos:start="179:15" pos:end="179:46">(<expr pos:start="179:16" pos:end="179:45"><name pos:start="179:16" pos:end="179:45"><name pos:start="179:16" pos:end="179:16">h</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:21">sps</name><operator pos:start="179:22" pos:end="179:22">.</operator><name pos:start="179:23" pos:end="179:45">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="179:48" pos:end="229:13">{<block_content pos:start="181:17" pos:end="227:17">

                <switch pos:start="181:17" pos:end="227:17">switch <condition pos:start="181:24" pos:end="181:42">(<expr pos:start="181:25" pos:end="181:41"><name pos:start="181:25" pos:end="181:41"><name pos:start="181:25" pos:end="181:25">h</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:41">sei_pic_struct</name></name></expr>)</condition> <block pos:start="181:44" pos:end="227:17">{<block_content pos:start="183:21" pos:end="225:30">

                    <case pos:start="183:21" pos:end="183:50">case <expr pos:start="183:26" pos:end="183:49"><name pos:start="183:26" pos:end="183:49">SEI_PIC_STRUCT_TOP_FIELD</name></expr>:</case>

                    <case pos:start="185:21" pos:end="185:53">case <expr pos:start="185:26" pos:end="185:52"><name pos:start="185:26" pos:end="185:52">SEI_PIC_STRUCT_BOTTOM_FIELD</name></expr>:</case>

                        <expr_stmt pos:start="187:25" pos:end="187:43"><expr pos:start="187:25" pos:end="187:42"><name pos:start="187:25" pos:end="187:38"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:38">repeat_pict</name></name> <operator pos:start="187:40" pos:end="187:40">=</operator> <literal type="number" pos:start="187:42" pos:end="187:42">0</literal></expr>;</expr_stmt>

                        <break pos:start="189:25" pos:end="189:30">break;</break>

                    <case pos:start="191:21" pos:end="191:46">case <expr pos:start="191:26" pos:end="191:45"><name pos:start="191:26" pos:end="191:45">SEI_PIC_STRUCT_FRAME</name></expr>:</case>

                    <case pos:start="193:21" pos:end="193:51">case <expr pos:start="193:26" pos:end="193:50"><name pos:start="193:26" pos:end="193:50">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

                    <case pos:start="195:21" pos:end="195:51">case <expr pos:start="195:26" pos:end="195:50"><name pos:start="195:26" pos:end="195:50">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

                        <expr_stmt pos:start="197:25" pos:end="197:43"><expr pos:start="197:25" pos:end="197:42"><name pos:start="197:25" pos:end="197:38"><name pos:start="197:25" pos:end="197:25">s</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:38">repeat_pict</name></name> <operator pos:start="197:40" pos:end="197:40">=</operator> <literal type="number" pos:start="197:42" pos:end="197:42">1</literal></expr>;</expr_stmt>

                        <break pos:start="199:25" pos:end="199:30">break;</break>

                    <case pos:start="201:21" pos:end="201:55">case <expr pos:start="201:26" pos:end="201:54"><name pos:start="201:26" pos:end="201:54">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

                    <case pos:start="203:21" pos:end="203:58">case <expr pos:start="203:26" pos:end="203:57"><name pos:start="203:26" pos:end="203:57">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

                        <expr_stmt pos:start="205:25" pos:end="205:43"><expr pos:start="205:25" pos:end="205:42"><name pos:start="205:25" pos:end="205:38"><name pos:start="205:25" pos:end="205:25">s</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:38">repeat_pict</name></name> <operator pos:start="205:40" pos:end="205:40">=</operator> <literal type="number" pos:start="205:42" pos:end="205:42">2</literal></expr>;</expr_stmt>

                        <break pos:start="207:25" pos:end="207:30">break;</break>

                    <case pos:start="209:21" pos:end="209:55">case <expr pos:start="209:26" pos:end="209:54"><name pos:start="209:26" pos:end="209:54">SEI_PIC_STRUCT_FRAME_DOUBLING</name></expr>:</case>

                        <expr_stmt pos:start="211:25" pos:end="211:43"><expr pos:start="211:25" pos:end="211:42"><name pos:start="211:25" pos:end="211:38"><name pos:start="211:25" pos:end="211:25">s</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:38">repeat_pict</name></name> <operator pos:start="211:40" pos:end="211:40">=</operator> <literal type="number" pos:start="211:42" pos:end="211:42">3</literal></expr>;</expr_stmt>

                        <break pos:start="213:25" pos:end="213:30">break;</break>

                    <case pos:start="215:21" pos:end="215:55">case <expr pos:start="215:26" pos:end="215:54"><name pos:start="215:26" pos:end="215:54">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>:</case>

                        <expr_stmt pos:start="217:25" pos:end="217:43"><expr pos:start="217:25" pos:end="217:42"><name pos:start="217:25" pos:end="217:38"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:38">repeat_pict</name></name> <operator pos:start="217:40" pos:end="217:40">=</operator> <literal type="number" pos:start="217:42" pos:end="217:42">5</literal></expr>;</expr_stmt>

                        <break pos:start="219:25" pos:end="219:30">break;</break>

                    <default pos:start="221:21" pos:end="221:28">default:</default>

                        <expr_stmt pos:start="223:25" pos:end="223:86"><expr pos:start="223:25" pos:end="223:85"><name pos:start="223:25" pos:end="223:38"><name pos:start="223:25" pos:end="223:25">s</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:38">repeat_pict</name></name> <operator pos:start="223:40" pos:end="223:40">=</operator> <ternary pos:start="223:42" pos:end="223:85"><condition pos:start="223:42" pos:end="223:79"><expr pos:start="223:42" pos:end="223:77"><name pos:start="223:42" pos:end="223:63"><name pos:start="223:42" pos:end="223:42">h</name><operator pos:start="223:43" pos:end="223:44">-&gt;</operator><name pos:start="223:45" pos:end="223:45">s</name><operator pos:start="223:46" pos:end="223:46">.</operator><name pos:start="223:47" pos:end="223:63">picture_structure</name></name> <operator pos:start="223:65" pos:end="223:66">==</operator> <name pos:start="223:68" pos:end="223:77">PICT_FRAME</name></expr> ?</condition><then pos:start="223:81" pos:end="223:81"> <expr pos:start="223:81" pos:end="223:81"><literal type="number" pos:start="223:81" pos:end="223:81">1</literal></expr> </then><else pos:start="223:83" pos:end="223:85">: <expr pos:start="223:85" pos:end="223:85"><literal type="number" pos:start="223:85" pos:end="223:85">0</literal></expr></else></ternary></expr>;</expr_stmt>

                        <break pos:start="225:25" pos:end="225:30">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <else pos:start="229:15" pos:end="233:13">else <block pos:start="229:20" pos:end="233:13">{<block_content pos:start="231:17" pos:end="231:78">

                <expr_stmt pos:start="231:17" pos:end="231:78"><expr pos:start="231:17" pos:end="231:77"><name pos:start="231:17" pos:end="231:30"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:30">repeat_pict</name></name> <operator pos:start="231:32" pos:end="231:32">=</operator> <ternary pos:start="231:34" pos:end="231:77"><condition pos:start="231:34" pos:end="231:71"><expr pos:start="231:34" pos:end="231:69"><name pos:start="231:34" pos:end="231:55"><name pos:start="231:34" pos:end="231:34">h</name><operator pos:start="231:35" pos:end="231:36">-&gt;</operator><name pos:start="231:37" pos:end="231:37">s</name><operator pos:start="231:38" pos:end="231:38">.</operator><name pos:start="231:39" pos:end="231:55">picture_structure</name></name> <operator pos:start="231:57" pos:end="231:58">==</operator> <name pos:start="231:60" pos:end="231:69">PICT_FRAME</name></expr> ?</condition><then pos:start="231:73" pos:end="231:73"> <expr pos:start="231:73" pos:end="231:73"><literal type="number" pos:start="231:73" pos:end="231:73">1</literal></expr> </then><else pos:start="231:75" pos:end="231:77">: <expr pos:start="231:77" pos:end="231:77"><literal type="number" pos:start="231:77" pos:end="231:77">0</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <return pos:start="237:13" pos:end="237:21">return <expr pos:start="237:20" pos:end="237:20"><literal type="number" pos:start="237:20" pos:end="237:20">0</literal></expr>;</return> <comment type="block" pos:start="237:23" pos:end="237:56">/* no need to evaluate the rest */</comment>

        </block_content>}</block></switch>

        <expr_stmt pos:start="241:9" pos:end="241:24"><expr pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:11">buf</name> <operator pos:start="241:13" pos:end="241:14">+=</operator> <name pos:start="241:16" pos:end="241:23">consumed</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="245:5" pos:end="245:32">/* didn't find a picture! */</comment>

    <expr_stmt pos:start="247:5" pos:end="247:73"><expr pos:start="247:5" pos:end="247:72"><call pos:start="247:5" pos:end="247:72"><name pos:start="247:5" pos:end="247:10">av_log</name><argument_list pos:start="247:11" pos:end="247:72">(<argument pos:start="247:12" pos:end="247:21"><expr pos:start="247:12" pos:end="247:21"><name pos:start="247:12" pos:end="247:21"><name pos:start="247:12" pos:end="247:12">h</name><operator pos:start="247:13" pos:end="247:14">-&gt;</operator><name pos:start="247:15" pos:end="247:15">s</name><operator pos:start="247:16" pos:end="247:16">.</operator><name pos:start="247:17" pos:end="247:21">avctx</name></name></expr></argument>, <argument pos:start="247:24" pos:end="247:35"><expr pos:start="247:24" pos:end="247:35"><name pos:start="247:24" pos:end="247:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="247:38" pos:end="247:71"><expr pos:start="247:38" pos:end="247:71"><literal type="string" pos:start="247:38" pos:end="247:71">"missing picture in access unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="249:5" pos:end="249:14">return <expr pos:start="249:12" pos:end="249:13"><operator pos:start="249:12" pos:end="249:12">-</operator><literal type="number" pos:start="249:13" pos:end="249:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
