<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14828.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">got_frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="261:1">{<block_content pos:start="7:5" pos:end="259:18">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:15">SVQ1Context</name>     <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">s</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name>       <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">cur</name> <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">current</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">result</name></decl>, <decl pos:start="17:17" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:17">i</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">x</name></decl>, <decl pos:start="17:23" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:23">y</name></decl>, <decl pos:start="17:26" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:26" pos:end="17:30">width</name></decl>, <decl pos:start="17:33" pos:end="17:38"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:33" pos:end="17:38">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">svq1_pmv</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">pmv</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:31">/* initialize bit buffer */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:17">init_get_bits</name><argument_list pos:start="25:18" pos:end="25:44">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:24">gb</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">buf</name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:39">buf_size</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <literal type="number" pos:start="25:43" pos:end="25:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* decode frame header */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">frame_code</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:28">get_bits</name><argument_list pos:start="31:29" pos:end="31:40">(<argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">gb</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:39"><expr pos:start="31:38" pos:end="31:39"><literal type="number" pos:start="31:38" pos:end="31:39">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:59">(<expr pos:start="35:9" pos:end="35:58"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">frame_code</name></name> <operator pos:start="35:24" pos:end="35:24">&amp;</operator> <operator pos:start="35:26" pos:end="35:26">~</operator><literal type="number" pos:start="35:27" pos:end="35:30">0x70</literal><operator pos:start="35:31" pos:end="35:31">)</operator> <operator pos:start="35:33" pos:end="35:34">||</operator> <operator pos:start="35:36" pos:end="35:36">!</operator><operator pos:start="35:37" pos:end="35:37">(</operator><name pos:start="35:38" pos:end="35:50"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:50">frame_code</name></name> <operator pos:start="35:52" pos:end="35:52">&amp;</operator> <literal type="number" pos:start="35:54" pos:end="35:57">0x60</literal><operator pos:start="35:58" pos:end="35:58">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:39">/* swap some header bytes (why?) */</comment>

    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">frame_code</name></name> <operator pos:start="43:23" pos:end="43:24">!=</operator> <literal type="number" pos:start="43:26" pos:end="43:29">0x20</literal></expr>)</condition> <block pos:start="43:32" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:68">

        <decl_stmt pos:start="45:9" pos:end="45:46"><decl pos:start="45:9" pos:end="45:45"><type pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:16">uint32_t</name> <modifier pos:start="45:18" pos:end="45:18">*</modifier></type><name pos:start="45:19" pos:end="45:21">src</name> <init pos:start="45:23" pos:end="45:45">= <expr pos:start="45:25" pos:end="45:45"><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:33">uint32_t</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:40">buf</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <literal type="number" pos:start="45:44" pos:end="45:44">4</literal><operator pos:start="45:45" pos:end="45:45">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="49:9" pos:end="51:68">for <control pos:start="49:13" pos:end="49:31">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <literal type="number" pos:start="49:25" pos:end="49:25">4</literal></expr>;</condition> <incr pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:28">i</name><operator pos:start="49:29" pos:end="49:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:13" pos:end="51:68"><block_content pos:start="51:13" pos:end="51:68">

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:15">src</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">i</name></expr>]</index></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><operator pos:start="51:23" pos:end="51:23">(</operator><name pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:26">src</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">i</name></expr>]</index></name> <operator pos:start="51:31" pos:end="51:32">&lt;&lt;</operator> <literal type="number" pos:start="51:34" pos:end="51:35">16</literal><operator pos:start="51:36" pos:end="51:36">)</operator> <operator pos:start="51:38" pos:end="51:38">|</operator> <operator pos:start="51:40" pos:end="51:40">(</operator><name pos:start="51:41" pos:end="51:46"><name pos:start="51:41" pos:end="51:43">src</name><index pos:start="51:44" pos:end="51:46">[<expr pos:start="51:45" pos:end="51:45"><name pos:start="51:45" pos:end="51:45">i</name></expr>]</index></name> <operator pos:start="51:48" pos:end="51:49">&gt;&gt;</operator> <literal type="number" pos:start="51:51" pos:end="51:52">16</literal><operator pos:start="51:53" pos:end="51:53">)</operator><operator pos:start="51:54" pos:end="51:54">)</operator> <operator pos:start="51:56" pos:end="51:56">^</operator> <name pos:start="51:58" pos:end="51:67"><name pos:start="51:58" pos:end="51:60">src</name><index pos:start="51:61" pos:end="51:67">[<expr pos:start="51:62" pos:end="51:66"><literal type="number" pos:start="51:62" pos:end="51:62">7</literal> <operator pos:start="51:64" pos:end="51:64">-</operator> <name pos:start="51:66" pos:end="51:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:10">result</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:49"><name pos:start="57:14" pos:end="57:37">svq1_decode_frame_header</name><argument_list pos:start="57:38" pos:end="57:49">(<argument pos:start="57:39" pos:end="57:43"><expr pos:start="57:39" pos:end="57:43"><name pos:start="57:39" pos:end="57:43">avctx</name></expr></argument>, <argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:48">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:20">(<expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:14">result</name> <operator pos:start="61:16" pos:end="61:17">!=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition> <block pos:start="61:22" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:22">

        <expr_stmt pos:start="63:9" pos:end="63:73"><expr pos:start="63:9" pos:end="63:72"><call pos:start="63:9" pos:end="63:72"><name pos:start="63:9" pos:end="63:15">av_dlog</name><argument_list pos:start="63:16" pos:end="63:72">(<argument pos:start="63:17" pos:end="63:21"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:21">avctx</name></expr></argument>, <argument pos:start="63:24" pos:end="63:63"><expr pos:start="63:24" pos:end="63:63"><literal type="string" pos:start="63:24" pos:end="63:63">"Error in svq1_decode_frame_header %i\n"</literal></expr></argument>, <argument pos:start="63:66" pos:end="63:71"><expr pos:start="63:66" pos:end="63:71"><name pos:start="63:66" pos:end="63:71">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:22">return <expr pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:59"><expr pos:start="71:5" pos:end="71:58"><name pos:start="71:5" pos:end="71:10">result</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:58"><name pos:start="71:14" pos:end="71:30">ff_set_dimensions</name><argument_list pos:start="71:31" pos:end="71:58">(<argument pos:start="71:32" pos:end="71:36"><expr pos:start="71:32" pos:end="71:36"><name pos:start="71:32" pos:end="71:36">avctx</name></expr></argument>, <argument pos:start="71:39" pos:end="71:46"><expr pos:start="71:39" pos:end="71:46"><name pos:start="71:39" pos:end="71:46"><name pos:start="71:39" pos:end="71:39">s</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:46">width</name></name></expr></argument>, <argument pos:start="71:49" pos:end="71:57"><expr pos:start="71:49" pos:end="71:57"><name pos:start="71:49" pos:end="71:57"><name pos:start="71:49" pos:end="71:49">s</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:22"><if pos:start="73:5" pos:end="75:22">if <condition pos:start="73:8" pos:end="73:19">(<expr pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:14">result</name> <operator pos:start="73:16" pos:end="73:16">&lt;</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:22"><block_content pos:start="75:9" pos:end="75:22">

        <return pos:start="75:9" pos:end="75:22">return <expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="87:24"><if pos:start="79:5" pos:end="87:24">if <condition pos:start="79:8" pos:end="85:43">(<expr pos:start="79:9" pos:end="85:42"><operator pos:start="79:9" pos:end="79:9">(</operator><name pos:start="79:10" pos:end="79:26"><name pos:start="79:10" pos:end="79:14">avctx</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:26">skip_frame</name></name> <operator pos:start="79:28" pos:end="79:29">&gt;=</operator> <name pos:start="79:31" pos:end="79:46">AVDISCARD_NONREF</name> <operator pos:start="79:48" pos:end="79:49">&amp;&amp;</operator> <name pos:start="79:51" pos:end="79:59"><name pos:start="79:51" pos:end="79:51">s</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:59">nonref</name></name><operator pos:start="79:60" pos:end="79:60">)</operator> <operator pos:start="79:62" pos:end="79:63">||</operator>

        <operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:26"><name pos:start="81:10" pos:end="81:14">avctx</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:26">skip_frame</name></name> <operator pos:start="81:28" pos:end="81:29">&gt;=</operator> <name pos:start="81:31" pos:end="81:46">AVDISCARD_NONKEY</name> <operator pos:start="81:48" pos:end="81:49">&amp;&amp;</operator>

         <name pos:start="83:10" pos:end="83:23"><name pos:start="83:10" pos:end="83:12">cur</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:23">pict_type</name></name> <operator pos:start="83:25" pos:end="83:26">!=</operator> <name pos:start="83:28" pos:end="83:44">AV_PICTURE_TYPE_I</name><operator pos:start="83:45" pos:end="83:45">)</operator> <operator pos:start="83:47" pos:end="83:48">||</operator>

        <name pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:25">skip_frame</name></name> <operator pos:start="85:27" pos:end="85:28">&gt;=</operator> <name pos:start="85:30" pos:end="85:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:24"><block_content pos:start="87:9" pos:end="87:24">

        <return pos:start="87:9" pos:end="87:24">return <expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:79"><expr pos:start="91:5" pos:end="91:78"><name pos:start="91:5" pos:end="91:10">result</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:78"><name pos:start="91:14" pos:end="91:26">ff_get_buffer</name><argument_list pos:start="91:27" pos:end="91:78">(<argument pos:start="91:28" pos:end="91:32"><expr pos:start="91:28" pos:end="91:32"><name pos:start="91:28" pos:end="91:32">avctx</name></expr></argument>, <argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><name pos:start="91:35" pos:end="91:37">cur</name></expr></argument>, <argument pos:start="91:40" pos:end="91:77"><expr pos:start="91:40" pos:end="91:77"><ternary pos:start="91:40" pos:end="91:77"><condition pos:start="91:40" pos:end="91:50"><expr pos:start="91:40" pos:end="91:48"><name pos:start="91:40" pos:end="91:48"><name pos:start="91:40" pos:end="91:40">s</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:48">nonref</name></name></expr> ?</condition><then pos:start="91:52" pos:end="91:52"> <expr pos:start="91:52" pos:end="91:52"><literal type="number" pos:start="91:52" pos:end="91:52">0</literal></expr> </then><else pos:start="91:54" pos:end="91:77">: <expr pos:start="91:56" pos:end="91:77"><name pos:start="91:56" pos:end="91:77">AV_GET_BUFFER_FLAG_REF</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:22"><if pos:start="93:5" pos:end="95:22">if <condition pos:start="93:8" pos:end="93:19">(<expr pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:14">result</name> <operator pos:start="93:16" pos:end="93:16">&lt;</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:22"><block_content pos:start="95:9" pos:end="95:22">

        <return pos:start="95:9" pos:end="95:22">return <expr pos:start="95:16" pos:end="95:21"><name pos:start="95:16" pos:end="95:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:68"><expr pos:start="99:5" pos:end="99:67"><name pos:start="99:5" pos:end="99:7">pmv</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <call pos:start="99:11" pos:end="99:67"><name pos:start="99:11" pos:end="99:19">av_malloc</name><argument_list pos:start="99:20" pos:end="99:67">(<argument pos:start="99:21" pos:end="99:66"><expr pos:start="99:21" pos:end="99:66"><operator pos:start="99:21" pos:end="99:21">(</operator><call pos:start="99:22" pos:end="99:42"><name pos:start="99:22" pos:end="99:28">FFALIGN</name><argument_list pos:start="99:29" pos:end="99:42">(<argument pos:start="99:30" pos:end="99:37"><expr pos:start="99:30" pos:end="99:37"><name pos:start="99:30" pos:end="99:37"><name pos:start="99:30" pos:end="99:30">s</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:37">width</name></name></expr></argument>, <argument pos:start="99:40" pos:end="99:41"><expr pos:start="99:40" pos:end="99:41"><literal type="number" pos:start="99:40" pos:end="99:41">16</literal></expr></argument>)</argument_list></call> <operator pos:start="99:44" pos:end="99:44">/</operator> <literal type="number" pos:start="99:46" pos:end="99:48">8</literal> <operator pos:start="99:48" pos:end="99:48">+</operator> <literal type="number" pos:start="99:50" pos:end="99:50">3</literal><operator pos:start="99:51" pos:end="99:51">)</operator> <operator pos:start="99:53" pos:end="99:53">*</operator> <sizeof pos:start="99:55" pos:end="99:66">sizeof<argument_list pos:start="99:61" pos:end="99:66">(<argument pos:start="99:62" pos:end="99:65"><expr pos:start="99:62" pos:end="99:65"><operator pos:start="99:62" pos:end="99:62">*</operator><name pos:start="99:63" pos:end="99:65">pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="103:31"><if pos:start="101:5" pos:end="103:31">if <condition pos:start="101:8" pos:end="101:13">(<expr pos:start="101:9" pos:end="101:12"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:12">pmv</name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:31"><block_content pos:start="103:9" pos:end="103:31">

        <return pos:start="103:9" pos:end="103:31">return <expr pos:start="103:16" pos:end="103:30"><call pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:22">AVERROR</name><argument_list pos:start="103:23" pos:end="103:30">(<argument pos:start="103:24" pos:end="103:29"><expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:38">/* decode y, u and v components */</comment>

    <for pos:start="109:5" pos:end="231:5">for <control pos:start="109:9" pos:end="109:27">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:22"><expr pos:start="109:17" pos:end="109:21"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <literal type="number" pos:start="109:21" pos:end="109:21">3</literal></expr>;</condition> <incr pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:24">i</name><operator pos:start="109:25" pos:end="109:26">++</operator></expr></incr>)</control> <block pos:start="109:29" pos:end="231:5">{<block_content pos:start="111:9" pos:end="229:9">

        <decl_stmt pos:start="111:9" pos:end="111:40"><decl pos:start="111:9" pos:end="111:39"><type pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">int</name></type> <name pos:start="111:13" pos:end="111:20">linesize</name> <init pos:start="111:22" pos:end="111:39">= <expr pos:start="111:24" pos:end="111:39"><name pos:start="111:24" pos:end="111:39"><name pos:start="111:24" pos:end="111:26">cur</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:36">linesize</name><index pos:start="111:37" pos:end="111:39">[<expr pos:start="111:38" pos:end="111:38"><name pos:start="111:38" pos:end="111:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="113:9" pos:end="129:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:19">(<expr pos:start="113:13" pos:end="113:18"><name pos:start="113:13" pos:end="113:13">i</name> <operator pos:start="113:15" pos:end="113:16">==</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>)</condition> <block pos:start="113:21" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:46">

            <expr_stmt pos:start="115:13" pos:end="115:46"><expr pos:start="115:13" pos:end="115:45"><name pos:start="115:13" pos:end="115:17">width</name>    <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:45"><name pos:start="115:24" pos:end="115:30">FFALIGN</name><argument_list pos:start="115:31" pos:end="115:45">(<argument pos:start="115:32" pos:end="115:39"><expr pos:start="115:32" pos:end="115:39"><name pos:start="115:32" pos:end="115:39"><name pos:start="115:32" pos:end="115:32">s</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:39">width</name></name></expr></argument>,  <argument pos:start="115:43" pos:end="115:44"><expr pos:start="115:43" pos:end="115:44"><literal type="number" pos:start="115:43" pos:end="115:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:46"><expr pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:18">height</name>   <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="117:45"><name pos:start="117:24" pos:end="117:30">FFALIGN</name><argument_list pos:start="117:31" pos:end="117:45">(<argument pos:start="117:32" pos:end="117:40"><expr pos:start="117:32" pos:end="117:40"><name pos:start="117:32" pos:end="117:40"><name pos:start="117:32" pos:end="117:32">s</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:40">height</name></name></expr></argument>, <argument pos:start="117:43" pos:end="117:44"><expr pos:start="117:43" pos:end="117:44"><literal type="number" pos:start="117:43" pos:end="117:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="129:9">else <block pos:start="119:16" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:50">

            <if_stmt pos:start="121:13" pos:end="123:22"><if pos:start="121:13" pos:end="123:22">if <condition pos:start="121:16" pos:end="121:47">(<expr pos:start="121:17" pos:end="121:46"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:21">avctx</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:28">flags</name></name> <operator pos:start="121:30" pos:end="121:30">&amp;</operator> <name pos:start="121:32" pos:end="121:46">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:22"><block_content pos:start="123:17" pos:end="123:22">

                <break pos:start="123:17" pos:end="123:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:50"><expr pos:start="125:13" pos:end="125:49"><name pos:start="125:13" pos:end="125:17">width</name>    <operator pos:start="125:22" pos:end="125:22">=</operator> <call pos:start="125:24" pos:end="125:49"><name pos:start="125:24" pos:end="125:30">FFALIGN</name><argument_list pos:start="125:31" pos:end="125:49">(<argument pos:start="125:32" pos:end="125:44"><expr pos:start="125:32" pos:end="125:44"><name pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:32">s</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:39">width</name></name>  <operator pos:start="125:42" pos:end="125:42">/</operator> <literal type="number" pos:start="125:44" pos:end="125:44">4</literal></expr></argument>, <argument pos:start="125:47" pos:end="125:48"><expr pos:start="125:47" pos:end="125:48"><literal type="number" pos:start="125:47" pos:end="125:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:50"><expr pos:start="127:13" pos:end="127:49"><name pos:start="127:13" pos:end="127:18">height</name>   <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:49"><name pos:start="127:24" pos:end="127:30">FFALIGN</name><argument_list pos:start="127:31" pos:end="127:49">(<argument pos:start="127:32" pos:end="127:44"><expr pos:start="127:32" pos:end="127:44"><name pos:start="127:32" pos:end="127:40"><name pos:start="127:32" pos:end="127:32">s</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:40">height</name></name> <operator pos:start="127:42" pos:end="127:42">/</operator> <literal type="number" pos:start="127:44" pos:end="127:44">4</literal></expr></argument>, <argument pos:start="127:47" pos:end="127:48"><expr pos:start="127:47" pos:end="127:48"><literal type="number" pos:start="127:47" pos:end="127:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:15">current</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:30"><name pos:start="133:19" pos:end="133:21">cur</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">data</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="137:9" pos:end="229:9"><if pos:start="137:9" pos:end="167:9">if <condition pos:start="137:12" pos:end="137:48">(<expr pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:15">cur</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:26">pict_type</name></name> <operator pos:start="137:28" pos:end="137:29">==</operator> <name pos:start="137:31" pos:end="137:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="137:50" pos:end="167:9">{<block_content pos:start="141:13" pos:end="165:13">

            <comment type="block" pos:start="139:13" pos:end="139:26">/* keyframe */</comment>

            <for pos:start="141:13" pos:end="165:13">for <control pos:start="141:17" pos:end="141:44">(<init pos:start="141:18" pos:end="141:23"><expr pos:start="141:18" pos:end="141:22"><name pos:start="141:18" pos:end="141:18">y</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</init> <condition pos:start="141:25" pos:end="141:35"><expr pos:start="141:25" pos:end="141:34"><name pos:start="141:25" pos:end="141:25">y</name> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <name pos:start="141:29" pos:end="141:34">height</name></expr>;</condition> <incr pos:start="141:37" pos:end="141:43"><expr pos:start="141:37" pos:end="141:43"><name pos:start="141:37" pos:end="141:37">y</name> <operator pos:start="141:39" pos:end="141:40">+=</operator> <literal type="number" pos:start="141:42" pos:end="141:43">16</literal></expr></incr>)</control> <block pos:start="141:46" pos:end="165:13">{<block_content pos:start="143:17" pos:end="163:41">

                <for pos:start="143:17" pos:end="161:17">for <control pos:start="143:21" pos:end="143:47">(<init pos:start="143:22" pos:end="143:27"><expr pos:start="143:22" pos:end="143:26"><name pos:start="143:22" pos:end="143:22">x</name> <operator pos:start="143:24" pos:end="143:24">=</operator> <literal type="number" pos:start="143:26" pos:end="143:26">0</literal></expr>;</init> <condition pos:start="143:29" pos:end="143:38"><expr pos:start="143:29" pos:end="143:37"><name pos:start="143:29" pos:end="143:29">x</name> <operator pos:start="143:31" pos:end="143:31">&lt;</operator> <name pos:start="143:33" pos:end="143:37">width</name></expr>;</condition> <incr pos:start="143:40" pos:end="143:46"><expr pos:start="143:40" pos:end="143:46"><name pos:start="143:40" pos:end="143:40">x</name> <operator pos:start="143:42" pos:end="143:43">+=</operator> <literal type="number" pos:start="143:45" pos:end="143:46">16</literal></expr></incr>)</control> <block pos:start="143:49" pos:end="161:17">{<block_content pos:start="145:21" pos:end="159:21">

                    <expr_stmt pos:start="145:21" pos:end="147:63"><expr pos:start="145:21" pos:end="147:62"><name pos:start="145:21" pos:end="145:26">result</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <call pos:start="145:30" pos:end="147:62"><name pos:start="145:30" pos:end="145:52">svq1_decode_block_intra</name><argument_list pos:start="145:53" pos:end="147:62">(<argument pos:start="145:54" pos:end="145:59"><expr pos:start="145:54" pos:end="145:59"><operator pos:start="145:54" pos:end="145:54">&amp;</operator><name pos:start="145:55" pos:end="145:59"><name pos:start="145:55" pos:end="145:55">s</name><operator pos:start="145:56" pos:end="145:57">-&gt;</operator><name pos:start="145:58" pos:end="145:59">gb</name></name></expr></argument>, <argument pos:start="145:62" pos:end="145:72"><expr pos:start="145:62" pos:end="145:72"><operator pos:start="145:62" pos:end="145:62">&amp;</operator><name pos:start="145:63" pos:end="145:72"><name pos:start="145:63" pos:end="145:69">current</name><index pos:start="145:70" pos:end="145:72">[<expr pos:start="145:71" pos:end="145:71"><name pos:start="145:71" pos:end="145:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="147:54" pos:end="147:61"><expr pos:start="147:54" pos:end="147:61"><name pos:start="147:54" pos:end="147:61">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="149:21" pos:end="159:21"><if pos:start="149:21" pos:end="159:21">if <condition pos:start="149:24" pos:end="149:36">(<expr pos:start="149:25" pos:end="149:35"><name pos:start="149:25" pos:end="149:30">result</name> <operator pos:start="149:32" pos:end="149:33">!=</operator> <literal type="number" pos:start="149:35" pos:end="149:35">0</literal></expr>)</condition> <block pos:start="149:38" pos:end="159:21">{<block_content pos:start="151:25" pos:end="157:33">

                        <expr_stmt pos:start="151:25" pos:end="155:39"><expr pos:start="151:25" pos:end="155:38"><call pos:start="151:25" pos:end="155:38"><name pos:start="151:25" pos:end="151:30">av_log</name><argument_list pos:start="151:31" pos:end="155:38">(<argument pos:start="151:32" pos:end="151:36"><expr pos:start="151:32" pos:end="151:36"><name pos:start="151:32" pos:end="151:36">avctx</name></expr></argument>, <argument pos:start="151:39" pos:end="151:49"><expr pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:49">AV_LOG_INFO</name></expr></argument>,

                               <argument pos:start="153:32" pos:end="153:75"><expr pos:start="153:32" pos:end="153:75"><literal type="string" pos:start="153:32" pos:end="153:75">"Error in svq1_decode_block %i (keyframe)\n"</literal></expr></argument>,

                               <argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><name pos:start="155:32" pos:end="155:37">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="157:25" pos:end="157:33">goto <name pos:start="157:30" pos:end="157:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="163:17" pos:end="163:41"><expr pos:start="163:17" pos:end="163:40"><name pos:start="163:17" pos:end="163:23">current</name> <operator pos:start="163:25" pos:end="163:26">+=</operator> <literal type="number" pos:start="163:28" pos:end="163:29">16</literal> <operator pos:start="163:31" pos:end="163:31">*</operator> <name pos:start="163:33" pos:end="163:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="167:11" pos:end="229:9">else <block pos:start="167:16" pos:end="229:9">{<block_content pos:start="171:13" pos:end="227:13">

            <comment type="block" pos:start="169:13" pos:end="169:29">/* delta frame */</comment>

            <decl_stmt pos:start="171:13" pos:end="171:49"><decl pos:start="171:13" pos:end="171:48"><type pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:19">uint8_t</name> <modifier pos:start="171:21" pos:end="171:21">*</modifier></type><name pos:start="171:22" pos:end="171:29">previous</name> <init pos:start="171:31" pos:end="171:48">= <expr pos:start="171:33" pos:end="171:48"><name pos:start="171:33" pos:end="171:48"><name pos:start="171:33" pos:end="171:33">s</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:39">prev</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:45">data</name><index pos:start="171:46" pos:end="171:48">[<expr pos:start="171:47" pos:end="171:47"><name pos:start="171:47" pos:end="171:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="173:13" pos:end="183:13"><if pos:start="173:13" pos:end="183:13">if <condition pos:start="173:16" pos:end="175:75">(<expr pos:start="173:17" pos:end="175:74"><operator pos:start="173:17" pos:end="173:17">!</operator><name pos:start="173:18" pos:end="173:25">previous</name> <operator pos:start="173:27" pos:end="173:28">||</operator>

                <name pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:23">prev</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:30">width</name></name> <operator pos:start="175:32" pos:end="175:33">!=</operator> <name pos:start="175:35" pos:end="175:42"><name pos:start="175:35" pos:end="175:35">s</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:42">width</name></name> <operator pos:start="175:44" pos:end="175:45">||</operator> <name pos:start="175:47" pos:end="175:61"><name pos:start="175:47" pos:end="175:47">s</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:53">prev</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:61">height</name></name> <operator pos:start="175:63" pos:end="175:64">!=</operator> <name pos:start="175:66" pos:end="175:74"><name pos:start="175:66" pos:end="175:66">s</name><operator pos:start="175:67" pos:end="175:68">-&gt;</operator><name pos:start="175:69" pos:end="175:74">height</name></name></expr>)</condition> <block pos:start="175:77" pos:end="183:13">{<block_content pos:start="177:17" pos:end="181:25">

                <expr_stmt pos:start="177:17" pos:end="177:74"><expr pos:start="177:17" pos:end="177:73"><call pos:start="177:17" pos:end="177:73"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="177:73">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28">avctx</name></expr></argument>, <argument pos:start="177:31" pos:end="177:42"><expr pos:start="177:31" pos:end="177:42"><name pos:start="177:31" pos:end="177:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:45" pos:end="177:72"><expr pos:start="177:45" pos:end="177:72"><literal type="string" pos:start="177:45" pos:end="177:72">"Missing reference frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:45"><expr pos:start="179:17" pos:end="179:44"><name pos:start="179:17" pos:end="179:22">result</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <name pos:start="179:26" pos:end="179:44">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="181:17" pos:end="181:25">goto <name pos:start="181:22" pos:end="181:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:65"><expr pos:start="187:13" pos:end="187:64"><call pos:start="187:13" pos:end="187:64"><name pos:start="187:13" pos:end="187:18">memset</name><argument_list pos:start="187:19" pos:end="187:64">(<argument pos:start="187:20" pos:end="187:22"><expr pos:start="187:20" pos:end="187:22"><name pos:start="187:20" pos:end="187:22">pmv</name></expr></argument>, <argument pos:start="187:25" pos:end="187:25"><expr pos:start="187:25" pos:end="187:25"><literal type="number" pos:start="187:25" pos:end="187:25">0</literal></expr></argument>, <argument pos:start="187:28" pos:end="187:63"><expr pos:start="187:28" pos:end="187:63"><operator pos:start="187:28" pos:end="187:28">(</operator><operator pos:start="187:29" pos:end="187:29">(</operator><name pos:start="187:30" pos:end="187:34">width</name> <operator pos:start="187:36" pos:end="187:36">/</operator> <literal type="number" pos:start="187:38" pos:end="187:38">8</literal><operator pos:start="187:39" pos:end="187:39">)</operator> <operator pos:start="187:41" pos:end="187:41">+</operator> <literal type="number" pos:start="187:43" pos:end="187:43">3</literal><operator pos:start="187:44" pos:end="187:44">)</operator> <operator pos:start="187:46" pos:end="187:46">*</operator> <sizeof pos:start="187:48" pos:end="187:63">sizeof<argument_list pos:start="187:54" pos:end="187:63">(<argument pos:start="187:55" pos:end="187:62"><expr pos:start="187:55" pos:end="187:62"><name pos:start="187:55" pos:end="187:62">svq1_pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="191:13" pos:end="227:13">for <control pos:start="191:17" pos:end="191:44">(<init pos:start="191:18" pos:end="191:23"><expr pos:start="191:18" pos:end="191:22"><name pos:start="191:18" pos:end="191:18">y</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr>;</init> <condition pos:start="191:25" pos:end="191:35"><expr pos:start="191:25" pos:end="191:34"><name pos:start="191:25" pos:end="191:25">y</name> <operator pos:start="191:27" pos:end="191:27">&lt;</operator> <name pos:start="191:29" pos:end="191:34">height</name></expr>;</condition> <incr pos:start="191:37" pos:end="191:43"><expr pos:start="191:37" pos:end="191:43"><name pos:start="191:37" pos:end="191:37">y</name> <operator pos:start="191:39" pos:end="191:40">+=</operator> <literal type="number" pos:start="191:42" pos:end="191:43">16</literal></expr></incr>)</control> <block pos:start="191:46" pos:end="227:13">{<block_content pos:start="193:17" pos:end="225:41">

                <for pos:start="193:17" pos:end="215:17">for <control pos:start="193:21" pos:end="193:47">(<init pos:start="193:22" pos:end="193:27"><expr pos:start="193:22" pos:end="193:26"><name pos:start="193:22" pos:end="193:22">x</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr>;</init> <condition pos:start="193:29" pos:end="193:38"><expr pos:start="193:29" pos:end="193:37"><name pos:start="193:29" pos:end="193:29">x</name> <operator pos:start="193:31" pos:end="193:31">&lt;</operator> <name pos:start="193:33" pos:end="193:37">width</name></expr>;</condition> <incr pos:start="193:40" pos:end="193:46"><expr pos:start="193:40" pos:end="193:46"><name pos:start="193:40" pos:end="193:40">x</name> <operator pos:start="193:42" pos:end="193:43">+=</operator> <literal type="number" pos:start="193:45" pos:end="193:46">16</literal></expr></incr>)</control> <block pos:start="193:49" pos:end="215:17">{<block_content pos:start="195:21" pos:end="213:21">

                    <expr_stmt pos:start="195:21" pos:end="201:79"><expr pos:start="195:21" pos:end="201:78"><name pos:start="195:21" pos:end="195:26">result</name> <operator pos:start="195:28" pos:end="195:28">=</operator> <call pos:start="195:30" pos:end="201:78"><name pos:start="195:30" pos:end="195:52">svq1_decode_delta_block</name><argument_list pos:start="195:53" pos:end="201:78">(<argument pos:start="195:54" pos:end="195:58"><expr pos:start="195:54" pos:end="195:58"><name pos:start="195:54" pos:end="195:58">avctx</name></expr></argument>, <argument pos:start="195:61" pos:end="195:68"><expr pos:start="195:61" pos:end="195:68"><operator pos:start="195:61" pos:end="195:61">&amp;</operator><name pos:start="195:62" pos:end="195:68"><name pos:start="195:62" pos:end="195:62">s</name><operator pos:start="195:63" pos:end="195:64">-&gt;</operator><name pos:start="195:65" pos:end="195:68">hdsp</name></name></expr></argument>,

                                                     <argument pos:start="197:54" pos:end="197:59"><expr pos:start="197:54" pos:end="197:59"><operator pos:start="197:54" pos:end="197:54">&amp;</operator><name pos:start="197:55" pos:end="197:59"><name pos:start="197:55" pos:end="197:55">s</name><operator pos:start="197:56" pos:end="197:57">-&gt;</operator><name pos:start="197:58" pos:end="197:59">gb</name></name></expr></argument>, <argument pos:start="197:62" pos:end="197:72"><expr pos:start="197:62" pos:end="197:72"><operator pos:start="197:62" pos:end="197:62">&amp;</operator><name pos:start="197:63" pos:end="197:72"><name pos:start="197:63" pos:end="197:69">current</name><index pos:start="197:70" pos:end="197:72">[<expr pos:start="197:71" pos:end="197:71"><name pos:start="197:71" pos:end="197:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="199:54" pos:end="199:61"><expr pos:start="199:54" pos:end="199:61"><name pos:start="199:54" pos:end="199:61">previous</name></expr></argument>, <argument pos:start="199:64" pos:end="199:71"><expr pos:start="199:64" pos:end="199:71"><name pos:start="199:64" pos:end="199:71">linesize</name></expr></argument>,

                                                     <argument pos:start="201:54" pos:end="201:56"><expr pos:start="201:54" pos:end="201:56"><name pos:start="201:54" pos:end="201:56">pmv</name></expr></argument>, <argument pos:start="201:59" pos:end="201:59"><expr pos:start="201:59" pos:end="201:59"><name pos:start="201:59" pos:end="201:59">x</name></expr></argument>, <argument pos:start="201:62" pos:end="201:62"><expr pos:start="201:62" pos:end="201:62"><name pos:start="201:62" pos:end="201:62">y</name></expr></argument>, <argument pos:start="201:65" pos:end="201:69"><expr pos:start="201:65" pos:end="201:69"><name pos:start="201:65" pos:end="201:69">width</name></expr></argument>, <argument pos:start="201:72" pos:end="201:77"><expr pos:start="201:72" pos:end="201:77"><name pos:start="201:72" pos:end="201:77">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="203:21" pos:end="213:21"><if pos:start="203:21" pos:end="213:21">if <condition pos:start="203:24" pos:end="203:36">(<expr pos:start="203:25" pos:end="203:35"><name pos:start="203:25" pos:end="203:30">result</name> <operator pos:start="203:32" pos:end="203:33">!=</operator> <literal type="number" pos:start="203:35" pos:end="203:35">0</literal></expr>)</condition> <block pos:start="203:38" pos:end="213:21">{<block_content pos:start="205:25" pos:end="211:33">

                        <expr_stmt pos:start="205:25" pos:end="209:40"><expr pos:start="205:25" pos:end="209:39"><call pos:start="205:25" pos:end="209:39"><name pos:start="205:25" pos:end="205:31">av_dlog</name><argument_list pos:start="205:32" pos:end="209:39">(<argument pos:start="205:33" pos:end="205:37"><expr pos:start="205:33" pos:end="205:37"><name pos:start="205:33" pos:end="205:37">avctx</name></expr></argument>,

                                <argument pos:start="207:33" pos:end="207:71"><expr pos:start="207:33" pos:end="207:71"><literal type="string" pos:start="207:33" pos:end="207:71">"Error in svq1_decode_delta_block %i\n"</literal></expr></argument>,

                                <argument pos:start="209:33" pos:end="209:38"><expr pos:start="209:33" pos:end="209:38"><name pos:start="209:33" pos:end="209:38">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="211:25" pos:end="211:33">goto <name pos:start="211:30" pos:end="211:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="219:17" pos:end="221:33"><expr pos:start="219:17" pos:end="221:32"><name pos:start="219:17" pos:end="219:22"><name pos:start="219:17" pos:end="219:19">pmv</name><index pos:start="219:20" pos:end="219:22">[<expr pos:start="219:21" pos:end="219:21"><literal type="number" pos:start="219:21" pos:end="219:21">0</literal></expr>]</index></name><operator pos:start="219:23" pos:end="219:23">.</operator><name pos:start="219:24" pos:end="219:24">x</name>     <operator pos:start="219:30" pos:end="219:30">=</operator>

                    <name pos:start="221:21" pos:end="221:26"><name pos:start="221:21" pos:end="221:23">pmv</name><index pos:start="221:24" pos:end="221:26">[<expr pos:start="221:25" pos:end="221:25"><literal type="number" pos:start="221:25" pos:end="221:25">0</literal></expr>]</index></name><operator pos:start="221:27" pos:end="221:27">.</operator><name pos:start="221:28" pos:end="221:28">y</name> <operator pos:start="221:30" pos:end="221:30">=</operator> <literal type="number" pos:start="221:32" pos:end="221:32">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="225:17" pos:end="225:41"><expr pos:start="225:17" pos:end="225:40"><name pos:start="225:17" pos:end="225:23">current</name> <operator pos:start="225:25" pos:end="225:26">+=</operator> <literal type="number" pos:start="225:28" pos:end="225:29">16</literal> <operator pos:start="225:31" pos:end="225:31">*</operator> <name pos:start="225:33" pos:end="225:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="235:5" pos:end="245:5"><if pos:start="235:5" pos:end="245:5">if <condition pos:start="235:8" pos:end="235:19">(<expr pos:start="235:9" pos:end="235:18"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:18"><name pos:start="235:10" pos:end="235:10">s</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:18">nonref</name></name></expr>)</condition> <block pos:start="235:21" pos:end="245:5">{<block_content pos:start="237:9" pos:end="243:21">

        <expr_stmt pos:start="237:9" pos:end="237:32"><expr pos:start="237:9" pos:end="237:31"><call pos:start="237:9" pos:end="237:31"><name pos:start="237:9" pos:end="237:22">av_frame_unref</name><argument_list pos:start="237:23" pos:end="237:31">(<argument pos:start="237:24" pos:end="237:30"><expr pos:start="237:24" pos:end="237:30"><name pos:start="237:24" pos:end="237:30"><name pos:start="237:24" pos:end="237:24">s</name><operator pos:start="237:25" pos:end="237:26">-&gt;</operator><name pos:start="237:27" pos:end="237:30">prev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:44"><expr pos:start="239:9" pos:end="239:43"><name pos:start="239:9" pos:end="239:14">result</name> <operator pos:start="239:16" pos:end="239:16">=</operator> <call pos:start="239:18" pos:end="239:43"><name pos:start="239:18" pos:end="239:29">av_frame_ref</name><argument_list pos:start="239:30" pos:end="239:43">(<argument pos:start="239:31" pos:end="239:37"><expr pos:start="239:31" pos:end="239:37"><name pos:start="239:31" pos:end="239:37"><name pos:start="239:31" pos:end="239:31">s</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:37">prev</name></name></expr></argument>, <argument pos:start="239:40" pos:end="239:42"><expr pos:start="239:40" pos:end="239:42"><name pos:start="239:40" pos:end="239:42">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="243:21"><if pos:start="241:9" pos:end="243:21">if <condition pos:start="241:12" pos:end="241:23">(<expr pos:start="241:13" pos:end="241:22"><name pos:start="241:13" pos:end="241:18">result</name> <operator pos:start="241:20" pos:end="241:20">&lt;</operator> <literal type="number" pos:start="241:22" pos:end="241:22">0</literal></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:21"><block_content pos:start="243:13" pos:end="243:21">

            <goto pos:start="243:13" pos:end="243:21">goto <name pos:start="243:18" pos:end="243:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:19"><expr pos:start="249:5" pos:end="249:18"><operator pos:start="249:5" pos:end="249:5">*</operator><name pos:start="249:6" pos:end="249:14">got_frame</name> <operator pos:start="249:16" pos:end="249:16">=</operator> <literal type="number" pos:start="249:18" pos:end="249:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:26"><expr pos:start="251:5" pos:end="251:25"><name pos:start="251:5" pos:end="251:10">result</name>     <operator pos:start="251:16" pos:end="251:16">=</operator> <name pos:start="251:18" pos:end="251:25">buf_size</name></expr>;</expr_stmt>



<label pos:start="255:1" pos:end="255:4"><name pos:start="255:1" pos:end="255:3">err</name>:</label>

    <expr_stmt pos:start="257:5" pos:end="257:17"><expr pos:start="257:5" pos:end="257:16"><call pos:start="257:5" pos:end="257:16"><name pos:start="257:5" pos:end="257:11">av_free</name><argument_list pos:start="257:12" pos:end="257:16">(<argument pos:start="257:13" pos:end="257:15"><expr pos:start="257:13" pos:end="257:15"><name pos:start="257:13" pos:end="257:15">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="259:5" pos:end="259:18">return <expr pos:start="259:12" pos:end="259:17"><name pos:start="259:12" pos:end="259:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
