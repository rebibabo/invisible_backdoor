<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18315.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">qmp_netdev_del</name><parameter_list pos:start="1:20" pos:end="1:49">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">id</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:41">Error</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier><modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:74">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetClientState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">nc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:6">nc</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:29"><name pos:start="9:10" pos:end="9:25">qemu_find_netdev</name><argument_list pos:start="9:26" pos:end="9:29">(<argument pos:start="9:27" pos:end="9:28"><expr pos:start="9:27" pos:end="9:28"><name pos:start="9:27" pos:end="9:28">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:11">nc</name></expr>)</condition> <block pos:start="11:14" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:17">error_set</name><argument_list pos:start="13:18" pos:end="13:50">(<argument pos:start="13:19" pos:end="13:22"><expr pos:start="13:19" pos:end="13:22"><name pos:start="13:19" pos:end="13:22">errp</name></expr></argument>, <argument pos:start="13:25" pos:end="13:45"><expr pos:start="13:25" pos:end="13:45"><name pos:start="13:25" pos:end="13:45">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="13:48" pos:end="13:49"><expr pos:start="13:48" pos:end="13:49"><name pos:start="13:48" pos:end="13:49">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:23">qemu_del_net_client</name><argument_list pos:start="21:24" pos:end="21:27">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><name pos:start="21:25" pos:end="21:26">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:74"><expr pos:start="23:5" pos:end="23:73"><call pos:start="23:5" pos:end="23:73"><name pos:start="23:5" pos:end="23:17">qemu_opts_del</name><argument_list pos:start="23:18" pos:end="23:73">(<argument pos:start="23:19" pos:end="23:72"><expr pos:start="23:19" pos:end="23:72"><call pos:start="23:19" pos:end="23:72"><name pos:start="23:19" pos:end="23:32">qemu_opts_find</name><argument_list pos:start="23:33" pos:end="23:72">(<argument pos:start="23:34" pos:end="23:67"><expr pos:start="23:34" pos:end="23:67"><call pos:start="23:34" pos:end="23:67"><name pos:start="23:34" pos:end="23:51">qemu_find_opts_err</name><argument_list pos:start="23:52" pos:end="23:67">(<argument pos:start="23:53" pos:end="23:60"><expr pos:start="23:53" pos:end="23:60"><literal type="string" pos:start="23:53" pos:end="23:60">"netdev"</literal></expr></argument>, <argument pos:start="23:63" pos:end="23:66"><expr pos:start="23:63" pos:end="23:66"><name pos:start="23:63" pos:end="23:66">errp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:70" pos:end="23:71"><expr pos:start="23:70" pos:end="23:71"><name pos:start="23:70" pos:end="23:71">id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
