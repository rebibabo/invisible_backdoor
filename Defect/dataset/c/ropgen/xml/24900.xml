<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24900.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">jacosub_read_header</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVBPrint</name></type> <name pos:start="5:14" pos:end="5:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:13">line</name><index pos:start="9:14" pos:end="9:31">[<expr pos:start="9:15" pos:end="9:30"><name pos:start="9:15" pos:end="9:30">JSS_MAX_LINESIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">JACOsubContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:27">jacosub</name> <init pos:start="11:29" pos:end="11:42">= <expr pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">shift_set</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="13:24" pos:end="13:54">// only the first shift matters</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">merge_line</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">AVStream</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:16">st</name> <init pos:start="21:18" pos:end="21:47">= <expr pos:start="21:20" pos:end="21:47"><call pos:start="21:20" pos:end="21:47"><name pos:start="21:20" pos:end="21:38">avformat_new_stream</name><argument_list pos:start="21:39" pos:end="21:47">(<argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">s</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:23">avpriv_set_pts_info</name><argument_list pos:start="27:24" pos:end="27:39">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">st</name></expr></argument>, <argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><literal type="number" pos:start="27:29" pos:end="27:30">64</literal></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><literal type="number" pos:start="27:36" pos:end="27:38">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">codec</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">codec_type</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:49">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:6">st</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:13">codec</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">codec_id</name></name>   <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:47">AV_CODEC_ID_JACOSUB</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:11">jacosub</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:20">timeres</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:25">30</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><call pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:18">av_bprint_init</name><argument_list pos:start="39:19" pos:end="39:68">(<argument pos:start="39:20" pos:end="39:26"><expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">&amp;</operator><name pos:start="39:21" pos:end="39:26">header</name></expr></argument>, <argument pos:start="39:29" pos:end="39:61"><expr pos:start="39:29" pos:end="39:61"><literal type="number" pos:start="39:29" pos:end="39:33">1024</literal><operator pos:start="39:33" pos:end="39:33">+</operator><name pos:start="39:34" pos:end="39:61">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>, <argument pos:start="39:64" pos:end="39:67"><expr pos:start="39:64" pos:end="39:67"><literal type="number" pos:start="39:64" pos:end="39:67">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="43:5" pos:end="149:5">while <condition pos:start="43:11" pos:end="43:26">(<expr pos:start="43:12" pos:end="43:25"><operator pos:start="43:12" pos:end="43:12">!</operator><call pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:21">avio_feof</name><argument_list pos:start="43:22" pos:end="43:25">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:28" pos:end="149:5">{<block_content pos:start="45:9" pos:end="147:9">

        <decl_stmt pos:start="45:9" pos:end="45:20"><decl pos:start="45:9" pos:end="45:19"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:19">cmd_len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:29"><decl pos:start="47:9" pos:end="47:28"><type pos:start="47:9" pos:end="47:20"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:18">char</name> <modifier pos:start="47:20" pos:end="47:20">*</modifier></type><name pos:start="47:21" pos:end="47:21">p</name> <init pos:start="47:23" pos:end="47:28">= <expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">line</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:36"><decl pos:start="49:9" pos:end="49:35"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:19">pos</name> <init pos:start="49:21" pos:end="49:35">= <expr pos:start="49:23" pos:end="49:35"><call pos:start="49:23" pos:end="49:35"><name pos:start="49:23" pos:end="49:31">avio_tell</name><argument_list pos:start="49:32" pos:end="49:35">(<argument pos:start="49:33" pos:end="49:34"><expr pos:start="49:33" pos:end="49:34"><name pos:start="49:33" pos:end="49:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:54"><decl pos:start="51:9" pos:end="51:53"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:15">len</name> <init pos:start="51:17" pos:end="51:53">= <expr pos:start="51:19" pos:end="51:53"><call pos:start="51:19" pos:end="51:53"><name pos:start="51:19" pos:end="51:29">ff_get_line</name><argument_list pos:start="51:30" pos:end="51:53">(<argument pos:start="51:31" pos:end="51:32"><expr pos:start="51:31" pos:end="51:32"><name pos:start="51:31" pos:end="51:32">pb</name></expr></argument>, <argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">line</name></expr></argument>, <argument pos:start="51:41" pos:end="51:52"><expr pos:start="51:41" pos:end="51:52"><sizeof pos:start="51:41" pos:end="51:52">sizeof<argument_list pos:start="51:47" pos:end="51:52">(<argument pos:start="51:48" pos:end="51:51"><expr pos:start="51:48" pos:end="51:51"><name pos:start="51:48" pos:end="51:51">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:9">p</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:31">jss_skip_whitespace</name><argument_list pos:start="55:32" pos:end="55:34">(<argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="59:9" pos:end="59:30">/* queue timed line */</comment>

        <if_stmt pos:start="61:9" pos:end="79:9"><if pos:start="61:9" pos:end="79:9">if <condition pos:start="61:12" pos:end="61:40">(<expr pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:22">merge_line</name> <operator pos:start="61:24" pos:end="61:25">||</operator> <call pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:36">timed_line</name><argument_list pos:start="61:37" pos:end="61:39">(<argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:42" pos:end="79:9">{<block_content pos:start="63:13" pos:end="77:21">

            <decl_stmt pos:start="63:13" pos:end="63:26"><decl pos:start="63:13" pos:end="63:25"><type pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:20">AVPacket</name> <modifier pos:start="63:22" pos:end="63:22">*</modifier></type><name pos:start="63:23" pos:end="63:25">sub</name></decl>;</decl_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:80"><expr pos:start="67:13" pos:end="67:79"><name pos:start="67:13" pos:end="67:15">sub</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:79"><name pos:start="67:19" pos:end="67:43">ff_subtitles_queue_insert</name><argument_list pos:start="67:44" pos:end="67:79">(<argument pos:start="67:45" pos:end="67:55"><expr pos:start="67:45" pos:end="67:55"><operator pos:start="67:45" pos:end="67:45">&amp;</operator><name pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:52">jacosub</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:55">q</name></name></expr></argument>, <argument pos:start="67:58" pos:end="67:61"><expr pos:start="67:58" pos:end="67:61"><name pos:start="67:58" pos:end="67:61">line</name></expr></argument>, <argument pos:start="67:64" pos:end="67:66"><expr pos:start="67:64" pos:end="67:66"><name pos:start="67:64" pos:end="67:66">len</name></expr></argument>, <argument pos:start="67:69" pos:end="67:78"><expr pos:start="67:69" pos:end="67:78"><name pos:start="67:69" pos:end="67:78">merge_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="71:39"><if pos:start="69:13" pos:end="71:39">if <condition pos:start="69:16" pos:end="69:21">(<expr pos:start="69:17" pos:end="69:20"><operator pos:start="69:17" pos:end="69:17">!</operator><name pos:start="69:18" pos:end="69:20">sub</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:39"><block_content pos:start="71:17" pos:end="71:39">

                <return pos:start="71:17" pos:end="71:39">return <expr pos:start="71:24" pos:end="71:38"><call pos:start="71:24" pos:end="71:38"><name pos:start="71:24" pos:end="71:30">AVERROR</name><argument_list pos:start="71:31" pos:end="71:38">(<argument pos:start="71:32" pos:end="71:37"><expr pos:start="71:32" pos:end="71:37"><name pos:start="71:32" pos:end="71:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:15">sub</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:20">pos</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:26">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:22">merge_line</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:28">len</name> <operator pos:start="75:30" pos:end="75:30">&gt;</operator> <literal type="number" pos:start="75:32" pos:end="75:32">1</literal> <operator pos:start="75:34" pos:end="75:35">&amp;&amp;</operator> <operator pos:start="75:37" pos:end="75:37">!</operator><call pos:start="75:38" pos:end="75:67"><name pos:start="75:38" pos:end="75:43">strcmp</name><argument_list pos:start="75:44" pos:end="75:67">(<argument pos:start="75:45" pos:end="75:58"><expr pos:start="75:45" pos:end="75:58"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:58"><name pos:start="75:46" pos:end="75:49">line</name><index pos:start="75:50" pos:end="75:58">[<expr pos:start="75:51" pos:end="75:57"><name pos:start="75:51" pos:end="75:53">len</name> <operator pos:start="75:55" pos:end="75:55">-</operator> <literal type="number" pos:start="75:57" pos:end="75:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:61" pos:end="75:66"><expr pos:start="75:61" pos:end="75:66"><literal type="string" pos:start="75:61" pos:end="75:66">"\\\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="77:13" pos:end="77:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:69">/* skip all non-compiler commands and focus on the command */</comment>

        <if_stmt pos:start="85:9" pos:end="87:21"><if pos:start="85:9" pos:end="87:21">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><operator pos:start="85:13" pos:end="85:13">*</operator><name pos:start="85:14" pos:end="85:14">p</name> <operator pos:start="85:16" pos:end="85:17">!=</operator> <literal type="char" pos:start="85:19" pos:end="85:21">'#'</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:21"><block_content pos:start="87:13" pos:end="87:21">

            <continue pos:start="87:13" pos:end="87:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:12"><expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:9">p</name><operator pos:start="89:10" pos:end="89:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:9">i</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <call pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:23">get_jss_cmd</name><argument_list pos:start="91:24" pos:end="91:29">(<argument pos:start="91:25" pos:end="91:28"><expr pos:start="91:25" pos:end="91:28"><name pos:start="91:25" pos:end="91:28"><name pos:start="91:25" pos:end="91:25">p</name><index pos:start="91:26" pos:end="91:28">[<expr pos:start="91:27" pos:end="91:27"><literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:21"><if pos:start="93:9" pos:end="95:21">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:13">i</name> <operator pos:start="93:15" pos:end="93:16">==</operator> <operator pos:start="93:18" pos:end="93:18">-</operator><literal type="number" pos:start="93:19" pos:end="93:19">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:21"><block_content pos:start="95:13" pos:end="95:21">

            <continue pos:start="95:13" pos:end="95:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:35">/* trim command + spaces */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:15">cmd_len</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:24">strlen</name><argument_list pos:start="101:25" pos:end="101:33">(<argument pos:start="101:26" pos:end="101:32"><expr pos:start="101:26" pos:end="101:32"><name pos:start="101:26" pos:end="101:32"><name pos:start="101:26" pos:end="101:29">cmds</name><index pos:start="101:30" pos:end="101:32">[<expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:16"><if pos:start="103:9" pos:end="105:25">if <condition pos:start="103:12" pos:end="103:53">(<expr pos:start="103:13" pos:end="103:52"><call pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:26">av_strncasecmp</name><argument_list pos:start="103:27" pos:end="103:47">(<argument pos:start="103:28" pos:end="103:28"><expr pos:start="103:28" pos:end="103:28"><name pos:start="103:28" pos:end="103:28">p</name></expr></argument>, <argument pos:start="103:31" pos:end="103:37"><expr pos:start="103:31" pos:end="103:37"><name pos:start="103:31" pos:end="103:37"><name pos:start="103:31" pos:end="103:34">cmds</name><index pos:start="103:35" pos:end="103:37">[<expr pos:start="103:36" pos:end="103:36"><name pos:start="103:36" pos:end="103:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="103:40" pos:end="103:46"><expr pos:start="103:40" pos:end="103:46"><name pos:start="103:40" pos:end="103:46">cmd_len</name></expr></argument>)</argument_list></call> <operator pos:start="103:49" pos:end="103:50">==</operator> <literal type="number" pos:start="103:52" pos:end="103:52">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:25"><block_content pos:start="105:13" pos:end="105:25">

            <expr_stmt pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:13">p</name> <operator pos:start="105:15" pos:end="105:16">+=</operator> <name pos:start="105:18" pos:end="105:24">cmd_len</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="107:9" pos:end="109:16">else<block type="pseudo" pos:start="109:13" pos:end="109:16"><block_content pos:start="109:13" pos:end="109:16">

            <expr_stmt pos:start="109:13" pos:end="109:16"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:13">p</name><operator pos:start="109:14" pos:end="109:15">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:9">p</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <call pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:31">jss_skip_whitespace</name><argument_list pos:start="111:32" pos:end="111:34">(<argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><name pos:start="111:33" pos:end="111:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:59">/* handle commands which affect the whole script */</comment>

        <switch pos:start="117:9" pos:end="147:9">switch <condition pos:start="117:16" pos:end="117:27">(<expr pos:start="117:17" pos:end="117:26"><name pos:start="117:17" pos:end="117:26"><name pos:start="117:17" pos:end="117:20">cmds</name><index pos:start="117:21" pos:end="117:23">[<expr pos:start="117:22" pos:end="117:22"><name pos:start="117:22" pos:end="117:22">i</name></expr>]</index><index pos:start="117:24" pos:end="117:26">[<expr pos:start="117:25" pos:end="117:25"><literal type="number" pos:start="117:25" pos:end="117:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="117:29" pos:end="147:9">{<block_content pos:start="119:9" pos:end="145:18">

        <case pos:start="119:9" pos:end="119:17">case <expr pos:start="119:14" pos:end="119:16"><literal type="char" pos:start="119:14" pos:end="119:16">'S'</literal></expr>:</case> <comment type="line" pos:start="119:19" pos:end="119:61">// SHIFT command affect the whole script...</comment>

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:27">(<expr pos:start="121:17" pos:end="121:26"><operator pos:start="121:17" pos:end="121:17">!</operator><name pos:start="121:18" pos:end="121:26">shift_set</name></expr>)</condition> <block pos:start="121:29" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:30">

                <expr_stmt pos:start="123:17" pos:end="123:64"><expr pos:start="123:17" pos:end="123:63"><name pos:start="123:17" pos:end="123:30"><name pos:start="123:17" pos:end="123:23">jacosub</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:30">shift</name></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <call pos:start="123:34" pos:end="123:63"><name pos:start="123:34" pos:end="123:42">get_shift</name><argument_list pos:start="123:43" pos:end="123:63">(<argument pos:start="123:44" pos:end="123:59"><expr pos:start="123:44" pos:end="123:59"><name pos:start="123:44" pos:end="123:59"><name pos:start="123:44" pos:end="123:50">jacosub</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:59">timeres</name></name></expr></argument>, <argument pos:start="123:62" pos:end="123:62"><expr pos:start="123:62" pos:end="123:62"><name pos:start="123:62" pos:end="123:62">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:30"><expr pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:25">shift_set</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <literal type="number" pos:start="125:29" pos:end="125:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:44"><expr pos:start="129:13" pos:end="129:43"><call pos:start="129:13" pos:end="129:43"><name pos:start="129:13" pos:end="129:22">av_bprintf</name><argument_list pos:start="129:23" pos:end="129:43">(<argument pos:start="129:24" pos:end="129:30"><expr pos:start="129:24" pos:end="129:30"><operator pos:start="129:24" pos:end="129:24">&amp;</operator><name pos:start="129:25" pos:end="129:30">header</name></expr></argument>, <argument pos:start="129:33" pos:end="129:39"><expr pos:start="129:33" pos:end="129:39"><literal type="string" pos:start="129:33" pos:end="129:39">"#S %s"</literal></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><name pos:start="129:42" pos:end="129:42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:17">case <expr pos:start="133:14" pos:end="133:16"><literal type="char" pos:start="133:14" pos:end="133:16">'T'</literal></expr>:</case> <comment type="line" pos:start="133:19" pos:end="133:56">// ...but must be placed after TIMERES</comment>

            <expr_stmt pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:50"><name pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:19">jacosub</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:28">timeres</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <call pos:start="135:32" pos:end="135:50"><name pos:start="135:32" pos:end="135:37">strtol</name><argument_list pos:start="135:38" pos:end="135:50">(<argument pos:start="135:39" pos:end="135:39"><expr pos:start="135:39" pos:end="135:39"><name pos:start="135:39" pos:end="135:39">p</name></expr></argument>, <argument pos:start="135:42" pos:end="135:45"><expr pos:start="135:42" pos:end="135:45"><name pos:start="135:42" pos:end="135:45">NULL</name></expr></argument>, <argument pos:start="135:48" pos:end="135:49"><expr pos:start="135:48" pos:end="135:49"><literal type="number" pos:start="135:48" pos:end="135:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="143:48"><if pos:start="137:13" pos:end="139:38">if <condition pos:start="137:16" pos:end="137:34">(<expr pos:start="137:17" pos:end="137:33"><operator pos:start="137:17" pos:end="137:17">!</operator><name pos:start="137:18" pos:end="137:33"><name pos:start="137:18" pos:end="137:24">jacosub</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:33">timeres</name></name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:38"><block_content pos:start="139:17" pos:end="139:38">

                <expr_stmt pos:start="139:17" pos:end="139:38"><expr pos:start="139:17" pos:end="139:37"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:23">jacosub</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:32">timeres</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <literal type="number" pos:start="139:36" pos:end="139:37">30</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="141:13" pos:end="143:48">else<block type="pseudo" pos:start="143:17" pos:end="143:48"><block_content pos:start="143:17" pos:end="143:48">

                <expr_stmt pos:start="143:17" pos:end="143:48"><expr pos:start="143:17" pos:end="143:47"><call pos:start="143:17" pos:end="143:47"><name pos:start="143:17" pos:end="143:26">av_bprintf</name><argument_list pos:start="143:27" pos:end="143:47">(<argument pos:start="143:28" pos:end="143:34"><expr pos:start="143:28" pos:end="143:34"><operator pos:start="143:28" pos:end="143:28">&amp;</operator><name pos:start="143:29" pos:end="143:34">header</name></expr></argument>, <argument pos:start="143:37" pos:end="143:43"><expr pos:start="143:37" pos:end="143:43"><literal type="string" pos:start="143:37" pos:end="143:43">"#T %s"</literal></expr></argument>, <argument pos:start="143:46" pos:end="143:46"><expr pos:start="143:46" pos:end="143:46"><name pos:start="143:46" pos:end="143:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <comment type="block" pos:start="153:5" pos:end="153:55">/* general/essential directives in the extradata */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:57"><expr pos:start="155:5" pos:end="155:56"><name pos:start="155:5" pos:end="155:7">ret</name> <operator pos:start="155:9" pos:end="155:9">=</operator> <call pos:start="155:11" pos:end="155:56"><name pos:start="155:11" pos:end="155:36">avpriv_bprint_to_extradata</name><argument_list pos:start="155:37" pos:end="155:56">(<argument pos:start="155:38" pos:end="155:46"><expr pos:start="155:38" pos:end="155:46"><name pos:start="155:38" pos:end="155:46"><name pos:start="155:38" pos:end="155:39">st</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:46">codec</name></name></expr></argument>, <argument pos:start="155:49" pos:end="155:55"><expr pos:start="155:49" pos:end="155:55"><operator pos:start="155:49" pos:end="155:49">&amp;</operator><name pos:start="155:50" pos:end="155:55">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:19"><if pos:start="157:5" pos:end="159:19">if <condition pos:start="157:8" pos:end="157:16">(<expr pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:11">ret</name> <operator pos:start="157:13" pos:end="157:13">&lt;</operator> <literal type="number" pos:start="157:15" pos:end="157:15">0</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:19"><block_content pos:start="159:9" pos:end="159:19">

        <return pos:start="159:9" pos:end="159:19">return <expr pos:start="159:16" pos:end="159:18"><name pos:start="159:16" pos:end="159:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="165:31">/* SHIFT and TIMERES affect the whole script so packet timing can only be

     * done in a second pass */</comment>

    <for pos:start="167:5" pos:end="173:5">for <control pos:start="167:9" pos:end="167:44">(<init pos:start="167:10" pos:end="167:15"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">i</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>;</init> <condition pos:start="167:17" pos:end="167:39"><expr pos:start="167:17" pos:end="167:38"><name pos:start="167:17" pos:end="167:17">i</name> <operator pos:start="167:19" pos:end="167:19">&lt;</operator> <name pos:start="167:21" pos:end="167:38"><name pos:start="167:21" pos:end="167:27">jacosub</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:30">q</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:38">nb_subs</name></name></expr>;</condition> <incr pos:start="167:41" pos:end="167:43"><expr pos:start="167:41" pos:end="167:43"><name pos:start="167:41" pos:end="167:41">i</name><operator pos:start="167:42" pos:end="167:43">++</operator></expr></incr>)</control> <block pos:start="167:46" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:63">

        <decl_stmt pos:start="169:9" pos:end="169:44"><decl pos:start="169:9" pos:end="169:43"><type pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:16">AVPacket</name> <modifier pos:start="169:18" pos:end="169:18">*</modifier></type><name pos:start="169:19" pos:end="169:21">sub</name> <init pos:start="169:23" pos:end="169:43">= <expr pos:start="169:25" pos:end="169:43"><operator pos:start="169:25" pos:end="169:25">&amp;</operator><name pos:start="169:26" pos:end="169:43"><name pos:start="169:26" pos:end="169:32">jacosub</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:35">q</name><operator pos:start="169:36" pos:end="169:36">.</operator><name pos:start="169:37" pos:end="169:40">subs</name><index pos:start="169:41" pos:end="169:43">[<expr pos:start="169:42" pos:end="169:42"><name pos:start="169:42" pos:end="169:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:63"><expr pos:start="171:9" pos:end="171:62"><call pos:start="171:9" pos:end="171:62"><name pos:start="171:9" pos:end="171:15">read_ts</name><argument_list pos:start="171:16" pos:end="171:62">(<argument pos:start="171:17" pos:end="171:23"><expr pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:23">jacosub</name></expr></argument>, <argument pos:start="171:26" pos:end="171:34"><expr pos:start="171:26" pos:end="171:34"><name pos:start="171:26" pos:end="171:34"><name pos:start="171:26" pos:end="171:28">sub</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:34">data</name></name></expr></argument>, <argument pos:start="171:37" pos:end="171:45"><expr pos:start="171:37" pos:end="171:45"><operator pos:start="171:37" pos:end="171:37">&amp;</operator><name pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:40">sub</name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:45">pts</name></name></expr></argument>, <argument pos:start="171:48" pos:end="171:61"><expr pos:start="171:48" pos:end="171:61"><operator pos:start="171:48" pos:end="171:48">&amp;</operator><name pos:start="171:49" pos:end="171:61"><name pos:start="171:49" pos:end="171:51">sub</name><operator pos:start="171:52" pos:end="171:53">-&gt;</operator><name pos:start="171:54" pos:end="171:61">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="175:5" pos:end="175:45"><expr pos:start="175:5" pos:end="175:44"><call pos:start="175:5" pos:end="175:44"><name pos:start="175:5" pos:end="175:31">ff_subtitles_queue_finalize</name><argument_list pos:start="175:32" pos:end="175:44">(<argument pos:start="175:33" pos:end="175:43"><expr pos:start="175:33" pos:end="175:43"><operator pos:start="175:33" pos:end="175:33">&amp;</operator><name pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:40">jacosub</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:43">q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
