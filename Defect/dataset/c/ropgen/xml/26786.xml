<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26786.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">SocketAddress</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:37">socket_address_crumple</name><parameter_list pos:start="1:38" pos:end="1:67">(<parameter pos:start="1:39" pos:end="1:66"><decl pos:start="1:39" pos:end="1:66"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:55">SocketAddressFlat</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:66">addr_flat</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:16">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SocketAddress</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">addr</name> <init pos:start="5:25" pos:end="5:49">= <expr pos:start="5:27" pos:end="5:49"><call pos:start="5:27" pos:end="5:49"><name pos:start="5:27" pos:end="5:31">g_new</name><argument_list pos:start="5:32" pos:end="5:49">(<argument pos:start="5:33" pos:end="5:45"><expr pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:45">SocketAddress</name></expr></argument>, <argument pos:start="5:48" pos:end="5:48"><expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="53:5">switch <condition pos:start="9:12" pos:end="9:28">(<expr pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:21">addr_flat</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:27">type</name></name></expr>)</condition> <block pos:start="9:30" pos:end="53:5">{<block_content pos:start="11:5" pos:end="51:16">

    <case pos:start="11:5" pos:end="11:39">case <expr pos:start="11:10" pos:end="11:38"><name pos:start="11:10" pos:end="11:38">SOCKET_ADDRESS_FLAT_TYPE_INET</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:46"><expr pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:12">addr</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:18">type</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:45">SOCKET_ADDRESS_KIND_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="17:59"><expr pos:start="15:9" pos:end="17:58"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:12">addr</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:15">u</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:20">inet</name><operator pos:start="15:21" pos:end="15:21">.</operator><name pos:start="15:22" pos:end="15:25">data</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <call pos:start="15:29" pos:end="17:58"><name pos:start="15:29" pos:end="15:38">QAPI_CLONE</name><argument_list pos:start="15:39" pos:end="17:58">(<argument pos:start="15:40" pos:end="15:56"><expr pos:start="15:40" pos:end="15:56"><name pos:start="15:40" pos:end="15:56">InetSocketAddress</name></expr></argument>,

                                       <argument pos:start="17:40" pos:end="17:57"><expr pos:start="17:40" pos:end="17:57"><operator pos:start="17:40" pos:end="17:40">&amp;</operator><name pos:start="17:41" pos:end="17:57"><name pos:start="17:41" pos:end="17:49">addr_flat</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:52">u</name><operator pos:start="17:53" pos:end="17:53">.</operator><name pos:start="17:54" pos:end="17:57">inet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:39">case <expr pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:38">SOCKET_ADDRESS_FLAT_TYPE_UNIX</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">addr</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">type</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:45">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:63"><expr pos:start="25:9" pos:end="27:62"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:12">addr</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:15">u</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:22">q_unix</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:27">data</name></name> <operator pos:start="25:29" pos:end="25:29">=</operator> <call pos:start="25:31" pos:end="27:62"><name pos:start="25:31" pos:end="25:40">QAPI_CLONE</name><argument_list pos:start="25:41" pos:end="27:62">(<argument pos:start="25:42" pos:end="25:58"><expr pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:58">UnixSocketAddress</name></expr></argument>,

                                         <argument pos:start="27:42" pos:end="27:61"><expr pos:start="27:42" pos:end="27:61"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:61"><name pos:start="27:43" pos:end="27:51">addr_flat</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:54">u</name><operator pos:start="27:55" pos:end="27:55">.</operator><name pos:start="27:56" pos:end="27:61">q_unix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:40">case <expr pos:start="31:10" pos:end="31:39"><name pos:start="31:10" pos:end="31:39">SOCKET_ADDRESS_FLAT_TYPE_VSOCK</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">addr</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:18">type</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:46">SOCKET_ADDRESS_KIND_VSOCK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:61"><expr pos:start="35:9" pos:end="37:60"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:12">addr</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:15">u</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:21">vsock</name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:26">data</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="37:60"><name pos:start="35:30" pos:end="35:39">QAPI_CLONE</name><argument_list pos:start="35:40" pos:end="37:60">(<argument pos:start="35:41" pos:end="35:58"><expr pos:start="35:41" pos:end="35:58"><name pos:start="35:41" pos:end="35:58">VsockSocketAddress</name></expr></argument>,

                                        <argument pos:start="37:41" pos:end="37:59"><expr pos:start="37:41" pos:end="37:59"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:50">addr_flat</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:53">u</name><operator pos:start="37:54" pos:end="37:54">.</operator><name pos:start="37:55" pos:end="37:59">vsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:37">case <expr pos:start="41:10" pos:end="41:36"><name pos:start="41:10" pos:end="41:36">SOCKET_ADDRESS_FLAT_TYPE_FD</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:12">addr</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:18">type</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:43">SOCKET_ADDRESS_KIND_FD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:12">addr</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:15">u</name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:18">fd</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:23">data</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:62"><name pos:start="45:27" pos:end="45:36">QAPI_CLONE</name><argument_list pos:start="45:37" pos:end="45:62">(<argument pos:start="45:38" pos:end="45:43"><expr pos:start="45:38" pos:end="45:43"><name pos:start="45:38" pos:end="45:43">String</name></expr></argument>, <argument pos:start="45:46" pos:end="45:61"><expr pos:start="45:46" pos:end="45:61"><operator pos:start="45:46" pos:end="45:46">&amp;</operator><name pos:start="45:47" pos:end="45:61"><name pos:start="45:47" pos:end="45:55">addr_flat</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:58">u</name><operator pos:start="45:59" pos:end="45:59">.</operator><name pos:start="45:60" pos:end="45:61">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <default pos:start="49:5" pos:end="49:12">default:</default>

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><call pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:13">abort</name><argument_list pos:start="51:14" pos:end="51:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="57:5" pos:end="57:16">return <expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
