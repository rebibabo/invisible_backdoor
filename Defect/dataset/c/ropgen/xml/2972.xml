<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2972.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:51"><name pos:start="1:1" pos:end="1:19">monitor_read_memory</name> <argument_list pos:start="1:21" pos:end="3:51">(<argument pos:start="1:22" pos:end="1:36">bfd_vma memaddr</argument>, <argument pos:start="1:39" pos:end="1:54">bfd_byte *myaddr</argument>, <argument pos:start="1:57" pos:end="1:66">int length</argument>,

                     <argument pos:start="3:22" pos:end="3:50">struct disassemble_info *info</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:13">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUDebug</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:52">= <expr pos:start="7:19" pos:end="7:52"><call pos:start="7:19" pos:end="7:52"><name pos:start="7:19" pos:end="7:30">container_of</name><argument_list pos:start="7:31" pos:end="7:52">(<argument pos:start="7:32" pos:end="7:35"><expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">info</name></expr></argument>, <argument pos:start="7:38" pos:end="7:45"><expr pos:start="7:38" pos:end="7:45"><name pos:start="7:38" pos:end="7:45">CPUDebug</name></expr></argument>, <argument pos:start="7:48" pos:end="7:51"><expr pos:start="7:48" pos:end="7:51"><name pos:start="7:48" pos:end="7:51">info</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:33">monitor_disas_is_physical</name></expr>)</condition> <block pos:start="11:36" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:58">

        <expr_stmt pos:start="13:9" pos:end="13:58"><expr pos:start="13:9" pos:end="13:57"><call pos:start="13:9" pos:end="13:57"><name pos:start="13:9" pos:end="13:32">cpu_physical_memory_read</name><argument_list pos:start="13:33" pos:end="13:57">(<argument pos:start="13:34" pos:end="13:40"><expr pos:start="13:34" pos:end="13:40"><name pos:start="13:34" pos:end="13:40">memaddr</name></expr></argument>, <argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48">myaddr</name></expr></argument>, <argument pos:start="13:51" pos:end="13:56"><expr pos:start="13:51" pos:end="13:56"><name pos:start="13:51" pos:end="13:56">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:64">

        <expr_stmt pos:start="17:9" pos:end="17:64"><expr pos:start="17:9" pos:end="17:63"><call pos:start="17:9" pos:end="17:63"><name pos:start="17:9" pos:end="17:27">cpu_memory_rw_debug</name><argument_list pos:start="17:28" pos:end="17:63">(<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:34">cpu</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:43"><expr pos:start="17:37" pos:end="17:43"><name pos:start="17:37" pos:end="17:43">memaddr</name></expr></argument>, <argument pos:start="17:46" pos:end="17:51"><expr pos:start="17:46" pos:end="17:51"><name pos:start="17:46" pos:end="17:51">myaddr</name></expr></argument>, <argument pos:start="17:54" pos:end="17:59"><expr pos:start="17:54" pos:end="17:59"><name pos:start="17:54" pos:end="17:59">length</name></expr></argument>, <argument pos:start="17:62" pos:end="17:62"><expr pos:start="17:62" pos:end="17:62"><literal type="number" pos:start="17:62" pos:end="17:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
