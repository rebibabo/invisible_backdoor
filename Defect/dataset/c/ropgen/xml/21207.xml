<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21207.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dump_regs</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:32">TCGContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">TCGTemp</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:15">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:16"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:16">[<expr pos:start="9:14" pos:end="9:15"><literal type="number" pos:start="9:14" pos:end="9:15">64</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="55:5">for<control pos:start="13:8" pos:end="13:36">(<init pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">i</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</init> <condition pos:start="13:16" pos:end="13:31"><expr pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:16">i</name> <operator pos:start="13:18" pos:end="13:18">&lt;</operator> <name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:30">nb_temps</name></name></expr>;</condition> <incr pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:33">i</name><operator pos:start="13:34" pos:end="13:35">++</operator></expr></incr>)</control> <block pos:start="13:38" pos:end="55:5">{<block_content pos:start="15:9" pos:end="53:21">

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:10">ts</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:25"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:22">temps</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:72"><expr pos:start="17:9" pos:end="17:71"><call pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="17:71">(<argument pos:start="17:16" pos:end="17:25"><expr pos:start="17:16" pos:end="17:25"><literal type="string" pos:start="17:16" pos:end="17:25">"  %10s: "</literal></expr></argument>, <argument pos:start="17:28" pos:end="17:70"><expr pos:start="17:28" pos:end="17:70"><call pos:start="17:28" pos:end="17:70"><name pos:start="17:28" pos:end="17:46">tcg_get_arg_str_idx</name><argument_list pos:start="17:47" pos:end="17:70">(<argument pos:start="17:48" pos:end="17:48"><expr pos:start="17:48" pos:end="17:48"><name pos:start="17:48" pos:end="17:48">s</name></expr></argument>, <argument pos:start="17:51" pos:end="17:53"><expr pos:start="17:51" pos:end="17:53"><name pos:start="17:51" pos:end="17:53">buf</name></expr></argument>, <argument pos:start="17:56" pos:end="17:66"><expr pos:start="17:56" pos:end="17:66"><sizeof pos:start="17:56" pos:end="17:66">sizeof<argument_list pos:start="17:62" pos:end="17:66">(<argument pos:start="17:63" pos:end="17:65"><expr pos:start="17:63" pos:end="17:65"><name pos:start="17:63" pos:end="17:65">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:69" pos:end="17:69"><expr pos:start="17:69" pos:end="17:69"><name pos:start="17:69" pos:end="17:69">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="19:9" pos:end="51:9">switch<condition pos:start="19:15" pos:end="19:28">(<expr pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:17">ts</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:27">val_type</name></name></expr>)</condition> <block pos:start="19:30" pos:end="51:9">{<block_content pos:start="21:9" pos:end="49:18">

        <case pos:start="21:9" pos:end="21:26">case <expr pos:start="21:14" pos:end="21:25"><name pos:start="21:14" pos:end="21:25">TEMP_VAL_REG</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:56"><expr pos:start="23:13" pos:end="23:55"><call pos:start="23:13" pos:end="23:55"><name pos:start="23:13" pos:end="23:18">printf</name><argument_list pos:start="23:19" pos:end="23:55">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><literal type="string" pos:start="23:20" pos:end="23:23">"%s"</literal></expr></argument>, <argument pos:start="23:26" pos:end="23:54"><expr pos:start="23:26" pos:end="23:54"><name pos:start="23:26" pos:end="23:54"><name pos:start="23:26" pos:end="23:45">tcg_target_reg_names</name><index pos:start="23:46" pos:end="23:54">[<expr pos:start="23:47" pos:end="23:53"><name pos:start="23:47" pos:end="23:53"><name pos:start="23:47" pos:end="23:48">ts</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:53">reg</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:26">case <expr pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:25">TEMP_VAL_MEM</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:85"><expr pos:start="29:13" pos:end="29:84"><call pos:start="29:13" pos:end="29:84"><name pos:start="29:13" pos:end="29:18">printf</name><argument_list pos:start="29:19" pos:end="29:84">(<argument pos:start="29:20" pos:end="29:27"><expr pos:start="29:20" pos:end="29:27"><literal type="string" pos:start="29:20" pos:end="29:27">"%d(%s)"</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:48"><expr pos:start="29:30" pos:end="29:48"><operator pos:start="29:30" pos:end="29:30">(</operator><name pos:start="29:31" pos:end="29:33">int</name><operator pos:start="29:34" pos:end="29:34">)</operator><name pos:start="29:35" pos:end="29:48"><name pos:start="29:35" pos:end="29:36">ts</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:48">mem_offset</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:83"><expr pos:start="29:51" pos:end="29:83"><name pos:start="29:51" pos:end="29:83"><name pos:start="29:51" pos:end="29:70">tcg_target_reg_names</name><index pos:start="29:71" pos:end="29:83">[<expr pos:start="29:72" pos:end="29:82"><name pos:start="29:72" pos:end="29:82"><name pos:start="29:72" pos:end="29:73">ts</name><operator pos:start="29:74" pos:end="29:75">-&gt;</operator><name pos:start="29:76" pos:end="29:82">mem_reg</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:28">case <expr pos:start="33:14" pos:end="33:27"><name pos:start="33:14" pos:end="33:27">TEMP_VAL_CONST</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><call pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:18">printf</name><argument_list pos:start="35:19" pos:end="35:45">(<argument pos:start="35:20" pos:end="35:35"><expr pos:start="35:20" pos:end="35:35"><literal type="string" pos:start="35:20" pos:end="35:25">"$0x%"</literal> <name pos:start="35:27" pos:end="35:35">TCG_PRIlx</name></expr></argument>, <argument pos:start="35:38" pos:end="35:44"><expr pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:39">ts</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:44">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:27">case <expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:26">TEMP_VAL_DEAD</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:23"><call pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:18">printf</name><argument_list pos:start="41:19" pos:end="41:23">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><literal type="string" pos:start="41:20" pos:end="41:22">"D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <default pos:start="45:9" pos:end="45:16">default:</default>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><call pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:18">printf</name><argument_list pos:start="47:19" pos:end="47:25">(<argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><literal type="string" pos:start="47:20" pos:end="47:24">"???"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><call pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:14">printf</name><argument_list pos:start="53:15" pos:end="53:20">(<argument pos:start="53:16" pos:end="53:19"><expr pos:start="53:16" pos:end="53:19"><literal type="string" pos:start="53:16" pos:end="53:19">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="59:5" pos:end="71:5">for<control pos:start="59:8" pos:end="59:43">(<init pos:start="59:9" pos:end="59:14"><expr pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <literal type="number" pos:start="59:13" pos:end="59:13">0</literal></expr>;</init> <condition pos:start="59:16" pos:end="59:38"><expr pos:start="59:16" pos:end="59:37"><name pos:start="59:16" pos:end="59:16">i</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <name pos:start="59:20" pos:end="59:37">TCG_TARGET_NB_REGS</name></expr>;</condition> <incr pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:40">i</name><operator pos:start="59:41" pos:end="59:42">++</operator></expr></incr>)</control> <block pos:start="59:45" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:9">

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:35">(<expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">reg_to_temp</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">i</name></expr>]</index></name> <operator pos:start="61:31" pos:end="61:32">&gt;=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">0</literal></expr>)</condition> <block pos:start="61:37" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:80">

            <expr_stmt pos:start="63:13" pos:end="67:80"><expr pos:start="63:13" pos:end="67:79"><call pos:start="63:13" pos:end="67:79"><name pos:start="63:13" pos:end="63:18">printf</name><argument_list pos:start="63:19" pos:end="67:79">(<argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><literal type="string" pos:start="63:20" pos:end="63:29">"%s: %s\n"</literal></expr></argument>, 

                   <argument pos:start="65:20" pos:end="65:42"><expr pos:start="65:20" pos:end="65:42"><name pos:start="65:20" pos:end="65:42"><name pos:start="65:20" pos:end="65:39">tcg_target_reg_names</name><index pos:start="65:40" pos:end="65:42">[<expr pos:start="65:41" pos:end="65:41"><name pos:start="65:41" pos:end="65:41">i</name></expr>]</index></name></expr></argument>, 

                   <argument pos:start="67:20" pos:end="67:78"><expr pos:start="67:20" pos:end="67:78"><call pos:start="67:20" pos:end="67:78"><name pos:start="67:20" pos:end="67:38">tcg_get_arg_str_idx</name><argument_list pos:start="67:39" pos:end="67:78">(<argument pos:start="67:40" pos:end="67:40"><expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">s</name></expr></argument>, <argument pos:start="67:43" pos:end="67:45"><expr pos:start="67:43" pos:end="67:45"><name pos:start="67:43" pos:end="67:45">buf</name></expr></argument>, <argument pos:start="67:48" pos:end="67:58"><expr pos:start="67:48" pos:end="67:58"><sizeof pos:start="67:48" pos:end="67:58">sizeof<argument_list pos:start="67:54" pos:end="67:58">(<argument pos:start="67:55" pos:end="67:57"><expr pos:start="67:55" pos:end="67:57"><name pos:start="67:55" pos:end="67:57">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:61" pos:end="67:77"><expr pos:start="67:61" pos:end="67:77"><name pos:start="67:61" pos:end="67:77"><name pos:start="67:61" pos:end="67:61">s</name><operator pos:start="67:62" pos:end="67:63">-&gt;</operator><name pos:start="67:64" pos:end="67:74">reg_to_temp</name><index pos:start="67:75" pos:end="67:77">[<expr pos:start="67:76" pos:end="67:76"><name pos:start="67:76" pos:end="67:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
