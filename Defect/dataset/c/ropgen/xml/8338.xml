<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8338.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ebml_read_binary</name><parameter_list pos:start="1:28" pos:end="1:70">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:39">AVIOContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">pb</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:55">length</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">EbmlBin</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">bin</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <expr_stmt pos:start="5:5" pos:end="5:23"><expr pos:start="5:5" pos:end="5:22"><call pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:11">av_free</name><argument_list pos:start="5:12" pos:end="5:22">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><name pos:start="5:13" pos:end="5:21"><name pos:start="5:13" pos:end="5:15">bin</name><operator pos:start="5:16" pos:end="5:17">-&gt;</operator><name pos:start="5:18" pos:end="5:21">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="9:31"><if pos:start="7:5" pos:end="9:31">if <condition pos:start="7:8" pos:end="7:41">(<expr pos:start="7:9" pos:end="7:40"><operator pos:start="7:9" pos:end="7:9">!</operator><operator pos:start="7:10" pos:end="7:10">(</operator><name pos:start="7:11" pos:end="7:19"><name pos:start="7:11" pos:end="7:13">bin</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:19">data</name></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <call pos:start="7:23" pos:end="7:39"><name pos:start="7:23" pos:end="7:31">av_malloc</name><argument_list pos:start="7:32" pos:end="7:39">(<argument pos:start="7:33" pos:end="7:38"><expr pos:start="7:33" pos:end="7:38"><name pos:start="7:33" pos:end="7:38">length</name></expr></argument>)</argument_list></call><operator pos:start="7:40" pos:end="7:40">)</operator></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:31"><block_content pos:start="9:9" pos:end="9:31">

        <return pos:start="9:9" pos:end="9:31">return <expr pos:start="9:16" pos:end="9:30"><call pos:start="9:16" pos:end="9:30"><name pos:start="9:16" pos:end="9:22">AVERROR</name><argument_list pos:start="9:23" pos:end="9:30">(<argument pos:start="9:24" pos:end="9:29"><expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:7">bin</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:13">size</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:22">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">bin</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">pos</name></name>  <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:25">avio_tell</name><argument_list pos:start="15:26" pos:end="15:29">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:51">(<expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:17">avio_read</name><argument_list pos:start="17:18" pos:end="17:40">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">pb</name></expr></argument>, <argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:25">bin</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">data</name></name></expr></argument>, <argument pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:39">length</name></expr></argument>)</argument_list></call> <operator pos:start="17:42" pos:end="17:43">!=</operator> <name pos:start="17:45" pos:end="17:50">length</name></expr>)</condition> <block pos:start="17:53" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:28">

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:16">av_freep</name><argument_list pos:start="19:17" pos:end="19:28">(<argument pos:start="19:18" pos:end="19:27"><expr pos:start="19:18" pos:end="19:27"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:21">bin</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:27">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><call pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:27">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
