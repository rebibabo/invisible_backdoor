<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1772.c" pos:tabs="8"><function pos:start="1:1" pos:end="535:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:29">do_socketcall</name><parameter_list pos:start="1:30" pos:end="1:54">(<parameter pos:start="1:31" pos:end="1:37"><decl pos:start="1:31" pos:end="1:37"><type pos:start="1:31" pos:end="1:37"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:37">num</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:48">abi_ulong</name></type> <name pos:start="1:50" pos:end="1:53">vptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="535:1">{<block_content pos:start="5:5" pos:end="533:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">abi_long</name></type> <name pos:start="5:14" pos:end="5:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:15">n</name> <init pos:start="7:17" pos:end="7:35">= <expr pos:start="7:19" pos:end="7:35"><sizeof pos:start="7:19" pos:end="7:35">sizeof<argument_list pos:start="7:25" pos:end="7:35">(<argument pos:start="7:26" pos:end="7:34"><expr pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:34">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="531:5">switch<condition pos:start="11:11" pos:end="11:15">(<expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">num</name></expr>)</condition> <block pos:start="11:17" pos:end="531:5">{<block_content pos:start="13:5" pos:end="529:14">

    <case pos:start="13:5" pos:end="13:23">case <expr pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:22">SOCKOP_socket</name></expr>:</case>

	<block pos:start="15:9" pos:end="33:9">{<block_content pos:start="17:13" pos:end="31:52">

            <decl_stmt pos:start="17:13" pos:end="17:45"><decl pos:start="17:13" pos:end="17:28"><type pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:21">abi_ulong</name></type> <name pos:start="17:23" pos:end="17:28">domain</name></decl>, <decl pos:start="17:31" pos:end="17:34"><type ref="prev" pos:start="17:13" pos:end="17:21"/><name pos:start="17:31" pos:end="17:34">type</name></decl>, <decl pos:start="17:37" pos:end="17:44"><type ref="prev" pos:start="17:13" pos:end="17:21"/><name pos:start="17:37" pos:end="17:44">protocol</name></decl>;</decl_stmt>



            <if_stmt pos:start="21:13" pos:end="27:38"><if pos:start="21:13" pos:end="27:38">if <condition pos:start="21:16" pos:end="25:56">(<expr pos:start="21:17" pos:end="25:55"><call pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:28">get_user_ual</name><argument_list pos:start="21:29" pos:end="21:42">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">domain</name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="23:17" pos:end="23:18">||</operator> <call pos:start="23:20" pos:end="23:47"><name pos:start="23:20" pos:end="23:31">get_user_ual</name><argument_list pos:start="23:32" pos:end="23:47">(<argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">type</name></expr></argument>, <argument pos:start="23:39" pos:end="23:46"><expr pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:42">vptr</name> <operator pos:start="23:44" pos:end="23:44">+</operator> <name pos:start="23:46" pos:end="23:46">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="25:17" pos:end="25:18">||</operator> <call pos:start="25:20" pos:end="25:55"><name pos:start="25:20" pos:end="25:31">get_user_ual</name><argument_list pos:start="25:32" pos:end="25:55">(<argument pos:start="25:33" pos:end="25:40"><expr pos:start="25:33" pos:end="25:40"><name pos:start="25:33" pos:end="25:40">protocol</name></expr></argument>, <argument pos:start="25:43" pos:end="25:54"><expr pos:start="25:43" pos:end="25:54"><name pos:start="25:43" pos:end="25:46">vptr</name> <operator pos:start="25:48" pos:end="25:48">+</operator> <literal type="number" pos:start="25:50" pos:end="25:50">2</literal> <operator pos:start="25:52" pos:end="25:52">*</operator> <name pos:start="25:54" pos:end="25:54">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:38"><block_content pos:start="27:17" pos:end="27:38">

                <return pos:start="27:17" pos:end="27:38">return <expr pos:start="27:24" pos:end="27:37"><operator pos:start="27:24" pos:end="27:24">-</operator><name pos:start="27:25" pos:end="27:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:51"><name pos:start="31:19" pos:end="31:27">do_socket</name><argument_list pos:start="31:28" pos:end="31:51">(<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">domain</name></expr></argument>, <argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">type</name></expr></argument>, <argument pos:start="31:43" pos:end="31:50"><expr pos:start="31:43" pos:end="31:50"><name pos:start="31:43" pos:end="31:50">protocol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:21">case <expr pos:start="37:10" pos:end="37:20"><name pos:start="37:10" pos:end="37:20">SOCKOP_bind</name></expr>:</case>

	<block pos:start="39:9" pos:end="61:9">{<block_content pos:start="41:13" pos:end="59:56">

            <decl_stmt pos:start="41:13" pos:end="41:29"><decl pos:start="41:13" pos:end="41:28"><type pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:21">abi_ulong</name></type> <name pos:start="41:23" pos:end="41:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:34"><decl pos:start="43:13" pos:end="43:33"><type pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:21">abi_ulong</name></type> <name pos:start="43:23" pos:end="43:33">target_addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:30"><decl pos:start="45:13" pos:end="45:29"><type pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:21">socklen_t</name></type> <name pos:start="45:23" pos:end="45:29">addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="49:13" pos:end="55:38"><if pos:start="49:13" pos:end="55:38">if <condition pos:start="49:16" pos:end="53:55">(<expr pos:start="49:17" pos:end="53:54"><call pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:28">get_user_ual</name><argument_list pos:start="49:29" pos:end="49:42">(<argument pos:start="49:30" pos:end="49:35"><expr pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:35">sockfd</name></expr></argument>, <argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="51:17" pos:end="51:18">||</operator> <call pos:start="51:20" pos:end="51:54"><name pos:start="51:20" pos:end="51:31">get_user_ual</name><argument_list pos:start="51:32" pos:end="51:54">(<argument pos:start="51:33" pos:end="51:43"><expr pos:start="51:33" pos:end="51:43"><name pos:start="51:33" pos:end="51:43">target_addr</name></expr></argument>, <argument pos:start="51:46" pos:end="51:53"><expr pos:start="51:46" pos:end="51:53"><name pos:start="51:46" pos:end="51:49">vptr</name> <operator pos:start="51:51" pos:end="51:51">+</operator> <name pos:start="51:53" pos:end="51:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="53:17" pos:end="53:18">||</operator> <call pos:start="53:20" pos:end="53:54"><name pos:start="53:20" pos:end="53:31">get_user_ual</name><argument_list pos:start="53:32" pos:end="53:54">(<argument pos:start="53:33" pos:end="53:39"><expr pos:start="53:33" pos:end="53:39"><name pos:start="53:33" pos:end="53:39">addrlen</name></expr></argument>, <argument pos:start="53:42" pos:end="53:53"><expr pos:start="53:42" pos:end="53:53"><name pos:start="53:42" pos:end="53:45">vptr</name> <operator pos:start="53:47" pos:end="53:47">+</operator> <literal type="number" pos:start="53:49" pos:end="53:49">2</literal> <operator pos:start="53:51" pos:end="53:51">*</operator> <name pos:start="53:53" pos:end="53:53">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:38"><block_content pos:start="55:17" pos:end="55:38">

                <return pos:start="55:17" pos:end="55:38">return <expr pos:start="55:24" pos:end="55:37"><operator pos:start="55:24" pos:end="55:24">-</operator><name pos:start="55:25" pos:end="55:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:56"><expr pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:55"><name pos:start="59:19" pos:end="59:25">do_bind</name><argument_list pos:start="59:26" pos:end="59:55">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><name pos:start="59:27" pos:end="59:32">sockfd</name></expr></argument>, <argument pos:start="59:35" pos:end="59:45"><expr pos:start="59:35" pos:end="59:45"><name pos:start="59:35" pos:end="59:45">target_addr</name></expr></argument>, <argument pos:start="59:48" pos:end="59:54"><expr pos:start="59:48" pos:end="59:54"><name pos:start="59:48" pos:end="59:54">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:24">case <expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:23">SOCKOP_connect</name></expr>:</case>

        <block pos:start="67:9" pos:end="89:9">{<block_content pos:start="69:13" pos:end="87:59">

            <decl_stmt pos:start="69:13" pos:end="69:29"><decl pos:start="69:13" pos:end="69:28"><type pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:21">abi_ulong</name></type> <name pos:start="69:23" pos:end="69:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:34"><decl pos:start="71:13" pos:end="71:33"><type pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:21">abi_ulong</name></type> <name pos:start="71:23" pos:end="71:33">target_addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:30"><decl pos:start="73:13" pos:end="73:29"><type pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:21">socklen_t</name></type> <name pos:start="73:23" pos:end="73:29">addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="77:13" pos:end="83:38"><if pos:start="77:13" pos:end="83:38">if <condition pos:start="77:16" pos:end="81:55">(<expr pos:start="77:17" pos:end="81:54"><call pos:start="77:17" pos:end="77:42"><name pos:start="77:17" pos:end="77:28">get_user_ual</name><argument_list pos:start="77:29" pos:end="77:42">(<argument pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:35"><name pos:start="77:30" pos:end="77:35">sockfd</name></expr></argument>, <argument pos:start="77:38" pos:end="77:41"><expr pos:start="77:38" pos:end="77:41"><name pos:start="77:38" pos:end="77:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="79:17" pos:end="79:18">||</operator> <call pos:start="79:20" pos:end="79:54"><name pos:start="79:20" pos:end="79:31">get_user_ual</name><argument_list pos:start="79:32" pos:end="79:54">(<argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><name pos:start="79:33" pos:end="79:43">target_addr</name></expr></argument>, <argument pos:start="79:46" pos:end="79:53"><expr pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:49">vptr</name> <operator pos:start="79:51" pos:end="79:51">+</operator> <name pos:start="79:53" pos:end="79:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="81:17" pos:end="81:18">||</operator> <call pos:start="81:20" pos:end="81:54"><name pos:start="81:20" pos:end="81:31">get_user_ual</name><argument_list pos:start="81:32" pos:end="81:54">(<argument pos:start="81:33" pos:end="81:39"><expr pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:39">addrlen</name></expr></argument>, <argument pos:start="81:42" pos:end="81:53"><expr pos:start="81:42" pos:end="81:53"><name pos:start="81:42" pos:end="81:45">vptr</name> <operator pos:start="81:47" pos:end="81:47">+</operator> <literal type="number" pos:start="81:49" pos:end="81:49">2</literal> <operator pos:start="81:51" pos:end="81:51">*</operator> <name pos:start="81:53" pos:end="81:53">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:38"><block_content pos:start="83:17" pos:end="83:38">

                <return pos:start="83:17" pos:end="83:38">return <expr pos:start="83:24" pos:end="83:37"><operator pos:start="83:24" pos:end="83:24">-</operator><name pos:start="83:25" pos:end="83:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:59"><expr pos:start="87:13" pos:end="87:58"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:58"><name pos:start="87:19" pos:end="87:28">do_connect</name><argument_list pos:start="87:29" pos:end="87:58">(<argument pos:start="87:30" pos:end="87:35"><expr pos:start="87:30" pos:end="87:35"><name pos:start="87:30" pos:end="87:35">sockfd</name></expr></argument>, <argument pos:start="87:38" pos:end="87:48"><expr pos:start="87:38" pos:end="87:48"><name pos:start="87:38" pos:end="87:48">target_addr</name></expr></argument>, <argument pos:start="87:51" pos:end="87:57"><expr pos:start="87:51" pos:end="87:57"><name pos:start="87:51" pos:end="87:57">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:23">case <expr pos:start="93:10" pos:end="93:22"><name pos:start="93:10" pos:end="93:22">SOCKOP_listen</name></expr>:</case>

        <block pos:start="95:9" pos:end="111:9">{<block_content pos:start="97:13" pos:end="109:53">

            <decl_stmt pos:start="97:13" pos:end="97:38"><decl pos:start="97:13" pos:end="97:28"><type pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:21">abi_ulong</name></type> <name pos:start="97:23" pos:end="97:28">sockfd</name></decl>, <decl pos:start="97:31" pos:end="97:37"><type ref="prev" pos:start="97:13" pos:end="97:21"/><name pos:start="97:31" pos:end="97:37">backlog</name></decl>;</decl_stmt>



            <if_stmt pos:start="101:13" pos:end="105:38"><if pos:start="101:13" pos:end="105:38">if <condition pos:start="101:16" pos:end="103:51">(<expr pos:start="101:17" pos:end="103:50"><call pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:28">get_user_ual</name><argument_list pos:start="101:29" pos:end="101:42">(<argument pos:start="101:30" pos:end="101:35"><expr pos:start="101:30" pos:end="101:35"><name pos:start="101:30" pos:end="101:35">sockfd</name></expr></argument>, <argument pos:start="101:38" pos:end="101:41"><expr pos:start="101:38" pos:end="101:41"><name pos:start="101:38" pos:end="101:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="103:17" pos:end="103:18">||</operator> <call pos:start="103:20" pos:end="103:50"><name pos:start="103:20" pos:end="103:31">get_user_ual</name><argument_list pos:start="103:32" pos:end="103:50">(<argument pos:start="103:33" pos:end="103:39"><expr pos:start="103:33" pos:end="103:39"><name pos:start="103:33" pos:end="103:39">backlog</name></expr></argument>, <argument pos:start="103:42" pos:end="103:49"><expr pos:start="103:42" pos:end="103:49"><name pos:start="103:42" pos:end="103:45">vptr</name> <operator pos:start="103:47" pos:end="103:47">+</operator> <name pos:start="103:49" pos:end="103:49">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:38"><block_content pos:start="105:17" pos:end="105:38">

                <return pos:start="105:17" pos:end="105:38">return <expr pos:start="105:24" pos:end="105:37"><operator pos:start="105:24" pos:end="105:24">-</operator><name pos:start="105:25" pos:end="105:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:53"><expr pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:52"><name pos:start="109:19" pos:end="109:27">get_errno</name><argument_list pos:start="109:28" pos:end="109:52">(<argument pos:start="109:29" pos:end="109:51"><expr pos:start="109:29" pos:end="109:51"><call pos:start="109:29" pos:end="109:51"><name pos:start="109:29" pos:end="109:34">listen</name><argument_list pos:start="109:35" pos:end="109:51">(<argument pos:start="109:36" pos:end="109:41"><expr pos:start="109:36" pos:end="109:41"><name pos:start="109:36" pos:end="109:41">sockfd</name></expr></argument>, <argument pos:start="109:44" pos:end="109:50"><expr pos:start="109:44" pos:end="109:50"><name pos:start="109:44" pos:end="109:50">backlog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:23">case <expr pos:start="115:10" pos:end="115:22"><name pos:start="115:10" pos:end="115:22">SOCKOP_accept</name></expr>:</case>

        <block pos:start="117:9" pos:end="137:9">{<block_content pos:start="119:13" pos:end="135:69">

            <decl_stmt pos:start="119:13" pos:end="119:29"><decl pos:start="119:13" pos:end="119:28"><type pos:start="119:13" pos:end="119:21"><name pos:start="119:13" pos:end="119:21">abi_ulong</name></type> <name pos:start="119:23" pos:end="119:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="121:13" pos:end="121:50"><decl pos:start="121:13" pos:end="121:33"><type pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:21">abi_ulong</name></type> <name pos:start="121:23" pos:end="121:33">target_addr</name></decl>, <decl pos:start="121:36" pos:end="121:49"><type ref="prev" pos:start="121:13" pos:end="121:21"/><name pos:start="121:36" pos:end="121:49">target_addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="125:13" pos:end="131:38"><if pos:start="125:13" pos:end="131:38">if <condition pos:start="125:16" pos:end="129:62">(<expr pos:start="125:17" pos:end="129:61"><call pos:start="125:17" pos:end="125:42"><name pos:start="125:17" pos:end="125:28">get_user_ual</name><argument_list pos:start="125:29" pos:end="125:42">(<argument pos:start="125:30" pos:end="125:35"><expr pos:start="125:30" pos:end="125:35"><name pos:start="125:30" pos:end="125:35">sockfd</name></expr></argument>, <argument pos:start="125:38" pos:end="125:41"><expr pos:start="125:38" pos:end="125:41"><name pos:start="125:38" pos:end="125:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="127:17" pos:end="127:18">||</operator> <call pos:start="127:20" pos:end="127:54"><name pos:start="127:20" pos:end="127:31">get_user_ual</name><argument_list pos:start="127:32" pos:end="127:54">(<argument pos:start="127:33" pos:end="127:43"><expr pos:start="127:33" pos:end="127:43"><name pos:start="127:33" pos:end="127:43">target_addr</name></expr></argument>, <argument pos:start="127:46" pos:end="127:53"><expr pos:start="127:46" pos:end="127:53"><name pos:start="127:46" pos:end="127:49">vptr</name> <operator pos:start="127:51" pos:end="127:51">+</operator> <name pos:start="127:53" pos:end="127:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="129:17" pos:end="129:18">||</operator> <call pos:start="129:20" pos:end="129:61"><name pos:start="129:20" pos:end="129:31">get_user_ual</name><argument_list pos:start="129:32" pos:end="129:61">(<argument pos:start="129:33" pos:end="129:46"><expr pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:46">target_addrlen</name></expr></argument>, <argument pos:start="129:49" pos:end="129:60"><expr pos:start="129:49" pos:end="129:60"><name pos:start="129:49" pos:end="129:52">vptr</name> <operator pos:start="129:54" pos:end="129:54">+</operator> <literal type="number" pos:start="129:56" pos:end="129:56">2</literal> <operator pos:start="129:58" pos:end="129:58">*</operator> <name pos:start="129:60" pos:end="129:60">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:38"><block_content pos:start="131:17" pos:end="131:38">

                <return pos:start="131:17" pos:end="131:38">return <expr pos:start="131:24" pos:end="131:37"><operator pos:start="131:24" pos:end="131:24">-</operator><name pos:start="131:25" pos:end="131:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:69"><expr pos:start="135:13" pos:end="135:68"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="135:68"><name pos:start="135:19" pos:end="135:28">do_accept4</name><argument_list pos:start="135:29" pos:end="135:68">(<argument pos:start="135:30" pos:end="135:35"><expr pos:start="135:30" pos:end="135:35"><name pos:start="135:30" pos:end="135:35">sockfd</name></expr></argument>, <argument pos:start="135:38" pos:end="135:48"><expr pos:start="135:38" pos:end="135:48"><name pos:start="135:38" pos:end="135:48">target_addr</name></expr></argument>, <argument pos:start="135:51" pos:end="135:64"><expr pos:start="135:51" pos:end="135:64"><name pos:start="135:51" pos:end="135:64">target_addrlen</name></expr></argument>, <argument pos:start="135:67" pos:end="135:67"><expr pos:start="135:67" pos:end="135:67"><literal type="number" pos:start="135:67" pos:end="135:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:24">case <expr pos:start="141:10" pos:end="141:23"><name pos:start="141:10" pos:end="141:23">SOCKOP_accept4</name></expr>:</case>

        <block pos:start="143:9" pos:end="169:9">{<block_content pos:start="145:13" pos:end="167:73">

            <decl_stmt pos:start="145:13" pos:end="145:29"><decl pos:start="145:13" pos:end="145:28"><type pos:start="145:13" pos:end="145:21"><name pos:start="145:13" pos:end="145:21">abi_ulong</name></type> <name pos:start="145:23" pos:end="145:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="147:13" pos:end="147:50"><decl pos:start="147:13" pos:end="147:33"><type pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:21">abi_ulong</name></type> <name pos:start="147:23" pos:end="147:33">target_addr</name></decl>, <decl pos:start="147:36" pos:end="147:49"><type ref="prev" pos:start="147:13" pos:end="147:21"/><name pos:start="147:36" pos:end="147:49">target_addrlen</name></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:28"><decl pos:start="149:13" pos:end="149:27"><type pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:21">abi_ulong</name></type> <name pos:start="149:23" pos:end="149:27">flags</name></decl>;</decl_stmt>



            <if_stmt pos:start="153:13" pos:end="163:13"><if pos:start="153:13" pos:end="163:13">if <condition pos:start="153:16" pos:end="159:53">(<expr pos:start="153:17" pos:end="159:52"><call pos:start="153:17" pos:end="153:42"><name pos:start="153:17" pos:end="153:28">get_user_ual</name><argument_list pos:start="153:29" pos:end="153:42">(<argument pos:start="153:30" pos:end="153:35"><expr pos:start="153:30" pos:end="153:35"><name pos:start="153:30" pos:end="153:35">sockfd</name></expr></argument>, <argument pos:start="153:38" pos:end="153:41"><expr pos:start="153:38" pos:end="153:41"><name pos:start="153:38" pos:end="153:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="155:17" pos:end="155:18">||</operator> <call pos:start="155:20" pos:end="155:54"><name pos:start="155:20" pos:end="155:31">get_user_ual</name><argument_list pos:start="155:32" pos:end="155:54">(<argument pos:start="155:33" pos:end="155:43"><expr pos:start="155:33" pos:end="155:43"><name pos:start="155:33" pos:end="155:43">target_addr</name></expr></argument>, <argument pos:start="155:46" pos:end="155:53"><expr pos:start="155:46" pos:end="155:53"><name pos:start="155:46" pos:end="155:49">vptr</name> <operator pos:start="155:51" pos:end="155:51">+</operator> <name pos:start="155:53" pos:end="155:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="157:17" pos:end="157:18">||</operator> <call pos:start="157:20" pos:end="157:61"><name pos:start="157:20" pos:end="157:31">get_user_ual</name><argument_list pos:start="157:32" pos:end="157:61">(<argument pos:start="157:33" pos:end="157:46"><expr pos:start="157:33" pos:end="157:46"><name pos:start="157:33" pos:end="157:46">target_addrlen</name></expr></argument>, <argument pos:start="157:49" pos:end="157:60"><expr pos:start="157:49" pos:end="157:60"><name pos:start="157:49" pos:end="157:52">vptr</name> <operator pos:start="157:54" pos:end="157:54">+</operator> <literal type="number" pos:start="157:56" pos:end="157:56">2</literal> <operator pos:start="157:58" pos:end="157:58">*</operator> <name pos:start="157:60" pos:end="157:60">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="159:17" pos:end="159:18">||</operator> <call pos:start="159:20" pos:end="159:52"><name pos:start="159:20" pos:end="159:31">get_user_ual</name><argument_list pos:start="159:32" pos:end="159:52">(<argument pos:start="159:33" pos:end="159:37"><expr pos:start="159:33" pos:end="159:37"><name pos:start="159:33" pos:end="159:37">flags</name></expr></argument>, <argument pos:start="159:40" pos:end="159:51"><expr pos:start="159:40" pos:end="159:51"><name pos:start="159:40" pos:end="159:43">vptr</name> <operator pos:start="159:45" pos:end="159:45">+</operator> <literal type="number" pos:start="159:47" pos:end="159:47">3</literal> <operator pos:start="159:49" pos:end="159:49">*</operator> <name pos:start="159:51" pos:end="159:51">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:55" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:38">

                <return pos:start="161:17" pos:end="161:38">return <expr pos:start="161:24" pos:end="161:37"><operator pos:start="161:24" pos:end="161:24">-</operator><name pos:start="161:25" pos:end="161:37">TARGET_EFAULT</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="167:13" pos:end="167:73"><expr pos:start="167:13" pos:end="167:72"><name pos:start="167:13" pos:end="167:15">ret</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <call pos:start="167:19" pos:end="167:72"><name pos:start="167:19" pos:end="167:28">do_accept4</name><argument_list pos:start="167:29" pos:end="167:72">(<argument pos:start="167:30" pos:end="167:35"><expr pos:start="167:30" pos:end="167:35"><name pos:start="167:30" pos:end="167:35">sockfd</name></expr></argument>, <argument pos:start="167:38" pos:end="167:48"><expr pos:start="167:38" pos:end="167:48"><name pos:start="167:38" pos:end="167:48">target_addr</name></expr></argument>, <argument pos:start="167:51" pos:end="167:64"><expr pos:start="167:51" pos:end="167:64"><name pos:start="167:51" pos:end="167:64">target_addrlen</name></expr></argument>, <argument pos:start="167:67" pos:end="167:71"><expr pos:start="167:67" pos:end="167:71"><name pos:start="167:67" pos:end="167:71">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:28">case <expr pos:start="173:10" pos:end="173:27"><name pos:start="173:10" pos:end="173:27">SOCKOP_getsockname</name></expr>:</case>

        <block pos:start="175:9" pos:end="195:9">{<block_content pos:start="177:13" pos:end="193:70">

            <decl_stmt pos:start="177:13" pos:end="177:29"><decl pos:start="177:13" pos:end="177:28"><type pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:21">abi_ulong</name></type> <name pos:start="177:23" pos:end="177:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="179:13" pos:end="179:50"><decl pos:start="179:13" pos:end="179:33"><type pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:21">abi_ulong</name></type> <name pos:start="179:23" pos:end="179:33">target_addr</name></decl>, <decl pos:start="179:36" pos:end="179:49"><type ref="prev" pos:start="179:13" pos:end="179:21"/><name pos:start="179:36" pos:end="179:49">target_addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="183:13" pos:end="189:38"><if pos:start="183:13" pos:end="189:38">if <condition pos:start="183:16" pos:end="187:62">(<expr pos:start="183:17" pos:end="187:61"><call pos:start="183:17" pos:end="183:42"><name pos:start="183:17" pos:end="183:28">get_user_ual</name><argument_list pos:start="183:29" pos:end="183:42">(<argument pos:start="183:30" pos:end="183:35"><expr pos:start="183:30" pos:end="183:35"><name pos:start="183:30" pos:end="183:35">sockfd</name></expr></argument>, <argument pos:start="183:38" pos:end="183:41"><expr pos:start="183:38" pos:end="183:41"><name pos:start="183:38" pos:end="183:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="185:17" pos:end="185:18">||</operator> <call pos:start="185:20" pos:end="185:54"><name pos:start="185:20" pos:end="185:31">get_user_ual</name><argument_list pos:start="185:32" pos:end="185:54">(<argument pos:start="185:33" pos:end="185:43"><expr pos:start="185:33" pos:end="185:43"><name pos:start="185:33" pos:end="185:43">target_addr</name></expr></argument>, <argument pos:start="185:46" pos:end="185:53"><expr pos:start="185:46" pos:end="185:53"><name pos:start="185:46" pos:end="185:49">vptr</name> <operator pos:start="185:51" pos:end="185:51">+</operator> <name pos:start="185:53" pos:end="185:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="187:17" pos:end="187:18">||</operator> <call pos:start="187:20" pos:end="187:61"><name pos:start="187:20" pos:end="187:31">get_user_ual</name><argument_list pos:start="187:32" pos:end="187:61">(<argument pos:start="187:33" pos:end="187:46"><expr pos:start="187:33" pos:end="187:46"><name pos:start="187:33" pos:end="187:46">target_addrlen</name></expr></argument>, <argument pos:start="187:49" pos:end="187:60"><expr pos:start="187:49" pos:end="187:60"><name pos:start="187:49" pos:end="187:52">vptr</name> <operator pos:start="187:54" pos:end="187:54">+</operator> <literal type="number" pos:start="187:56" pos:end="187:56">2</literal> <operator pos:start="187:58" pos:end="187:58">*</operator> <name pos:start="187:60" pos:end="187:60">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:38"><block_content pos:start="189:17" pos:end="189:38">

                <return pos:start="189:17" pos:end="189:38">return <expr pos:start="189:24" pos:end="189:37"><operator pos:start="189:24" pos:end="189:24">-</operator><name pos:start="189:25" pos:end="189:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="193:13" pos:end="193:70"><expr pos:start="193:13" pos:end="193:69"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <call pos:start="193:19" pos:end="193:69"><name pos:start="193:19" pos:end="193:32">do_getsockname</name><argument_list pos:start="193:33" pos:end="193:69">(<argument pos:start="193:34" pos:end="193:39"><expr pos:start="193:34" pos:end="193:39"><name pos:start="193:34" pos:end="193:39">sockfd</name></expr></argument>, <argument pos:start="193:42" pos:end="193:52"><expr pos:start="193:42" pos:end="193:52"><name pos:start="193:42" pos:end="193:52">target_addr</name></expr></argument>, <argument pos:start="193:55" pos:end="193:68"><expr pos:start="193:55" pos:end="193:68"><name pos:start="193:55" pos:end="193:68">target_addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:28">case <expr pos:start="199:10" pos:end="199:27"><name pos:start="199:10" pos:end="199:27">SOCKOP_getpeername</name></expr>:</case>

        <block pos:start="201:9" pos:end="221:9">{<block_content pos:start="203:13" pos:end="219:70">

            <decl_stmt pos:start="203:13" pos:end="203:29"><decl pos:start="203:13" pos:end="203:28"><type pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:21">abi_ulong</name></type> <name pos:start="203:23" pos:end="203:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="205:13" pos:end="205:50"><decl pos:start="205:13" pos:end="205:33"><type pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:21">abi_ulong</name></type> <name pos:start="205:23" pos:end="205:33">target_addr</name></decl>, <decl pos:start="205:36" pos:end="205:49"><type ref="prev" pos:start="205:13" pos:end="205:21"/><name pos:start="205:36" pos:end="205:49">target_addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="209:13" pos:end="215:38"><if pos:start="209:13" pos:end="215:38">if <condition pos:start="209:16" pos:end="213:62">(<expr pos:start="209:17" pos:end="213:61"><call pos:start="209:17" pos:end="209:42"><name pos:start="209:17" pos:end="209:28">get_user_ual</name><argument_list pos:start="209:29" pos:end="209:42">(<argument pos:start="209:30" pos:end="209:35"><expr pos:start="209:30" pos:end="209:35"><name pos:start="209:30" pos:end="209:35">sockfd</name></expr></argument>, <argument pos:start="209:38" pos:end="209:41"><expr pos:start="209:38" pos:end="209:41"><name pos:start="209:38" pos:end="209:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="211:17" pos:end="211:18">||</operator> <call pos:start="211:20" pos:end="211:54"><name pos:start="211:20" pos:end="211:31">get_user_ual</name><argument_list pos:start="211:32" pos:end="211:54">(<argument pos:start="211:33" pos:end="211:43"><expr pos:start="211:33" pos:end="211:43"><name pos:start="211:33" pos:end="211:43">target_addr</name></expr></argument>, <argument pos:start="211:46" pos:end="211:53"><expr pos:start="211:46" pos:end="211:53"><name pos:start="211:46" pos:end="211:49">vptr</name> <operator pos:start="211:51" pos:end="211:51">+</operator> <name pos:start="211:53" pos:end="211:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="213:17" pos:end="213:18">||</operator> <call pos:start="213:20" pos:end="213:61"><name pos:start="213:20" pos:end="213:31">get_user_ual</name><argument_list pos:start="213:32" pos:end="213:61">(<argument pos:start="213:33" pos:end="213:46"><expr pos:start="213:33" pos:end="213:46"><name pos:start="213:33" pos:end="213:46">target_addrlen</name></expr></argument>, <argument pos:start="213:49" pos:end="213:60"><expr pos:start="213:49" pos:end="213:60"><name pos:start="213:49" pos:end="213:52">vptr</name> <operator pos:start="213:54" pos:end="213:54">+</operator> <literal type="number" pos:start="213:56" pos:end="213:56">2</literal> <operator pos:start="213:58" pos:end="213:58">*</operator> <name pos:start="213:60" pos:end="213:60">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="215:38"><block_content pos:start="215:17" pos:end="215:38">

                <return pos:start="215:17" pos:end="215:38">return <expr pos:start="215:24" pos:end="215:37"><operator pos:start="215:24" pos:end="215:24">-</operator><name pos:start="215:25" pos:end="215:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="219:13" pos:end="219:70"><expr pos:start="219:13" pos:end="219:69"><name pos:start="219:13" pos:end="219:15">ret</name> <operator pos:start="219:17" pos:end="219:17">=</operator> <call pos:start="219:19" pos:end="219:69"><name pos:start="219:19" pos:end="219:32">do_getpeername</name><argument_list pos:start="219:33" pos:end="219:69">(<argument pos:start="219:34" pos:end="219:39"><expr pos:start="219:34" pos:end="219:39"><name pos:start="219:34" pos:end="219:39">sockfd</name></expr></argument>, <argument pos:start="219:42" pos:end="219:52"><expr pos:start="219:42" pos:end="219:52"><name pos:start="219:42" pos:end="219:52">target_addr</name></expr></argument>, <argument pos:start="219:55" pos:end="219:68"><expr pos:start="219:55" pos:end="219:68"><name pos:start="219:55" pos:end="219:68">target_addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:27">case <expr pos:start="225:10" pos:end="225:26"><name pos:start="225:10" pos:end="225:26">SOCKOP_socketpair</name></expr>:</case>

        <block pos:start="227:9" pos:end="249:9">{<block_content pos:start="229:13" pos:end="247:61">

            <decl_stmt pos:start="229:13" pos:end="229:45"><decl pos:start="229:13" pos:end="229:28"><type pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:21">abi_ulong</name></type> <name pos:start="229:23" pos:end="229:28">domain</name></decl>, <decl pos:start="229:31" pos:end="229:34"><type ref="prev" pos:start="229:13" pos:end="229:21"/><name pos:start="229:31" pos:end="229:34">type</name></decl>, <decl pos:start="229:37" pos:end="229:44"><type ref="prev" pos:start="229:13" pos:end="229:21"/><name pos:start="229:37" pos:end="229:44">protocol</name></decl>;</decl_stmt>

            <decl_stmt pos:start="231:13" pos:end="231:26"><decl pos:start="231:13" pos:end="231:25"><type pos:start="231:13" pos:end="231:21"><name pos:start="231:13" pos:end="231:21">abi_ulong</name></type> <name pos:start="231:23" pos:end="231:25">tab</name></decl>;</decl_stmt>



            <if_stmt pos:start="235:13" pos:end="243:38"><if pos:start="235:13" pos:end="243:38">if <condition pos:start="235:16" pos:end="241:51">(<expr pos:start="235:17" pos:end="241:50"><call pos:start="235:17" pos:end="235:42"><name pos:start="235:17" pos:end="235:28">get_user_ual</name><argument_list pos:start="235:29" pos:end="235:42">(<argument pos:start="235:30" pos:end="235:35"><expr pos:start="235:30" pos:end="235:35"><name pos:start="235:30" pos:end="235:35">domain</name></expr></argument>, <argument pos:start="235:38" pos:end="235:41"><expr pos:start="235:38" pos:end="235:41"><name pos:start="235:38" pos:end="235:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="237:17" pos:end="237:18">||</operator> <call pos:start="237:20" pos:end="237:47"><name pos:start="237:20" pos:end="237:31">get_user_ual</name><argument_list pos:start="237:32" pos:end="237:47">(<argument pos:start="237:33" pos:end="237:36"><expr pos:start="237:33" pos:end="237:36"><name pos:start="237:33" pos:end="237:36">type</name></expr></argument>, <argument pos:start="237:39" pos:end="237:46"><expr pos:start="237:39" pos:end="237:46"><name pos:start="237:39" pos:end="237:42">vptr</name> <operator pos:start="237:44" pos:end="237:44">+</operator> <name pos:start="237:46" pos:end="237:46">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="239:17" pos:end="239:18">||</operator> <call pos:start="239:20" pos:end="239:55"><name pos:start="239:20" pos:end="239:31">get_user_ual</name><argument_list pos:start="239:32" pos:end="239:55">(<argument pos:start="239:33" pos:end="239:40"><expr pos:start="239:33" pos:end="239:40"><name pos:start="239:33" pos:end="239:40">protocol</name></expr></argument>, <argument pos:start="239:43" pos:end="239:54"><expr pos:start="239:43" pos:end="239:54"><name pos:start="239:43" pos:end="239:46">vptr</name> <operator pos:start="239:48" pos:end="239:48">+</operator> <literal type="number" pos:start="239:50" pos:end="239:50">2</literal> <operator pos:start="239:52" pos:end="239:52">*</operator> <name pos:start="239:54" pos:end="239:54">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="241:17" pos:end="241:18">||</operator> <call pos:start="241:20" pos:end="241:50"><name pos:start="241:20" pos:end="241:31">get_user_ual</name><argument_list pos:start="241:32" pos:end="241:50">(<argument pos:start="241:33" pos:end="241:35"><expr pos:start="241:33" pos:end="241:35"><name pos:start="241:33" pos:end="241:35">tab</name></expr></argument>, <argument pos:start="241:38" pos:end="241:49"><expr pos:start="241:38" pos:end="241:49"><name pos:start="241:38" pos:end="241:41">vptr</name> <operator pos:start="241:43" pos:end="241:43">+</operator> <literal type="number" pos:start="241:45" pos:end="241:45">3</literal> <operator pos:start="241:47" pos:end="241:47">*</operator> <name pos:start="241:49" pos:end="241:49">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:38"><block_content pos:start="243:17" pos:end="243:38">

                <return pos:start="243:17" pos:end="243:38">return <expr pos:start="243:24" pos:end="243:37"><operator pos:start="243:24" pos:end="243:24">-</operator><name pos:start="243:25" pos:end="243:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="247:13" pos:end="247:61"><expr pos:start="247:13" pos:end="247:60"><name pos:start="247:13" pos:end="247:15">ret</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <call pos:start="247:19" pos:end="247:60"><name pos:start="247:19" pos:end="247:31">do_socketpair</name><argument_list pos:start="247:32" pos:end="247:60">(<argument pos:start="247:33" pos:end="247:38"><expr pos:start="247:33" pos:end="247:38"><name pos:start="247:33" pos:end="247:38">domain</name></expr></argument>, <argument pos:start="247:41" pos:end="247:44"><expr pos:start="247:41" pos:end="247:44"><name pos:start="247:41" pos:end="247:44">type</name></expr></argument>, <argument pos:start="247:47" pos:end="247:54"><expr pos:start="247:47" pos:end="247:54"><name pos:start="247:47" pos:end="247:54">protocol</name></expr></argument>, <argument pos:start="247:57" pos:end="247:59"><expr pos:start="247:57" pos:end="247:59"><name pos:start="247:57" pos:end="247:59">tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:21">case <expr pos:start="253:10" pos:end="253:20"><name pos:start="253:10" pos:end="253:20">SOCKOP_send</name></expr>:</case>

        <block pos:start="255:9" pos:end="281:9">{<block_content pos:start="257:13" pos:end="279:59">

            <decl_stmt pos:start="257:13" pos:end="257:29"><decl pos:start="257:13" pos:end="257:28"><type pos:start="257:13" pos:end="257:21"><name pos:start="257:13" pos:end="257:21">abi_ulong</name></type> <name pos:start="257:23" pos:end="257:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="259:13" pos:end="259:26"><decl pos:start="259:13" pos:end="259:25"><type pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:21">abi_ulong</name></type> <name pos:start="259:23" pos:end="259:25">msg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="261:13" pos:end="261:23"><decl pos:start="261:13" pos:end="261:22"><type pos:start="261:13" pos:end="261:18"><name pos:start="261:13" pos:end="261:18">size_t</name></type> <name pos:start="261:20" pos:end="261:22">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="263:13" pos:end="263:28"><decl pos:start="263:13" pos:end="263:27"><type pos:start="263:13" pos:end="263:21"><name pos:start="263:13" pos:end="263:21">abi_ulong</name></type> <name pos:start="263:23" pos:end="263:27">flags</name></decl>;</decl_stmt>



            <if_stmt pos:start="267:13" pos:end="275:38"><if pos:start="267:13" pos:end="275:38">if <condition pos:start="267:16" pos:end="273:53">(<expr pos:start="267:17" pos:end="273:52"><call pos:start="267:17" pos:end="267:42"><name pos:start="267:17" pos:end="267:28">get_user_ual</name><argument_list pos:start="267:29" pos:end="267:42">(<argument pos:start="267:30" pos:end="267:35"><expr pos:start="267:30" pos:end="267:35"><name pos:start="267:30" pos:end="267:35">sockfd</name></expr></argument>, <argument pos:start="267:38" pos:end="267:41"><expr pos:start="267:38" pos:end="267:41"><name pos:start="267:38" pos:end="267:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="269:17" pos:end="269:18">||</operator> <call pos:start="269:20" pos:end="269:46"><name pos:start="269:20" pos:end="269:31">get_user_ual</name><argument_list pos:start="269:32" pos:end="269:46">(<argument pos:start="269:33" pos:end="269:35"><expr pos:start="269:33" pos:end="269:35"><name pos:start="269:33" pos:end="269:35">msg</name></expr></argument>, <argument pos:start="269:38" pos:end="269:45"><expr pos:start="269:38" pos:end="269:45"><name pos:start="269:38" pos:end="269:41">vptr</name> <operator pos:start="269:43" pos:end="269:43">+</operator> <name pos:start="269:45" pos:end="269:45">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="271:17" pos:end="271:18">||</operator> <call pos:start="271:20" pos:end="271:50"><name pos:start="271:20" pos:end="271:31">get_user_ual</name><argument_list pos:start="271:32" pos:end="271:50">(<argument pos:start="271:33" pos:end="271:35"><expr pos:start="271:33" pos:end="271:35"><name pos:start="271:33" pos:end="271:35">len</name></expr></argument>, <argument pos:start="271:38" pos:end="271:49"><expr pos:start="271:38" pos:end="271:49"><name pos:start="271:38" pos:end="271:41">vptr</name> <operator pos:start="271:43" pos:end="271:43">+</operator> <literal type="number" pos:start="271:45" pos:end="271:45">2</literal> <operator pos:start="271:47" pos:end="271:47">*</operator> <name pos:start="271:49" pos:end="271:49">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="273:17" pos:end="273:18">||</operator> <call pos:start="273:20" pos:end="273:52"><name pos:start="273:20" pos:end="273:31">get_user_ual</name><argument_list pos:start="273:32" pos:end="273:52">(<argument pos:start="273:33" pos:end="273:37"><expr pos:start="273:33" pos:end="273:37"><name pos:start="273:33" pos:end="273:37">flags</name></expr></argument>, <argument pos:start="273:40" pos:end="273:51"><expr pos:start="273:40" pos:end="273:51"><name pos:start="273:40" pos:end="273:43">vptr</name> <operator pos:start="273:45" pos:end="273:45">+</operator> <literal type="number" pos:start="273:47" pos:end="273:47">3</literal> <operator pos:start="273:49" pos:end="273:49">*</operator> <name pos:start="273:51" pos:end="273:51">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="275:17" pos:end="275:38"><block_content pos:start="275:17" pos:end="275:38">

                <return pos:start="275:17" pos:end="275:38">return <expr pos:start="275:24" pos:end="275:37"><operator pos:start="275:24" pos:end="275:24">-</operator><name pos:start="275:25" pos:end="275:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="279:13" pos:end="279:59"><expr pos:start="279:13" pos:end="279:58"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:58"><name pos:start="279:19" pos:end="279:27">do_sendto</name><argument_list pos:start="279:28" pos:end="279:58">(<argument pos:start="279:29" pos:end="279:34"><expr pos:start="279:29" pos:end="279:34"><name pos:start="279:29" pos:end="279:34">sockfd</name></expr></argument>, <argument pos:start="279:37" pos:end="279:39"><expr pos:start="279:37" pos:end="279:39"><name pos:start="279:37" pos:end="279:39">msg</name></expr></argument>, <argument pos:start="279:42" pos:end="279:44"><expr pos:start="279:42" pos:end="279:44"><name pos:start="279:42" pos:end="279:44">len</name></expr></argument>, <argument pos:start="279:47" pos:end="279:51"><expr pos:start="279:47" pos:end="279:51"><name pos:start="279:47" pos:end="279:51">flags</name></expr></argument>, <argument pos:start="279:54" pos:end="279:54"><expr pos:start="279:54" pos:end="279:54"><literal type="number" pos:start="279:54" pos:end="279:54">0</literal></expr></argument>, <argument pos:start="279:57" pos:end="279:57"><expr pos:start="279:57" pos:end="279:57"><literal type="number" pos:start="279:57" pos:end="279:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:21">case <expr pos:start="285:10" pos:end="285:20"><name pos:start="285:10" pos:end="285:20">SOCKOP_recv</name></expr>:</case>

        <block pos:start="287:9" pos:end="313:9">{<block_content pos:start="289:13" pos:end="311:61">

            <decl_stmt pos:start="289:13" pos:end="289:29"><decl pos:start="289:13" pos:end="289:28"><type pos:start="289:13" pos:end="289:21"><name pos:start="289:13" pos:end="289:21">abi_ulong</name></type> <name pos:start="289:23" pos:end="289:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="291:13" pos:end="291:26"><decl pos:start="291:13" pos:end="291:25"><type pos:start="291:13" pos:end="291:21"><name pos:start="291:13" pos:end="291:21">abi_ulong</name></type> <name pos:start="291:23" pos:end="291:25">msg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="293:13" pos:end="293:23"><decl pos:start="293:13" pos:end="293:22"><type pos:start="293:13" pos:end="293:18"><name pos:start="293:13" pos:end="293:18">size_t</name></type> <name pos:start="293:20" pos:end="293:22">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="295:13" pos:end="295:28"><decl pos:start="295:13" pos:end="295:27"><type pos:start="295:13" pos:end="295:21"><name pos:start="295:13" pos:end="295:21">abi_ulong</name></type> <name pos:start="295:23" pos:end="295:27">flags</name></decl>;</decl_stmt>



            <if_stmt pos:start="299:13" pos:end="307:38"><if pos:start="299:13" pos:end="307:38">if <condition pos:start="299:16" pos:end="305:53">(<expr pos:start="299:17" pos:end="305:52"><call pos:start="299:17" pos:end="299:42"><name pos:start="299:17" pos:end="299:28">get_user_ual</name><argument_list pos:start="299:29" pos:end="299:42">(<argument pos:start="299:30" pos:end="299:35"><expr pos:start="299:30" pos:end="299:35"><name pos:start="299:30" pos:end="299:35">sockfd</name></expr></argument>, <argument pos:start="299:38" pos:end="299:41"><expr pos:start="299:38" pos:end="299:41"><name pos:start="299:38" pos:end="299:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="301:17" pos:end="301:18">||</operator> <call pos:start="301:20" pos:end="301:46"><name pos:start="301:20" pos:end="301:31">get_user_ual</name><argument_list pos:start="301:32" pos:end="301:46">(<argument pos:start="301:33" pos:end="301:35"><expr pos:start="301:33" pos:end="301:35"><name pos:start="301:33" pos:end="301:35">msg</name></expr></argument>, <argument pos:start="301:38" pos:end="301:45"><expr pos:start="301:38" pos:end="301:45"><name pos:start="301:38" pos:end="301:41">vptr</name> <operator pos:start="301:43" pos:end="301:43">+</operator> <name pos:start="301:45" pos:end="301:45">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="303:17" pos:end="303:18">||</operator> <call pos:start="303:20" pos:end="303:50"><name pos:start="303:20" pos:end="303:31">get_user_ual</name><argument_list pos:start="303:32" pos:end="303:50">(<argument pos:start="303:33" pos:end="303:35"><expr pos:start="303:33" pos:end="303:35"><name pos:start="303:33" pos:end="303:35">len</name></expr></argument>, <argument pos:start="303:38" pos:end="303:49"><expr pos:start="303:38" pos:end="303:49"><name pos:start="303:38" pos:end="303:41">vptr</name> <operator pos:start="303:43" pos:end="303:43">+</operator> <literal type="number" pos:start="303:45" pos:end="303:45">2</literal> <operator pos:start="303:47" pos:end="303:47">*</operator> <name pos:start="303:49" pos:end="303:49">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="305:17" pos:end="305:18">||</operator> <call pos:start="305:20" pos:end="305:52"><name pos:start="305:20" pos:end="305:31">get_user_ual</name><argument_list pos:start="305:32" pos:end="305:52">(<argument pos:start="305:33" pos:end="305:37"><expr pos:start="305:33" pos:end="305:37"><name pos:start="305:33" pos:end="305:37">flags</name></expr></argument>, <argument pos:start="305:40" pos:end="305:51"><expr pos:start="305:40" pos:end="305:51"><name pos:start="305:40" pos:end="305:43">vptr</name> <operator pos:start="305:45" pos:end="305:45">+</operator> <literal type="number" pos:start="305:47" pos:end="305:47">3</literal> <operator pos:start="305:49" pos:end="305:49">*</operator> <name pos:start="305:51" pos:end="305:51">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="307:17" pos:end="307:38"><block_content pos:start="307:17" pos:end="307:38">

                <return pos:start="307:17" pos:end="307:38">return <expr pos:start="307:24" pos:end="307:37"><operator pos:start="307:24" pos:end="307:24">-</operator><name pos:start="307:25" pos:end="307:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="311:13" pos:end="311:61"><expr pos:start="311:13" pos:end="311:60"><name pos:start="311:13" pos:end="311:15">ret</name> <operator pos:start="311:17" pos:end="311:17">=</operator> <call pos:start="311:19" pos:end="311:60"><name pos:start="311:19" pos:end="311:29">do_recvfrom</name><argument_list pos:start="311:30" pos:end="311:60">(<argument pos:start="311:31" pos:end="311:36"><expr pos:start="311:31" pos:end="311:36"><name pos:start="311:31" pos:end="311:36">sockfd</name></expr></argument>, <argument pos:start="311:39" pos:end="311:41"><expr pos:start="311:39" pos:end="311:41"><name pos:start="311:39" pos:end="311:41">msg</name></expr></argument>, <argument pos:start="311:44" pos:end="311:46"><expr pos:start="311:44" pos:end="311:46"><name pos:start="311:44" pos:end="311:46">len</name></expr></argument>, <argument pos:start="311:49" pos:end="311:53"><expr pos:start="311:49" pos:end="311:53"><name pos:start="311:49" pos:end="311:53">flags</name></expr></argument>, <argument pos:start="311:56" pos:end="311:56"><expr pos:start="311:56" pos:end="311:56"><literal type="number" pos:start="311:56" pos:end="311:56">0</literal></expr></argument>, <argument pos:start="311:59" pos:end="311:59"><expr pos:start="311:59" pos:end="311:59"><literal type="number" pos:start="311:59" pos:end="311:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="315:9" pos:end="315:14">break;</break>

    <case pos:start="317:5" pos:end="317:23">case <expr pos:start="317:10" pos:end="317:22"><name pos:start="317:10" pos:end="317:22">SOCKOP_sendto</name></expr>:</case>

        <block pos:start="319:9" pos:end="353:9">{<block_content pos:start="321:13" pos:end="351:68">

            <decl_stmt pos:start="321:13" pos:end="321:29"><decl pos:start="321:13" pos:end="321:28"><type pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:21">abi_ulong</name></type> <name pos:start="321:23" pos:end="321:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="323:13" pos:end="323:26"><decl pos:start="323:13" pos:end="323:25"><type pos:start="323:13" pos:end="323:21"><name pos:start="323:13" pos:end="323:21">abi_ulong</name></type> <name pos:start="323:23" pos:end="323:25">msg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="325:13" pos:end="325:23"><decl pos:start="325:13" pos:end="325:22"><type pos:start="325:13" pos:end="325:18"><name pos:start="325:13" pos:end="325:18">size_t</name></type> <name pos:start="325:20" pos:end="325:22">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="327:13" pos:end="327:28"><decl pos:start="327:13" pos:end="327:27"><type pos:start="327:13" pos:end="327:21"><name pos:start="327:13" pos:end="327:21">abi_ulong</name></type> <name pos:start="327:23" pos:end="327:27">flags</name></decl>;</decl_stmt>

            <decl_stmt pos:start="329:13" pos:end="329:27"><decl pos:start="329:13" pos:end="329:26"><type pos:start="329:13" pos:end="329:21"><name pos:start="329:13" pos:end="329:21">abi_ulong</name></type> <name pos:start="329:23" pos:end="329:26">addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="331:13" pos:end="331:30"><decl pos:start="331:13" pos:end="331:29"><type pos:start="331:13" pos:end="331:21"><name pos:start="331:13" pos:end="331:21">abi_ulong</name></type> <name pos:start="331:23" pos:end="331:29">addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="335:13" pos:end="347:38"><if pos:start="335:13" pos:end="347:38">if <condition pos:start="335:16" pos:end="345:55">(<expr pos:start="335:17" pos:end="345:54"><call pos:start="335:17" pos:end="335:42"><name pos:start="335:17" pos:end="335:28">get_user_ual</name><argument_list pos:start="335:29" pos:end="335:42">(<argument pos:start="335:30" pos:end="335:35"><expr pos:start="335:30" pos:end="335:35"><name pos:start="335:30" pos:end="335:35">sockfd</name></expr></argument>, <argument pos:start="335:38" pos:end="335:41"><expr pos:start="335:38" pos:end="335:41"><name pos:start="335:38" pos:end="335:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="337:17" pos:end="337:18">||</operator> <call pos:start="337:20" pos:end="337:46"><name pos:start="337:20" pos:end="337:31">get_user_ual</name><argument_list pos:start="337:32" pos:end="337:46">(<argument pos:start="337:33" pos:end="337:35"><expr pos:start="337:33" pos:end="337:35"><name pos:start="337:33" pos:end="337:35">msg</name></expr></argument>, <argument pos:start="337:38" pos:end="337:45"><expr pos:start="337:38" pos:end="337:45"><name pos:start="337:38" pos:end="337:41">vptr</name> <operator pos:start="337:43" pos:end="337:43">+</operator> <name pos:start="337:45" pos:end="337:45">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="339:17" pos:end="339:18">||</operator> <call pos:start="339:20" pos:end="339:50"><name pos:start="339:20" pos:end="339:31">get_user_ual</name><argument_list pos:start="339:32" pos:end="339:50">(<argument pos:start="339:33" pos:end="339:35"><expr pos:start="339:33" pos:end="339:35"><name pos:start="339:33" pos:end="339:35">len</name></expr></argument>, <argument pos:start="339:38" pos:end="339:49"><expr pos:start="339:38" pos:end="339:49"><name pos:start="339:38" pos:end="339:41">vptr</name> <operator pos:start="339:43" pos:end="339:43">+</operator> <literal type="number" pos:start="339:45" pos:end="339:45">2</literal> <operator pos:start="339:47" pos:end="339:47">*</operator> <name pos:start="339:49" pos:end="339:49">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="341:17" pos:end="341:18">||</operator> <call pos:start="341:20" pos:end="341:52"><name pos:start="341:20" pos:end="341:31">get_user_ual</name><argument_list pos:start="341:32" pos:end="341:52">(<argument pos:start="341:33" pos:end="341:37"><expr pos:start="341:33" pos:end="341:37"><name pos:start="341:33" pos:end="341:37">flags</name></expr></argument>, <argument pos:start="341:40" pos:end="341:51"><expr pos:start="341:40" pos:end="341:51"><name pos:start="341:40" pos:end="341:43">vptr</name> <operator pos:start="341:45" pos:end="341:45">+</operator> <literal type="number" pos:start="341:47" pos:end="341:47">3</literal> <operator pos:start="341:49" pos:end="341:49">*</operator> <name pos:start="341:51" pos:end="341:51">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="343:17" pos:end="343:18">||</operator> <call pos:start="343:20" pos:end="343:51"><name pos:start="343:20" pos:end="343:31">get_user_ual</name><argument_list pos:start="343:32" pos:end="343:51">(<argument pos:start="343:33" pos:end="343:36"><expr pos:start="343:33" pos:end="343:36"><name pos:start="343:33" pos:end="343:36">addr</name></expr></argument>, <argument pos:start="343:39" pos:end="343:50"><expr pos:start="343:39" pos:end="343:50"><name pos:start="343:39" pos:end="343:42">vptr</name> <operator pos:start="343:44" pos:end="343:44">+</operator> <literal type="number" pos:start="343:46" pos:end="343:46">4</literal> <operator pos:start="343:48" pos:end="343:48">*</operator> <name pos:start="343:50" pos:end="343:50">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="345:17" pos:end="345:18">||</operator> <call pos:start="345:20" pos:end="345:54"><name pos:start="345:20" pos:end="345:31">get_user_ual</name><argument_list pos:start="345:32" pos:end="345:54">(<argument pos:start="345:33" pos:end="345:39"><expr pos:start="345:33" pos:end="345:39"><name pos:start="345:33" pos:end="345:39">addrlen</name></expr></argument>, <argument pos:start="345:42" pos:end="345:53"><expr pos:start="345:42" pos:end="345:53"><name pos:start="345:42" pos:end="345:45">vptr</name> <operator pos:start="345:47" pos:end="345:47">+</operator> <literal type="number" pos:start="345:49" pos:end="345:49">5</literal> <operator pos:start="345:51" pos:end="345:51">*</operator> <name pos:start="345:53" pos:end="345:53">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="347:17" pos:end="347:38"><block_content pos:start="347:17" pos:end="347:38">

                <return pos:start="347:17" pos:end="347:38">return <expr pos:start="347:24" pos:end="347:37"><operator pos:start="347:24" pos:end="347:24">-</operator><name pos:start="347:25" pos:end="347:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="351:13" pos:end="351:68"><expr pos:start="351:13" pos:end="351:67"><name pos:start="351:13" pos:end="351:15">ret</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <call pos:start="351:19" pos:end="351:67"><name pos:start="351:19" pos:end="351:27">do_sendto</name><argument_list pos:start="351:28" pos:end="351:67">(<argument pos:start="351:29" pos:end="351:34"><expr pos:start="351:29" pos:end="351:34"><name pos:start="351:29" pos:end="351:34">sockfd</name></expr></argument>, <argument pos:start="351:37" pos:end="351:39"><expr pos:start="351:37" pos:end="351:39"><name pos:start="351:37" pos:end="351:39">msg</name></expr></argument>, <argument pos:start="351:42" pos:end="351:44"><expr pos:start="351:42" pos:end="351:44"><name pos:start="351:42" pos:end="351:44">len</name></expr></argument>, <argument pos:start="351:47" pos:end="351:51"><expr pos:start="351:47" pos:end="351:51"><name pos:start="351:47" pos:end="351:51">flags</name></expr></argument>, <argument pos:start="351:54" pos:end="351:57"><expr pos:start="351:54" pos:end="351:57"><name pos:start="351:54" pos:end="351:57">addr</name></expr></argument>, <argument pos:start="351:60" pos:end="351:66"><expr pos:start="351:60" pos:end="351:66"><name pos:start="351:60" pos:end="351:66">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="355:9" pos:end="355:14">break;</break>

    <case pos:start="357:5" pos:end="357:25">case <expr pos:start="357:10" pos:end="357:24"><name pos:start="357:10" pos:end="357:24">SOCKOP_recvfrom</name></expr>:</case>

        <block pos:start="359:9" pos:end="393:9">{<block_content pos:start="361:13" pos:end="391:70">

            <decl_stmt pos:start="361:13" pos:end="361:29"><decl pos:start="361:13" pos:end="361:28"><type pos:start="361:13" pos:end="361:21"><name pos:start="361:13" pos:end="361:21">abi_ulong</name></type> <name pos:start="361:23" pos:end="361:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="363:13" pos:end="363:26"><decl pos:start="363:13" pos:end="363:25"><type pos:start="363:13" pos:end="363:21"><name pos:start="363:13" pos:end="363:21">abi_ulong</name></type> <name pos:start="363:23" pos:end="363:25">msg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="365:13" pos:end="365:23"><decl pos:start="365:13" pos:end="365:22"><type pos:start="365:13" pos:end="365:18"><name pos:start="365:13" pos:end="365:18">size_t</name></type> <name pos:start="365:20" pos:end="365:22">len</name></decl>;</decl_stmt>

            <decl_stmt pos:start="367:13" pos:end="367:28"><decl pos:start="367:13" pos:end="367:27"><type pos:start="367:13" pos:end="367:21"><name pos:start="367:13" pos:end="367:21">abi_ulong</name></type> <name pos:start="367:23" pos:end="367:27">flags</name></decl>;</decl_stmt>

            <decl_stmt pos:start="369:13" pos:end="369:27"><decl pos:start="369:13" pos:end="369:26"><type pos:start="369:13" pos:end="369:21"><name pos:start="369:13" pos:end="369:21">abi_ulong</name></type> <name pos:start="369:23" pos:end="369:26">addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="371:13" pos:end="371:30"><decl pos:start="371:13" pos:end="371:29"><type pos:start="371:13" pos:end="371:21"><name pos:start="371:13" pos:end="371:21">socklen_t</name></type> <name pos:start="371:23" pos:end="371:29">addrlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="375:13" pos:end="387:38"><if pos:start="375:13" pos:end="387:38">if <condition pos:start="375:16" pos:end="385:55">(<expr pos:start="375:17" pos:end="385:54"><call pos:start="375:17" pos:end="375:42"><name pos:start="375:17" pos:end="375:28">get_user_ual</name><argument_list pos:start="375:29" pos:end="375:42">(<argument pos:start="375:30" pos:end="375:35"><expr pos:start="375:30" pos:end="375:35"><name pos:start="375:30" pos:end="375:35">sockfd</name></expr></argument>, <argument pos:start="375:38" pos:end="375:41"><expr pos:start="375:38" pos:end="375:41"><name pos:start="375:38" pos:end="375:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="377:17" pos:end="377:18">||</operator> <call pos:start="377:20" pos:end="377:46"><name pos:start="377:20" pos:end="377:31">get_user_ual</name><argument_list pos:start="377:32" pos:end="377:46">(<argument pos:start="377:33" pos:end="377:35"><expr pos:start="377:33" pos:end="377:35"><name pos:start="377:33" pos:end="377:35">msg</name></expr></argument>, <argument pos:start="377:38" pos:end="377:45"><expr pos:start="377:38" pos:end="377:45"><name pos:start="377:38" pos:end="377:41">vptr</name> <operator pos:start="377:43" pos:end="377:43">+</operator> <name pos:start="377:45" pos:end="377:45">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="379:17" pos:end="379:18">||</operator> <call pos:start="379:20" pos:end="379:50"><name pos:start="379:20" pos:end="379:31">get_user_ual</name><argument_list pos:start="379:32" pos:end="379:50">(<argument pos:start="379:33" pos:end="379:35"><expr pos:start="379:33" pos:end="379:35"><name pos:start="379:33" pos:end="379:35">len</name></expr></argument>, <argument pos:start="379:38" pos:end="379:49"><expr pos:start="379:38" pos:end="379:49"><name pos:start="379:38" pos:end="379:41">vptr</name> <operator pos:start="379:43" pos:end="379:43">+</operator> <literal type="number" pos:start="379:45" pos:end="379:45">2</literal> <operator pos:start="379:47" pos:end="379:47">*</operator> <name pos:start="379:49" pos:end="379:49">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="381:17" pos:end="381:18">||</operator> <call pos:start="381:20" pos:end="381:52"><name pos:start="381:20" pos:end="381:31">get_user_ual</name><argument_list pos:start="381:32" pos:end="381:52">(<argument pos:start="381:33" pos:end="381:37"><expr pos:start="381:33" pos:end="381:37"><name pos:start="381:33" pos:end="381:37">flags</name></expr></argument>, <argument pos:start="381:40" pos:end="381:51"><expr pos:start="381:40" pos:end="381:51"><name pos:start="381:40" pos:end="381:43">vptr</name> <operator pos:start="381:45" pos:end="381:45">+</operator> <literal type="number" pos:start="381:47" pos:end="381:47">3</literal> <operator pos:start="381:49" pos:end="381:49">*</operator> <name pos:start="381:51" pos:end="381:51">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="383:17" pos:end="383:18">||</operator> <call pos:start="383:20" pos:end="383:51"><name pos:start="383:20" pos:end="383:31">get_user_ual</name><argument_list pos:start="383:32" pos:end="383:51">(<argument pos:start="383:33" pos:end="383:36"><expr pos:start="383:33" pos:end="383:36"><name pos:start="383:33" pos:end="383:36">addr</name></expr></argument>, <argument pos:start="383:39" pos:end="383:50"><expr pos:start="383:39" pos:end="383:50"><name pos:start="383:39" pos:end="383:42">vptr</name> <operator pos:start="383:44" pos:end="383:44">+</operator> <literal type="number" pos:start="383:46" pos:end="383:46">4</literal> <operator pos:start="383:48" pos:end="383:48">*</operator> <name pos:start="383:50" pos:end="383:50">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="385:17" pos:end="385:18">||</operator> <call pos:start="385:20" pos:end="385:54"><name pos:start="385:20" pos:end="385:31">get_user_ual</name><argument_list pos:start="385:32" pos:end="385:54">(<argument pos:start="385:33" pos:end="385:39"><expr pos:start="385:33" pos:end="385:39"><name pos:start="385:33" pos:end="385:39">addrlen</name></expr></argument>, <argument pos:start="385:42" pos:end="385:53"><expr pos:start="385:42" pos:end="385:53"><name pos:start="385:42" pos:end="385:45">vptr</name> <operator pos:start="385:47" pos:end="385:47">+</operator> <literal type="number" pos:start="385:49" pos:end="385:49">5</literal> <operator pos:start="385:51" pos:end="385:51">*</operator> <name pos:start="385:53" pos:end="385:53">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="387:17" pos:end="387:38"><block_content pos:start="387:17" pos:end="387:38">

                <return pos:start="387:17" pos:end="387:38">return <expr pos:start="387:24" pos:end="387:37"><operator pos:start="387:24" pos:end="387:24">-</operator><name pos:start="387:25" pos:end="387:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="391:13" pos:end="391:70"><expr pos:start="391:13" pos:end="391:69"><name pos:start="391:13" pos:end="391:15">ret</name> <operator pos:start="391:17" pos:end="391:17">=</operator> <call pos:start="391:19" pos:end="391:69"><name pos:start="391:19" pos:end="391:29">do_recvfrom</name><argument_list pos:start="391:30" pos:end="391:69">(<argument pos:start="391:31" pos:end="391:36"><expr pos:start="391:31" pos:end="391:36"><name pos:start="391:31" pos:end="391:36">sockfd</name></expr></argument>, <argument pos:start="391:39" pos:end="391:41"><expr pos:start="391:39" pos:end="391:41"><name pos:start="391:39" pos:end="391:41">msg</name></expr></argument>, <argument pos:start="391:44" pos:end="391:46"><expr pos:start="391:44" pos:end="391:46"><name pos:start="391:44" pos:end="391:46">len</name></expr></argument>, <argument pos:start="391:49" pos:end="391:53"><expr pos:start="391:49" pos:end="391:53"><name pos:start="391:49" pos:end="391:53">flags</name></expr></argument>, <argument pos:start="391:56" pos:end="391:59"><expr pos:start="391:56" pos:end="391:59"><name pos:start="391:56" pos:end="391:59">addr</name></expr></argument>, <argument pos:start="391:62" pos:end="391:68"><expr pos:start="391:62" pos:end="391:68"><name pos:start="391:62" pos:end="391:68">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="395:9" pos:end="395:14">break;</break>

    <case pos:start="397:5" pos:end="397:25">case <expr pos:start="397:10" pos:end="397:24"><name pos:start="397:10" pos:end="397:24">SOCKOP_shutdown</name></expr>:</case>

        <block pos:start="399:9" pos:end="415:9">{<block_content pos:start="401:13" pos:end="413:51">

            <decl_stmt pos:start="401:13" pos:end="401:34"><decl pos:start="401:13" pos:end="401:28"><type pos:start="401:13" pos:end="401:21"><name pos:start="401:13" pos:end="401:21">abi_ulong</name></type> <name pos:start="401:23" pos:end="401:28">sockfd</name></decl>, <decl pos:start="401:31" pos:end="401:33"><type ref="prev" pos:start="401:13" pos:end="401:21"/><name pos:start="401:31" pos:end="401:33">how</name></decl>;</decl_stmt>



            <if_stmt pos:start="405:13" pos:end="409:38"><if pos:start="405:13" pos:end="409:38">if <condition pos:start="405:16" pos:end="407:47">(<expr pos:start="405:17" pos:end="407:46"><call pos:start="405:17" pos:end="405:42"><name pos:start="405:17" pos:end="405:28">get_user_ual</name><argument_list pos:start="405:29" pos:end="405:42">(<argument pos:start="405:30" pos:end="405:35"><expr pos:start="405:30" pos:end="405:35"><name pos:start="405:30" pos:end="405:35">sockfd</name></expr></argument>, <argument pos:start="405:38" pos:end="405:41"><expr pos:start="405:38" pos:end="405:41"><name pos:start="405:38" pos:end="405:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="407:17" pos:end="407:18">||</operator> <call pos:start="407:20" pos:end="407:46"><name pos:start="407:20" pos:end="407:31">get_user_ual</name><argument_list pos:start="407:32" pos:end="407:46">(<argument pos:start="407:33" pos:end="407:35"><expr pos:start="407:33" pos:end="407:35"><name pos:start="407:33" pos:end="407:35">how</name></expr></argument>, <argument pos:start="407:38" pos:end="407:45"><expr pos:start="407:38" pos:end="407:45"><name pos:start="407:38" pos:end="407:41">vptr</name> <operator pos:start="407:43" pos:end="407:43">+</operator> <name pos:start="407:45" pos:end="407:45">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="409:17" pos:end="409:38"><block_content pos:start="409:17" pos:end="409:38">

                <return pos:start="409:17" pos:end="409:38">return <expr pos:start="409:24" pos:end="409:37"><operator pos:start="409:24" pos:end="409:24">-</operator><name pos:start="409:25" pos:end="409:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="413:13" pos:end="413:51"><expr pos:start="413:13" pos:end="413:50"><name pos:start="413:13" pos:end="413:15">ret</name> <operator pos:start="413:17" pos:end="413:17">=</operator> <call pos:start="413:19" pos:end="413:50"><name pos:start="413:19" pos:end="413:27">get_errno</name><argument_list pos:start="413:28" pos:end="413:50">(<argument pos:start="413:29" pos:end="413:49"><expr pos:start="413:29" pos:end="413:49"><call pos:start="413:29" pos:end="413:49"><name pos:start="413:29" pos:end="413:36">shutdown</name><argument_list pos:start="413:37" pos:end="413:49">(<argument pos:start="413:38" pos:end="413:43"><expr pos:start="413:38" pos:end="413:43"><name pos:start="413:38" pos:end="413:43">sockfd</name></expr></argument>, <argument pos:start="413:46" pos:end="413:48"><expr pos:start="413:46" pos:end="413:48"><name pos:start="413:46" pos:end="413:48">how</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="417:9" pos:end="417:14">break;</break>

    <case pos:start="419:5" pos:end="419:24">case <expr pos:start="419:10" pos:end="419:23"><name pos:start="419:10" pos:end="419:23">SOCKOP_sendmsg</name></expr>:</case>

    <case pos:start="421:5" pos:end="421:24">case <expr pos:start="421:10" pos:end="421:23"><name pos:start="421:10" pos:end="421:23">SOCKOP_recvmsg</name></expr>:</case>

        <block pos:start="423:9" pos:end="447:9">{<block_content pos:start="425:13" pos:end="445:58">

            <decl_stmt pos:start="425:13" pos:end="425:25"><decl pos:start="425:13" pos:end="425:24"><type pos:start="425:13" pos:end="425:21"><name pos:start="425:13" pos:end="425:21">abi_ulong</name></type> <name pos:start="425:23" pos:end="425:24">fd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="427:13" pos:end="427:33"><decl pos:start="427:13" pos:end="427:32"><type pos:start="427:13" pos:end="427:21"><name pos:start="427:13" pos:end="427:21">abi_ulong</name></type> <name pos:start="427:23" pos:end="427:32">target_msg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="429:13" pos:end="429:28"><decl pos:start="429:13" pos:end="429:27"><type pos:start="429:13" pos:end="429:21"><name pos:start="429:13" pos:end="429:21">abi_ulong</name></type> <name pos:start="429:23" pos:end="429:27">flags</name></decl>;</decl_stmt>



            <if_stmt pos:start="433:13" pos:end="439:38"><if pos:start="433:13" pos:end="439:38">if <condition pos:start="433:16" pos:end="437:53">(<expr pos:start="433:17" pos:end="437:52"><call pos:start="433:17" pos:end="433:38"><name pos:start="433:17" pos:end="433:28">get_user_ual</name><argument_list pos:start="433:29" pos:end="433:38">(<argument pos:start="433:30" pos:end="433:31"><expr pos:start="433:30" pos:end="433:31"><name pos:start="433:30" pos:end="433:31">fd</name></expr></argument>, <argument pos:start="433:34" pos:end="433:37"><expr pos:start="433:34" pos:end="433:37"><name pos:start="433:34" pos:end="433:37">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="435:17" pos:end="435:18">||</operator> <call pos:start="435:20" pos:end="435:53"><name pos:start="435:20" pos:end="435:31">get_user_ual</name><argument_list pos:start="435:32" pos:end="435:53">(<argument pos:start="435:33" pos:end="435:42"><expr pos:start="435:33" pos:end="435:42"><name pos:start="435:33" pos:end="435:42">target_msg</name></expr></argument>, <argument pos:start="435:45" pos:end="435:52"><expr pos:start="435:45" pos:end="435:52"><name pos:start="435:45" pos:end="435:48">vptr</name> <operator pos:start="435:50" pos:end="435:50">+</operator> <name pos:start="435:52" pos:end="435:52">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="437:17" pos:end="437:18">||</operator> <call pos:start="437:20" pos:end="437:52"><name pos:start="437:20" pos:end="437:31">get_user_ual</name><argument_list pos:start="437:32" pos:end="437:52">(<argument pos:start="437:33" pos:end="437:37"><expr pos:start="437:33" pos:end="437:37"><name pos:start="437:33" pos:end="437:37">flags</name></expr></argument>, <argument pos:start="437:40" pos:end="437:51"><expr pos:start="437:40" pos:end="437:51"><name pos:start="437:40" pos:end="437:43">vptr</name> <operator pos:start="437:45" pos:end="437:45">+</operator> <literal type="number" pos:start="437:47" pos:end="437:47">2</literal> <operator pos:start="437:49" pos:end="437:49">*</operator> <name pos:start="437:51" pos:end="437:51">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="439:17" pos:end="439:38"><block_content pos:start="439:17" pos:end="439:38">

                <return pos:start="439:17" pos:end="439:38">return <expr pos:start="439:24" pos:end="439:37"><operator pos:start="439:24" pos:end="439:24">-</operator><name pos:start="439:25" pos:end="439:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="443:13" pos:end="445:58"><expr pos:start="443:13" pos:end="445:57"><name pos:start="443:13" pos:end="443:15">ret</name> <operator pos:start="443:17" pos:end="443:17">=</operator> <call pos:start="443:19" pos:end="445:57"><name pos:start="443:19" pos:end="443:32">do_sendrecvmsg</name><argument_list pos:start="443:33" pos:end="445:57">(<argument pos:start="443:34" pos:end="443:35"><expr pos:start="443:34" pos:end="443:35"><name pos:start="443:34" pos:end="443:35">fd</name></expr></argument>, <argument pos:start="443:38" pos:end="443:47"><expr pos:start="443:38" pos:end="443:47"><name pos:start="443:38" pos:end="443:47">target_msg</name></expr></argument>, <argument pos:start="443:50" pos:end="443:54"><expr pos:start="443:50" pos:end="443:54"><name pos:start="443:50" pos:end="443:54">flags</name></expr></argument>,

                                 <argument pos:start="445:34" pos:end="445:56"><expr pos:start="445:34" pos:end="445:56"><operator pos:start="445:34" pos:end="445:34">(</operator><name pos:start="445:35" pos:end="445:37">num</name> <operator pos:start="445:39" pos:end="445:40">==</operator> <name pos:start="445:42" pos:end="445:55">SOCKOP_sendmsg</name><operator pos:start="445:56" pos:end="445:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="449:9" pos:end="449:14">break;</break>

    <case pos:start="451:5" pos:end="451:27">case <expr pos:start="451:10" pos:end="451:26"><name pos:start="451:10" pos:end="451:26">SOCKOP_setsockopt</name></expr>:</case>

        <block pos:start="453:9" pos:end="483:9">{<block_content pos:start="455:13" pos:end="481:72">

            <decl_stmt pos:start="455:13" pos:end="455:29"><decl pos:start="455:13" pos:end="455:28"><type pos:start="455:13" pos:end="455:21"><name pos:start="455:13" pos:end="455:21">abi_ulong</name></type> <name pos:start="455:23" pos:end="455:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="457:13" pos:end="457:28"><decl pos:start="457:13" pos:end="457:27"><type pos:start="457:13" pos:end="457:21"><name pos:start="457:13" pos:end="457:21">abi_ulong</name></type> <name pos:start="457:23" pos:end="457:27">level</name></decl>;</decl_stmt>

            <decl_stmt pos:start="459:13" pos:end="459:30"><decl pos:start="459:13" pos:end="459:29"><type pos:start="459:13" pos:end="459:21"><name pos:start="459:13" pos:end="459:21">abi_ulong</name></type> <name pos:start="459:23" pos:end="459:29">optname</name></decl>;</decl_stmt>

            <decl_stmt pos:start="461:13" pos:end="461:29"><decl pos:start="461:13" pos:end="461:28"><type pos:start="461:13" pos:end="461:21"><name pos:start="461:13" pos:end="461:21">abi_ulong</name></type> <name pos:start="461:23" pos:end="461:28">optval</name></decl>;</decl_stmt>

            <decl_stmt pos:start="463:13" pos:end="463:29"><decl pos:start="463:13" pos:end="463:28"><type pos:start="463:13" pos:end="463:21"><name pos:start="463:13" pos:end="463:21">abi_ulong</name></type> <name pos:start="463:23" pos:end="463:28">optlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="467:13" pos:end="477:38"><if pos:start="467:13" pos:end="477:38">if <condition pos:start="467:16" pos:end="475:54">(<expr pos:start="467:17" pos:end="475:53"><call pos:start="467:17" pos:end="467:42"><name pos:start="467:17" pos:end="467:28">get_user_ual</name><argument_list pos:start="467:29" pos:end="467:42">(<argument pos:start="467:30" pos:end="467:35"><expr pos:start="467:30" pos:end="467:35"><name pos:start="467:30" pos:end="467:35">sockfd</name></expr></argument>, <argument pos:start="467:38" pos:end="467:41"><expr pos:start="467:38" pos:end="467:41"><name pos:start="467:38" pos:end="467:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="469:17" pos:end="469:18">||</operator> <call pos:start="469:20" pos:end="469:48"><name pos:start="469:20" pos:end="469:31">get_user_ual</name><argument_list pos:start="469:32" pos:end="469:48">(<argument pos:start="469:33" pos:end="469:37"><expr pos:start="469:33" pos:end="469:37"><name pos:start="469:33" pos:end="469:37">level</name></expr></argument>, <argument pos:start="469:40" pos:end="469:47"><expr pos:start="469:40" pos:end="469:47"><name pos:start="469:40" pos:end="469:43">vptr</name> <operator pos:start="469:45" pos:end="469:45">+</operator> <name pos:start="469:47" pos:end="469:47">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="471:17" pos:end="471:18">||</operator> <call pos:start="471:20" pos:end="471:54"><name pos:start="471:20" pos:end="471:31">get_user_ual</name><argument_list pos:start="471:32" pos:end="471:54">(<argument pos:start="471:33" pos:end="471:39"><expr pos:start="471:33" pos:end="471:39"><name pos:start="471:33" pos:end="471:39">optname</name></expr></argument>, <argument pos:start="471:42" pos:end="471:53"><expr pos:start="471:42" pos:end="471:53"><name pos:start="471:42" pos:end="471:45">vptr</name> <operator pos:start="471:47" pos:end="471:47">+</operator> <literal type="number" pos:start="471:49" pos:end="471:49">2</literal> <operator pos:start="471:51" pos:end="471:51">*</operator> <name pos:start="471:53" pos:end="471:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="473:17" pos:end="473:18">||</operator> <call pos:start="473:20" pos:end="473:53"><name pos:start="473:20" pos:end="473:31">get_user_ual</name><argument_list pos:start="473:32" pos:end="473:53">(<argument pos:start="473:33" pos:end="473:38"><expr pos:start="473:33" pos:end="473:38"><name pos:start="473:33" pos:end="473:38">optval</name></expr></argument>, <argument pos:start="473:41" pos:end="473:52"><expr pos:start="473:41" pos:end="473:52"><name pos:start="473:41" pos:end="473:44">vptr</name> <operator pos:start="473:46" pos:end="473:46">+</operator> <literal type="number" pos:start="473:48" pos:end="473:48">3</literal> <operator pos:start="473:50" pos:end="473:50">*</operator> <name pos:start="473:52" pos:end="473:52">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="475:17" pos:end="475:18">||</operator> <call pos:start="475:20" pos:end="475:53"><name pos:start="475:20" pos:end="475:31">get_user_ual</name><argument_list pos:start="475:32" pos:end="475:53">(<argument pos:start="475:33" pos:end="475:38"><expr pos:start="475:33" pos:end="475:38"><name pos:start="475:33" pos:end="475:38">optlen</name></expr></argument>, <argument pos:start="475:41" pos:end="475:52"><expr pos:start="475:41" pos:end="475:52"><name pos:start="475:41" pos:end="475:44">vptr</name> <operator pos:start="475:46" pos:end="475:46">+</operator> <literal type="number" pos:start="475:48" pos:end="475:48">4</literal> <operator pos:start="475:50" pos:end="475:50">*</operator> <name pos:start="475:52" pos:end="475:52">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="477:17" pos:end="477:38"><block_content pos:start="477:17" pos:end="477:38">

                <return pos:start="477:17" pos:end="477:38">return <expr pos:start="477:24" pos:end="477:37"><operator pos:start="477:24" pos:end="477:24">-</operator><name pos:start="477:25" pos:end="477:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="481:13" pos:end="481:72"><expr pos:start="481:13" pos:end="481:71"><name pos:start="481:13" pos:end="481:15">ret</name> <operator pos:start="481:17" pos:end="481:17">=</operator> <call pos:start="481:19" pos:end="481:71"><name pos:start="481:19" pos:end="481:31">do_setsockopt</name><argument_list pos:start="481:32" pos:end="481:71">(<argument pos:start="481:33" pos:end="481:38"><expr pos:start="481:33" pos:end="481:38"><name pos:start="481:33" pos:end="481:38">sockfd</name></expr></argument>, <argument pos:start="481:41" pos:end="481:45"><expr pos:start="481:41" pos:end="481:45"><name pos:start="481:41" pos:end="481:45">level</name></expr></argument>, <argument pos:start="481:48" pos:end="481:54"><expr pos:start="481:48" pos:end="481:54"><name pos:start="481:48" pos:end="481:54">optname</name></expr></argument>, <argument pos:start="481:57" pos:end="481:62"><expr pos:start="481:57" pos:end="481:62"><name pos:start="481:57" pos:end="481:62">optval</name></expr></argument>, <argument pos:start="481:65" pos:end="481:70"><expr pos:start="481:65" pos:end="481:70"><name pos:start="481:65" pos:end="481:70">optlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="485:9" pos:end="485:14">break;</break>

    <case pos:start="487:5" pos:end="487:27">case <expr pos:start="487:10" pos:end="487:26"><name pos:start="487:10" pos:end="487:26">SOCKOP_getsockopt</name></expr>:</case>

        <block pos:start="489:9" pos:end="519:9">{<block_content pos:start="491:13" pos:end="517:72">

            <decl_stmt pos:start="491:13" pos:end="491:29"><decl pos:start="491:13" pos:end="491:28"><type pos:start="491:13" pos:end="491:21"><name pos:start="491:13" pos:end="491:21">abi_ulong</name></type> <name pos:start="491:23" pos:end="491:28">sockfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="493:13" pos:end="493:28"><decl pos:start="493:13" pos:end="493:27"><type pos:start="493:13" pos:end="493:21"><name pos:start="493:13" pos:end="493:21">abi_ulong</name></type> <name pos:start="493:23" pos:end="493:27">level</name></decl>;</decl_stmt>

            <decl_stmt pos:start="495:13" pos:end="495:30"><decl pos:start="495:13" pos:end="495:29"><type pos:start="495:13" pos:end="495:21"><name pos:start="495:13" pos:end="495:21">abi_ulong</name></type> <name pos:start="495:23" pos:end="495:29">optname</name></decl>;</decl_stmt>

            <decl_stmt pos:start="497:13" pos:end="497:29"><decl pos:start="497:13" pos:end="497:28"><type pos:start="497:13" pos:end="497:21"><name pos:start="497:13" pos:end="497:21">abi_ulong</name></type> <name pos:start="497:23" pos:end="497:28">optval</name></decl>;</decl_stmt>

            <decl_stmt pos:start="499:13" pos:end="499:29"><decl pos:start="499:13" pos:end="499:28"><type pos:start="499:13" pos:end="499:21"><name pos:start="499:13" pos:end="499:21">socklen_t</name></type> <name pos:start="499:23" pos:end="499:28">optlen</name></decl>;</decl_stmt>



            <if_stmt pos:start="503:13" pos:end="513:38"><if pos:start="503:13" pos:end="513:38">if <condition pos:start="503:16" pos:end="511:54">(<expr pos:start="503:17" pos:end="511:53"><call pos:start="503:17" pos:end="503:42"><name pos:start="503:17" pos:end="503:28">get_user_ual</name><argument_list pos:start="503:29" pos:end="503:42">(<argument pos:start="503:30" pos:end="503:35"><expr pos:start="503:30" pos:end="503:35"><name pos:start="503:30" pos:end="503:35">sockfd</name></expr></argument>, <argument pos:start="503:38" pos:end="503:41"><expr pos:start="503:38" pos:end="503:41"><name pos:start="503:38" pos:end="503:41">vptr</name></expr></argument>)</argument_list></call>

                <operator pos:start="505:17" pos:end="505:18">||</operator> <call pos:start="505:20" pos:end="505:48"><name pos:start="505:20" pos:end="505:31">get_user_ual</name><argument_list pos:start="505:32" pos:end="505:48">(<argument pos:start="505:33" pos:end="505:37"><expr pos:start="505:33" pos:end="505:37"><name pos:start="505:33" pos:end="505:37">level</name></expr></argument>, <argument pos:start="505:40" pos:end="505:47"><expr pos:start="505:40" pos:end="505:47"><name pos:start="505:40" pos:end="505:43">vptr</name> <operator pos:start="505:45" pos:end="505:45">+</operator> <name pos:start="505:47" pos:end="505:47">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="507:17" pos:end="507:18">||</operator> <call pos:start="507:20" pos:end="507:54"><name pos:start="507:20" pos:end="507:31">get_user_ual</name><argument_list pos:start="507:32" pos:end="507:54">(<argument pos:start="507:33" pos:end="507:39"><expr pos:start="507:33" pos:end="507:39"><name pos:start="507:33" pos:end="507:39">optname</name></expr></argument>, <argument pos:start="507:42" pos:end="507:53"><expr pos:start="507:42" pos:end="507:53"><name pos:start="507:42" pos:end="507:45">vptr</name> <operator pos:start="507:47" pos:end="507:47">+</operator> <literal type="number" pos:start="507:49" pos:end="507:49">2</literal> <operator pos:start="507:51" pos:end="507:51">*</operator> <name pos:start="507:53" pos:end="507:53">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="509:17" pos:end="509:18">||</operator> <call pos:start="509:20" pos:end="509:53"><name pos:start="509:20" pos:end="509:31">get_user_ual</name><argument_list pos:start="509:32" pos:end="509:53">(<argument pos:start="509:33" pos:end="509:38"><expr pos:start="509:33" pos:end="509:38"><name pos:start="509:33" pos:end="509:38">optval</name></expr></argument>, <argument pos:start="509:41" pos:end="509:52"><expr pos:start="509:41" pos:end="509:52"><name pos:start="509:41" pos:end="509:44">vptr</name> <operator pos:start="509:46" pos:end="509:46">+</operator> <literal type="number" pos:start="509:48" pos:end="509:48">3</literal> <operator pos:start="509:50" pos:end="509:50">*</operator> <name pos:start="509:52" pos:end="509:52">n</name></expr></argument>)</argument_list></call>

                <operator pos:start="511:17" pos:end="511:18">||</operator> <call pos:start="511:20" pos:end="511:53"><name pos:start="511:20" pos:end="511:31">get_user_ual</name><argument_list pos:start="511:32" pos:end="511:53">(<argument pos:start="511:33" pos:end="511:38"><expr pos:start="511:33" pos:end="511:38"><name pos:start="511:33" pos:end="511:38">optlen</name></expr></argument>, <argument pos:start="511:41" pos:end="511:52"><expr pos:start="511:41" pos:end="511:52"><name pos:start="511:41" pos:end="511:44">vptr</name> <operator pos:start="511:46" pos:end="511:46">+</operator> <literal type="number" pos:start="511:48" pos:end="511:48">4</literal> <operator pos:start="511:50" pos:end="511:50">*</operator> <name pos:start="511:52" pos:end="511:52">n</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="513:17" pos:end="513:38"><block_content pos:start="513:17" pos:end="513:38">

                <return pos:start="513:17" pos:end="513:38">return <expr pos:start="513:24" pos:end="513:37"><operator pos:start="513:24" pos:end="513:24">-</operator><name pos:start="513:25" pos:end="513:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="517:13" pos:end="517:72"><expr pos:start="517:13" pos:end="517:71"><name pos:start="517:13" pos:end="517:15">ret</name> <operator pos:start="517:17" pos:end="517:17">=</operator> <call pos:start="517:19" pos:end="517:71"><name pos:start="517:19" pos:end="517:31">do_getsockopt</name><argument_list pos:start="517:32" pos:end="517:71">(<argument pos:start="517:33" pos:end="517:38"><expr pos:start="517:33" pos:end="517:38"><name pos:start="517:33" pos:end="517:38">sockfd</name></expr></argument>, <argument pos:start="517:41" pos:end="517:45"><expr pos:start="517:41" pos:end="517:45"><name pos:start="517:41" pos:end="517:45">level</name></expr></argument>, <argument pos:start="517:48" pos:end="517:54"><expr pos:start="517:48" pos:end="517:54"><name pos:start="517:48" pos:end="517:54">optname</name></expr></argument>, <argument pos:start="517:57" pos:end="517:62"><expr pos:start="517:57" pos:end="517:62"><name pos:start="517:57" pos:end="517:62">optval</name></expr></argument>, <argument pos:start="517:65" pos:end="517:70"><expr pos:start="517:65" pos:end="517:70"><name pos:start="517:65" pos:end="517:70">optlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="521:9" pos:end="521:14">break;</break>

    <default pos:start="523:5" pos:end="523:12">default:</default>

        <expr_stmt pos:start="525:9" pos:end="525:54"><expr pos:start="525:9" pos:end="525:53"><call pos:start="525:9" pos:end="525:53"><name pos:start="525:9" pos:end="525:16">gemu_log</name><argument_list pos:start="525:17" pos:end="525:53">(<argument pos:start="525:18" pos:end="525:47"><expr pos:start="525:18" pos:end="525:47"><literal type="string" pos:start="525:18" pos:end="525:47">"Unsupported socketcall: %d\n"</literal></expr></argument>, <argument pos:start="525:50" pos:end="525:52"><expr pos:start="525:50" pos:end="525:52"><name pos:start="525:50" pos:end="525:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:29"><expr pos:start="527:9" pos:end="527:28"><name pos:start="527:9" pos:end="527:11">ret</name> <operator pos:start="527:13" pos:end="527:13">=</operator> <operator pos:start="527:15" pos:end="527:15">-</operator><name pos:start="527:16" pos:end="527:28">TARGET_ENOSYS</name></expr>;</expr_stmt>

        <break pos:start="529:9" pos:end="529:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="533:5" pos:end="533:15">return <expr pos:start="533:12" pos:end="533:14"><name pos:start="533:12" pos:end="533:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
