<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24775.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">AVPacket</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ass</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name></decl>, <decl pos:start="7:17" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">end</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:28"><if pos:start="11:5" pos:end="13:28">if <condition pos:start="11:8" pos:end="11:45">(<expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:11">ass</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:24">event_index</name></name> <operator pos:start="11:26" pos:end="11:27">&gt;=</operator> <name pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:31">ass</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:44">event_count</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:28"><block_content pos:start="13:9" pos:end="13:28">

        <return pos:start="13:9" pos:end="13:28">return <expr pos:start="13:16" pos:end="13:27"><call pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:5">p</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <name pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:11">ass</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">event</name><index pos:start="17:19" pos:end="17:36">[<expr pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:22">ass</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:35">event_index</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:7">end</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:25"><name pos:start="21:11" pos:end="21:16">strchr</name><argument_list pos:start="21:17" pos:end="21:25">(<argument pos:start="21:18" pos:end="21:18"><expr pos:start="21:18" pos:end="21:18"><name pos:start="21:18" pos:end="21:18">p</name></expr></argument>, <argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><literal type="char" pos:start="21:21" pos:end="21:24">'\n'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:17">av_new_packet</name><argument_list pos:start="23:18" pos:end="23:53">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">pkt</name></expr></argument>, <argument pos:start="23:24" pos:end="23:52"><expr pos:start="23:24" pos:end="23:52"><ternary pos:start="23:24" pos:end="23:52"><condition pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">end</name></expr> ?</condition><then pos:start="23:30" pos:end="23:40"> <expr pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:32">end</name> <operator pos:start="23:34" pos:end="23:34">-</operator> <name pos:start="23:36" pos:end="23:36">p</name> <operator pos:start="23:38" pos:end="23:38">+</operator> <literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr> </then><else pos:start="23:42" pos:end="23:52">: <expr pos:start="23:44" pos:end="23:52"><call pos:start="23:44" pos:end="23:52"><name pos:start="23:44" pos:end="23:49">strlen</name><argument_list pos:start="23:50" pos:end="23:52">(<argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">p</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:14">flags</name></name> <operator pos:start="25:16" pos:end="25:17">|=</operator> <name pos:start="25:19" pos:end="25:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:79"><expr pos:start="27:5" pos:end="27:78"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">pos</name></name>    <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:19">p</name> <operator pos:start="27:21" pos:end="27:21">-</operator> <name pos:start="27:23" pos:end="27:39"><name pos:start="27:23" pos:end="27:25">ass</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:39">event_buffer</name></name> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:55"><name pos:start="27:43" pos:end="27:43">s</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:52">streams</name><index pos:start="27:53" pos:end="27:55">[<expr pos:start="27:54" pos:end="27:54"><literal type="number" pos:start="27:54" pos:end="27:54">0</literal></expr>]</index></name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:78"><name pos:start="27:58" pos:end="27:62">codec</name><operator pos:start="27:63" pos:end="27:64">-&gt;</operator><name pos:start="27:65" pos:end="27:78">extradata_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">pkt</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">pts</name></name>    <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:21">pkt</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:26">dts</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <call pos:start="29:30" pos:end="29:39"><name pos:start="29:30" pos:end="29:36">get_pts</name><argument_list pos:start="29:37" pos:end="29:39">(<argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:35">(<argument pos:start="31:12" pos:end="31:20"><expr pos:start="31:12" pos:end="31:20"><name pos:start="31:12" pos:end="31:20"><name pos:start="31:12" pos:end="31:14">pkt</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">data</name></name></expr></argument>, <argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">p</name></expr></argument>, <argument pos:start="31:26" pos:end="31:34"><expr pos:start="31:26" pos:end="31:34"><name pos:start="31:26" pos:end="31:34"><name pos:start="31:26" pos:end="31:28">pkt</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:34">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:7">ass</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:20">event_index</name></name><operator pos:start="35:21" pos:end="35:22">++</operator></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
