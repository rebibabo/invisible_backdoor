<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15880.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tcg_out_movi</name><parameter_list pos:start="1:25" pos:end="3:56">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">TCGContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">TCGType</name></type> <name pos:start="1:49" pos:end="1:52">type</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:31">TCGReg</name></type> <name pos:start="3:33" pos:end="3:34">t0</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:55"><decl pos:start="3:37" pos:end="3:55"><type pos:start="3:37" pos:end="3:55"><name pos:start="3:37" pos:end="3:51">tcg_target_long</name></type> <name pos:start="3:53" pos:end="3:55">arg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:49">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:25">old_code_ptr</name> <init pos:start="7:27" pos:end="7:39">= <expr pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:39">code_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">arg32</name> <init pos:start="9:20" pos:end="9:24">= <expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:24">arg</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="37:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:45">(<expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:12">type</name> <operator pos:start="11:14" pos:end="11:15">==</operator> <name pos:start="11:17" pos:end="11:28">TCG_TYPE_I32</name> <operator pos:start="11:30" pos:end="11:31">||</operator> <name pos:start="11:33" pos:end="11:35">arg</name> <operator pos:start="11:37" pos:end="11:38">==</operator> <name pos:start="11:40" pos:end="11:44">arg32</name></expr>)</condition> <block pos:start="11:47" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:28">

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:20">tcg_out_op_t</name><argument_list pos:start="13:21" pos:end="13:42">(<argument pos:start="13:22" pos:end="13:22"><expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">s</name></expr></argument>, <argument pos:start="13:25" pos:end="13:41"><expr pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:41">INDEX_op_movi_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><call pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:17">tcg_out_r</name><argument_list pos:start="15:18" pos:end="15:24">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">s</name></expr></argument>, <argument pos:start="15:22" pos:end="15:23"><expr pos:start="15:22" pos:end="15:23"><name pos:start="15:22" pos:end="15:23">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:17">tcg_out32</name><argument_list pos:start="17:18" pos:end="17:27">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>, <argument pos:start="17:22" pos:end="17:26"><expr pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:26">arg32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="37:5">else <block pos:start="19:12" pos:end="37:5">{<block_content pos:start="21:9" pos:end="36:0">

        <expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:36">(<argument pos:start="21:16" pos:end="21:35"><expr pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:19">type</name> <operator pos:start="21:21" pos:end="21:22">==</operator> <name pos:start="21:24" pos:end="21:35">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="23:1" pos:end="23:29">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:23">TCG_TARGET_REG_BITS</name> <operator pos:start="23:25" pos:end="23:26">==</operator> <literal type="number" pos:start="23:28" pos:end="23:29">64</literal></expr></cpp:if>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:20">tcg_out_op_t</name><argument_list pos:start="25:21" pos:end="25:42">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">s</name></expr></argument>, <argument pos:start="25:25" pos:end="25:41"><expr pos:start="25:25" pos:end="25:41"><name pos:start="25:25" pos:end="25:41">INDEX_op_movi_i64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">tcg_out_r</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:19"><expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">s</name></expr></argument>, <argument pos:start="27:22" pos:end="27:23"><expr pos:start="27:22" pos:end="27:23"><name pos:start="27:22" pos:end="27:23">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17">tcg_out64</name><argument_list pos:start="29:18" pos:end="29:25">(<argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">s</name></expr></argument>, <argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:14"><call pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:12">TODO</name><argument_list pos:start="33:13" pos:end="33:14">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:16">old_code_ptr</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>]</index></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:33">code_ptr</name></name> <operator pos:start="39:35" pos:end="39:35">-</operator> <name pos:start="39:37" pos:end="39:48">old_code_ptr</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
