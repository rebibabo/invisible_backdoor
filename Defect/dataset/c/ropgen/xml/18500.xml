<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18500.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">alloc_picture</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:37">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VideoPicture</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">vp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:6">vp</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <operator pos:start="11:10" pos:end="11:10">&amp;</operator><name pos:start="11:11" pos:end="11:37"><name pos:start="11:11" pos:end="11:12">is</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:19">pictq</name><index pos:start="11:20" pos:end="11:37">[<expr pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:22">is</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:36">pictq_windex</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">vp</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:15">bmp</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="22:0"><block_content pos:start="17:9" pos:end="22:0">

        <expr_stmt pos:start="17:9" pos:end="22:0"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:26">SDL_FreeYUVOverlay</name><argument_list pos:start="17:27" pos:end="17:35">(<argument pos:start="17:28" pos:end="17:34"><expr pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:29">vp</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:34">bmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="21:1" pos:end="21:19">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="25:42"><if pos:start="23:5" pos:end="25:42">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">vp</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:18">picref</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:42"><block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:29">avfilter_unref_buffer</name><argument_list pos:start="25:30" pos:end="25:41">(<argument pos:start="25:31" pos:end="25:40"><expr pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:32">vp</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:40">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">vp</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:14">picref</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:21">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:6">vp</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:13">width</name></name>   <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:20">is</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:38">out_video_filter</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:46">inputs</name><index pos:start="31:47" pos:end="31:49">[<expr pos:start="31:48" pos:end="31:48"><literal type="number" pos:start="31:48" pos:end="31:48">0</literal></expr>]</index></name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:52">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:6">vp</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:14">height</name></name>  <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:49"><name pos:start="33:19" pos:end="33:20">is</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:38">out_video_filter</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:46">inputs</name><index pos:start="33:47" pos:end="33:49">[<expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>]</index></name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:52">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:6">vp</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:15">pix_fmt</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:49"><name pos:start="35:19" pos:end="35:20">is</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:38">out_video_filter</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:46">inputs</name><index pos:start="35:47" pos:end="35:49">[<expr pos:start="35:48" pos:end="35:48"><literal type="number" pos:start="35:48" pos:end="35:48">0</literal></expr>]</index></name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:57">format</name></expr>;</expr_stmt>

<cpp:else pos:start="37:1" pos:end="37:5">#<cpp:directive pos:start="37:2" pos:end="37:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:6">vp</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:13">width</name></name>   <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:44"><name pos:start="39:19" pos:end="39:20">is</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">video_st</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:37">codec</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:44">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:6">vp</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:14">height</name></name>  <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:45"><name pos:start="41:19" pos:end="41:20">is</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:30">video_st</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:37">codec</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:45">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:6">vp</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:15">pix_fmt</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:46"><name pos:start="43:19" pos:end="43:20">is</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:30">video_st</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:37">codec</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:46">pix_fmt</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="49:5" pos:end="53:43"><expr pos:start="49:5" pos:end="53:42"><name pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:6">vp</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:11">bmp</name></name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="53:42"><name pos:start="49:15" pos:end="49:34">SDL_CreateYUVOverlay</name><argument_list pos:start="49:35" pos:end="53:42">(<argument pos:start="49:36" pos:end="49:44"><expr pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:37">vp</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:44">width</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:56"><expr pos:start="49:47" pos:end="49:56"><name pos:start="49:47" pos:end="49:56"><name pos:start="49:47" pos:end="49:48">vp</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:56">height</name></name></expr></argument>,

                                   <argument pos:start="51:36" pos:end="51:51"><expr pos:start="51:36" pos:end="51:51"><name pos:start="51:36" pos:end="51:51">SDL_YV12_OVERLAY</name></expr></argument>,

                                   <argument pos:start="53:36" pos:end="53:41"><expr pos:start="53:36" pos:end="53:41"><name pos:start="53:36" pos:end="53:41">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="69:5"><if pos:start="55:5" pos:end="69:5">if <condition pos:start="55:8" pos:end="55:52">(<expr pos:start="55:9" pos:end="55:51"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:16"><name pos:start="55:10" pos:end="55:11">vp</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">bmp</name></name> <operator pos:start="55:18" pos:end="55:19">||</operator> <name pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:22">vp</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">bmp</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:36">pitches</name><index pos:start="55:37" pos:end="55:39">[<expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">0</literal></expr>]</index></name> <operator pos:start="55:41" pos:end="55:41">&lt;</operator> <name pos:start="55:43" pos:end="55:51"><name pos:start="55:43" pos:end="55:44">vp</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:51">width</name></name></expr>)</condition> <block pos:start="55:54" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:20">

        <comment type="block" pos:start="57:9" pos:end="59:71">/* SDL allocates a buffer smaller than requested if the video

         * overlay hardware is unable to support the requested size. */</comment>

        <expr_stmt pos:start="61:9" pos:end="65:79"><expr pos:start="61:9" pos:end="65:78"><call pos:start="61:9" pos:end="65:78"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="65:78">(<argument pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">stderr</name></expr></argument>, <argument pos:start="61:25" pos:end="65:53"><expr pos:start="61:25" pos:end="65:53"><literal type="string" pos:start="61:25" pos:end="61:77">"Error: the video system does not support an image\n"</literal>

                        <literal type="string" pos:start="63:25" pos:end="63:77">"size of %dx%d pixels. Try using -vf \"scale=w:h\"\n"</literal>

                        <literal type="string" pos:start="65:25" pos:end="65:53">"to reduce the image size.\n"</literal></expr></argument>, <argument pos:start="65:56" pos:end="65:64"><expr pos:start="65:56" pos:end="65:64"><name pos:start="65:56" pos:end="65:64"><name pos:start="65:56" pos:end="65:57">vp</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:64">width</name></name></expr></argument>, <argument pos:start="65:67" pos:end="65:76"><expr pos:start="65:67" pos:end="65:76"><name pos:start="65:67" pos:end="65:76"><name pos:start="65:67" pos:end="65:68">vp</name><operator pos:start="65:69" pos:end="65:70">-&gt;</operator><name pos:start="65:71" pos:end="65:76">height</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:20"><expr pos:start="67:9" pos:end="67:19"><call pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:15">do_exit</name><argument_list pos:start="67:16" pos:end="67:19">(<argument pos:start="67:17" pos:end="67:18"><expr pos:start="67:17" pos:end="67:18"><name pos:start="67:17" pos:end="67:18">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:17">SDL_LockMutex</name><argument_list pos:start="73:18" pos:end="73:34">(<argument pos:start="73:19" pos:end="73:33"><expr pos:start="73:19" pos:end="73:33"><name pos:start="73:19" pos:end="73:33"><name pos:start="73:19" pos:end="73:20">is</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:33">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:22"><expr pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:6">vp</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:17">allocated</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><call pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:18">SDL_CondSignal</name><argument_list pos:start="77:19" pos:end="77:34">(<argument pos:start="77:20" pos:end="77:33"><expr pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:21">is</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:33">pictq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><call pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:19">SDL_UnlockMutex</name><argument_list pos:start="79:20" pos:end="79:36">(<argument pos:start="79:21" pos:end="79:35"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:22">is</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:35">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
