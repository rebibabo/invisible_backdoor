<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4649.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_sof0</name><parameter_list pos:start="1:29" pos:end="3:54">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:34">UINT8</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:13">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">nb_components</name></decl>, <decl pos:start="7:29" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:29">i</name></decl>, <decl pos:start="7:32" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:36">width</name></decl>, <decl pos:start="7:39" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:39" pos:end="7:44">height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:17">init_get_bits</name><argument_list pos:start="11:18" pos:end="11:40">(<argument pos:start="11:19" pos:end="11:24"><expr pos:start="11:19" pos:end="11:24"><operator pos:start="11:19" pos:end="11:19">&amp;</operator><name pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:24">gb</name></name></expr></argument>, <argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">buf</name></expr></argument>, <argument pos:start="11:32" pos:end="11:39"><expr pos:start="11:32" pos:end="11:39"><name pos:start="11:32" pos:end="11:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:40">/* XXX: verify len field validity */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:7">len</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:30"><name pos:start="17:11" pos:end="17:18">get_bits</name><argument_list pos:start="17:19" pos:end="17:30">(<argument pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:25"><operator pos:start="17:20" pos:end="17:20">&amp;</operator><name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">gb</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:29"><expr pos:start="17:28" pos:end="17:29"><literal type="number" pos:start="17:28" pos:end="17:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:40">/* only 8 bits/component accepted */</comment>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:16">get_bits</name><argument_list pos:start="21:17" pos:end="21:27">(<argument pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:23"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">gb</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">8</literal></expr></argument>)</argument_list></call> <operator pos:start="21:29" pos:end="21:30">!=</operator> <literal type="number" pos:start="21:32" pos:end="21:32">8</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:10">height</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:33"><name pos:start="25:14" pos:end="25:21">get_bits</name><argument_list pos:start="25:22" pos:end="25:33">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">gb</name></name></expr></argument>, <argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><literal type="number" pos:start="25:31" pos:end="25:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:9">width</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:20">get_bits</name><argument_list pos:start="27:21" pos:end="27:32">(<argument pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:27"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:27">gb</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><literal type="number" pos:start="27:30" pos:end="27:31">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:17">nb_components</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:39"><name pos:start="31:21" pos:end="31:28">get_bits</name><argument_list pos:start="31:29" pos:end="31:39">(<argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">gb</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:18"><if pos:start="33:5" pos:end="37:18">if <condition pos:start="33:8" pos:end="35:39">(<expr pos:start="33:9" pos:end="35:38"><name pos:start="33:9" pos:end="33:21">nb_components</name> <operator pos:start="33:23" pos:end="33:24">&lt;=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal> <operator pos:start="33:28" pos:end="33:29">||</operator>

        <name pos:start="35:9" pos:end="35:21">nb_components</name> <operator pos:start="35:23" pos:end="35:23">&gt;</operator> <name pos:start="35:25" pos:end="35:38">MAX_COMPONENTS</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:20">nb_components</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:36">nb_components</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:12">h_max</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:17"><expr pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">v_max</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">1</literal></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="73:5">for<control pos:start="45:8" pos:end="45:32">(<init pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:9">i</name><operator pos:start="45:10" pos:end="45:10">=</operator><literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</init><condition pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">&lt;</operator><name pos:start="45:15" pos:end="45:27">nb_components</name></expr>;</condition><incr pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:29">i</name><operator pos:start="45:30" pos:end="45:31">++</operator></expr></incr>)</control> <block pos:start="45:34" pos:end="73:5">{<block_content pos:start="49:9" pos:end="71:73">

        <comment type="block" pos:start="47:9" pos:end="47:26">/* component id */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:23">component_id</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">i</name></expr>]</index></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:48"><name pos:start="49:30" pos:end="49:37">get_bits</name><argument_list pos:start="49:38" pos:end="49:48">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><operator pos:start="49:39" pos:end="49:39">&amp;</operator><name pos:start="49:40" pos:end="49:44"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:44">gb</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">8</literal></expr></argument>)</argument_list></call> <operator pos:start="49:50" pos:end="49:50">-</operator> <literal type="number" pos:start="49:52" pos:end="49:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">h_count</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">i</name></expr>]</index></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:32">get_bits</name><argument_list pos:start="51:33" pos:end="51:43">(<argument pos:start="51:34" pos:end="51:39"><expr pos:start="51:34" pos:end="51:39"><operator pos:start="51:34" pos:end="51:34">&amp;</operator><name pos:start="51:35" pos:end="51:39"><name pos:start="51:35" pos:end="51:35">s</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:39">gb</name></name></expr></argument>, <argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">v_count</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">i</name></expr>]</index></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <call pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:32">get_bits</name><argument_list pos:start="53:33" pos:end="53:43">(<argument pos:start="53:34" pos:end="53:39"><expr pos:start="53:34" pos:end="53:39"><operator pos:start="53:34" pos:end="53:34">&amp;</operator><name pos:start="53:35" pos:end="53:39"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:39">gb</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:42"><expr pos:start="53:42" pos:end="53:42"><literal type="number" pos:start="53:42" pos:end="53:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:67">/* compute hmax and vmax (only used in interleaved case) */</comment>

        <if_stmt pos:start="57:9" pos:end="59:37"><if pos:start="57:9" pos:end="59:37">if <condition pos:start="57:12" pos:end="57:37">(<expr pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">h_count</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">i</name></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">&gt;</operator> <name pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:36">h_max</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:37"><block_content pos:start="59:13" pos:end="59:37">

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:20">h_max</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:33">h_count</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="63:37"><if pos:start="61:9" pos:end="63:37">if <condition pos:start="61:12" pos:end="61:37">(<expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:22">v_count</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">i</name></expr>]</index></name> <operator pos:start="61:27" pos:end="61:27">&gt;</operator> <name pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:36">v_max</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:37"><block_content pos:start="63:13" pos:end="63:37">

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">v_max</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:36"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:33">v_count</name><index pos:start="63:34" pos:end="63:36">[<expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:48"><expr pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:22">quant_index</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">i</name></expr>]</index></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:47"><name pos:start="65:29" pos:end="65:36">get_bits</name><argument_list pos:start="65:37" pos:end="65:47">(<argument pos:start="65:38" pos:end="65:43"><expr pos:start="65:38" pos:end="65:43"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:43"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:43">gb</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:46"><expr pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:22"><if pos:start="67:9" pos:end="69:22">if <condition pos:start="67:12" pos:end="67:35">(<expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:26">quant_index</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">i</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:32">&gt;=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">4</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:22"><block_content pos:start="69:13" pos:end="69:22">

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:73"><expr pos:start="71:9" pos:end="71:72"><call pos:start="71:9" pos:end="71:72"><name pos:start="71:9" pos:end="71:15">dprintf</name><argument_list pos:start="71:16" pos:end="71:72">(<argument pos:start="71:17" pos:end="71:38"><expr pos:start="71:17" pos:end="71:38"><literal type="string" pos:start="71:17" pos:end="71:38">"component %d %d:%d\n"</literal></expr></argument>, <argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">i</name></expr></argument>, <argument pos:start="71:44" pos:end="71:56"><expr pos:start="71:44" pos:end="71:56"><name pos:start="71:44" pos:end="71:56"><name pos:start="71:44" pos:end="71:44">s</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:53">h_count</name><index pos:start="71:54" pos:end="71:56">[<expr pos:start="71:55" pos:end="71:55"><name pos:start="71:55" pos:end="71:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="71:59" pos:end="71:71"><expr pos:start="71:59" pos:end="71:71"><name pos:start="71:59" pos:end="71:71"><name pos:start="71:59" pos:end="71:59">s</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:68">v_count</name><index pos:start="71:69" pos:end="71:71">[<expr pos:start="71:70" pos:end="71:70"><name pos:start="71:70" pos:end="71:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="77:5" pos:end="77:50">/* if different size, realloc/alloc picture */</comment>

    <comment type="block" pos:start="79:5" pos:end="79:45">/* XXX: also check h_count and v_count */</comment>

    <if_stmt pos:start="81:5" pos:end="137:5"><if pos:start="81:5" pos:end="137:5">if <condition pos:start="81:8" pos:end="81:49">(<expr pos:start="81:9" pos:end="81:48"><name pos:start="81:9" pos:end="81:13">width</name> <operator pos:start="81:15" pos:end="81:16">!=</operator> <name pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">width</name></name> <operator pos:start="81:27" pos:end="81:28">||</operator> <name pos:start="81:30" pos:end="81:35">height</name> <operator pos:start="81:37" pos:end="81:38">!=</operator> <name pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:40">s</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:48">height</name></name></expr>)</condition> <block pos:start="81:51" pos:end="137:5">{<block_content pos:start="83:9" pos:end="135:29">

        <for pos:start="83:9" pos:end="89:9">for<control pos:start="83:12" pos:end="83:37">(<init pos:start="83:13" pos:end="83:16"><expr pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:13">i</name><operator pos:start="83:14" pos:end="83:14">=</operator><literal type="number" pos:start="83:15" pos:end="83:15">0</literal></expr>;</init><condition pos:start="83:17" pos:end="83:33"><expr pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:17">i</name><operator pos:start="83:18" pos:end="83:18">&lt;</operator><name pos:start="83:19" pos:end="83:32">MAX_COMPONENTS</name></expr>;</condition><incr pos:start="83:34" pos:end="83:36"><expr pos:start="83:34" pos:end="83:36"><name pos:start="83:34" pos:end="83:34">i</name><operator pos:start="83:35" pos:end="83:36">++</operator></expr></incr>)</control> <block pos:start="83:39" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:41">

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><call pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:16">free</name><argument_list pos:start="85:17" pos:end="85:39">(<argument pos:start="85:18" pos:end="85:38"><expr pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:18">s</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:35">current_picture</name><index pos:start="85:36" pos:end="85:38">[<expr pos:start="85:37" pos:end="85:37"><name pos:start="85:37" pos:end="85:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:30">current_picture</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">i</name></expr>]</index></name> <operator pos:start="87:35" pos:end="87:35">=</operator> <name pos:start="87:37" pos:end="87:40">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="91:9" pos:end="91:25"><expr pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">width</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:24">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">height</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:26">height</name></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:34">/* test interlaced mode */</comment>

        <if_stmt pos:start="97:9" pos:end="107:9"><if pos:start="97:9" pos:end="107:9">if <condition pos:start="97:12" pos:end="101:50">(<expr pos:start="97:13" pos:end="101:49"><name pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:28">first_picture</name></name> <operator pos:start="97:30" pos:end="97:31">&amp;&amp;</operator>

            <name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">org_height</name></name> <operator pos:start="99:27" pos:end="99:28">!=</operator> <literal type="number" pos:start="99:30" pos:end="99:30">0</literal> <operator pos:start="99:32" pos:end="99:33">&amp;&amp;</operator>

            <name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:21">height</name></name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <operator pos:start="101:25" pos:end="101:25">(</operator><operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:39"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:39">org_height</name></name> <operator pos:start="101:41" pos:end="101:41">*</operator> <literal type="number" pos:start="101:43" pos:end="101:43">3</literal><operator pos:start="101:44" pos:end="101:44">)</operator> <operator pos:start="101:46" pos:end="101:46">/</operator> <literal type="number" pos:start="101:48" pos:end="101:48">4</literal><operator pos:start="101:49" pos:end="101:49">)</operator></expr>)</condition> <block pos:start="101:52" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:32">

            <expr_stmt pos:start="103:13" pos:end="103:30"><expr pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:25">interlaced</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:27">bottom_field</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <literal type="number" pos:start="105:31" pos:end="105:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="111:9" pos:end="133:9">for<control pos:start="111:12" pos:end="111:36">(<init pos:start="111:13" pos:end="111:16"><expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:13">i</name><operator pos:start="111:14" pos:end="111:14">=</operator><literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>;</init><condition pos:start="111:17" pos:end="111:32"><expr pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:17">i</name><operator pos:start="111:18" pos:end="111:18">&lt;</operator><name pos:start="111:19" pos:end="111:31">nb_components</name></expr>;</condition><incr pos:start="111:33" pos:end="111:35"><expr pos:start="111:33" pos:end="111:35"><name pos:start="111:33" pos:end="111:33">i</name><operator pos:start="111:34" pos:end="111:35">++</operator></expr></incr>)</control> <block pos:start="111:38" pos:end="133:9">{<block_content pos:start="113:13" pos:end="131:54">

            <decl_stmt pos:start="113:13" pos:end="113:21"><decl pos:start="113:13" pos:end="113:17"><type pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:15">int</name></type> <name pos:start="113:17" pos:end="113:17">w</name></decl>, <decl pos:start="113:20" pos:end="113:20"><type ref="prev" pos:start="113:13" pos:end="113:15"/><name pos:start="113:20" pos:end="113:20">h</name></decl>;</decl_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:13">w</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <operator pos:start="115:17" pos:end="115:17">(</operator><name pos:start="115:18" pos:end="115:25"><name pos:start="115:18" pos:end="115:18">s</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:25">width</name></name>  <operator pos:start="115:28" pos:end="115:28">+</operator> <literal type="number" pos:start="115:30" pos:end="115:30">8</literal> <operator pos:start="115:32" pos:end="115:32">*</operator> <name pos:start="115:34" pos:end="115:41"><name pos:start="115:34" pos:end="115:34">s</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:41">h_max</name></name> <operator pos:start="115:43" pos:end="115:43">-</operator> <literal type="number" pos:start="115:45" pos:end="115:45">1</literal><operator pos:start="115:46" pos:end="115:46">)</operator> <operator pos:start="115:48" pos:end="115:48">/</operator> <operator pos:start="115:50" pos:end="115:50">(</operator><literal type="number" pos:start="115:51" pos:end="115:51">8</literal> <operator pos:start="115:53" pos:end="115:53">*</operator> <name pos:start="115:55" pos:end="115:62"><name pos:start="115:55" pos:end="115:55">s</name><operator pos:start="115:56" pos:end="115:57">-&gt;</operator><name pos:start="115:58" pos:end="115:62">h_max</name></name><operator pos:start="115:63" pos:end="115:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:64"><expr pos:start="117:13" pos:end="117:63"><name pos:start="117:13" pos:end="117:13">h</name> <operator pos:start="117:15" pos:end="117:15">=</operator> <operator pos:start="117:17" pos:end="117:17">(</operator><name pos:start="117:18" pos:end="117:26"><name pos:start="117:18" pos:end="117:18">s</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:26">height</name></name> <operator pos:start="117:28" pos:end="117:28">+</operator> <literal type="number" pos:start="117:30" pos:end="117:30">8</literal> <operator pos:start="117:32" pos:end="117:32">*</operator> <name pos:start="117:34" pos:end="117:41"><name pos:start="117:34" pos:end="117:34">s</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:41">v_max</name></name> <operator pos:start="117:43" pos:end="117:43">-</operator> <literal type="number" pos:start="117:45" pos:end="117:45">1</literal><operator pos:start="117:46" pos:end="117:46">)</operator> <operator pos:start="117:48" pos:end="117:48">/</operator> <operator pos:start="117:50" pos:end="117:50">(</operator><literal type="number" pos:start="117:51" pos:end="117:51">8</literal> <operator pos:start="117:53" pos:end="117:53">*</operator> <name pos:start="117:55" pos:end="117:62"><name pos:start="117:55" pos:end="117:55">s</name><operator pos:start="117:56" pos:end="117:57">-&gt;</operator><name pos:start="117:58" pos:end="117:62">v_max</name></name><operator pos:start="117:63" pos:end="117:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:13">w</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:17">w</name> <operator pos:start="119:19" pos:end="119:19">*</operator> <literal type="number" pos:start="119:21" pos:end="119:21">8</literal> <operator pos:start="119:23" pos:end="119:23">*</operator> <name pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:25">s</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:34">h_count</name><index pos:start="119:35" pos:end="119:37">[<expr pos:start="119:36" pos:end="119:36"><name pos:start="119:36" pos:end="119:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:38"><expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:13">h</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:17">h</name> <operator pos:start="121:19" pos:end="121:19">*</operator> <literal type="number" pos:start="121:21" pos:end="121:21">8</literal> <operator pos:start="121:23" pos:end="121:23">*</operator> <name pos:start="121:25" pos:end="121:37"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:34">v_count</name><index pos:start="121:35" pos:end="121:37">[<expr pos:start="121:36" pos:end="121:36"><name pos:start="121:36" pos:end="121:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="125:23"><if pos:start="123:13" pos:end="125:23">if <condition pos:start="123:16" pos:end="123:30">(<expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:29">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:23"><block_content pos:start="125:17" pos:end="125:23">

                <expr_stmt pos:start="125:17" pos:end="125:23"><expr pos:start="125:17" pos:end="125:22"><name pos:start="125:17" pos:end="125:17">w</name> <operator pos:start="125:19" pos:end="125:20">*=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:31"><expr pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:23">linesize</name><index pos:start="127:24" pos:end="127:26">[<expr pos:start="127:25" pos:end="127:25"><name pos:start="127:25" pos:end="127:25">i</name></expr>]</index></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:30">w</name></expr>;</expr_stmt>

            <comment type="block" pos:start="129:13" pos:end="129:59">/* memory test is done in mjpeg_decode_sos() */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:54"><expr pos:start="131:13" pos:end="131:53"><name pos:start="131:13" pos:end="131:33"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:30">current_picture</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><name pos:start="131:32" pos:end="131:32">i</name></expr>]</index></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <call pos:start="131:37" pos:end="131:53"><name pos:start="131:37" pos:end="131:46">av_mallocz</name><argument_list pos:start="131:47" pos:end="131:53">(<argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><name pos:start="131:48" pos:end="131:48">w</name> <operator pos:start="131:50" pos:end="131:50">*</operator> <name pos:start="131:52" pos:end="131:52">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:24">first_picture</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <literal type="number" pos:start="135:28" pos:end="135:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="143:63"><if pos:start="141:5" pos:end="143:63">if <condition pos:start="141:8" pos:end="141:35">(<expr pos:start="141:9" pos:end="141:34"><name pos:start="141:9" pos:end="141:11">len</name> <operator pos:start="141:13" pos:end="141:14">!=</operator> <literal type="number" pos:start="141:16" pos:end="141:17">8</literal><operator pos:start="141:17" pos:end="141:17">+</operator><operator pos:start="141:18" pos:end="141:18">(</operator><literal type="number" pos:start="141:19" pos:end="141:19">3</literal><operator pos:start="141:20" pos:end="141:20">*</operator><name pos:start="141:21" pos:end="141:33">nb_components</name><operator pos:start="141:34" pos:end="141:34">)</operator></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:63"><block_content pos:start="143:9" pos:end="143:63">

	<expr_stmt pos:start="143:9" pos:end="143:63"><expr pos:start="143:9" pos:end="143:62"><call pos:start="143:9" pos:end="143:62"><name pos:start="143:9" pos:end="143:15">dprintf</name><argument_list pos:start="143:16" pos:end="143:62">(<argument pos:start="143:17" pos:end="143:56"><expr pos:start="143:17" pos:end="143:56"><literal type="string" pos:start="143:17" pos:end="143:56">"decode_sof0: error, len(%d) mismatch\n"</literal></expr></argument>, <argument pos:start="143:59" pos:end="143:61"><expr pos:start="143:59" pos:end="143:61"><name pos:start="143:59" pos:end="143:61">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
