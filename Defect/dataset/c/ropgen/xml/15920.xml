<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15920.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">estimate_qp</name><parameter_list pos:start="1:23" pos:end="1:54">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:37">MpegEncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:53">dry_run</name></decl></parameter>)</parameter_list><block pos:start="1:55" pos:end="67:1">{<block_content pos:start="3:5" pos:end="65:13">

    <if_stmt pos:start="3:5" pos:end="21:5"><if pos:start="3:5" pos:end="11:5">if <condition pos:start="3:8" pos:end="3:23">(<expr pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:9">s</name><operator pos:start="3:10" pos:end="3:11">-&gt;</operator><name pos:start="3:12" pos:end="3:22">next_lambda</name></name></expr>)</condition><block pos:start="3:24" pos:end="11:5">{<block_content pos:start="5:9" pos:end="9:39">

        <expr_stmt pos:start="5:9" pos:end="7:52"><expr pos:start="5:9" pos:end="7:51"><name pos:start="5:9" pos:end="5:39"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:30">current_picture_ptr</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:39">quality</name></name><operator pos:start="5:40" pos:end="5:40">=</operator>

        <name pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:26">current_picture</name><operator pos:start="7:27" pos:end="7:27">.</operator><name pos:start="7:28" pos:end="7:34">quality</name></name> <operator pos:start="7:36" pos:end="7:36">=</operator> <name pos:start="7:38" pos:end="7:51"><name pos:start="7:38" pos:end="7:38">s</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:51">next_lambda</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="9:9" pos:end="9:39"><if pos:start="9:9" pos:end="9:39">if<condition pos:start="9:11" pos:end="9:20">(<expr pos:start="9:12" pos:end="9:19"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:19">dry_run</name></expr>)</condition><block type="pseudo" pos:start="9:22" pos:end="9:39"><block_content pos:start="9:22" pos:end="9:39"> <expr_stmt pos:start="9:22" pos:end="9:39"><expr pos:start="9:22" pos:end="9:38"><name pos:start="9:22" pos:end="9:35"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:35">next_lambda</name></name><operator pos:start="9:36" pos:end="9:36">=</operator> <literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="21:5">else if <condition pos:start="11:15" pos:end="11:32">(<expr pos:start="11:16" pos:end="11:31"><operator pos:start="11:16" pos:end="11:16">!</operator><name pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:31">fixed_qscale</name></name></expr>)</condition> <block pos:start="11:34" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:22">

        <expr_stmt pos:start="13:9" pos:end="15:73"><expr pos:start="13:9" pos:end="15:72"><name pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:30">current_picture_ptr</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:39">quality</name></name><operator pos:start="13:40" pos:end="13:40">=</operator>

        <name pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:26">current_picture</name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:34">quality</name></name> <operator pos:start="15:36" pos:end="15:36">=</operator> <call pos:start="15:38" pos:end="15:72"><name pos:start="15:38" pos:end="15:60">ff_rate_estimate_qscale</name><argument_list pos:start="15:61" pos:end="15:72">(<argument pos:start="15:62" pos:end="15:62"><expr pos:start="15:62" pos:end="15:62"><name pos:start="15:62" pos:end="15:62">s</name></expr></argument>, <argument pos:start="15:65" pos:end="15:71"><expr pos:start="15:65" pos:end="15:71"><name pos:start="15:65" pos:end="15:71">dry_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:22"><if pos:start="17:9" pos:end="19:22">if <condition pos:start="17:12" pos:end="17:43">(<expr pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:30">current_picture</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:38">quality</name></name> <operator pos:start="17:40" pos:end="17:40">&lt;</operator> <literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:22"><block_content pos:start="19:13" pos:end="19:22">

            <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">-</operator><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="59:46"><if pos:start="25:5" pos:end="57:5">if<condition pos:start="25:7" pos:end="25:25">(<expr pos:start="25:8" pos:end="25:24"><name pos:start="25:8" pos:end="25:24"><name pos:start="25:8" pos:end="25:8">s</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:24">adaptive_quant</name></name></expr>)</condition><block pos:start="25:26" pos:end="57:5">{<block_content pos:start="27:9" pos:end="53:38">

        <switch pos:start="27:9" pos:end="49:9">switch<condition pos:start="27:15" pos:end="27:27">(<expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">codec_id</name></name></expr>)</condition><block pos:start="27:28" pos:end="49:9">{<block_content pos:start="29:9" pos:end="47:18">

        <case pos:start="29:9" pos:end="29:28">case <expr pos:start="29:14" pos:end="29:27"><name pos:start="29:14" pos:end="29:27">CODEC_ID_MPEG4</name></expr>:</case>

            <if_stmt pos:start="31:13" pos:end="33:42"><if pos:start="31:13" pos:end="33:42">if <condition pos:start="31:16" pos:end="31:37">(<expr pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:36">CONFIG_MPEG4_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:42"><block_content pos:start="33:17" pos:end="33:42">

                <expr_stmt pos:start="33:17" pos:end="33:42"><expr pos:start="33:17" pos:end="33:41"><call pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:38">ff_clean_mpeg4_qscales</name><argument_list pos:start="33:39" pos:end="33:41">(<argument pos:start="33:40" pos:end="33:40"><expr pos:start="33:40" pos:end="33:40"><name pos:start="33:40" pos:end="33:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:27">case <expr pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:26">CODEC_ID_H263</name></expr>:</case>

        <case pos:start="39:9" pos:end="39:28">case <expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:27">CODEC_ID_H263P</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:27">case <expr pos:start="41:14" pos:end="41:26"><name pos:start="41:14" pos:end="41:26">CODEC_ID_FLV1</name></expr>:</case>

            <if_stmt pos:start="43:13" pos:end="45:41"><if pos:start="43:13" pos:end="45:41">if <condition pos:start="43:16" pos:end="43:78">(<expr pos:start="43:17" pos:end="43:77"><name pos:start="43:17" pos:end="43:35">CONFIG_H263_ENCODER</name><operator pos:start="43:36" pos:end="43:37">||</operator><name pos:start="43:38" pos:end="43:57">CONFIG_H263P_ENCODER</name><operator pos:start="43:58" pos:end="43:59">||</operator><name pos:start="43:60" pos:end="43:77">CONFIG_FLV_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:41"><block_content pos:start="45:17" pos:end="45:41">

                <expr_stmt pos:start="45:17" pos:end="45:41"><expr pos:start="45:17" pos:end="45:40"><call pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:37">ff_clean_h263_qscales</name><argument_list pos:start="45:38" pos:end="45:40">(<argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><name pos:start="45:39" pos:end="45:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">lambda</name></name><operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:34">lambda_table</name><index pos:start="53:35" pos:end="53:37">[<expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="line" pos:start="55:9" pos:end="55:22">//FIXME broken</comment>

    </block_content>}</block></if><else pos:start="57:6" pos:end="59:46">else<block type="pseudo" pos:start="59:9" pos:end="59:46"><block_content pos:start="59:9" pos:end="59:46">

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">lambda</name></name><operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:45"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:37">current_picture</name><operator pos:start="59:38" pos:end="59:38">.</operator><name pos:start="59:39" pos:end="59:45">quality</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<comment type="line" pos:start="61:1" pos:end="61:74">//printf("%d %d\n", s-&gt;avctx-&gt;global_quality, s-&gt;current_picture.quality);</comment>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:17">update_qscale</name><argument_list pos:start="63:18" pos:end="63:20">(<argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
