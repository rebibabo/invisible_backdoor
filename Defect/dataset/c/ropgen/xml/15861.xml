<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15861.c" pos:tabs="8"><function pos:start="1:1" pos:end="62:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">socket_connect</name><parameter_list pos:start="1:19" pos:end="3:69">(<parameter pos:start="1:20" pos:end="1:38"><decl pos:start="1:20" pos:end="1:38"><type pos:start="1:20" pos:end="1:38"><name pos:start="1:20" pos:end="1:32">SocketAddress</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">addr</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:45">Error</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier><modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">errp</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:54"><decl pos:start="3:20" pos:end="3:54"><type pos:start="3:20" pos:end="3:54"><name pos:start="3:20" pos:end="3:44">NonBlockingConnectHandler</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">callback</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:68"><decl pos:start="3:57" pos:end="3:68"><type pos:start="3:57" pos:end="3:68"><name pos:start="3:57" pos:end="3:60">void</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:68">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="62:1">{<block_content pos:start="7:5" pos:end="60:14">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:52"><name pos:start="13:12" pos:end="13:34">qemu_opts_create_nofail</name><argument_list pos:start="13:35" pos:end="13:52">(<argument pos:start="13:36" pos:end="13:51"><expr pos:start="13:36" pos:end="13:51"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:51">socket_optslist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="56:5">switch <condition pos:start="15:12" pos:end="15:23">(<expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:16">addr</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:22">kind</name></name></expr>)</condition> <block pos:start="15:25" pos:end="56:5">{<block_content pos:start="17:5" pos:end="54:16">

    <case pos:start="17:5" pos:end="17:34">case <expr pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:33">SOCKET_ADDRESS_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:25">inet_addr_to_opts</name><argument_list pos:start="19:26" pos:end="19:43">(<argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">opts</name></expr></argument>, <argument pos:start="19:33" pos:end="19:42"><expr pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:36">addr</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:42">inet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:10">fd</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:60"><name pos:start="21:14" pos:end="21:30">inet_connect_opts</name><argument_list pos:start="21:31" pos:end="21:60">(<argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">opts</name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">errp</name></expr></argument>, <argument pos:start="21:44" pos:end="21:51"><expr pos:start="21:44" pos:end="21:51"><name pos:start="21:44" pos:end="21:51">callback</name></expr></argument>, <argument pos:start="21:54" pos:end="21:59"><expr pos:start="21:54" pos:end="21:59"><name pos:start="21:54" pos:end="21:59">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>



    <case pos:start="27:5" pos:end="27:34">case <expr pos:start="27:10" pos:end="27:33"><name pos:start="27:10" pos:end="27:33">SOCKET_ADDRESS_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:20">qemu_opt_set</name><argument_list pos:start="29:21" pos:end="29:54">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">opts</name></expr></argument>, <argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><literal type="string" pos:start="29:28" pos:end="29:33">"path"</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:53"><expr pos:start="29:36" pos:end="29:53"><name pos:start="29:36" pos:end="29:53"><name pos:start="29:36" pos:end="29:39">addr</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:47">q_unix</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:53">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:61"><expr pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:10">fd</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:60"><name pos:start="31:14" pos:end="31:30">unix_connect_opts</name><argument_list pos:start="31:31" pos:end="31:60">(<argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">opts</name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">errp</name></expr></argument>, <argument pos:start="31:44" pos:end="31:51"><expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51">callback</name></expr></argument>, <argument pos:start="31:54" pos:end="31:59"><expr pos:start="31:54" pos:end="31:59"><name pos:start="31:54" pos:end="31:59">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>



    <case pos:start="37:5" pos:end="37:32">case <expr pos:start="37:10" pos:end="37:31"><name pos:start="37:10" pos:end="37:31">SOCKET_ADDRESS_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:10">fd</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:57"><name pos:start="39:14" pos:end="39:27">monitor_get_fd</name><argument_list pos:start="39:28" pos:end="39:57">(<argument pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:35">cur_mon</name></expr></argument>, <argument pos:start="39:38" pos:end="39:50"><expr pos:start="39:38" pos:end="39:50"><name pos:start="39:38" pos:end="39:50"><name pos:start="39:38" pos:end="39:41">addr</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:45">fd</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:50">str</name></name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="46:9"><if pos:start="41:9" pos:end="46:9">if <condition pos:start="41:12" pos:end="41:21">(<expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20">callback</name></expr>)</condition> <block pos:start="41:23" pos:end="46:9">{<block_content pos:start="44:13" pos:end="44:33">


            <expr_stmt pos:start="44:13" pos:end="44:33"><expr pos:start="44:13" pos:end="44:32"><call pos:start="44:13" pos:end="44:32"><name pos:start="44:13" pos:end="44:20">callback</name><argument_list pos:start="44:21" pos:end="44:32">(<argument pos:start="44:22" pos:end="44:23"><expr pos:start="44:22" pos:end="44:23"><name pos:start="44:22" pos:end="44:23">fd</name></expr></argument>, <argument pos:start="44:26" pos:end="44:31"><expr pos:start="44:26" pos:end="44:31"><name pos:start="44:26" pos:end="44:31">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="48:9" pos:end="48:14">break;</break>



    <default pos:start="52:5" pos:end="52:12">default:</default>

        <expr_stmt pos:start="54:9" pos:end="54:16"><expr pos:start="54:9" pos:end="54:15"><call pos:start="54:9" pos:end="54:15"><name pos:start="54:9" pos:end="54:13">abort</name><argument_list pos:start="54:14" pos:end="54:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="58:5" pos:end="58:24"><expr pos:start="58:5" pos:end="58:23"><call pos:start="58:5" pos:end="58:23"><name pos:start="58:5" pos:end="58:17">qemu_opts_del</name><argument_list pos:start="58:18" pos:end="58:23">(<argument pos:start="58:19" pos:end="58:22"><expr pos:start="58:19" pos:end="58:22"><name pos:start="58:19" pos:end="58:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="60:5" pos:end="60:14">return <expr pos:start="60:12" pos:end="60:13"><name pos:start="60:12" pos:end="60:13">fd</name></expr>;</return>

</block_content>}</block></function></unit>
