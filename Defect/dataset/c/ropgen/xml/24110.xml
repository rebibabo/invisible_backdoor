<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24110.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">formant_postfilter</name><parameter_list pos:start="1:31" pos:end="1:77">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">G723_1_Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">p</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:57">int16_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">lpc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:71">int16_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:5">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int16_t</name></type> <name pos:start="5:13" pos:end="5:37"><name pos:start="5:13" pos:end="5:23">filter_coef</name><index pos:start="5:24" pos:end="5:26">[<expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">2</literal></expr>]</index><index pos:start="5:27" pos:end="5:37">[<expr pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:36">LPC_ORDER</name></expr>]</index></name></decl>, <decl pos:start="5:40" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:11"><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:47">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:21">filter_signal</name><index pos:start="7:22" pos:end="7:44">[<expr pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:31">LPC_ORDER</name> <operator pos:start="7:33" pos:end="7:33">+</operator> <name pos:start="7:35" pos:end="7:43">FRAME_LEN</name></expr>]</index></name></decl>, <decl pos:start="7:47" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:7"><modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:57">signal_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><call pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:10">memcpy</name><argument_list pos:start="13:11" pos:end="13:53">(<argument pos:start="13:12" pos:end="13:14"><expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">buf</name></expr></argument>, <argument pos:start="13:17" pos:end="13:26"><expr pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:17">p</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:26">fir_mem</name></name></expr></argument>, <argument pos:start="13:29" pos:end="13:52"><expr pos:start="13:29" pos:end="13:52"><name pos:start="13:29" pos:end="13:37">LPC_ORDER</name> <operator pos:start="13:39" pos:end="13:39">*</operator> <sizeof pos:start="13:41" pos:end="13:52">sizeof<argument_list pos:start="13:47" pos:end="13:52">(<argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><operator pos:start="13:48" pos:end="13:48">*</operator><name pos:start="13:49" pos:end="13:51">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:74"><expr pos:start="15:5" pos:end="15:73"><call pos:start="15:5" pos:end="15:73"><name pos:start="15:5" pos:end="15:10">memcpy</name><argument_list pos:start="15:11" pos:end="15:73">(<argument pos:start="15:12" pos:end="15:24"><expr pos:start="15:12" pos:end="15:24"><name pos:start="15:12" pos:end="15:24">filter_signal</name></expr></argument>, <argument pos:start="15:27" pos:end="15:36"><expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:27">p</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:36">iir_mem</name></name></expr></argument>, <argument pos:start="15:39" pos:end="15:72"><expr pos:start="15:39" pos:end="15:72"><name pos:start="15:39" pos:end="15:47">LPC_ORDER</name> <operator pos:start="15:49" pos:end="15:49">*</operator> <sizeof pos:start="15:51" pos:end="15:72">sizeof<argument_list pos:start="15:57" pos:end="15:72">(<argument pos:start="15:58" pos:end="15:71"><expr pos:start="15:58" pos:end="15:71"><operator pos:start="15:58" pos:end="15:58">*</operator><name pos:start="15:59" pos:end="15:71">filter_signal</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="39:5">for <control pos:start="19:9" pos:end="19:69">(<init pos:start="19:10" pos:end="19:30"><expr pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:22">LPC_ORDER</name></expr><operator pos:start="19:23" pos:end="19:23">,</operator> <expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">j</name> <operator pos:start="19:27" pos:end="19:27">=</operator> <literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr>;</init> <condition pos:start="19:32" pos:end="19:45"><expr pos:start="19:32" pos:end="19:44"><name pos:start="19:32" pos:end="19:32">j</name> <operator pos:start="19:34" pos:end="19:34">&lt;</operator> <name pos:start="19:36" pos:end="19:44">SUBFRAMES</name></expr>;</condition> <incr pos:start="19:47" pos:end="19:68"><expr pos:start="19:47" pos:end="19:63"><name pos:start="19:47" pos:end="19:47">i</name> <operator pos:start="19:49" pos:end="19:50">+=</operator> <name pos:start="19:52" pos:end="19:63">SUBFRAME_LEN</name></expr><operator pos:start="19:64" pos:end="19:64">,</operator> <expr pos:start="19:66" pos:end="19:68"><name pos:start="19:66" pos:end="19:66">j</name><operator pos:start="19:67" pos:end="19:68">++</operator></expr></incr>)</control> <block pos:start="19:71" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:25">

        <for pos:start="21:9" pos:end="31:9">for <control pos:start="21:13" pos:end="21:39">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">k</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:34"><expr pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">k</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:33">LPC_ORDER</name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">k</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:50">

            <expr_stmt pos:start="23:13" pos:end="25:50"><expr pos:start="23:13" pos:end="25:49"><name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:23">filter_coef</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>]</index><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">k</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">=</operator> <operator pos:start="23:33" pos:end="23:33">(</operator><operator pos:start="23:34" pos:end="23:34">-</operator><name pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:37">lpc</name><index pos:start="23:38" pos:end="23:40">[<expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">k</name></expr>]</index></name> <operator pos:start="23:42" pos:end="23:42">*</operator> <name pos:start="23:44" pos:end="23:63"><name pos:start="23:44" pos:end="23:57">postfilter_tbl</name><index pos:start="23:58" pos:end="23:60">[<expr pos:start="23:59" pos:end="23:59"><literal type="number" pos:start="23:59" pos:end="23:59">0</literal></expr>]</index><index pos:start="23:61" pos:end="23:63">[<expr pos:start="23:62" pos:end="23:62"><name pos:start="23:62" pos:end="23:62">k</name></expr>]</index></name> <operator pos:start="23:65" pos:end="23:65">+</operator>

                                 <operator pos:start="25:34" pos:end="25:34">(</operator><literal type="number" pos:start="25:35" pos:end="25:35">1</literal> <operator pos:start="25:37" pos:end="25:38">&lt;&lt;</operator> <literal type="number" pos:start="25:40" pos:end="25:41">14</literal><operator pos:start="25:42" pos:end="25:42">)</operator><operator pos:start="25:43" pos:end="25:43">)</operator> <operator pos:start="25:45" pos:end="25:46">&gt;&gt;</operator> <literal type="number" pos:start="25:48" pos:end="25:49">15</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="29:50"><expr pos:start="27:13" pos:end="29:49"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:23">filter_coef</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>]</index><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">k</name></expr>]</index></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><operator pos:start="27:34" pos:end="27:34">-</operator><name pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:37">lpc</name><index pos:start="27:38" pos:end="27:40">[<expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">k</name></expr>]</index></name> <operator pos:start="27:42" pos:end="27:42">*</operator> <name pos:start="27:44" pos:end="27:63"><name pos:start="27:44" pos:end="27:57">postfilter_tbl</name><index pos:start="27:58" pos:end="27:60">[<expr pos:start="27:59" pos:end="27:59"><literal type="number" pos:start="27:59" pos:end="27:59">1</literal></expr>]</index><index pos:start="27:61" pos:end="27:63">[<expr pos:start="27:62" pos:end="27:62"><name pos:start="27:62" pos:end="27:62">k</name></expr>]</index></name> <operator pos:start="27:65" pos:end="27:65">+</operator>

                                 <operator pos:start="29:34" pos:end="29:34">(</operator><literal type="number" pos:start="29:35" pos:end="29:35">1</literal> <operator pos:start="29:37" pos:end="29:38">&lt;&lt;</operator> <literal type="number" pos:start="29:40" pos:end="29:41">14</literal><operator pos:start="29:42" pos:end="29:42">)</operator><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:46">&gt;&gt;</operator> <literal type="number" pos:start="29:48" pos:end="29:49">15</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="33:9" pos:end="35:38"><expr pos:start="33:9" pos:end="35:37"><call pos:start="33:9" pos:end="35:37"><name pos:start="33:9" pos:end="33:18">iir_filter</name><argument_list pos:start="33:19" pos:end="35:37">(<argument pos:start="33:20" pos:end="33:33"><expr pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:30">filter_coef</name><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:36" pos:end="33:49"><expr pos:start="33:36" pos:end="33:49"><name pos:start="33:36" pos:end="33:49"><name pos:start="33:36" pos:end="33:46">filter_coef</name><index pos:start="33:47" pos:end="33:49">[<expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:52" pos:end="33:58"><expr pos:start="33:52" pos:end="33:58"><name pos:start="33:52" pos:end="33:54">buf</name> <operator pos:start="33:56" pos:end="33:56">+</operator> <name pos:start="33:58" pos:end="33:58">i</name></expr></argument>,

                   <argument pos:start="35:20" pos:end="35:36"><expr pos:start="35:20" pos:end="35:36"><name pos:start="35:20" pos:end="35:32">filter_signal</name> <operator pos:start="35:34" pos:end="35:34">+</operator> <name pos:start="35:36" pos:end="35:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:11">lpc</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:24">LPC_ORDER</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:73"><expr pos:start="43:5" pos:end="43:72"><call pos:start="43:5" pos:end="43:72"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="43:72">(<argument pos:start="43:12" pos:end="43:21"><expr pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:12">p</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:21">fir_mem</name></name></expr></argument>, <argument pos:start="43:24" pos:end="43:38"><expr pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:26">buf</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <name pos:start="43:30" pos:end="43:38">FRAME_LEN</name></expr></argument>, <argument pos:start="43:41" pos:end="43:71"><expr pos:start="43:41" pos:end="43:71"><name pos:start="43:41" pos:end="43:49">LPC_ORDER</name> <operator pos:start="43:51" pos:end="43:51">*</operator> <sizeof pos:start="43:53" pos:end="43:71">sizeof<argument_list pos:start="43:59" pos:end="43:71">(<argument pos:start="43:60" pos:end="43:70"><expr pos:start="43:60" pos:end="43:70"><operator pos:start="43:60" pos:end="43:60">*</operator><name pos:start="43:61" pos:end="43:70"><name pos:start="43:61" pos:end="43:61">p</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:70">fir_mem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:44"><expr pos:start="45:5" pos:end="47:43"><call pos:start="45:5" pos:end="47:43"><name pos:start="45:5" pos:end="45:10">memcpy</name><argument_list pos:start="45:11" pos:end="47:43">(<argument pos:start="45:12" pos:end="45:21"><expr pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:12">p</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:21">iir_mem</name></name></expr></argument>, <argument pos:start="45:24" pos:end="45:48"><expr pos:start="45:24" pos:end="45:48"><name pos:start="45:24" pos:end="45:36">filter_signal</name> <operator pos:start="45:38" pos:end="45:38">+</operator> <name pos:start="45:40" pos:end="45:48">FRAME_LEN</name></expr></argument>,

           <argument pos:start="47:12" pos:end="47:42"><expr pos:start="47:12" pos:end="47:42"><name pos:start="47:12" pos:end="47:20">LPC_ORDER</name> <operator pos:start="47:22" pos:end="47:22">*</operator> <sizeof pos:start="47:24" pos:end="47:42">sizeof<argument_list pos:start="47:30" pos:end="47:42">(<argument pos:start="47:31" pos:end="47:41"><expr pos:start="47:31" pos:end="47:41"><operator pos:start="47:31" pos:end="47:31">*</operator><name pos:start="47:32" pos:end="47:41"><name pos:start="47:32" pos:end="47:32">p</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:41">iir_mem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:11">buf_ptr</name>    <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:20">buf</name> <operator pos:start="51:22" pos:end="51:22">+</operator> <name pos:start="51:24" pos:end="51:32">LPC_ORDER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:14">signal_ptr</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:30">filter_signal</name> <operator pos:start="53:32" pos:end="53:32">+</operator> <name pos:start="53:34" pos:end="53:42">LPC_ORDER</name></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="137:5">for <control pos:start="55:9" pos:end="55:35">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:30"><expr pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:29">SUBFRAMES</name></expr>;</condition> <incr pos:start="55:32" pos:end="55:34"><expr pos:start="55:32" pos:end="55:34"><name pos:start="55:32" pos:end="55:32">i</name><operator pos:start="55:33" pos:end="55:34">++</operator></expr></incr>)</control> <block pos:start="55:37" pos:end="137:5">{<block_content pos:start="57:9" pos:end="135:35">

        <decl_stmt pos:start="57:9" pos:end="57:42"><decl pos:start="57:9" pos:end="57:41"><type pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">int16_t</name></type> <name pos:start="57:17" pos:end="57:41"><name pos:start="57:17" pos:end="57:27">temp_vector</name><index pos:start="57:28" pos:end="57:41">[<expr pos:start="57:29" pos:end="57:40"><name pos:start="57:29" pos:end="57:40">SUBFRAME_LEN</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:17"><decl pos:start="59:9" pos:end="59:16"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:16">temp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:25"><decl pos:start="61:9" pos:end="61:24"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:21">auto_corr</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:26"><decl pos:start="63:9" pos:end="63:17"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:17">scale</name></decl>, <decl pos:start="63:20" pos:end="63:25"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:20" pos:end="63:25">energy</name></decl>;</decl_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:23">/* Normalize */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:74"><expr pos:start="69:9" pos:end="69:73"><call pos:start="69:9" pos:end="69:73"><name pos:start="69:9" pos:end="69:14">memcpy</name><argument_list pos:start="69:15" pos:end="69:73">(<argument pos:start="69:16" pos:end="69:26"><expr pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:26">temp_vector</name></expr></argument>, <argument pos:start="69:29" pos:end="69:35"><expr pos:start="69:29" pos:end="69:35"><name pos:start="69:29" pos:end="69:35">buf_ptr</name></expr></argument>, <argument pos:start="69:38" pos:end="69:72"><expr pos:start="69:38" pos:end="69:72"><name pos:start="69:38" pos:end="69:49">SUBFRAME_LEN</name> <operator pos:start="69:51" pos:end="69:51">*</operator> <sizeof pos:start="69:53" pos:end="69:72">sizeof<argument_list pos:start="69:59" pos:end="69:72">(<argument pos:start="69:60" pos:end="69:71"><expr pos:start="69:60" pos:end="69:71"><operator pos:start="69:60" pos:end="69:60">*</operator><name pos:start="69:61" pos:end="69:71">temp_vector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:13">scale</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:55"><name pos:start="71:17" pos:end="71:28">scale_vector</name><argument_list pos:start="71:29" pos:end="71:55">(<argument pos:start="71:30" pos:end="71:40"><expr pos:start="71:30" pos:end="71:40"><name pos:start="71:30" pos:end="71:40">temp_vector</name></expr></argument>, <argument pos:start="71:43" pos:end="71:54"><expr pos:start="71:43" pos:end="71:54"><name pos:start="71:43" pos:end="71:54">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:51">/* Compute auto correlation coefficients */</comment>

        <expr_stmt pos:start="77:9" pos:end="79:56"><expr pos:start="77:9" pos:end="79:55"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:17">auto_corr</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="79:55"><name pos:start="77:24" pos:end="77:34">dot_product</name><argument_list pos:start="77:35" pos:end="79:55">(<argument pos:start="77:36" pos:end="77:46"><expr pos:start="77:36" pos:end="77:46"><name pos:start="77:36" pos:end="77:46">temp_vector</name></expr></argument>, <argument pos:start="77:49" pos:end="77:63"><expr pos:start="77:49" pos:end="77:63"><name pos:start="77:49" pos:end="77:59">temp_vector</name> <operator pos:start="77:61" pos:end="77:61">+</operator> <literal type="number" pos:start="77:63" pos:end="77:63">1</literal></expr></argument>,

                                   <argument pos:start="79:36" pos:end="79:51"><expr pos:start="79:36" pos:end="79:51"><name pos:start="79:36" pos:end="79:47">SUBFRAME_LEN</name> <operator pos:start="79:49" pos:end="79:49">-</operator> <literal type="number" pos:start="79:51" pos:end="79:51">1</literal></expr></argument>, <argument pos:start="79:54" pos:end="79:54"><expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:78"><expr pos:start="81:9" pos:end="81:77"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:17">auto_corr</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">1</literal></expr>]</index></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="81:77"><name pos:start="81:24" pos:end="81:34">dot_product</name><argument_list pos:start="81:35" pos:end="81:77">(<argument pos:start="81:36" pos:end="81:46"><expr pos:start="81:36" pos:end="81:46"><name pos:start="81:36" pos:end="81:46">temp_vector</name></expr></argument>, <argument pos:start="81:49" pos:end="81:59"><expr pos:start="81:49" pos:end="81:59"><name pos:start="81:49" pos:end="81:59">temp_vector</name></expr></argument>, <argument pos:start="81:62" pos:end="81:73"><expr pos:start="81:62" pos:end="81:73"><name pos:start="81:62" pos:end="81:73">SUBFRAME_LEN</name></expr></argument>, <argument pos:start="81:76" pos:end="81:76"><expr pos:start="81:76" pos:end="81:76"><literal type="number" pos:start="81:76" pos:end="81:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:44">/* Compute reflection coefficient */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:12">temp</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <name pos:start="87:16" pos:end="87:27"><name pos:start="87:16" pos:end="87:24">auto_corr</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>]</index></name> <operator pos:start="87:29" pos:end="87:30">&gt;&gt;</operator> <literal type="number" pos:start="87:32" pos:end="87:33">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:17">(<expr pos:start="89:13" pos:end="89:16"><name pos:start="89:13" pos:end="89:16">temp</name></expr>)</condition> <block pos:start="89:19" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:46">

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:16">temp</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <operator pos:start="91:20" pos:end="91:20">(</operator><name pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:29">auto_corr</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>]</index></name> <operator pos:start="91:34" pos:end="91:35">&gt;&gt;</operator> <literal type="number" pos:start="91:37" pos:end="91:37">2</literal><operator pos:start="91:38" pos:end="91:38">)</operator> <operator pos:start="91:40" pos:end="91:40">/</operator> <name pos:start="91:42" pos:end="91:45">temp</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:70"><expr pos:start="95:9" pos:end="95:69"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:9">p</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:26">reflection_coef</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <operator pos:start="95:30" pos:end="95:30">(</operator><literal type="number" pos:start="95:31" pos:end="95:31">3</literal> <operator pos:start="95:33" pos:end="95:33">*</operator> <name pos:start="95:35" pos:end="95:52"><name pos:start="95:35" pos:end="95:35">p</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:52">reflection_coef</name></name> <operator pos:start="95:54" pos:end="95:54">+</operator> <name pos:start="95:56" pos:end="95:59">temp</name> <operator pos:start="95:61" pos:end="95:61">+</operator> <literal type="number" pos:start="95:63" pos:end="95:63">2</literal><operator pos:start="95:64" pos:end="95:64">)</operator> <operator pos:start="95:66" pos:end="95:67">&gt;&gt;</operator> <literal type="number" pos:start="95:69" pos:end="95:69">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:12">temp</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">-</operator><name pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:17">p</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:34">reflection_coef</name></name> <operator pos:start="97:36" pos:end="97:37">&gt;&gt;</operator> <literal type="number" pos:start="97:39" pos:end="97:39">1</literal> <operator pos:start="97:41" pos:end="97:41">&amp;</operator> <operator pos:start="97:43" pos:end="97:43">~</operator><literal type="number" pos:start="97:44" pos:end="97:44">3</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="101:9" pos:end="101:33">/* Compensation filter */</comment>

        <for pos:start="103:9" pos:end="111:9">for <control pos:start="103:13" pos:end="103:42">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">j</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:37"><expr pos:start="103:21" pos:end="103:36"><name pos:start="103:21" pos:end="103:21">j</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:36">SUBFRAME_LEN</name></expr>;</condition> <incr pos:start="103:39" pos:end="103:41"><expr pos:start="103:39" pos:end="103:41"><name pos:start="103:39" pos:end="103:39">j</name><operator pos:start="103:40" pos:end="103:41">++</operator></expr></incr>)</control> <block pos:start="103:44" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:59">

            <expr_stmt pos:start="105:13" pos:end="109:59"><expr pos:start="105:13" pos:end="109:58"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:19">buf_ptr</name><index pos:start="105:20" pos:end="105:22">[<expr pos:start="105:21" pos:end="105:21"><name pos:start="105:21" pos:end="105:21">j</name></expr>]</index></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <call pos:start="105:26" pos:end="109:52"><name pos:start="105:26" pos:end="105:39">av_clipl_int32</name><argument_list pos:start="105:40" pos:end="109:52">(<argument pos:start="105:41" pos:end="109:51"><expr pos:start="105:41" pos:end="109:51"><name pos:start="105:41" pos:end="105:53"><name pos:start="105:41" pos:end="105:50">signal_ptr</name><index pos:start="105:51" pos:end="105:53">[<expr pos:start="105:52" pos:end="105:52"><name pos:start="105:52" pos:end="105:52">j</name></expr>]</index></name> <operator pos:start="105:55" pos:end="105:55">+</operator>

                                        <operator pos:start="107:41" pos:end="107:41">(</operator><operator pos:start="107:42" pos:end="107:42">(</operator><name pos:start="107:43" pos:end="107:59"><name pos:start="107:43" pos:end="107:52">signal_ptr</name><index pos:start="107:53" pos:end="107:59">[<expr pos:start="107:54" pos:end="107:58"><name pos:start="107:54" pos:end="107:54">j</name> <operator pos:start="107:56" pos:end="107:56">-</operator> <literal type="number" pos:start="107:58" pos:end="107:58">1</literal></expr>]</index></name> <operator pos:start="107:61" pos:end="107:62">&gt;&gt;</operator> <literal type="number" pos:start="107:64" pos:end="107:65">16</literal><operator pos:start="107:66" pos:end="107:66">)</operator> <operator pos:start="107:68" pos:end="107:68">*</operator>

                                         <name pos:start="109:42" pos:end="109:45">temp</name> <operator pos:start="109:47" pos:end="109:48">&lt;&lt;</operator> <literal type="number" pos:start="109:50" pos:end="109:50">1</literal><operator pos:start="109:51" pos:end="109:51">)</operator></expr></argument>)</argument_list></call> <operator pos:start="109:54" pos:end="109:55">&gt;&gt;</operator> <literal type="number" pos:start="109:57" pos:end="109:58">16</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="115:9" pos:end="115:46">/* Compute normalized signal energy */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:12">temp</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <literal type="number" pos:start="117:16" pos:end="117:16">2</literal> <operator pos:start="117:18" pos:end="117:18">*</operator> <name pos:start="117:20" pos:end="117:24">scale</name> <operator pos:start="117:26" pos:end="117:26">+</operator> <literal type="number" pos:start="117:28" pos:end="117:28">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:42"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:21">(<expr pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:16">temp</name> <operator pos:start="119:18" pos:end="119:18">&lt;</operator> <literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>)</condition> <block pos:start="119:23" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:68">

            <expr_stmt pos:start="121:13" pos:end="121:68"><expr pos:start="121:13" pos:end="121:67"><name pos:start="121:13" pos:end="121:18">energy</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:67"><name pos:start="121:22" pos:end="121:35">av_clipl_int32</name><argument_list pos:start="121:36" pos:end="121:67">(<argument pos:start="121:37" pos:end="121:66"><expr pos:start="121:37" pos:end="121:66"><operator pos:start="121:37" pos:end="121:37">(</operator><name pos:start="121:38" pos:end="121:44">int64_t</name><operator pos:start="121:45" pos:end="121:45">)</operator><name pos:start="121:46" pos:end="121:57"><name pos:start="121:46" pos:end="121:54">auto_corr</name><index pos:start="121:55" pos:end="121:57">[<expr pos:start="121:56" pos:end="121:56"><literal type="number" pos:start="121:56" pos:end="121:56">1</literal></expr>]</index></name> <operator pos:start="121:59" pos:end="121:60">&lt;&lt;</operator> <operator pos:start="121:62" pos:end="121:62">-</operator><name pos:start="121:63" pos:end="121:66">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="125:42">else<block type="pseudo" pos:start="125:13" pos:end="125:42"><block_content pos:start="125:13" pos:end="125:42">

            <expr_stmt pos:start="125:13" pos:end="125:42"><expr pos:start="125:13" pos:end="125:41"><name pos:start="125:13" pos:end="125:18">energy</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:33"><name pos:start="125:22" pos:end="125:30">auto_corr</name><index pos:start="125:31" pos:end="125:33">[<expr pos:start="125:32" pos:end="125:32"><literal type="number" pos:start="125:32" pos:end="125:32">1</literal></expr>]</index></name> <operator pos:start="125:35" pos:end="125:36">&gt;&gt;</operator> <name pos:start="125:38" pos:end="125:41">temp</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><call pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:18">gain_scale</name><argument_list pos:start="129:19" pos:end="129:38">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">p</name></expr></argument>, <argument pos:start="129:23" pos:end="129:29"><expr pos:start="129:23" pos:end="129:29"><name pos:start="129:23" pos:end="129:29">buf_ptr</name></expr></argument>, <argument pos:start="129:32" pos:end="129:37"><expr pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:37">energy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:35"><expr pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:15">buf_ptr</name>    <operator pos:start="133:20" pos:end="133:21">+=</operator> <name pos:start="133:23" pos:end="133:34">SUBFRAME_LEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:35"><expr pos:start="135:9" pos:end="135:34"><name pos:start="135:9" pos:end="135:18">signal_ptr</name> <operator pos:start="135:20" pos:end="135:21">+=</operator> <name pos:start="135:23" pos:end="135:34">SUBFRAME_LEN</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
