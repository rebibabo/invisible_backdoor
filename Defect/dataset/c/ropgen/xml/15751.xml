<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15751.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_hpeldsp_init_x86</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">HpelDSPContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:53">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:47">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:46"><if pos:start="9:5" pos:end="11:46">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:18">INLINE_MMX</name><argument_list pos:start="9:19" pos:end="9:29">(<argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><name pos:start="9:20" pos:end="9:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:46"><block_content pos:start="11:9" pos:end="11:46">

        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:24">hpeldsp_init_mmx</name><argument_list pos:start="11:25" pos:end="11:45">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">c</name></expr></argument>, <argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">flags</name></expr></argument>, <argument pos:start="11:36" pos:end="11:44"><expr pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:44">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:49"><if pos:start="15:5" pos:end="17:49">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:23">EXTERNAL_MMXEXT</name><argument_list pos:start="15:24" pos:end="15:34">(<argument pos:start="15:25" pos:end="15:33"><expr pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:33">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:49"><block_content pos:start="17:9" pos:end="17:49">

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><call pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:27">hpeldsp_init_mmxext</name><argument_list pos:start="17:28" pos:end="17:48">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">c</name></expr></argument>, <argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36">flags</name></expr></argument>, <argument pos:start="17:39" pos:end="17:47"><expr pos:start="17:39" pos:end="17:47"><name pos:start="17:39" pos:end="17:47">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:48"><if pos:start="21:5" pos:end="23:48">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:25">EXTERNAL_AMD3DNOW</name><argument_list pos:start="21:26" pos:end="21:36">(<argument pos:start="21:27" pos:end="21:35"><expr pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:48"><block_content pos:start="23:9" pos:end="23:48">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:26">hpeldsp_init_3dnow</name><argument_list pos:start="23:27" pos:end="23:47">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">c</name></expr></argument>, <argument pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:35">flags</name></expr></argument>, <argument pos:start="23:38" pos:end="23:46"><expr pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:46">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:47"><if pos:start="27:5" pos:end="29:47">if <condition pos:start="27:8" pos:end="27:33">(<expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:21">EXTERNAL_SSE2</name><argument_list pos:start="27:22" pos:end="27:32">(<argument pos:start="27:23" pos:end="27:31"><expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:47"><block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:25">hpeldsp_init_sse2</name><argument_list pos:start="29:26" pos:end="29:46">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">c</name></expr></argument>, <argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><name pos:start="29:30" pos:end="29:34">flags</name></expr></argument>, <argument pos:start="29:37" pos:end="29:45"><expr pos:start="29:37" pos:end="29:45"><name pos:start="29:37" pos:end="29:45">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
