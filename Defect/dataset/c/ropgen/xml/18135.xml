<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18135.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">vhdx_create_new_metadata</name><parameter_list pos:start="1:36" pos:end="11:55">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:55"><decl pos:start="3:37" pos:end="3:55"><type pos:start="3:37" pos:end="3:55"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:55">image_size</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:55"><decl pos:start="5:37" pos:end="5:55"><type pos:start="5:37" pos:end="5:55"><name pos:start="5:37" pos:end="5:44">uint32_t</name></type> <name pos:start="5:46" pos:end="5:55">block_size</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:56"><decl pos:start="7:37" pos:end="7:56"><type pos:start="7:37" pos:end="7:56"><name pos:start="7:37" pos:end="7:44">uint32_t</name></type> <name pos:start="7:46" pos:end="7:56">sector_size</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:60"><decl pos:start="9:37" pos:end="9:60"><type pos:start="9:37" pos:end="9:60"><name pos:start="9:37" pos:end="9:44">uint64_t</name></type> <name pos:start="9:46" pos:end="9:60">metadata_offset</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:54"><decl pos:start="11:37" pos:end="11:54"><type pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:49">VHDXImageType</name></type> <name pos:start="11:51" pos:end="11:54">type</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="225:1">{<block_content pos:start="15:5" pos:end="223:15">

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">offset</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:16">buffer</name> <init pos:start="19:18" pos:end="19:23">= <expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">void</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:22">entry_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:38"><decl pos:start="23:5" pos:end="23:37"><type pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:27">VHDXMetadataTableHeader</name> <modifier pos:start="23:29" pos:end="23:29">*</modifier></type><name pos:start="23:30" pos:end="23:37">md_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:26">VHDXMetadataTableEntry</name>  <modifier pos:start="25:29" pos:end="25:29">*</modifier></type><name pos:start="25:30" pos:end="25:43">md_table_entry</name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:26">/* Metadata entries */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:43"><decl pos:start="31:5" pos:end="31:42"><type pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:22">VHDXFileParameters</name>     <modifier pos:start="31:28" pos:end="31:28">*</modifier></type><name pos:start="31:29" pos:end="31:42">mt_file_params</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:44"><decl pos:start="33:5" pos:end="33:43"><type pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:23">VHDXVirtualDiskSize</name>    <modifier pos:start="33:28" pos:end="33:28">*</modifier></type><name pos:start="33:29" pos:end="33:43">mt_virtual_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:38"><decl pos:start="35:5" pos:end="35:37"><type pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:18">VHDXPage83Data</name>         <modifier pos:start="35:28" pos:end="35:28">*</modifier></type><name pos:start="35:29" pos:end="35:37">mt_page83</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:58"><decl pos:start="37:5" pos:end="37:57"><type pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:36">VHDXVirtualDiskLogicalSectorSize</name>  <modifier pos:start="37:39" pos:end="37:39">*</modifier></type><name pos:start="37:40" pos:end="37:57">mt_log_sector_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:59"><decl pos:start="39:5" pos:end="39:58"><type pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:37">VHDXVirtualDiskPhysicalSectorSize</name> <modifier pos:start="39:39" pos:end="39:39">*</modifier></type><name pos:start="39:40" pos:end="39:58">mt_phys_sector_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:62"><expr pos:start="43:5" pos:end="43:61"><name pos:start="43:5" pos:end="43:16">entry_buffer</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:61"><name pos:start="43:20" pos:end="43:28">g_malloc0</name><argument_list pos:start="43:29" pos:end="43:61">(<argument pos:start="43:30" pos:end="43:60"><expr pos:start="43:30" pos:end="43:60"><name pos:start="43:30" pos:end="43:60">VHDX_METADATA_ENTRY_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:18">mt_file_params</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:33">entry_buffer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:10">offset</name> <operator pos:start="49:12" pos:end="49:13">+=</operator> <sizeof pos:start="49:15" pos:end="49:40">sizeof<argument_list pos:start="49:21" pos:end="49:40">(<argument pos:start="49:22" pos:end="49:39"><expr pos:start="49:22" pos:end="49:39"><name pos:start="49:22" pos:end="49:39">VHDXFileParameters</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:44"><expr pos:start="51:5" pos:end="51:43"><name pos:start="51:5" pos:end="51:19">mt_virtual_size</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:34">entry_buffer</name> <operator pos:start="51:36" pos:end="51:36">+</operator> <name pos:start="51:38" pos:end="51:43">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:10">offset</name> <operator pos:start="53:12" pos:end="53:13">+=</operator> <sizeof pos:start="53:15" pos:end="53:41">sizeof<argument_list pos:start="53:21" pos:end="53:41">(<argument pos:start="53:22" pos:end="53:40"><expr pos:start="53:22" pos:end="53:40"><name pos:start="53:22" pos:end="53:40">VHDXVirtualDiskSize</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:13">mt_page83</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:28">entry_buffer</name> <operator pos:start="55:30" pos:end="55:30">+</operator> <name pos:start="55:32" pos:end="55:37">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:10">offset</name> <operator pos:start="57:12" pos:end="57:13">+=</operator> <sizeof pos:start="57:15" pos:end="57:36">sizeof<argument_list pos:start="57:21" pos:end="57:36">(<argument pos:start="57:22" pos:end="57:35"><expr pos:start="57:22" pos:end="57:35"><name pos:start="57:22" pos:end="57:35">VHDXPage83Data</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:22">mt_log_sector_size</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:37">entry_buffer</name> <operator pos:start="59:39" pos:end="59:39">+</operator> <name pos:start="59:41" pos:end="59:46">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:10">offset</name> <operator pos:start="61:12" pos:end="61:13">+=</operator> <sizeof pos:start="61:15" pos:end="61:54">sizeof<argument_list pos:start="61:21" pos:end="61:54">(<argument pos:start="61:22" pos:end="61:53"><expr pos:start="61:22" pos:end="61:53"><name pos:start="61:22" pos:end="61:53">VHDXVirtualDiskLogicalSectorSize</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:23">mt_phys_sector_size</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:38">entry_buffer</name> <operator pos:start="63:40" pos:end="63:40">+</operator> <name pos:start="63:42" pos:end="63:47">offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:57"><expr pos:start="67:5" pos:end="67:56"><name pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:18">mt_file_params</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">block_size</name></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <call pos:start="67:34" pos:end="67:56"><name pos:start="67:34" pos:end="67:44">cpu_to_le32</name><argument_list pos:start="67:45" pos:end="67:56">(<argument pos:start="67:46" pos:end="67:55"><expr pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:55">block_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:32">(<expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:12">type</name> <operator pos:start="69:14" pos:end="69:15">==</operator> <name pos:start="69:17" pos:end="69:31">VHDX_TYPE_FIXED</name></expr>)</condition> <block pos:start="69:34" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:49">

        <expr_stmt pos:start="71:9" pos:end="71:70"><expr pos:start="71:9" pos:end="71:69"><name pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:22">mt_file_params</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:33">data_bits</name></name> <operator pos:start="71:35" pos:end="71:36">|=</operator> <name pos:start="71:38" pos:end="71:69">VHDX_PARAMS_LEAVE_BLOCKS_ALLOCED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:49"><expr pos:start="73:9" pos:end="73:48"><call pos:start="73:9" pos:end="73:48"><name pos:start="73:9" pos:end="73:20">cpu_to_le32s</name><argument_list pos:start="73:21" pos:end="73:48">(<argument pos:start="73:22" pos:end="73:47"><expr pos:start="73:22" pos:end="73:47"><operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:47"><name pos:start="73:23" pos:end="73:36">mt_file_params</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:47">data_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:49"><expr pos:start="79:5" pos:end="79:48"><call pos:start="79:5" pos:end="79:48"><name pos:start="79:5" pos:end="79:22">vhdx_guid_generate</name><argument_list pos:start="79:23" pos:end="79:48">(<argument pos:start="79:24" pos:end="79:47"><expr pos:start="79:24" pos:end="79:47"><operator pos:start="79:24" pos:end="79:24">&amp;</operator><name pos:start="79:25" pos:end="79:47"><name pos:start="79:25" pos:end="79:33">mt_page83</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:47">page_83_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><call pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:18">cpu_to_leguids</name><argument_list pos:start="81:19" pos:end="81:44">(<argument pos:start="81:20" pos:end="81:43"><expr pos:start="81:20" pos:end="81:43"><operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:43"><name pos:start="81:21" pos:end="81:29">mt_page83</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:43">page_83_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:72"><expr pos:start="83:5" pos:end="83:71"><name pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:19">mt_virtual_size</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:38">virtual_disk_size</name></name>        <operator pos:start="83:47" pos:end="83:47">=</operator> <call pos:start="83:49" pos:end="83:71"><name pos:start="83:49" pos:end="83:59">cpu_to_le64</name><argument_list pos:start="83:60" pos:end="83:71">(<argument pos:start="83:61" pos:end="83:70"><expr pos:start="83:61" pos:end="83:70"><name pos:start="83:61" pos:end="83:70">image_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:73"><expr pos:start="85:5" pos:end="85:72"><name pos:start="85:5" pos:end="85:43"><name pos:start="85:5" pos:end="85:22">mt_log_sector_size</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:43">logical_sector_size</name></name>   <operator pos:start="85:47" pos:end="85:47">=</operator> <call pos:start="85:49" pos:end="85:72"><name pos:start="85:49" pos:end="85:59">cpu_to_le32</name><argument_list pos:start="85:60" pos:end="85:72">(<argument pos:start="85:61" pos:end="85:71"><expr pos:start="85:61" pos:end="85:71"><name pos:start="85:61" pos:end="85:71">sector_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:73"><expr pos:start="87:5" pos:end="87:72"><name pos:start="87:5" pos:end="87:45"><name pos:start="87:5" pos:end="87:23">mt_phys_sector_size</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:45">physical_sector_size</name></name> <operator pos:start="87:47" pos:end="87:47">=</operator> <call pos:start="87:49" pos:end="87:72"><name pos:start="87:49" pos:end="87:59">cpu_to_le32</name><argument_list pos:start="87:60" pos:end="87:72">(<argument pos:start="87:61" pos:end="87:71"><expr pos:start="87:61" pos:end="87:71"><name pos:start="87:61" pos:end="87:71">sector_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:47"><expr pos:start="91:5" pos:end="91:46"><name pos:start="91:5" pos:end="91:10">buffer</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:46"><name pos:start="91:14" pos:end="91:22">g_malloc0</name><argument_list pos:start="91:23" pos:end="91:46">(<argument pos:start="91:24" pos:end="91:45"><expr pos:start="91:24" pos:end="91:45"><name pos:start="91:24" pos:end="91:45">VHDX_HEADER_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:22"><expr pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:12">md_table</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:21">buffer</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:52"><expr pos:start="97:5" pos:end="97:51"><name pos:start="97:5" pos:end="97:23"><name pos:start="97:5" pos:end="97:12">md_table</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:23">signature</name></name>   <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:51">VHDX_METADATA_SIGNATURE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:30"><expr pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:12">md_table</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:25">entry_count</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <literal type="number" pos:start="99:29" pos:end="99:29">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><call pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:34">vhdx_metadata_header_le_export</name><argument_list pos:start="101:35" pos:end="101:44">(<argument pos:start="101:36" pos:end="101:43"><expr pos:start="101:36" pos:end="101:43"><name pos:start="101:36" pos:end="101:43">md_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="107:5" pos:end="107:63">/* This will reference beyond the reserved table portion */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:22"><expr pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:10">offset</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:15">64</literal> <operator pos:start="109:17" pos:end="109:17">*</operator> <name pos:start="109:19" pos:end="109:21">KiB</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:62"><expr pos:start="113:5" pos:end="113:61"><name pos:start="113:5" pos:end="113:18">md_table_entry</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:27">buffer</name> <operator pos:start="113:29" pos:end="113:29">+</operator> <sizeof pos:start="113:31" pos:end="113:61">sizeof<argument_list pos:start="113:37" pos:end="113:61">(<argument pos:start="113:38" pos:end="113:60"><expr pos:start="113:38" pos:end="113:60"><name pos:start="113:38" pos:end="113:60">VHDXMetadataTableHeader</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:48"><expr pos:start="117:5" pos:end="117:47"><name pos:start="117:5" pos:end="117:21"><name pos:start="117:5" pos:end="117:18">md_table_entry</name><index pos:start="117:19" pos:end="117:21">[<expr pos:start="117:20" pos:end="117:20"><literal type="number" pos:start="117:20" pos:end="117:20">0</literal></expr>]</index></name><operator pos:start="117:22" pos:end="117:22">.</operator><name pos:start="117:23" pos:end="117:29">item_id</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:47">file_param_guid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:39"><expr pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:21"><name pos:start="119:5" pos:end="119:18">md_table_entry</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>]</index></name><operator pos:start="119:22" pos:end="119:22">.</operator><name pos:start="119:23" pos:end="119:28">offset</name>  <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:38">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:59"><expr pos:start="121:5" pos:end="121:58"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:18">md_table_entry</name><index pos:start="121:19" pos:end="121:21">[<expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr>]</index></name><operator pos:start="121:22" pos:end="121:22">.</operator><name pos:start="121:23" pos:end="121:28">length</name>  <operator pos:start="121:31" pos:end="121:31">=</operator> <sizeof pos:start="121:33" pos:end="121:58">sizeof<argument_list pos:start="121:39" pos:end="121:58">(<argument pos:start="121:40" pos:end="121:57"><expr pos:start="121:40" pos:end="121:57"><name pos:start="121:40" pos:end="121:57">VHDXFileParameters</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:63"><expr pos:start="123:5" pos:end="123:62"><name pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:18">md_table_entry</name><index pos:start="123:19" pos:end="123:21">[<expr pos:start="123:20" pos:end="123:20"><literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>]</index></name><operator pos:start="123:22" pos:end="123:22">.</operator><name pos:start="123:23" pos:end="123:31">data_bits</name> <operator pos:start="123:33" pos:end="123:34">|=</operator> <name pos:start="123:36" pos:end="123:62">VHDX_META_FLAGS_IS_REQUIRED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:39"><expr pos:start="125:5" pos:end="125:38"><name pos:start="125:5" pos:end="125:10">offset</name> <operator pos:start="125:12" pos:end="125:13">+=</operator> <name pos:start="125:15" pos:end="125:31"><name pos:start="125:15" pos:end="125:28">md_table_entry</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>]</index></name><operator pos:start="125:32" pos:end="125:32">.</operator><name pos:start="125:33" pos:end="125:38">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:54"><expr pos:start="127:5" pos:end="127:53"><call pos:start="127:5" pos:end="127:53"><name pos:start="127:5" pos:end="127:33">vhdx_metadata_entry_le_export</name><argument_list pos:start="127:34" pos:end="127:53">(<argument pos:start="127:35" pos:end="127:52"><expr pos:start="127:35" pos:end="127:52"><operator pos:start="127:35" pos:end="127:35">&amp;</operator><name pos:start="127:36" pos:end="127:52"><name pos:start="127:36" pos:end="127:49">md_table_entry</name><index pos:start="127:50" pos:end="127:52">[<expr pos:start="127:51" pos:end="127:51"><literal type="number" pos:start="127:51" pos:end="127:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:50"><expr pos:start="131:5" pos:end="131:49"><name pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:18">md_table_entry</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><literal type="number" pos:start="131:20" pos:end="131:20">1</literal></expr>]</index></name><operator pos:start="131:22" pos:end="131:22">.</operator><name pos:start="131:23" pos:end="131:29">item_id</name> <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:49">virtual_size_guid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:39"><expr pos:start="133:5" pos:end="133:38"><name pos:start="133:5" pos:end="133:21"><name pos:start="133:5" pos:end="133:18">md_table_entry</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><literal type="number" pos:start="133:20" pos:end="133:20">1</literal></expr>]</index></name><operator pos:start="133:22" pos:end="133:22">.</operator><name pos:start="133:23" pos:end="133:28">offset</name>  <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:38">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:60"><expr pos:start="135:5" pos:end="135:59"><name pos:start="135:5" pos:end="135:21"><name pos:start="135:5" pos:end="135:18">md_table_entry</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><literal type="number" pos:start="135:20" pos:end="135:20">1</literal></expr>]</index></name><operator pos:start="135:22" pos:end="135:22">.</operator><name pos:start="135:23" pos:end="135:28">length</name>  <operator pos:start="135:31" pos:end="135:31">=</operator> <sizeof pos:start="135:33" pos:end="135:59">sizeof<argument_list pos:start="135:39" pos:end="135:59">(<argument pos:start="135:40" pos:end="135:58"><expr pos:start="135:40" pos:end="135:58"><name pos:start="135:40" pos:end="135:58">VHDXVirtualDiskSize</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:67"><expr pos:start="137:5" pos:end="139:66"><name pos:start="137:5" pos:end="137:21"><name pos:start="137:5" pos:end="137:18">md_table_entry</name><index pos:start="137:19" pos:end="137:21">[<expr pos:start="137:20" pos:end="137:20"><literal type="number" pos:start="137:20" pos:end="137:20">1</literal></expr>]</index></name><operator pos:start="137:22" pos:end="137:22">.</operator><name pos:start="137:23" pos:end="137:31">data_bits</name> <operator pos:start="137:33" pos:end="137:34">|=</operator> <name pos:start="137:36" pos:end="137:62">VHDX_META_FLAGS_IS_REQUIRED</name> <operator pos:start="137:64" pos:end="137:64">|</operator>

                                   <name pos:start="139:36" pos:end="139:66">VHDX_META_FLAGS_IS_VIRTUAL_DISK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:39"><expr pos:start="141:5" pos:end="141:38"><name pos:start="141:5" pos:end="141:10">offset</name> <operator pos:start="141:12" pos:end="141:13">+=</operator> <name pos:start="141:15" pos:end="141:31"><name pos:start="141:15" pos:end="141:28">md_table_entry</name><index pos:start="141:29" pos:end="141:31">[<expr pos:start="141:30" pos:end="141:30"><literal type="number" pos:start="141:30" pos:end="141:30">1</literal></expr>]</index></name><operator pos:start="141:32" pos:end="141:32">.</operator><name pos:start="141:33" pos:end="141:38">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:54"><expr pos:start="143:5" pos:end="143:53"><call pos:start="143:5" pos:end="143:53"><name pos:start="143:5" pos:end="143:33">vhdx_metadata_entry_le_export</name><argument_list pos:start="143:34" pos:end="143:53">(<argument pos:start="143:35" pos:end="143:52"><expr pos:start="143:35" pos:end="143:52"><operator pos:start="143:35" pos:end="143:35">&amp;</operator><name pos:start="143:36" pos:end="143:52"><name pos:start="143:36" pos:end="143:49">md_table_entry</name><index pos:start="143:50" pos:end="143:52">[<expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:44"><expr pos:start="147:5" pos:end="147:43"><name pos:start="147:5" pos:end="147:21"><name pos:start="147:5" pos:end="147:18">md_table_entry</name><index pos:start="147:19" pos:end="147:21">[<expr pos:start="147:20" pos:end="147:20"><literal type="number" pos:start="147:20" pos:end="147:20">2</literal></expr>]</index></name><operator pos:start="147:22" pos:end="147:22">.</operator><name pos:start="147:23" pos:end="147:29">item_id</name> <operator pos:start="147:31" pos:end="147:31">=</operator> <name pos:start="147:33" pos:end="147:43">page83_guid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:39"><expr pos:start="149:5" pos:end="149:38"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:18">md_table_entry</name><index pos:start="149:19" pos:end="149:21">[<expr pos:start="149:20" pos:end="149:20"><literal type="number" pos:start="149:20" pos:end="149:20">2</literal></expr>]</index></name><operator pos:start="149:22" pos:end="149:22">.</operator><name pos:start="149:23" pos:end="149:28">offset</name>  <operator pos:start="149:31" pos:end="149:31">=</operator> <name pos:start="149:33" pos:end="149:38">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:55"><expr pos:start="151:5" pos:end="151:54"><name pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:18">md_table_entry</name><index pos:start="151:19" pos:end="151:21">[<expr pos:start="151:20" pos:end="151:20"><literal type="number" pos:start="151:20" pos:end="151:20">2</literal></expr>]</index></name><operator pos:start="151:22" pos:end="151:22">.</operator><name pos:start="151:23" pos:end="151:28">length</name>  <operator pos:start="151:31" pos:end="151:31">=</operator> <sizeof pos:start="151:33" pos:end="151:54">sizeof<argument_list pos:start="151:39" pos:end="151:54">(<argument pos:start="151:40" pos:end="151:53"><expr pos:start="151:40" pos:end="151:53"><name pos:start="151:40" pos:end="151:53">VHDXPage83Data</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="155:67"><expr pos:start="153:5" pos:end="155:66"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:18">md_table_entry</name><index pos:start="153:19" pos:end="153:21">[<expr pos:start="153:20" pos:end="153:20"><literal type="number" pos:start="153:20" pos:end="153:20">2</literal></expr>]</index></name><operator pos:start="153:22" pos:end="153:22">.</operator><name pos:start="153:23" pos:end="153:31">data_bits</name> <operator pos:start="153:33" pos:end="153:34">|=</operator> <name pos:start="153:36" pos:end="153:62">VHDX_META_FLAGS_IS_REQUIRED</name> <operator pos:start="153:64" pos:end="153:64">|</operator>

                                   <name pos:start="155:36" pos:end="155:66">VHDX_META_FLAGS_IS_VIRTUAL_DISK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:39"><expr pos:start="157:5" pos:end="157:38"><name pos:start="157:5" pos:end="157:10">offset</name> <operator pos:start="157:12" pos:end="157:13">+=</operator> <name pos:start="157:15" pos:end="157:31"><name pos:start="157:15" pos:end="157:28">md_table_entry</name><index pos:start="157:29" pos:end="157:31">[<expr pos:start="157:30" pos:end="157:30"><literal type="number" pos:start="157:30" pos:end="157:30">2</literal></expr>]</index></name><operator pos:start="157:32" pos:end="157:32">.</operator><name pos:start="157:33" pos:end="157:38">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:54"><expr pos:start="159:5" pos:end="159:53"><call pos:start="159:5" pos:end="159:53"><name pos:start="159:5" pos:end="159:33">vhdx_metadata_entry_le_export</name><argument_list pos:start="159:34" pos:end="159:53">(<argument pos:start="159:35" pos:end="159:52"><expr pos:start="159:35" pos:end="159:52"><operator pos:start="159:35" pos:end="159:35">&amp;</operator><name pos:start="159:36" pos:end="159:52"><name pos:start="159:36" pos:end="159:49">md_table_entry</name><index pos:start="159:50" pos:end="159:52">[<expr pos:start="159:51" pos:end="159:51"><literal type="number" pos:start="159:51" pos:end="159:51">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:52"><expr pos:start="163:5" pos:end="163:51"><name pos:start="163:5" pos:end="163:21"><name pos:start="163:5" pos:end="163:18">md_table_entry</name><index pos:start="163:19" pos:end="163:21">[<expr pos:start="163:20" pos:end="163:20"><literal type="number" pos:start="163:20" pos:end="163:20">3</literal></expr>]</index></name><operator pos:start="163:22" pos:end="163:22">.</operator><name pos:start="163:23" pos:end="163:29">item_id</name> <operator pos:start="163:31" pos:end="163:31">=</operator> <name pos:start="163:33" pos:end="163:51">logical_sector_guid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:18">md_table_entry</name><index pos:start="165:19" pos:end="165:21">[<expr pos:start="165:20" pos:end="165:20"><literal type="number" pos:start="165:20" pos:end="165:20">3</literal></expr>]</index></name><operator pos:start="165:22" pos:end="165:22">.</operator><name pos:start="165:23" pos:end="165:28">offset</name>  <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:38">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:73"><expr pos:start="167:5" pos:end="167:72"><name pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:18">md_table_entry</name><index pos:start="167:19" pos:end="167:21">[<expr pos:start="167:20" pos:end="167:20"><literal type="number" pos:start="167:20" pos:end="167:20">3</literal></expr>]</index></name><operator pos:start="167:22" pos:end="167:22">.</operator><name pos:start="167:23" pos:end="167:28">length</name>  <operator pos:start="167:31" pos:end="167:31">=</operator> <sizeof pos:start="167:33" pos:end="167:72">sizeof<argument_list pos:start="167:39" pos:end="167:72">(<argument pos:start="167:40" pos:end="167:71"><expr pos:start="167:40" pos:end="167:71"><name pos:start="167:40" pos:end="167:71">VHDXVirtualDiskLogicalSectorSize</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="171:67"><expr pos:start="169:5" pos:end="171:66"><name pos:start="169:5" pos:end="169:21"><name pos:start="169:5" pos:end="169:18">md_table_entry</name><index pos:start="169:19" pos:end="169:21">[<expr pos:start="169:20" pos:end="169:20"><literal type="number" pos:start="169:20" pos:end="169:20">3</literal></expr>]</index></name><operator pos:start="169:22" pos:end="169:22">.</operator><name pos:start="169:23" pos:end="169:31">data_bits</name> <operator pos:start="169:33" pos:end="169:34">|=</operator> <name pos:start="169:36" pos:end="169:62">VHDX_META_FLAGS_IS_REQUIRED</name> <operator pos:start="169:64" pos:end="169:64">|</operator>

                                   <name pos:start="171:36" pos:end="171:66">VHDX_META_FLAGS_IS_VIRTUAL_DISK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:39"><expr pos:start="173:5" pos:end="173:38"><name pos:start="173:5" pos:end="173:10">offset</name> <operator pos:start="173:12" pos:end="173:13">+=</operator> <name pos:start="173:15" pos:end="173:31"><name pos:start="173:15" pos:end="173:28">md_table_entry</name><index pos:start="173:29" pos:end="173:31">[<expr pos:start="173:30" pos:end="173:30"><literal type="number" pos:start="173:30" pos:end="173:30">3</literal></expr>]</index></name><operator pos:start="173:32" pos:end="173:32">.</operator><name pos:start="173:33" pos:end="173:38">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:54"><expr pos:start="175:5" pos:end="175:53"><call pos:start="175:5" pos:end="175:53"><name pos:start="175:5" pos:end="175:33">vhdx_metadata_entry_le_export</name><argument_list pos:start="175:34" pos:end="175:53">(<argument pos:start="175:35" pos:end="175:52"><expr pos:start="175:35" pos:end="175:52"><operator pos:start="175:35" pos:end="175:35">&amp;</operator><name pos:start="175:36" pos:end="175:52"><name pos:start="175:36" pos:end="175:49">md_table_entry</name><index pos:start="175:50" pos:end="175:52">[<expr pos:start="175:51" pos:end="175:51"><literal type="number" pos:start="175:51" pos:end="175:51">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:49"><expr pos:start="179:5" pos:end="179:48"><name pos:start="179:5" pos:end="179:21"><name pos:start="179:5" pos:end="179:18">md_table_entry</name><index pos:start="179:19" pos:end="179:21">[<expr pos:start="179:20" pos:end="179:20"><literal type="number" pos:start="179:20" pos:end="179:20">4</literal></expr>]</index></name><operator pos:start="179:22" pos:end="179:22">.</operator><name pos:start="179:23" pos:end="179:29">item_id</name> <operator pos:start="179:31" pos:end="179:31">=</operator> <name pos:start="179:33" pos:end="179:48">phys_sector_guid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:39"><expr pos:start="181:5" pos:end="181:38"><name pos:start="181:5" pos:end="181:21"><name pos:start="181:5" pos:end="181:18">md_table_entry</name><index pos:start="181:19" pos:end="181:21">[<expr pos:start="181:20" pos:end="181:20"><literal type="number" pos:start="181:20" pos:end="181:20">4</literal></expr>]</index></name><operator pos:start="181:22" pos:end="181:22">.</operator><name pos:start="181:23" pos:end="181:28">offset</name>  <operator pos:start="181:31" pos:end="181:31">=</operator> <name pos:start="181:33" pos:end="181:38">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:74"><expr pos:start="183:5" pos:end="183:73"><name pos:start="183:5" pos:end="183:21"><name pos:start="183:5" pos:end="183:18">md_table_entry</name><index pos:start="183:19" pos:end="183:21">[<expr pos:start="183:20" pos:end="183:20"><literal type="number" pos:start="183:20" pos:end="183:20">4</literal></expr>]</index></name><operator pos:start="183:22" pos:end="183:22">.</operator><name pos:start="183:23" pos:end="183:28">length</name>  <operator pos:start="183:31" pos:end="183:31">=</operator> <sizeof pos:start="183:33" pos:end="183:73">sizeof<argument_list pos:start="183:39" pos:end="183:73">(<argument pos:start="183:40" pos:end="183:72"><expr pos:start="183:40" pos:end="183:72"><name pos:start="183:40" pos:end="183:72">VHDXVirtualDiskPhysicalSectorSize</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="187:67"><expr pos:start="185:5" pos:end="187:66"><name pos:start="185:5" pos:end="185:21"><name pos:start="185:5" pos:end="185:18">md_table_entry</name><index pos:start="185:19" pos:end="185:21">[<expr pos:start="185:20" pos:end="185:20"><literal type="number" pos:start="185:20" pos:end="185:20">4</literal></expr>]</index></name><operator pos:start="185:22" pos:end="185:22">.</operator><name pos:start="185:23" pos:end="185:31">data_bits</name> <operator pos:start="185:33" pos:end="185:34">|=</operator> <name pos:start="185:36" pos:end="185:62">VHDX_META_FLAGS_IS_REQUIRED</name> <operator pos:start="185:64" pos:end="185:64">|</operator>

                                   <name pos:start="187:36" pos:end="187:66">VHDX_META_FLAGS_IS_VIRTUAL_DISK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:54"><expr pos:start="189:5" pos:end="189:53"><call pos:start="189:5" pos:end="189:53"><name pos:start="189:5" pos:end="189:33">vhdx_metadata_entry_le_export</name><argument_list pos:start="189:34" pos:end="189:53">(<argument pos:start="189:35" pos:end="189:52"><expr pos:start="189:35" pos:end="189:52"><operator pos:start="189:35" pos:end="189:35">&amp;</operator><name pos:start="189:36" pos:end="189:52"><name pos:start="189:36" pos:end="189:49">md_table_entry</name><index pos:start="189:50" pos:end="189:52">[<expr pos:start="189:51" pos:end="189:51"><literal type="number" pos:start="189:51" pos:end="189:51">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:75"><expr pos:start="193:5" pos:end="193:74"><name pos:start="193:5" pos:end="193:7">ret</name> <operator pos:start="193:9" pos:end="193:9">=</operator> <call pos:start="193:11" pos:end="193:74"><name pos:start="193:11" pos:end="193:21">bdrv_pwrite</name><argument_list pos:start="193:22" pos:end="193:74">(<argument pos:start="193:23" pos:end="193:24"><expr pos:start="193:23" pos:end="193:24"><name pos:start="193:23" pos:end="193:24">bs</name></expr></argument>, <argument pos:start="193:27" pos:end="193:41"><expr pos:start="193:27" pos:end="193:41"><name pos:start="193:27" pos:end="193:41">metadata_offset</name></expr></argument>, <argument pos:start="193:44" pos:end="193:49"><expr pos:start="193:44" pos:end="193:49"><name pos:start="193:44" pos:end="193:49">buffer</name></expr></argument>, <argument pos:start="193:52" pos:end="193:73"><expr pos:start="193:52" pos:end="193:73"><name pos:start="193:52" pos:end="193:73">VHDX_HEADER_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="199:5"><if pos:start="195:5" pos:end="199:5">if <condition pos:start="195:8" pos:end="195:16">(<expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">&lt;</operator> <literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>)</condition> <block pos:start="195:18" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:18">

        <goto pos:start="197:9" pos:end="197:18">goto <name pos:start="197:14" pos:end="197:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="205:55"><expr pos:start="203:5" pos:end="205:54"><name pos:start="203:5" pos:end="203:7">ret</name> <operator pos:start="203:9" pos:end="203:9">=</operator> <call pos:start="203:11" pos:end="205:54"><name pos:start="203:11" pos:end="203:21">bdrv_pwrite</name><argument_list pos:start="203:22" pos:end="205:54">(<argument pos:start="203:23" pos:end="203:24"><expr pos:start="203:23" pos:end="203:24"><name pos:start="203:23" pos:end="203:24">bs</name></expr></argument>, <argument pos:start="203:27" pos:end="203:54"><expr pos:start="203:27" pos:end="203:54"><name pos:start="203:27" pos:end="203:41">metadata_offset</name> <operator pos:start="203:43" pos:end="203:43">+</operator> <operator pos:start="203:45" pos:end="203:45">(</operator><literal type="number" pos:start="203:46" pos:end="203:47">64</literal> <operator pos:start="203:49" pos:end="203:49">*</operator> <name pos:start="203:51" pos:end="203:53">KiB</name><operator pos:start="203:54" pos:end="203:54">)</operator></expr></argument>, <argument pos:start="203:57" pos:end="203:68"><expr pos:start="203:57" pos:end="203:68"><name pos:start="203:57" pos:end="203:68">entry_buffer</name></expr></argument>,

                      <argument pos:start="205:23" pos:end="205:53"><expr pos:start="205:23" pos:end="205:53"><name pos:start="205:23" pos:end="205:53">VHDX_METADATA_ENTRY_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="211:5"><if pos:start="207:5" pos:end="211:5">if <condition pos:start="207:8" pos:end="207:16">(<expr pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">&lt;</operator> <literal type="number" pos:start="207:15" pos:end="207:15">0</literal></expr>)</condition> <block pos:start="207:18" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:18">

        <goto pos:start="209:9" pos:end="209:18">goto <name pos:start="209:14" pos:end="209:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>





<label pos:start="217:1" pos:end="217:5"><name pos:start="217:1" pos:end="217:4">exit</name>:</label>

    <expr_stmt pos:start="219:5" pos:end="219:19"><expr pos:start="219:5" pos:end="219:18"><call pos:start="219:5" pos:end="219:18"><name pos:start="219:5" pos:end="219:10">g_free</name><argument_list pos:start="219:11" pos:end="219:18">(<argument pos:start="219:12" pos:end="219:17"><expr pos:start="219:12" pos:end="219:17"><name pos:start="219:12" pos:end="219:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:25"><expr pos:start="221:5" pos:end="221:24"><call pos:start="221:5" pos:end="221:24"><name pos:start="221:5" pos:end="221:10">g_free</name><argument_list pos:start="221:11" pos:end="221:24">(<argument pos:start="221:12" pos:end="221:23"><expr pos:start="221:12" pos:end="221:23"><name pos:start="221:12" pos:end="221:23">entry_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:15">return <expr pos:start="223:12" pos:end="223:14"><name pos:start="223:12" pos:end="223:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
