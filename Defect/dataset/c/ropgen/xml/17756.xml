<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17756.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">Qcow2Cache</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:30">qcow2_cache_create</name><parameter_list pos:start="1:31" pos:end="1:68">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:67">num_tables</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">Qcow2Cache</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:5">c</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:17">g_malloc0</name><argument_list pos:start="13:18" pos:end="13:29">(<argument pos:start="13:19" pos:end="13:28"><expr pos:start="13:19" pos:end="13:28"><sizeof pos:start="13:19" pos:end="13:28">sizeof<argument_list pos:start="13:25" pos:end="13:28">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><operator pos:start="13:26" pos:end="13:26">*</operator><name pos:start="13:27" pos:end="13:27">c</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">size</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:24">num_tables</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:14">entries</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:60"><name pos:start="17:18" pos:end="17:26">g_malloc0</name><argument_list pos:start="17:27" pos:end="17:60">(<argument pos:start="17:28" pos:end="17:59"><expr pos:start="17:28" pos:end="17:59"><sizeof pos:start="17:28" pos:end="17:46">sizeof<argument_list pos:start="17:34" pos:end="17:46">(<argument pos:start="17:35" pos:end="17:45"><expr pos:start="17:35" pos:end="17:45"><operator pos:start="17:35" pos:end="17:35">*</operator><name pos:start="17:36" pos:end="17:45"><name pos:start="17:36" pos:end="17:36">c</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:45">entries</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:48" pos:end="17:48">*</operator> <name pos:start="17:50" pos:end="17:59">num_tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:33">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:28"><expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:27"><name pos:start="21:21" pos:end="21:21">c</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:27">size</name></name></expr>;</condition> <incr pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:30">i</name><operator pos:start="21:31" pos:end="21:32">++</operator></expr></incr>)</control> <block pos:start="21:35" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <expr_stmt pos:start="23:9" pos:end="23:77"><expr pos:start="23:9" pos:end="23:76"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">entries</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">i</name></expr>]</index></name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:27">table</name> <operator pos:start="23:29" pos:end="23:29">=</operator> <call pos:start="23:31" pos:end="23:76"><name pos:start="23:31" pos:end="23:49">qemu_try_blockalign</name><argument_list pos:start="23:50" pos:end="23:76">(<argument pos:start="23:51" pos:end="23:58"><expr pos:start="23:51" pos:end="23:58"><name pos:start="23:51" pos:end="23:58"><name pos:start="23:51" pos:end="23:52">bs</name><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:58">file</name></name></expr></argument>, <argument pos:start="23:61" pos:end="23:75"><expr pos:start="23:61" pos:end="23:75"><name pos:start="23:61" pos:end="23:75"><name pos:start="23:61" pos:end="23:61">s</name><operator pos:start="23:62" pos:end="23:63">-&gt;</operator><name pos:start="23:64" pos:end="23:75">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:40">(<expr pos:start="25:13" pos:end="25:39"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:13">c</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">entries</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">i</name></expr>]</index></name><operator pos:start="25:26" pos:end="25:26">.</operator><name pos:start="25:27" pos:end="25:31">table</name> <operator pos:start="25:33" pos:end="25:34">==</operator> <name pos:start="25:36" pos:end="25:39">NULL</name></expr>)</condition> <block pos:start="25:42" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:22">

            <goto pos:start="27:13" pos:end="27:22">goto <name pos:start="27:18" pos:end="27:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><name pos:start="35:12" pos:end="35:12">c</name></expr>;</return>



<label pos:start="39:1" pos:end="39:5"><name pos:start="39:1" pos:end="39:4">fail</name>:</label>

    <for pos:start="41:5" pos:end="45:5">for <control pos:start="41:9" pos:end="41:33">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:21">c</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">size</name></name></expr>;</condition> <incr pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:30">i</name><operator pos:start="41:31" pos:end="41:32">++</operator></expr></incr>)</control> <block pos:start="41:35" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:40">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:18">qemu_vfree</name><argument_list pos:start="43:19" pos:end="43:39">(<argument pos:start="43:20" pos:end="43:38"><expr pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:32"><name pos:start="43:20" pos:end="43:20">c</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:29">entries</name><index pos:start="43:30" pos:end="43:32">[<expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">i</name></expr>]</index></name><operator pos:start="43:33" pos:end="43:33">.</operator><name pos:start="43:34" pos:end="43:38">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><call pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:10">g_free</name><argument_list pos:start="47:11" pos:end="47:22">(<argument pos:start="47:12" pos:end="47:21"><expr pos:start="47:12" pos:end="47:21"><name pos:start="47:12" pos:end="47:21"><name pos:start="47:12" pos:end="47:12">c</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:21">entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:14"><expr pos:start="49:5" pos:end="49:13"><call pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:10">g_free</name><argument_list pos:start="49:11" pos:end="49:13">(<argument pos:start="49:12" pos:end="49:12"><expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
