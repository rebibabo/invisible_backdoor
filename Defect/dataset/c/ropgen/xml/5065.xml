<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5065.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_twinvq_decode_frame</name><parameter_list pos:start="1:27" pos:end="3:63">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">data</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><name pos:start="3:28" pos:end="3:30">int</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:45">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><name pos:start="3:48" pos:end="3:55">AVPacket</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:20">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name>     <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">TwinVQContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">tctx</name> <init pos:start="13:25" pos:end="13:42">= <expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:31">avctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:23">TwinVQModeTab</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:29">mtab</name> <init pos:start="15:31" pos:end="15:42">= <expr pos:start="15:33" pos:end="15:42"><name pos:start="15:33" pos:end="15:42"><name pos:start="15:33" pos:end="15:36">tctx</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:42">mtab</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:9">float</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier><modifier pos:start="17:12" pos:end="17:12">*</modifier></type><name pos:start="17:13" pos:end="17:15">out</name> <init pos:start="17:17" pos:end="17:22">= <expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:27">/* get output buffer */</comment>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:12">tctx</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:31">discarded_packets</name></name> <operator pos:start="25:33" pos:end="25:34">&gt;=</operator> <literal type="number" pos:start="25:36" pos:end="25:36">2</literal></expr>)</condition> <block pos:start="25:39" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:45">

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:13">frame</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">nb_samples</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:38"><name pos:start="27:29" pos:end="27:32">mtab</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:38">size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:55">(<expr pos:start="29:13" pos:end="29:54"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">ret</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:49"><name pos:start="29:20" pos:end="29:32">ff_get_buffer</name><argument_list pos:start="29:33" pos:end="29:49">(<argument pos:start="29:34" pos:end="29:38"><expr pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:38">avctx</name></expr></argument>, <argument pos:start="29:41" pos:end="29:45"><expr pos:start="29:41" pos:end="29:45"><name pos:start="29:41" pos:end="29:45">frame</name></expr></argument>, <argument pos:start="29:48" pos:end="29:48"><expr pos:start="29:48" pos:end="29:48"><literal type="number" pos:start="29:48" pos:end="29:48">0</literal></expr></argument>)</argument_list></call><operator pos:start="29:50" pos:end="29:50">)</operator> <operator pos:start="29:52" pos:end="29:52">&lt;</operator> <literal type="number" pos:start="29:54" pos:end="29:54">0</literal></expr>)</condition> <block pos:start="29:57" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:23">

            <expr_stmt pos:start="31:13" pos:end="31:65"><expr pos:start="31:13" pos:end="31:64"><call pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:64">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">avctx</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:41" pos:end="31:63"><expr pos:start="31:41" pos:end="31:63"><literal type="string" pos:start="31:41" pos:end="31:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:11">out</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator><name pos:start="37:16" pos:end="37:20">float</name> <operator pos:start="37:22" pos:end="37:22">*</operator><operator pos:start="37:23" pos:end="37:23">*</operator><operator pos:start="37:24" pos:end="37:24">)</operator><name pos:start="37:25" pos:end="37:44"><name pos:start="37:25" pos:end="37:29">frame</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:44">extended_data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:69">(<expr pos:start="43:9" pos:end="43:68"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:12">ret</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:63"><name pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:19">tctx</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:35">read_bitstream</name></name><argument_list pos:start="43:36" pos:end="43:63">(<argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:41">avctx</name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">tctx</name></expr></argument>, <argument pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:52">buf</name></expr></argument>, <argument pos:start="43:55" pos:end="43:62"><expr pos:start="43:55" pos:end="43:62"><name pos:start="43:55" pos:end="43:62">buf_size</name></expr></argument>)</argument_list></call><operator pos:start="43:64" pos:end="43:64">)</operator> <operator pos:start="43:66" pos:end="43:66">&lt;</operator> <literal type="number" pos:start="43:68" pos:end="43:68">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:69"><expr pos:start="49:5" pos:end="49:68"><call pos:start="49:5" pos:end="49:68"><name pos:start="49:5" pos:end="49:28">read_and_decode_spectrum</name><argument_list pos:start="49:29" pos:end="49:68">(<argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">tctx</name></expr></argument>, <argument pos:start="49:36" pos:end="49:49"><expr pos:start="49:36" pos:end="49:49"><name pos:start="49:36" pos:end="49:49"><name pos:start="49:36" pos:end="49:39">tctx</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:49">spectrum</name></name></expr></argument>, <argument pos:start="49:52" pos:end="49:67"><expr pos:start="49:52" pos:end="49:67"><name pos:start="49:52" pos:end="49:67"><name pos:start="49:52" pos:end="49:55">tctx</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:61">bits</name><operator pos:start="49:62" pos:end="49:62">.</operator><name pos:start="49:63" pos:end="49:67">ftype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:70"><expr pos:start="53:5" pos:end="53:69"><call pos:start="53:5" pos:end="53:69"><name pos:start="53:5" pos:end="53:16">imdct_output</name><argument_list pos:start="53:17" pos:end="53:69">(<argument pos:start="53:18" pos:end="53:21"><expr pos:start="53:18" pos:end="53:21"><name pos:start="53:18" pos:end="53:21">tctx</name></expr></argument>, <argument pos:start="53:24" pos:end="53:39"><expr pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:27">tctx</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:33">bits</name><operator pos:start="53:34" pos:end="53:34">.</operator><name pos:start="53:35" pos:end="53:39">ftype</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:63"><expr pos:start="53:42" pos:end="53:63"><name pos:start="53:42" pos:end="53:63"><name pos:start="53:42" pos:end="53:45">tctx</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:51">bits</name><operator pos:start="53:52" pos:end="53:52">.</operator><name pos:start="53:53" pos:end="53:63">window_type</name></name></expr></argument>, <argument pos:start="53:66" pos:end="53:68"><expr pos:start="53:66" pos:end="53:68"><name pos:start="53:66" pos:end="53:68">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:56"><expr pos:start="57:5" pos:end="57:55"><call pos:start="57:5" pos:end="57:55"><name pos:start="57:5" pos:end="57:10">FFSWAP</name><argument_list pos:start="57:11" pos:end="57:55">(<argument pos:start="57:12" pos:end="57:18"><expr pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:16">float</name> <operator pos:start="57:18" pos:end="57:18">*</operator></expr></argument>, <argument pos:start="57:21" pos:end="57:36"><expr pos:start="57:21" pos:end="57:36"><name pos:start="57:21" pos:end="57:36"><name pos:start="57:21" pos:end="57:24">tctx</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:36">curr_frame</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:54"><expr pos:start="57:39" pos:end="57:54"><name pos:start="57:39" pos:end="57:54"><name pos:start="57:39" pos:end="57:42">tctx</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:54">prev_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:36">(<expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:12">tctx</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:31">discarded_packets</name></name> <operator pos:start="61:33" pos:end="61:33">&lt;</operator> <literal type="number" pos:start="61:35" pos:end="61:35">2</literal></expr>)</condition> <block pos:start="61:38" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:24">

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:12">tctx</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:31">discarded_packets</name></name><operator pos:start="63:32" pos:end="63:33">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:22">got_frame_ptr</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:24">return <expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:18">got_frame_ptr</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">1</literal></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:20">return <expr pos:start="77:12" pos:end="77:19"><name pos:start="77:12" pos:end="77:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
