<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24706.c" pos:tabs="8"><function pos:start="1:1" pos:end="455:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">derive_spatial_merge_candidates</name><parameter_list pos:start="1:44" pos:end="11:75">(<parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:55">HEVCContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:66"><decl pos:start="1:61" pos:end="1:66"><type pos:start="1:61" pos:end="1:66"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:66">x0</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:74"><decl pos:start="1:69" pos:end="1:74"><type pos:start="1:69" pos:end="1:74"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:74">y0</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:52"><decl pos:start="3:45" pos:end="3:52"><type pos:start="3:45" pos:end="3:52"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:52">nPbW</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:62"><decl pos:start="3:55" pos:end="3:62"><type pos:start="3:55" pos:end="3:62"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:62">nPbH</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:60"><decl pos:start="5:45" pos:end="5:60"><type pos:start="5:45" pos:end="5:60"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:60">log2_cb_size</name></decl></parameter>,

                                            <parameter pos:start="7:45" pos:end="7:61"><decl pos:start="7:45" pos:end="7:61"><type pos:start="7:45" pos:end="7:61"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:61">singleMCLFlag</name></decl></parameter>, <parameter pos:start="7:64" pos:end="7:75"><decl pos:start="7:64" pos:end="7:75"><type pos:start="7:64" pos:end="7:75"><name pos:start="7:64" pos:end="7:66">int</name></type> <name pos:start="7:68" pos:end="7:75">part_idx</name></decl></parameter>,

                                            <parameter pos:start="9:45" pos:end="9:57"><decl pos:start="9:45" pos:end="9:57"><type pos:start="9:45" pos:end="9:57"><name pos:start="9:45" pos:end="9:47">int</name></type> <name pos:start="9:49" pos:end="9:57">merge_idx</name></decl></parameter>,

                                            <parameter pos:start="11:45" pos:end="11:74"><decl pos:start="11:45" pos:end="11:74"><type pos:start="11:45" pos:end="11:72"><name pos:start="11:45" pos:end="11:58"><name pos:start="11:45" pos:end="11:50">struct</name> <name pos:start="11:52" pos:end="11:58">MvField</name></name></type> <name pos:start="11:60" pos:end="11:74"><name pos:start="11:60" pos:end="11:72">mergecandlist</name><index pos:start="11:73" pos:end="11:74">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="455:1">{<block_content pos:start="15:5" pos:end="453:5">

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">HEVCLocalContext</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">lc</name>   <init pos:start="15:28" pos:end="15:39">= <expr pos:start="15:30" pos:end="15:39"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:39"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:39">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">RefPicList</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:26">refPicList</name> <init pos:start="17:28" pos:end="17:47">= <expr pos:start="17:30" pos:end="17:47"><name pos:start="17:30" pos:end="17:47"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:35">ref</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:47">refPicList</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">MvField</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:20">tab_mvf</name>       <init pos:start="19:28" pos:end="19:44">= <expr pos:start="19:30" pos:end="19:44"><name pos:start="19:30" pos:end="19:44"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:35">ref</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:44">tab_mvf</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:50"><decl pos:start="23:5" pos:end="23:49"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:26">min_pu_width</name> <init pos:start="23:28" pos:end="23:49">= <expr pos:start="23:30" pos:end="23:49"><name pos:start="23:30" pos:end="23:49"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:35">sps</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:49">min_pu_width</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:57"><decl pos:start="27:5" pos:end="27:56"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:30">cand_bottom_left</name> <init pos:start="27:32" pos:end="27:56">= <expr pos:start="27:34" pos:end="27:56"><name pos:start="27:34" pos:end="27:56"><name pos:start="27:34" pos:end="27:35">lc</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:39">na</name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:56">cand_bottom_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:50"><decl pos:start="29:5" pos:end="29:49"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:23">cand_left</name>        <init pos:start="29:32" pos:end="29:49">= <expr pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:49"><name pos:start="29:34" pos:end="29:35">lc</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:39">na</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:49">cand_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:53"><decl pos:start="31:5" pos:end="31:52"><type pos:start="31:5" pos:end="31:13"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:13">int</name></type> <name pos:start="31:15" pos:end="31:26">cand_up_left</name>     <init pos:start="31:32" pos:end="31:52">= <expr pos:start="31:34" pos:end="31:52"><name pos:start="31:34" pos:end="31:52"><name pos:start="31:34" pos:end="31:35">lc</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:39">na</name><operator pos:start="31:40" pos:end="31:40">.</operator><name pos:start="31:41" pos:end="31:52">cand_up_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:48"><decl pos:start="33:5" pos:end="33:47"><type pos:start="33:5" pos:end="33:13"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:13">int</name></type> <name pos:start="33:15" pos:end="33:21">cand_up</name>          <init pos:start="33:32" pos:end="33:47">= <expr pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:35">lc</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:39">na</name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:47">cand_up</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:58"><decl pos:start="35:5" pos:end="35:57"><type pos:start="35:5" pos:end="35:13"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:13">int</name></type> <name pos:start="35:15" pos:end="35:27">cand_up_right</name>    <init pos:start="35:32" pos:end="35:57">= <expr pos:start="35:34" pos:end="35:57"><name pos:start="35:34" pos:end="35:57"><name pos:start="35:34" pos:end="35:35">lc</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:39">na</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:57">cand_up_right_sap</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="39:5" pos:end="39:30"><decl pos:start="39:5" pos:end="39:29"><type pos:start="39:5" pos:end="39:13"><specifier pos:start="39:5" pos:end="39:9">const</specifier> <name pos:start="39:11" pos:end="39:13">int</name></type> <name pos:start="39:15" pos:end="39:17">xA1</name>    <init pos:start="39:22" pos:end="39:29">= <expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:25">x0</name> <operator pos:start="39:27" pos:end="39:27">-</operator> <literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:37"><decl pos:start="41:5" pos:end="41:36"><type pos:start="41:5" pos:end="41:13"><specifier pos:start="41:5" pos:end="41:9">const</specifier> <name pos:start="41:11" pos:end="41:13">int</name></type> <name pos:start="41:15" pos:end="41:17">yA1</name>    <init pos:start="41:22" pos:end="41:36">= <expr pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:25">y0</name> <operator pos:start="41:27" pos:end="41:27">+</operator> <name pos:start="41:29" pos:end="41:32">nPbH</name> <operator pos:start="41:34" pos:end="41:34">-</operator> <literal type="number" pos:start="41:36" pos:end="41:36">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:55"><decl pos:start="43:5" pos:end="43:54"><type pos:start="43:5" pos:end="43:13"><specifier pos:start="43:5" pos:end="43:9">const</specifier> <name pos:start="43:11" pos:end="43:13">int</name></type> <name pos:start="43:15" pos:end="43:20">xA1_pu</name> <init pos:start="43:22" pos:end="43:54">= <expr pos:start="43:24" pos:end="43:54"><name pos:start="43:24" pos:end="43:26">xA1</name> <operator pos:start="43:28" pos:end="43:29">&gt;&gt;</operator> <name pos:start="43:31" pos:end="43:54"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:36">sps</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:55"><decl pos:start="45:5" pos:end="45:54"><type pos:start="45:5" pos:end="45:13"><specifier pos:start="45:5" pos:end="45:9">const</specifier> <name pos:start="45:11" pos:end="45:13">int</name></type> <name pos:start="45:15" pos:end="45:20">yA1_pu</name> <init pos:start="45:22" pos:end="45:54">= <expr pos:start="45:24" pos:end="45:54"><name pos:start="45:24" pos:end="45:26">yA1</name> <operator pos:start="45:28" pos:end="45:29">&gt;&gt;</operator> <name pos:start="45:31" pos:end="45:54"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:36">sps</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="49:5" pos:end="49:37"><decl pos:start="49:5" pos:end="49:36"><type pos:start="49:5" pos:end="49:13"><specifier pos:start="49:5" pos:end="49:9">const</specifier> <name pos:start="49:11" pos:end="49:13">int</name></type> <name pos:start="49:15" pos:end="49:17">xB1</name>    <init pos:start="49:22" pos:end="49:36">= <expr pos:start="49:24" pos:end="49:36"><name pos:start="49:24" pos:end="49:25">x0</name> <operator pos:start="49:27" pos:end="49:27">+</operator> <name pos:start="49:29" pos:end="49:32">nPbW</name> <operator pos:start="49:34" pos:end="49:34">-</operator> <literal type="number" pos:start="49:36" pos:end="49:36">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:30"><decl pos:start="51:5" pos:end="51:29"><type pos:start="51:5" pos:end="51:13"><specifier pos:start="51:5" pos:end="51:9">const</specifier> <name pos:start="51:11" pos:end="51:13">int</name></type> <name pos:start="51:15" pos:end="51:17">yB1</name>    <init pos:start="51:22" pos:end="51:29">= <expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:25">y0</name> <operator pos:start="51:27" pos:end="51:27">-</operator> <literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:55"><decl pos:start="53:5" pos:end="53:54"><type pos:start="53:5" pos:end="53:13"><specifier pos:start="53:5" pos:end="53:9">const</specifier> <name pos:start="53:11" pos:end="53:13">int</name></type> <name pos:start="53:15" pos:end="53:20">xB1_pu</name> <init pos:start="53:22" pos:end="53:54">= <expr pos:start="53:24" pos:end="53:54"><name pos:start="53:24" pos:end="53:26">xB1</name> <operator pos:start="53:28" pos:end="53:29">&gt;&gt;</operator> <name pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:36">sps</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:55"><decl pos:start="55:5" pos:end="55:54"><type pos:start="55:5" pos:end="55:13"><specifier pos:start="55:5" pos:end="55:9">const</specifier> <name pos:start="55:11" pos:end="55:13">int</name></type> <name pos:start="55:15" pos:end="55:20">yB1_pu</name> <init pos:start="55:22" pos:end="55:54">= <expr pos:start="55:24" pos:end="55:54"><name pos:start="55:24" pos:end="55:26">yB1</name> <operator pos:start="55:28" pos:end="55:29">&gt;&gt;</operator> <name pos:start="55:31" pos:end="55:54"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:36">sps</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="59:5" pos:end="59:33"><decl pos:start="59:5" pos:end="59:32"><type pos:start="59:5" pos:end="59:13"><specifier pos:start="59:5" pos:end="59:9">const</specifier> <name pos:start="59:11" pos:end="59:13">int</name></type> <name pos:start="59:15" pos:end="59:17">xB0</name>    <init pos:start="59:22" pos:end="59:32">= <expr pos:start="59:24" pos:end="59:32"><name pos:start="59:24" pos:end="59:25">x0</name> <operator pos:start="59:27" pos:end="59:27">+</operator> <name pos:start="59:29" pos:end="59:32">nPbW</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:30"><decl pos:start="61:5" pos:end="61:29"><type pos:start="61:5" pos:end="61:13"><specifier pos:start="61:5" pos:end="61:9">const</specifier> <name pos:start="61:11" pos:end="61:13">int</name></type> <name pos:start="61:15" pos:end="61:17">yB0</name>    <init pos:start="61:22" pos:end="61:29">= <expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:25">y0</name> <operator pos:start="61:27" pos:end="61:27">-</operator> <literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="63:5" pos:end="63:55"><decl pos:start="63:5" pos:end="63:54"><type pos:start="63:5" pos:end="63:13"><specifier pos:start="63:5" pos:end="63:9">const</specifier> <name pos:start="63:11" pos:end="63:13">int</name></type> <name pos:start="63:15" pos:end="63:20">xB0_pu</name> <init pos:start="63:22" pos:end="63:54">= <expr pos:start="63:24" pos:end="63:54"><name pos:start="63:24" pos:end="63:26">xB0</name> <operator pos:start="63:28" pos:end="63:29">&gt;&gt;</operator> <name pos:start="63:31" pos:end="63:54"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:36">sps</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="65:5" pos:end="65:55"><decl pos:start="65:5" pos:end="65:54"><type pos:start="65:5" pos:end="65:13"><specifier pos:start="65:5" pos:end="65:9">const</specifier> <name pos:start="65:11" pos:end="65:13">int</name></type> <name pos:start="65:15" pos:end="65:20">yB0_pu</name> <init pos:start="65:22" pos:end="65:54">= <expr pos:start="65:24" pos:end="65:54"><name pos:start="65:24" pos:end="65:26">yB0</name> <operator pos:start="65:28" pos:end="65:29">&gt;&gt;</operator> <name pos:start="65:31" pos:end="65:54"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:36">sps</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="69:5" pos:end="69:30"><decl pos:start="69:5" pos:end="69:29"><type pos:start="69:5" pos:end="69:13"><specifier pos:start="69:5" pos:end="69:9">const</specifier> <name pos:start="69:11" pos:end="69:13">int</name></type> <name pos:start="69:15" pos:end="69:17">xA0</name>    <init pos:start="69:22" pos:end="69:29">= <expr pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:25">x0</name> <operator pos:start="69:27" pos:end="69:27">-</operator> <literal type="number" pos:start="69:29" pos:end="69:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:33"><decl pos:start="71:5" pos:end="71:32"><type pos:start="71:5" pos:end="71:13"><specifier pos:start="71:5" pos:end="71:9">const</specifier> <name pos:start="71:11" pos:end="71:13">int</name></type> <name pos:start="71:15" pos:end="71:17">yA0</name>    <init pos:start="71:22" pos:end="71:32">= <expr pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:25">y0</name> <operator pos:start="71:27" pos:end="71:27">+</operator> <name pos:start="71:29" pos:end="71:32">nPbH</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="73:5" pos:end="73:55"><decl pos:start="73:5" pos:end="73:54"><type pos:start="73:5" pos:end="73:13"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:13">int</name></type> <name pos:start="73:15" pos:end="73:20">xA0_pu</name> <init pos:start="73:22" pos:end="73:54">= <expr pos:start="73:24" pos:end="73:54"><name pos:start="73:24" pos:end="73:26">xA0</name> <operator pos:start="73:28" pos:end="73:29">&gt;&gt;</operator> <name pos:start="73:31" pos:end="73:54"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:36">sps</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="75:5" pos:end="75:55"><decl pos:start="75:5" pos:end="75:54"><type pos:start="75:5" pos:end="75:13"><specifier pos:start="75:5" pos:end="75:9">const</specifier> <name pos:start="75:11" pos:end="75:13">int</name></type> <name pos:start="75:15" pos:end="75:20">yA0_pu</name> <init pos:start="75:22" pos:end="75:54">= <expr pos:start="75:24" pos:end="75:54"><name pos:start="75:24" pos:end="75:26">yA0</name> <operator pos:start="75:28" pos:end="75:29">&gt;&gt;</operator> <name pos:start="75:31" pos:end="75:54"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:36">sps</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="79:5" pos:end="79:30"><decl pos:start="79:5" pos:end="79:29"><type pos:start="79:5" pos:end="79:13"><specifier pos:start="79:5" pos:end="79:9">const</specifier> <name pos:start="79:11" pos:end="79:13">int</name></type> <name pos:start="79:15" pos:end="79:17">xB2</name>    <init pos:start="79:22" pos:end="79:29">= <expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:25">x0</name> <operator pos:start="79:27" pos:end="79:27">-</operator> <literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="81:5" pos:end="81:30"><decl pos:start="81:5" pos:end="81:29"><type pos:start="81:5" pos:end="81:13"><specifier pos:start="81:5" pos:end="81:9">const</specifier> <name pos:start="81:11" pos:end="81:13">int</name></type> <name pos:start="81:15" pos:end="81:17">yB2</name>    <init pos:start="81:22" pos:end="81:29">= <expr pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:25">y0</name> <operator pos:start="81:27" pos:end="81:27">-</operator> <literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="83:5" pos:end="83:55"><decl pos:start="83:5" pos:end="83:54"><type pos:start="83:5" pos:end="83:13"><specifier pos:start="83:5" pos:end="83:9">const</specifier> <name pos:start="83:11" pos:end="83:13">int</name></type> <name pos:start="83:15" pos:end="83:20">xB2_pu</name> <init pos:start="83:22" pos:end="83:54">= <expr pos:start="83:24" pos:end="83:54"><name pos:start="83:24" pos:end="83:26">xB2</name> <operator pos:start="83:28" pos:end="83:29">&gt;&gt;</operator> <name pos:start="83:31" pos:end="83:54"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">sps</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="85:5" pos:end="85:55"><decl pos:start="85:5" pos:end="85:54"><type pos:start="85:5" pos:end="85:13"><specifier pos:start="85:5" pos:end="85:9">const</specifier> <name pos:start="85:11" pos:end="85:13">int</name></type> <name pos:start="85:15" pos:end="85:20">yB2_pu</name> <init pos:start="85:22" pos:end="85:54">= <expr pos:start="85:24" pos:end="85:54"><name pos:start="85:24" pos:end="85:26">yB2</name> <operator pos:start="85:28" pos:end="85:29">&gt;&gt;</operator> <name pos:start="85:31" pos:end="85:54"><name pos:start="85:31" pos:end="85:31">s</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:36">sps</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:54">log2_min_pu_size</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="89:5" pos:end="91:85"><decl pos:start="89:5" pos:end="91:84"><type pos:start="89:5" pos:end="89:13"><specifier pos:start="89:5" pos:end="89:9">const</specifier> <name pos:start="89:11" pos:end="89:13">int</name></type> <name pos:start="89:15" pos:end="89:21">nb_refs</name> <init pos:start="89:23" pos:end="91:84">= <expr pos:start="89:25" pos:end="91:84"><ternary pos:start="89:25" pos:end="91:84"><condition pos:start="89:25" pos:end="89:55"><expr pos:start="89:25" pos:end="89:53"><operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:41"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:30">sh</name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:41">slice_type</name></name> <operator pos:start="89:43" pos:end="89:44">==</operator> <name pos:start="89:46" pos:end="89:52">P_SLICE</name><operator pos:start="89:53" pos:end="89:53">)</operator></expr> ?</condition><then pos:start="91:25" pos:end="91:40">

                        <expr pos:start="91:25" pos:end="91:40"><name pos:start="91:25" pos:end="91:40"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:29">sh</name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:37">nb_refs</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><literal type="number" pos:start="91:39" pos:end="91:39">0</literal></expr>]</index></name></expr> </then><else pos:start="91:42" pos:end="91:84">: <expr pos:start="91:44" pos:end="91:84"><call pos:start="91:44" pos:end="91:84"><name pos:start="91:44" pos:end="91:48">FFMIN</name><argument_list pos:start="91:49" pos:end="91:84">(<argument pos:start="91:50" pos:end="91:65"><expr pos:start="91:50" pos:end="91:65"><name pos:start="91:50" pos:end="91:65"><name pos:start="91:50" pos:end="91:50">s</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:54">sh</name><operator pos:start="91:55" pos:end="91:55">.</operator><name pos:start="91:56" pos:end="91:62">nb_refs</name><index pos:start="91:63" pos:end="91:65">[<expr pos:start="91:64" pos:end="91:64"><literal type="number" pos:start="91:64" pos:end="91:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="91:68" pos:end="91:83"><expr pos:start="91:68" pos:end="91:83"><name pos:start="91:68" pos:end="91:83"><name pos:start="91:68" pos:end="91:68">s</name><operator pos:start="91:69" pos:end="91:70">-&gt;</operator><name pos:start="91:71" pos:end="91:72">sh</name><operator pos:start="91:73" pos:end="91:73">.</operator><name pos:start="91:74" pos:end="91:80">nb_refs</name><index pos:start="91:81" pos:end="91:83">[<expr pos:start="91:82" pos:end="91:82"><literal type="number" pos:start="91:82" pos:end="91:82">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="93:5" pos:end="93:24"><decl pos:start="93:5" pos:end="93:23"><type pos:start="93:5" pos:end="93:7"><name pos:start="93:5" pos:end="93:7">int</name></type> <name pos:start="93:9" pos:end="93:17">check_MER</name>   <init pos:start="93:21" pos:end="93:23">= <expr pos:start="93:23" pos:end="93:23"><literal type="number" pos:start="93:23" pos:end="93:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="95:5" pos:end="95:24"><decl pos:start="95:5" pos:end="95:23"><type pos:start="95:5" pos:end="95:7"><name pos:start="95:5" pos:end="95:7">int</name></type> <name pos:start="95:9" pos:end="95:19">check_MER_1</name> <init pos:start="95:21" pos:end="95:23">= <expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">1</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="99:5" pos:end="99:21"><decl pos:start="99:5" pos:end="99:20"><type pos:start="99:5" pos:end="99:7"><name pos:start="99:5" pos:end="99:7">int</name></type> <name pos:start="99:9" pos:end="99:16">zero_idx</name> <init pos:start="99:18" pos:end="99:20">= <expr pos:start="99:20" pos:end="99:20"><literal type="number" pos:start="99:20" pos:end="99:20">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="103:5" pos:end="103:26"><decl pos:start="103:5" pos:end="103:25"><type pos:start="103:5" pos:end="103:7"><name pos:start="103:5" pos:end="103:7">int</name></type> <name pos:start="103:9" pos:end="103:21">nb_merge_cand</name> <init pos:start="103:23" pos:end="103:25">= <expr pos:start="103:25" pos:end="103:25"><literal type="number" pos:start="103:25" pos:end="103:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="105:5" pos:end="105:31"><decl pos:start="105:5" pos:end="105:30"><type pos:start="105:5" pos:end="105:7"><name pos:start="105:5" pos:end="105:7">int</name></type> <name pos:start="105:9" pos:end="105:26">nb_orig_merge_cand</name> <init pos:start="105:28" pos:end="105:30">= <expr pos:start="105:30" pos:end="105:30"><literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="109:5" pos:end="109:24"><decl pos:start="109:5" pos:end="109:23"><type pos:start="109:5" pos:end="109:7"><name pos:start="109:5" pos:end="109:7">int</name></type> <name pos:start="109:9" pos:end="109:23">is_available_a0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="111:5" pos:end="111:24"><decl pos:start="111:5" pos:end="111:23"><type pos:start="111:5" pos:end="111:7"><name pos:start="111:5" pos:end="111:7">int</name></type> <name pos:start="111:9" pos:end="111:23">is_available_a1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="113:5" pos:end="113:24"><decl pos:start="113:5" pos:end="113:23"><type pos:start="113:5" pos:end="113:7"><name pos:start="113:5" pos:end="113:7">int</name></type> <name pos:start="113:9" pos:end="113:23">is_available_b0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="115:5" pos:end="115:24"><decl pos:start="115:5" pos:end="115:23"><type pos:start="115:5" pos:end="115:7"><name pos:start="115:5" pos:end="115:7">int</name></type> <name pos:start="115:9" pos:end="115:23">is_available_b1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="117:5" pos:end="117:24"><decl pos:start="117:5" pos:end="117:23"><type pos:start="117:5" pos:end="117:7"><name pos:start="117:5" pos:end="117:7">int</name></type> <name pos:start="117:9" pos:end="117:23">is_available_b2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="119:5" pos:end="119:17"><decl pos:start="119:5" pos:end="119:16"><type pos:start="119:5" pos:end="119:7"><name pos:start="119:5" pos:end="119:7">int</name></type> <name pos:start="119:9" pos:end="119:16">check_B0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="121:5" pos:end="121:17"><decl pos:start="121:5" pos:end="121:16"><type pos:start="121:5" pos:end="121:7"><name pos:start="121:5" pos:end="121:7">int</name></type> <name pos:start="121:9" pos:end="121:16">check_A0</name></decl>;</decl_stmt>



    <comment type="line" pos:start="125:5" pos:end="125:40">//first left spatial merge candidate</comment>

    <expr_stmt pos:start="127:5" pos:end="127:47"><expr pos:start="127:5" pos:end="127:46"><name pos:start="127:5" pos:end="127:19">is_available_a1</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <call pos:start="127:23" pos:end="127:46"><name pos:start="127:23" pos:end="127:31">AVAILABLE</name><argument_list pos:start="127:32" pos:end="127:46">(<argument pos:start="127:33" pos:end="127:41"><expr pos:start="127:33" pos:end="127:41"><name pos:start="127:33" pos:end="127:41">cand_left</name></expr></argument>, <argument pos:start="127:44" pos:end="127:45"><expr pos:start="127:44" pos:end="127:45"><name pos:start="127:44" pos:end="127:45">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="143:5"><if pos:start="131:5" pos:end="143:5">if <condition pos:start="131:8" pos:end="139:39">(<expr pos:start="131:9" pos:end="139:38"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:22">singleMCLFlag</name> <operator pos:start="131:24" pos:end="131:25">&amp;&amp;</operator> <name pos:start="131:27" pos:end="131:34">part_idx</name> <operator pos:start="131:36" pos:end="131:37">==</operator> <literal type="number" pos:start="131:39" pos:end="131:39">1</literal> <operator pos:start="131:41" pos:end="131:42">&amp;&amp;</operator>

        <operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:25"><name pos:start="133:10" pos:end="133:11">lc</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:15">cu</name><operator pos:start="133:16" pos:end="133:16">.</operator><name pos:start="133:17" pos:end="133:25">part_mode</name></name> <operator pos:start="133:27" pos:end="133:28">==</operator> <name pos:start="133:30" pos:end="133:38">PART_Nx2N</name> <operator pos:start="133:40" pos:end="133:41">||</operator>

         <name pos:start="135:10" pos:end="135:25"><name pos:start="135:10" pos:end="135:11">lc</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:15">cu</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:25">part_mode</name></name> <operator pos:start="135:27" pos:end="135:28">==</operator> <name pos:start="135:30" pos:end="135:39">PART_nLx2N</name> <operator pos:start="135:41" pos:end="135:42">||</operator>

         <name pos:start="137:10" pos:end="137:25"><name pos:start="137:10" pos:end="137:11">lc</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:15">cu</name><operator pos:start="137:16" pos:end="137:16">.</operator><name pos:start="137:17" pos:end="137:25">part_mode</name></name> <operator pos:start="137:27" pos:end="137:28">==</operator> <name pos:start="137:30" pos:end="137:39">PART_nRx2N</name><operator pos:start="137:40" pos:end="137:40">)</operator> <operator pos:start="137:42" pos:end="137:43">||</operator>

        <call pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:17">isDiffMER</name><argument_list pos:start="139:18" pos:end="139:38">(<argument pos:start="139:19" pos:end="139:19"><expr pos:start="139:19" pos:end="139:19"><name pos:start="139:19" pos:end="139:19">s</name></expr></argument>, <argument pos:start="139:22" pos:end="139:24"><expr pos:start="139:22" pos:end="139:24"><name pos:start="139:22" pos:end="139:24">xA1</name></expr></argument>, <argument pos:start="139:27" pos:end="139:29"><expr pos:start="139:27" pos:end="139:29"><name pos:start="139:27" pos:end="139:29">yA1</name></expr></argument>, <argument pos:start="139:32" pos:end="139:33"><expr pos:start="139:32" pos:end="139:33"><name pos:start="139:32" pos:end="139:33">x0</name></expr></argument>, <argument pos:start="139:36" pos:end="139:37"><expr pos:start="139:36" pos:end="139:37"><name pos:start="139:36" pos:end="139:37">y0</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:41" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:28">

        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:23">is_available_a1</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="147:5" pos:end="157:5"><if pos:start="147:5" pos:end="157:5">if <condition pos:start="147:8" pos:end="147:24">(<expr pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:23">is_available_a1</name></expr>)</condition> <block pos:start="147:26" pos:end="157:5">{<block_content pos:start="149:9" pos:end="155:24">

        <expr_stmt pos:start="149:9" pos:end="149:42"><expr pos:start="149:9" pos:end="149:41"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:21">mergecandlist</name><index pos:start="149:22" pos:end="149:24">[<expr pos:start="149:23" pos:end="149:23"><literal type="number" pos:start="149:23" pos:end="149:23">0</literal></expr>]</index></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:41"><name pos:start="149:28" pos:end="149:37">TAB_MVF_PU</name><argument_list pos:start="149:38" pos:end="149:41">(<argument pos:start="149:39" pos:end="149:40"><expr pos:start="149:39" pos:end="149:40"><name pos:start="149:39" pos:end="149:40">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="153:19"><if pos:start="151:9" pos:end="153:19">if <condition pos:start="151:12" pos:end="151:27">(<expr pos:start="151:13" pos:end="151:26"><name pos:start="151:13" pos:end="151:21">merge_idx</name> <operator pos:start="151:23" pos:end="151:24">==</operator> <literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:19"><block_content pos:start="153:13" pos:end="153:19">

            <return pos:start="153:13" pos:end="153:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:24"><expr pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:21">nb_merge_cand</name><operator pos:start="155:22" pos:end="155:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="161:5" pos:end="161:36">// above spatial merge candidate</comment>

    <expr_stmt pos:start="163:5" pos:end="163:45"><expr pos:start="163:5" pos:end="163:44"><name pos:start="163:5" pos:end="163:19">is_available_b1</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <call pos:start="163:23" pos:end="163:44"><name pos:start="163:23" pos:end="163:31">AVAILABLE</name><argument_list pos:start="163:32" pos:end="163:44">(<argument pos:start="163:33" pos:end="163:39"><expr pos:start="163:33" pos:end="163:39"><name pos:start="163:33" pos:end="163:39">cand_up</name></expr></argument>, <argument pos:start="163:42" pos:end="163:43"><expr pos:start="163:42" pos:end="163:43"><name pos:start="163:42" pos:end="163:43">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="167:5" pos:end="179:5"><if pos:start="167:5" pos:end="179:5">if <condition pos:start="167:8" pos:end="175:39">(<expr pos:start="167:9" pos:end="175:38"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:22">singleMCLFlag</name> <operator pos:start="167:24" pos:end="167:25">&amp;&amp;</operator> <name pos:start="167:27" pos:end="167:34">part_idx</name> <operator pos:start="167:36" pos:end="167:37">==</operator> <literal type="number" pos:start="167:39" pos:end="167:39">1</literal> <operator pos:start="167:41" pos:end="167:42">&amp;&amp;</operator>

        <operator pos:start="169:9" pos:end="169:9">(</operator><name pos:start="169:10" pos:end="169:25"><name pos:start="169:10" pos:end="169:11">lc</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:15">cu</name><operator pos:start="169:16" pos:end="169:16">.</operator><name pos:start="169:17" pos:end="169:25">part_mode</name></name> <operator pos:start="169:27" pos:end="169:28">==</operator> <name pos:start="169:30" pos:end="169:38">PART_2NxN</name> <operator pos:start="169:40" pos:end="169:41">||</operator>

         <name pos:start="171:10" pos:end="171:25"><name pos:start="171:10" pos:end="171:11">lc</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:15">cu</name><operator pos:start="171:16" pos:end="171:16">.</operator><name pos:start="171:17" pos:end="171:25">part_mode</name></name> <operator pos:start="171:27" pos:end="171:28">==</operator> <name pos:start="171:30" pos:end="171:39">PART_2NxnU</name> <operator pos:start="171:41" pos:end="171:42">||</operator>

         <name pos:start="173:10" pos:end="173:25"><name pos:start="173:10" pos:end="173:11">lc</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:15">cu</name><operator pos:start="173:16" pos:end="173:16">.</operator><name pos:start="173:17" pos:end="173:25">part_mode</name></name> <operator pos:start="173:27" pos:end="173:28">==</operator> <name pos:start="173:30" pos:end="173:39">PART_2NxnD</name><operator pos:start="173:40" pos:end="173:40">)</operator> <operator pos:start="173:42" pos:end="173:43">||</operator>

        <call pos:start="175:9" pos:end="175:38"><name pos:start="175:9" pos:end="175:17">isDiffMER</name><argument_list pos:start="175:18" pos:end="175:38">(<argument pos:start="175:19" pos:end="175:19"><expr pos:start="175:19" pos:end="175:19"><name pos:start="175:19" pos:end="175:19">s</name></expr></argument>, <argument pos:start="175:22" pos:end="175:24"><expr pos:start="175:22" pos:end="175:24"><name pos:start="175:22" pos:end="175:24">xB1</name></expr></argument>, <argument pos:start="175:27" pos:end="175:29"><expr pos:start="175:27" pos:end="175:29"><name pos:start="175:27" pos:end="175:29">yB1</name></expr></argument>, <argument pos:start="175:32" pos:end="175:33"><expr pos:start="175:32" pos:end="175:33"><name pos:start="175:32" pos:end="175:33">x0</name></expr></argument>, <argument pos:start="175:36" pos:end="175:37"><expr pos:start="175:36" pos:end="175:37"><name pos:start="175:36" pos:end="175:37">y0</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:41" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:28">

        <expr_stmt pos:start="177:9" pos:end="177:28"><expr pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:23">is_available_b1</name> <operator pos:start="177:25" pos:end="177:25">=</operator> <literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="185:47"><if pos:start="183:5" pos:end="185:47">if <condition pos:start="183:8" pos:end="183:43">(<expr pos:start="183:9" pos:end="183:42"><name pos:start="183:9" pos:end="183:23">is_available_a1</name> <operator pos:start="183:25" pos:end="183:26">&amp;&amp;</operator> <name pos:start="183:28" pos:end="183:42">is_available_b1</name></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:47"><block_content pos:start="185:9" pos:end="185:47">

        <expr_stmt pos:start="185:9" pos:end="185:47"><expr pos:start="185:9" pos:end="185:46"><name pos:start="185:9" pos:end="185:17">check_MER</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <operator pos:start="185:21" pos:end="185:21">!</operator><call pos:start="185:22" pos:end="185:46"><name pos:start="185:22" pos:end="185:38">COMPARE_MV_REFIDX</name><argument_list pos:start="185:39" pos:end="185:46">(<argument pos:start="185:40" pos:end="185:41"><expr pos:start="185:40" pos:end="185:41"><name pos:start="185:40" pos:end="185:41">B1</name></expr></argument>, <argument pos:start="185:44" pos:end="185:45"><expr pos:start="185:44" pos:end="185:45"><name pos:start="185:44" pos:end="185:45">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="191:56"><if pos:start="189:5" pos:end="191:56">if <condition pos:start="189:8" pos:end="189:37">(<expr pos:start="189:9" pos:end="189:36"><name pos:start="189:9" pos:end="189:23">is_available_b1</name> <operator pos:start="189:25" pos:end="189:26">&amp;&amp;</operator> <name pos:start="189:28" pos:end="189:36">check_MER</name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:56"><block_content pos:start="191:9" pos:end="191:56">

        <expr_stmt pos:start="191:9" pos:end="191:56"><expr pos:start="191:9" pos:end="191:55"><name pos:start="191:9" pos:end="191:38"><name pos:start="191:9" pos:end="191:21">mergecandlist</name><index pos:start="191:22" pos:end="191:38">[<expr pos:start="191:23" pos:end="191:37"><name pos:start="191:23" pos:end="191:35">nb_merge_cand</name><operator pos:start="191:36" pos:end="191:37">++</operator></expr>]</index></name> <operator pos:start="191:40" pos:end="191:40">=</operator> <call pos:start="191:42" pos:end="191:55"><name pos:start="191:42" pos:end="191:51">TAB_MVF_PU</name><argument_list pos:start="191:52" pos:end="191:55">(<argument pos:start="191:53" pos:end="191:54"><expr pos:start="191:53" pos:end="191:54"><name pos:start="191:53" pos:end="191:54">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="195:5" pos:end="195:42">// above right spatial merge candidate</comment>

    <expr_stmt pos:start="197:5" pos:end="197:18"><expr pos:start="197:5" pos:end="197:17"><name pos:start="197:5" pos:end="197:13">check_MER</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:41"><expr pos:start="199:5" pos:end="199:40"><name pos:start="199:5" pos:end="199:12">check_B0</name>  <operator pos:start="199:15" pos:end="199:15">=</operator> <call pos:start="199:17" pos:end="199:40"><name pos:start="199:17" pos:end="199:36">PRED_BLOCK_AVAILABLE</name><argument_list pos:start="199:37" pos:end="199:40">(<argument pos:start="199:38" pos:end="199:39"><expr pos:start="199:38" pos:end="199:39"><name pos:start="199:38" pos:end="199:39">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:63"><expr pos:start="203:5" pos:end="203:62"><name pos:start="203:5" pos:end="203:19">is_available_b0</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <name pos:start="203:23" pos:end="203:30">check_B0</name> <operator pos:start="203:32" pos:end="203:33">&amp;&amp;</operator> <call pos:start="203:35" pos:end="203:62"><name pos:start="203:35" pos:end="203:43">AVAILABLE</name><argument_list pos:start="203:44" pos:end="203:62">(<argument pos:start="203:45" pos:end="203:57"><expr pos:start="203:45" pos:end="203:57"><name pos:start="203:45" pos:end="203:57">cand_up_right</name></expr></argument>, <argument pos:start="203:60" pos:end="203:61"><expr pos:start="203:60" pos:end="203:61"><name pos:start="203:60" pos:end="203:61">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="207:5" pos:end="209:28"><if pos:start="207:5" pos:end="209:28">if <condition pos:start="207:8" pos:end="207:39">(<expr pos:start="207:9" pos:end="207:38"><call pos:start="207:9" pos:end="207:38"><name pos:start="207:9" pos:end="207:17">isDiffMER</name><argument_list pos:start="207:18" pos:end="207:38">(<argument pos:start="207:19" pos:end="207:19"><expr pos:start="207:19" pos:end="207:19"><name pos:start="207:19" pos:end="207:19">s</name></expr></argument>, <argument pos:start="207:22" pos:end="207:24"><expr pos:start="207:22" pos:end="207:24"><name pos:start="207:22" pos:end="207:24">xB0</name></expr></argument>, <argument pos:start="207:27" pos:end="207:29"><expr pos:start="207:27" pos:end="207:29"><name pos:start="207:27" pos:end="207:29">yB0</name></expr></argument>, <argument pos:start="207:32" pos:end="207:33"><expr pos:start="207:32" pos:end="207:33"><name pos:start="207:32" pos:end="207:33">x0</name></expr></argument>, <argument pos:start="207:36" pos:end="207:37"><expr pos:start="207:36" pos:end="207:37"><name pos:start="207:36" pos:end="207:37">y0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:28"><block_content pos:start="209:9" pos:end="209:28">

        <expr_stmt pos:start="209:9" pos:end="209:28"><expr pos:start="209:9" pos:end="209:27"><name pos:start="209:9" pos:end="209:23">is_available_b0</name> <operator pos:start="209:25" pos:end="209:25">=</operator> <literal type="number" pos:start="209:27" pos:end="209:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="215:47"><if pos:start="213:5" pos:end="215:47">if <condition pos:start="213:8" pos:end="213:43">(<expr pos:start="213:9" pos:end="213:42"><name pos:start="213:9" pos:end="213:23">is_available_b1</name> <operator pos:start="213:25" pos:end="213:26">&amp;&amp;</operator> <name pos:start="213:28" pos:end="213:42">is_available_b0</name></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:47"><block_content pos:start="215:9" pos:end="215:47">

        <expr_stmt pos:start="215:9" pos:end="215:47"><expr pos:start="215:9" pos:end="215:46"><name pos:start="215:9" pos:end="215:17">check_MER</name> <operator pos:start="215:19" pos:end="215:19">=</operator> <operator pos:start="215:21" pos:end="215:21">!</operator><call pos:start="215:22" pos:end="215:46"><name pos:start="215:22" pos:end="215:38">COMPARE_MV_REFIDX</name><argument_list pos:start="215:39" pos:end="215:46">(<argument pos:start="215:40" pos:end="215:41"><expr pos:start="215:40" pos:end="215:41"><name pos:start="215:40" pos:end="215:41">B0</name></expr></argument>, <argument pos:start="215:44" pos:end="215:45"><expr pos:start="215:44" pos:end="215:45"><name pos:start="215:44" pos:end="215:45">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="229:5"><if pos:start="219:5" pos:end="229:5">if <condition pos:start="219:8" pos:end="219:37">(<expr pos:start="219:9" pos:end="219:36"><name pos:start="219:9" pos:end="219:23">is_available_b0</name> <operator pos:start="219:25" pos:end="219:26">&amp;&amp;</operator> <name pos:start="219:28" pos:end="219:36">check_MER</name></expr>)</condition> <block pos:start="219:39" pos:end="229:5">{<block_content pos:start="221:9" pos:end="227:24">

        <expr_stmt pos:start="221:9" pos:end="221:54"><expr pos:start="221:9" pos:end="221:53"><name pos:start="221:9" pos:end="221:36"><name pos:start="221:9" pos:end="221:21">mergecandlist</name><index pos:start="221:22" pos:end="221:36">[<expr pos:start="221:23" pos:end="221:35"><name pos:start="221:23" pos:end="221:35">nb_merge_cand</name></expr>]</index></name> <operator pos:start="221:38" pos:end="221:38">=</operator> <call pos:start="221:40" pos:end="221:53"><name pos:start="221:40" pos:end="221:49">TAB_MVF_PU</name><argument_list pos:start="221:50" pos:end="221:53">(<argument pos:start="221:51" pos:end="221:52"><expr pos:start="221:51" pos:end="221:52"><name pos:start="221:51" pos:end="221:52">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="223:9" pos:end="225:19"><if pos:start="223:9" pos:end="225:19">if <condition pos:start="223:12" pos:end="223:39">(<expr pos:start="223:13" pos:end="223:38"><name pos:start="223:13" pos:end="223:21">merge_idx</name> <operator pos:start="223:23" pos:end="223:24">==</operator> <name pos:start="223:26" pos:end="223:38">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:19"><block_content pos:start="225:13" pos:end="225:19">

            <return pos:start="225:13" pos:end="225:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:24"><expr pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:21">nb_merge_cand</name><operator pos:start="227:22" pos:end="227:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="233:5" pos:end="233:42">// left bottom spatial merge candidate</comment>

    <expr_stmt pos:start="235:5" pos:end="235:18"><expr pos:start="235:5" pos:end="235:17"><name pos:start="235:5" pos:end="235:13">check_MER</name> <operator pos:start="235:15" pos:end="235:15">=</operator> <literal type="number" pos:start="235:17" pos:end="235:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:41"><expr pos:start="237:5" pos:end="237:40"><name pos:start="237:5" pos:end="237:12">check_A0</name>  <operator pos:start="237:15" pos:end="237:15">=</operator> <call pos:start="237:17" pos:end="237:40"><name pos:start="237:17" pos:end="237:36">PRED_BLOCK_AVAILABLE</name><argument_list pos:start="237:37" pos:end="237:40">(<argument pos:start="237:38" pos:end="237:39"><expr pos:start="237:38" pos:end="237:39"><name pos:start="237:38" pos:end="237:39">A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:66"><expr pos:start="241:5" pos:end="241:65"><name pos:start="241:5" pos:end="241:19">is_available_a0</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <name pos:start="241:23" pos:end="241:30">check_A0</name> <operator pos:start="241:32" pos:end="241:33">&amp;&amp;</operator> <call pos:start="241:35" pos:end="241:65"><name pos:start="241:35" pos:end="241:43">AVAILABLE</name><argument_list pos:start="241:44" pos:end="241:65">(<argument pos:start="241:45" pos:end="241:60"><expr pos:start="241:45" pos:end="241:60"><name pos:start="241:45" pos:end="241:60">cand_bottom_left</name></expr></argument>, <argument pos:start="241:63" pos:end="241:64"><expr pos:start="241:63" pos:end="241:64"><name pos:start="241:63" pos:end="241:64">A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="245:5" pos:end="247:28"><if pos:start="245:5" pos:end="247:28">if <condition pos:start="245:8" pos:end="245:39">(<expr pos:start="245:9" pos:end="245:38"><call pos:start="245:9" pos:end="245:38"><name pos:start="245:9" pos:end="245:17">isDiffMER</name><argument_list pos:start="245:18" pos:end="245:38">(<argument pos:start="245:19" pos:end="245:19"><expr pos:start="245:19" pos:end="245:19"><name pos:start="245:19" pos:end="245:19">s</name></expr></argument>, <argument pos:start="245:22" pos:end="245:24"><expr pos:start="245:22" pos:end="245:24"><name pos:start="245:22" pos:end="245:24">xA0</name></expr></argument>, <argument pos:start="245:27" pos:end="245:29"><expr pos:start="245:27" pos:end="245:29"><name pos:start="245:27" pos:end="245:29">yA0</name></expr></argument>, <argument pos:start="245:32" pos:end="245:33"><expr pos:start="245:32" pos:end="245:33"><name pos:start="245:32" pos:end="245:33">x0</name></expr></argument>, <argument pos:start="245:36" pos:end="245:37"><expr pos:start="245:36" pos:end="245:37"><name pos:start="245:36" pos:end="245:37">y0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="247:9" pos:end="247:28"><block_content pos:start="247:9" pos:end="247:28">

        <expr_stmt pos:start="247:9" pos:end="247:28"><expr pos:start="247:9" pos:end="247:27"><name pos:start="247:9" pos:end="247:23">is_available_a0</name> <operator pos:start="247:25" pos:end="247:25">=</operator> <literal type="number" pos:start="247:27" pos:end="247:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="253:47"><if pos:start="251:5" pos:end="253:47">if <condition pos:start="251:8" pos:end="251:43">(<expr pos:start="251:9" pos:end="251:42"><name pos:start="251:9" pos:end="251:23">is_available_a1</name> <operator pos:start="251:25" pos:end="251:26">&amp;&amp;</operator> <name pos:start="251:28" pos:end="251:42">is_available_a0</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:47"><block_content pos:start="253:9" pos:end="253:47">

        <expr_stmt pos:start="253:9" pos:end="253:47"><expr pos:start="253:9" pos:end="253:46"><name pos:start="253:9" pos:end="253:17">check_MER</name> <operator pos:start="253:19" pos:end="253:19">=</operator> <operator pos:start="253:21" pos:end="253:21">!</operator><call pos:start="253:22" pos:end="253:46"><name pos:start="253:22" pos:end="253:38">COMPARE_MV_REFIDX</name><argument_list pos:start="253:39" pos:end="253:46">(<argument pos:start="253:40" pos:end="253:41"><expr pos:start="253:40" pos:end="253:41"><name pos:start="253:40" pos:end="253:41">A0</name></expr></argument>, <argument pos:start="253:44" pos:end="253:45"><expr pos:start="253:44" pos:end="253:45"><name pos:start="253:44" pos:end="253:45">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="257:5" pos:end="267:5"><if pos:start="257:5" pos:end="267:5">if <condition pos:start="257:8" pos:end="257:37">(<expr pos:start="257:9" pos:end="257:36"><name pos:start="257:9" pos:end="257:23">is_available_a0</name> <operator pos:start="257:25" pos:end="257:26">&amp;&amp;</operator> <name pos:start="257:28" pos:end="257:36">check_MER</name></expr>)</condition> <block pos:start="257:39" pos:end="267:5">{<block_content pos:start="259:9" pos:end="265:24">

        <expr_stmt pos:start="259:9" pos:end="259:54"><expr pos:start="259:9" pos:end="259:53"><name pos:start="259:9" pos:end="259:36"><name pos:start="259:9" pos:end="259:21">mergecandlist</name><index pos:start="259:22" pos:end="259:36">[<expr pos:start="259:23" pos:end="259:35"><name pos:start="259:23" pos:end="259:35">nb_merge_cand</name></expr>]</index></name> <operator pos:start="259:38" pos:end="259:38">=</operator> <call pos:start="259:40" pos:end="259:53"><name pos:start="259:40" pos:end="259:49">TAB_MVF_PU</name><argument_list pos:start="259:50" pos:end="259:53">(<argument pos:start="259:51" pos:end="259:52"><expr pos:start="259:51" pos:end="259:52"><name pos:start="259:51" pos:end="259:52">A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="263:19"><if pos:start="261:9" pos:end="263:19">if <condition pos:start="261:12" pos:end="261:39">(<expr pos:start="261:13" pos:end="261:38"><name pos:start="261:13" pos:end="261:21">merge_idx</name> <operator pos:start="261:23" pos:end="261:24">==</operator> <name pos:start="261:26" pos:end="261:38">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:19"><block_content pos:start="263:13" pos:end="263:19">

            <return pos:start="263:13" pos:end="263:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:24"><expr pos:start="265:9" pos:end="265:23"><name pos:start="265:9" pos:end="265:21">nb_merge_cand</name><operator pos:start="265:22" pos:end="265:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="271:5" pos:end="271:41">// above left spatial merge candidate</comment>

    <expr_stmt pos:start="273:5" pos:end="273:18"><expr pos:start="273:5" pos:end="273:17"><name pos:start="273:5" pos:end="273:13">check_MER</name> <operator pos:start="273:15" pos:end="273:15">=</operator> <literal type="number" pos:start="273:17" pos:end="273:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:50"><expr pos:start="277:5" pos:end="277:49"><name pos:start="277:5" pos:end="277:19">is_available_b2</name> <operator pos:start="277:21" pos:end="277:21">=</operator> <call pos:start="277:23" pos:end="277:49"><name pos:start="277:23" pos:end="277:31">AVAILABLE</name><argument_list pos:start="277:32" pos:end="277:49">(<argument pos:start="277:33" pos:end="277:44"><expr pos:start="277:33" pos:end="277:44"><name pos:start="277:33" pos:end="277:44">cand_up_left</name></expr></argument>, <argument pos:start="277:47" pos:end="277:48"><expr pos:start="277:47" pos:end="277:48"><name pos:start="277:47" pos:end="277:48">B2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="281:5" pos:end="283:28"><if pos:start="281:5" pos:end="283:28">if <condition pos:start="281:8" pos:end="281:39">(<expr pos:start="281:9" pos:end="281:38"><call pos:start="281:9" pos:end="281:38"><name pos:start="281:9" pos:end="281:17">isDiffMER</name><argument_list pos:start="281:18" pos:end="281:38">(<argument pos:start="281:19" pos:end="281:19"><expr pos:start="281:19" pos:end="281:19"><name pos:start="281:19" pos:end="281:19">s</name></expr></argument>, <argument pos:start="281:22" pos:end="281:24"><expr pos:start="281:22" pos:end="281:24"><name pos:start="281:22" pos:end="281:24">xB2</name></expr></argument>, <argument pos:start="281:27" pos:end="281:29"><expr pos:start="281:27" pos:end="281:29"><name pos:start="281:27" pos:end="281:29">yB2</name></expr></argument>, <argument pos:start="281:32" pos:end="281:33"><expr pos:start="281:32" pos:end="281:33"><name pos:start="281:32" pos:end="281:33">x0</name></expr></argument>, <argument pos:start="281:36" pos:end="281:37"><expr pos:start="281:36" pos:end="281:37"><name pos:start="281:36" pos:end="281:37">y0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:28"><block_content pos:start="283:9" pos:end="283:28">

        <expr_stmt pos:start="283:9" pos:end="283:28"><expr pos:start="283:9" pos:end="283:27"><name pos:start="283:9" pos:end="283:23">is_available_b2</name> <operator pos:start="283:25" pos:end="283:25">=</operator> <literal type="number" pos:start="283:27" pos:end="283:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="289:47"><if pos:start="287:5" pos:end="289:47">if <condition pos:start="287:8" pos:end="287:43">(<expr pos:start="287:9" pos:end="287:42"><name pos:start="287:9" pos:end="287:23">is_available_a1</name> <operator pos:start="287:25" pos:end="287:26">&amp;&amp;</operator> <name pos:start="287:28" pos:end="287:42">is_available_b2</name></expr>)</condition><block type="pseudo" pos:start="289:9" pos:end="289:47"><block_content pos:start="289:9" pos:end="289:47">

        <expr_stmt pos:start="289:9" pos:end="289:47"><expr pos:start="289:9" pos:end="289:46"><name pos:start="289:9" pos:end="289:17">check_MER</name> <operator pos:start="289:19" pos:end="289:19">=</operator> <operator pos:start="289:21" pos:end="289:21">!</operator><call pos:start="289:22" pos:end="289:46"><name pos:start="289:22" pos:end="289:38">COMPARE_MV_REFIDX</name><argument_list pos:start="289:39" pos:end="289:46">(<argument pos:start="289:40" pos:end="289:41"><expr pos:start="289:40" pos:end="289:41"><name pos:start="289:40" pos:end="289:41">B2</name></expr></argument>, <argument pos:start="289:44" pos:end="289:45"><expr pos:start="289:44" pos:end="289:45"><name pos:start="289:44" pos:end="289:45">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="295:49"><if pos:start="293:5" pos:end="295:49">if <condition pos:start="293:8" pos:end="293:43">(<expr pos:start="293:9" pos:end="293:42"><name pos:start="293:9" pos:end="293:23">is_available_b1</name> <operator pos:start="293:25" pos:end="293:26">&amp;&amp;</operator> <name pos:start="293:28" pos:end="293:42">is_available_b2</name></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="295:49"><block_content pos:start="295:9" pos:end="295:49">

        <expr_stmt pos:start="295:9" pos:end="295:49"><expr pos:start="295:9" pos:end="295:48"><name pos:start="295:9" pos:end="295:19">check_MER_1</name> <operator pos:start="295:21" pos:end="295:21">=</operator> <operator pos:start="295:23" pos:end="295:23">!</operator><call pos:start="295:24" pos:end="295:48"><name pos:start="295:24" pos:end="295:40">COMPARE_MV_REFIDX</name><argument_list pos:start="295:41" pos:end="295:48">(<argument pos:start="295:42" pos:end="295:43"><expr pos:start="295:42" pos:end="295:43"><name pos:start="295:42" pos:end="295:43">B2</name></expr></argument>, <argument pos:start="295:46" pos:end="295:47"><expr pos:start="295:46" pos:end="295:47"><name pos:start="295:46" pos:end="295:47">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="309:5"><if pos:start="299:5" pos:end="309:5">if <condition pos:start="299:8" pos:end="299:74">(<expr pos:start="299:9" pos:end="299:73"><name pos:start="299:9" pos:end="299:23">is_available_b2</name> <operator pos:start="299:25" pos:end="299:26">&amp;&amp;</operator> <name pos:start="299:28" pos:end="299:36">check_MER</name> <operator pos:start="299:38" pos:end="299:39">&amp;&amp;</operator> <name pos:start="299:41" pos:end="299:51">check_MER_1</name> <operator pos:start="299:53" pos:end="299:54">&amp;&amp;</operator> <name pos:start="299:56" pos:end="299:68">nb_merge_cand</name> <operator pos:start="299:70" pos:end="299:71">!=</operator> <literal type="number" pos:start="299:73" pos:end="299:73">4</literal></expr>)</condition> <block pos:start="299:76" pos:end="309:5">{<block_content pos:start="301:9" pos:end="307:24">

        <expr_stmt pos:start="301:9" pos:end="301:54"><expr pos:start="301:9" pos:end="301:53"><name pos:start="301:9" pos:end="301:36"><name pos:start="301:9" pos:end="301:21">mergecandlist</name><index pos:start="301:22" pos:end="301:36">[<expr pos:start="301:23" pos:end="301:35"><name pos:start="301:23" pos:end="301:35">nb_merge_cand</name></expr>]</index></name> <operator pos:start="301:38" pos:end="301:38">=</operator> <call pos:start="301:40" pos:end="301:53"><name pos:start="301:40" pos:end="301:49">TAB_MVF_PU</name><argument_list pos:start="301:50" pos:end="301:53">(<argument pos:start="301:51" pos:end="301:52"><expr pos:start="301:51" pos:end="301:52"><name pos:start="301:51" pos:end="301:52">B2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="303:9" pos:end="305:19"><if pos:start="303:9" pos:end="305:19">if <condition pos:start="303:12" pos:end="303:39">(<expr pos:start="303:13" pos:end="303:38"><name pos:start="303:13" pos:end="303:21">merge_idx</name> <operator pos:start="303:23" pos:end="303:24">==</operator> <name pos:start="303:26" pos:end="303:38">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="305:13" pos:end="305:19"><block_content pos:start="305:13" pos:end="305:19">

            <return pos:start="305:13" pos:end="305:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:24"><expr pos:start="307:9" pos:end="307:23"><name pos:start="307:9" pos:end="307:21">nb_merge_cand</name><operator pos:start="307:22" pos:end="307:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="313:5" pos:end="313:39">// temporal motion vector candidate</comment>

    <if_stmt pos:start="315:5" pos:end="357:5"><if pos:start="315:5" pos:end="357:5">if <condition pos:start="315:8" pos:end="317:49">(<expr pos:start="315:9" pos:end="317:48"><name pos:start="315:9" pos:end="315:45"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:13">sh</name><operator pos:start="315:14" pos:end="315:14">.</operator><name pos:start="315:15" pos:end="315:45">slice_temporal_mvp_enabled_flag</name></name> <operator pos:start="315:47" pos:end="315:48">&amp;&amp;</operator>

        <name pos:start="317:9" pos:end="317:21">nb_merge_cand</name> <operator pos:start="317:23" pos:end="317:23">&lt;</operator> <name pos:start="317:25" pos:end="317:48"><name pos:start="317:25" pos:end="317:25">s</name><operator pos:start="317:26" pos:end="317:27">-&gt;</operator><name pos:start="317:28" pos:end="317:29">sh</name><operator pos:start="317:30" pos:end="317:30">.</operator><name pos:start="317:31" pos:end="317:48">max_num_merge_cand</name></name></expr>)</condition> <block pos:start="317:51" pos:end="357:5">{<block_content pos:start="319:9" pos:end="355:9">

        <decl_stmt pos:start="319:9" pos:end="319:32"><decl pos:start="319:9" pos:end="319:20"><type pos:start="319:9" pos:end="319:10"><name pos:start="319:9" pos:end="319:10">Mv</name></type> <name pos:start="319:12" pos:end="319:20">mv_l0_col</name></decl>, <decl pos:start="319:23" pos:end="319:31"><type ref="prev" pos:start="319:9" pos:end="319:10"/><name pos:start="319:23" pos:end="319:31">mv_l1_col</name></decl>;</decl_stmt>

        <decl_stmt pos:start="321:9" pos:end="323:73"><decl pos:start="321:9" pos:end="323:72"><type pos:start="321:9" pos:end="321:11"><name pos:start="321:9" pos:end="321:11">int</name></type> <name pos:start="321:13" pos:end="321:24">available_l0</name> <init pos:start="321:26" pos:end="323:72">= <expr pos:start="321:28" pos:end="323:72"><call pos:start="321:28" pos:end="323:72"><name pos:start="321:28" pos:end="321:54">temporal_luma_motion_vector</name><argument_list pos:start="321:55" pos:end="323:72">(<argument pos:start="321:56" pos:end="321:56"><expr pos:start="321:56" pos:end="321:56"><name pos:start="321:56" pos:end="321:56">s</name></expr></argument>, <argument pos:start="321:59" pos:end="321:60"><expr pos:start="321:59" pos:end="321:60"><name pos:start="321:59" pos:end="321:60">x0</name></expr></argument>, <argument pos:start="321:63" pos:end="321:64"><expr pos:start="321:63" pos:end="321:64"><name pos:start="321:63" pos:end="321:64">y0</name></expr></argument>, <argument pos:start="321:67" pos:end="321:70"><expr pos:start="321:67" pos:end="321:70"><name pos:start="321:67" pos:end="321:70">nPbW</name></expr></argument>, <argument pos:start="321:73" pos:end="321:76"><expr pos:start="321:73" pos:end="321:76"><name pos:start="321:73" pos:end="321:76">nPbH</name></expr></argument>,

                                                       <argument pos:start="323:56" pos:end="323:56"><expr pos:start="323:56" pos:end="323:56"><literal type="number" pos:start="323:56" pos:end="323:56">0</literal></expr></argument>, <argument pos:start="323:59" pos:end="323:68"><expr pos:start="323:59" pos:end="323:68"><operator pos:start="323:59" pos:end="323:59">&amp;</operator><name pos:start="323:60" pos:end="323:68">mv_l0_col</name></expr></argument>, <argument pos:start="323:71" pos:end="323:71"><expr pos:start="323:71" pos:end="323:71"><literal type="number" pos:start="323:71" pos:end="323:71">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="325:9" pos:end="329:77"><decl pos:start="325:9" pos:end="329:76"><type pos:start="325:9" pos:end="325:11"><name pos:start="325:9" pos:end="325:11">int</name></type> <name pos:start="325:13" pos:end="325:24">available_l1</name> <init pos:start="325:26" pos:end="329:76">= <expr pos:start="325:28" pos:end="329:76"><ternary pos:start="325:28" pos:end="329:76"><condition pos:start="325:28" pos:end="325:58"><expr pos:start="325:28" pos:end="325:56"><operator pos:start="325:28" pos:end="325:28">(</operator><name pos:start="325:29" pos:end="325:44"><name pos:start="325:29" pos:end="325:29">s</name><operator pos:start="325:30" pos:end="325:31">-&gt;</operator><name pos:start="325:32" pos:end="325:33">sh</name><operator pos:start="325:34" pos:end="325:34">.</operator><name pos:start="325:35" pos:end="325:44">slice_type</name></name> <operator pos:start="325:46" pos:end="325:47">==</operator> <name pos:start="325:49" pos:end="325:55">B_SLICE</name><operator pos:start="325:56" pos:end="325:56">)</operator></expr> ?</condition><then pos:start="327:28" pos:end="329:72">

                           <expr pos:start="327:28" pos:end="329:72"><call pos:start="327:28" pos:end="329:72"><name pos:start="327:28" pos:end="327:54">temporal_luma_motion_vector</name><argument_list pos:start="327:55" pos:end="329:72">(<argument pos:start="327:56" pos:end="327:56"><expr pos:start="327:56" pos:end="327:56"><name pos:start="327:56" pos:end="327:56">s</name></expr></argument>, <argument pos:start="327:59" pos:end="327:60"><expr pos:start="327:59" pos:end="327:60"><name pos:start="327:59" pos:end="327:60">x0</name></expr></argument>, <argument pos:start="327:63" pos:end="327:64"><expr pos:start="327:63" pos:end="327:64"><name pos:start="327:63" pos:end="327:64">y0</name></expr></argument>, <argument pos:start="327:67" pos:end="327:70"><expr pos:start="327:67" pos:end="327:70"><name pos:start="327:67" pos:end="327:70">nPbW</name></expr></argument>, <argument pos:start="327:73" pos:end="327:76"><expr pos:start="327:73" pos:end="327:76"><name pos:start="327:73" pos:end="327:76">nPbH</name></expr></argument>,

                                                       <argument pos:start="329:56" pos:end="329:56"><expr pos:start="329:56" pos:end="329:56"><literal type="number" pos:start="329:56" pos:end="329:56">0</literal></expr></argument>, <argument pos:start="329:59" pos:end="329:68"><expr pos:start="329:59" pos:end="329:68"><operator pos:start="329:59" pos:end="329:59">&amp;</operator><name pos:start="329:60" pos:end="329:68">mv_l1_col</name></expr></argument>, <argument pos:start="329:71" pos:end="329:71"><expr pos:start="329:71" pos:end="329:71"><literal type="number" pos:start="329:71" pos:end="329:71">1</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="329:74" pos:end="329:76">: <expr pos:start="329:76" pos:end="329:76"><literal type="number" pos:start="329:76" pos:end="329:76">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="333:9" pos:end="355:9"><if pos:start="333:9" pos:end="355:9">if <condition pos:start="333:12" pos:end="333:41">(<expr pos:start="333:13" pos:end="333:40"><name pos:start="333:13" pos:end="333:24">available_l0</name> <operator pos:start="333:26" pos:end="333:27">||</operator> <name pos:start="333:29" pos:end="333:40">available_l1</name></expr>)</condition> <block pos:start="333:43" pos:end="355:9">{<block_content pos:start="335:13" pos:end="353:28">

            <expr_stmt pos:start="335:13" pos:end="335:58"><expr pos:start="335:13" pos:end="335:57"><name pos:start="335:13" pos:end="335:40"><name pos:start="335:13" pos:end="335:25">mergecandlist</name><index pos:start="335:26" pos:end="335:40">[<expr pos:start="335:27" pos:end="335:39"><name pos:start="335:27" pos:end="335:39">nb_merge_cand</name></expr>]</index></name><operator pos:start="335:41" pos:end="335:41">.</operator><name pos:start="335:42" pos:end="335:49">is_intra</name>     <operator pos:start="335:55" pos:end="335:55">=</operator> <literal type="number" pos:start="335:57" pos:end="335:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:69"><expr pos:start="337:13" pos:end="337:68"><name pos:start="337:13" pos:end="337:40"><name pos:start="337:13" pos:end="337:25">mergecandlist</name><index pos:start="337:26" pos:end="337:40">[<expr pos:start="337:27" pos:end="337:39"><name pos:start="337:27" pos:end="337:39">nb_merge_cand</name></expr>]</index></name><operator pos:start="337:41" pos:end="337:41">.</operator><name pos:start="337:42" pos:end="337:53"><name pos:start="337:42" pos:end="337:50">pred_flag</name><index pos:start="337:51" pos:end="337:53">[<expr pos:start="337:52" pos:end="337:52"><literal type="number" pos:start="337:52" pos:end="337:52">0</literal></expr>]</index></name> <operator pos:start="337:55" pos:end="337:55">=</operator> <name pos:start="337:57" pos:end="337:68">available_l0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:69"><expr pos:start="339:13" pos:end="339:68"><name pos:start="339:13" pos:end="339:40"><name pos:start="339:13" pos:end="339:25">mergecandlist</name><index pos:start="339:26" pos:end="339:40">[<expr pos:start="339:27" pos:end="339:39"><name pos:start="339:27" pos:end="339:39">nb_merge_cand</name></expr>]</index></name><operator pos:start="339:41" pos:end="339:41">.</operator><name pos:start="339:42" pos:end="339:53"><name pos:start="339:42" pos:end="339:50">pred_flag</name><index pos:start="339:51" pos:end="339:53">[<expr pos:start="339:52" pos:end="339:52"><literal type="number" pos:start="339:52" pos:end="339:52">1</literal></expr>]</index></name> <operator pos:start="339:55" pos:end="339:55">=</operator> <name pos:start="339:57" pos:end="339:68">available_l1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:60"><expr pos:start="341:13" pos:end="341:59"><call pos:start="341:13" pos:end="341:59"><name pos:start="341:13" pos:end="341:21">AV_ZERO16</name><argument_list pos:start="341:22" pos:end="341:59">(<argument pos:start="341:23" pos:end="341:58"><expr pos:start="341:23" pos:end="341:58"><name pos:start="341:23" pos:end="341:50"><name pos:start="341:23" pos:end="341:35">mergecandlist</name><index pos:start="341:36" pos:end="341:50">[<expr pos:start="341:37" pos:end="341:49"><name pos:start="341:37" pos:end="341:49">nb_merge_cand</name></expr>]</index></name><operator pos:start="341:51" pos:end="341:51">.</operator><name pos:start="341:52" pos:end="341:58">ref_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:64"><expr pos:start="343:13" pos:end="343:63"><name pos:start="343:13" pos:end="343:40"><name pos:start="343:13" pos:end="343:25">mergecandlist</name><index pos:start="343:26" pos:end="343:40">[<expr pos:start="343:27" pos:end="343:39"><name pos:start="343:27" pos:end="343:39">nb_merge_cand</name></expr>]</index></name><operator pos:start="343:41" pos:end="343:41">.</operator><name pos:start="343:42" pos:end="343:46"><name pos:start="343:42" pos:end="343:43">mv</name><index pos:start="343:44" pos:end="343:46">[<expr pos:start="343:45" pos:end="343:45"><literal type="number" pos:start="343:45" pos:end="343:45">0</literal></expr>]</index></name>      <operator pos:start="343:53" pos:end="343:53">=</operator> <name pos:start="343:55" pos:end="343:63">mv_l0_col</name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:64"><expr pos:start="345:13" pos:end="345:63"><name pos:start="345:13" pos:end="345:40"><name pos:start="345:13" pos:end="345:25">mergecandlist</name><index pos:start="345:26" pos:end="345:40">[<expr pos:start="345:27" pos:end="345:39"><name pos:start="345:27" pos:end="345:39">nb_merge_cand</name></expr>]</index></name><operator pos:start="345:41" pos:end="345:41">.</operator><name pos:start="345:42" pos:end="345:46"><name pos:start="345:42" pos:end="345:43">mv</name><index pos:start="345:44" pos:end="345:46">[<expr pos:start="345:45" pos:end="345:45"><literal type="number" pos:start="345:45" pos:end="345:45">1</literal></expr>]</index></name>      <operator pos:start="345:53" pos:end="345:53">=</operator> <name pos:start="345:55" pos:end="345:63">mv_l1_col</name></expr>;</expr_stmt>



            <if_stmt pos:start="349:13" pos:end="351:23"><if pos:start="349:13" pos:end="351:23">if <condition pos:start="349:16" pos:end="349:43">(<expr pos:start="349:17" pos:end="349:42"><name pos:start="349:17" pos:end="349:25">merge_idx</name> <operator pos:start="349:27" pos:end="349:28">==</operator> <name pos:start="349:30" pos:end="349:42">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="351:17" pos:end="351:23"><block_content pos:start="351:17" pos:end="351:23">

                <return pos:start="351:17" pos:end="351:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:28"><expr pos:start="353:13" pos:end="353:27"><name pos:start="353:13" pos:end="353:25">nb_merge_cand</name><operator pos:start="353:26" pos:end="353:27">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="361:5" pos:end="361:39"><expr pos:start="361:5" pos:end="361:38"><name pos:start="361:5" pos:end="361:22">nb_orig_merge_cand</name> <operator pos:start="361:24" pos:end="361:24">=</operator> <name pos:start="361:26" pos:end="361:38">nb_merge_cand</name></expr>;</expr_stmt>



    <comment type="line" pos:start="365:5" pos:end="365:70">// combined bi-predictive merge candidates  (applies for B slices)</comment>

    <if_stmt pos:start="367:5" pos:end="421:5"><if pos:start="367:5" pos:end="421:5">if <condition pos:start="367:8" pos:end="369:54">(<expr pos:start="367:9" pos:end="369:53"><name pos:start="367:9" pos:end="367:24"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:13">sh</name><operator pos:start="367:14" pos:end="367:14">.</operator><name pos:start="367:15" pos:end="367:24">slice_type</name></name> <operator pos:start="367:26" pos:end="367:27">==</operator> <name pos:start="367:29" pos:end="367:35">B_SLICE</name> <operator pos:start="367:37" pos:end="367:38">&amp;&amp;</operator> <name pos:start="367:40" pos:end="367:57">nb_orig_merge_cand</name> <operator pos:start="367:59" pos:end="367:59">&gt;</operator> <literal type="number" pos:start="367:61" pos:end="367:61">1</literal> <operator pos:start="367:63" pos:end="367:64">&amp;&amp;</operator>

        <name pos:start="369:9" pos:end="369:26">nb_orig_merge_cand</name> <operator pos:start="369:28" pos:end="369:28">&lt;</operator> <name pos:start="369:30" pos:end="369:53"><name pos:start="369:30" pos:end="369:30">s</name><operator pos:start="369:31" pos:end="369:32">-&gt;</operator><name pos:start="369:33" pos:end="369:34">sh</name><operator pos:start="369:35" pos:end="369:35">.</operator><name pos:start="369:36" pos:end="369:53">max_num_merge_cand</name></name></expr>)</condition> <block pos:start="369:56" pos:end="421:5">{<block_content pos:start="371:9" pos:end="419:9">

        <decl_stmt pos:start="371:9" pos:end="371:21"><decl pos:start="371:9" pos:end="371:20"><type pos:start="371:9" pos:end="371:11"><name pos:start="371:9" pos:end="371:11">int</name></type> <name pos:start="371:13" pos:end="371:20">comb_idx</name></decl>;</decl_stmt>



        <for pos:start="375:9" pos:end="419:9">for <control pos:start="375:13" pos:end="377:96">(<init pos:start="375:14" pos:end="375:26"><expr pos:start="375:14" pos:end="375:25"><name pos:start="375:14" pos:end="375:21">comb_idx</name> <operator pos:start="375:23" pos:end="375:23">=</operator> <literal type="number" pos:start="375:25" pos:end="375:25">0</literal></expr>;</init> <condition pos:start="375:28" pos:end="377:84"><expr pos:start="375:28" pos:end="377:83"><name pos:start="375:28" pos:end="375:40">nb_merge_cand</name> <operator pos:start="375:42" pos:end="375:42">&lt;</operator> <name pos:start="375:44" pos:end="375:67"><name pos:start="375:44" pos:end="375:44">s</name><operator pos:start="375:45" pos:end="375:46">-&gt;</operator><name pos:start="375:47" pos:end="375:48">sh</name><operator pos:start="375:49" pos:end="375:49">.</operator><name pos:start="375:50" pos:end="375:67">max_num_merge_cand</name></name> <operator pos:start="375:69" pos:end="375:70">&amp;&amp;</operator>

                           <name pos:start="377:28" pos:end="377:35">comb_idx</name> <operator pos:start="377:37" pos:end="377:37">&lt;</operator> <name pos:start="377:39" pos:end="377:56">nb_orig_merge_cand</name> <operator pos:start="377:58" pos:end="377:58">*</operator> <operator pos:start="377:60" pos:end="377:60">(</operator><name pos:start="377:61" pos:end="377:78">nb_orig_merge_cand</name> <operator pos:start="377:80" pos:end="377:80">-</operator> <literal type="number" pos:start="377:82" pos:end="377:82">1</literal><operator pos:start="377:83" pos:end="377:83">)</operator></expr>;</condition> <incr pos:start="377:86" pos:end="377:95"><expr pos:start="377:86" pos:end="377:95"><name pos:start="377:86" pos:end="377:93">comb_idx</name><operator pos:start="377:94" pos:end="377:95">++</operator></expr></incr>)</control> <block pos:start="377:98" pos:end="419:9">{<block_content pos:start="379:13" pos:end="417:13">

            <decl_stmt pos:start="379:13" pos:end="379:58"><decl pos:start="379:13" pos:end="379:57"><type pos:start="379:13" pos:end="379:15"><name pos:start="379:13" pos:end="379:15">int</name></type> <name pos:start="379:17" pos:end="379:27">l0_cand_idx</name> <init pos:start="379:29" pos:end="379:57">= <expr pos:start="379:31" pos:end="379:57"><name pos:start="379:31" pos:end="379:57"><name pos:start="379:31" pos:end="379:44">l0_l1_cand_idx</name><index pos:start="379:45" pos:end="379:54">[<expr pos:start="379:46" pos:end="379:53"><name pos:start="379:46" pos:end="379:53">comb_idx</name></expr>]</index><index pos:start="379:55" pos:end="379:57">[<expr pos:start="379:56" pos:end="379:56"><literal type="number" pos:start="379:56" pos:end="379:56">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="381:13" pos:end="381:58"><decl pos:start="381:13" pos:end="381:57"><type pos:start="381:13" pos:end="381:15"><name pos:start="381:13" pos:end="381:15">int</name></type> <name pos:start="381:17" pos:end="381:27">l1_cand_idx</name> <init pos:start="381:29" pos:end="381:57">= <expr pos:start="381:31" pos:end="381:57"><name pos:start="381:31" pos:end="381:57"><name pos:start="381:31" pos:end="381:44">l0_l1_cand_idx</name><index pos:start="381:45" pos:end="381:54">[<expr pos:start="381:46" pos:end="381:53"><name pos:start="381:46" pos:end="381:53">comb_idx</name></expr>]</index><index pos:start="381:55" pos:end="381:57">[<expr pos:start="381:56" pos:end="381:56"><literal type="number" pos:start="381:56" pos:end="381:56">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="383:13" pos:end="383:57"><decl pos:start="383:13" pos:end="383:56"><type pos:start="383:13" pos:end="383:19"><name pos:start="383:13" pos:end="383:19">MvField</name></type> <name pos:start="383:21" pos:end="383:27">l0_cand</name> <init pos:start="383:29" pos:end="383:56">= <expr pos:start="383:31" pos:end="383:56"><name pos:start="383:31" pos:end="383:56"><name pos:start="383:31" pos:end="383:43">mergecandlist</name><index pos:start="383:44" pos:end="383:56">[<expr pos:start="383:45" pos:end="383:55"><name pos:start="383:45" pos:end="383:55">l0_cand_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="385:13" pos:end="385:57"><decl pos:start="385:13" pos:end="385:56"><type pos:start="385:13" pos:end="385:19"><name pos:start="385:13" pos:end="385:19">MvField</name></type> <name pos:start="385:21" pos:end="385:27">l1_cand</name> <init pos:start="385:29" pos:end="385:56">= <expr pos:start="385:31" pos:end="385:56"><name pos:start="385:31" pos:end="385:56"><name pos:start="385:31" pos:end="385:43">mergecandlist</name><index pos:start="385:44" pos:end="385:56">[<expr pos:start="385:45" pos:end="385:55"><name pos:start="385:45" pos:end="385:55">l1_cand_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="389:13" pos:end="417:13"><if pos:start="389:13" pos:end="417:13">if <condition pos:start="389:16" pos:end="395:71">(<expr pos:start="389:17" pos:end="395:70"><name pos:start="389:17" pos:end="389:36"><name pos:start="389:17" pos:end="389:23">l0_cand</name><operator pos:start="389:24" pos:end="389:24">.</operator><name pos:start="389:25" pos:end="389:33">pred_flag</name><index pos:start="389:34" pos:end="389:36">[<expr pos:start="389:35" pos:end="389:35"><literal type="number" pos:start="389:35" pos:end="389:35">0</literal></expr>]</index></name> <operator pos:start="389:38" pos:end="389:39">&amp;&amp;</operator> <name pos:start="389:41" pos:end="389:60"><name pos:start="389:41" pos:end="389:47">l1_cand</name><operator pos:start="389:48" pos:end="389:48">.</operator><name pos:start="389:49" pos:end="389:57">pred_flag</name><index pos:start="389:58" pos:end="389:60">[<expr pos:start="389:59" pos:end="389:59"><literal type="number" pos:start="389:59" pos:end="389:59">1</literal></expr>]</index></name> <operator pos:start="389:62" pos:end="389:63">&amp;&amp;</operator>

                <operator pos:start="391:17" pos:end="391:17">(</operator><name pos:start="391:18" pos:end="391:30"><name pos:start="391:18" pos:end="391:27">refPicList</name><index pos:start="391:28" pos:end="391:30">[<expr pos:start="391:29" pos:end="391:29"><literal type="number" pos:start="391:29" pos:end="391:29">0</literal></expr>]</index></name><operator pos:start="391:31" pos:end="391:31">.</operator><name pos:start="391:32" pos:end="391:55"><name pos:start="391:32" pos:end="391:35">list</name><index pos:start="391:36" pos:end="391:55">[<expr pos:start="391:37" pos:end="391:54"><name pos:start="391:37" pos:end="391:54"><name pos:start="391:37" pos:end="391:43">l0_cand</name><operator pos:start="391:44" pos:end="391:44">.</operator><name pos:start="391:45" pos:end="391:51">ref_idx</name><index pos:start="391:52" pos:end="391:54">[<expr pos:start="391:53" pos:end="391:53"><literal type="number" pos:start="391:53" pos:end="391:53">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="391:57" pos:end="391:58">!=</operator>

                 <name pos:start="393:18" pos:end="393:30"><name pos:start="393:18" pos:end="393:27">refPicList</name><index pos:start="393:28" pos:end="393:30">[<expr pos:start="393:29" pos:end="393:29"><literal type="number" pos:start="393:29" pos:end="393:29">1</literal></expr>]</index></name><operator pos:start="393:31" pos:end="393:31">.</operator><name pos:start="393:32" pos:end="393:55"><name pos:start="393:32" pos:end="393:35">list</name><index pos:start="393:36" pos:end="393:55">[<expr pos:start="393:37" pos:end="393:54"><name pos:start="393:37" pos:end="393:54"><name pos:start="393:37" pos:end="393:43">l1_cand</name><operator pos:start="393:44" pos:end="393:44">.</operator><name pos:start="393:45" pos:end="393:51">ref_idx</name><index pos:start="393:52" pos:end="393:54">[<expr pos:start="393:53" pos:end="393:53"><literal type="number" pos:start="393:53" pos:end="393:53">1</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="393:57" pos:end="393:58">||</operator>

                 <call pos:start="395:18" pos:end="395:41"><name pos:start="395:18" pos:end="395:25">AV_RN32A</name><argument_list pos:start="395:26" pos:end="395:41">(<argument pos:start="395:27" pos:end="395:40"><expr pos:start="395:27" pos:end="395:40"><operator pos:start="395:27" pos:end="395:27">&amp;</operator><name pos:start="395:28" pos:end="395:40"><name pos:start="395:28" pos:end="395:34">l0_cand</name><operator pos:start="395:35" pos:end="395:35">.</operator><name pos:start="395:36" pos:end="395:37">mv</name><index pos:start="395:38" pos:end="395:40">[<expr pos:start="395:39" pos:end="395:39"><literal type="number" pos:start="395:39" pos:end="395:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="395:43" pos:end="395:44">!=</operator> <call pos:start="395:46" pos:end="395:69"><name pos:start="395:46" pos:end="395:53">AV_RN32A</name><argument_list pos:start="395:54" pos:end="395:69">(<argument pos:start="395:55" pos:end="395:68"><expr pos:start="395:55" pos:end="395:68"><operator pos:start="395:55" pos:end="395:55">&amp;</operator><name pos:start="395:56" pos:end="395:68"><name pos:start="395:56" pos:end="395:62">l1_cand</name><operator pos:start="395:63" pos:end="395:63">.</operator><name pos:start="395:64" pos:end="395:65">mv</name><index pos:start="395:66" pos:end="395:68">[<expr pos:start="395:67" pos:end="395:67"><literal type="number" pos:start="395:67" pos:end="395:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="395:70" pos:end="395:70">)</operator></expr>)</condition> <block pos:start="395:73" pos:end="417:13">{<block_content pos:start="397:17" pos:end="415:32">

                <expr_stmt pos:start="397:17" pos:end="397:79"><expr pos:start="397:17" pos:end="397:78"><name pos:start="397:17" pos:end="397:44"><name pos:start="397:17" pos:end="397:29">mergecandlist</name><index pos:start="397:30" pos:end="397:44">[<expr pos:start="397:31" pos:end="397:43"><name pos:start="397:31" pos:end="397:43">nb_merge_cand</name></expr>]</index></name><operator pos:start="397:45" pos:end="397:45">.</operator><name pos:start="397:46" pos:end="397:55"><name pos:start="397:46" pos:end="397:52">ref_idx</name><index pos:start="397:53" pos:end="397:55">[<expr pos:start="397:54" pos:end="397:54"><literal type="number" pos:start="397:54" pos:end="397:54">0</literal></expr>]</index></name>   <operator pos:start="397:59" pos:end="397:59">=</operator> <name pos:start="397:61" pos:end="397:78"><name pos:start="397:61" pos:end="397:67">l0_cand</name><operator pos:start="397:68" pos:end="397:68">.</operator><name pos:start="397:69" pos:end="397:75">ref_idx</name><index pos:start="397:76" pos:end="397:78">[<expr pos:start="397:77" pos:end="397:77"><literal type="number" pos:start="397:77" pos:end="397:77">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:79"><expr pos:start="399:17" pos:end="399:78"><name pos:start="399:17" pos:end="399:44"><name pos:start="399:17" pos:end="399:29">mergecandlist</name><index pos:start="399:30" pos:end="399:44">[<expr pos:start="399:31" pos:end="399:43"><name pos:start="399:31" pos:end="399:43">nb_merge_cand</name></expr>]</index></name><operator pos:start="399:45" pos:end="399:45">.</operator><name pos:start="399:46" pos:end="399:55"><name pos:start="399:46" pos:end="399:52">ref_idx</name><index pos:start="399:53" pos:end="399:55">[<expr pos:start="399:54" pos:end="399:54"><literal type="number" pos:start="399:54" pos:end="399:54">1</literal></expr>]</index></name>   <operator pos:start="399:59" pos:end="399:59">=</operator> <name pos:start="399:61" pos:end="399:78"><name pos:start="399:61" pos:end="399:67">l1_cand</name><operator pos:start="399:68" pos:end="399:68">.</operator><name pos:start="399:69" pos:end="399:75">ref_idx</name><index pos:start="399:76" pos:end="399:78">[<expr pos:start="399:77" pos:end="399:77"><literal type="number" pos:start="399:77" pos:end="399:77">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:62"><expr pos:start="401:17" pos:end="401:61"><name pos:start="401:17" pos:end="401:44"><name pos:start="401:17" pos:end="401:29">mergecandlist</name><index pos:start="401:30" pos:end="401:44">[<expr pos:start="401:31" pos:end="401:43"><name pos:start="401:31" pos:end="401:43">nb_merge_cand</name></expr>]</index></name><operator pos:start="401:45" pos:end="401:45">.</operator><name pos:start="401:46" pos:end="401:57"><name pos:start="401:46" pos:end="401:54">pred_flag</name><index pos:start="401:55" pos:end="401:57">[<expr pos:start="401:56" pos:end="401:56"><literal type="number" pos:start="401:56" pos:end="401:56">0</literal></expr>]</index></name> <operator pos:start="401:59" pos:end="401:59">=</operator> <literal type="number" pos:start="401:61" pos:end="401:61">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:62"><expr pos:start="403:17" pos:end="403:61"><name pos:start="403:17" pos:end="403:44"><name pos:start="403:17" pos:end="403:29">mergecandlist</name><index pos:start="403:30" pos:end="403:44">[<expr pos:start="403:31" pos:end="403:43"><name pos:start="403:31" pos:end="403:43">nb_merge_cand</name></expr>]</index></name><operator pos:start="403:45" pos:end="403:45">.</operator><name pos:start="403:46" pos:end="403:57"><name pos:start="403:46" pos:end="403:54">pred_flag</name><index pos:start="403:55" pos:end="403:57">[<expr pos:start="403:56" pos:end="403:56"><literal type="number" pos:start="403:56" pos:end="403:56">1</literal></expr>]</index></name> <operator pos:start="403:59" pos:end="403:59">=</operator> <literal type="number" pos:start="403:61" pos:end="403:61">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="405:17" pos:end="405:79"><expr pos:start="405:17" pos:end="405:78"><call pos:start="405:17" pos:end="405:78"><name pos:start="405:17" pos:end="405:25">AV_COPY32</name><argument_list pos:start="405:26" pos:end="405:78">(<argument pos:start="405:27" pos:end="405:61"><expr pos:start="405:27" pos:end="405:61"><operator pos:start="405:27" pos:end="405:27">&amp;</operator><name pos:start="405:28" pos:end="405:55"><name pos:start="405:28" pos:end="405:40">mergecandlist</name><index pos:start="405:41" pos:end="405:55">[<expr pos:start="405:42" pos:end="405:54"><name pos:start="405:42" pos:end="405:54">nb_merge_cand</name></expr>]</index></name><operator pos:start="405:56" pos:end="405:56">.</operator><name pos:start="405:57" pos:end="405:61"><name pos:start="405:57" pos:end="405:58">mv</name><index pos:start="405:59" pos:end="405:61">[<expr pos:start="405:60" pos:end="405:60"><literal type="number" pos:start="405:60" pos:end="405:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="405:64" pos:end="405:77"><expr pos:start="405:64" pos:end="405:77"><operator pos:start="405:64" pos:end="405:64">&amp;</operator><name pos:start="405:65" pos:end="405:77"><name pos:start="405:65" pos:end="405:71">l0_cand</name><operator pos:start="405:72" pos:end="405:72">.</operator><name pos:start="405:73" pos:end="405:74">mv</name><index pos:start="405:75" pos:end="405:77">[<expr pos:start="405:76" pos:end="405:76"><literal type="number" pos:start="405:76" pos:end="405:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:79"><expr pos:start="407:17" pos:end="407:78"><call pos:start="407:17" pos:end="407:78"><name pos:start="407:17" pos:end="407:25">AV_COPY32</name><argument_list pos:start="407:26" pos:end="407:78">(<argument pos:start="407:27" pos:end="407:61"><expr pos:start="407:27" pos:end="407:61"><operator pos:start="407:27" pos:end="407:27">&amp;</operator><name pos:start="407:28" pos:end="407:55"><name pos:start="407:28" pos:end="407:40">mergecandlist</name><index pos:start="407:41" pos:end="407:55">[<expr pos:start="407:42" pos:end="407:54"><name pos:start="407:42" pos:end="407:54">nb_merge_cand</name></expr>]</index></name><operator pos:start="407:56" pos:end="407:56">.</operator><name pos:start="407:57" pos:end="407:61"><name pos:start="407:57" pos:end="407:58">mv</name><index pos:start="407:59" pos:end="407:61">[<expr pos:start="407:60" pos:end="407:60"><literal type="number" pos:start="407:60" pos:end="407:60">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="407:64" pos:end="407:77"><expr pos:start="407:64" pos:end="407:77"><operator pos:start="407:64" pos:end="407:64">&amp;</operator><name pos:start="407:65" pos:end="407:77"><name pos:start="407:65" pos:end="407:71">l1_cand</name><operator pos:start="407:72" pos:end="407:72">.</operator><name pos:start="407:73" pos:end="407:74">mv</name><index pos:start="407:75" pos:end="407:77">[<expr pos:start="407:76" pos:end="407:76"><literal type="number" pos:start="407:76" pos:end="407:76">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:62"><expr pos:start="409:17" pos:end="409:61"><name pos:start="409:17" pos:end="409:44"><name pos:start="409:17" pos:end="409:29">mergecandlist</name><index pos:start="409:30" pos:end="409:44">[<expr pos:start="409:31" pos:end="409:43"><name pos:start="409:31" pos:end="409:43">nb_merge_cand</name></expr>]</index></name><operator pos:start="409:45" pos:end="409:45">.</operator><name pos:start="409:46" pos:end="409:53">is_intra</name>     <operator pos:start="409:59" pos:end="409:59">=</operator> <literal type="number" pos:start="409:61" pos:end="409:61">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="411:17" pos:end="413:27"><if pos:start="411:17" pos:end="413:27">if <condition pos:start="411:20" pos:end="411:47">(<expr pos:start="411:21" pos:end="411:46"><name pos:start="411:21" pos:end="411:29">merge_idx</name> <operator pos:start="411:31" pos:end="411:32">==</operator> <name pos:start="411:34" pos:end="411:46">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="413:21" pos:end="413:27"><block_content pos:start="413:21" pos:end="413:27">

                    <return pos:start="413:21" pos:end="413:27">return;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:32"><expr pos:start="415:17" pos:end="415:31"><name pos:start="415:17" pos:end="415:29">nb_merge_cand</name><operator pos:start="415:30" pos:end="415:31">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="425:5" pos:end="425:43">// append Zero motion vector candidates</comment>

    <while pos:start="427:5" pos:end="453:5">while <condition pos:start="427:11" pos:end="427:52">(<expr pos:start="427:12" pos:end="427:51"><name pos:start="427:12" pos:end="427:24">nb_merge_cand</name> <operator pos:start="427:26" pos:end="427:26">&lt;</operator> <name pos:start="427:28" pos:end="427:51"><name pos:start="427:28" pos:end="427:28">s</name><operator pos:start="427:29" pos:end="427:30">-&gt;</operator><name pos:start="427:31" pos:end="427:32">sh</name><operator pos:start="427:33" pos:end="427:33">.</operator><name pos:start="427:34" pos:end="427:51">max_num_merge_cand</name></name></expr>)</condition> <block pos:start="427:54" pos:end="453:5">{<block_content pos:start="429:9" pos:end="451:19">

        <expr_stmt pos:start="429:9" pos:end="429:54"><expr pos:start="429:9" pos:end="429:53"><name pos:start="429:9" pos:end="429:36"><name pos:start="429:9" pos:end="429:21">mergecandlist</name><index pos:start="429:22" pos:end="429:36">[<expr pos:start="429:23" pos:end="429:35"><name pos:start="429:23" pos:end="429:35">nb_merge_cand</name></expr>]</index></name><operator pos:start="429:37" pos:end="429:37">.</operator><name pos:start="429:38" pos:end="429:49"><name pos:start="429:38" pos:end="429:46">pred_flag</name><index pos:start="429:47" pos:end="429:49">[<expr pos:start="429:48" pos:end="429:48"><literal type="number" pos:start="429:48" pos:end="429:48">0</literal></expr>]</index></name> <operator pos:start="429:51" pos:end="429:51">=</operator> <literal type="number" pos:start="429:53" pos:end="429:53">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:80"><expr pos:start="431:9" pos:end="431:79"><name pos:start="431:9" pos:end="431:36"><name pos:start="431:9" pos:end="431:21">mergecandlist</name><index pos:start="431:22" pos:end="431:36">[<expr pos:start="431:23" pos:end="431:35"><name pos:start="431:23" pos:end="431:35">nb_merge_cand</name></expr>]</index></name><operator pos:start="431:37" pos:end="431:37">.</operator><name pos:start="431:38" pos:end="431:49"><name pos:start="431:38" pos:end="431:46">pred_flag</name><index pos:start="431:47" pos:end="431:49">[<expr pos:start="431:48" pos:end="431:48"><literal type="number" pos:start="431:48" pos:end="431:48">1</literal></expr>]</index></name> <operator pos:start="431:51" pos:end="431:51">=</operator> <name pos:start="431:53" pos:end="431:68"><name pos:start="431:53" pos:end="431:53">s</name><operator pos:start="431:54" pos:end="431:55">-&gt;</operator><name pos:start="431:56" pos:end="431:57">sh</name><operator pos:start="431:58" pos:end="431:58">.</operator><name pos:start="431:59" pos:end="431:68">slice_type</name></name> <operator pos:start="431:70" pos:end="431:71">==</operator> <name pos:start="431:73" pos:end="431:79">B_SLICE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:55"><expr pos:start="433:9" pos:end="433:54"><call pos:start="433:9" pos:end="433:54"><name pos:start="433:9" pos:end="433:17">AV_ZERO32</name><argument_list pos:start="433:18" pos:end="433:54">(<argument pos:start="433:19" pos:end="433:53"><expr pos:start="433:19" pos:end="433:53"><name pos:start="433:19" pos:end="433:46"><name pos:start="433:19" pos:end="433:31">mergecandlist</name><index pos:start="433:32" pos:end="433:46">[<expr pos:start="433:33" pos:end="433:45"><name pos:start="433:33" pos:end="433:45">nb_merge_cand</name></expr>]</index></name><operator pos:start="433:47" pos:end="433:47">.</operator><name pos:start="433:48" pos:end="433:49">mv</name> <operator pos:start="433:51" pos:end="433:51">+</operator> <literal type="number" pos:start="433:53" pos:end="433:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:55"><expr pos:start="435:9" pos:end="435:54"><call pos:start="435:9" pos:end="435:54"><name pos:start="435:9" pos:end="435:17">AV_ZERO32</name><argument_list pos:start="435:18" pos:end="435:54">(<argument pos:start="435:19" pos:end="435:53"><expr pos:start="435:19" pos:end="435:53"><name pos:start="435:19" pos:end="435:46"><name pos:start="435:19" pos:end="435:31">mergecandlist</name><index pos:start="435:32" pos:end="435:46">[<expr pos:start="435:33" pos:end="435:45"><name pos:start="435:33" pos:end="435:45">nb_merge_cand</name></expr>]</index></name><operator pos:start="435:47" pos:end="435:47">.</operator><name pos:start="435:48" pos:end="435:49">mv</name> <operator pos:start="435:51" pos:end="435:51">+</operator> <literal type="number" pos:start="435:53" pos:end="435:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:54"><expr pos:start="437:9" pos:end="437:53"><name pos:start="437:9" pos:end="437:36"><name pos:start="437:9" pos:end="437:21">mergecandlist</name><index pos:start="437:22" pos:end="437:36">[<expr pos:start="437:23" pos:end="437:35"><name pos:start="437:23" pos:end="437:35">nb_merge_cand</name></expr>]</index></name><operator pos:start="437:37" pos:end="437:37">.</operator><name pos:start="437:38" pos:end="437:45">is_intra</name>     <operator pos:start="437:51" pos:end="437:51">=</operator> <literal type="number" pos:start="437:53" pos:end="437:53">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:86"><expr pos:start="439:9" pos:end="439:85"><name pos:start="439:9" pos:end="439:36"><name pos:start="439:9" pos:end="439:21">mergecandlist</name><index pos:start="439:22" pos:end="439:36">[<expr pos:start="439:23" pos:end="439:35"><name pos:start="439:23" pos:end="439:35">nb_merge_cand</name></expr>]</index></name><operator pos:start="439:37" pos:end="439:37">.</operator><name pos:start="439:38" pos:end="439:47"><name pos:start="439:38" pos:end="439:44">ref_idx</name><index pos:start="439:45" pos:end="439:47">[<expr pos:start="439:46" pos:end="439:46"><literal type="number" pos:start="439:46" pos:end="439:46">0</literal></expr>]</index></name>   <operator pos:start="439:51" pos:end="439:51">=</operator> <ternary pos:start="439:53" pos:end="439:85"><condition pos:start="439:53" pos:end="439:72"><expr pos:start="439:53" pos:end="439:70"><name pos:start="439:53" pos:end="439:60">zero_idx</name> <operator pos:start="439:62" pos:end="439:62">&lt;</operator> <name pos:start="439:64" pos:end="439:70">nb_refs</name></expr> ?</condition><then pos:start="439:74" pos:end="439:81"> <expr pos:start="439:74" pos:end="439:81"><name pos:start="439:74" pos:end="439:81">zero_idx</name></expr> </then><else pos:start="439:83" pos:end="439:85">: <expr pos:start="439:85" pos:end="439:85"><literal type="number" pos:start="439:85" pos:end="439:85">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:86"><expr pos:start="441:9" pos:end="441:85"><name pos:start="441:9" pos:end="441:36"><name pos:start="441:9" pos:end="441:21">mergecandlist</name><index pos:start="441:22" pos:end="441:36">[<expr pos:start="441:23" pos:end="441:35"><name pos:start="441:23" pos:end="441:35">nb_merge_cand</name></expr>]</index></name><operator pos:start="441:37" pos:end="441:37">.</operator><name pos:start="441:38" pos:end="441:47"><name pos:start="441:38" pos:end="441:44">ref_idx</name><index pos:start="441:45" pos:end="441:47">[<expr pos:start="441:46" pos:end="441:46"><literal type="number" pos:start="441:46" pos:end="441:46">1</literal></expr>]</index></name>   <operator pos:start="441:51" pos:end="441:51">=</operator> <ternary pos:start="441:53" pos:end="441:85"><condition pos:start="441:53" pos:end="441:72"><expr pos:start="441:53" pos:end="441:70"><name pos:start="441:53" pos:end="441:60">zero_idx</name> <operator pos:start="441:62" pos:end="441:62">&lt;</operator> <name pos:start="441:64" pos:end="441:70">nb_refs</name></expr> ?</condition><then pos:start="441:74" pos:end="441:81"> <expr pos:start="441:74" pos:end="441:81"><name pos:start="441:74" pos:end="441:81">zero_idx</name></expr> </then><else pos:start="441:83" pos:end="441:85">: <expr pos:start="441:85" pos:end="441:85"><literal type="number" pos:start="441:85" pos:end="441:85">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="445:9" pos:end="447:19"><if pos:start="445:9" pos:end="447:19">if <condition pos:start="445:12" pos:end="445:39">(<expr pos:start="445:13" pos:end="445:38"><name pos:start="445:13" pos:end="445:21">merge_idx</name> <operator pos:start="445:23" pos:end="445:24">==</operator> <name pos:start="445:26" pos:end="445:38">nb_merge_cand</name></expr>)</condition><block type="pseudo" pos:start="447:13" pos:end="447:19"><block_content pos:start="447:13" pos:end="447:19">

            <return pos:start="447:13" pos:end="447:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:24"><expr pos:start="449:9" pos:end="449:23"><name pos:start="449:9" pos:end="449:21">nb_merge_cand</name><operator pos:start="449:22" pos:end="449:23">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:19"><expr pos:start="451:9" pos:end="451:18"><name pos:start="451:9" pos:end="451:16">zero_idx</name><operator pos:start="451:17" pos:end="451:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
