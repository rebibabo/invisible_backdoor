<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4001.c" pos:tabs="8"><function pos:start="1:1" pos:end="609:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bmp_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="609:1">{<block_content pos:start="9:5" pos:end="607:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">BMPContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name> <init pos:start="13:19" pos:end="13:36">= <expr pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:25">avctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">picture</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:14">p</name> <init pos:start="17:16" pos:end="17:28">= <expr pos:start="17:18" pos:end="17:28"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:28"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:28">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:22">fsize</name></decl>, <decl pos:start="19:25" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:16"/><name pos:start="19:25" pos:end="19:29">hsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">width</name></decl>, <decl pos:start="21:16" pos:end="21:21"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:22">depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">BiCompression</name></type> <name pos:start="25:19" pos:end="25:22">comp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:23">ihsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>, <decl pos:start="29:12" pos:end="29:12"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:12" pos:end="29:12">j</name></decl>, <decl pos:start="29:15" pos:end="29:15"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:15" pos:end="29:15">n</name></decl>, <decl pos:start="29:18" pos:end="29:25"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:18" pos:end="29:25">linesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:19"><name pos:start="31:14" pos:end="31:16">rgb</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:17"><decl pos:start="33:5" pos:end="33:16"><type pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11">uint8_t</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:14"><decl pos:start="35:5" pos:end="35:13"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:13">dsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:30"><decl pos:start="37:5" pos:end="37:29"><type pos:start="37:5" pos:end="37:19"><specifier pos:start="37:5" pos:end="37:9">const</specifier> <name pos:start="37:11" pos:end="37:17">uint8_t</name> <modifier pos:start="37:19" pos:end="37:19">*</modifier></type><name pos:start="37:20" pos:end="37:23">buf0</name> <init pos:start="37:25" pos:end="37:29">= <expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if<condition pos:start="41:7" pos:end="41:21">(<expr pos:start="41:8" pos:end="41:20"><name pos:start="41:8" pos:end="41:15">buf_size</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:20">14</literal></expr>)</condition><block pos:start="41:22" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:75"><expr pos:start="43:9" pos:end="43:74"><call pos:start="43:9" pos:end="43:74"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:74">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:63"><expr pos:start="43:37" pos:end="43:63"><literal type="string" pos:start="43:37" pos:end="43:63">"buf size too small (%d)\n"</literal></expr></argument>, <argument pos:start="43:66" pos:end="43:73"><expr pos:start="43:66" pos:end="43:73"><name pos:start="43:66" pos:end="43:73">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if<condition pos:start="51:7" pos:end="53:40">(<expr pos:start="51:8" pos:end="53:39"><call pos:start="51:8" pos:end="51:32"><name pos:start="51:8" pos:end="51:26">bytestream_get_byte</name><argument_list pos:start="51:27" pos:end="51:32">(<argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="51:34" pos:end="51:35">!=</operator> <literal type="char" pos:start="51:37" pos:end="51:39">'B'</literal> <operator pos:start="51:41" pos:end="51:42">||</operator>

       <call pos:start="53:8" pos:end="53:32"><name pos:start="53:8" pos:end="53:26">bytestream_get_byte</name><argument_list pos:start="53:27" pos:end="53:32">(<argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="53:34" pos:end="53:35">!=</operator> <literal type="char" pos:start="53:37" pos:end="53:39">'M'</literal></expr>)</condition> <block pos:start="53:42" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:58"><expr pos:start="55:9" pos:end="55:57"><call pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:57">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:56"><expr pos:start="55:37" pos:end="55:56"><literal type="string" pos:start="55:37" pos:end="55:56">"bad magic number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:38"><expr pos:start="63:5" pos:end="63:37"><name pos:start="63:5" pos:end="63:9">fsize</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:31">bytestream_get_le32</name><argument_list pos:start="63:32" pos:end="63:37">(<argument pos:start="63:33" pos:end="63:36"><expr pos:start="63:33" pos:end="63:36"><operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if<condition pos:start="65:7" pos:end="65:24">(<expr pos:start="65:8" pos:end="65:23"><name pos:start="65:8" pos:end="65:15">buf_size</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <name pos:start="65:19" pos:end="65:23">fsize</name></expr>)</condition><block pos:start="65:25" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:25">

        <expr_stmt pos:start="67:9" pos:end="69:32"><expr pos:start="67:9" pos:end="69:31"><call pos:start="67:9" pos:end="69:31"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="69:31">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:90"><expr pos:start="67:37" pos:end="67:90"><literal type="string" pos:start="67:37" pos:end="67:90">"not enough data (%d &lt; %d), trying to decode anyway\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:23"><expr pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:23">buf_size</name></expr></argument>, <argument pos:start="69:26" pos:end="69:30"><expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:30">fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:13">fsize</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:24">buf_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:13"><expr pos:start="77:5" pos:end="77:12"><name pos:start="77:5" pos:end="77:7">buf</name> <operator pos:start="77:9" pos:end="77:10">+=</operator> <literal type="number" pos:start="77:12" pos:end="77:12">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:15" pos:end="77:29">/* reserved1 */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:13"><expr pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:7">buf</name> <operator pos:start="79:9" pos:end="79:10">+=</operator> <literal type="number" pos:start="79:12" pos:end="79:12">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:15" pos:end="79:29">/* reserved2 */</comment>



    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:9">hsize</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <call pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:31">bytestream_get_le32</name><argument_list pos:start="83:32" pos:end="83:37">(<argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:40" pos:end="83:56">/* header size */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:10">ihsize</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:38"><name pos:start="85:14" pos:end="85:32">bytestream_get_le32</name><argument_list pos:start="85:33" pos:end="85:38">(<argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><operator pos:start="85:34" pos:end="85:34">&amp;</operator><name pos:start="85:35" pos:end="85:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="85:47" pos:end="85:68">/* more header size */</comment>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if<condition pos:start="87:7" pos:end="87:27">(<expr pos:start="87:8" pos:end="87:26"><name pos:start="87:8" pos:end="87:13">ihsize</name> <operator pos:start="87:15" pos:end="87:15">+</operator> <literal type="number" pos:start="87:17" pos:end="87:18">14</literal> <operator pos:start="87:20" pos:end="87:20">&gt;</operator> <name pos:start="87:22" pos:end="87:26">hsize</name></expr>)</condition><block pos:start="87:28" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:71"><expr pos:start="89:9" pos:end="89:70"><call pos:start="89:9" pos:end="89:70"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:70">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:62"><expr pos:start="89:37" pos:end="89:62"><literal type="string" pos:start="89:37" pos:end="89:62">"invalid header size %d\n"</literal></expr></argument>, <argument pos:start="89:65" pos:end="89:69"><expr pos:start="89:65" pos:end="89:69"><name pos:start="89:65" pos:end="89:69">hsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:87">/* sometimes file size is set to some headers size, set a real size in that case */</comment>

    <if_stmt pos:start="99:5" pos:end="101:29"><if pos:start="99:5" pos:end="101:29">if<condition pos:start="99:7" pos:end="99:43">(<expr pos:start="99:8" pos:end="99:42"><name pos:start="99:8" pos:end="99:12">fsize</name> <operator pos:start="99:14" pos:end="99:15">==</operator> <literal type="number" pos:start="99:17" pos:end="99:18">14</literal> <operator pos:start="99:20" pos:end="99:21">||</operator> <name pos:start="99:23" pos:end="99:27">fsize</name> <operator pos:start="99:29" pos:end="99:30">==</operator> <name pos:start="99:32" pos:end="99:37">ihsize</name> <operator pos:start="99:39" pos:end="99:39">+</operator> <literal type="number" pos:start="99:41" pos:end="99:42">14</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:29"><block_content pos:start="101:9" pos:end="101:29">

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:13">fsize</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <name pos:start="101:17" pos:end="101:24">buf_size</name> <operator pos:start="101:26" pos:end="101:26">-</operator> <literal type="number" pos:start="101:28" pos:end="101:28">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if<condition pos:start="105:7" pos:end="105:22">(<expr pos:start="105:8" pos:end="105:21"><name pos:start="105:8" pos:end="105:12">fsize</name> <operator pos:start="105:14" pos:end="105:15">&lt;=</operator> <name pos:start="105:17" pos:end="105:21">hsize</name></expr>)</condition><block pos:start="105:23" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:18">

        <expr_stmt pos:start="107:9" pos:end="109:29"><expr pos:start="107:9" pos:end="109:28"><call pos:start="107:9" pos:end="109:28"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="109:28">(<argument pos:start="107:16" pos:end="107:20"><expr pos:start="107:16" pos:end="107:20"><name pos:start="107:16" pos:end="107:20">avctx</name></expr></argument>, <argument pos:start="107:23" pos:end="107:34"><expr pos:start="107:23" pos:end="107:34"><name pos:start="107:23" pos:end="107:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:37" pos:end="107:93"><expr pos:start="107:37" pos:end="107:93"><literal type="string" pos:start="107:37" pos:end="107:93">"declared file size is less than header size (%d &lt; %d)\n"</literal></expr></argument>,

               <argument pos:start="109:16" pos:end="109:20"><expr pos:start="109:16" pos:end="109:20"><name pos:start="109:16" pos:end="109:20">fsize</name></expr></argument>, <argument pos:start="109:23" pos:end="109:27"><expr pos:start="109:23" pos:end="109:27"><name pos:start="109:23" pos:end="109:27">hsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:18">return <expr pos:start="111:16" pos:end="111:17"><operator pos:start="111:16" pos:end="111:16">-</operator><literal type="number" pos:start="111:17" pos:end="111:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="117:5" pos:end="147:5">switch<condition pos:start="117:11" pos:end="117:18">(<expr pos:start="117:12" pos:end="117:17"><name pos:start="117:12" pos:end="117:17">ihsize</name></expr>)</condition><block pos:start="117:19" pos:end="147:5">{<block_content pos:start="119:5" pos:end="145:18">

    <case pos:start="119:5" pos:end="119:13">case  <expr pos:start="119:11" pos:end="119:12"><literal type="number" pos:start="119:11" pos:end="119:12">40</literal></expr>:</case> <comment type="line" pos:start="119:15" pos:end="119:26">// windib v3</comment>

    <case pos:start="121:5" pos:end="121:13">case  <expr pos:start="121:11" pos:end="121:12"><literal type="number" pos:start="121:11" pos:end="121:12">64</literal></expr>:</case> <comment type="line" pos:start="121:15" pos:end="121:24">// OS/2 v2</comment>

    <case pos:start="123:5" pos:end="123:13">case <expr pos:start="123:10" pos:end="123:12"><literal type="number" pos:start="123:10" pos:end="123:12">108</literal></expr>:</case> <comment type="line" pos:start="123:15" pos:end="123:26">// windib v4</comment>

    <case pos:start="125:5" pos:end="125:13">case <expr pos:start="125:10" pos:end="125:12"><literal type="number" pos:start="125:10" pos:end="125:12">124</literal></expr>:</case> <comment type="line" pos:start="125:15" pos:end="125:26">// windib v5</comment>

        <expr_stmt pos:start="127:9" pos:end="127:42"><expr pos:start="127:9" pos:end="127:41"><name pos:start="127:9" pos:end="127:13">width</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:41"><name pos:start="127:17" pos:end="127:35">bytestream_get_le32</name><argument_list pos:start="127:36" pos:end="127:41">(<argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><operator pos:start="127:37" pos:end="127:37">&amp;</operator><name pos:start="127:38" pos:end="127:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:14">height</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <call pos:start="129:18" pos:end="129:42"><name pos:start="129:18" pos:end="129:36">bytestream_get_le32</name><argument_list pos:start="129:37" pos:end="129:42">(<argument pos:start="129:38" pos:end="129:41"><expr pos:start="129:38" pos:end="129:41"><operator pos:start="129:38" pos:end="129:38">&amp;</operator><name pos:start="129:39" pos:end="129:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <case pos:start="133:5" pos:end="133:13">case  <expr pos:start="133:11" pos:end="133:12"><literal type="number" pos:start="133:11" pos:end="133:12">12</literal></expr>:</case> <comment type="line" pos:start="133:15" pos:end="133:24">// OS/2 v1</comment>

        <expr_stmt pos:start="135:9" pos:end="135:43"><expr pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:13">width</name>  <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="135:42"><name pos:start="135:18" pos:end="135:36">bytestream_get_le16</name><argument_list pos:start="135:37" pos:end="135:42">(<argument pos:start="135:38" pos:end="135:41"><expr pos:start="135:38" pos:end="135:41"><operator pos:start="135:38" pos:end="135:38">&amp;</operator><name pos:start="135:39" pos:end="135:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:43"><expr pos:start="137:9" pos:end="137:42"><name pos:start="137:9" pos:end="137:14">height</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="137:42"><name pos:start="137:18" pos:end="137:36">bytestream_get_le16</name><argument_list pos:start="137:37" pos:end="137:42">(<argument pos:start="137:38" pos:end="137:41"><expr pos:start="137:38" pos:end="137:41"><operator pos:start="137:38" pos:end="137:38">&amp;</operator><name pos:start="137:39" pos:end="137:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="143:77"><expr pos:start="143:9" pos:end="143:76"><call pos:start="143:9" pos:end="143:76"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="143:76">(<argument pos:start="143:16" pos:end="143:20"><expr pos:start="143:16" pos:end="143:20"><name pos:start="143:16" pos:end="143:20">avctx</name></expr></argument>, <argument pos:start="143:23" pos:end="143:34"><expr pos:start="143:23" pos:end="143:34"><name pos:start="143:23" pos:end="143:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:37" pos:end="143:75"><expr pos:start="143:37" pos:end="143:75"><literal type="string" pos:start="143:37" pos:end="143:75">"unsupported BMP file, patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:18">return <expr pos:start="145:16" pos:end="145:17"><operator pos:start="145:16" pos:end="145:16">-</operator><literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if<condition pos:start="151:7" pos:end="151:38">(<expr pos:start="151:8" pos:end="151:37"><call pos:start="151:8" pos:end="151:32"><name pos:start="151:8" pos:end="151:26">bytestream_get_le16</name><argument_list pos:start="151:27" pos:end="151:32">(<argument pos:start="151:28" pos:end="151:31"><expr pos:start="151:28" pos:end="151:31"><operator pos:start="151:28" pos:end="151:28">&amp;</operator><name pos:start="151:29" pos:end="151:31">buf</name></expr></argument>)</argument_list></call> <operator pos:start="151:34" pos:end="151:35">!=</operator> <literal type="number" pos:start="151:37" pos:end="151:37">1</literal></expr>)</condition><block pos:start="151:39" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:18"> <comment type="block" pos:start="151:41" pos:end="151:52">/* planes */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:60"><expr pos:start="153:9" pos:end="153:59"><call pos:start="153:9" pos:end="153:59"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="153:59">(<argument pos:start="153:16" pos:end="153:20"><expr pos:start="153:16" pos:end="153:20"><name pos:start="153:16" pos:end="153:20">avctx</name></expr></argument>, <argument pos:start="153:23" pos:end="153:34"><expr pos:start="153:23" pos:end="153:34"><name pos:start="153:23" pos:end="153:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:37" pos:end="153:58"><expr pos:start="153:37" pos:end="153:58"><literal type="string" pos:start="153:37" pos:end="153:58">"invalid BMP header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:18">return <expr pos:start="155:16" pos:end="155:17"><operator pos:start="155:16" pos:end="155:16">-</operator><literal type="number" pos:start="155:17" pos:end="155:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:38"><expr pos:start="161:5" pos:end="161:37"><name pos:start="161:5" pos:end="161:9">depth</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <call pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:31">bytestream_get_le16</name><argument_list pos:start="161:32" pos:end="161:37">(<argument pos:start="161:33" pos:end="161:36"><expr pos:start="161:33" pos:end="161:36"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><name pos:start="161:34" pos:end="161:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="165:5" pos:end="171:23"><if pos:start="165:5" pos:end="167:41">if<condition pos:start="165:7" pos:end="165:20">(<expr pos:start="165:8" pos:end="165:19"><name pos:start="165:8" pos:end="165:13">ihsize</name> <operator pos:start="165:15" pos:end="165:16">==</operator> <literal type="number" pos:start="165:18" pos:end="165:19">40</literal></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:41"><block_content pos:start="167:9" pos:end="167:41">

        <expr_stmt pos:start="167:9" pos:end="167:41"><expr pos:start="167:9" pos:end="167:40"><name pos:start="167:9" pos:end="167:12">comp</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <call pos:start="167:16" pos:end="167:40"><name pos:start="167:16" pos:end="167:34">bytestream_get_le32</name><argument_list pos:start="167:35" pos:end="167:40">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><operator pos:start="167:36" pos:end="167:36">&amp;</operator><name pos:start="167:37" pos:end="167:39">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="169:5" pos:end="171:23">else<block type="pseudo" pos:start="171:9" pos:end="171:23"><block_content pos:start="171:9" pos:end="171:23">

        <expr_stmt pos:start="171:9" pos:end="171:23"><expr pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:12">comp</name> <operator pos:start="171:14" pos:end="171:14">=</operator> <name pos:start="171:16" pos:end="171:22">BMP_RGB</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="175:5" pos:end="181:5"><if pos:start="175:5" pos:end="181:5">if<condition pos:start="175:7" pos:end="175:88">(<expr pos:start="175:8" pos:end="175:87"><name pos:start="175:8" pos:end="175:11">comp</name> <operator pos:start="175:13" pos:end="175:14">!=</operator> <name pos:start="175:16" pos:end="175:22">BMP_RGB</name> <operator pos:start="175:24" pos:end="175:25">&amp;&amp;</operator> <name pos:start="175:27" pos:end="175:30">comp</name> <operator pos:start="175:32" pos:end="175:33">!=</operator> <name pos:start="175:35" pos:end="175:47">BMP_BITFIELDS</name> <operator pos:start="175:49" pos:end="175:50">&amp;&amp;</operator> <name pos:start="175:52" pos:end="175:55">comp</name> <operator pos:start="175:57" pos:end="175:58">!=</operator> <name pos:start="175:60" pos:end="175:67">BMP_RLE4</name> <operator pos:start="175:69" pos:end="175:70">&amp;&amp;</operator> <name pos:start="175:72" pos:end="175:75">comp</name> <operator pos:start="175:77" pos:end="175:78">!=</operator> <name pos:start="175:80" pos:end="175:87">BMP_RLE8</name></expr>)</condition><block pos:start="175:89" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:18">

        <expr_stmt pos:start="177:9" pos:end="177:75"><expr pos:start="177:9" pos:end="177:74"><call pos:start="177:9" pos:end="177:74"><name pos:start="177:9" pos:end="177:14">av_log</name><argument_list pos:start="177:15" pos:end="177:74">(<argument pos:start="177:16" pos:end="177:20"><expr pos:start="177:16" pos:end="177:20"><name pos:start="177:16" pos:end="177:20">avctx</name></expr></argument>, <argument pos:start="177:23" pos:end="177:34"><expr pos:start="177:23" pos:end="177:34"><name pos:start="177:23" pos:end="177:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:37" pos:end="177:67"><expr pos:start="177:37" pos:end="177:67"><literal type="string" pos:start="177:37" pos:end="177:67">"BMP coding %d not supported\n"</literal></expr></argument>, <argument pos:start="177:70" pos:end="177:73"><expr pos:start="177:70" pos:end="177:73"><name pos:start="177:70" pos:end="177:73">comp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:18">return <expr pos:start="179:16" pos:end="179:17"><operator pos:start="179:16" pos:end="179:16">-</operator><literal type="number" pos:start="179:17" pos:end="179:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="195:5"><if pos:start="185:5" pos:end="195:5">if<condition pos:start="185:7" pos:end="185:29">(<expr pos:start="185:8" pos:end="185:28"><name pos:start="185:8" pos:end="185:11">comp</name> <operator pos:start="185:13" pos:end="185:14">==</operator> <name pos:start="185:16" pos:end="185:28">BMP_BITFIELDS</name></expr>)</condition><block pos:start="185:30" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:43">

        <expr_stmt pos:start="187:9" pos:end="187:18"><expr pos:start="187:9" pos:end="187:17"><name pos:start="187:9" pos:end="187:11">buf</name> <operator pos:start="187:13" pos:end="187:14">+=</operator> <literal type="number" pos:start="187:16" pos:end="187:17">20</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:43"><expr pos:start="189:9" pos:end="189:42"><name pos:start="189:9" pos:end="189:14"><name pos:start="189:9" pos:end="189:11">rgb</name><index pos:start="189:12" pos:end="189:14">[<expr pos:start="189:13" pos:end="189:13"><literal type="number" pos:start="189:13" pos:end="189:13">0</literal></expr>]</index></name> <operator pos:start="189:16" pos:end="189:16">=</operator> <call pos:start="189:18" pos:end="189:42"><name pos:start="189:18" pos:end="189:36">bytestream_get_le32</name><argument_list pos:start="189:37" pos:end="189:42">(<argument pos:start="189:38" pos:end="189:41"><expr pos:start="189:38" pos:end="189:41"><operator pos:start="189:38" pos:end="189:38">&amp;</operator><name pos:start="189:39" pos:end="189:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:43"><expr pos:start="191:9" pos:end="191:42"><name pos:start="191:9" pos:end="191:14"><name pos:start="191:9" pos:end="191:11">rgb</name><index pos:start="191:12" pos:end="191:14">[<expr pos:start="191:13" pos:end="191:13"><literal type="number" pos:start="191:13" pos:end="191:13">1</literal></expr>]</index></name> <operator pos:start="191:16" pos:end="191:16">=</operator> <call pos:start="191:18" pos:end="191:42"><name pos:start="191:18" pos:end="191:36">bytestream_get_le32</name><argument_list pos:start="191:37" pos:end="191:42">(<argument pos:start="191:38" pos:end="191:41"><expr pos:start="191:38" pos:end="191:41"><operator pos:start="191:38" pos:end="191:38">&amp;</operator><name pos:start="191:39" pos:end="191:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:43"><expr pos:start="193:9" pos:end="193:42"><name pos:start="193:9" pos:end="193:14"><name pos:start="193:9" pos:end="193:11">rgb</name><index pos:start="193:12" pos:end="193:14">[<expr pos:start="193:13" pos:end="193:13"><literal type="number" pos:start="193:13" pos:end="193:13">2</literal></expr>]</index></name> <operator pos:start="193:16" pos:end="193:16">=</operator> <call pos:start="193:18" pos:end="193:42"><name pos:start="193:18" pos:end="193:36">bytestream_get_le32</name><argument_list pos:start="193:37" pos:end="193:42">(<argument pos:start="193:38" pos:end="193:41"><expr pos:start="193:38" pos:end="193:41"><operator pos:start="193:38" pos:end="193:38">&amp;</operator><name pos:start="193:39" pos:end="193:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:25"><expr pos:start="199:5" pos:end="199:24"><name pos:start="199:5" pos:end="199:16"><name pos:start="199:5" pos:end="199:9">avctx</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:16">width</name></name> <operator pos:start="199:18" pos:end="199:18">=</operator> <name pos:start="199:20" pos:end="199:24">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:48"><expr pos:start="201:5" pos:end="201:47"><name pos:start="201:5" pos:end="201:17"><name pos:start="201:5" pos:end="201:9">avctx</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:17">height</name></name> <operator pos:start="201:19" pos:end="201:19">=</operator> <ternary pos:start="201:21" pos:end="201:47"><condition pos:start="201:21" pos:end="201:31"><expr pos:start="201:21" pos:end="201:30"><name pos:start="201:21" pos:end="201:26">height</name> <operator pos:start="201:28" pos:end="201:28">&gt;</operator> <literal type="number" pos:start="201:30" pos:end="201:30">0</literal></expr>?</condition><then pos:start="201:33" pos:end="201:38"> <expr pos:start="201:33" pos:end="201:38"><name pos:start="201:33" pos:end="201:38">height</name></expr></then><else pos:start="201:39" pos:end="201:47">: <expr pos:start="201:41" pos:end="201:47"><operator pos:start="201:41" pos:end="201:41">-</operator><name pos:start="201:42" pos:end="201:47">height</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:34"><expr pos:start="205:5" pos:end="205:33"><name pos:start="205:5" pos:end="205:18"><name pos:start="205:5" pos:end="205:9">avctx</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:18">pix_fmt</name></name> <operator pos:start="205:20" pos:end="205:20">=</operator> <name pos:start="205:22" pos:end="205:33">PIX_FMT_NONE</name></expr>;</expr_stmt>



    <switch pos:start="209:5" pos:end="301:5">switch<condition pos:start="209:11" pos:end="209:17">(<expr pos:start="209:12" pos:end="209:16"><name pos:start="209:12" pos:end="209:16">depth</name></expr>)</condition><block pos:start="209:18" pos:end="301:5">{<block_content pos:start="211:5" pos:end="299:18">

    <case pos:start="211:5" pos:end="211:12">case <expr pos:start="211:10" pos:end="211:11"><literal type="number" pos:start="211:10" pos:end="211:11">32</literal></expr>:</case>

        <if_stmt pos:start="213:9" pos:end="239:9"><if pos:start="213:9" pos:end="231:9">if<condition pos:start="213:11" pos:end="213:33">(<expr pos:start="213:12" pos:end="213:32"><name pos:start="213:12" pos:end="213:15">comp</name> <operator pos:start="213:17" pos:end="213:18">==</operator> <name pos:start="213:20" pos:end="213:32">BMP_BITFIELDS</name></expr>)</condition><block pos:start="213:34" pos:end="231:9">{<block_content pos:start="215:13" pos:end="229:13">

            <expr_stmt pos:start="215:13" pos:end="215:40"><expr pos:start="215:13" pos:end="215:39"><name pos:start="215:13" pos:end="215:18"><name pos:start="215:13" pos:end="215:15">rgb</name><index pos:start="215:16" pos:end="215:18">[<expr pos:start="215:17" pos:end="215:17"><literal type="number" pos:start="215:17" pos:end="215:17">0</literal></expr>]</index></name> <operator pos:start="215:20" pos:end="215:20">=</operator> <operator pos:start="215:22" pos:end="215:22">(</operator><name pos:start="215:23" pos:end="215:28"><name pos:start="215:23" pos:end="215:25">rgb</name><index pos:start="215:26" pos:end="215:28">[<expr pos:start="215:27" pos:end="215:27"><literal type="number" pos:start="215:27" pos:end="215:27">0</literal></expr>]</index></name> <operator pos:start="215:30" pos:end="215:31">&gt;&gt;</operator> <literal type="number" pos:start="215:33" pos:end="215:34">15</literal><operator pos:start="215:35" pos:end="215:35">)</operator> <operator pos:start="215:37" pos:end="215:37">&amp;</operator> <literal type="number" pos:start="215:39" pos:end="215:39">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:40"><expr pos:start="217:13" pos:end="217:39"><name pos:start="217:13" pos:end="217:18"><name pos:start="217:13" pos:end="217:15">rgb</name><index pos:start="217:16" pos:end="217:18">[<expr pos:start="217:17" pos:end="217:17"><literal type="number" pos:start="217:17" pos:end="217:17">1</literal></expr>]</index></name> <operator pos:start="217:20" pos:end="217:20">=</operator> <operator pos:start="217:22" pos:end="217:22">(</operator><name pos:start="217:23" pos:end="217:28"><name pos:start="217:23" pos:end="217:25">rgb</name><index pos:start="217:26" pos:end="217:28">[<expr pos:start="217:27" pos:end="217:27"><literal type="number" pos:start="217:27" pos:end="217:27">1</literal></expr>]</index></name> <operator pos:start="217:30" pos:end="217:31">&gt;&gt;</operator> <literal type="number" pos:start="217:33" pos:end="217:34">15</literal><operator pos:start="217:35" pos:end="217:35">)</operator> <operator pos:start="217:37" pos:end="217:37">&amp;</operator> <literal type="number" pos:start="217:39" pos:end="217:39">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:40"><expr pos:start="219:13" pos:end="219:39"><name pos:start="219:13" pos:end="219:18"><name pos:start="219:13" pos:end="219:15">rgb</name><index pos:start="219:16" pos:end="219:18">[<expr pos:start="219:17" pos:end="219:17"><literal type="number" pos:start="219:17" pos:end="219:17">2</literal></expr>]</index></name> <operator pos:start="219:20" pos:end="219:20">=</operator> <operator pos:start="219:22" pos:end="219:22">(</operator><name pos:start="219:23" pos:end="219:28"><name pos:start="219:23" pos:end="219:25">rgb</name><index pos:start="219:26" pos:end="219:28">[<expr pos:start="219:27" pos:end="219:27"><literal type="number" pos:start="219:27" pos:end="219:27">2</literal></expr>]</index></name> <operator pos:start="219:30" pos:end="219:31">&gt;&gt;</operator> <literal type="number" pos:start="219:33" pos:end="219:34">15</literal><operator pos:start="219:35" pos:end="219:35">)</operator> <operator pos:start="219:37" pos:end="219:37">&amp;</operator> <literal type="number" pos:start="219:39" pos:end="219:39">3</literal></expr>;</expr_stmt>



            <if_stmt pos:start="223:13" pos:end="229:13"><if pos:start="223:13" pos:end="229:13">if<condition pos:start="223:15" pos:end="225:72">(<expr pos:start="223:16" pos:end="225:71"><name pos:start="223:16" pos:end="223:21"><name pos:start="223:16" pos:end="223:18">rgb</name><index pos:start="223:19" pos:end="223:21">[<expr pos:start="223:20" pos:end="223:20"><literal type="number" pos:start="223:20" pos:end="223:20">0</literal></expr>]</index></name> <operator pos:start="223:23" pos:end="223:23">+</operator> <name pos:start="223:25" pos:end="223:30"><name pos:start="223:25" pos:end="223:27">rgb</name><index pos:start="223:28" pos:end="223:30">[<expr pos:start="223:29" pos:end="223:29"><literal type="number" pos:start="223:29" pos:end="223:29">1</literal></expr>]</index></name> <operator pos:start="223:32" pos:end="223:32">+</operator> <name pos:start="223:34" pos:end="223:39"><name pos:start="223:34" pos:end="223:36">rgb</name><index pos:start="223:37" pos:end="223:39">[<expr pos:start="223:38" pos:end="223:38"><literal type="number" pos:start="223:38" pos:end="223:38">2</literal></expr>]</index></name> <operator pos:start="223:41" pos:end="223:42">!=</operator> <literal type="number" pos:start="223:44" pos:end="223:44">3</literal> <operator pos:start="223:46" pos:end="223:47">||</operator>

               <name pos:start="225:16" pos:end="225:21"><name pos:start="225:16" pos:end="225:18">rgb</name><index pos:start="225:19" pos:end="225:21">[<expr pos:start="225:20" pos:end="225:20"><literal type="number" pos:start="225:20" pos:end="225:20">0</literal></expr>]</index></name> <operator pos:start="225:23" pos:end="225:24">==</operator> <name pos:start="225:26" pos:end="225:31"><name pos:start="225:26" pos:end="225:28">rgb</name><index pos:start="225:29" pos:end="225:31">[<expr pos:start="225:30" pos:end="225:30"><literal type="number" pos:start="225:30" pos:end="225:30">1</literal></expr>]</index></name> <operator pos:start="225:33" pos:end="225:34">||</operator> <name pos:start="225:36" pos:end="225:41"><name pos:start="225:36" pos:end="225:38">rgb</name><index pos:start="225:39" pos:end="225:41">[<expr pos:start="225:40" pos:end="225:40"><literal type="number" pos:start="225:40" pos:end="225:40">0</literal></expr>]</index></name> <operator pos:start="225:43" pos:end="225:44">==</operator> <name pos:start="225:46" pos:end="225:51"><name pos:start="225:46" pos:end="225:48">rgb</name><index pos:start="225:49" pos:end="225:51">[<expr pos:start="225:50" pos:end="225:50"><literal type="number" pos:start="225:50" pos:end="225:50">2</literal></expr>]</index></name> <operator pos:start="225:53" pos:end="225:54">||</operator> <name pos:start="225:56" pos:end="225:61"><name pos:start="225:56" pos:end="225:58">rgb</name><index pos:start="225:59" pos:end="225:61">[<expr pos:start="225:60" pos:end="225:60"><literal type="number" pos:start="225:60" pos:end="225:60">1</literal></expr>]</index></name> <operator pos:start="225:63" pos:end="225:64">==</operator> <name pos:start="225:66" pos:end="225:71"><name pos:start="225:66" pos:end="225:68">rgb</name><index pos:start="225:69" pos:end="225:71">[<expr pos:start="225:70" pos:end="225:70"><literal type="number" pos:start="225:70" pos:end="225:70">2</literal></expr>]</index></name></expr>)</condition><block pos:start="225:73" pos:end="229:13">{<block_content pos:start="227:17" pos:end="227:22">

                <break pos:start="227:17" pos:end="227:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="239:9">else <block pos:start="231:16" pos:end="239:9">{<block_content pos:start="233:13" pos:end="237:23">

            <expr_stmt pos:start="233:13" pos:end="233:23"><expr pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:18"><name pos:start="233:13" pos:end="233:15">rgb</name><index pos:start="233:16" pos:end="233:18">[<expr pos:start="233:17" pos:end="233:17"><literal type="number" pos:start="233:17" pos:end="233:17">0</literal></expr>]</index></name> <operator pos:start="233:20" pos:end="233:20">=</operator> <literal type="number" pos:start="233:22" pos:end="233:22">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:23"><expr pos:start="235:13" pos:end="235:22"><name pos:start="235:13" pos:end="235:18"><name pos:start="235:13" pos:end="235:15">rgb</name><index pos:start="235:16" pos:end="235:18">[<expr pos:start="235:17" pos:end="235:17"><literal type="number" pos:start="235:17" pos:end="235:17">1</literal></expr>]</index></name> <operator pos:start="235:20" pos:end="235:20">=</operator> <literal type="number" pos:start="235:22" pos:end="235:22">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:23"><expr pos:start="237:13" pos:end="237:22"><name pos:start="237:13" pos:end="237:18"><name pos:start="237:13" pos:end="237:15">rgb</name><index pos:start="237:16" pos:end="237:18">[<expr pos:start="237:17" pos:end="237:17"><literal type="number" pos:start="237:17" pos:end="237:17">2</literal></expr>]</index></name> <operator pos:start="237:20" pos:end="237:20">=</operator> <literal type="number" pos:start="237:22" pos:end="237:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:39"><expr pos:start="243:9" pos:end="243:38"><name pos:start="243:9" pos:end="243:22"><name pos:start="243:9" pos:end="243:13">avctx</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:22">pix_fmt</name></name> <operator pos:start="243:24" pos:end="243:24">=</operator> <name pos:start="243:26" pos:end="243:38">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:12">case <expr pos:start="247:10" pos:end="247:11"><literal type="number" pos:start="247:10" pos:end="247:11">24</literal></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="249:39"><expr pos:start="249:9" pos:end="249:38"><name pos:start="249:9" pos:end="249:22"><name pos:start="249:9" pos:end="249:13">avctx</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:22">pix_fmt</name></name> <operator pos:start="249:24" pos:end="249:24">=</operator> <name pos:start="249:26" pos:end="249:38">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:12">case <expr pos:start="253:10" pos:end="253:11"><literal type="number" pos:start="253:10" pos:end="253:11">16</literal></expr>:</case>

        <if_stmt pos:start="255:9" pos:end="257:44"><if pos:start="255:9" pos:end="257:44">if<condition pos:start="255:11" pos:end="255:27">(<expr pos:start="255:12" pos:end="255:26"><name pos:start="255:12" pos:end="255:15">comp</name> <operator pos:start="255:17" pos:end="255:18">==</operator> <name pos:start="255:20" pos:end="255:26">BMP_RGB</name></expr>)</condition><block type="pseudo" pos:start="257:13" pos:end="257:44"><block_content pos:start="257:13" pos:end="257:44">

            <expr_stmt pos:start="257:13" pos:end="257:44"><expr pos:start="257:13" pos:end="257:43"><name pos:start="257:13" pos:end="257:26"><name pos:start="257:13" pos:end="257:17">avctx</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:26">pix_fmt</name></name> <operator pos:start="257:28" pos:end="257:28">=</operator> <name pos:start="257:30" pos:end="257:43">PIX_FMT_RGB555</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="259:9" pos:end="261:80"><if pos:start="259:9" pos:end="261:80">if<condition pos:start="259:11" pos:end="259:33">(<expr pos:start="259:12" pos:end="259:32"><name pos:start="259:12" pos:end="259:15">comp</name> <operator pos:start="259:17" pos:end="259:18">==</operator> <name pos:start="259:20" pos:end="259:32">BMP_BITFIELDS</name></expr>)</condition><block type="pseudo" pos:start="261:13" pos:end="261:80"><block_content pos:start="261:13" pos:end="261:80">

            <expr_stmt pos:start="261:13" pos:end="261:80"><expr pos:start="261:13" pos:end="261:79"><name pos:start="261:13" pos:end="261:26"><name pos:start="261:13" pos:end="261:17">avctx</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:26">pix_fmt</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator> <ternary pos:start="261:30" pos:end="261:79"><condition pos:start="261:30" pos:end="261:47"><expr pos:start="261:30" pos:end="261:45"><name pos:start="261:30" pos:end="261:35"><name pos:start="261:30" pos:end="261:32">rgb</name><index pos:start="261:33" pos:end="261:35">[<expr pos:start="261:34" pos:end="261:34"><literal type="number" pos:start="261:34" pos:end="261:34">1</literal></expr>]</index></name> <operator pos:start="261:37" pos:end="261:38">==</operator> <literal type="number" pos:start="261:40" pos:end="261:45">0x07E0</literal></expr> ?</condition><then pos:start="261:49" pos:end="261:62"> <expr pos:start="261:49" pos:end="261:62"><name pos:start="261:49" pos:end="261:62">PIX_FMT_RGB565</name></expr> </then><else pos:start="261:64" pos:end="261:79">: <expr pos:start="261:66" pos:end="261:79"><name pos:start="261:66" pos:end="261:79">PIX_FMT_RGB555</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="263:9" pos:end="263:14">break;</break>

    <case pos:start="265:5" pos:end="265:11">case <expr pos:start="265:10" pos:end="265:10"><literal type="number" pos:start="265:10" pos:end="265:10">8</literal></expr>:</case>

        <if_stmt pos:start="267:9" pos:end="273:43"><if pos:start="267:9" pos:end="269:42">if<condition pos:start="267:11" pos:end="267:35">(<expr pos:start="267:12" pos:end="267:34"><name pos:start="267:12" pos:end="267:16">hsize</name> <operator pos:start="267:18" pos:end="267:18">-</operator> <name pos:start="267:20" pos:end="267:25">ihsize</name> <operator pos:start="267:27" pos:end="267:27">-</operator> <literal type="number" pos:start="267:29" pos:end="267:30">14</literal> <operator pos:start="267:32" pos:end="267:32">&gt;</operator> <literal type="number" pos:start="267:34" pos:end="267:34">0</literal></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:42"><block_content pos:start="269:13" pos:end="269:42">

            <expr_stmt pos:start="269:13" pos:end="269:42"><expr pos:start="269:13" pos:end="269:41"><name pos:start="269:13" pos:end="269:26"><name pos:start="269:13" pos:end="269:17">avctx</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:26">pix_fmt</name></name> <operator pos:start="269:28" pos:end="269:28">=</operator> <name pos:start="269:30" pos:end="269:41">PIX_FMT_PAL8</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="271:9" pos:end="273:43">else<block type="pseudo" pos:start="273:13" pos:end="273:43"><block_content pos:start="273:13" pos:end="273:43">

            <expr_stmt pos:start="273:13" pos:end="273:43"><expr pos:start="273:13" pos:end="273:42"><name pos:start="273:13" pos:end="273:26"><name pos:start="273:13" pos:end="273:17">avctx</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:26">pix_fmt</name></name> <operator pos:start="273:28" pos:end="273:28">=</operator> <name pos:start="273:30" pos:end="273:42">PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="275:9" pos:end="275:14">break;</break>

    <case pos:start="277:5" pos:end="277:11">case <expr pos:start="277:10" pos:end="277:10"><literal type="number" pos:start="277:10" pos:end="277:10">1</literal></expr>:</case>

    <case pos:start="279:5" pos:end="279:11">case <expr pos:start="279:10" pos:end="279:10"><literal type="number" pos:start="279:10" pos:end="279:10">4</literal></expr>:</case>

        <if_stmt pos:start="281:9" pos:end="291:9"><if pos:start="281:9" pos:end="285:9">if<condition pos:start="281:11" pos:end="281:35">(<expr pos:start="281:12" pos:end="281:34"><name pos:start="281:12" pos:end="281:16">hsize</name> <operator pos:start="281:18" pos:end="281:18">-</operator> <name pos:start="281:20" pos:end="281:25">ihsize</name> <operator pos:start="281:27" pos:end="281:27">-</operator> <literal type="number" pos:start="281:29" pos:end="281:30">14</literal> <operator pos:start="281:32" pos:end="281:32">&gt;</operator> <literal type="number" pos:start="281:34" pos:end="281:34">0</literal></expr>)</condition><block pos:start="281:36" pos:end="285:9">{<block_content pos:start="283:13" pos:end="283:42">

            <expr_stmt pos:start="283:13" pos:end="283:42"><expr pos:start="283:13" pos:end="283:41"><name pos:start="283:13" pos:end="283:26"><name pos:start="283:13" pos:end="283:17">avctx</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:26">pix_fmt</name></name> <operator pos:start="283:28" pos:end="283:28">=</operator> <name pos:start="283:30" pos:end="283:41">PIX_FMT_PAL8</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="285:10" pos:end="291:9">else<block pos:start="285:14" pos:end="291:9">{<block_content pos:start="287:13" pos:end="289:22">

            <expr_stmt pos:start="287:13" pos:end="287:89"><expr pos:start="287:13" pos:end="287:88"><call pos:start="287:13" pos:end="287:88"><name pos:start="287:13" pos:end="287:18">av_log</name><argument_list pos:start="287:19" pos:end="287:88">(<argument pos:start="287:20" pos:end="287:24"><expr pos:start="287:20" pos:end="287:24"><name pos:start="287:20" pos:end="287:24">avctx</name></expr></argument>, <argument pos:start="287:27" pos:end="287:38"><expr pos:start="287:27" pos:end="287:38"><name pos:start="287:27" pos:end="287:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:41" pos:end="287:77"><expr pos:start="287:41" pos:end="287:77"><literal type="string" pos:start="287:41" pos:end="287:77">"Unknown palette for %d-colour BMP\n"</literal></expr></argument>, <argument pos:start="287:80" pos:end="287:87"><expr pos:start="287:80" pos:end="287:87"><literal type="number" pos:start="287:80" pos:end="287:80">1</literal><operator pos:start="287:81" pos:end="287:82">&lt;&lt;</operator><name pos:start="287:83" pos:end="287:87">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="289:13" pos:end="289:22">return <expr pos:start="289:20" pos:end="289:21"><operator pos:start="289:20" pos:end="289:20">-</operator><literal type="number" pos:start="289:21" pos:end="289:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <default pos:start="295:5" pos:end="295:12">default:</default>

        <expr_stmt pos:start="297:9" pos:end="297:71"><expr pos:start="297:9" pos:end="297:70"><call pos:start="297:9" pos:end="297:70"><name pos:start="297:9" pos:end="297:14">av_log</name><argument_list pos:start="297:15" pos:end="297:70">(<argument pos:start="297:16" pos:end="297:20"><expr pos:start="297:16" pos:end="297:20"><name pos:start="297:16" pos:end="297:20">avctx</name></expr></argument>, <argument pos:start="297:23" pos:end="297:34"><expr pos:start="297:23" pos:end="297:34"><name pos:start="297:23" pos:end="297:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="297:37" pos:end="297:62"><expr pos:start="297:37" pos:end="297:62"><literal type="string" pos:start="297:37" pos:end="297:62">"depth %d not supported\n"</literal></expr></argument>, <argument pos:start="297:65" pos:end="297:69"><expr pos:start="297:65" pos:end="297:69"><name pos:start="297:65" pos:end="297:69">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="299:9" pos:end="299:18">return <expr pos:start="299:16" pos:end="299:17"><operator pos:start="299:16" pos:end="299:16">-</operator><literal type="number" pos:start="299:17" pos:end="299:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="305:5" pos:end="311:5"><if pos:start="305:5" pos:end="311:5">if<condition pos:start="305:7" pos:end="305:38">(<expr pos:start="305:8" pos:end="305:37"><name pos:start="305:8" pos:end="305:21"><name pos:start="305:8" pos:end="305:12">avctx</name><operator pos:start="305:13" pos:end="305:14">-&gt;</operator><name pos:start="305:15" pos:end="305:21">pix_fmt</name></name> <operator pos:start="305:23" pos:end="305:24">==</operator> <name pos:start="305:26" pos:end="305:37">PIX_FMT_NONE</name></expr>)</condition><block pos:start="305:39" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:18">

        <expr_stmt pos:start="307:9" pos:end="307:66"><expr pos:start="307:9" pos:end="307:65"><call pos:start="307:9" pos:end="307:65"><name pos:start="307:9" pos:end="307:14">av_log</name><argument_list pos:start="307:15" pos:end="307:65">(<argument pos:start="307:16" pos:end="307:20"><expr pos:start="307:16" pos:end="307:20"><name pos:start="307:16" pos:end="307:20">avctx</name></expr></argument>, <argument pos:start="307:23" pos:end="307:34"><expr pos:start="307:23" pos:end="307:34"><name pos:start="307:23" pos:end="307:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="307:37" pos:end="307:64"><expr pos:start="307:37" pos:end="307:64"><literal type="string" pos:start="307:37" pos:end="307:64">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="309:9" pos:end="309:18">return <expr pos:start="309:16" pos:end="309:17"><operator pos:start="309:16" pos:end="309:16">-</operator><literal type="number" pos:start="309:17" pos:end="309:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="315:5" pos:end="317:40"><if pos:start="315:5" pos:end="317:40">if<condition pos:start="315:7" pos:end="315:18">(<expr pos:start="315:8" pos:end="315:17"><name pos:start="315:8" pos:end="315:17"><name pos:start="315:8" pos:end="315:8">p</name><operator pos:start="315:9" pos:end="315:10">-&gt;</operator><name pos:start="315:11" pos:end="315:14">data</name><index pos:start="315:15" pos:end="315:17">[<expr pos:start="315:16" pos:end="315:16"><literal type="number" pos:start="315:16" pos:end="315:16">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="317:9" pos:end="317:40"><block_content pos:start="317:9" pos:end="317:40">

        <expr_stmt pos:start="317:9" pos:end="317:40"><expr pos:start="317:9" pos:end="317:39"><call pos:start="317:9" pos:end="317:39"><name pos:start="317:9" pos:end="317:29"><name pos:start="317:9" pos:end="317:13">avctx</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:29">release_buffer</name></name><argument_list pos:start="317:30" pos:end="317:39">(<argument pos:start="317:31" pos:end="317:35"><expr pos:start="317:31" pos:end="317:35"><name pos:start="317:31" pos:end="317:35">avctx</name></expr></argument>, <argument pos:start="317:38" pos:end="317:38"><expr pos:start="317:38" pos:end="317:38"><name pos:start="317:38" pos:end="317:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="321:5" pos:end="321:21"><expr pos:start="321:5" pos:end="321:20"><name pos:start="321:5" pos:end="321:16"><name pos:start="321:5" pos:end="321:5">p</name><operator pos:start="321:6" pos:end="321:7">-&gt;</operator><name pos:start="321:8" pos:end="321:16">reference</name></name> <operator pos:start="321:18" pos:end="321:18">=</operator> <literal type="number" pos:start="321:20" pos:end="321:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="323:5" pos:end="329:5"><if pos:start="323:5" pos:end="329:5">if<condition pos:start="323:7" pos:end="323:39">(<expr pos:start="323:8" pos:end="323:38"><call pos:start="323:8" pos:end="323:34"><name pos:start="323:8" pos:end="323:24"><name pos:start="323:8" pos:end="323:12">avctx</name><operator pos:start="323:13" pos:end="323:14">-&gt;</operator><name pos:start="323:15" pos:end="323:24">get_buffer</name></name><argument_list pos:start="323:25" pos:end="323:34">(<argument pos:start="323:26" pos:end="323:30"><expr pos:start="323:26" pos:end="323:30"><name pos:start="323:26" pos:end="323:30">avctx</name></expr></argument>, <argument pos:start="323:33" pos:end="323:33"><expr pos:start="323:33" pos:end="323:33"><name pos:start="323:33" pos:end="323:33">p</name></expr></argument>)</argument_list></call> <operator pos:start="323:36" pos:end="323:36">&lt;</operator> <literal type="number" pos:start="323:38" pos:end="323:38">0</literal></expr>)</condition><block pos:start="323:40" pos:end="329:5">{<block_content pos:start="325:9" pos:end="327:18">

        <expr_stmt pos:start="325:9" pos:end="325:61"><expr pos:start="325:9" pos:end="325:60"><call pos:start="325:9" pos:end="325:60"><name pos:start="325:9" pos:end="325:14">av_log</name><argument_list pos:start="325:15" pos:end="325:60">(<argument pos:start="325:16" pos:end="325:20"><expr pos:start="325:16" pos:end="325:20"><name pos:start="325:16" pos:end="325:20">avctx</name></expr></argument>, <argument pos:start="325:23" pos:end="325:34"><expr pos:start="325:23" pos:end="325:34"><name pos:start="325:23" pos:end="325:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="325:37" pos:end="325:59"><expr pos:start="325:37" pos:end="325:59"><literal type="string" pos:start="325:37" pos:end="325:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="327:9" pos:end="327:18">return <expr pos:start="327:16" pos:end="327:17"><operator pos:start="327:16" pos:end="327:16">-</operator><literal type="number" pos:start="327:17" pos:end="327:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:37"><expr pos:start="331:5" pos:end="331:36"><name pos:start="331:5" pos:end="331:16"><name pos:start="331:5" pos:end="331:5">p</name><operator pos:start="331:6" pos:end="331:7">-&gt;</operator><name pos:start="331:8" pos:end="331:16">pict_type</name></name> <operator pos:start="331:18" pos:end="331:18">=</operator> <name pos:start="331:20" pos:end="331:36">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:21"><expr pos:start="333:5" pos:end="333:20"><name pos:start="333:5" pos:end="333:16"><name pos:start="333:5" pos:end="333:5">p</name><operator pos:start="333:6" pos:end="333:7">-&gt;</operator><name pos:start="333:8" pos:end="333:16">key_frame</name></name> <operator pos:start="333:18" pos:end="333:18">=</operator> <literal type="number" pos:start="333:20" pos:end="333:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="337:5" pos:end="337:23"><expr pos:start="337:5" pos:end="337:22"><name pos:start="337:5" pos:end="337:7">buf</name> <operator pos:start="337:9" pos:end="337:9">=</operator> <name pos:start="337:11" pos:end="337:14">buf0</name> <operator pos:start="337:16" pos:end="337:16">+</operator> <name pos:start="337:18" pos:end="337:22">hsize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:29"><expr pos:start="339:5" pos:end="339:28"><name pos:start="339:5" pos:end="339:9">dsize</name> <operator pos:start="339:11" pos:end="339:11">=</operator> <name pos:start="339:13" pos:end="339:20">buf_size</name> <operator pos:start="339:22" pos:end="339:22">-</operator> <name pos:start="339:24" pos:end="339:28">hsize</name></expr>;</expr_stmt>



    <comment type="block" pos:start="343:5" pos:end="343:41">/* Line size in file multiple of 4 */</comment>

    <expr_stmt pos:start="345:5" pos:end="345:46"><expr pos:start="345:5" pos:end="345:45"><name pos:start="345:5" pos:end="345:5">n</name> <operator pos:start="345:7" pos:end="345:7">=</operator> <operator pos:start="345:9" pos:end="345:9">(</operator><operator pos:start="345:10" pos:end="345:10">(</operator><name pos:start="345:11" pos:end="345:22"><name pos:start="345:11" pos:end="345:15">avctx</name><operator pos:start="345:16" pos:end="345:17">-&gt;</operator><name pos:start="345:18" pos:end="345:22">width</name></name> <operator pos:start="345:24" pos:end="345:24">*</operator> <name pos:start="345:26" pos:end="345:30">depth</name><operator pos:start="345:31" pos:end="345:31">)</operator> <operator pos:start="345:33" pos:end="345:33">/</operator> <literal type="number" pos:start="345:35" pos:end="345:37">8</literal> <operator pos:start="345:37" pos:end="345:37">+</operator> <literal type="number" pos:start="345:39" pos:end="345:39">3</literal><operator pos:start="345:40" pos:end="345:40">)</operator> <operator pos:start="345:42" pos:end="345:42">&amp;</operator> <operator pos:start="345:44" pos:end="345:44">~</operator><literal type="number" pos:start="345:45" pos:end="345:45">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="349:5" pos:end="357:5"><if pos:start="349:5" pos:end="357:5">if<condition pos:start="349:7" pos:end="349:73">(<expr pos:start="349:8" pos:end="349:72"><name pos:start="349:8" pos:end="349:8">n</name> <operator pos:start="349:10" pos:end="349:10">*</operator> <name pos:start="349:12" pos:end="349:24"><name pos:start="349:12" pos:end="349:16">avctx</name><operator pos:start="349:17" pos:end="349:18">-&gt;</operator><name pos:start="349:19" pos:end="349:24">height</name></name> <operator pos:start="349:26" pos:end="349:26">&gt;</operator> <name pos:start="349:28" pos:end="349:32">dsize</name> <operator pos:start="349:34" pos:end="349:35">&amp;&amp;</operator> <name pos:start="349:37" pos:end="349:40">comp</name> <operator pos:start="349:42" pos:end="349:43">!=</operator> <name pos:start="349:45" pos:end="349:52">BMP_RLE4</name> <operator pos:start="349:54" pos:end="349:55">&amp;&amp;</operator> <name pos:start="349:57" pos:end="349:60">comp</name> <operator pos:start="349:62" pos:end="349:63">!=</operator> <name pos:start="349:65" pos:end="349:72">BMP_RLE8</name></expr>)</condition><block pos:start="349:74" pos:end="357:5">{<block_content pos:start="351:9" pos:end="355:18">

        <expr_stmt pos:start="351:9" pos:end="353:41"><expr pos:start="351:9" pos:end="353:40"><call pos:start="351:9" pos:end="353:40"><name pos:start="351:9" pos:end="351:14">av_log</name><argument_list pos:start="351:15" pos:end="353:40">(<argument pos:start="351:16" pos:end="351:20"><expr pos:start="351:16" pos:end="351:20"><name pos:start="351:16" pos:end="351:20">avctx</name></expr></argument>, <argument pos:start="351:23" pos:end="351:34"><expr pos:start="351:23" pos:end="351:34"><name pos:start="351:23" pos:end="351:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="351:37" pos:end="351:65"><expr pos:start="351:37" pos:end="351:65"><literal type="string" pos:start="351:37" pos:end="351:65">"not enough data (%d &lt; %d)\n"</literal></expr></argument>,

               <argument pos:start="353:16" pos:end="353:20"><expr pos:start="353:16" pos:end="353:20"><name pos:start="353:16" pos:end="353:20">dsize</name></expr></argument>, <argument pos:start="353:23" pos:end="353:39"><expr pos:start="353:23" pos:end="353:39"><name pos:start="353:23" pos:end="353:23">n</name> <operator pos:start="353:25" pos:end="353:25">*</operator> <name pos:start="353:27" pos:end="353:39"><name pos:start="353:27" pos:end="353:31">avctx</name><operator pos:start="353:32" pos:end="353:33">-&gt;</operator><name pos:start="353:34" pos:end="353:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="355:9" pos:end="355:18">return <expr pos:start="355:16" pos:end="355:17"><operator pos:start="355:16" pos:end="355:16">-</operator><literal type="number" pos:start="355:17" pos:end="355:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="361:5" pos:end="361:81">// RLE may skip decoding some picture areas, so blank picture before decoding</comment>

    <if_stmt pos:start="363:5" pos:end="365:62"><if pos:start="363:5" pos:end="365:62">if<condition pos:start="363:7" pos:end="363:44">(<expr pos:start="363:8" pos:end="363:43"><name pos:start="363:8" pos:end="363:11">comp</name> <operator pos:start="363:13" pos:end="363:14">==</operator> <name pos:start="363:16" pos:end="363:23">BMP_RLE4</name> <operator pos:start="363:25" pos:end="363:26">||</operator> <name pos:start="363:28" pos:end="363:31">comp</name> <operator pos:start="363:33" pos:end="363:34">==</operator> <name pos:start="363:36" pos:end="363:43">BMP_RLE8</name></expr>)</condition><block type="pseudo" pos:start="365:9" pos:end="365:62"><block_content pos:start="365:9" pos:end="365:62">

        <expr_stmt pos:start="365:9" pos:end="365:62"><expr pos:start="365:9" pos:end="365:61"><call pos:start="365:9" pos:end="365:61"><name pos:start="365:9" pos:end="365:14">memset</name><argument_list pos:start="365:15" pos:end="365:61">(<argument pos:start="365:16" pos:end="365:25"><expr pos:start="365:16" pos:end="365:25"><name pos:start="365:16" pos:end="365:25"><name pos:start="365:16" pos:end="365:16">p</name><operator pos:start="365:17" pos:end="365:18">-&gt;</operator><name pos:start="365:19" pos:end="365:22">data</name><index pos:start="365:23" pos:end="365:25">[<expr pos:start="365:24" pos:end="365:24"><literal type="number" pos:start="365:24" pos:end="365:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="365:28" pos:end="365:28"><expr pos:start="365:28" pos:end="365:28"><literal type="number" pos:start="365:28" pos:end="365:28">0</literal></expr></argument>, <argument pos:start="365:31" pos:end="365:60"><expr pos:start="365:31" pos:end="365:60"><name pos:start="365:31" pos:end="365:43"><name pos:start="365:31" pos:end="365:35">avctx</name><operator pos:start="365:36" pos:end="365:37">-&gt;</operator><name pos:start="365:38" pos:end="365:43">height</name></name> <operator pos:start="365:45" pos:end="365:45">*</operator> <name pos:start="365:47" pos:end="365:60"><name pos:start="365:47" pos:end="365:47">p</name><operator pos:start="365:48" pos:end="365:49">-&gt;</operator><name pos:start="365:50" pos:end="365:57">linesize</name><index pos:start="365:58" pos:end="365:60">[<expr pos:start="365:59" pos:end="365:59"><literal type="number" pos:start="365:59" pos:end="365:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="369:5" pos:end="371:36"><if pos:start="369:5" pos:end="371:36">if<condition pos:start="369:7" pos:end="369:32">(<expr pos:start="369:8" pos:end="369:31"><name pos:start="369:8" pos:end="369:12">depth</name> <operator pos:start="369:14" pos:end="369:15">==</operator> <literal type="number" pos:start="369:17" pos:end="369:17">4</literal> <operator pos:start="369:19" pos:end="369:20">||</operator> <name pos:start="369:22" pos:end="369:26">depth</name> <operator pos:start="369:28" pos:end="369:29">==</operator> <literal type="number" pos:start="369:31" pos:end="369:31">8</literal></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="371:36"><block_content pos:start="371:9" pos:end="371:36">

        <expr_stmt pos:start="371:9" pos:end="371:36"><expr pos:start="371:9" pos:end="371:35"><call pos:start="371:9" pos:end="371:35"><name pos:start="371:9" pos:end="371:14">memset</name><argument_list pos:start="371:15" pos:end="371:35">(<argument pos:start="371:16" pos:end="371:25"><expr pos:start="371:16" pos:end="371:25"><name pos:start="371:16" pos:end="371:25"><name pos:start="371:16" pos:end="371:16">p</name><operator pos:start="371:17" pos:end="371:18">-&gt;</operator><name pos:start="371:19" pos:end="371:22">data</name><index pos:start="371:23" pos:end="371:25">[<expr pos:start="371:24" pos:end="371:24"><literal type="number" pos:start="371:24" pos:end="371:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:28" pos:end="371:28"><expr pos:start="371:28" pos:end="371:28"><literal type="number" pos:start="371:28" pos:end="371:28">0</literal></expr></argument>, <argument pos:start="371:31" pos:end="371:34"><expr pos:start="371:31" pos:end="371:34"><literal type="number" pos:start="371:31" pos:end="371:34">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="375:5" pos:end="387:5"><if pos:start="375:5" pos:end="381:5">if<condition pos:start="375:7" pos:end="375:18">(<expr pos:start="375:8" pos:end="375:17"><name pos:start="375:8" pos:end="375:13">height</name> <operator pos:start="375:15" pos:end="375:15">&gt;</operator> <literal type="number" pos:start="375:17" pos:end="375:17">0</literal></expr>)</condition><block pos:start="375:19" pos:end="381:5">{<block_content pos:start="377:9" pos:end="379:35">

        <expr_stmt pos:start="377:9" pos:end="377:64"><expr pos:start="377:9" pos:end="377:63"><name pos:start="377:9" pos:end="377:11">ptr</name> <operator pos:start="377:13" pos:end="377:13">=</operator> <name pos:start="377:15" pos:end="377:24"><name pos:start="377:15" pos:end="377:15">p</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:21">data</name><index pos:start="377:22" pos:end="377:24">[<expr pos:start="377:23" pos:end="377:23"><literal type="number" pos:start="377:23" pos:end="377:23">0</literal></expr>]</index></name> <operator pos:start="377:26" pos:end="377:26">+</operator> <operator pos:start="377:28" pos:end="377:28">(</operator><name pos:start="377:29" pos:end="377:41"><name pos:start="377:29" pos:end="377:33">avctx</name><operator pos:start="377:34" pos:end="377:35">-&gt;</operator><name pos:start="377:36" pos:end="377:41">height</name></name> <operator pos:start="377:43" pos:end="377:43">-</operator> <literal type="number" pos:start="377:45" pos:end="377:45">1</literal><operator pos:start="377:46" pos:end="377:46">)</operator> <operator pos:start="377:48" pos:end="377:48">*</operator> <name pos:start="377:50" pos:end="377:63"><name pos:start="377:50" pos:end="377:50">p</name><operator pos:start="377:51" pos:end="377:52">-&gt;</operator><name pos:start="377:53" pos:end="377:60">linesize</name><index pos:start="377:61" pos:end="377:63">[<expr pos:start="377:62" pos:end="377:62"><literal type="number" pos:start="377:62" pos:end="377:62">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:35"><expr pos:start="379:9" pos:end="379:34"><name pos:start="379:9" pos:end="379:16">linesize</name> <operator pos:start="379:18" pos:end="379:18">=</operator> <operator pos:start="379:20" pos:end="379:20">-</operator><name pos:start="379:21" pos:end="379:34"><name pos:start="379:21" pos:end="379:21">p</name><operator pos:start="379:22" pos:end="379:23">-&gt;</operator><name pos:start="379:24" pos:end="379:31">linesize</name><index pos:start="379:32" pos:end="379:34">[<expr pos:start="379:33" pos:end="379:33"><literal type="number" pos:start="379:33" pos:end="379:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="381:7" pos:end="387:5">else <block pos:start="381:12" pos:end="387:5">{<block_content pos:start="383:9" pos:end="385:34">

        <expr_stmt pos:start="383:9" pos:end="383:25"><expr pos:start="383:9" pos:end="383:24"><name pos:start="383:9" pos:end="383:11">ptr</name> <operator pos:start="383:13" pos:end="383:13">=</operator> <name pos:start="383:15" pos:end="383:24"><name pos:start="383:15" pos:end="383:15">p</name><operator pos:start="383:16" pos:end="383:17">-&gt;</operator><name pos:start="383:18" pos:end="383:21">data</name><index pos:start="383:22" pos:end="383:24">[<expr pos:start="383:23" pos:end="383:23"><literal type="number" pos:start="383:23" pos:end="383:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:34"><expr pos:start="385:9" pos:end="385:33"><name pos:start="385:9" pos:end="385:16">linesize</name> <operator pos:start="385:18" pos:end="385:18">=</operator> <name pos:start="385:20" pos:end="385:33"><name pos:start="385:20" pos:end="385:20">p</name><operator pos:start="385:21" pos:end="385:22">-&gt;</operator><name pos:start="385:23" pos:end="385:30">linesize</name><index pos:start="385:31" pos:end="385:33">[<expr pos:start="385:32" pos:end="385:32"><literal type="number" pos:start="385:32" pos:end="385:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="391:5" pos:end="433:5"><if pos:start="391:5" pos:end="433:5">if<condition pos:start="391:7" pos:end="391:38">(<expr pos:start="391:8" pos:end="391:37"><name pos:start="391:8" pos:end="391:21"><name pos:start="391:8" pos:end="391:12">avctx</name><operator pos:start="391:13" pos:end="391:14">-&gt;</operator><name pos:start="391:15" pos:end="391:21">pix_fmt</name></name> <operator pos:start="391:23" pos:end="391:24">==</operator> <name pos:start="391:26" pos:end="391:37">PIX_FMT_PAL8</name></expr>)</condition><block pos:start="391:39" pos:end="433:5">{<block_content pos:start="393:9" pos:end="431:27">

        <decl_stmt pos:start="393:9" pos:end="393:32"><decl pos:start="393:9" pos:end="393:31"><type pos:start="393:9" pos:end="393:11"><name pos:start="393:9" pos:end="393:11">int</name></type> <name pos:start="393:13" pos:end="393:18">colors</name> <init pos:start="393:20" pos:end="393:31">= <expr pos:start="393:22" pos:end="393:31"><literal type="number" pos:start="393:22" pos:end="393:22">1</literal> <operator pos:start="393:24" pos:end="393:25">&lt;&lt;</operator> <name pos:start="393:27" pos:end="393:31">depth</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="395:9" pos:end="413:9"><if pos:start="395:9" pos:end="413:9">if<condition pos:start="395:11" pos:end="395:24">(<expr pos:start="395:12" pos:end="395:23"><name pos:start="395:12" pos:end="395:17">ihsize</name> <operator pos:start="395:19" pos:end="395:20">&gt;=</operator> <literal type="number" pos:start="395:22" pos:end="395:23">36</literal></expr>)</condition><block pos:start="395:25" pos:end="413:9">{<block_content pos:start="397:13" pos:end="411:13">

            <decl_stmt pos:start="397:13" pos:end="397:18"><decl pos:start="397:13" pos:end="397:17"><type pos:start="397:13" pos:end="397:15"><name pos:start="397:13" pos:end="397:15">int</name></type> <name pos:start="397:17" pos:end="397:17">t</name></decl>;</decl_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:28"><expr pos:start="399:13" pos:end="399:27"><name pos:start="399:13" pos:end="399:15">buf</name> <operator pos:start="399:17" pos:end="399:17">=</operator> <name pos:start="399:19" pos:end="399:22">buf0</name> <operator pos:start="399:24" pos:end="399:24">+</operator> <literal type="number" pos:start="399:26" pos:end="399:27">46</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:42"><expr pos:start="401:13" pos:end="401:41"><name pos:start="401:13" pos:end="401:13">t</name> <operator pos:start="401:15" pos:end="401:15">=</operator> <call pos:start="401:17" pos:end="401:41"><name pos:start="401:17" pos:end="401:35">bytestream_get_le32</name><argument_list pos:start="401:36" pos:end="401:41">(<argument pos:start="401:37" pos:end="401:40"><expr pos:start="401:37" pos:end="401:40"><operator pos:start="401:37" pos:end="401:37">&amp;</operator><name pos:start="401:38" pos:end="401:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="403:13" pos:end="411:13"><if pos:start="403:13" pos:end="407:13">if<condition pos:start="403:15" pos:end="403:41">(<expr pos:start="403:16" pos:end="403:40"><call pos:start="403:16" pos:end="403:40"><name pos:start="403:16" pos:end="403:27"><name pos:start="403:16" pos:end="403:16">t</name> <argument_list type="generic" pos:start="403:18" pos:end="403:27">&lt; <argument pos:start="403:20" pos:end="403:25"><expr pos:start="403:20" pos:end="403:25"><literal type="number" pos:start="403:20" pos:end="403:20">0</literal> <operator pos:start="403:22" pos:end="403:23">||</operator> <name pos:start="403:25" pos:end="403:25">t</name></expr></argument> &gt;</argument_list></name> <argument_list pos:start="403:29" pos:end="403:40">(<argument pos:start="403:30" pos:end="403:39"><expr pos:start="403:30" pos:end="403:39"><literal type="number" pos:start="403:30" pos:end="403:30">1</literal> <operator pos:start="403:32" pos:end="403:33">&lt;&lt;</operator> <name pos:start="403:35" pos:end="403:39">depth</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="403:42" pos:end="407:13">{<block_content pos:start="405:17" pos:end="405:107">

                <expr_stmt pos:start="405:17" pos:end="405:107"><expr pos:start="405:17" pos:end="405:106"><call pos:start="405:17" pos:end="405:106"><name pos:start="405:17" pos:end="405:22">av_log</name><argument_list pos:start="405:23" pos:end="405:106">(<argument pos:start="405:24" pos:end="405:28"><expr pos:start="405:24" pos:end="405:28"><name pos:start="405:24" pos:end="405:28">avctx</name></expr></argument>, <argument pos:start="405:31" pos:end="405:42"><expr pos:start="405:31" pos:end="405:42"><name pos:start="405:31" pos:end="405:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="405:45" pos:end="405:95"><expr pos:start="405:45" pos:end="405:95"><literal type="string" pos:start="405:45" pos:end="405:95">"Incorrect number of colors - %X for bitdepth %d\n"</literal></expr></argument>, <argument pos:start="405:98" pos:end="405:98"><expr pos:start="405:98" pos:end="405:98"><name pos:start="405:98" pos:end="405:98">t</name></expr></argument>, <argument pos:start="405:101" pos:end="405:105"><expr pos:start="405:101" pos:end="405:105"><name pos:start="405:101" pos:end="405:105">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="407:14" pos:end="411:13">else if<condition pos:start="407:21" pos:end="407:23">(<expr pos:start="407:22" pos:end="407:22"><name pos:start="407:22" pos:end="407:22">t</name></expr>)</condition><block pos:start="407:24" pos:end="411:13">{<block_content pos:start="409:17" pos:end="409:27">

                <expr_stmt pos:start="409:17" pos:end="409:27"><expr pos:start="409:17" pos:end="409:26"><name pos:start="409:17" pos:end="409:22">colors</name> <operator pos:start="409:24" pos:end="409:24">=</operator> <name pos:start="409:26" pos:end="409:26">t</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:33"><expr pos:start="415:9" pos:end="415:32"><name pos:start="415:9" pos:end="415:11">buf</name> <operator pos:start="415:13" pos:end="415:13">=</operator> <name pos:start="415:15" pos:end="415:18">buf0</name> <operator pos:start="415:20" pos:end="415:20">+</operator> <literal type="number" pos:start="415:22" pos:end="415:25">14</literal> <operator pos:start="415:25" pos:end="415:25">+</operator> <name pos:start="415:27" pos:end="415:32">ihsize</name></expr>;</expr_stmt> <comment type="line" pos:start="415:35" pos:end="415:52">//palette location</comment>

        <if_stmt pos:start="417:9" pos:end="429:9"><if pos:start="417:9" pos:end="423:9">if<condition pos:start="417:11" pos:end="417:45">(<expr pos:start="417:12" pos:end="417:44"><operator pos:start="417:12" pos:end="417:12">(</operator><name pos:start="417:13" pos:end="417:17">hsize</name><operator pos:start="417:18" pos:end="417:18">-</operator><name pos:start="417:19" pos:end="417:24">ihsize</name><operator pos:start="417:25" pos:end="417:25">-</operator><literal type="number" pos:start="417:26" pos:end="417:27">14</literal><operator pos:start="417:28" pos:end="417:28">)</operator> <operator pos:start="417:30" pos:end="417:30">&lt;</operator> <operator pos:start="417:32" pos:end="417:32">(</operator><name pos:start="417:33" pos:end="417:38">colors</name> <operator pos:start="417:40" pos:end="417:41">&lt;&lt;</operator> <literal type="number" pos:start="417:43" pos:end="417:43">2</literal><operator pos:start="417:44" pos:end="417:44">)</operator></expr>)</condition><block pos:start="417:46" pos:end="423:9">{<block_content pos:start="419:13" pos:end="421:71"> <comment type="line" pos:start="417:48" pos:end="417:88">// OS/2 bitmap, 3 bytes per palette entry</comment>

            <for pos:start="419:13" pos:end="421:71">for<control pos:start="419:16" pos:end="419:39">(<init pos:start="419:17" pos:end="419:22"><expr pos:start="419:17" pos:end="419:21"><name pos:start="419:17" pos:end="419:17">i</name> <operator pos:start="419:19" pos:end="419:19">=</operator> <literal type="number" pos:start="419:21" pos:end="419:21">0</literal></expr>;</init> <condition pos:start="419:24" pos:end="419:34"><expr pos:start="419:24" pos:end="419:33"><name pos:start="419:24" pos:end="419:24">i</name> <operator pos:start="419:26" pos:end="419:26">&lt;</operator> <name pos:start="419:28" pos:end="419:33">colors</name></expr>;</condition> <incr pos:start="419:36" pos:end="419:38"><expr pos:start="419:36" pos:end="419:38"><name pos:start="419:36" pos:end="419:36">i</name><operator pos:start="419:37" pos:end="419:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="421:17" pos:end="421:71"><block_content pos:start="421:17" pos:end="421:71">

                <expr_stmt pos:start="421:17" pos:end="421:71"><expr pos:start="421:17" pos:end="421:70"><operator pos:start="421:17" pos:end="421:17">(</operator><operator pos:start="421:18" pos:end="421:18">(</operator><name pos:start="421:19" pos:end="421:26">uint32_t</name><operator pos:start="421:27" pos:end="421:27">*</operator><operator pos:start="421:28" pos:end="421:28">)</operator><name pos:start="421:29" pos:end="421:38"><name pos:start="421:29" pos:end="421:29">p</name><operator pos:start="421:30" pos:end="421:31">-&gt;</operator><name pos:start="421:32" pos:end="421:35">data</name><index pos:start="421:36" pos:end="421:38">[<expr pos:start="421:37" pos:end="421:37"><literal type="number" pos:start="421:37" pos:end="421:37">1</literal></expr>]</index></name><operator pos:start="421:39" pos:end="421:39">)</operator><index pos:start="421:40" pos:end="421:42">[<expr pos:start="421:41" pos:end="421:41"><name pos:start="421:41" pos:end="421:41">i</name></expr>]</index> <operator pos:start="421:44" pos:end="421:44">=</operator> <call pos:start="421:46" pos:end="421:70"><name pos:start="421:46" pos:end="421:64">bytestream_get_le24</name><argument_list pos:start="421:65" pos:end="421:70">(<argument pos:start="421:66" pos:end="421:69"><expr pos:start="421:66" pos:end="421:69"><operator pos:start="421:66" pos:end="421:66">&amp;</operator><name pos:start="421:67" pos:end="421:69">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if><else pos:start="423:10" pos:end="429:9">else<block pos:start="423:14" pos:end="429:9">{<block_content pos:start="425:13" pos:end="427:71">

            <for pos:start="425:13" pos:end="427:71">for<control pos:start="425:16" pos:end="425:39">(<init pos:start="425:17" pos:end="425:22"><expr pos:start="425:17" pos:end="425:21"><name pos:start="425:17" pos:end="425:17">i</name> <operator pos:start="425:19" pos:end="425:19">=</operator> <literal type="number" pos:start="425:21" pos:end="425:21">0</literal></expr>;</init> <condition pos:start="425:24" pos:end="425:34"><expr pos:start="425:24" pos:end="425:33"><name pos:start="425:24" pos:end="425:24">i</name> <operator pos:start="425:26" pos:end="425:26">&lt;</operator> <name pos:start="425:28" pos:end="425:33">colors</name></expr>;</condition> <incr pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:36">i</name><operator pos:start="425:37" pos:end="425:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="427:17" pos:end="427:71"><block_content pos:start="427:17" pos:end="427:71">

                <expr_stmt pos:start="427:17" pos:end="427:71"><expr pos:start="427:17" pos:end="427:70"><operator pos:start="427:17" pos:end="427:17">(</operator><operator pos:start="427:18" pos:end="427:18">(</operator><name pos:start="427:19" pos:end="427:26">uint32_t</name><operator pos:start="427:27" pos:end="427:27">*</operator><operator pos:start="427:28" pos:end="427:28">)</operator><name pos:start="427:29" pos:end="427:38"><name pos:start="427:29" pos:end="427:29">p</name><operator pos:start="427:30" pos:end="427:31">-&gt;</operator><name pos:start="427:32" pos:end="427:35">data</name><index pos:start="427:36" pos:end="427:38">[<expr pos:start="427:37" pos:end="427:37"><literal type="number" pos:start="427:37" pos:end="427:37">1</literal></expr>]</index></name><operator pos:start="427:39" pos:end="427:39">)</operator><index pos:start="427:40" pos:end="427:42">[<expr pos:start="427:41" pos:end="427:41"><name pos:start="427:41" pos:end="427:41">i</name></expr>]</index> <operator pos:start="427:44" pos:end="427:44">=</operator> <call pos:start="427:46" pos:end="427:70"><name pos:start="427:46" pos:end="427:64">bytestream_get_le32</name><argument_list pos:start="427:65" pos:end="427:70">(<argument pos:start="427:66" pos:end="427:69"><expr pos:start="427:66" pos:end="427:69"><operator pos:start="427:66" pos:end="427:66">&amp;</operator><name pos:start="427:67" pos:end="427:69">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:27"><expr pos:start="431:9" pos:end="431:26"><name pos:start="431:9" pos:end="431:11">buf</name> <operator pos:start="431:13" pos:end="431:13">=</operator> <name pos:start="431:15" pos:end="431:18">buf0</name> <operator pos:start="431:20" pos:end="431:20">+</operator> <name pos:start="431:22" pos:end="431:26">hsize</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="435:5" pos:end="597:5"><if pos:start="435:5" pos:end="455:5">if<condition pos:start="435:7" pos:end="435:44">(<expr pos:start="435:8" pos:end="435:43"><name pos:start="435:8" pos:end="435:11">comp</name> <operator pos:start="435:13" pos:end="435:14">==</operator> <name pos:start="435:16" pos:end="435:23">BMP_RLE4</name> <operator pos:start="435:25" pos:end="435:26">||</operator> <name pos:start="435:28" pos:end="435:31">comp</name> <operator pos:start="435:33" pos:end="435:34">==</operator> <name pos:start="435:36" pos:end="435:43">BMP_RLE8</name></expr>)</condition><block pos:start="435:45" pos:end="455:5">{<block_content pos:start="437:9" pos:end="453:9">

        <if_stmt pos:start="437:9" pos:end="443:9"><if pos:start="437:9" pos:end="443:9">if<condition pos:start="437:11" pos:end="437:22">(<expr pos:start="437:12" pos:end="437:21"><name pos:start="437:12" pos:end="437:17">height</name> <operator pos:start="437:19" pos:end="437:19">&lt;</operator> <literal type="number" pos:start="437:21" pos:end="437:21">0</literal></expr>)</condition><block pos:start="437:23" pos:end="443:9">{<block_content pos:start="439:13" pos:end="441:45">

            <expr_stmt pos:start="439:13" pos:end="439:63"><expr pos:start="439:13" pos:end="439:62"><name pos:start="439:13" pos:end="439:22"><name pos:start="439:13" pos:end="439:13">p</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:19">data</name><index pos:start="439:20" pos:end="439:22">[<expr pos:start="439:21" pos:end="439:21"><literal type="number" pos:start="439:21" pos:end="439:21">0</literal></expr>]</index></name> <operator pos:start="439:24" pos:end="439:25">+=</operator> <name pos:start="439:27" pos:end="439:40"><name pos:start="439:27" pos:end="439:27">p</name><operator pos:start="439:28" pos:end="439:29">-&gt;</operator><name pos:start="439:30" pos:end="439:37">linesize</name><index pos:start="439:38" pos:end="439:40">[<expr pos:start="439:39" pos:end="439:39"><literal type="number" pos:start="439:39" pos:end="439:39">0</literal></expr>]</index></name> <operator pos:start="439:42" pos:end="439:42">*</operator> <operator pos:start="439:44" pos:end="439:44">(</operator><name pos:start="439:45" pos:end="439:57"><name pos:start="439:45" pos:end="439:49">avctx</name><operator pos:start="439:50" pos:end="439:51">-&gt;</operator><name pos:start="439:52" pos:end="439:57">height</name></name> <operator pos:start="439:59" pos:end="439:59">-</operator> <literal type="number" pos:start="439:61" pos:end="439:61">1</literal><operator pos:start="439:62" pos:end="439:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:45"><expr pos:start="441:13" pos:end="441:44"><name pos:start="441:13" pos:end="441:26"><name pos:start="441:13" pos:end="441:13">p</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:23">linesize</name><index pos:start="441:24" pos:end="441:26">[<expr pos:start="441:25" pos:end="441:25"><literal type="number" pos:start="441:25" pos:end="441:25">0</literal></expr>]</index></name> <operator pos:start="441:28" pos:end="441:28">=</operator> <operator pos:start="441:30" pos:end="441:30">-</operator><name pos:start="441:31" pos:end="441:44"><name pos:start="441:31" pos:end="441:31">p</name><operator pos:start="441:32" pos:end="441:33">-&gt;</operator><name pos:start="441:34" pos:end="441:41">linesize</name><index pos:start="441:42" pos:end="441:44">[<expr pos:start="441:43" pos:end="441:43"><literal type="number" pos:start="441:43" pos:end="441:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:65"><expr pos:start="445:9" pos:end="445:64"><call pos:start="445:9" pos:end="445:64"><name pos:start="445:9" pos:end="445:23">ff_msrle_decode</name><argument_list pos:start="445:24" pos:end="445:64">(<argument pos:start="445:25" pos:end="445:29"><expr pos:start="445:25" pos:end="445:29"><name pos:start="445:25" pos:end="445:29">avctx</name></expr></argument>, <argument pos:start="445:32" pos:end="445:44"><expr pos:start="445:32" pos:end="445:44"><operator pos:start="445:32" pos:end="445:32">(</operator><name pos:start="445:33" pos:end="445:41">AVPicture</name><operator pos:start="445:42" pos:end="445:42">*</operator><operator pos:start="445:43" pos:end="445:43">)</operator><name pos:start="445:44" pos:end="445:44">p</name></expr></argument>, <argument pos:start="445:47" pos:end="445:51"><expr pos:start="445:47" pos:end="445:51"><name pos:start="445:47" pos:end="445:51">depth</name></expr></argument>, <argument pos:start="445:54" pos:end="445:56"><expr pos:start="445:54" pos:end="445:56"><name pos:start="445:54" pos:end="445:56">buf</name></expr></argument>, <argument pos:start="445:59" pos:end="445:63"><expr pos:start="445:59" pos:end="445:63"><name pos:start="445:59" pos:end="445:63">dsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="447:9" pos:end="453:9"><if pos:start="447:9" pos:end="453:9">if<condition pos:start="447:11" pos:end="447:22">(<expr pos:start="447:12" pos:end="447:21"><name pos:start="447:12" pos:end="447:17">height</name> <operator pos:start="447:19" pos:end="447:19">&lt;</operator> <literal type="number" pos:start="447:21" pos:end="447:21">0</literal></expr>)</condition><block pos:start="447:23" pos:end="453:9">{<block_content pos:start="449:13" pos:end="451:45">

            <expr_stmt pos:start="449:13" pos:end="449:63"><expr pos:start="449:13" pos:end="449:62"><name pos:start="449:13" pos:end="449:22"><name pos:start="449:13" pos:end="449:13">p</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:19">data</name><index pos:start="449:20" pos:end="449:22">[<expr pos:start="449:21" pos:end="449:21"><literal type="number" pos:start="449:21" pos:end="449:21">0</literal></expr>]</index></name> <operator pos:start="449:24" pos:end="449:25">+=</operator> <name pos:start="449:27" pos:end="449:40"><name pos:start="449:27" pos:end="449:27">p</name><operator pos:start="449:28" pos:end="449:29">-&gt;</operator><name pos:start="449:30" pos:end="449:37">linesize</name><index pos:start="449:38" pos:end="449:40">[<expr pos:start="449:39" pos:end="449:39"><literal type="number" pos:start="449:39" pos:end="449:39">0</literal></expr>]</index></name> <operator pos:start="449:42" pos:end="449:42">*</operator> <operator pos:start="449:44" pos:end="449:44">(</operator><name pos:start="449:45" pos:end="449:57"><name pos:start="449:45" pos:end="449:49">avctx</name><operator pos:start="449:50" pos:end="449:51">-&gt;</operator><name pos:start="449:52" pos:end="449:57">height</name></name> <operator pos:start="449:59" pos:end="449:59">-</operator> <literal type="number" pos:start="449:61" pos:end="449:61">1</literal><operator pos:start="449:62" pos:end="449:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:45"><expr pos:start="451:13" pos:end="451:44"><name pos:start="451:13" pos:end="451:26"><name pos:start="451:13" pos:end="451:13">p</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:23">linesize</name><index pos:start="451:24" pos:end="451:26">[<expr pos:start="451:25" pos:end="451:25"><literal type="number" pos:start="451:25" pos:end="451:25">0</literal></expr>]</index></name> <operator pos:start="451:28" pos:end="451:28">=</operator> <operator pos:start="451:30" pos:end="451:30">-</operator><name pos:start="451:31" pos:end="451:44"><name pos:start="451:31" pos:end="451:31">p</name><operator pos:start="451:32" pos:end="451:33">-&gt;</operator><name pos:start="451:34" pos:end="451:41">linesize</name><index pos:start="451:42" pos:end="451:44">[<expr pos:start="451:43" pos:end="451:43"><literal type="number" pos:start="451:43" pos:end="451:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="455:6" pos:end="597:5">else<block pos:start="455:10" pos:end="597:5">{<block_content pos:start="457:9" pos:end="595:9">

        <switch pos:start="457:9" pos:end="595:9">switch<condition pos:start="457:15" pos:end="457:21">(<expr pos:start="457:16" pos:end="457:20"><name pos:start="457:16" pos:end="457:20">depth</name></expr>)</condition><block pos:start="457:22" pos:end="595:9">{<block_content pos:start="459:9" pos:end="593:22">

        <case pos:start="459:9" pos:end="459:15">case <expr pos:start="459:14" pos:end="459:14"><literal type="number" pos:start="459:14" pos:end="459:14">1</literal></expr>:</case>

            <for pos:start="461:13" pos:end="489:13">for <control pos:start="461:17" pos:end="461:47">(<init pos:start="461:18" pos:end="461:23"><expr pos:start="461:18" pos:end="461:22"><name pos:start="461:18" pos:end="461:18">i</name> <operator pos:start="461:20" pos:end="461:20">=</operator> <literal type="number" pos:start="461:22" pos:end="461:22">0</literal></expr>;</init> <condition pos:start="461:25" pos:end="461:42"><expr pos:start="461:25" pos:end="461:41"><name pos:start="461:25" pos:end="461:25">i</name> <operator pos:start="461:27" pos:end="461:27">&lt;</operator> <name pos:start="461:29" pos:end="461:41"><name pos:start="461:29" pos:end="461:33">avctx</name><operator pos:start="461:34" pos:end="461:35">-&gt;</operator><name pos:start="461:36" pos:end="461:41">height</name></name></expr>;</condition> <incr pos:start="461:44" pos:end="461:46"><expr pos:start="461:44" pos:end="461:46"><name pos:start="461:44" pos:end="461:44">i</name><operator pos:start="461:45" pos:end="461:46">++</operator></expr></incr>)</control> <block pos:start="461:49" pos:end="489:13">{<block_content pos:start="463:17" pos:end="487:32">

                <decl_stmt pos:start="463:17" pos:end="463:22"><decl pos:start="463:17" pos:end="463:21"><type pos:start="463:17" pos:end="463:19"><name pos:start="463:17" pos:end="463:19">int</name></type> <name pos:start="463:21" pos:end="463:21">j</name></decl>;</decl_stmt>

                <for pos:start="465:17" pos:end="483:17">for <control pos:start="465:21" pos:end="465:39">(<init pos:start="465:22" pos:end="465:27"><expr pos:start="465:22" pos:end="465:26"><name pos:start="465:22" pos:end="465:22">j</name> <operator pos:start="465:24" pos:end="465:24">=</operator> <literal type="number" pos:start="465:26" pos:end="465:26">0</literal></expr>;</init> <condition pos:start="465:29" pos:end="465:34"><expr pos:start="465:29" pos:end="465:33"><name pos:start="465:29" pos:end="465:29">j</name> <operator pos:start="465:31" pos:end="465:31">&lt;</operator> <name pos:start="465:33" pos:end="465:33">n</name></expr>;</condition> <incr pos:start="465:36" pos:end="465:38"><expr pos:start="465:36" pos:end="465:38"><name pos:start="465:36" pos:end="465:36">j</name><operator pos:start="465:37" pos:end="465:38">++</operator></expr></incr>)</control> <block pos:start="465:41" pos:end="483:17">{<block_content pos:start="467:21" pos:end="481:51">

                    <expr_stmt pos:start="467:21" pos:end="467:46"><expr pos:start="467:21" pos:end="467:45"><name pos:start="467:21" pos:end="467:30"><name pos:start="467:21" pos:end="467:23">ptr</name><index pos:start="467:24" pos:end="467:30">[<expr pos:start="467:25" pos:end="467:29"><name pos:start="467:25" pos:end="467:25">j</name><operator pos:start="467:26" pos:end="467:26">*</operator><literal type="number" pos:start="467:27" pos:end="467:27">8</literal><operator pos:start="467:28" pos:end="467:28">+</operator><literal type="number" pos:start="467:29" pos:end="467:29">0</literal></expr>]</index></name> <operator pos:start="467:32" pos:end="467:32">=</operator>  <name pos:start="467:35" pos:end="467:40"><name pos:start="467:35" pos:end="467:37">buf</name><index pos:start="467:38" pos:end="467:40">[<expr pos:start="467:39" pos:end="467:39"><name pos:start="467:39" pos:end="467:39">j</name></expr>]</index></name> <operator pos:start="467:42" pos:end="467:43">&gt;&gt;</operator> <literal type="number" pos:start="467:45" pos:end="467:45">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="469:21" pos:end="469:51"><expr pos:start="469:21" pos:end="469:50"><name pos:start="469:21" pos:end="469:30"><name pos:start="469:21" pos:end="469:23">ptr</name><index pos:start="469:24" pos:end="469:30">[<expr pos:start="469:25" pos:end="469:29"><name pos:start="469:25" pos:end="469:25">j</name><operator pos:start="469:26" pos:end="469:26">*</operator><literal type="number" pos:start="469:27" pos:end="469:27">8</literal><operator pos:start="469:28" pos:end="469:28">+</operator><literal type="number" pos:start="469:29" pos:end="469:29">1</literal></expr>]</index></name> <operator pos:start="469:32" pos:end="469:32">=</operator> <operator pos:start="469:34" pos:end="469:34">(</operator><name pos:start="469:35" pos:end="469:40"><name pos:start="469:35" pos:end="469:37">buf</name><index pos:start="469:38" pos:end="469:40">[<expr pos:start="469:39" pos:end="469:39"><name pos:start="469:39" pos:end="469:39">j</name></expr>]</index></name> <operator pos:start="469:42" pos:end="469:43">&gt;&gt;</operator> <literal type="number" pos:start="469:45" pos:end="469:45">6</literal><operator pos:start="469:46" pos:end="469:46">)</operator> <operator pos:start="469:48" pos:end="469:48">&amp;</operator> <literal type="number" pos:start="469:50" pos:end="469:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:51"><expr pos:start="471:21" pos:end="471:50"><name pos:start="471:21" pos:end="471:30"><name pos:start="471:21" pos:end="471:23">ptr</name><index pos:start="471:24" pos:end="471:30">[<expr pos:start="471:25" pos:end="471:29"><name pos:start="471:25" pos:end="471:25">j</name><operator pos:start="471:26" pos:end="471:26">*</operator><literal type="number" pos:start="471:27" pos:end="471:27">8</literal><operator pos:start="471:28" pos:end="471:28">+</operator><literal type="number" pos:start="471:29" pos:end="471:29">2</literal></expr>]</index></name> <operator pos:start="471:32" pos:end="471:32">=</operator> <operator pos:start="471:34" pos:end="471:34">(</operator><name pos:start="471:35" pos:end="471:40"><name pos:start="471:35" pos:end="471:37">buf</name><index pos:start="471:38" pos:end="471:40">[<expr pos:start="471:39" pos:end="471:39"><name pos:start="471:39" pos:end="471:39">j</name></expr>]</index></name> <operator pos:start="471:42" pos:end="471:43">&gt;&gt;</operator> <literal type="number" pos:start="471:45" pos:end="471:45">5</literal><operator pos:start="471:46" pos:end="471:46">)</operator> <operator pos:start="471:48" pos:end="471:48">&amp;</operator> <literal type="number" pos:start="471:50" pos:end="471:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="473:21" pos:end="473:51"><expr pos:start="473:21" pos:end="473:50"><name pos:start="473:21" pos:end="473:30"><name pos:start="473:21" pos:end="473:23">ptr</name><index pos:start="473:24" pos:end="473:30">[<expr pos:start="473:25" pos:end="473:29"><name pos:start="473:25" pos:end="473:25">j</name><operator pos:start="473:26" pos:end="473:26">*</operator><literal type="number" pos:start="473:27" pos:end="473:27">8</literal><operator pos:start="473:28" pos:end="473:28">+</operator><literal type="number" pos:start="473:29" pos:end="473:29">3</literal></expr>]</index></name> <operator pos:start="473:32" pos:end="473:32">=</operator> <operator pos:start="473:34" pos:end="473:34">(</operator><name pos:start="473:35" pos:end="473:40"><name pos:start="473:35" pos:end="473:37">buf</name><index pos:start="473:38" pos:end="473:40">[<expr pos:start="473:39" pos:end="473:39"><name pos:start="473:39" pos:end="473:39">j</name></expr>]</index></name> <operator pos:start="473:42" pos:end="473:43">&gt;&gt;</operator> <literal type="number" pos:start="473:45" pos:end="473:45">4</literal><operator pos:start="473:46" pos:end="473:46">)</operator> <operator pos:start="473:48" pos:end="473:48">&amp;</operator> <literal type="number" pos:start="473:50" pos:end="473:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="475:21" pos:end="475:51"><expr pos:start="475:21" pos:end="475:50"><name pos:start="475:21" pos:end="475:30"><name pos:start="475:21" pos:end="475:23">ptr</name><index pos:start="475:24" pos:end="475:30">[<expr pos:start="475:25" pos:end="475:29"><name pos:start="475:25" pos:end="475:25">j</name><operator pos:start="475:26" pos:end="475:26">*</operator><literal type="number" pos:start="475:27" pos:end="475:27">8</literal><operator pos:start="475:28" pos:end="475:28">+</operator><literal type="number" pos:start="475:29" pos:end="475:29">4</literal></expr>]</index></name> <operator pos:start="475:32" pos:end="475:32">=</operator> <operator pos:start="475:34" pos:end="475:34">(</operator><name pos:start="475:35" pos:end="475:40"><name pos:start="475:35" pos:end="475:37">buf</name><index pos:start="475:38" pos:end="475:40">[<expr pos:start="475:39" pos:end="475:39"><name pos:start="475:39" pos:end="475:39">j</name></expr>]</index></name> <operator pos:start="475:42" pos:end="475:43">&gt;&gt;</operator> <literal type="number" pos:start="475:45" pos:end="475:45">3</literal><operator pos:start="475:46" pos:end="475:46">)</operator> <operator pos:start="475:48" pos:end="475:48">&amp;</operator> <literal type="number" pos:start="475:50" pos:end="475:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="477:21" pos:end="477:51"><expr pos:start="477:21" pos:end="477:50"><name pos:start="477:21" pos:end="477:30"><name pos:start="477:21" pos:end="477:23">ptr</name><index pos:start="477:24" pos:end="477:30">[<expr pos:start="477:25" pos:end="477:29"><name pos:start="477:25" pos:end="477:25">j</name><operator pos:start="477:26" pos:end="477:26">*</operator><literal type="number" pos:start="477:27" pos:end="477:27">8</literal><operator pos:start="477:28" pos:end="477:28">+</operator><literal type="number" pos:start="477:29" pos:end="477:29">5</literal></expr>]</index></name> <operator pos:start="477:32" pos:end="477:32">=</operator> <operator pos:start="477:34" pos:end="477:34">(</operator><name pos:start="477:35" pos:end="477:40"><name pos:start="477:35" pos:end="477:37">buf</name><index pos:start="477:38" pos:end="477:40">[<expr pos:start="477:39" pos:end="477:39"><name pos:start="477:39" pos:end="477:39">j</name></expr>]</index></name> <operator pos:start="477:42" pos:end="477:43">&gt;&gt;</operator> <literal type="number" pos:start="477:45" pos:end="477:45">2</literal><operator pos:start="477:46" pos:end="477:46">)</operator> <operator pos:start="477:48" pos:end="477:48">&amp;</operator> <literal type="number" pos:start="477:50" pos:end="477:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:51"><expr pos:start="479:21" pos:end="479:50"><name pos:start="479:21" pos:end="479:30"><name pos:start="479:21" pos:end="479:23">ptr</name><index pos:start="479:24" pos:end="479:30">[<expr pos:start="479:25" pos:end="479:29"><name pos:start="479:25" pos:end="479:25">j</name><operator pos:start="479:26" pos:end="479:26">*</operator><literal type="number" pos:start="479:27" pos:end="479:27">8</literal><operator pos:start="479:28" pos:end="479:28">+</operator><literal type="number" pos:start="479:29" pos:end="479:29">6</literal></expr>]</index></name> <operator pos:start="479:32" pos:end="479:32">=</operator> <operator pos:start="479:34" pos:end="479:34">(</operator><name pos:start="479:35" pos:end="479:40"><name pos:start="479:35" pos:end="479:37">buf</name><index pos:start="479:38" pos:end="479:40">[<expr pos:start="479:39" pos:end="479:39"><name pos:start="479:39" pos:end="479:39">j</name></expr>]</index></name> <operator pos:start="479:42" pos:end="479:43">&gt;&gt;</operator> <literal type="number" pos:start="479:45" pos:end="479:45">1</literal><operator pos:start="479:46" pos:end="479:46">)</operator> <operator pos:start="479:48" pos:end="479:48">&amp;</operator> <literal type="number" pos:start="479:50" pos:end="479:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="481:21" pos:end="481:51"><expr pos:start="481:21" pos:end="481:50"><name pos:start="481:21" pos:end="481:30"><name pos:start="481:21" pos:end="481:23">ptr</name><index pos:start="481:24" pos:end="481:30">[<expr pos:start="481:25" pos:end="481:29"><name pos:start="481:25" pos:end="481:25">j</name><operator pos:start="481:26" pos:end="481:26">*</operator><literal type="number" pos:start="481:27" pos:end="481:27">8</literal><operator pos:start="481:28" pos:end="481:28">+</operator><literal type="number" pos:start="481:29" pos:end="481:29">7</literal></expr>]</index></name> <operator pos:start="481:32" pos:end="481:32">=</operator>  <name pos:start="481:35" pos:end="481:40"><name pos:start="481:35" pos:end="481:37">buf</name><index pos:start="481:38" pos:end="481:40">[<expr pos:start="481:39" pos:end="481:39"><name pos:start="481:39" pos:end="481:39">j</name></expr>]</index></name>       <operator pos:start="481:48" pos:end="481:48">&amp;</operator> <literal type="number" pos:start="481:50" pos:end="481:50">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="485:17" pos:end="485:25"><expr pos:start="485:17" pos:end="485:24"><name pos:start="485:17" pos:end="485:19">buf</name> <operator pos:start="485:21" pos:end="485:22">+=</operator> <name pos:start="485:24" pos:end="485:24">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:32"><expr pos:start="487:17" pos:end="487:31"><name pos:start="487:17" pos:end="487:19">ptr</name> <operator pos:start="487:21" pos:end="487:22">+=</operator> <name pos:start="487:24" pos:end="487:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="491:13" pos:end="491:18">break;</break>

        <case pos:start="493:9" pos:end="493:15">case <expr pos:start="493:14" pos:end="493:14"><literal type="number" pos:start="493:14" pos:end="493:14">8</literal></expr>:</case>

        <case pos:start="495:9" pos:end="495:16">case <expr pos:start="495:14" pos:end="495:15"><literal type="number" pos:start="495:14" pos:end="495:15">24</literal></expr>:</case>

            <for pos:start="497:13" pos:end="505:13">for<control pos:start="497:16" pos:end="497:46">(<init pos:start="497:17" pos:end="497:22"><expr pos:start="497:17" pos:end="497:21"><name pos:start="497:17" pos:end="497:17">i</name> <operator pos:start="497:19" pos:end="497:19">=</operator> <literal type="number" pos:start="497:21" pos:end="497:21">0</literal></expr>;</init> <condition pos:start="497:24" pos:end="497:41"><expr pos:start="497:24" pos:end="497:40"><name pos:start="497:24" pos:end="497:24">i</name> <operator pos:start="497:26" pos:end="497:26">&lt;</operator> <name pos:start="497:28" pos:end="497:40"><name pos:start="497:28" pos:end="497:32">avctx</name><operator pos:start="497:33" pos:end="497:34">-&gt;</operator><name pos:start="497:35" pos:end="497:40">height</name></name></expr>;</condition> <incr pos:start="497:43" pos:end="497:45"><expr pos:start="497:43" pos:end="497:45"><name pos:start="497:43" pos:end="497:43">i</name><operator pos:start="497:44" pos:end="497:45">++</operator></expr></incr>)</control><block pos:start="497:47" pos:end="505:13">{<block_content pos:start="499:17" pos:end="503:32">

                <expr_stmt pos:start="499:17" pos:end="499:36"><expr pos:start="499:17" pos:end="499:35"><call pos:start="499:17" pos:end="499:35"><name pos:start="499:17" pos:end="499:22">memcpy</name><argument_list pos:start="499:23" pos:end="499:35">(<argument pos:start="499:24" pos:end="499:26"><expr pos:start="499:24" pos:end="499:26"><name pos:start="499:24" pos:end="499:26">ptr</name></expr></argument>, <argument pos:start="499:29" pos:end="499:31"><expr pos:start="499:29" pos:end="499:31"><name pos:start="499:29" pos:end="499:31">buf</name></expr></argument>, <argument pos:start="499:34" pos:end="499:34"><expr pos:start="499:34" pos:end="499:34"><name pos:start="499:34" pos:end="499:34">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:25"><expr pos:start="501:17" pos:end="501:24"><name pos:start="501:17" pos:end="501:19">buf</name> <operator pos:start="501:21" pos:end="501:22">+=</operator> <name pos:start="501:24" pos:end="501:24">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="503:32"><expr pos:start="503:17" pos:end="503:31"><name pos:start="503:17" pos:end="503:19">ptr</name> <operator pos:start="503:21" pos:end="503:22">+=</operator> <name pos:start="503:24" pos:end="503:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="507:13" pos:end="507:18">break;</break>

        <case pos:start="509:9" pos:end="509:15">case <expr pos:start="509:14" pos:end="509:14"><literal type="number" pos:start="509:14" pos:end="509:14">4</literal></expr>:</case>

            <for pos:start="511:13" pos:end="527:13">for<control pos:start="511:16" pos:end="511:46">(<init pos:start="511:17" pos:end="511:22"><expr pos:start="511:17" pos:end="511:21"><name pos:start="511:17" pos:end="511:17">i</name> <operator pos:start="511:19" pos:end="511:19">=</operator> <literal type="number" pos:start="511:21" pos:end="511:21">0</literal></expr>;</init> <condition pos:start="511:24" pos:end="511:41"><expr pos:start="511:24" pos:end="511:40"><name pos:start="511:24" pos:end="511:24">i</name> <operator pos:start="511:26" pos:end="511:26">&lt;</operator> <name pos:start="511:28" pos:end="511:40"><name pos:start="511:28" pos:end="511:32">avctx</name><operator pos:start="511:33" pos:end="511:34">-&gt;</operator><name pos:start="511:35" pos:end="511:40">height</name></name></expr>;</condition> <incr pos:start="511:43" pos:end="511:45"><expr pos:start="511:43" pos:end="511:45"><name pos:start="511:43" pos:end="511:43">i</name><operator pos:start="511:44" pos:end="511:45">++</operator></expr></incr>)</control><block pos:start="511:47" pos:end="527:13">{<block_content pos:start="513:17" pos:end="525:32">

                <decl_stmt pos:start="513:17" pos:end="513:22"><decl pos:start="513:17" pos:end="513:21"><type pos:start="513:17" pos:end="513:19"><name pos:start="513:17" pos:end="513:19">int</name></type> <name pos:start="513:21" pos:end="513:21">j</name></decl>;</decl_stmt>

                <for pos:start="515:17" pos:end="521:17">for<control pos:start="515:20" pos:end="515:38">(<init pos:start="515:21" pos:end="515:26"><expr pos:start="515:21" pos:end="515:25"><name pos:start="515:21" pos:end="515:21">j</name> <operator pos:start="515:23" pos:end="515:23">=</operator> <literal type="number" pos:start="515:25" pos:end="515:25">0</literal></expr>;</init> <condition pos:start="515:28" pos:end="515:33"><expr pos:start="515:28" pos:end="515:32"><name pos:start="515:28" pos:end="515:28">j</name> <operator pos:start="515:30" pos:end="515:30">&lt;</operator> <name pos:start="515:32" pos:end="515:32">n</name></expr>;</condition> <incr pos:start="515:35" pos:end="515:37"><expr pos:start="515:35" pos:end="515:37"><name pos:start="515:35" pos:end="515:35">j</name><operator pos:start="515:36" pos:end="515:37">++</operator></expr></incr>)</control><block pos:start="515:39" pos:end="521:17">{<block_content pos:start="517:21" pos:end="519:46">

                    <expr_stmt pos:start="517:21" pos:end="517:53"><expr pos:start="517:21" pos:end="517:52"><name pos:start="517:21" pos:end="517:30"><name pos:start="517:21" pos:end="517:23">ptr</name><index pos:start="517:24" pos:end="517:30">[<expr pos:start="517:25" pos:end="517:29"><name pos:start="517:25" pos:end="517:25">j</name><operator pos:start="517:26" pos:end="517:26">*</operator><literal type="number" pos:start="517:27" pos:end="517:27">2</literal><operator pos:start="517:28" pos:end="517:28">+</operator><literal type="number" pos:start="517:29" pos:end="517:29">0</literal></expr>]</index></name> <operator pos:start="517:32" pos:end="517:32">=</operator> <operator pos:start="517:34" pos:end="517:34">(</operator><name pos:start="517:35" pos:end="517:40"><name pos:start="517:35" pos:end="517:37">buf</name><index pos:start="517:38" pos:end="517:40">[<expr pos:start="517:39" pos:end="517:39"><name pos:start="517:39" pos:end="517:39">j</name></expr>]</index></name> <operator pos:start="517:42" pos:end="517:43">&gt;&gt;</operator> <literal type="number" pos:start="517:45" pos:end="517:45">4</literal><operator pos:start="517:46" pos:end="517:46">)</operator> <operator pos:start="517:48" pos:end="517:48">&amp;</operator> <literal type="number" pos:start="517:50" pos:end="517:52">0xF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="519:21" pos:end="519:46"><expr pos:start="519:21" pos:end="519:45"><name pos:start="519:21" pos:end="519:30"><name pos:start="519:21" pos:end="519:23">ptr</name><index pos:start="519:24" pos:end="519:30">[<expr pos:start="519:25" pos:end="519:29"><name pos:start="519:25" pos:end="519:25">j</name><operator pos:start="519:26" pos:end="519:26">*</operator><literal type="number" pos:start="519:27" pos:end="519:27">2</literal><operator pos:start="519:28" pos:end="519:28">+</operator><literal type="number" pos:start="519:29" pos:end="519:29">1</literal></expr>]</index></name> <operator pos:start="519:32" pos:end="519:32">=</operator> <name pos:start="519:34" pos:end="519:39"><name pos:start="519:34" pos:end="519:36">buf</name><index pos:start="519:37" pos:end="519:39">[<expr pos:start="519:38" pos:end="519:38"><name pos:start="519:38" pos:end="519:38">j</name></expr>]</index></name> <operator pos:start="519:41" pos:end="519:41">&amp;</operator> <literal type="number" pos:start="519:43" pos:end="519:45">0xF</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="523:17" pos:end="523:25"><expr pos:start="523:17" pos:end="523:24"><name pos:start="523:17" pos:end="523:19">buf</name> <operator pos:start="523:21" pos:end="523:22">+=</operator> <name pos:start="523:24" pos:end="523:24">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="525:17" pos:end="525:32"><expr pos:start="525:17" pos:end="525:31"><name pos:start="525:17" pos:end="525:19">ptr</name> <operator pos:start="525:21" pos:end="525:22">+=</operator> <name pos:start="525:24" pos:end="525:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="529:13" pos:end="529:18">break;</break>

        <case pos:start="531:9" pos:end="531:16">case <expr pos:start="531:14" pos:end="531:15"><literal type="number" pos:start="531:14" pos:end="531:15">16</literal></expr>:</case>

            <for pos:start="533:13" pos:end="551:13">for<control pos:start="533:16" pos:end="533:46">(<init pos:start="533:17" pos:end="533:22"><expr pos:start="533:17" pos:end="533:21"><name pos:start="533:17" pos:end="533:17">i</name> <operator pos:start="533:19" pos:end="533:19">=</operator> <literal type="number" pos:start="533:21" pos:end="533:21">0</literal></expr>;</init> <condition pos:start="533:24" pos:end="533:41"><expr pos:start="533:24" pos:end="533:40"><name pos:start="533:24" pos:end="533:24">i</name> <operator pos:start="533:26" pos:end="533:26">&lt;</operator> <name pos:start="533:28" pos:end="533:40"><name pos:start="533:28" pos:end="533:32">avctx</name><operator pos:start="533:33" pos:end="533:34">-&gt;</operator><name pos:start="533:35" pos:end="533:40">height</name></name></expr>;</condition> <incr pos:start="533:43" pos:end="533:45"><expr pos:start="533:43" pos:end="533:45"><name pos:start="533:43" pos:end="533:43">i</name><operator pos:start="533:44" pos:end="533:45">++</operator></expr></incr>)</control><block pos:start="533:47" pos:end="551:13">{<block_content pos:start="535:17" pos:end="549:32">

                <decl_stmt pos:start="535:17" pos:end="535:61"><decl pos:start="535:17" pos:end="535:60"><type pos:start="535:17" pos:end="535:32"><specifier pos:start="535:17" pos:end="535:21">const</specifier> <name pos:start="535:23" pos:end="535:30">uint16_t</name> <modifier pos:start="535:32" pos:end="535:32">*</modifier></type><name pos:start="535:33" pos:end="535:35">src</name> <init pos:start="535:37" pos:end="535:60">= <expr pos:start="535:39" pos:end="535:60"><operator pos:start="535:39" pos:end="535:39">(</operator><specifier pos:start="535:40" pos:end="535:44">const</specifier> <name pos:start="535:46" pos:end="535:53">uint16_t</name> <operator pos:start="535:55" pos:end="535:55">*</operator><operator pos:start="535:56" pos:end="535:56">)</operator> <name pos:start="535:58" pos:end="535:60">buf</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="537:17" pos:end="537:49"><decl pos:start="537:17" pos:end="537:48"><type pos:start="537:17" pos:end="537:26"><name pos:start="537:17" pos:end="537:24">uint16_t</name> <modifier pos:start="537:26" pos:end="537:26">*</modifier></type><name pos:start="537:27" pos:end="537:29">dst</name> <init pos:start="537:31" pos:end="537:48">= <expr pos:start="537:33" pos:end="537:48"><operator pos:start="537:33" pos:end="537:33">(</operator><name pos:start="537:34" pos:end="537:41">uint16_t</name> <operator pos:start="537:43" pos:end="537:43">*</operator><operator pos:start="537:44" pos:end="537:44">)</operator> <name pos:start="537:46" pos:end="537:48">ptr</name></expr></init></decl>;</decl_stmt>



                <for pos:start="541:17" pos:end="543:48">for<control pos:start="541:20" pos:end="541:49">(<init pos:start="541:21" pos:end="541:26"><expr pos:start="541:21" pos:end="541:25"><name pos:start="541:21" pos:end="541:21">j</name> <operator pos:start="541:23" pos:end="541:23">=</operator> <literal type="number" pos:start="541:25" pos:end="541:25">0</literal></expr>;</init> <condition pos:start="541:28" pos:end="541:44"><expr pos:start="541:28" pos:end="541:43"><name pos:start="541:28" pos:end="541:28">j</name> <operator pos:start="541:30" pos:end="541:30">&lt;</operator> <name pos:start="541:32" pos:end="541:43"><name pos:start="541:32" pos:end="541:36">avctx</name><operator pos:start="541:37" pos:end="541:38">-&gt;</operator><name pos:start="541:39" pos:end="541:43">width</name></name></expr>;</condition> <incr pos:start="541:46" pos:end="541:48"><expr pos:start="541:46" pos:end="541:48"><name pos:start="541:46" pos:end="541:46">j</name><operator pos:start="541:47" pos:end="541:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="543:21" pos:end="543:48"><block_content pos:start="543:21" pos:end="543:48">

                    <expr_stmt pos:start="543:21" pos:end="543:48"><expr pos:start="543:21" pos:end="543:47"><operator pos:start="543:21" pos:end="543:21">*</operator><name pos:start="543:22" pos:end="543:24">dst</name><operator pos:start="543:25" pos:end="543:26">++</operator> <operator pos:start="543:28" pos:end="543:28">=</operator> <call pos:start="543:30" pos:end="543:47"><name pos:start="543:30" pos:end="543:39">av_le2ne16</name><argument_list pos:start="543:40" pos:end="543:47">(<argument pos:start="543:41" pos:end="543:46"><expr pos:start="543:41" pos:end="543:46"><operator pos:start="543:41" pos:end="543:41">*</operator><name pos:start="543:42" pos:end="543:44">src</name><operator pos:start="543:45" pos:end="543:46">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="547:17" pos:end="547:25"><expr pos:start="547:17" pos:end="547:24"><name pos:start="547:17" pos:end="547:19">buf</name> <operator pos:start="547:21" pos:end="547:22">+=</operator> <name pos:start="547:24" pos:end="547:24">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:32"><expr pos:start="549:17" pos:end="549:31"><name pos:start="549:17" pos:end="549:19">ptr</name> <operator pos:start="549:21" pos:end="549:22">+=</operator> <name pos:start="549:24" pos:end="549:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="553:13" pos:end="553:18">break;</break>

        <case pos:start="555:9" pos:end="555:16">case <expr pos:start="555:14" pos:end="555:15"><literal type="number" pos:start="555:14" pos:end="555:15">32</literal></expr>:</case>

            <for pos:start="557:13" pos:end="585:13">for<control pos:start="557:16" pos:end="557:46">(<init pos:start="557:17" pos:end="557:22"><expr pos:start="557:17" pos:end="557:21"><name pos:start="557:17" pos:end="557:17">i</name> <operator pos:start="557:19" pos:end="557:19">=</operator> <literal type="number" pos:start="557:21" pos:end="557:21">0</literal></expr>;</init> <condition pos:start="557:24" pos:end="557:41"><expr pos:start="557:24" pos:end="557:40"><name pos:start="557:24" pos:end="557:24">i</name> <operator pos:start="557:26" pos:end="557:26">&lt;</operator> <name pos:start="557:28" pos:end="557:40"><name pos:start="557:28" pos:end="557:32">avctx</name><operator pos:start="557:33" pos:end="557:34">-&gt;</operator><name pos:start="557:35" pos:end="557:40">height</name></name></expr>;</condition> <incr pos:start="557:43" pos:end="557:45"><expr pos:start="557:43" pos:end="557:45"><name pos:start="557:43" pos:end="557:43">i</name><operator pos:start="557:44" pos:end="557:45">++</operator></expr></incr>)</control><block pos:start="557:47" pos:end="585:13">{<block_content pos:start="559:17" pos:end="583:32">

                <decl_stmt pos:start="559:17" pos:end="559:41"><decl pos:start="559:17" pos:end="559:40"><type pos:start="559:17" pos:end="559:31"><specifier pos:start="559:17" pos:end="559:21">const</specifier> <name pos:start="559:23" pos:end="559:29">uint8_t</name> <modifier pos:start="559:31" pos:end="559:31">*</modifier></type><name pos:start="559:32" pos:end="559:34">src</name> <init pos:start="559:36" pos:end="559:40">= <expr pos:start="559:38" pos:end="559:40"><name pos:start="559:38" pos:end="559:40">buf</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="561:17" pos:end="561:35"><decl pos:start="561:17" pos:end="561:34"><type pos:start="561:17" pos:end="561:25"><name pos:start="561:17" pos:end="561:23">uint8_t</name> <modifier pos:start="561:25" pos:end="561:25">*</modifier></type><name pos:start="561:26" pos:end="561:28">dst</name> <init pos:start="561:30" pos:end="561:34">= <expr pos:start="561:32" pos:end="561:34"><name pos:start="561:32" pos:end="561:34">ptr</name></expr></init></decl>;</decl_stmt>



                <for pos:start="565:17" pos:end="577:17">for<control pos:start="565:20" pos:end="565:49">(<init pos:start="565:21" pos:end="565:26"><expr pos:start="565:21" pos:end="565:25"><name pos:start="565:21" pos:end="565:21">j</name> <operator pos:start="565:23" pos:end="565:23">=</operator> <literal type="number" pos:start="565:25" pos:end="565:25">0</literal></expr>;</init> <condition pos:start="565:28" pos:end="565:44"><expr pos:start="565:28" pos:end="565:43"><name pos:start="565:28" pos:end="565:28">j</name> <operator pos:start="565:30" pos:end="565:30">&lt;</operator> <name pos:start="565:32" pos:end="565:43"><name pos:start="565:32" pos:end="565:36">avctx</name><operator pos:start="565:37" pos:end="565:38">-&gt;</operator><name pos:start="565:39" pos:end="565:43">width</name></name></expr>;</condition> <incr pos:start="565:46" pos:end="565:48"><expr pos:start="565:46" pos:end="565:48"><name pos:start="565:46" pos:end="565:46">j</name><operator pos:start="565:47" pos:end="565:48">++</operator></expr></incr>)</control><block pos:start="565:50" pos:end="577:17">{<block_content pos:start="567:21" pos:end="575:29">

                    <expr_stmt pos:start="567:21" pos:end="567:41"><expr pos:start="567:21" pos:end="567:40"><name pos:start="567:21" pos:end="567:26"><name pos:start="567:21" pos:end="567:23">dst</name><index pos:start="567:24" pos:end="567:26">[<expr pos:start="567:25" pos:end="567:25"><literal type="number" pos:start="567:25" pos:end="567:25">0</literal></expr>]</index></name> <operator pos:start="567:28" pos:end="567:28">=</operator> <name pos:start="567:30" pos:end="567:40"><name pos:start="567:30" pos:end="567:32">src</name><index pos:start="567:33" pos:end="567:40">[<expr pos:start="567:34" pos:end="567:39"><name pos:start="567:34" pos:end="567:39"><name pos:start="567:34" pos:end="567:36">rgb</name><index pos:start="567:37" pos:end="567:39">[<expr pos:start="567:38" pos:end="567:38"><literal type="number" pos:start="567:38" pos:end="567:38">2</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="569:21" pos:end="569:41"><expr pos:start="569:21" pos:end="569:40"><name pos:start="569:21" pos:end="569:26"><name pos:start="569:21" pos:end="569:23">dst</name><index pos:start="569:24" pos:end="569:26">[<expr pos:start="569:25" pos:end="569:25"><literal type="number" pos:start="569:25" pos:end="569:25">1</literal></expr>]</index></name> <operator pos:start="569:28" pos:end="569:28">=</operator> <name pos:start="569:30" pos:end="569:40"><name pos:start="569:30" pos:end="569:32">src</name><index pos:start="569:33" pos:end="569:40">[<expr pos:start="569:34" pos:end="569:39"><name pos:start="569:34" pos:end="569:39"><name pos:start="569:34" pos:end="569:36">rgb</name><index pos:start="569:37" pos:end="569:39">[<expr pos:start="569:38" pos:end="569:38"><literal type="number" pos:start="569:38" pos:end="569:38">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="571:21" pos:end="571:41"><expr pos:start="571:21" pos:end="571:40"><name pos:start="571:21" pos:end="571:26"><name pos:start="571:21" pos:end="571:23">dst</name><index pos:start="571:24" pos:end="571:26">[<expr pos:start="571:25" pos:end="571:25"><literal type="number" pos:start="571:25" pos:end="571:25">2</literal></expr>]</index></name> <operator pos:start="571:28" pos:end="571:28">=</operator> <name pos:start="571:30" pos:end="571:40"><name pos:start="571:30" pos:end="571:32">src</name><index pos:start="571:33" pos:end="571:40">[<expr pos:start="571:34" pos:end="571:39"><name pos:start="571:34" pos:end="571:39"><name pos:start="571:34" pos:end="571:36">rgb</name><index pos:start="571:37" pos:end="571:39">[<expr pos:start="571:38" pos:end="571:38"><literal type="number" pos:start="571:38" pos:end="571:38">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="573:21" pos:end="573:29"><expr pos:start="573:21" pos:end="573:28"><name pos:start="573:21" pos:end="573:23">dst</name> <operator pos:start="573:25" pos:end="573:26">+=</operator> <literal type="number" pos:start="573:28" pos:end="573:28">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="575:21" pos:end="575:29"><expr pos:start="575:21" pos:end="575:28"><name pos:start="575:21" pos:end="575:23">src</name> <operator pos:start="575:25" pos:end="575:26">+=</operator> <literal type="number" pos:start="575:28" pos:end="575:28">4</literal></expr>;</expr_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="581:17" pos:end="581:25"><expr pos:start="581:17" pos:end="581:24"><name pos:start="581:17" pos:end="581:19">buf</name> <operator pos:start="581:21" pos:end="581:22">+=</operator> <name pos:start="581:24" pos:end="581:24">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:32"><expr pos:start="583:17" pos:end="583:31"><name pos:start="583:17" pos:end="583:19">ptr</name> <operator pos:start="583:21" pos:end="583:22">+=</operator> <name pos:start="583:24" pos:end="583:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="587:13" pos:end="587:18">break;</break>

        <default pos:start="589:9" pos:end="589:16">default:</default>

            <expr_stmt pos:start="591:13" pos:end="591:67"><expr pos:start="591:13" pos:end="591:66"><call pos:start="591:13" pos:end="591:66"><name pos:start="591:13" pos:end="591:18">av_log</name><argument_list pos:start="591:19" pos:end="591:66">(<argument pos:start="591:20" pos:end="591:24"><expr pos:start="591:20" pos:end="591:24"><name pos:start="591:20" pos:end="591:24">avctx</name></expr></argument>, <argument pos:start="591:27" pos:end="591:38"><expr pos:start="591:27" pos:end="591:38"><name pos:start="591:27" pos:end="591:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="591:41" pos:end="591:65"><expr pos:start="591:41" pos:end="591:65"><literal type="string" pos:start="591:41" pos:end="591:65">"BMP decoder is broken\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="593:13" pos:end="593:22">return <expr pos:start="593:20" pos:end="593:21"><operator pos:start="593:20" pos:end="593:20">-</operator><literal type="number" pos:start="593:21" pos:end="593:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="601:5" pos:end="601:26"><expr pos:start="601:5" pos:end="601:25"><operator pos:start="601:5" pos:end="601:5">*</operator><name pos:start="601:6" pos:end="601:12">picture</name> <operator pos:start="601:14" pos:end="601:14">=</operator> <name pos:start="601:16" pos:end="601:25"><name pos:start="601:16" pos:end="601:16">s</name><operator pos:start="601:17" pos:end="601:18">-&gt;</operator><name pos:start="601:19" pos:end="601:25">picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="603:5" pos:end="603:35"><expr pos:start="603:5" pos:end="603:34"><operator pos:start="603:5" pos:end="603:5">*</operator><name pos:start="603:6" pos:end="603:14">data_size</name> <operator pos:start="603:16" pos:end="603:16">=</operator> <sizeof pos:start="603:18" pos:end="603:34">sizeof<argument_list pos:start="603:24" pos:end="603:34">(<argument pos:start="603:25" pos:end="603:33"><expr pos:start="603:25" pos:end="603:33"><name pos:start="603:25" pos:end="603:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="607:5" pos:end="607:20">return <expr pos:start="607:12" pos:end="607:19"><name pos:start="607:12" pos:end="607:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
