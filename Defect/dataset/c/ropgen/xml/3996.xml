<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3996.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">load_psw</name><parameter_list pos:start="1:14" pos:end="1:63">(<parameter pos:start="1:15" pos:end="1:32"><decl pos:start="1:15" pos:end="1:32"><type pos:start="1:15" pos:end="1:32"><name pos:start="1:15" pos:end="1:27">CPUS390XState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">env</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">uint64_t</name></type> <name pos:start="1:44" pos:end="1:47">mask</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">uint64_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:21">old_mask</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:27">env</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">psw</name><operator pos:start="5:33" pos:end="5:33">.</operator><name pos:start="5:34" pos:end="5:37">mask</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:12">psw</name><operator pos:start="9:13" pos:end="9:13">.</operator><name pos:start="9:14" pos:end="9:17">addr</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <name pos:start="9:21" pos:end="9:24">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">psw</name><operator pos:start="11:13" pos:end="11:13">.</operator><name pos:start="11:14" pos:end="11:17">mask</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:24">mask</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><call pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:19">tcg_enabled</name><argument_list pos:start="13:20" pos:end="13:21">()</argument_list></call></expr>)</condition> <block pos:start="13:24" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:38">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:11">env</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">cc_op</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:26">mask</name> <operator pos:start="15:28" pos:end="15:29">&gt;&gt;</operator> <literal type="number" pos:start="15:31" pos:end="15:32">44</literal><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:35">&amp;</operator> <literal type="number" pos:start="15:37" pos:end="15:37">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:17">old_mask</name> <operator pos:start="21:19" pos:end="21:19">^</operator> <name pos:start="21:21" pos:end="21:24">mask</name><operator pos:start="21:25" pos:end="21:25">)</operator> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <name pos:start="21:29" pos:end="21:40">PSW_MASK_PER</name></expr>)</condition> <block pos:start="21:43" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:67">

        <expr_stmt pos:start="23:9" pos:end="23:67"><expr pos:start="23:9" pos:end="23:66"><call pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:38">s390_cpu_recompute_watchpoints</name><argument_list pos:start="23:39" pos:end="23:66">(<argument pos:start="23:40" pos:end="23:65"><expr pos:start="23:40" pos:end="23:65"><call pos:start="23:40" pos:end="23:65"><name pos:start="23:40" pos:end="23:42">CPU</name><argument_list pos:start="23:43" pos:end="23:65">(<argument pos:start="23:44" pos:end="23:64"><expr pos:start="23:44" pos:end="23:64"><call pos:start="23:44" pos:end="23:64"><name pos:start="23:44" pos:end="23:59">s390_env_get_cpu</name><argument_list pos:start="23:60" pos:end="23:64">(<argument pos:start="23:61" pos:end="23:63"><expr pos:start="23:61" pos:end="23:63"><name pos:start="23:61" pos:end="23:63">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:12">mask</name> <operator pos:start="29:14" pos:end="29:14">&amp;</operator> <name pos:start="29:16" pos:end="29:28">PSW_MASK_WAIT</name></expr>)</condition> <block pos:start="29:31" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:9">

        <decl_stmt pos:start="31:9" pos:end="31:45"><decl pos:start="31:9" pos:end="31:44"><type pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15">S390CPU</name> <modifier pos:start="31:17" pos:end="31:17">*</modifier></type><name pos:start="31:18" pos:end="31:20">cpu</name> <init pos:start="31:22" pos:end="31:44">= <expr pos:start="31:24" pos:end="31:44"><call pos:start="31:24" pos:end="31:44"><name pos:start="31:24" pos:end="31:39">s390_env_get_cpu</name><argument_list pos:start="31:40" pos:end="31:44">(<argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:36">(<expr pos:start="33:13" pos:end="33:35"><call pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:25">s390_cpu_halt</name><argument_list pos:start="33:26" pos:end="33:30">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">cpu</name></expr></argument>)</argument_list></call> <operator pos:start="33:32" pos:end="33:33">==</operator> <literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>)</condition> <block pos:start="33:38" pos:end="41:9">{<block_content pos:start="37:13" pos:end="40:0">

<cpp:ifndef pos:start="35:1" pos:end="35:24">#<cpp:directive pos:start="35:2" pos:end="35:7">ifndef</cpp:directive> <name pos:start="35:9" pos:end="35:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="37:13" pos:end="40:0"><expr pos:start="37:13" pos:end="37:71"><call pos:start="37:13" pos:end="37:71"><name pos:start="37:13" pos:end="37:40">qemu_system_shutdown_request</name><argument_list pos:start="37:41" pos:end="37:71">(<argument pos:start="37:42" pos:end="37:70"><expr pos:start="37:42" pos:end="37:70"><name pos:start="37:42" pos:end="37:70">SHUTDOWN_CAUSE_GUEST_SHUTDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
