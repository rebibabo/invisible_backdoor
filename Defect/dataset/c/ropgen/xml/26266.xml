<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26266.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:49">gen_intermediate_code_internal</name><parameter_list pos:start="1:50" pos:end="5:59">(<parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">SPARCCPU</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">cpu</name></decl></parameter>,

                                                  <parameter pos:start="3:51" pos:end="3:70"><decl pos:start="3:51" pos:end="3:70"><type pos:start="3:51" pos:end="3:70"><name pos:start="3:51" pos:end="3:66">TranslationBlock</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">tb</name></decl></parameter>,

                                                  <parameter pos:start="5:51" pos:end="5:58"><decl pos:start="5:51" pos:end="5:58"><type pos:start="5:51" pos:end="5:58"><name pos:start="5:51" pos:end="5:54">bool</name></type> <name pos:start="5:56" pos:end="5:58">spc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="255:1">{<block_content pos:start="9:5" pos:end="254:0">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">cs</name> <init pos:start="9:18" pos:end="9:27">= <expr pos:start="9:20" pos:end="9:27"><call pos:start="9:20" pos:end="9:27"><name pos:start="9:20" pos:end="9:22">CPU</name><argument_list pos:start="9:23" pos:end="9:27">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">CPUSPARCState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">env</name> <init pos:start="11:24" pos:end="11:34">= <expr pos:start="11:26" pos:end="11:34"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:29">cpu</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">pc_start</name></decl>, <decl pos:start="13:28" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:28" pos:end="13:34">last_pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">uint16_t</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">DisasContext</name></type> <name pos:start="17:18" pos:end="17:20">dc1</name></decl>, <decl pos:start="17:23" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:16"><modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:25">dc</name> <init pos:start="17:27" pos:end="17:32">= <expr pos:start="17:29" pos:end="17:32"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:32">dc1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">CPUBreakpoint</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:21">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">j</name></decl>, <decl pos:start="21:12" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:13">lj</name> <init pos:start="21:15" pos:end="21:18">= <expr pos:start="21:17" pos:end="21:18"><operator pos:start="21:17" pos:end="21:17">-</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">max_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:21">insn</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><call pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:39">(<argument pos:start="31:12" pos:end="31:13"><expr pos:start="31:12" pos:end="31:13"><name pos:start="31:12" pos:end="31:13">dc</name></expr></argument>, <argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr></argument>, <argument pos:start="31:19" pos:end="31:38"><expr pos:start="31:19" pos:end="31:38"><sizeof pos:start="31:19" pos:end="31:38">sizeof<argument_list pos:start="31:25" pos:end="31:38">(<argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">DisasContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:6">dc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:10">tb</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:12">pc_start</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:17">tb</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:6">dc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:10">pc</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:11">last_pc</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:20"><name pos:start="39:15" pos:end="39:16">dc</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:11">npc</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:27">target_ulong</name><operator pos:start="41:28" pos:end="41:28">)</operator> <name pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:31">tb</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:40">cs_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">cc_op</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:29">CC_OP_DYNAMIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">mem_idx</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:36"><name pos:start="45:19" pos:end="45:31">cpu_mmu_index</name><argument_list pos:start="45:32" pos:end="45:36">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:11">def</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:22"><name pos:start="47:15" pos:end="47:17">env</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">def</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:19">fpu_enabled</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:47"><name pos:start="49:23" pos:end="49:36">tb_fpu_enabled</name><argument_list pos:start="49:37" pos:end="49:47">(<argument pos:start="49:38" pos:end="49:46"><expr pos:start="49:38" pos:end="49:46"><name pos:start="49:38" pos:end="49:46"><name pos:start="49:38" pos:end="49:39">tb</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:46">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:54"><expr pos:start="51:5" pos:end="51:53"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:26">address_mask_32bit</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <call pos:start="51:30" pos:end="51:53"><name pos:start="51:30" pos:end="51:42">tb_am_enabled</name><argument_list pos:start="51:43" pos:end="51:53">(<argument pos:start="51:44" pos:end="51:52"><expr pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:45">tb</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:52">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:6">dc</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:18">singlestep</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:44"><name pos:start="53:23" pos:end="53:24">cs</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:44">singlestep_enabled</name></name> <operator pos:start="53:46" pos:end="53:47">||</operator> <name pos:start="53:49" pos:end="53:58">singlestep</name><operator pos:start="53:59" pos:end="53:59">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:15">gen_opc_end</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:37"><name pos:start="55:19" pos:end="55:25">tcg_ctx</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:37">gen_opc_buf</name></name> <operator pos:start="55:39" pos:end="55:39">+</operator> <name pos:start="55:41" pos:end="55:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:13">num_insns</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:13">max_insns</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:18">tb</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">cflags</name></name> <operator pos:start="61:28" pos:end="61:28">&amp;</operator> <name pos:start="61:30" pos:end="61:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:34"><if pos:start="63:5" pos:end="65:34">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:17">max_insns</name> <operator pos:start="63:19" pos:end="63:20">==</operator> <literal type="number" pos:start="63:22" pos:end="63:22">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:34"><block_content pos:start="65:9" pos:end="65:34">

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:17">max_insns</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><call pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:16">gen_tb_start</name><argument_list pos:start="67:17" pos:end="67:18">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="69:5" pos:end="169:36">do <block pos:start="69:8" pos:end="165:5">{<block_content pos:start="71:9" pos:end="163:9">

        <if_stmt pos:start="71:9" pos:end="93:9"><if pos:start="71:9" pos:end="93:9">if <condition pos:start="71:12" pos:end="71:54">(<expr pos:start="71:13" pos:end="71:53"><call pos:start="71:13" pos:end="71:53"><name pos:start="71:13" pos:end="71:20">unlikely</name><argument_list pos:start="71:21" pos:end="71:53">(<argument pos:start="71:22" pos:end="71:52"><expr pos:start="71:22" pos:end="71:52"><operator pos:start="71:22" pos:end="71:22">!</operator><call pos:start="71:23" pos:end="71:52"><name pos:start="71:23" pos:end="71:34">QTAILQ_EMPTY</name><argument_list pos:start="71:35" pos:end="71:52">(<argument pos:start="71:36" pos:end="71:51"><expr pos:start="71:36" pos:end="71:51"><operator pos:start="71:36" pos:end="71:36">&amp;</operator><name pos:start="71:37" pos:end="71:51"><name pos:start="71:37" pos:end="71:38">cs</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:51">breakpoints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:56" pos:end="93:9">{<block_content pos:start="73:13" pos:end="91:13">

            <macro pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:26">QTAILQ_FOREACH</name><argument_list pos:start="73:27" pos:end="73:55">(<argument pos:start="73:28" pos:end="73:29">bp</argument>, <argument pos:start="73:32" pos:end="73:47">&amp;cs-&gt;breakpoints</argument>, <argument pos:start="73:50" pos:end="73:54">entry</argument>)</argument_list></macro> <block pos:start="73:57" pos:end="91:13">{<block_content pos:start="75:17" pos:end="89:17">

                <if_stmt pos:start="75:17" pos:end="89:17"><if pos:start="75:17" pos:end="89:17">if <condition pos:start="75:20" pos:end="75:37">(<expr pos:start="75:21" pos:end="75:36"><name pos:start="75:21" pos:end="75:26"><name pos:start="75:21" pos:end="75:22">bp</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:26">pc</name></name> <operator pos:start="75:28" pos:end="75:29">==</operator> <name pos:start="75:31" pos:end="75:36"><name pos:start="75:31" pos:end="75:32">dc</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:36">pc</name></name></expr>)</condition> <block pos:start="75:39" pos:end="89:17">{<block_content pos:start="77:21" pos:end="87:39">

                    <if_stmt pos:start="77:21" pos:end="79:39"><if pos:start="77:21" pos:end="79:39">if <condition pos:start="77:24" pos:end="77:43">(<expr pos:start="77:25" pos:end="77:42"><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:26">dc</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:30">pc</name></name> <operator pos:start="77:32" pos:end="77:33">!=</operator> <name pos:start="77:35" pos:end="77:42">pc_start</name></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:39"><block_content pos:start="79:25" pos:end="79:39">

                        <expr_stmt pos:start="79:25" pos:end="79:39"><expr pos:start="79:25" pos:end="79:38"><call pos:start="79:25" pos:end="79:38"><name pos:start="79:25" pos:end="79:34">save_state</name><argument_list pos:start="79:35" pos:end="79:38">(<argument pos:start="79:36" pos:end="79:37"><expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:46"><expr pos:start="81:21" pos:end="81:45"><call pos:start="81:21" pos:end="81:45"><name pos:start="81:21" pos:end="81:36">gen_helper_debug</name><argument_list pos:start="81:37" pos:end="81:45">(<argument pos:start="81:38" pos:end="81:44"><expr pos:start="81:38" pos:end="81:44"><name pos:start="81:38" pos:end="81:44">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:39"><expr pos:start="83:21" pos:end="83:38"><call pos:start="83:21" pos:end="83:38"><name pos:start="83:21" pos:end="83:35">tcg_gen_exit_tb</name><argument_list pos:start="83:36" pos:end="83:38">(<argument pos:start="83:37" pos:end="83:37"><expr pos:start="83:37" pos:end="83:37"><literal type="number" pos:start="83:37" pos:end="83:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:34"><expr pos:start="85:21" pos:end="85:33"><name pos:start="85:21" pos:end="85:29"><name pos:start="85:21" pos:end="85:22">dc</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:29">is_br</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <literal type="number" pos:start="85:33" pos:end="85:33">1</literal></expr>;</expr_stmt>

                    <goto pos:start="87:21" pos:end="87:39">goto <name pos:start="87:26" pos:end="87:38">exit_gen_loop</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="119:9"><if pos:start="95:9" pos:end="119:9">if <condition pos:start="95:12" pos:end="95:16">(<expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">spc</name></expr>)</condition> <block pos:start="95:18" pos:end="119:9">{<block_content pos:start="97:13" pos:end="117:13">

            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><call pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:20">qemu_log</name><argument_list pos:start="97:21" pos:end="97:38">(<argument pos:start="97:22" pos:end="97:37"><expr pos:start="97:22" pos:end="97:37"><literal type="string" pos:start="97:22" pos:end="97:37">"Search PC...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:58"><expr pos:start="99:13" pos:end="99:57"><name pos:start="99:13" pos:end="99:13">j</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <name pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:23">tcg_ctx</name><operator pos:start="99:24" pos:end="99:24">.</operator><name pos:start="99:25" pos:end="99:35">gen_opc_ptr</name></name> <operator pos:start="99:37" pos:end="99:37">-</operator> <name pos:start="99:39" pos:end="99:57"><name pos:start="99:39" pos:end="99:45">tcg_ctx</name><operator pos:start="99:46" pos:end="99:46">.</operator><name pos:start="99:47" pos:end="99:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="117:13"><if pos:start="101:13" pos:end="117:13">if <condition pos:start="101:16" pos:end="101:23">(<expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:18">lj</name> <operator pos:start="101:20" pos:end="101:20">&lt;</operator> <name pos:start="101:22" pos:end="101:22">j</name></expr>)</condition> <block pos:start="101:25" pos:end="117:13">{<block_content pos:start="103:17" pos:end="115:55">

                <expr_stmt pos:start="103:17" pos:end="103:21"><expr pos:start="103:17" pos:end="103:20"><name pos:start="103:17" pos:end="103:18">lj</name><operator pos:start="103:19" pos:end="103:20">++</operator></expr>;</expr_stmt>

                <while pos:start="105:17" pos:end="107:58">while <condition pos:start="105:23" pos:end="105:30">(<expr pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:25">lj</name> <operator pos:start="105:27" pos:end="105:27">&lt;</operator> <name pos:start="105:29" pos:end="105:29">j</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:58"><block_content pos:start="107:21" pos:end="107:58">

                    <expr_stmt pos:start="107:21" pos:end="107:58"><expr pos:start="107:21" pos:end="107:57"><name pos:start="107:21" pos:end="107:53"><name pos:start="107:21" pos:end="107:27">tcg_ctx</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:47">gen_opc_instr_start</name><index pos:start="107:48" pos:end="107:53">[<expr pos:start="107:49" pos:end="107:52"><name pos:start="107:49" pos:end="107:50">lj</name><operator pos:start="107:51" pos:end="107:52">++</operator></expr>]</index></name> <operator pos:start="107:55" pos:end="107:55">=</operator> <literal type="number" pos:start="107:57" pos:end="107:57">0</literal></expr>;</expr_stmt></block_content></block></while>

                <expr_stmt pos:start="109:17" pos:end="109:48"><expr pos:start="109:17" pos:end="109:47"><name pos:start="109:17" pos:end="109:38"><name pos:start="109:17" pos:end="109:23">tcg_ctx</name><operator pos:start="109:24" pos:end="109:24">.</operator><name pos:start="109:25" pos:end="109:34">gen_opc_pc</name><index pos:start="109:35" pos:end="109:38">[<expr pos:start="109:36" pos:end="109:37"><name pos:start="109:36" pos:end="109:37">lj</name></expr>]</index></name> <operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:47"><name pos:start="109:42" pos:end="109:43">dc</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:47">pc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:42"><expr pos:start="111:17" pos:end="111:41"><name pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:27">gen_opc_npc</name><index pos:start="111:28" pos:end="111:31">[<expr pos:start="111:29" pos:end="111:30"><name pos:start="111:29" pos:end="111:30">lj</name></expr>]</index></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <name pos:start="111:35" pos:end="111:41"><name pos:start="111:35" pos:end="111:36">dc</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:41">npc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:52"><expr pos:start="113:17" pos:end="113:51"><name pos:start="113:17" pos:end="113:47"><name pos:start="113:17" pos:end="113:23">tcg_ctx</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:43">gen_opc_instr_start</name><index pos:start="113:44" pos:end="113:47">[<expr pos:start="113:45" pos:end="113:46"><name pos:start="113:45" pos:end="113:46">lj</name></expr>]</index></name> <operator pos:start="113:49" pos:end="113:49">=</operator> <literal type="number" pos:start="113:51" pos:end="113:51">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:55"><expr pos:start="115:17" pos:end="115:54"><name pos:start="115:17" pos:end="115:42"><name pos:start="115:17" pos:end="115:23">tcg_ctx</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:38">gen_opc_icount</name><index pos:start="115:39" pos:end="115:42">[<expr pos:start="115:40" pos:end="115:41"><name pos:start="115:40" pos:end="115:41">lj</name></expr>]</index></name> <operator pos:start="115:44" pos:end="115:44">=</operator> <name pos:start="115:46" pos:end="115:54">num_insns</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:27"><if pos:start="121:9" pos:end="123:27">if <condition pos:start="121:12" pos:end="121:68">(<expr pos:start="121:13" pos:end="121:67"><name pos:start="121:13" pos:end="121:21">num_insns</name> <operator pos:start="121:23" pos:end="121:23">+</operator> <literal type="number" pos:start="121:25" pos:end="121:25">1</literal> <operator pos:start="121:27" pos:end="121:28">==</operator> <name pos:start="121:30" pos:end="121:38">max_insns</name> <operator pos:start="121:40" pos:end="121:41">&amp;&amp;</operator> <operator pos:start="121:43" pos:end="121:43">(</operator><name pos:start="121:44" pos:end="121:53"><name pos:start="121:44" pos:end="121:45">tb</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:53">cflags</name></name> <operator pos:start="121:55" pos:end="121:55">&amp;</operator> <name pos:start="121:57" pos:end="121:66">CF_LAST_IO</name><operator pos:start="121:67" pos:end="121:67">)</operator></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:27"><block_content pos:start="123:13" pos:end="123:27">

            <expr_stmt pos:start="123:13" pos:end="123:27"><expr pos:start="123:13" pos:end="123:26"><call pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:24">gen_io_start</name><argument_list pos:start="123:25" pos:end="123:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:15">last_pc</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:24"><name pos:start="125:19" pos:end="125:20">dc</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:24">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:12">insn</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="127:40"><name pos:start="127:16" pos:end="127:27">cpu_ldl_code</name><argument_list pos:start="127:28" pos:end="127:40">(<argument pos:start="127:29" pos:end="127:31"><expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:31">env</name></expr></argument>, <argument pos:start="127:34" pos:end="127:39"><expr pos:start="127:34" pos:end="127:39"><name pos:start="127:34" pos:end="127:39"><name pos:start="127:34" pos:end="127:35">dc</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:35"><expr pos:start="131:9" pos:end="131:34"><call pos:start="131:9" pos:end="131:34"><name pos:start="131:9" pos:end="131:24">disas_sparc_insn</name><argument_list pos:start="131:25" pos:end="131:34">(<argument pos:start="131:26" pos:end="131:27"><expr pos:start="131:26" pos:end="131:27"><name pos:start="131:26" pos:end="131:27">dc</name></expr></argument>, <argument pos:start="131:30" pos:end="131:33"><expr pos:start="131:30" pos:end="131:33"><name pos:start="131:30" pos:end="131:33">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:17">num_insns</name><operator pos:start="133:18" pos:end="133:19">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="137:9" pos:end="139:18"><if pos:start="137:9" pos:end="139:18">if <condition pos:start="137:12" pos:end="137:22">(<expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:14">dc</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:21">is_br</name></name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:18"><block_content pos:start="139:13" pos:end="139:18">

            <break pos:start="139:13" pos:end="139:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="141:9" pos:end="141:55">/* if the next PC is different, we abort now */</comment>

        <if_stmt pos:start="143:9" pos:end="145:18"><if pos:start="143:9" pos:end="145:18">if <condition pos:start="143:12" pos:end="143:36">(<expr pos:start="143:13" pos:end="143:35"><name pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:14">dc</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:18">pc</name></name> <operator pos:start="143:20" pos:end="143:21">!=</operator> <operator pos:start="143:23" pos:end="143:23">(</operator><name pos:start="143:24" pos:end="143:30">last_pc</name> <operator pos:start="143:32" pos:end="143:32">+</operator> <literal type="number" pos:start="143:34" pos:end="143:34">4</literal><operator pos:start="143:35" pos:end="143:35">)</operator></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:18"><block_content pos:start="145:13" pos:end="145:18">

            <break pos:start="145:13" pos:end="145:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="147:9" pos:end="149:69">/* if we reach a page boundary, we stop generation so that the

           PC of a TT_TFAULT exception is always in the right page */</comment>

        <if_stmt pos:start="151:9" pos:end="153:18"><if pos:start="151:9" pos:end="153:18">if <condition pos:start="151:12" pos:end="151:51">(<expr pos:start="151:13" pos:end="151:50"><operator pos:start="151:13" pos:end="151:13">(</operator><name pos:start="151:14" pos:end="151:19"><name pos:start="151:14" pos:end="151:15">dc</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:19">pc</name></name> <operator pos:start="151:21" pos:end="151:21">&amp;</operator> <operator pos:start="151:23" pos:end="151:23">(</operator><name pos:start="151:24" pos:end="151:39">TARGET_PAGE_SIZE</name> <operator pos:start="151:41" pos:end="151:41">-</operator> <literal type="number" pos:start="151:43" pos:end="151:43">1</literal><operator pos:start="151:44" pos:end="151:44">)</operator><operator pos:start="151:45" pos:end="151:45">)</operator> <operator pos:start="151:47" pos:end="151:48">==</operator> <literal type="number" pos:start="151:50" pos:end="151:50">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:18"><block_content pos:start="153:13" pos:end="153:18">

            <break pos:start="153:13" pos:end="153:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="155:9" pos:end="157:35">/* if single step mode, we generate only one instruction and

           generate an exception */</comment>

        <if_stmt pos:start="159:9" pos:end="163:9"><if pos:start="159:9" pos:end="163:9">if <condition pos:start="159:12" pos:end="159:27">(<expr pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:14">dc</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:26">singlestep</name></name></expr>)</condition> <block pos:start="159:29" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:18">

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="165:13" pos:end="169:35">(<expr pos:start="165:14" pos:end="169:34"><operator pos:start="165:14" pos:end="165:14">(</operator><name pos:start="165:15" pos:end="165:33"><name pos:start="165:15" pos:end="165:21">tcg_ctx</name><operator pos:start="165:22" pos:end="165:22">.</operator><name pos:start="165:23" pos:end="165:33">gen_opc_ptr</name></name> <operator pos:start="165:35" pos:end="165:35">&lt;</operator> <name pos:start="165:37" pos:end="165:47">gen_opc_end</name><operator pos:start="165:48" pos:end="165:48">)</operator> <operator pos:start="165:50" pos:end="165:51">&amp;&amp;</operator>

             <operator pos:start="167:14" pos:end="167:14">(</operator><name pos:start="167:15" pos:end="167:20"><name pos:start="167:15" pos:end="167:16">dc</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:20">pc</name></name> <operator pos:start="167:22" pos:end="167:22">-</operator> <name pos:start="167:24" pos:end="167:31">pc_start</name><operator pos:start="167:32" pos:end="167:32">)</operator> <operator pos:start="167:34" pos:end="167:34">&lt;</operator> <operator pos:start="167:36" pos:end="167:36">(</operator><name pos:start="167:37" pos:end="167:52">TARGET_PAGE_SIZE</name> <operator pos:start="167:54" pos:end="167:54">-</operator> <literal type="number" pos:start="167:56" pos:end="167:57">32</literal><operator pos:start="167:58" pos:end="167:58">)</operator> <operator pos:start="167:60" pos:end="167:61">&amp;&amp;</operator>

             <name pos:start="169:14" pos:end="169:22">num_insns</name> <operator pos:start="169:24" pos:end="169:24">&lt;</operator> <name pos:start="169:26" pos:end="169:34">max_insns</name></expr>)</condition>;</do>



 <label pos:start="173:2" pos:end="173:15"><name pos:start="173:2" pos:end="173:14">exit_gen_loop</name>:</label>

    <if_stmt pos:start="175:5" pos:end="179:5"><if pos:start="175:5" pos:end="179:5">if <condition pos:start="175:8" pos:end="175:32">(<expr pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:10">tb</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:18">cflags</name></name> <operator pos:start="175:20" pos:end="175:20">&amp;</operator> <name pos:start="175:22" pos:end="175:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="175:34" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:21">

        <expr_stmt pos:start="177:9" pos:end="177:21"><expr pos:start="177:9" pos:end="177:20"><call pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:18">gen_io_end</name><argument_list pos:start="177:19" pos:end="177:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="181:5" pos:end="205:5"><if pos:start="181:5" pos:end="205:5">if <condition pos:start="181:8" pos:end="181:19">(<expr pos:start="181:9" pos:end="181:18"><operator pos:start="181:9" pos:end="181:9">!</operator><name pos:start="181:10" pos:end="181:18"><name pos:start="181:10" pos:end="181:11">dc</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:18">is_br</name></name></expr>)</condition> <block pos:start="181:21" pos:end="205:5">{<block_content pos:start="183:9" pos:end="203:9">

        <if_stmt pos:start="183:9" pos:end="203:9"><if pos:start="183:9" pos:end="191:9">if <condition pos:start="183:12" pos:end="185:58">(<expr pos:start="183:13" pos:end="185:57"><name pos:start="183:13" pos:end="183:18"><name pos:start="183:13" pos:end="183:14">dc</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:18">pc</name></name> <operator pos:start="183:20" pos:end="183:21">!=</operator> <name pos:start="183:23" pos:end="183:32">DYNAMIC_PC</name> <operator pos:start="183:34" pos:end="183:35">&amp;&amp;</operator>

            <operator pos:start="185:13" pos:end="185:13">(</operator><name pos:start="185:14" pos:end="185:20"><name pos:start="185:14" pos:end="185:15">dc</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:20">npc</name></name> <operator pos:start="185:22" pos:end="185:23">!=</operator> <name pos:start="185:25" pos:end="185:34">DYNAMIC_PC</name> <operator pos:start="185:36" pos:end="185:37">&amp;&amp;</operator> <name pos:start="185:39" pos:end="185:45"><name pos:start="185:39" pos:end="185:40">dc</name><operator pos:start="185:41" pos:end="185:42">-&gt;</operator><name pos:start="185:43" pos:end="185:45">npc</name></name> <operator pos:start="185:47" pos:end="185:48">!=</operator> <name pos:start="185:50" pos:end="185:56">JUMP_PC</name><operator pos:start="185:57" pos:end="185:57">)</operator></expr>)</condition> <block pos:start="185:60" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:48">

            <comment type="block" pos:start="187:13" pos:end="187:63">/* static PC and NPC: we can use direct chaining */</comment>

            <expr_stmt pos:start="189:13" pos:end="189:48"><expr pos:start="189:13" pos:end="189:47"><call pos:start="189:13" pos:end="189:47"><name pos:start="189:13" pos:end="189:23">gen_goto_tb</name><argument_list pos:start="189:24" pos:end="189:47">(<argument pos:start="189:25" pos:end="189:26"><expr pos:start="189:25" pos:end="189:26"><name pos:start="189:25" pos:end="189:26">dc</name></expr></argument>, <argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><literal type="number" pos:start="189:29" pos:end="189:29">0</literal></expr></argument>, <argument pos:start="189:32" pos:end="189:37"><expr pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:33">dc</name><operator pos:start="189:34" pos:end="189:35">-&gt;</operator><name pos:start="189:36" pos:end="189:37">pc</name></name></expr></argument>, <argument pos:start="189:40" pos:end="189:46"><expr pos:start="189:40" pos:end="189:46"><name pos:start="189:40" pos:end="189:46"><name pos:start="189:40" pos:end="189:41">dc</name><operator pos:start="189:42" pos:end="189:43">-&gt;</operator><name pos:start="189:44" pos:end="189:46">npc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="203:9">else <block pos:start="191:16" pos:end="203:9">{<block_content pos:start="193:13" pos:end="201:31">

            <if_stmt pos:start="193:13" pos:end="197:13"><if pos:start="193:13" pos:end="197:13">if <condition pos:start="193:16" pos:end="193:37">(<expr pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:22"><name pos:start="193:17" pos:end="193:18">dc</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:22">pc</name></name> <operator pos:start="193:24" pos:end="193:25">!=</operator> <name pos:start="193:27" pos:end="193:36">DYNAMIC_PC</name></expr>)</condition> <block pos:start="193:39" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:48">

                <expr_stmt pos:start="195:17" pos:end="195:48"><expr pos:start="195:17" pos:end="195:47"><call pos:start="195:17" pos:end="195:47"><name pos:start="195:17" pos:end="195:31">tcg_gen_movi_tl</name><argument_list pos:start="195:32" pos:end="195:47">(<argument pos:start="195:33" pos:end="195:38"><expr pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:38">cpu_pc</name></expr></argument>, <argument pos:start="195:41" pos:end="195:46"><expr pos:start="195:41" pos:end="195:46"><name pos:start="195:41" pos:end="195:46"><name pos:start="195:41" pos:end="195:42">dc</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:46">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:25"><expr pos:start="199:13" pos:end="199:24"><call pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:20">save_npc</name><argument_list pos:start="199:21" pos:end="199:24">(<argument pos:start="199:22" pos:end="199:23"><expr pos:start="199:22" pos:end="199:23"><name pos:start="199:22" pos:end="199:23">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:31"><expr pos:start="201:13" pos:end="201:30"><call pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:27">tcg_gen_exit_tb</name><argument_list pos:start="201:28" pos:end="201:30">(<argument pos:start="201:29" pos:end="201:29"><expr pos:start="201:29" pos:end="201:29"><literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:30"><expr pos:start="207:5" pos:end="207:29"><call pos:start="207:5" pos:end="207:29"><name pos:start="207:5" pos:end="207:14">gen_tb_end</name><argument_list pos:start="207:15" pos:end="207:29">(<argument pos:start="207:16" pos:end="207:17"><expr pos:start="207:16" pos:end="207:17"><name pos:start="207:16" pos:end="207:17">tb</name></expr></argument>, <argument pos:start="207:20" pos:end="207:28"><expr pos:start="207:20" pos:end="207:28"><name pos:start="207:20" pos:end="207:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:40"><expr pos:start="209:5" pos:end="209:39"><operator pos:start="209:5" pos:end="209:5">*</operator><name pos:start="209:6" pos:end="209:24"><name pos:start="209:6" pos:end="209:12">tcg_ctx</name><operator pos:start="209:13" pos:end="209:13">.</operator><name pos:start="209:14" pos:end="209:24">gen_opc_ptr</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="240:0"><if pos:start="211:5" pos:end="231:5">if <condition pos:start="211:8" pos:end="211:12">(<expr pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">spc</name></expr>)</condition> <block pos:start="211:14" pos:end="231:5">{<block_content pos:start="213:9" pos:end="229:44">

        <expr_stmt pos:start="213:9" pos:end="213:54"><expr pos:start="213:9" pos:end="213:53"><name pos:start="213:9" pos:end="213:9">j</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <name pos:start="213:13" pos:end="213:31"><name pos:start="213:13" pos:end="213:19">tcg_ctx</name><operator pos:start="213:20" pos:end="213:20">.</operator><name pos:start="213:21" pos:end="213:31">gen_opc_ptr</name></name> <operator pos:start="213:33" pos:end="213:33">-</operator> <name pos:start="213:35" pos:end="213:53"><name pos:start="213:35" pos:end="213:41">tcg_ctx</name><operator pos:start="213:42" pos:end="213:42">.</operator><name pos:start="213:43" pos:end="213:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:13"><expr pos:start="215:9" pos:end="215:12"><name pos:start="215:9" pos:end="215:10">lj</name><operator pos:start="215:11" pos:end="215:12">++</operator></expr>;</expr_stmt>

        <while pos:start="217:9" pos:end="226:0">while <condition pos:start="217:15" pos:end="217:23">(<expr pos:start="217:16" pos:end="217:22"><name pos:start="217:16" pos:end="217:17">lj</name> <operator pos:start="217:19" pos:end="217:20">&lt;=</operator> <name pos:start="217:22" pos:end="217:22">j</name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="226:0"><block_content pos:start="219:13" pos:end="226:0">

            <expr_stmt pos:start="219:13" pos:end="226:0"><expr pos:start="219:13" pos:end="219:49"><name pos:start="219:13" pos:end="219:45"><name pos:start="219:13" pos:end="219:19">tcg_ctx</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:39">gen_opc_instr_start</name><index pos:start="219:40" pos:end="219:45">[<expr pos:start="219:41" pos:end="219:44"><name pos:start="219:41" pos:end="219:42">lj</name><operator pos:start="219:43" pos:end="219:44">++</operator></expr>]</index></name> <operator pos:start="219:47" pos:end="219:47">=</operator> <literal type="number" pos:start="219:49" pos:end="219:49">0</literal></expr>;</expr_stmt></block_content></block></while>

<cpp:if pos:start="221:1" pos:end="221:5">#<cpp:directive pos:start="221:2" pos:end="221:3">if</cpp:directive> <expr pos:start="221:5" pos:end="221:5"><literal type="number" pos:start="221:5" pos:end="221:5">0</literal></expr></cpp:if>

        log_page_dump();

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="227:9" pos:end="227:44"><expr pos:start="227:9" pos:end="227:43"><name pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:23">gen_opc_jump_pc</name><index pos:start="227:24" pos:end="227:26">[<expr pos:start="227:25" pos:end="227:25"><literal type="number" pos:start="227:25" pos:end="227:25">0</literal></expr>]</index></name> <operator pos:start="227:28" pos:end="227:28">=</operator> <name pos:start="227:30" pos:end="227:43"><name pos:start="227:30" pos:end="227:31">dc</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:40">jump_pc</name><index pos:start="227:41" pos:end="227:43">[<expr pos:start="227:42" pos:end="227:42"><literal type="number" pos:start="227:42" pos:end="227:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:44"><expr pos:start="229:9" pos:end="229:43"><name pos:start="229:9" pos:end="229:26"><name pos:start="229:9" pos:end="229:23">gen_opc_jump_pc</name><index pos:start="229:24" pos:end="229:26">[<expr pos:start="229:25" pos:end="229:25"><literal type="number" pos:start="229:25" pos:end="229:25">1</literal></expr>]</index></name> <operator pos:start="229:28" pos:end="229:28">=</operator> <name pos:start="229:30" pos:end="229:43"><name pos:start="229:30" pos:end="229:31">dc</name><operator pos:start="229:32" pos:end="229:33">-&gt;</operator><name pos:start="229:34" pos:end="229:40">jump_pc</name><index pos:start="229:41" pos:end="229:43">[<expr pos:start="229:42" pos:end="229:42"><literal type="number" pos:start="229:42" pos:end="229:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="231:7" pos:end="240:0">else <block pos:start="231:12" pos:end="240:0">{<block_content pos:start="233:9" pos:end="235:31">

        <expr_stmt pos:start="233:9" pos:end="233:42"><expr pos:start="233:9" pos:end="233:41"><name pos:start="233:9" pos:end="233:16"><name pos:start="233:9" pos:end="233:10">tb</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:16">size</name></name> <operator pos:start="233:18" pos:end="233:18">=</operator> <name pos:start="233:20" pos:end="233:26">last_pc</name> <operator pos:start="233:28" pos:end="233:28">+</operator> <literal type="number" pos:start="233:30" pos:end="233:32">4</literal> <operator pos:start="233:32" pos:end="233:32">-</operator> <name pos:start="233:34" pos:end="233:41">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:31"><expr pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:18"><name pos:start="235:9" pos:end="235:10">tb</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:18">icount</name></name> <operator pos:start="235:20" pos:end="235:20">=</operator> <name pos:start="235:22" pos:end="235:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="239:1" pos:end="239:18">#<cpp:directive pos:start="239:2" pos:end="239:6">ifdef</cpp:directive> <name pos:start="239:8" pos:end="239:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="241:5" pos:end="254:0"><if pos:start="241:5" pos:end="254:0">if <condition pos:start="241:8" pos:end="241:46">(<expr pos:start="241:9" pos:end="241:45"><call pos:start="241:9" pos:end="241:45"><name pos:start="241:9" pos:end="241:26">qemu_loglevel_mask</name><argument_list pos:start="241:27" pos:end="241:45">(<argument pos:start="241:28" pos:end="241:44"><expr pos:start="241:28" pos:end="241:44"><name pos:start="241:28" pos:end="241:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="241:48" pos:end="254:0">{<block_content pos:start="243:9" pos:end="249:23">

        <expr_stmt pos:start="243:9" pos:end="243:37"><expr pos:start="243:9" pos:end="243:36"><call pos:start="243:9" pos:end="243:36"><name pos:start="243:9" pos:end="243:16">qemu_log</name><argument_list pos:start="243:17" pos:end="243:36">(<argument pos:start="243:18" pos:end="243:35"><expr pos:start="243:18" pos:end="243:35"><literal type="string" pos:start="243:18" pos:end="243:35">"--------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:54"><expr pos:start="245:9" pos:end="245:53"><call pos:start="245:9" pos:end="245:53"><name pos:start="245:9" pos:end="245:16">qemu_log</name><argument_list pos:start="245:17" pos:end="245:53">(<argument pos:start="245:18" pos:end="245:27"><expr pos:start="245:18" pos:end="245:27"><literal type="string" pos:start="245:18" pos:end="245:27">"IN: %s\n"</literal></expr></argument>, <argument pos:start="245:30" pos:end="245:52"><expr pos:start="245:30" pos:end="245:52"><call pos:start="245:30" pos:end="245:52"><name pos:start="245:30" pos:end="245:42">lookup_symbol</name><argument_list pos:start="245:43" pos:end="245:52">(<argument pos:start="245:44" pos:end="245:51"><expr pos:start="245:44" pos:end="245:51"><name pos:start="245:44" pos:end="245:51">pc_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:67"><expr pos:start="247:9" pos:end="247:66"><call pos:start="247:9" pos:end="247:66"><name pos:start="247:9" pos:end="247:24">log_target_disas</name><argument_list pos:start="247:25" pos:end="247:66">(<argument pos:start="247:26" pos:end="247:28"><expr pos:start="247:26" pos:end="247:28"><name pos:start="247:26" pos:end="247:28">env</name></expr></argument>, <argument pos:start="247:31" pos:end="247:38"><expr pos:start="247:31" pos:end="247:38"><name pos:start="247:31" pos:end="247:38">pc_start</name></expr></argument>, <argument pos:start="247:41" pos:end="247:62"><expr pos:start="247:41" pos:end="247:62"><name pos:start="247:41" pos:end="247:47">last_pc</name> <operator pos:start="247:49" pos:end="247:49">+</operator> <literal type="number" pos:start="247:51" pos:end="247:53">4</literal> <operator pos:start="247:53" pos:end="247:53">-</operator> <name pos:start="247:55" pos:end="247:62">pc_start</name></expr></argument>, <argument pos:start="247:65" pos:end="247:65"><expr pos:start="247:65" pos:end="247:65"><literal type="number" pos:start="247:65" pos:end="247:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:23"><expr pos:start="249:9" pos:end="249:22"><call pos:start="249:9" pos:end="249:22"><name pos:start="249:9" pos:end="249:16">qemu_log</name><argument_list pos:start="249:17" pos:end="249:22">(<argument pos:start="249:18" pos:end="249:21"><expr pos:start="249:18" pos:end="249:21"><literal type="string" pos:start="249:18" pos:end="249:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
