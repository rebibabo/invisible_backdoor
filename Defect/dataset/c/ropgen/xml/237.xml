<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/237.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:16">av_realloc</name><parameter_list pos:start="1:17" pos:end="1:46">(<parameter pos:start="1:18" pos:end="1:26"><decl pos:start="1:18" pos:end="1:26"><type pos:start="1:18" pos:end="1:26"><name pos:start="1:18" pos:end="1:21">void</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:26">ptr</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:36">unsigned</name> <name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="36:0">

<cpp:ifdef pos:start="5:1" pos:end="5:20">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:20">MEMALIGN_HACK</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">diff</name></decl>;</decl_stmt>

<cpp:endif pos:start="9:1" pos:end="9:6">#<cpp:directive pos:start="9:2" pos:end="9:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="13:5" pos:end="13:49">/* let's disallow possible ambiguous cases */</comment>

    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if<condition pos:start="15:7" pos:end="15:22">(<expr pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:11">size</name> <operator pos:start="15:13" pos:end="15:13">&gt;</operator> <name pos:start="15:15" pos:end="15:21">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="22:0"><block_content pos:start="17:9" pos:end="22:0">

        <return pos:start="17:9" pos:end="22:0">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="21:1" pos:end="21:20">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:20">MEMALIGN_HACK</name></cpp:ifdef>

    <comment type="line" pos:start="23:5" pos:end="23:73">//FIXME this isn't aligned correctly, though it probably isn't needed</comment>

    <if_stmt pos:start="25:5" pos:end="25:36"><if pos:start="25:5" pos:end="25:36">if<condition pos:start="25:7" pos:end="25:12">(<expr pos:start="25:8" pos:end="25:11"><operator pos:start="25:8" pos:end="25:8">!</operator><name pos:start="25:9" pos:end="25:11">ptr</name></expr>)</condition><block type="pseudo" pos:start="25:14" pos:end="25:36"><block_content pos:start="25:14" pos:end="25:36"> <return pos:start="25:14" pos:end="25:36">return <expr pos:start="25:21" pos:end="25:35"><call pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:29">av_malloc</name><argument_list pos:start="25:30" pos:end="25:35">(<argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:8">diff</name><operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">(</operator><operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:16">char</name><operator pos:start="27:17" pos:end="27:17">*</operator><operator pos:start="27:18" pos:end="27:18">)</operator><name pos:start="27:19" pos:end="27:21">ptr</name><operator pos:start="27:22" pos:end="27:22">)</operator><index pos:start="27:23" pos:end="27:26">[<expr pos:start="27:24" pos:end="27:25"><operator pos:start="27:24" pos:end="27:24">-</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>]</index></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="32:0">return <expr pos:start="29:12" pos:end="29:50"><call pos:start="29:12" pos:end="29:43"><name pos:start="29:12" pos:end="29:18">realloc</name><argument_list pos:start="29:19" pos:end="29:43">(<argument pos:start="29:20" pos:end="29:29"><expr pos:start="29:20" pos:end="29:29"><name pos:start="29:20" pos:end="29:22">ptr</name> <operator pos:start="29:24" pos:end="29:24">-</operator> <name pos:start="29:26" pos:end="29:29">diff</name></expr></argument>, <argument pos:start="29:32" pos:end="29:42"><expr pos:start="29:32" pos:end="29:42"><name pos:start="29:32" pos:end="29:35">size</name> <operator pos:start="29:37" pos:end="29:37">+</operator> <name pos:start="29:39" pos:end="29:42">diff</name></expr></argument>)</argument_list></call> <operator pos:start="29:45" pos:end="29:45">+</operator> <name pos:start="29:47" pos:end="29:50">diff</name></expr>;</return>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

    <return pos:start="33:5" pos:end="36:0">return <expr pos:start="33:12" pos:end="33:29"><call pos:start="33:12" pos:end="33:29"><name pos:start="33:12" pos:end="33:18">realloc</name><argument_list pos:start="33:19" pos:end="33:29">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ptr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">size</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
