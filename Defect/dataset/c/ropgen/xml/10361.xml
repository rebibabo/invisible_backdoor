<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10361.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mmu_translate_asce</name><parameter_list pos:start="1:30" pos:end="5:70">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:43">CPUS390XState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:62">target_ulong</name></type> <name pos:start="1:64" pos:end="1:68">vaddr</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:38">uint64_t</name></type> <name pos:start="3:40" pos:end="3:42">asc</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">uint64_t</name></type> <name pos:start="3:54" pos:end="3:57">asce</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:68"><decl pos:start="3:60" pos:end="3:68"><type pos:start="3:60" pos:end="3:68"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:68">level</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:49"><decl pos:start="5:31" pos:end="5:49"><type pos:start="5:31" pos:end="5:49"><name pos:start="5:31" pos:end="5:42">target_ulong</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:49">raddr</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:61"><decl pos:start="5:52" pos:end="5:61"><type pos:start="5:52" pos:end="5:61"><name pos:start="5:52" pos:end="5:54">int</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:61">flags</name></decl></parameter>, <parameter pos:start="5:64" pos:end="5:69"><decl pos:start="5:64" pos:end="5:69"><type pos:start="5:64" pos:end="5:69"><name pos:start="5:64" pos:end="5:66">int</name></type> <name pos:start="5:68" pos:end="5:69">rw</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="143:1">{<block_content pos:start="9:5" pos:end="141:5">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">cs</name> <init pos:start="9:18" pos:end="9:45">= <expr pos:start="9:20" pos:end="9:45"><call pos:start="9:20" pos:end="9:45"><name pos:start="9:20" pos:end="9:22">CPU</name><argument_list pos:start="9:23" pos:end="9:45">(<argument pos:start="9:24" pos:end="9:44"><expr pos:start="9:24" pos:end="9:44"><call pos:start="9:24" pos:end="9:44"><name pos:start="9:24" pos:end="9:39">s390_env_get_cpu</name><argument_list pos:start="9:40" pos:end="9:44">(<argument pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">offs</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">origin</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:21">new_asce</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><call pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:15">PTE_DPRINTF</name><argument_list pos:start="19:16" pos:end="19:54">(<argument pos:start="19:17" pos:end="19:37"><expr pos:start="19:17" pos:end="19:37"><literal type="string" pos:start="19:17" pos:end="19:25">"%s: 0x%"</literal> <name pos:start="19:27" pos:end="19:32">PRIx64</name> <literal type="string" pos:start="19:34" pos:end="19:37">"\n"</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:47"><expr pos:start="19:40" pos:end="19:47"><name pos:start="19:40" pos:end="19:47">__func__</name></expr></argument>, <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">asce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="25:71">(<expr pos:start="23:9" pos:end="25:70"><operator pos:start="23:9" pos:end="23:9">(</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:15">level</name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <name pos:start="23:20" pos:end="23:37">_ASCE_TYPE_SEGMENT</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">&amp;&amp;</operator> <operator pos:start="23:43" pos:end="23:43">(</operator><name pos:start="23:44" pos:end="23:47">asce</name> <operator pos:start="23:49" pos:end="23:49">&amp;</operator> <name pos:start="23:51" pos:end="23:67">_REGION_ENTRY_INV</name><operator pos:start="23:68" pos:end="23:68">)</operator><operator pos:start="23:69" pos:end="23:69">)</operator> <operator pos:start="23:71" pos:end="23:72">||</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:15">level</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:37">_ASCE_TYPE_SEGMENT</name><operator pos:start="25:38" pos:end="25:38">)</operator> <operator pos:start="25:40" pos:end="25:41">&amp;&amp;</operator> <operator pos:start="25:43" pos:end="25:43">(</operator><name pos:start="25:44" pos:end="25:47">asce</name> <operator pos:start="25:49" pos:end="25:49">&amp;</operator> <name pos:start="25:51" pos:end="25:68">_SEGMENT_ENTRY_INV</name><operator pos:start="25:69" pos:end="25:69">)</operator><operator pos:start="25:70" pos:end="25:70">)</operator></expr>)</condition> <block pos:start="25:73" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:18">

        <comment type="block" pos:start="27:9" pos:end="27:57">/* XXX different regions have different faults */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:15">DPRINTF</name><argument_list pos:start="29:16" pos:end="29:49">(<argument pos:start="29:17" pos:end="29:38"><expr pos:start="29:17" pos:end="29:38"><literal type="string" pos:start="29:17" pos:end="29:38">"%s: invalid region\n"</literal></expr></argument>, <argument pos:start="29:41" pos:end="29:48"><expr pos:start="29:41" pos:end="29:48"><name pos:start="29:41" pos:end="29:48">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><call pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:26">trigger_page_fault</name><argument_list pos:start="31:27" pos:end="31:66">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">env</name></expr></argument>, <argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37">vaddr</name></expr></argument>, <argument pos:start="31:40" pos:end="31:56"><expr pos:start="31:40" pos:end="31:56"><name pos:start="31:40" pos:end="31:56">PGM_SEGMENT_TRANS</name></expr></argument>, <argument pos:start="31:59" pos:end="31:61"><expr pos:start="31:59" pos:end="31:61"><name pos:start="31:59" pos:end="31:61">asc</name></expr></argument>, <argument pos:start="31:64" pos:end="31:65"><expr pos:start="31:64" pos:end="31:65"><name pos:start="31:64" pos:end="31:65">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:74">(<expr pos:start="39:9" pos:end="39:73"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:14">level</name> <operator pos:start="39:16" pos:end="39:17">&lt;=</operator> <name pos:start="39:19" pos:end="39:33">_ASCE_TYPE_MASK</name><operator pos:start="39:34" pos:end="39:34">)</operator> <operator pos:start="39:36" pos:end="39:37">&amp;&amp;</operator> <operator pos:start="39:39" pos:end="39:39">(</operator><operator pos:start="39:40" pos:end="39:40">(</operator><name pos:start="39:41" pos:end="39:44">asce</name> <operator pos:start="39:46" pos:end="39:46">&amp;</operator> <name pos:start="39:48" pos:end="39:62">_ASCE_TYPE_MASK</name><operator pos:start="39:63" pos:end="39:63">)</operator> <operator pos:start="39:65" pos:end="39:66">!=</operator> <name pos:start="39:68" pos:end="39:72">level</name><operator pos:start="39:73" pos:end="39:73">)</operator></expr>)</condition> <block pos:start="39:76" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:64"><expr pos:start="41:9" pos:end="41:63"><call pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:26">trigger_page_fault</name><argument_list pos:start="41:27" pos:end="41:63">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">env</name></expr></argument>, <argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">vaddr</name></expr></argument>, <argument pos:start="41:40" pos:end="41:53"><expr pos:start="41:40" pos:end="41:53"><name pos:start="41:40" pos:end="41:53">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="41:56" pos:end="41:58"><expr pos:start="41:56" pos:end="41:58"><name pos:start="41:56" pos:end="41:58">asc</name></expr></argument>, <argument pos:start="41:61" pos:end="41:62"><expr pos:start="41:61" pos:end="41:62"><name pos:start="41:61" pos:end="41:62">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:32">(<expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:12">asce</name> <operator pos:start="49:14" pos:end="49:14">&amp;</operator> <name pos:start="49:16" pos:end="49:31">_ASCE_REAL_SPACE</name></expr>)</condition> <block pos:start="49:34" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <comment type="block" pos:start="51:9" pos:end="51:28">/* direct mapping */</comment>



        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:14">raddr</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:22">vaddr</name></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:10">origin</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:17">asce</name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <name pos:start="63:21" pos:end="63:32">_ASCE_ORIGIN</name></expr>;</expr_stmt>



    <switch pos:start="67:5" pos:end="101:5">switch <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:17">level</name></expr>)</condition> <block pos:start="67:20" pos:end="101:5">{<block_content pos:start="69:5" pos:end="99:14">

    <case pos:start="69:5" pos:end="69:32">case <expr pos:start="69:10" pos:end="69:31"><name pos:start="69:10" pos:end="69:27">_ASCE_TYPE_REGION1</name> <operator pos:start="69:29" pos:end="69:29">+</operator> <literal type="number" pos:start="69:31" pos:end="69:31">4</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:12">offs</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:21">vaddr</name> <operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator> <literal type="number" pos:start="71:26" pos:end="71:27">50</literal><operator pos:start="71:28" pos:end="71:28">)</operator> <operator pos:start="71:30" pos:end="71:30">&amp;</operator> <literal type="number" pos:start="71:32" pos:end="71:37">0x3ff8</literal></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">_ASCE_TYPE_REGION1</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:12">offs</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:21">vaddr</name> <operator pos:start="77:23" pos:end="77:24">&gt;&gt;</operator> <literal type="number" pos:start="77:26" pos:end="77:27">39</literal><operator pos:start="77:28" pos:end="77:28">)</operator> <operator pos:start="77:30" pos:end="77:30">&amp;</operator> <literal type="number" pos:start="77:32" pos:end="77:37">0x3ff8</literal></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:28">case <expr pos:start="81:10" pos:end="81:27"><name pos:start="81:10" pos:end="81:27">_ASCE_TYPE_REGION2</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:12">offs</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:21">vaddr</name> <operator pos:start="83:23" pos:end="83:24">&gt;&gt;</operator> <literal type="number" pos:start="83:26" pos:end="83:27">28</literal><operator pos:start="83:28" pos:end="83:28">)</operator> <operator pos:start="83:30" pos:end="83:30">&amp;</operator> <literal type="number" pos:start="83:32" pos:end="83:37">0x3ff8</literal></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:28">case <expr pos:start="87:10" pos:end="87:27"><name pos:start="87:10" pos:end="87:27">_ASCE_TYPE_REGION3</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:12">offs</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:21">vaddr</name> <operator pos:start="89:23" pos:end="89:24">&gt;&gt;</operator> <literal type="number" pos:start="89:26" pos:end="89:27">17</literal><operator pos:start="89:28" pos:end="89:28">)</operator> <operator pos:start="89:30" pos:end="89:30">&amp;</operator> <literal type="number" pos:start="89:32" pos:end="89:37">0x3ff8</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:28">case <expr pos:start="93:10" pos:end="93:27"><name pos:start="93:10" pos:end="93:27">_ASCE_TYPE_SEGMENT</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:12">offs</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:21">vaddr</name> <operator pos:start="95:23" pos:end="95:24">&gt;&gt;</operator> <literal type="number" pos:start="95:26" pos:end="95:26">9</literal><operator pos:start="95:27" pos:end="95:27">)</operator> <operator pos:start="95:29" pos:end="95:29">&amp;</operator> <literal type="number" pos:start="95:31" pos:end="95:36">0x07f8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:14">origin</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:21">asce</name> <operator pos:start="97:23" pos:end="97:23">&amp;</operator> <name pos:start="97:25" pos:end="97:45">_SEGMENT_ENTRY_ORIGIN</name></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="105:5" pos:end="105:37">/* XXX region protection flags */</comment>

    <comment type="block" pos:start="107:5" pos:end="107:31">/* *flags &amp;= ~PAGE_WRITE */</comment>



    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:12">new_asce</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <call pos:start="111:16" pos:end="111:46"><name pos:start="111:16" pos:end="111:23">ldq_phys</name><argument_list pos:start="111:24" pos:end="111:46">(<argument pos:start="111:25" pos:end="111:30"><expr pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:26">cs</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:30">as</name></name></expr></argument>, <argument pos:start="111:33" pos:end="111:45"><expr pos:start="111:33" pos:end="111:45"><name pos:start="111:33" pos:end="111:38">origin</name> <operator pos:start="111:40" pos:end="111:40">+</operator> <name pos:start="111:42" pos:end="111:45">offs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="115:50"><expr pos:start="113:5" pos:end="115:49"><call pos:start="113:5" pos:end="115:49"><name pos:start="113:5" pos:end="113:15">PTE_DPRINTF</name><argument_list pos:start="113:16" pos:end="115:49">(<argument pos:start="113:17" pos:end="113:73"><expr pos:start="113:17" pos:end="113:73"><literal type="string" pos:start="113:17" pos:end="113:25">"%s: 0x%"</literal> <name pos:start="113:27" pos:end="113:32">PRIx64</name> <literal type="string" pos:start="113:34" pos:end="113:41">" + 0x%"</literal> <name pos:start="113:43" pos:end="113:48">PRIx64</name> <literal type="string" pos:start="113:50" pos:end="113:61">" =&gt; 0x%016"</literal> <name pos:start="113:63" pos:end="113:68">PRIx64</name> <literal type="string" pos:start="113:70" pos:end="113:73">"\n"</literal></expr></argument>,

                <argument pos:start="115:17" pos:end="115:24"><expr pos:start="115:17" pos:end="115:24"><name pos:start="115:17" pos:end="115:24">__func__</name></expr></argument>, <argument pos:start="115:27" pos:end="115:32"><expr pos:start="115:27" pos:end="115:32"><name pos:start="115:27" pos:end="115:32">origin</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">offs</name></expr></argument>, <argument pos:start="115:41" pos:end="115:48"><expr pos:start="115:41" pos:end="115:48"><name pos:start="115:41" pos:end="115:48">new_asce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="119:5" pos:end="141:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:13">level</name> <operator pos:start="119:15" pos:end="119:16">==</operator> <name pos:start="119:18" pos:end="119:35">_ASCE_TYPE_SEGMENT</name></expr>)</condition> <block pos:start="119:38" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:78">

        <comment type="block" pos:start="121:9" pos:end="121:22">/* 4KB page */</comment>

        <return pos:start="123:9" pos:end="123:78">return <expr pos:start="123:16" pos:end="123:77"><call pos:start="123:16" pos:end="123:77"><name pos:start="123:16" pos:end="123:32">mmu_translate_pte</name><argument_list pos:start="123:33" pos:end="123:77">(<argument pos:start="123:34" pos:end="123:36"><expr pos:start="123:34" pos:end="123:36"><name pos:start="123:34" pos:end="123:36">env</name></expr></argument>, <argument pos:start="123:39" pos:end="123:43"><expr pos:start="123:39" pos:end="123:43"><name pos:start="123:39" pos:end="123:43">vaddr</name></expr></argument>, <argument pos:start="123:46" pos:end="123:48"><expr pos:start="123:46" pos:end="123:48"><name pos:start="123:46" pos:end="123:48">asc</name></expr></argument>, <argument pos:start="123:51" pos:end="123:58"><expr pos:start="123:51" pos:end="123:58"><name pos:start="123:51" pos:end="123:58">new_asce</name></expr></argument>, <argument pos:start="123:61" pos:end="123:65"><expr pos:start="123:61" pos:end="123:65"><name pos:start="123:61" pos:end="123:65">raddr</name></expr></argument>, <argument pos:start="123:68" pos:end="123:72"><expr pos:start="123:68" pos:end="123:72"><name pos:start="123:68" pos:end="123:72">flags</name></expr></argument>, <argument pos:start="123:75" pos:end="123:76"><expr pos:start="123:75" pos:end="123:76"><name pos:start="123:75" pos:end="123:76">rw</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="133:5">else if <condition pos:start="125:15" pos:end="127:76">(<expr pos:start="125:16" pos:end="127:75"><name pos:start="125:16" pos:end="125:20">level</name> <operator pos:start="125:22" pos:end="125:22">-</operator> <literal type="number" pos:start="125:24" pos:end="125:24">4</literal> <operator pos:start="125:26" pos:end="125:27">==</operator> <name pos:start="125:29" pos:end="125:46">_ASCE_TYPE_SEGMENT</name> <operator pos:start="125:48" pos:end="125:49">&amp;&amp;</operator>

               <operator pos:start="127:16" pos:end="127:16">(</operator><name pos:start="127:17" pos:end="127:24">new_asce</name> <operator pos:start="127:26" pos:end="127:26">&amp;</operator> <name pos:start="127:28" pos:end="127:44">_SEGMENT_ENTRY_FC</name><operator pos:start="127:45" pos:end="127:45">)</operator> <operator pos:start="127:47" pos:end="127:48">&amp;&amp;</operator> <operator pos:start="127:50" pos:end="127:50">(</operator><name pos:start="127:51" pos:end="127:63"><name pos:start="127:51" pos:end="127:53">env</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:60">cregs</name><index pos:start="127:61" pos:end="127:63">[<expr pos:start="127:62" pos:end="127:62"><literal type="number" pos:start="127:62" pos:end="127:62">0</literal></expr>]</index></name> <operator pos:start="127:65" pos:end="127:65">&amp;</operator> <name pos:start="127:67" pos:end="127:74">CR0_EDAT</name><operator pos:start="127:75" pos:end="127:75">)</operator></expr>)</condition> <block pos:start="127:78" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:79">

        <comment type="block" pos:start="129:9" pos:end="129:22">/* 1MB page */</comment>

        <return pos:start="131:9" pos:end="131:79">return <expr pos:start="131:16" pos:end="131:78"><call pos:start="131:16" pos:end="131:78"><name pos:start="131:16" pos:end="131:33">mmu_translate_sfaa</name><argument_list pos:start="131:34" pos:end="131:78">(<argument pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:37">env</name></expr></argument>, <argument pos:start="131:40" pos:end="131:44"><expr pos:start="131:40" pos:end="131:44"><name pos:start="131:40" pos:end="131:44">vaddr</name></expr></argument>, <argument pos:start="131:47" pos:end="131:49"><expr pos:start="131:47" pos:end="131:49"><name pos:start="131:47" pos:end="131:49">asc</name></expr></argument>, <argument pos:start="131:52" pos:end="131:59"><expr pos:start="131:52" pos:end="131:59"><name pos:start="131:52" pos:end="131:59">new_asce</name></expr></argument>, <argument pos:start="131:62" pos:end="131:66"><expr pos:start="131:62" pos:end="131:66"><name pos:start="131:62" pos:end="131:66">raddr</name></expr></argument>, <argument pos:start="131:69" pos:end="131:73"><expr pos:start="131:69" pos:end="131:73"><name pos:start="131:69" pos:end="131:73">flags</name></expr></argument>, <argument pos:start="131:76" pos:end="131:77"><expr pos:start="131:76" pos:end="131:77"><name pos:start="131:76" pos:end="131:77">rw</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="141:5">else <block pos:start="133:12" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:45">

        <comment type="block" pos:start="135:9" pos:end="135:32">/* yet another region */</comment>

        <return pos:start="137:9" pos:end="139:45">return <expr pos:start="137:16" pos:end="139:44"><call pos:start="137:16" pos:end="139:44"><name pos:start="137:16" pos:end="137:33">mmu_translate_asce</name><argument_list pos:start="137:34" pos:end="139:44">(<argument pos:start="137:35" pos:end="137:37"><expr pos:start="137:35" pos:end="137:37"><name pos:start="137:35" pos:end="137:37">env</name></expr></argument>, <argument pos:start="137:40" pos:end="137:44"><expr pos:start="137:40" pos:end="137:44"><name pos:start="137:40" pos:end="137:44">vaddr</name></expr></argument>, <argument pos:start="137:47" pos:end="137:49"><expr pos:start="137:47" pos:end="137:49"><name pos:start="137:47" pos:end="137:49">asc</name></expr></argument>, <argument pos:start="137:52" pos:end="137:59"><expr pos:start="137:52" pos:end="137:59"><name pos:start="137:52" pos:end="137:59">new_asce</name></expr></argument>, <argument pos:start="137:62" pos:end="137:70"><expr pos:start="137:62" pos:end="137:70"><name pos:start="137:62" pos:end="137:66">level</name> <operator pos:start="137:68" pos:end="137:68">-</operator> <literal type="number" pos:start="137:70" pos:end="137:70">4</literal></expr></argument>, <argument pos:start="137:73" pos:end="137:77"><expr pos:start="137:73" pos:end="137:77"><name pos:start="137:73" pos:end="137:77">raddr</name></expr></argument>,

                                  <argument pos:start="139:35" pos:end="139:39"><expr pos:start="139:35" pos:end="139:39"><name pos:start="139:35" pos:end="139:39">flags</name></expr></argument>, <argument pos:start="139:42" pos:end="139:43"><expr pos:start="139:42" pos:end="139:43"><name pos:start="139:42" pos:end="139:43">rw</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
