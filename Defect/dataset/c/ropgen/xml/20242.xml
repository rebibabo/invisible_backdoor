<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20242.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">ff_mp4_read_dec_config_descr</name><parameter_list pos:start="1:33" pos:end="1:84">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">fc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">AVStream</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">st</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:83"><decl pos:start="1:69" pos:end="1:83"><type pos:start="1:69" pos:end="1:83"><name pos:start="1:69" pos:end="1:79">AVIOContext</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:83">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:8">enum</name> <name pos:start="5:10" pos:end="5:18">AVCodecID</name></name></type> <name pos:start="5:20" pos:end="5:27">codec_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">object_type_id</name> <init pos:start="13:24" pos:end="13:36">= <expr pos:start="13:26" pos:end="13:36"><call pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:32">avio_r8</name><argument_list pos:start="13:33" pos:end="13:36">(<argument pos:start="13:34" pos:end="13:35"><expr pos:start="13:34" pos:end="13:35"><name pos:start="13:34" pos:end="13:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><call pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:11">avio_r8</name><argument_list pos:start="15:12" pos:end="15:15">(<argument pos:start="15:13" pos:end="15:14"><expr pos:start="15:13" pos:end="15:14"><name pos:start="15:13" pos:end="15:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:18" pos:end="15:34">/* stream type */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><call pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13">avio_rb24</name><argument_list pos:start="17:14" pos:end="17:17">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:20" pos:end="17:39">/* buffer size db */</comment>



    <expr_stmt pos:start="21:5" pos:end="28:0"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:5">v</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:17">avio_rb32</name><argument_list pos:start="21:18" pos:end="21:21">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:35">// TODO: fix this with codecpar</comment>

<cpp:if pos:start="27:1" pos:end="27:21">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

<macro pos:start="29:1" pos:end="29:31"><name pos:start="29:1" pos:end="29:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">v</name> <operator pos:start="31:11" pos:end="31:11">&lt;</operator> <name pos:start="31:13" pos:end="31:21">INT32_MAX</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:10">st</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:17">codec</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:30">rc_max_rate</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:34">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt pos:start="35:1" pos:end="41:43"><decl pos:start="35:1" pos:end="41:42"><type pos:start="35:1" pos:end="38:0"><name pos:start="35:1" pos:end="38:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>



    <name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:16">codecpar</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:26">bit_rate</name></name> <init pos:start="41:28" pos:end="41:42">= <expr pos:start="41:30" pos:end="41:42"><call pos:start="41:30" pos:end="41:42"><name pos:start="41:30" pos:end="41:38">avio_rb32</name><argument_list pos:start="41:39" pos:end="41:42">(<argument pos:start="41:40" pos:end="41:41"><expr pos:start="41:40" pos:end="41:41"><name pos:start="41:40" pos:end="41:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="41:45" pos:end="41:61">/* avg bitrate */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:63"><expr pos:start="45:5" pos:end="45:62"><name pos:start="45:5" pos:end="45:12">codec_id</name><operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:62"><name pos:start="45:15" pos:end="45:29">ff_codec_get_id</name><argument_list pos:start="45:30" pos:end="45:62">(<argument pos:start="45:31" pos:end="45:45"><expr pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:45">ff_mp4_obj_type</name></expr></argument>, <argument pos:start="45:48" pos:end="45:61"><expr pos:start="45:48" pos:end="45:61"><name pos:start="45:48" pos:end="45:61">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:42"><if pos:start="47:5" pos:end="49:42">if <condition pos:start="47:8" pos:end="47:17">(<expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">codec_id</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:42"><block_content pos:start="49:9" pos:end="49:42">

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:10">st</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:20">codecpar</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:30">codec_id</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:41">codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:77"><expr pos:start="51:5" pos:end="51:76"><call pos:start="51:5" pos:end="51:76"><name pos:start="51:5" pos:end="51:10">av_log</name><argument_list pos:start="51:11" pos:end="51:76">(<argument pos:start="51:12" pos:end="51:13"><expr pos:start="51:12" pos:end="51:13"><name pos:start="51:12" pos:end="51:13">fc</name></expr></argument>, <argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="51:30" pos:end="51:59"><expr pos:start="51:30" pos:end="51:59"><literal type="string" pos:start="51:30" pos:end="51:59">"esds object type id 0x%02x\n"</literal></expr></argument>, <argument pos:start="51:62" pos:end="51:75"><expr pos:start="51:62" pos:end="51:75"><name pos:start="51:62" pos:end="51:75">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:7">len</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:41"><name pos:start="53:11" pos:end="53:27">ff_mp4_read_descr</name><argument_list pos:start="53:28" pos:end="53:41">(<argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><name pos:start="53:29" pos:end="53:30">fc</name></expr></argument>, <argument pos:start="53:33" pos:end="53:34"><expr pos:start="53:33" pos:end="53:34"><name pos:start="53:33" pos:end="53:34">pb</name></expr></argument>, <argument pos:start="53:37" pos:end="53:40"><expr pos:start="53:37" pos:end="53:40"><operator pos:start="53:37" pos:end="53:37">&amp;</operator><name pos:start="53:38" pos:end="53:40">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="107:5"><if pos:start="55:5" pos:end="107:5">if <condition pos:start="55:8" pos:end="55:38">(<expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:11">tag</name> <operator pos:start="55:13" pos:end="55:14">==</operator> <name pos:start="55:16" pos:end="55:37">MP4DecSpecificDescrTag</name></expr>)</condition> <block pos:start="55:40" pos:end="107:5">{<block_content pos:start="57:9" pos:end="105:9">

        <expr_stmt pos:start="57:9" pos:end="57:73"><expr pos:start="57:9" pos:end="57:72"><call pos:start="57:9" pos:end="57:72"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:72">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">fc</name></expr></argument>, <argument pos:start="57:20" pos:end="57:31"><expr pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:31">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="57:34" pos:end="57:66"><expr pos:start="57:34" pos:end="57:66"><literal type="string" pos:start="57:34" pos:end="57:66">"Specific MPEG-4 header len=%d\n"</literal></expr></argument>, <argument pos:start="57:69" pos:end="57:71"><expr pos:start="57:69" pos:end="57:71"><name pos:start="57:69" pos:end="57:71">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:22"><if pos:start="59:9" pos:end="61:22">if <condition pos:start="59:12" pos:end="59:44">(<expr pos:start="59:13" pos:end="59:43"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:16">len</name> <operator pos:start="59:18" pos:end="59:19">||</operator> <operator pos:start="59:21" pos:end="59:21">(</operator><name pos:start="59:22" pos:end="59:29">uint64_t</name><operator pos:start="59:30" pos:end="59:30">)</operator><name pos:start="59:31" pos:end="59:33">len</name> <operator pos:start="59:35" pos:end="59:35">&gt;</operator> <operator pos:start="59:37" pos:end="59:37">(</operator><literal type="number" pos:start="59:38" pos:end="59:38">1</literal><operator pos:start="59:39" pos:end="59:40">&lt;&lt;</operator><literal type="number" pos:start="59:41" pos:end="59:42">30</literal><operator pos:start="59:43" pos:end="59:43">)</operator></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:22"><block_content pos:start="61:13" pos:end="61:22">

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><call pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:15">av_free</name><argument_list pos:start="63:16" pos:end="63:40">(<argument pos:start="63:17" pos:end="63:39"><expr pos:start="63:17" pos:end="63:39"><name pos:start="63:17" pos:end="63:39"><name pos:start="63:17" pos:end="63:18">st</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:28">codecpar</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:39">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:68">(<expr pos:start="65:13" pos:end="65:67"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:16">ret</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:62"><name pos:start="65:20" pos:end="65:35">ff_get_extradata</name><argument_list pos:start="65:36" pos:end="65:62">(<argument pos:start="65:37" pos:end="65:38"><expr pos:start="65:37" pos:end="65:38"><name pos:start="65:37" pos:end="65:38">fc</name></expr></argument>, <argument pos:start="65:41" pos:end="65:52"><expr pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:42">st</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:52">codecpar</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:56"><expr pos:start="65:55" pos:end="65:56"><name pos:start="65:55" pos:end="65:56">pb</name></expr></argument>, <argument pos:start="65:59" pos:end="65:61"><expr pos:start="65:59" pos:end="65:61"><name pos:start="65:59" pos:end="65:61">len</name></expr></argument>)</argument_list></call><operator pos:start="65:63" pos:end="65:63">)</operator> <operator pos:start="65:65" pos:end="65:65">&lt;</operator> <literal type="number" pos:start="65:67" pos:end="65:67">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <return pos:start="67:13" pos:end="67:23">return <expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="105:9"><if pos:start="69:9" pos:end="105:9">if <condition pos:start="69:12" pos:end="69:54">(<expr pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:14">st</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:24">codecpar</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:34">codec_id</name></name> <operator pos:start="69:36" pos:end="69:37">==</operator> <name pos:start="69:39" pos:end="69:53">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="69:56" pos:end="105:9">{<block_content pos:start="71:13" pos:end="103:57">

            <decl_stmt pos:start="71:13" pos:end="71:39"><decl pos:start="71:13" pos:end="71:38"><type pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:28">MPEG4AudioConfig</name></type> <name pos:start="71:30" pos:end="71:32">cfg</name> <init pos:start="71:34" pos:end="71:38">= <expr pos:start="71:36" pos:end="71:38"><block pos:start="71:36" pos:end="71:38">{<expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:78"><expr pos:start="73:13" pos:end="75:77"><call pos:start="73:13" pos:end="75:77"><name pos:start="73:13" pos:end="73:40">avpriv_mpeg4audio_get_config</name><argument_list pos:start="73:41" pos:end="75:77">(<argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><operator pos:start="73:42" pos:end="73:42">&amp;</operator><name pos:start="73:43" pos:end="73:45">cfg</name></expr></argument>, <argument pos:start="73:48" pos:end="73:70"><expr pos:start="73:48" pos:end="73:70"><name pos:start="73:48" pos:end="73:70"><name pos:start="73:48" pos:end="73:49">st</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:59">codecpar</name><operator pos:start="73:60" pos:end="73:61">-&gt;</operator><name pos:start="73:62" pos:end="73:70">extradata</name></name></expr></argument>,

                                         <argument pos:start="75:42" pos:end="75:73"><expr pos:start="75:42" pos:end="75:73"><name pos:start="75:42" pos:end="75:69"><name pos:start="75:42" pos:end="75:43">st</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:53">codecpar</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:69">extradata_size</name></name> <operator pos:start="75:71" pos:end="75:71">*</operator> <literal type="number" pos:start="75:73" pos:end="75:73">8</literal></expr></argument>, <argument pos:start="75:76" pos:end="75:76"><expr pos:start="75:76" pos:end="75:76"><literal type="number" pos:start="75:76" pos:end="75:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:14">st</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:24">codecpar</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:34">channels</name></name> <operator pos:start="77:36" pos:end="77:36">=</operator> <name pos:start="77:38" pos:end="77:49"><name pos:start="77:38" pos:end="77:40">cfg</name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:49">channels</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="89:60"><if pos:start="79:13" pos:end="81:84">if <condition pos:start="79:16" pos:end="79:64">(<expr pos:start="79:17" pos:end="79:63"><name pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:19">cfg</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:31">object_type</name></name> <operator pos:start="79:33" pos:end="79:34">==</operator> <literal type="number" pos:start="79:36" pos:end="79:37">29</literal> <operator pos:start="79:39" pos:end="79:40">&amp;&amp;</operator> <name pos:start="79:42" pos:end="79:59"><name pos:start="79:42" pos:end="79:44">cfg</name><operator pos:start="79:45" pos:end="79:45">.</operator><name pos:start="79:46" pos:end="79:59">sampling_index</name></name> <operator pos:start="79:61" pos:end="79:61">&lt;</operator> <literal type="number" pos:start="79:63" pos:end="79:63">3</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:84"><block_content pos:start="81:17" pos:end="81:84"> <comment type="line" pos:start="79:66" pos:end="79:78">// old mp3on4</comment>

                <expr_stmt pos:start="81:17" pos:end="81:84"><expr pos:start="81:17" pos:end="81:83"><name pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:28">codecpar</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:41">sample_rate</name></name> <operator pos:start="81:43" pos:end="81:43">=</operator> <name pos:start="81:45" pos:end="81:83"><name pos:start="81:45" pos:end="81:63">avpriv_mpa_freq_tab</name><index pos:start="81:64" pos:end="81:83">[<expr pos:start="81:65" pos:end="81:82"><name pos:start="81:65" pos:end="81:82"><name pos:start="81:65" pos:end="81:67">cfg</name><operator pos:start="81:68" pos:end="81:68">.</operator><name pos:start="81:69" pos:end="81:82">sampling_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="83:13" pos:end="85:64">else if <condition pos:start="83:21" pos:end="83:41">(<expr pos:start="83:22" pos:end="83:40"><name pos:start="83:22" pos:end="83:40"><name pos:start="83:22" pos:end="83:24">cfg</name><operator pos:start="83:25" pos:end="83:25">.</operator><name pos:start="83:26" pos:end="83:40">ext_sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:64"><block_content pos:start="85:17" pos:end="85:64">

                <expr_stmt pos:start="85:17" pos:end="85:64"><expr pos:start="85:17" pos:end="85:63"><name pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:18">st</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:28">codecpar</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:41">sample_rate</name></name> <operator pos:start="85:43" pos:end="85:43">=</operator> <name pos:start="85:45" pos:end="85:63"><name pos:start="85:45" pos:end="85:47">cfg</name><operator pos:start="85:48" pos:end="85:48">.</operator><name pos:start="85:49" pos:end="85:63">ext_sample_rate</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="87:13" pos:end="89:60">else<block type="pseudo" pos:start="89:17" pos:end="89:60"><block_content pos:start="89:17" pos:end="89:60">

                <expr_stmt pos:start="89:17" pos:end="89:60"><expr pos:start="89:17" pos:end="89:59"><name pos:start="89:17" pos:end="89:41"><name pos:start="89:17" pos:end="89:18">st</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:28">codecpar</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:41">sample_rate</name></name> <operator pos:start="89:43" pos:end="89:43">=</operator> <name pos:start="89:45" pos:end="89:59"><name pos:start="89:45" pos:end="89:47">cfg</name><operator pos:start="89:48" pos:end="89:48">.</operator><name pos:start="89:49" pos:end="89:59">sample_rate</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="97:58"><expr pos:start="91:13" pos:end="97:57"><call pos:start="91:13" pos:end="97:57"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="97:57">(<argument pos:start="91:20" pos:end="91:21"><expr pos:start="91:20" pos:end="91:21"><name pos:start="91:20" pos:end="91:21">fc</name></expr></argument>, <argument pos:start="91:24" pos:end="91:35"><expr pos:start="91:24" pos:end="91:35"><name pos:start="91:24" pos:end="91:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="91:38" pos:end="93:57"><expr pos:start="91:38" pos:end="93:57"><literal type="string" pos:start="91:38" pos:end="91:81">"mp4a config channels %d obj %d ext obj %d "</literal>

                    <literal type="string" pos:start="93:21" pos:end="93:57">"sample rate %d ext sample rate %d\n"</literal></expr></argument>, <argument pos:start="93:60" pos:end="93:81"><expr pos:start="93:60" pos:end="93:81"><name pos:start="93:60" pos:end="93:81"><name pos:start="93:60" pos:end="93:61">st</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:71">codecpar</name><operator pos:start="93:72" pos:end="93:73">-&gt;</operator><name pos:start="93:74" pos:end="93:81">channels</name></name></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:35"><expr pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:23">cfg</name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:35">object_type</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:56"><expr pos:start="95:38" pos:end="95:56"><name pos:start="95:38" pos:end="95:56"><name pos:start="95:38" pos:end="95:40">cfg</name><operator pos:start="95:41" pos:end="95:41">.</operator><name pos:start="95:42" pos:end="95:56">ext_object_type</name></name></expr></argument>,

                    <argument pos:start="97:21" pos:end="97:35"><expr pos:start="97:21" pos:end="97:35"><name pos:start="97:21" pos:end="97:35"><name pos:start="97:21" pos:end="97:23">cfg</name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:35">sample_rate</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:56"><expr pos:start="97:38" pos:end="97:56"><name pos:start="97:38" pos:end="97:56"><name pos:start="97:38" pos:end="97:40">cfg</name><operator pos:start="97:41" pos:end="97:41">.</operator><name pos:start="97:42" pos:end="97:56">ext_sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="103:57"><if pos:start="99:13" pos:end="103:57">if <condition pos:start="99:16" pos:end="101:74">(<expr pos:start="99:17" pos:end="101:73"><operator pos:start="99:17" pos:end="99:17">!</operator><operator pos:start="99:18" pos:end="99:18">(</operator><name pos:start="99:19" pos:end="99:40"><name pos:start="99:19" pos:end="99:20">st</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:30">codecpar</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:40">codec_id</name></name> <operator pos:start="99:42" pos:end="99:42">=</operator> <call pos:start="99:44" pos:end="101:72"><name pos:start="99:44" pos:end="99:58">ff_codec_get_id</name><argument_list pos:start="99:59" pos:end="101:72">(<argument pos:start="99:60" pos:end="99:74"><expr pos:start="99:60" pos:end="99:74"><name pos:start="99:60" pos:end="99:74">mp4_audio_types</name></expr></argument>,

                                                        <argument pos:start="101:57" pos:end="101:71"><expr pos:start="101:57" pos:end="101:71"><name pos:start="101:57" pos:end="101:71"><name pos:start="101:57" pos:end="101:59">cfg</name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:71">object_type</name></name></expr></argument>)</argument_list></call><operator pos:start="101:73" pos:end="101:73">)</operator></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:57"><block_content pos:start="103:17" pos:end="103:57">

                <expr_stmt pos:start="103:17" pos:end="103:57"><expr pos:start="103:17" pos:end="103:56"><name pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:18">st</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:28">codecpar</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:38">codec_id</name></name> <operator pos:start="103:40" pos:end="103:40">=</operator> <name pos:start="103:42" pos:end="103:56">AV_CODEC_ID_AAC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
