<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5854.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ppcuic_set_irq</name> <parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:53">irq_num</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:32">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">ppcuic_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">uic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">mask</name></decl>, <decl pos:start="7:20" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:21">sr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">uic</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:16">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:8">mask</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <literal type="number" pos:start="13:12" pos:end="13:12">1</literal> <operator pos:start="13:14" pos:end="13:15">&lt;&lt;</operator> <operator pos:start="13:17" pos:end="13:17">(</operator><literal type="number" pos:start="13:18" pos:end="13:20">31</literal><operator pos:start="13:20" pos:end="13:20">-</operator><name pos:start="13:21" pos:end="13:27">irq_num</name><operator pos:start="13:28" pos:end="13:28">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="21:71"><expr pos:start="15:5" pos:end="21:70"><call pos:start="15:5" pos:end="21:70"><name pos:start="15:5" pos:end="15:11">LOG_UIC</name><argument_list pos:start="15:12" pos:end="21:70">(<argument pos:start="15:13" pos:end="17:70"><expr pos:start="15:13" pos:end="17:70"><literal type="string" pos:start="15:13" pos:end="15:43">"%s: irq %d level %d uicsr %08"</literal> <name pos:start="15:45" pos:end="15:50">PRIx32</name>

                <literal type="string" pos:start="17:17" pos:end="17:27">" mask %08"</literal> <name pos:start="17:29" pos:end="17:34">PRIx32</name> <literal type="string" pos:start="17:36" pos:end="17:44">" =&gt; %08"</literal> <name pos:start="17:46" pos:end="17:51">PRIx32</name> <literal type="string" pos:start="17:53" pos:end="17:58">" %08"</literal> <name pos:start="17:60" pos:end="17:65">PRIx32</name> <literal type="string" pos:start="17:67" pos:end="17:70">"\n"</literal></expr></argument>,

                <argument pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:24">__func__</name></expr></argument>, <argument pos:start="19:27" pos:end="19:33"><expr pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:33">irq_num</name></expr></argument>, <argument pos:start="19:36" pos:end="19:40"><expr pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:40">level</name></expr></argument>,

                <argument pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:19">uic</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:26">uicsr</name></name></expr></argument>, <argument pos:start="21:29" pos:end="21:32"><expr pos:start="21:29" pos:end="21:32"><name pos:start="21:29" pos:end="21:32">mask</name></expr></argument>, <argument pos:start="21:35" pos:end="21:51"><expr pos:start="21:35" pos:end="21:51"><name pos:start="21:35" pos:end="21:44"><name pos:start="21:35" pos:end="21:37">uic</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:44">uicsr</name></name> <operator pos:start="21:46" pos:end="21:46">&amp;</operator> <name pos:start="21:48" pos:end="21:51">mask</name></expr></argument>, <argument pos:start="21:54" pos:end="21:69"><expr pos:start="21:54" pos:end="21:69"><name pos:start="21:54" pos:end="21:58">level</name> <operator pos:start="21:60" pos:end="21:61">&lt;&lt;</operator> <name pos:start="21:63" pos:end="21:69">irq_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:15">irq_num</name> <argument_list type="generic" pos:start="23:17" pos:end="23:32">&lt; <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal> <operator pos:start="23:21" pos:end="23:22">||</operator> <name pos:start="23:24" pos:end="23:30">irq_num</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="23:34" pos:end="23:35">31</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:6">sr</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:12">uic</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:19">uicsr</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:32">/* Update status register */</comment>

    <if_stmt pos:start="33:5" pos:end="59:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">uic</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">uictr</name></name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <name pos:start="33:22" pos:end="33:25">mask</name></expr>)</condition> <block pos:start="33:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:31">

        <comment type="block" pos:start="35:9" pos:end="35:38">/* Edge sensitive interrupt */</comment>

        <if_stmt pos:start="37:9" pos:end="39:31"><if pos:start="37:9" pos:end="39:31">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:17">level</name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:31"><block_content pos:start="39:13" pos:end="39:31">

            <expr_stmt pos:start="39:13" pos:end="39:31"><expr pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">uic</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">uicsr</name></name> <operator pos:start="39:24" pos:end="39:25">|=</operator> <name pos:start="39:27" pos:end="39:30">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="59:5">else <block pos:start="41:12" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:9">

        <comment type="block" pos:start="43:9" pos:end="43:39">/* Level sensitive interrupt */</comment>

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:17">level</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr>)</condition> <block pos:start="45:25" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:31">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:15">uic</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">uicsr</name></name> <operator pos:start="47:24" pos:end="47:25">|=</operator> <name pos:start="47:27" pos:end="47:30">mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:15">uic</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:22">level</name></name> <operator pos:start="49:24" pos:end="49:25">|=</operator> <name pos:start="49:27" pos:end="49:30">mask</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="57:9">else <block pos:start="51:16" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:32">

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:15">uic</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">uicsr</name></name> <operator pos:start="53:24" pos:end="53:25">&amp;=</operator> <operator pos:start="53:27" pos:end="53:27">~</operator><name pos:start="53:28" pos:end="53:31">mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:15">uic</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:22">level</name></name> <operator pos:start="55:24" pos:end="55:25">&amp;=</operator> <operator pos:start="55:27" pos:end="55:27">~</operator><name pos:start="55:28" pos:end="55:31">mask</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:77"><expr pos:start="61:5" pos:end="63:76"><call pos:start="61:5" pos:end="63:76"><name pos:start="61:5" pos:end="61:11">LOG_UIC</name><argument_list pos:start="61:12" pos:end="63:76">(<argument pos:start="61:13" pos:end="63:33"><expr pos:start="61:13" pos:end="63:33"><literal type="string" pos:start="61:13" pos:end="61:38">"%s: irq %d level %d sr %"</literal> <name pos:start="61:40" pos:end="61:45">PRIx32</name> <literal type="string" pos:start="61:47" pos:end="61:52">" =&gt; "</literal>

                <literal type="string" pos:start="63:17" pos:end="63:21">"%08"</literal> <name pos:start="63:23" pos:end="63:28">PRIx32</name> <literal type="string" pos:start="63:30" pos:end="63:33">"\n"</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:43"><expr pos:start="63:36" pos:end="63:43"><name pos:start="63:36" pos:end="63:43">__func__</name></expr></argument>, <argument pos:start="63:46" pos:end="63:52"><expr pos:start="63:46" pos:end="63:52"><name pos:start="63:46" pos:end="63:52">irq_num</name></expr></argument>, <argument pos:start="63:55" pos:end="63:59"><expr pos:start="63:55" pos:end="63:59"><name pos:start="63:55" pos:end="63:59">level</name></expr></argument>, <argument pos:start="63:62" pos:end="63:71"><expr pos:start="63:62" pos:end="63:71"><name pos:start="63:62" pos:end="63:71"><name pos:start="63:62" pos:end="63:64">uic</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:71">uicsr</name></name></expr></argument>, <argument pos:start="63:74" pos:end="63:75"><expr pos:start="63:74" pos:end="63:75"><name pos:start="63:74" pos:end="63:75">sr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:32"><if pos:start="65:5" pos:end="67:32">if <condition pos:start="65:8" pos:end="65:25">(<expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:10">sr</name> <operator pos:start="65:12" pos:end="65:13">!=</operator> <name pos:start="65:15" pos:end="65:24"><name pos:start="65:15" pos:end="65:17">uic</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">uicsr</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:32"><block_content pos:start="67:9" pos:end="67:32">

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><call pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:26">ppcuic_trigger_irq</name><argument_list pos:start="67:27" pos:end="67:31">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">uic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
