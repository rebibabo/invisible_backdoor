<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24143.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">applehttp_read_header</name><parameter_list pos:start="1:33" pos:end="1:76">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:75"><decl pos:start="1:54" pos:end="1:75"><type pos:start="1:54" pos:end="1:75"><name pos:start="1:54" pos:end="1:71">AVFormatParameters</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">AppleHTTPContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">c</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">j</name></decl>, <decl pos:start="7:24" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:36">stream_offset</name> <init pos:start="7:38" pos:end="7:40">= <expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:64">(<expr pos:start="11:9" pos:end="11:63"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:58"><name pos:start="11:16" pos:end="11:29">parse_playlist</name><argument_list pos:start="11:30" pos:end="11:58">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">c</name></expr></argument>, <argument pos:start="11:34" pos:end="11:44"><expr pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:44">filename</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">NULL</name></expr></argument>, <argument pos:start="11:53" pos:end="11:57"><expr pos:start="11:53" pos:end="11:57"><name pos:start="11:53" pos:end="11:57"><name pos:start="11:53" pos:end="11:53">s</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:57">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="11:59" pos:end="11:59">)</operator> <operator pos:start="11:61" pos:end="11:61">&lt;</operator> <literal type="number" pos:start="11:63" pos:end="11:63">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:21">n_variants</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>)</condition> <block pos:start="17:29" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:56">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr></argument>, <argument pos:start="19:22" pos:end="19:35"><expr pos:start="19:22" pos:end="19:35"><name pos:start="19:22" pos:end="19:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="19:38" pos:end="19:55"><expr pos:start="19:38" pos:end="19:55"><literal type="string" pos:start="19:38" pos:end="19:55">"Empty playlist\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:25">AVERROR_EOF</name></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="27:5" pos:end="29:27">/* If the playlist only contained variants, parse each individual

     * variant playlist. */</comment>

    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:61">(<expr pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">n_variants</name></name> <operator pos:start="31:23" pos:end="31:23">&gt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">1</literal> <operator pos:start="31:27" pos:end="31:28">||</operator> <name pos:start="31:30" pos:end="31:43"><name pos:start="31:30" pos:end="31:30">c</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:40">variants</name><index pos:start="31:41" pos:end="31:43">[<expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">0</literal></expr>]</index></name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:55">n_segments</name> <operator pos:start="31:57" pos:end="31:58">==</operator> <literal type="number" pos:start="31:60" pos:end="31:60">0</literal></expr>)</condition> <block pos:start="31:63" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:9">

        <for pos:start="33:9" pos:end="41:9">for <control pos:start="33:13" pos:end="33:43">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:38"><expr pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:25">c</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">n_variants</name></name></expr>;</condition> <incr pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:40">i</name><operator pos:start="33:41" pos:end="33:42">++</operator></expr></incr>)</control> <block pos:start="33:45" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:26">

            <decl_stmt pos:start="35:13" pos:end="35:47"><decl pos:start="35:13" pos:end="35:46"><type pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:18">struct</name> <name pos:start="35:20" pos:end="35:26">variant</name></name> <modifier pos:start="35:28" pos:end="35:28">*</modifier></type><name pos:start="35:29" pos:end="35:29">v</name> <init pos:start="35:31" pos:end="35:46">= <expr pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:33">c</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:43">variants</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><name pos:start="35:45" pos:end="35:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="39:26"><if pos:start="37:13" pos:end="39:26">if <condition pos:start="37:16" pos:end="37:63">(<expr pos:start="37:17" pos:end="37:62"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:20">ret</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:57"><name pos:start="37:24" pos:end="37:37">parse_playlist</name><argument_list pos:start="37:38" pos:end="37:57">(<argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><name pos:start="37:39" pos:end="37:39">c</name></expr></argument>, <argument pos:start="37:42" pos:end="37:47"><expr pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:42">v</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:47">url</name></name></expr></argument>, <argument pos:start="37:50" pos:end="37:50"><expr pos:start="37:50" pos:end="37:50"><name pos:start="37:50" pos:end="37:50">v</name></expr></argument>, <argument pos:start="37:53" pos:end="37:56"><expr pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:56">NULL</name></expr></argument>)</argument_list></call><operator pos:start="37:58" pos:end="37:58">)</operator> <operator pos:start="37:60" pos:end="37:60">&lt;</operator> <literal type="number" pos:start="37:62" pos:end="37:62">0</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:26"><block_content pos:start="39:17" pos:end="39:26">

                <goto pos:start="39:17" pos:end="39:26">goto <name pos:start="39:22" pos:end="39:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:40">(<expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">variants</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>]</index></name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:34">n_segments</name> <operator pos:start="47:36" pos:end="47:37">==</operator> <literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr>)</condition> <block pos:start="47:42" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><call pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:56">(<argument pos:start="49:16" pos:end="49:19"><expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr></argument>, <argument pos:start="49:22" pos:end="49:35"><expr pos:start="49:22" pos:end="49:35"><name pos:start="49:22" pos:end="49:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="49:38" pos:end="49:55"><expr pos:start="49:38" pos:end="49:55"><literal type="string" pos:start="49:38" pos:end="49:55">"Empty playlist\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:25">AVERROR_EOF</name></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="61:17">/* If this isn't a live stream, calculate the total duration of the

     * stream. */</comment>

    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="63:20">(<expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">c</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">finished</name></name></expr>)</condition> <block pos:start="63:22" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:46">

        <decl_stmt pos:start="65:9" pos:end="65:25"><decl pos:start="65:9" pos:end="65:24"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:20">duration</name> <init pos:start="65:22" pos:end="65:24">= <expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="67:9" pos:end="69:62">for <control pos:start="67:13" pos:end="67:56">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:51"><expr pos:start="67:21" pos:end="67:50"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:38"><name pos:start="67:25" pos:end="67:25">c</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:35">variants</name><index pos:start="67:36" pos:end="67:38">[<expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">0</literal></expr>]</index></name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:50">n_segments</name></expr>;</condition> <incr pos:start="67:53" pos:end="67:55"><expr pos:start="67:53" pos:end="67:55"><name pos:start="67:53" pos:end="67:53">i</name><operator pos:start="67:54" pos:end="67:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:13" pos:end="69:62"><block_content pos:start="69:13" pos:end="69:62">

            <expr_stmt pos:start="69:13" pos:end="69:62"><expr pos:start="69:13" pos:end="69:61"><name pos:start="69:13" pos:end="69:20">duration</name> <operator pos:start="69:22" pos:end="69:23">+=</operator> <name pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:25">c</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:35">variants</name><index pos:start="69:36" pos:end="69:38">[<expr pos:start="69:37" pos:end="69:37"><literal type="number" pos:start="69:37" pos:end="69:37">0</literal></expr>]</index></name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:51"><name pos:start="69:41" pos:end="69:48">segments</name><index pos:start="69:49" pos:end="69:51">[<expr pos:start="69:50" pos:end="69:50"><name pos:start="69:50" pos:end="69:50">i</name></expr>]</index></name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:61">duration</name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="71:9" pos:end="71:46"><expr pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">duration</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:30">duration</name> <operator pos:start="71:32" pos:end="71:32">*</operator> <name pos:start="71:34" pos:end="71:45">AV_TIME_BASE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:5">c</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:18">min_end_seq</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:28">INT_MAX</name></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:43">/* Open the demuxer for each variant */</comment>

    <for pos:start="81:5" pos:end="127:5">for <control pos:start="81:9" pos:end="81:39">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:34"><expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:33"><name pos:start="81:21" pos:end="81:21">c</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:33">n_variants</name></name></expr>;</condition> <incr pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:36">i</name><operator pos:start="81:37" pos:end="81:38">++</operator></expr></incr>)</control> <block pos:start="81:41" pos:end="127:5">{<block_content pos:start="83:9" pos:end="125:44">

        <decl_stmt pos:start="83:9" pos:end="83:43"><decl pos:start="83:9" pos:end="83:42"><type pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:14">struct</name> <name pos:start="83:16" pos:end="83:22">variant</name></name> <modifier pos:start="83:24" pos:end="83:24">*</modifier></type><name pos:start="83:25" pos:end="83:25">v</name> <init pos:start="83:27" pos:end="83:42">= <expr pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:29">c</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:39">variants</name><index pos:start="83:40" pos:end="83:42">[<expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="85:9" pos:end="87:21"><if pos:start="85:9" pos:end="87:21">if <condition pos:start="85:12" pos:end="85:31">(<expr pos:start="85:13" pos:end="85:30"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:13">v</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:25">n_segments</name></name> <operator pos:start="85:27" pos:end="85:28">==</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:21"><block_content pos:start="87:13" pos:end="87:21">

            <continue pos:start="87:13" pos:end="87:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:68"><expr pos:start="89:9" pos:end="89:67"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:9">c</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:24">max_start_seq</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <call pos:start="89:28" pos:end="89:67"><name pos:start="89:28" pos:end="89:32">FFMAX</name><argument_list pos:start="89:33" pos:end="89:67">(<argument pos:start="89:34" pos:end="89:49"><expr pos:start="89:34" pos:end="89:49"><name pos:start="89:34" pos:end="89:49"><name pos:start="89:34" pos:end="89:34">c</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:49">max_start_seq</name></name></expr></argument>, <argument pos:start="89:52" pos:end="89:66"><expr pos:start="89:52" pos:end="89:66"><name pos:start="89:52" pos:end="89:66"><name pos:start="89:52" pos:end="89:52">v</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:66">start_seq_no</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="93:66"><expr pos:start="91:9" pos:end="93:65"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:22">min_end_seq</name></name>   <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="93:65"><name pos:start="91:28" pos:end="91:32">FFMIN</name><argument_list pos:start="91:33" pos:end="93:65">(<argument pos:start="91:34" pos:end="91:47"><expr pos:start="91:34" pos:end="91:47"><name pos:start="91:34" pos:end="91:47"><name pos:start="91:34" pos:end="91:34">c</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:47">min_end_seq</name></name></expr></argument>,   <argument pos:start="91:52" pos:end="93:64"><expr pos:start="91:52" pos:end="93:64"><name pos:start="91:52" pos:end="91:66"><name pos:start="91:52" pos:end="91:52">v</name><operator pos:start="91:53" pos:end="91:54">-&gt;</operator><name pos:start="91:55" pos:end="91:66">start_seq_no</name></name> <operator pos:start="91:68" pos:end="91:68">+</operator>

                                                   <name pos:start="93:52" pos:end="93:64"><name pos:start="93:52" pos:end="93:52">v</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:64">n_segments</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:78"><expr pos:start="95:9" pos:end="95:77"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:77"><name pos:start="95:15" pos:end="95:32">av_open_input_file</name><argument_list pos:start="95:33" pos:end="95:77">(<argument pos:start="95:34" pos:end="95:40"><expr pos:start="95:34" pos:end="95:40"><operator pos:start="95:34" pos:end="95:34">&amp;</operator><name pos:start="95:35" pos:end="95:40"><name pos:start="95:35" pos:end="95:35">v</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:40">ctx</name></name></expr></argument>, <argument pos:start="95:43" pos:end="95:61"><expr pos:start="95:43" pos:end="95:61"><name pos:start="95:43" pos:end="95:56"><name pos:start="95:43" pos:end="95:43">v</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:53">segments</name><index pos:start="95:54" pos:end="95:56">[<expr pos:start="95:55" pos:end="95:55"><literal type="number" pos:start="95:55" pos:end="95:55">0</literal></expr>]</index></name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:61">url</name></expr></argument>, <argument pos:start="95:64" pos:end="95:67"><expr pos:start="95:64" pos:end="95:67"><name pos:start="95:64" pos:end="95:67">NULL</name></expr></argument>, <argument pos:start="95:70" pos:end="95:70"><expr pos:start="95:70" pos:end="95:70"><literal type="number" pos:start="95:70" pos:end="95:70">0</literal></expr></argument>, <argument pos:start="95:73" pos:end="95:76"><expr pos:start="95:73" pos:end="95:76"><name pos:start="95:73" pos:end="95:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:22"><if pos:start="97:9" pos:end="99:22">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><call pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:18">url_fclose</name><argument_list pos:start="101:19" pos:end="101:30">(<argument pos:start="101:20" pos:end="101:29"><expr pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:20">v</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:25">ctx</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:9">v</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:14">ctx</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:18">pb</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">v</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:24">stream_offset</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:40">stream_offset</name></expr>;</expr_stmt>

        <comment type="block" pos:start="107:9" pos:end="107:66">/* Create new AVStreams for each stream in this variant */</comment>

        <for pos:start="109:9" pos:end="123:9">for <control pos:start="109:13" pos:end="109:48">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">j</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:43"><expr pos:start="109:21" pos:end="109:42"><name pos:start="109:21" pos:end="109:21">j</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:42"><name pos:start="109:25" pos:end="109:25">v</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:30">ctx</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:42">nb_streams</name></name></expr>;</condition> <incr pos:start="109:45" pos:end="109:47"><expr pos:start="109:45" pos:end="109:47"><name pos:start="109:45" pos:end="109:45">j</name><operator pos:start="109:46" pos:end="109:47">++</operator></expr></incr>)</control> <block pos:start="109:50" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:71">

            <decl_stmt pos:start="111:13" pos:end="111:47"><decl pos:start="111:13" pos:end="111:46"><type pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:20">AVStream</name> <modifier pos:start="111:22" pos:end="111:22">*</modifier></type><name pos:start="111:23" pos:end="111:24">st</name> <init pos:start="111:26" pos:end="111:46">= <expr pos:start="111:28" pos:end="111:46"><call pos:start="111:28" pos:end="111:46"><name pos:start="111:28" pos:end="111:40">av_new_stream</name><argument_list pos:start="111:41" pos:end="111:46">(<argument pos:start="111:42" pos:end="111:42"><expr pos:start="111:42" pos:end="111:42"><name pos:start="111:42" pos:end="111:42">s</name></expr></argument>, <argument pos:start="111:45" pos:end="111:45"><expr pos:start="111:45" pos:end="111:45"><name pos:start="111:45" pos:end="111:45">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="113:13" pos:end="119:13"><if pos:start="113:13" pos:end="119:13">if <condition pos:start="113:16" pos:end="113:20">(<expr pos:start="113:17" pos:end="113:19"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:19">st</name></expr>)</condition> <block pos:start="113:22" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:26">

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:37"><name pos:start="115:23" pos:end="115:29">AVERROR</name><argument_list pos:start="115:30" pos:end="115:37">(<argument pos:start="115:31" pos:end="115:36"><expr pos:start="115:31" pos:end="115:36"><name pos:start="115:31" pos:end="115:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="117:17" pos:end="117:26">goto <name pos:start="117:22" pos:end="117:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:71"><expr pos:start="121:13" pos:end="121:70"><call pos:start="121:13" pos:end="121:70"><name pos:start="121:13" pos:end="121:32">avcodec_copy_context</name><argument_list pos:start="121:33" pos:end="121:70">(<argument pos:start="121:34" pos:end="121:42"><expr pos:start="121:34" pos:end="121:42"><name pos:start="121:34" pos:end="121:42"><name pos:start="121:34" pos:end="121:35">st</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:42">codec</name></name></expr></argument>, <argument pos:start="121:45" pos:end="121:69"><expr pos:start="121:45" pos:end="121:69"><name pos:start="121:45" pos:end="121:62"><name pos:start="121:45" pos:end="121:45">v</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:50">ctx</name><operator pos:start="121:51" pos:end="121:52">-&gt;</operator><name pos:start="121:53" pos:end="121:59">streams</name><index pos:start="121:60" pos:end="121:62">[<expr pos:start="121:61" pos:end="121:61"><name pos:start="121:61" pos:end="121:61">j</name></expr>]</index></name><operator pos:start="121:63" pos:end="121:64">-&gt;</operator><name pos:start="121:65" pos:end="121:69">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:21">stream_offset</name> <operator pos:start="125:23" pos:end="125:24">+=</operator> <name pos:start="125:26" pos:end="125:43"><name pos:start="125:26" pos:end="125:26">v</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:31">ctx</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:43">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="129:5" pos:end="129:40"><expr pos:start="129:5" pos:end="129:39"><name pos:start="129:5" pos:end="129:22"><name pos:start="129:5" pos:end="129:5">c</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:22">last_packet_dts</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:37"><expr pos:start="133:5" pos:end="133:36"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:5">c</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:17">cur_seq_no</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:21">c</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:36">max_start_seq</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="135:5" pos:end="137:29">/* If this is a live stream with more than 3 segments, start at the

     * third last segment. */</comment>

    <if_stmt pos:start="139:5" pos:end="141:43"><if pos:start="139:5" pos:end="141:43">if <condition pos:start="139:8" pos:end="139:62">(<expr pos:start="139:9" pos:end="139:61"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:20"><name pos:start="139:10" pos:end="139:10">c</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:20">finished</name></name> <operator pos:start="139:22" pos:end="139:23">&amp;&amp;</operator> <name pos:start="139:25" pos:end="139:38"><name pos:start="139:25" pos:end="139:25">c</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:38">min_end_seq</name></name> <operator pos:start="139:40" pos:end="139:40">-</operator> <name pos:start="139:42" pos:end="139:57"><name pos:start="139:42" pos:end="139:42">c</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:57">max_start_seq</name></name> <operator pos:start="139:59" pos:end="139:59">&gt;</operator> <literal type="number" pos:start="139:61" pos:end="139:61">3</literal></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:43"><block_content pos:start="141:9" pos:end="141:43">

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:9">c</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:21">cur_seq_no</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <name pos:start="141:25" pos:end="141:38"><name pos:start="141:25" pos:end="141:25">c</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:38">min_end_seq</name></name> <operator pos:start="141:40" pos:end="141:40">-</operator> <literal type="number" pos:start="141:42" pos:end="141:42">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="145:5" pos:end="145:13">return <expr pos:start="145:12" pos:end="145:12"><literal type="number" pos:start="145:12" pos:end="145:12">0</literal></expr>;</return>

<label pos:start="147:1" pos:end="147:5"><name pos:start="147:1" pos:end="147:4">fail</name>:</label>

    <expr_stmt pos:start="149:5" pos:end="149:25"><expr pos:start="149:5" pos:end="149:24"><call pos:start="149:5" pos:end="149:24"><name pos:start="149:5" pos:end="149:21">free_variant_list</name><argument_list pos:start="149:22" pos:end="149:24">(<argument pos:start="149:23" pos:end="149:23"><expr pos:start="149:23" pos:end="149:23"><name pos:start="149:23" pos:end="149:23">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="151:5" pos:end="151:15">return <expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
