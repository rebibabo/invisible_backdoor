<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8523.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dv_extract_audio</name><parameter_list pos:start="1:28" pos:end="3:49">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:35">uint8_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">frame</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:57">ppcm</name><index pos:start="1:58" pos:end="1:60">[<expr pos:start="1:59" pos:end="1:59"><literal type="number" pos:start="1:59" pos:end="1:59">4</literal></expr>]</index></name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:43">DVprofile</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">sys</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="191:1">{<block_content pos:start="7:5" pos:end="189:16">

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">chan</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:24">j</name></decl>, <decl pos:start="7:27" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:27">d</name></decl>, <decl pos:start="7:30" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:31">of</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:38">smpls</name></decl>, <decl pos:start="7:41" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:44">freq</name></decl>, <decl pos:start="7:47" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:51">quant</name></decl>, <decl pos:start="7:54" pos:end="7:60"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:54" pos:end="7:60">half_ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:15">lc</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">as_pack</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pcm</name></decl>, <decl pos:start="13:19" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:19" pos:end="13:22">ipcm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:11">as_pack</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:53"><name pos:start="17:15" pos:end="17:29">dv_extract_pack</name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">frame</name></expr></argument>, <argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><name pos:start="17:38" pos:end="17:52">dv_audio_source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">as_pack</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">    <comment type="block" pos:start="19:22" pos:end="19:37">/* No audio ? */</comment>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:9">smpls</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:19">as_pack</name><index pos:start="25:20" pos:end="25:22">[<expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>]</index></name>      <operator pos:start="25:29" pos:end="25:29">&amp;</operator> <literal type="number" pos:start="25:31" pos:end="25:34">0x3f</literal></expr>;</expr_stmt> <comment type="block" pos:start="25:37" pos:end="25:78">/* samples in this frame - min. samples */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:8">freq</name>  <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:19">as_pack</name><index pos:start="27:20" pos:end="27:22">[<expr pos:start="27:21" pos:end="27:21"><literal type="number" pos:start="27:21" pos:end="27:21">4</literal></expr>]</index></name> <operator pos:start="27:24" pos:end="27:25">&gt;&gt;</operator> <literal type="number" pos:start="27:27" pos:end="27:27">3</literal> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <literal type="number" pos:start="27:31" pos:end="27:34">0x07</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:37" pos:end="27:75">/* 0 - 48kHz, 1 - 44,1kHz, 2 - 32kHz */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:9">quant</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:19">as_pack</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">4</literal></expr>]</index></name>      <operator pos:start="29:29" pos:end="29:29">&amp;</operator> <literal type="number" pos:start="29:31" pos:end="29:34">0x07</literal></expr>;</expr_stmt> <comment type="block" pos:start="29:37" pos:end="29:79">/* 0 - 16bit linear, 1 - 12bit nonlinear */</comment>



    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">quant</name> <operator pos:start="33:15" pos:end="33:15">&gt;</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt>  <comment type="block" pos:start="35:21" pos:end="35:50">/* unsupported quantization */</comment>



    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:51">(<expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:12">freq</name> <operator pos:start="39:14" pos:end="39:15">&gt;=</operator> <call pos:start="39:17" pos:end="39:50"><name pos:start="39:17" pos:end="39:30">FF_ARRAY_ELEMS</name><argument_list pos:start="39:31" pos:end="39:50">(<argument pos:start="39:32" pos:end="39:49"><expr pos:start="39:32" pos:end="39:49"><name pos:start="39:32" pos:end="39:49">dv_audio_frequency</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:8">size</name>    <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:43"><name pos:start="45:16" pos:end="45:18">sys</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:37">audio_min_samples</name><index pos:start="45:38" pos:end="45:43">[<expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">freq</name></expr>]</index></name> <operator pos:start="45:45" pos:end="45:45">+</operator> <name pos:start="45:47" pos:end="45:51">smpls</name><operator pos:start="45:52" pos:end="45:52">)</operator> <operator pos:start="45:54" pos:end="45:54">*</operator> <literal type="number" pos:start="45:56" pos:end="45:56">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:59" pos:end="45:75">/* 2ch, 2bytes */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:11">half_ch</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:30"><name pos:start="47:15" pos:end="47:17">sys</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">difseg_size</name></name> <operator pos:start="47:32" pos:end="47:32">/</operator> <literal type="number" pos:start="47:34" pos:end="47:34">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:35">/* We work with 720p frames split in half, thus even frames have

     * channels 0,1 and odd 2,3. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:8">ipcm</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <ternary pos:start="55:12" pos:end="55:61"><condition pos:start="55:12" pos:end="55:55"><expr pos:start="55:12" pos:end="55:53"><operator pos:start="55:12" pos:end="55:12">(</operator><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:15">sys</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:23">height</name></name> <operator pos:start="55:25" pos:end="55:26">==</operator> <literal type="number" pos:start="55:28" pos:end="55:30">720</literal> <operator pos:start="55:32" pos:end="55:33">&amp;&amp;</operator> <operator pos:start="55:35" pos:end="55:35">!</operator><operator pos:start="55:36" pos:end="55:36">(</operator><name pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:41">frame</name><index pos:start="55:42" pos:end="55:44">[<expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">1</literal></expr>]</index></name> <operator pos:start="55:46" pos:end="55:46">&amp;</operator> <literal type="number" pos:start="55:48" pos:end="55:51">0x0C</literal><operator pos:start="55:52" pos:end="55:52">)</operator><operator pos:start="55:53" pos:end="55:53">)</operator></expr> ?</condition><then pos:start="55:57" pos:end="55:57"> <expr pos:start="55:57" pos:end="55:57"><literal type="number" pos:start="55:57" pos:end="55:57">2</literal></expr> </then><else pos:start="55:59" pos:end="55:61">: <expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:30">/* for each DIF channel */</comment>

    <for pos:start="61:5" pos:end="185:5">for <control pos:start="61:9" pos:end="61:49">(<init pos:start="61:10" pos:end="61:18"><expr pos:start="61:10" pos:end="61:17"><name pos:start="61:10" pos:end="61:13">chan</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>;</init> <condition pos:start="61:20" pos:end="61:41"><expr pos:start="61:20" pos:end="61:40"><name pos:start="61:20" pos:end="61:23">chan</name> <operator pos:start="61:25" pos:end="61:25">&lt;</operator> <name pos:start="61:27" pos:end="61:40"><name pos:start="61:27" pos:end="61:29">sys</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:40">n_difchan</name></name></expr>;</condition> <incr pos:start="61:43" pos:end="61:48"><expr pos:start="61:43" pos:end="61:48"><name pos:start="61:43" pos:end="61:46">chan</name><operator pos:start="61:47" pos:end="61:48">++</operator></expr></incr>)</control> <block pos:start="61:51" pos:end="185:5">{<block_content pos:start="65:9" pos:end="183:9">

        <comment type="block" pos:start="63:9" pos:end="63:59">/* next stereo channel (50Mbps and 100Mbps only) */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:11">pcm</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:26"><name pos:start="65:15" pos:end="65:18">ppcm</name><index pos:start="65:19" pos:end="65:26">[<expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:23">ipcm</name><operator pos:start="65:24" pos:end="65:25">++</operator></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:18"><if pos:start="67:9" pos:end="69:18">if <condition pos:start="67:12" pos:end="67:17">(<expr pos:start="67:13" pos:end="67:16"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:16">pcm</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:18"><block_content pos:start="69:13" pos:end="69:18">

            <break pos:start="69:13" pos:end="69:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:34">/* for each DIF segment */</comment>

        <for pos:start="75:9" pos:end="183:9">for <control pos:start="75:13" pos:end="75:46">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:41"><expr pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:27">sys</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:40">difseg_size</name></name></expr>;</condition> <incr pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:43">i</name><operator pos:start="75:44" pos:end="75:45">++</operator></expr></incr>)</control> <block pos:start="75:48" pos:end="183:9">{<block_content pos:start="77:13" pos:end="181:13">

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:17">frame</name> <operator pos:start="77:19" pos:end="77:20">+=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">6</literal> <operator pos:start="77:24" pos:end="77:24">*</operator> <literal type="number" pos:start="77:26" pos:end="77:27">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:30" pos:end="77:58">/* skip DIF segment header */</comment>

            <if_stmt pos:start="79:13" pos:end="89:13"><if pos:start="79:13" pos:end="89:13">if <condition pos:start="79:16" pos:end="79:43">(<expr pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:21">quant</name> <operator pos:start="79:23" pos:end="79:24">==</operator> <literal type="number" pos:start="79:26" pos:end="79:26">1</literal> <operator pos:start="79:28" pos:end="79:29">&amp;&amp;</operator> <name pos:start="79:31" pos:end="79:31">i</name> <operator pos:start="79:33" pos:end="79:34">==</operator> <name pos:start="79:36" pos:end="79:42">half_ch</name></expr>)</condition> <block pos:start="79:45" pos:end="89:13">{<block_content pos:start="83:17" pos:end="87:26">

                <comment type="block" pos:start="81:17" pos:end="81:59">/* next stereo channel (12bit mode only) */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:35"><expr pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:19">pcm</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:26">ppcm</name><index pos:start="83:27" pos:end="83:34">[<expr pos:start="83:28" pos:end="83:33"><name pos:start="83:28" pos:end="83:31">ipcm</name><operator pos:start="83:32" pos:end="83:33">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="87:26"><if pos:start="85:17" pos:end="87:26">if <condition pos:start="85:20" pos:end="85:25">(<expr pos:start="85:21" pos:end="85:24"><operator pos:start="85:21" pos:end="85:21">!</operator><name pos:start="85:22" pos:end="85:24">pcm</name></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:26"><block_content pos:start="87:21" pos:end="87:26">

                    <break pos:start="87:21" pos:end="87:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="93:13" pos:end="93:38">/* for each AV sequence */</comment>

            <for pos:start="95:13" pos:end="181:13">for <control pos:start="95:17" pos:end="95:35">(<init pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:22"><name pos:start="95:18" pos:end="95:18">j</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</init> <condition pos:start="95:25" pos:end="95:30"><expr pos:start="95:25" pos:end="95:29"><name pos:start="95:25" pos:end="95:25">j</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <literal type="number" pos:start="95:29" pos:end="95:29">9</literal></expr>;</condition> <incr pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><name pos:start="95:32" pos:end="95:32">j</name><operator pos:start="95:33" pos:end="95:34">++</operator></expr></incr>)</control> <block pos:start="95:37" pos:end="181:13">{<block_content pos:start="97:17" pos:end="179:33">

                <for pos:start="97:17" pos:end="175:17">for <control pos:start="97:21" pos:end="97:43">(<init pos:start="97:22" pos:end="97:27"><expr pos:start="97:22" pos:end="97:26"><name pos:start="97:22" pos:end="97:22">d</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <literal type="number" pos:start="97:26" pos:end="97:26">8</literal></expr>;</init> <condition pos:start="97:29" pos:end="97:35"><expr pos:start="97:29" pos:end="97:34"><name pos:start="97:29" pos:end="97:29">d</name> <operator pos:start="97:31" pos:end="97:31">&lt;</operator> <literal type="number" pos:start="97:33" pos:end="97:34">80</literal></expr>;</condition> <incr pos:start="97:37" pos:end="97:42"><expr pos:start="97:37" pos:end="97:42"><name pos:start="97:37" pos:end="97:37">d</name> <operator pos:start="97:39" pos:end="97:40">+=</operator> <literal type="number" pos:start="97:42" pos:end="97:42">2</literal></expr></incr>)</control> <block pos:start="97:45" pos:end="175:17">{<block_content pos:start="99:21" pos:end="173:21">

                    <if_stmt pos:start="99:21" pos:end="173:21"><if pos:start="99:21" pos:end="125:21">if <condition pos:start="99:24" pos:end="99:35">(<expr pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:29">quant</name> <operator pos:start="99:31" pos:end="99:32">==</operator> <literal type="number" pos:start="99:34" pos:end="99:34">0</literal></expr>)</condition> <block pos:start="99:37" pos:end="125:21">{<block_content pos:start="101:25" pos:end="123:48">  <comment type="block" pos:start="99:40" pos:end="99:63">/* 16bit quantization */</comment>

                        <expr_stmt pos:start="101:25" pos:end="103:61"><expr pos:start="101:25" pos:end="103:60"><name pos:start="101:25" pos:end="101:26">of</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:53"><name pos:start="101:30" pos:end="101:32">sys</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:47">audio_shuffle</name><index pos:start="101:48" pos:end="101:50">[<expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">i</name></expr>]</index><index pos:start="101:51" pos:end="101:53">[<expr pos:start="101:52" pos:end="101:52"><name pos:start="101:52" pos:end="101:52">j</name></expr>]</index></name> <operator pos:start="101:55" pos:end="101:55">+</operator>

                             <operator pos:start="103:30" pos:end="103:30">(</operator><name pos:start="103:31" pos:end="103:31">d</name> <operator pos:start="103:33" pos:end="103:33">-</operator> <literal type="number" pos:start="103:35" pos:end="103:35">8</literal><operator pos:start="103:36" pos:end="103:36">)</operator> <operator pos:start="103:38" pos:end="103:38">/</operator> <literal type="number" pos:start="103:40" pos:end="103:40">2</literal> <operator pos:start="103:42" pos:end="103:42">*</operator> <name pos:start="103:44" pos:end="103:60"><name pos:start="103:44" pos:end="103:46">sys</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:60">audio_stride</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="105:25" pos:end="107:37"><if pos:start="105:25" pos:end="107:37">if <condition pos:start="105:28" pos:end="105:43">(<expr pos:start="105:29" pos:end="105:42"><name pos:start="105:29" pos:end="105:30">of</name> <operator pos:start="105:32" pos:end="105:32">*</operator> <literal type="number" pos:start="105:34" pos:end="105:34">2</literal> <operator pos:start="105:36" pos:end="105:37">&gt;=</operator> <name pos:start="105:39" pos:end="105:42">size</name></expr>)</condition><block type="pseudo" pos:start="107:29" pos:end="107:37"><block_content pos:start="107:29" pos:end="107:37">

                            <continue pos:start="107:29" pos:end="107:37">continue;</continue></block_content></block></if></if_stmt>



                        <comment type="block" pos:start="111:25" pos:end="113:44">/* FIXME: maybe we have to admit that DV is a

                         * big-endian PCM */</comment>

                        <expr_stmt pos:start="115:25" pos:end="115:55"><expr pos:start="115:25" pos:end="115:54"><name pos:start="115:25" pos:end="115:35"><name pos:start="115:25" pos:end="115:27">pcm</name><index pos:start="115:28" pos:end="115:35">[<expr pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:30">of</name> <operator pos:start="115:32" pos:end="115:32">*</operator> <literal type="number" pos:start="115:34" pos:end="115:34">2</literal></expr>]</index></name>     <operator pos:start="115:41" pos:end="115:41">=</operator> <name pos:start="115:43" pos:end="115:54"><name pos:start="115:43" pos:end="115:47">frame</name><index pos:start="115:48" pos:end="115:54">[<expr pos:start="115:49" pos:end="115:53"><name pos:start="115:49" pos:end="115:49">d</name> <operator pos:start="115:51" pos:end="115:51">+</operator> <literal type="number" pos:start="115:53" pos:end="115:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="117:25" pos:end="117:51"><expr pos:start="117:25" pos:end="117:50"><name pos:start="117:25" pos:end="117:39"><name pos:start="117:25" pos:end="117:27">pcm</name><index pos:start="117:28" pos:end="117:39">[<expr pos:start="117:29" pos:end="117:38"><name pos:start="117:29" pos:end="117:30">of</name> <operator pos:start="117:32" pos:end="117:32">*</operator> <literal type="number" pos:start="117:34" pos:end="117:34">2</literal> <operator pos:start="117:36" pos:end="117:36">+</operator> <literal type="number" pos:start="117:38" pos:end="117:38">1</literal></expr>]</index></name> <operator pos:start="117:41" pos:end="117:41">=</operator> <name pos:start="117:43" pos:end="117:50"><name pos:start="117:43" pos:end="117:47">frame</name><index pos:start="117:48" pos:end="117:50">[<expr pos:start="117:49" pos:end="117:49"><name pos:start="117:49" pos:end="117:49">d</name></expr>]</index></name></expr>;</expr_stmt>



                        <if_stmt pos:start="121:25" pos:end="123:48"><if pos:start="121:25" pos:end="123:48">if <condition pos:start="121:28" pos:end="121:75">(<expr pos:start="121:29" pos:end="121:74"><name pos:start="121:29" pos:end="121:43"><name pos:start="121:29" pos:end="121:31">pcm</name><index pos:start="121:32" pos:end="121:43">[<expr pos:start="121:33" pos:end="121:42"><name pos:start="121:33" pos:end="121:34">of</name> <operator pos:start="121:36" pos:end="121:36">*</operator> <literal type="number" pos:start="121:38" pos:end="121:38">2</literal> <operator pos:start="121:40" pos:end="121:40">+</operator> <literal type="number" pos:start="121:42" pos:end="121:42">1</literal></expr>]</index></name> <operator pos:start="121:45" pos:end="121:46">==</operator> <literal type="number" pos:start="121:48" pos:end="121:51">0x80</literal> <operator pos:start="121:53" pos:end="121:54">&amp;&amp;</operator> <name pos:start="121:56" pos:end="121:66"><name pos:start="121:56" pos:end="121:58">pcm</name><index pos:start="121:59" pos:end="121:66">[<expr pos:start="121:60" pos:end="121:65"><name pos:start="121:60" pos:end="121:61">of</name> <operator pos:start="121:63" pos:end="121:63">*</operator> <literal type="number" pos:start="121:65" pos:end="121:65">2</literal></expr>]</index></name> <operator pos:start="121:68" pos:end="121:69">==</operator> <literal type="number" pos:start="121:71" pos:end="121:74">0x00</literal></expr>)</condition><block type="pseudo" pos:start="123:29" pos:end="123:48"><block_content pos:start="123:29" pos:end="123:48">

                            <expr_stmt pos:start="123:29" pos:end="123:48"><expr pos:start="123:29" pos:end="123:47"><name pos:start="123:29" pos:end="123:43"><name pos:start="123:29" pos:end="123:31">pcm</name><index pos:start="123:32" pos:end="123:43">[<expr pos:start="123:33" pos:end="123:42"><name pos:start="123:33" pos:end="123:34">of</name> <operator pos:start="123:36" pos:end="123:36">*</operator> <literal type="number" pos:start="123:38" pos:end="123:38">2</literal> <operator pos:start="123:40" pos:end="123:40">+</operator> <literal type="number" pos:start="123:42" pos:end="123:42">1</literal></expr>]</index></name> <operator pos:start="123:45" pos:end="123:45">=</operator> <literal type="number" pos:start="123:47" pos:end="123:47">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="125:23" pos:end="173:21">else <block pos:start="125:28" pos:end="173:21">{<block_content pos:start="127:25" pos:end="171:28">           <comment type="block" pos:start="125:40" pos:end="125:63">/* 12bit quantization */</comment>

                        <expr_stmt pos:start="127:25" pos:end="129:59"><expr pos:start="127:25" pos:end="129:58"><name pos:start="127:25" pos:end="127:26">lc</name> <operator pos:start="127:28" pos:end="127:28">=</operator> <operator pos:start="127:30" pos:end="127:30">(</operator><operator pos:start="127:31" pos:end="127:31">(</operator><name pos:start="127:32" pos:end="127:39">uint16_t</name><operator pos:start="127:40" pos:end="127:40">)</operator><name pos:start="127:41" pos:end="127:48"><name pos:start="127:41" pos:end="127:45">frame</name><index pos:start="127:46" pos:end="127:48">[<expr pos:start="127:47" pos:end="127:47"><name pos:start="127:47" pos:end="127:47">d</name></expr>]</index></name>     <operator pos:start="127:54" pos:end="127:55">&lt;&lt;</operator> <literal type="number" pos:start="127:57" pos:end="127:57">4</literal><operator pos:start="127:58" pos:end="127:58">)</operator> <operator pos:start="127:60" pos:end="127:60">|</operator>

                             <operator pos:start="129:30" pos:end="129:30">(</operator><operator pos:start="129:31" pos:end="129:31">(</operator><name pos:start="129:32" pos:end="129:39">uint16_t</name><operator pos:start="129:40" pos:end="129:40">)</operator><name pos:start="129:41" pos:end="129:52"><name pos:start="129:41" pos:end="129:45">frame</name><index pos:start="129:46" pos:end="129:52">[<expr pos:start="129:47" pos:end="129:51"><name pos:start="129:47" pos:end="129:47">d</name> <operator pos:start="129:49" pos:end="129:49">+</operator> <literal type="number" pos:start="129:51" pos:end="129:51">2</literal></expr>]</index></name> <operator pos:start="129:54" pos:end="129:55">&gt;&gt;</operator> <literal type="number" pos:start="129:57" pos:end="129:57">4</literal><operator pos:start="129:58" pos:end="129:58">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="131:25" pos:end="133:61"><expr pos:start="131:25" pos:end="133:60"><name pos:start="131:25" pos:end="131:26">rc</name> <operator pos:start="131:28" pos:end="131:28">=</operator> <operator pos:start="131:30" pos:end="131:30">(</operator><operator pos:start="131:31" pos:end="131:31">(</operator><name pos:start="131:32" pos:end="131:39">uint16_t</name><operator pos:start="131:40" pos:end="131:40">)</operator><name pos:start="131:41" pos:end="131:52"><name pos:start="131:41" pos:end="131:45">frame</name><index pos:start="131:46" pos:end="131:52">[<expr pos:start="131:47" pos:end="131:51"><name pos:start="131:47" pos:end="131:47">d</name> <operator pos:start="131:49" pos:end="131:49">+</operator> <literal type="number" pos:start="131:51" pos:end="131:51">1</literal></expr>]</index></name> <operator pos:start="131:54" pos:end="131:55">&lt;&lt;</operator> <literal type="number" pos:start="131:57" pos:end="131:57">4</literal><operator pos:start="131:58" pos:end="131:58">)</operator> <operator pos:start="131:60" pos:end="131:60">|</operator>

                             <operator pos:start="133:30" pos:end="133:30">(</operator><operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:39">uint16_t</name><operator pos:start="133:40" pos:end="133:40">)</operator><name pos:start="133:41" pos:end="133:52"><name pos:start="133:41" pos:end="133:45">frame</name><index pos:start="133:46" pos:end="133:52">[<expr pos:start="133:47" pos:end="133:51"><name pos:start="133:47" pos:end="133:47">d</name> <operator pos:start="133:49" pos:end="133:49">+</operator> <literal type="number" pos:start="133:51" pos:end="133:51">2</literal></expr>]</index></name> <operator pos:start="133:54" pos:end="133:54">&amp;</operator> <literal type="number" pos:start="133:56" pos:end="133:59">0x0f</literal><operator pos:start="133:60" pos:end="133:60">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:69"><expr pos:start="135:25" pos:end="135:68"><name pos:start="135:25" pos:end="135:26">lc</name> <operator pos:start="135:28" pos:end="135:28">=</operator> <operator pos:start="135:30" pos:end="135:30">(</operator><ternary pos:start="135:31" pos:end="135:67"><condition pos:start="135:31" pos:end="135:43"><expr pos:start="135:31" pos:end="135:41"><name pos:start="135:31" pos:end="135:32">lc</name> <operator pos:start="135:34" pos:end="135:35">==</operator> <literal type="number" pos:start="135:37" pos:end="135:41">0x800</literal></expr> ?</condition><then pos:start="135:45" pos:end="135:45"> <expr pos:start="135:45" pos:end="135:45"><literal type="number" pos:start="135:45" pos:end="135:45">0</literal></expr> </then><else pos:start="135:47" pos:end="135:67">: <expr pos:start="135:49" pos:end="135:67"><call pos:start="135:49" pos:end="135:67"><name pos:start="135:49" pos:end="135:63">dv_audio_12to16</name><argument_list pos:start="135:64" pos:end="135:67">(<argument pos:start="135:65" pos:end="135:66"><expr pos:start="135:65" pos:end="135:66"><name pos:start="135:65" pos:end="135:66">lc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="135:68" pos:end="135:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="137:25" pos:end="137:69"><expr pos:start="137:25" pos:end="137:68"><name pos:start="137:25" pos:end="137:26">rc</name> <operator pos:start="137:28" pos:end="137:28">=</operator> <operator pos:start="137:30" pos:end="137:30">(</operator><ternary pos:start="137:31" pos:end="137:67"><condition pos:start="137:31" pos:end="137:43"><expr pos:start="137:31" pos:end="137:41"><name pos:start="137:31" pos:end="137:32">rc</name> <operator pos:start="137:34" pos:end="137:35">==</operator> <literal type="number" pos:start="137:37" pos:end="137:41">0x800</literal></expr> ?</condition><then pos:start="137:45" pos:end="137:45"> <expr pos:start="137:45" pos:end="137:45"><literal type="number" pos:start="137:45" pos:end="137:45">0</literal></expr> </then><else pos:start="137:47" pos:end="137:67">: <expr pos:start="137:49" pos:end="137:67"><call pos:start="137:49" pos:end="137:67"><name pos:start="137:49" pos:end="137:63">dv_audio_12to16</name><argument_list pos:start="137:64" pos:end="137:67">(<argument pos:start="137:65" pos:end="137:66"><expr pos:start="137:65" pos:end="137:66"><name pos:start="137:65" pos:end="137:66">rc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="137:68" pos:end="137:68">)</operator></expr>;</expr_stmt>



                        <expr_stmt pos:start="141:25" pos:end="143:61"><expr pos:start="141:25" pos:end="143:60"><name pos:start="141:25" pos:end="141:26">of</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:63"><name pos:start="141:30" pos:end="141:32">sys</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:47">audio_shuffle</name><index pos:start="141:48" pos:end="141:60">[<expr pos:start="141:49" pos:end="141:59"><name pos:start="141:49" pos:end="141:49">i</name> <operator pos:start="141:51" pos:end="141:51">%</operator> <name pos:start="141:53" pos:end="141:59">half_ch</name></expr>]</index><index pos:start="141:61" pos:end="141:63">[<expr pos:start="141:62" pos:end="141:62"><name pos:start="141:62" pos:end="141:62">j</name></expr>]</index></name> <operator pos:start="141:65" pos:end="141:65">+</operator>

                             <operator pos:start="143:30" pos:end="143:30">(</operator><name pos:start="143:31" pos:end="143:31">d</name> <operator pos:start="143:33" pos:end="143:33">-</operator> <literal type="number" pos:start="143:35" pos:end="143:35">8</literal><operator pos:start="143:36" pos:end="143:36">)</operator> <operator pos:start="143:38" pos:end="143:38">/</operator> <literal type="number" pos:start="143:40" pos:end="143:40">3</literal> <operator pos:start="143:42" pos:end="143:42">*</operator> <name pos:start="143:44" pos:end="143:60"><name pos:start="143:44" pos:end="143:46">sys</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:60">audio_stride</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="145:25" pos:end="147:37"><if pos:start="145:25" pos:end="147:37">if <condition pos:start="145:28" pos:end="145:43">(<expr pos:start="145:29" pos:end="145:42"><name pos:start="145:29" pos:end="145:30">of</name> <operator pos:start="145:32" pos:end="145:32">*</operator> <literal type="number" pos:start="145:34" pos:end="145:34">2</literal> <operator pos:start="145:36" pos:end="145:37">&gt;=</operator> <name pos:start="145:39" pos:end="145:42">size</name></expr>)</condition><block type="pseudo" pos:start="147:29" pos:end="147:37"><block_content pos:start="147:29" pos:end="147:37">

                            <continue pos:start="147:29" pos:end="147:37">continue;</continue></block_content></block></if></if_stmt>



                        <comment type="block" pos:start="151:25" pos:end="153:44">/* FIXME: maybe we have to admit that DV is a

                         * big-endian PCM */</comment>

                        <expr_stmt pos:start="155:25" pos:end="155:52"><expr pos:start="155:25" pos:end="155:51"><name pos:start="155:25" pos:end="155:35"><name pos:start="155:25" pos:end="155:27">pcm</name><index pos:start="155:28" pos:end="155:35">[<expr pos:start="155:29" pos:end="155:34"><name pos:start="155:29" pos:end="155:30">of</name> <operator pos:start="155:32" pos:end="155:32">*</operator> <literal type="number" pos:start="155:34" pos:end="155:34">2</literal></expr>]</index></name>     <operator pos:start="155:41" pos:end="155:41">=</operator> <name pos:start="155:43" pos:end="155:44">lc</name> <operator pos:start="155:46" pos:end="155:46">&amp;</operator> <literal type="number" pos:start="155:48" pos:end="155:51">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="157:25" pos:end="157:50"><expr pos:start="157:25" pos:end="157:49"><name pos:start="157:25" pos:end="157:39"><name pos:start="157:25" pos:end="157:27">pcm</name><index pos:start="157:28" pos:end="157:39">[<expr pos:start="157:29" pos:end="157:38"><name pos:start="157:29" pos:end="157:30">of</name> <operator pos:start="157:32" pos:end="157:32">*</operator> <literal type="number" pos:start="157:34" pos:end="157:34">2</literal> <operator pos:start="157:36" pos:end="157:36">+</operator> <literal type="number" pos:start="157:38" pos:end="157:38">1</literal></expr>]</index></name> <operator pos:start="157:41" pos:end="157:41">=</operator> <name pos:start="157:43" pos:end="157:44">lc</name> <operator pos:start="157:46" pos:end="157:47">&gt;&gt;</operator> <literal type="number" pos:start="157:49" pos:end="157:49">8</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="161:61"><expr pos:start="159:25" pos:end="161:60"><name pos:start="159:25" pos:end="159:26">of</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:73"><name pos:start="159:30" pos:end="159:32">sys</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:47">audio_shuffle</name><index pos:start="159:48" pos:end="159:70">[<expr pos:start="159:49" pos:end="159:69"><name pos:start="159:49" pos:end="159:49">i</name> <operator pos:start="159:51" pos:end="159:51">%</operator> <name pos:start="159:53" pos:end="159:59">half_ch</name> <operator pos:start="159:61" pos:end="159:61">+</operator> <name pos:start="159:63" pos:end="159:69">half_ch</name></expr>]</index><index pos:start="159:71" pos:end="159:73">[<expr pos:start="159:72" pos:end="159:72"><name pos:start="159:72" pos:end="159:72">j</name></expr>]</index></name> <operator pos:start="159:75" pos:end="159:75">+</operator>

                             <operator pos:start="161:30" pos:end="161:30">(</operator><name pos:start="161:31" pos:end="161:31">d</name> <operator pos:start="161:33" pos:end="161:33">-</operator> <literal type="number" pos:start="161:35" pos:end="161:35">8</literal><operator pos:start="161:36" pos:end="161:36">)</operator> <operator pos:start="161:38" pos:end="161:38">/</operator> <literal type="number" pos:start="161:40" pos:end="161:40">3</literal> <operator pos:start="161:42" pos:end="161:42">*</operator> <name pos:start="161:44" pos:end="161:60"><name pos:start="161:44" pos:end="161:46">sys</name><operator pos:start="161:47" pos:end="161:48">-&gt;</operator><name pos:start="161:49" pos:end="161:60">audio_stride</name></name></expr>;</expr_stmt>

                        <comment type="block" pos:start="163:25" pos:end="165:44">/* FIXME: maybe we have to admit that DV is a

                         * big-endian PCM */</comment>

                        <expr_stmt pos:start="167:25" pos:end="167:52"><expr pos:start="167:25" pos:end="167:51"><name pos:start="167:25" pos:end="167:35"><name pos:start="167:25" pos:end="167:27">pcm</name><index pos:start="167:28" pos:end="167:35">[<expr pos:start="167:29" pos:end="167:34"><name pos:start="167:29" pos:end="167:30">of</name> <operator pos:start="167:32" pos:end="167:32">*</operator> <literal type="number" pos:start="167:34" pos:end="167:34">2</literal></expr>]</index></name>     <operator pos:start="167:41" pos:end="167:41">=</operator> <name pos:start="167:43" pos:end="167:44">rc</name> <operator pos:start="167:46" pos:end="167:46">&amp;</operator> <literal type="number" pos:start="167:48" pos:end="167:51">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="169:25" pos:end="169:50"><expr pos:start="169:25" pos:end="169:49"><name pos:start="169:25" pos:end="169:39"><name pos:start="169:25" pos:end="169:27">pcm</name><index pos:start="169:28" pos:end="169:39">[<expr pos:start="169:29" pos:end="169:38"><name pos:start="169:29" pos:end="169:30">of</name> <operator pos:start="169:32" pos:end="169:32">*</operator> <literal type="number" pos:start="169:34" pos:end="169:34">2</literal> <operator pos:start="169:36" pos:end="169:36">+</operator> <literal type="number" pos:start="169:38" pos:end="169:38">1</literal></expr>]</index></name> <operator pos:start="169:41" pos:end="169:41">=</operator> <name pos:start="169:43" pos:end="169:44">rc</name> <operator pos:start="169:46" pos:end="169:47">&gt;&gt;</operator> <literal type="number" pos:start="169:49" pos:end="169:49">8</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="171:25" pos:end="171:28"><expr pos:start="171:25" pos:end="171:27"><operator pos:start="171:25" pos:end="171:26">++</operator><name pos:start="171:27" pos:end="171:27">d</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="179:17" pos:end="179:33"><expr pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:21">frame</name> <operator pos:start="179:23" pos:end="179:24">+=</operator> <literal type="number" pos:start="179:26" pos:end="179:27">16</literal> <operator pos:start="179:29" pos:end="179:29">*</operator> <literal type="number" pos:start="179:31" pos:end="179:32">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="179:35" pos:end="179:67">/* 15 Video DIFs + 1 Audio DIF */</comment>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="189:5" pos:end="189:16">return <expr pos:start="189:12" pos:end="189:15"><name pos:start="189:12" pos:end="189:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
