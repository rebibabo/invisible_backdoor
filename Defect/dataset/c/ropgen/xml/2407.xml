<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2407.c" pos:tabs="8"><function pos:start="1:1" pos:end="122:40"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">virtqueue_pop</name><parameter_list pos:start="1:18" pos:end="1:56">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:27">VirtQueue</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:31">vq</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:55"><decl pos:start="1:34" pos:end="1:55"><type pos:start="1:34" pos:end="1:55"><name pos:start="1:34" pos:end="1:49">VirtQueueElement</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">elem</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="122:40">{<block_content pos:start="5:5" pos:end="122:40">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">i</name></decl>, <decl pos:start="5:21" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:21" pos:end="5:24">head</name></decl>, <decl pos:start="5:27" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:27" pos:end="5:29">max</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:30">desc_pa</name> <init pos:start="7:32" pos:end="7:47">= <expr pos:start="7:34" pos:end="7:47"><name pos:start="7:34" pos:end="7:47"><name pos:start="7:34" pos:end="7:35">vq</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:42">vring</name><operator pos:start="7:43" pos:end="7:43">.</operator><name pos:start="7:44" pos:end="7:47">desc</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:53">(<expr pos:start="11:9" pos:end="11:52"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:52"><name pos:start="11:10" pos:end="11:28">virtqueue_num_heads</name><argument_list pos:start="11:29" pos:end="11:52">(<argument pos:start="11:30" pos:end="11:31"><expr pos:start="11:30" pos:end="11:31"><name pos:start="11:30" pos:end="11:31">vq</name></expr></argument>, <argument pos:start="11:34" pos:end="11:51"><expr pos:start="11:34" pos:end="11:51"><name pos:start="11:34" pos:end="11:51"><name pos:start="11:34" pos:end="11:35">vq</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:51">last_avail_idx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:66">/* When we start there are none of either input nor output. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:8">elem</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:17">out_num</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:24">elem</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:32">in_num</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">max</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <name pos:start="23:11" pos:end="23:23"><name pos:start="23:11" pos:end="23:12">vq</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">vring</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:23">num</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:5">i</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:12">head</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:59"><name pos:start="27:16" pos:end="27:33">virtqueue_get_head</name><argument_list pos:start="27:34" pos:end="27:59">(<argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><name pos:start="27:35" pos:end="27:36">vq</name></expr></argument>, <argument pos:start="27:39" pos:end="27:58"><expr pos:start="27:39" pos:end="27:58"><name pos:start="27:39" pos:end="27:56"><name pos:start="27:39" pos:end="27:40">vq</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:56">last_avail_idx</name></name><operator pos:start="27:57" pos:end="27:58">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="122:40"><if pos:start="29:5" pos:end="122:40">if <condition pos:start="29:8" pos:end="29:66">(<expr pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:10">vq</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:16">vdev</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:32">guest_features</name></name> <operator pos:start="29:34" pos:end="29:34">&amp;</operator> <operator pos:start="29:36" pos:end="29:36">(</operator><literal type="number" pos:start="29:37" pos:end="29:37">1</literal> <operator pos:start="29:39" pos:end="29:40">&lt;&lt;</operator> <name pos:start="29:42" pos:end="29:64">VIRTIO_RING_F_EVENT_IDX</name><operator pos:start="29:65" pos:end="29:65">)</operator></expr>)</condition> <block pos:start="29:68" pos:end="122:40">{<block_content pos:start="31:9" pos:end="122:40">

        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:25">vring_avail_event</name><argument_list pos:start="31:26" pos:end="31:50">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">vq</name></expr></argument>, <argument pos:start="31:31" pos:end="31:49"><expr pos:start="31:31" pos:end="31:49"><call pos:start="31:31" pos:end="31:49"><name pos:start="31:31" pos:end="31:45">vring_avail_idx</name><argument_list pos:start="31:46" pos:end="31:49">(<argument pos:start="31:47" pos:end="31:48"><expr pos:start="31:47" pos:end="31:48"><name pos:start="31:47" pos:end="31:48">vq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="36:5" pos:end="122:40"><if pos:start="36:5" pos:end="122:40">if <condition pos:start="36:8" pos:end="36:61">(<expr pos:start="36:9" pos:end="36:60"><call pos:start="36:9" pos:end="36:36"><name pos:start="36:9" pos:end="36:24">vring_desc_flags</name><argument_list pos:start="36:25" pos:end="36:36">(<argument pos:start="36:26" pos:end="36:32"><expr pos:start="36:26" pos:end="36:32"><name pos:start="36:26" pos:end="36:32">desc_pa</name></expr></argument>, <argument pos:start="36:35" pos:end="36:35"><expr pos:start="36:35" pos:end="36:35"><name pos:start="36:35" pos:end="36:35">i</name></expr></argument>)</argument_list></call> <operator pos:start="36:38" pos:end="36:38">&amp;</operator> <name pos:start="36:40" pos:end="36:60">VRING_DESC_F_INDIRECT</name></expr>)</condition> <block pos:start="36:63" pos:end="122:40">{<block_content pos:start="38:9" pos:end="122:40">

        <if_stmt pos:start="38:9" pos:end="122:40"><if pos:start="38:9" pos:end="122:40">if <condition pos:start="38:12" pos:end="38:59">(<expr pos:start="38:13" pos:end="38:58"><call pos:start="38:13" pos:end="38:38"><name pos:start="38:13" pos:end="38:26">vring_desc_len</name><argument_list pos:start="38:27" pos:end="38:38">(<argument pos:start="38:28" pos:end="38:34"><expr pos:start="38:28" pos:end="38:34"><name pos:start="38:28" pos:end="38:34">desc_pa</name></expr></argument>, <argument pos:start="38:37" pos:end="38:37"><expr pos:start="38:37" pos:end="38:37"><name pos:start="38:37" pos:end="38:37">i</name></expr></argument>)</argument_list></call> <operator pos:start="38:40" pos:end="38:40">%</operator> <sizeof pos:start="38:42" pos:end="38:58">sizeof<argument_list pos:start="38:48" pos:end="38:58">(<argument pos:start="38:49" pos:end="38:57"><expr pos:start="38:49" pos:end="38:57"><name pos:start="38:49" pos:end="38:57">VRingDesc</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="38:61" pos:end="122:40">{<block_content pos:start="40:13" pos:end="122:40">

            <expr_stmt pos:start="40:13" pos:end="40:67"><expr pos:start="40:13" pos:end="40:66"><call pos:start="40:13" pos:end="40:66"><name pos:start="40:13" pos:end="40:24">error_report</name><argument_list pos:start="40:25" pos:end="40:66">(<argument pos:start="40:26" pos:end="40:65"><expr pos:start="40:26" pos:end="40:65"><literal type="string" pos:start="40:26" pos:end="40:65">"Invalid size for indirect buffer table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <comment type="block" pos:start="46:9" pos:end="46:53">/* loop over the indirect descriptor table */</comment>

        <expr_stmt pos:start="48:9" pos:end="48:61"><expr pos:start="48:9" pos:end="48:60"><name pos:start="48:9" pos:end="48:11">max</name> <operator pos:start="48:13" pos:end="48:13">=</operator> <call pos:start="48:15" pos:end="48:40"><name pos:start="48:15" pos:end="48:28">vring_desc_len</name><argument_list pos:start="48:29" pos:end="48:40">(<argument pos:start="48:30" pos:end="48:36"><expr pos:start="48:30" pos:end="48:36"><name pos:start="48:30" pos:end="48:36">desc_pa</name></expr></argument>, <argument pos:start="48:39" pos:end="48:39"><expr pos:start="48:39" pos:end="48:39"><name pos:start="48:39" pos:end="48:39">i</name></expr></argument>)</argument_list></call> <operator pos:start="48:42" pos:end="48:42">/</operator> <sizeof pos:start="48:44" pos:end="48:60">sizeof<argument_list pos:start="48:50" pos:end="48:60">(<argument pos:start="48:51" pos:end="48:59"><expr pos:start="48:51" pos:end="48:59"><name pos:start="48:51" pos:end="48:59">VRingDesc</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="50:9" pos:end="50:46"><expr pos:start="50:9" pos:end="50:45"><name pos:start="50:9" pos:end="50:15">desc_pa</name> <operator pos:start="50:17" pos:end="50:17">=</operator> <call pos:start="50:19" pos:end="50:45"><name pos:start="50:19" pos:end="50:33">vring_desc_addr</name><argument_list pos:start="50:34" pos:end="50:45">(<argument pos:start="50:35" pos:end="50:41"><expr pos:start="50:35" pos:end="50:41"><name pos:start="50:35" pos:end="50:41">desc_pa</name></expr></argument>, <argument pos:start="50:44" pos:end="50:44"><expr pos:start="50:44" pos:end="50:44"><name pos:start="50:44" pos:end="50:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="52:9" pos:end="52:14"><expr pos:start="52:9" pos:end="52:13"><name pos:start="52:9" pos:end="52:9">i</name> <operator pos:start="52:11" pos:end="52:11">=</operator> <literal type="number" pos:start="52:13" pos:end="52:13">0</literal></expr>;</expr_stmt>




    <comment type="block" pos:start="57:5" pos:end="57:37">/* Collect all the descriptors */</comment>

    <do pos:start="59:5" pos:end="122:40">do <block pos:start="59:8" pos:end="122:40">{<block_content pos:start="61:9" pos:end="122:40">

        <decl_stmt pos:start="61:9" pos:end="61:25"><decl pos:start="61:9" pos:end="61:24"><type pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:14">struct</name> <name pos:start="61:16" pos:end="61:20">iovec</name></name> <modifier pos:start="61:22" pos:end="61:22">*</modifier></type><name pos:start="61:23" pos:end="61:24">sg</name></decl>;</decl_stmt>



        <if_stmt pos:start="65:9" pos:end="122:40"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:62">(<expr pos:start="65:13" pos:end="65:61"><call pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:28">vring_desc_flags</name><argument_list pos:start="65:29" pos:end="65:40">(<argument pos:start="65:30" pos:end="65:36"><expr pos:start="65:30" pos:end="65:36"><name pos:start="65:30" pos:end="65:36">desc_pa</name></expr></argument>, <argument pos:start="65:39" pos:end="65:39"><expr pos:start="65:39" pos:end="65:39"><name pos:start="65:39" pos:end="65:39">i</name></expr></argument>)</argument_list></call> <operator pos:start="65:42" pos:end="65:42">&amp;</operator> <name pos:start="65:44" pos:end="65:61">VRING_DESC_F_WRITE</name></expr>)</condition> <block pos:start="65:64" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:46">





            <expr_stmt pos:start="71:13" pos:end="71:70"><expr pos:start="71:13" pos:end="71:69"><name pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:16">elem</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:25">in_addr</name><index pos:start="71:26" pos:end="71:39">[<expr pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:30">elem</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:38">in_num</name></name></expr>]</index></name> <operator pos:start="71:41" pos:end="71:41">=</operator> <call pos:start="71:43" pos:end="71:69"><name pos:start="71:43" pos:end="71:57">vring_desc_addr</name><argument_list pos:start="71:58" pos:end="71:69">(<argument pos:start="71:59" pos:end="71:65"><expr pos:start="71:59" pos:end="71:65"><name pos:start="71:59" pos:end="71:65">desc_pa</name></expr></argument>, <argument pos:start="71:68" pos:end="71:68"><expr pos:start="71:68" pos:end="71:68"><name pos:start="71:68" pos:end="71:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:14">sg</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:45"><name pos:start="73:19" pos:end="73:22">elem</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">in_sg</name><index pos:start="73:30" pos:end="73:45">[<expr pos:start="73:31" pos:end="73:44"><name pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:34">elem</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:42">in_num</name></name><operator pos:start="73:43" pos:end="73:44">++</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="122:40">else <block pos:start="75:16" pos:end="122:40">{<block_content pos:start="81:13" pos:end="122:40">





            <expr_stmt pos:start="81:13" pos:end="81:72"><expr pos:start="81:13" pos:end="81:71"><name pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:16">elem</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:26">out_addr</name><index pos:start="81:27" pos:end="81:41">[<expr pos:start="81:28" pos:end="81:40"><name pos:start="81:28" pos:end="81:40"><name pos:start="81:28" pos:end="81:31">elem</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:40">out_num</name></name></expr>]</index></name> <operator pos:start="81:43" pos:end="81:43">=</operator> <call pos:start="81:45" pos:end="81:71"><name pos:start="81:45" pos:end="81:59">vring_desc_addr</name><argument_list pos:start="81:60" pos:end="81:71">(<argument pos:start="81:61" pos:end="81:67"><expr pos:start="81:61" pos:end="81:67"><name pos:start="81:61" pos:end="81:67">desc_pa</name></expr></argument>, <argument pos:start="81:70" pos:end="81:70"><expr pos:start="81:70" pos:end="81:70"><name pos:start="81:70" pos:end="81:70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:14">sg</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:47"><name pos:start="83:19" pos:end="83:22">elem</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:30">out_sg</name><index pos:start="83:31" pos:end="83:47">[<expr pos:start="83:32" pos:end="83:46"><name pos:start="83:32" pos:end="83:44"><name pos:start="83:32" pos:end="83:35">elem</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:44">out_num</name></name><operator pos:start="83:45" pos:end="83:46">++</operator></expr>]</index></name></expr>;</expr_stmt>




        <expr_stmt pos:start="88:9" pos:end="88:49"><expr pos:start="88:9" pos:end="88:48"><name pos:start="88:9" pos:end="88:19"><name pos:start="88:9" pos:end="88:10">sg</name><operator pos:start="88:11" pos:end="88:12">-&gt;</operator><name pos:start="88:13" pos:end="88:19">iov_len</name></name> <operator pos:start="88:21" pos:end="88:21">=</operator> <call pos:start="88:23" pos:end="88:48"><name pos:start="88:23" pos:end="88:36">vring_desc_len</name><argument_list pos:start="88:37" pos:end="88:48">(<argument pos:start="88:38" pos:end="88:44"><expr pos:start="88:38" pos:end="88:44"><name pos:start="88:38" pos:end="88:44">desc_pa</name></expr></argument>, <argument pos:start="88:47" pos:end="88:47"><expr pos:start="88:47" pos:end="88:47"><name pos:start="88:47" pos:end="88:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="92:9" pos:end="92:68">/* If we've got too many, that implies a descriptor loop. */</comment>

        <if_stmt pos:start="94:9" pos:end="100:5"><if pos:start="94:9" pos:end="100:5">if <condition pos:start="94:12" pos:end="94:49">(<expr pos:start="94:13" pos:end="94:48"><operator pos:start="94:13" pos:end="94:13">(</operator><name pos:start="94:14" pos:end="94:25"><name pos:start="94:14" pos:end="94:17">elem</name><operator pos:start="94:18" pos:end="94:19">-&gt;</operator><name pos:start="94:20" pos:end="94:25">in_num</name></name> <operator pos:start="94:27" pos:end="94:27">+</operator> <name pos:start="94:29" pos:end="94:41"><name pos:start="94:29" pos:end="94:32">elem</name><operator pos:start="94:33" pos:end="94:34">-&gt;</operator><name pos:start="94:35" pos:end="94:41">out_num</name></name><operator pos:start="94:42" pos:end="94:42">)</operator> <operator pos:start="94:44" pos:end="94:44">&gt;</operator> <name pos:start="94:46" pos:end="94:48">max</name></expr>)</condition> <block pos:start="94:51" pos:end="100:5">{<block_content pos:start="96:13" pos:end="96:46">

            <expr_stmt pos:start="96:13" pos:end="96:46"><expr pos:start="96:13" pos:end="96:45"><call pos:start="96:13" pos:end="96:45"><name pos:start="96:13" pos:end="96:24">error_report</name><argument_list pos:start="96:25" pos:end="96:45">(<argument pos:start="96:26" pos:end="96:44"><expr pos:start="96:26" pos:end="96:44"><literal type="string" pos:start="96:26" pos:end="96:44">"Looped descriptor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt> <while pos:start="100:7" pos:end="100:64">while <condition pos:start="100:13" pos:end="100:63">(<expr pos:start="100:14" pos:end="100:62"><operator pos:start="100:14" pos:end="100:14">(</operator><name pos:start="100:15" pos:end="100:15">i</name> <operator pos:start="100:17" pos:end="100:17">=</operator> <call pos:start="100:19" pos:end="100:54"><name pos:start="100:19" pos:end="100:37">virtqueue_next_desc</name><argument_list pos:start="100:38" pos:end="100:54">(<argument pos:start="100:39" pos:end="100:45"><expr pos:start="100:39" pos:end="100:45"><name pos:start="100:39" pos:end="100:45">desc_pa</name></expr></argument>, <argument pos:start="100:48" pos:end="100:48"><expr pos:start="100:48" pos:end="100:48"><name pos:start="100:48" pos:end="100:48">i</name></expr></argument>, <argument pos:start="100:51" pos:end="100:53"><expr pos:start="100:51" pos:end="100:53"><name pos:start="100:51" pos:end="100:53">max</name></expr></argument>)</argument_list></call><operator pos:start="100:55" pos:end="100:55">)</operator> <operator pos:start="100:57" pos:end="100:58">!=</operator> <name pos:start="100:60" pos:end="100:62">max</name></expr>)</condition><block type="pseudo" pos:start="100:64" pos:end="100:64"><block_content pos:start="100:64" pos:end="100:64"><empty_stmt pos:start="100:64" pos:end="100:64">;</empty_stmt></block_content></block></while>



    <comment type="block" pos:start="104:5" pos:end="104:40">/* Now map what we have collected */</comment>

    <expr_stmt pos:start="106:5" pos:end="106:66"><expr pos:start="106:5" pos:end="106:65"><call pos:start="106:5" pos:end="106:65"><name pos:start="106:5" pos:end="106:20">virtqueue_map_sg</name><argument_list pos:start="106:21" pos:end="106:65">(<argument pos:start="106:22" pos:end="106:32"><expr pos:start="106:22" pos:end="106:32"><name pos:start="106:22" pos:end="106:32"><name pos:start="106:22" pos:end="106:25">elem</name><operator pos:start="106:26" pos:end="106:27">-&gt;</operator><name pos:start="106:28" pos:end="106:32">in_sg</name></name></expr></argument>, <argument pos:start="106:35" pos:end="106:47"><expr pos:start="106:35" pos:end="106:47"><name pos:start="106:35" pos:end="106:47"><name pos:start="106:35" pos:end="106:38">elem</name><operator pos:start="106:39" pos:end="106:40">-&gt;</operator><name pos:start="106:41" pos:end="106:47">in_addr</name></name></expr></argument>, <argument pos:start="106:50" pos:end="106:61"><expr pos:start="106:50" pos:end="106:61"><name pos:start="106:50" pos:end="106:61"><name pos:start="106:50" pos:end="106:53">elem</name><operator pos:start="106:54" pos:end="106:55">-&gt;</operator><name pos:start="106:56" pos:end="106:61">in_num</name></name></expr></argument>, <argument pos:start="106:64" pos:end="106:64"><expr pos:start="106:64" pos:end="106:64"><literal type="number" pos:start="106:64" pos:end="106:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="108:5" pos:end="108:69"><expr pos:start="108:5" pos:end="108:68"><call pos:start="108:5" pos:end="108:68"><name pos:start="108:5" pos:end="108:20">virtqueue_map_sg</name><argument_list pos:start="108:21" pos:end="108:68">(<argument pos:start="108:22" pos:end="108:33"><expr pos:start="108:22" pos:end="108:33"><name pos:start="108:22" pos:end="108:33"><name pos:start="108:22" pos:end="108:25">elem</name><operator pos:start="108:26" pos:end="108:27">-&gt;</operator><name pos:start="108:28" pos:end="108:33">out_sg</name></name></expr></argument>, <argument pos:start="108:36" pos:end="108:49"><expr pos:start="108:36" pos:end="108:49"><name pos:start="108:36" pos:end="108:49"><name pos:start="108:36" pos:end="108:39">elem</name><operator pos:start="108:40" pos:end="108:41">-&gt;</operator><name pos:start="108:42" pos:end="108:49">out_addr</name></name></expr></argument>, <argument pos:start="108:52" pos:end="108:64"><expr pos:start="108:52" pos:end="108:64"><name pos:start="108:52" pos:end="108:64"><name pos:start="108:52" pos:end="108:55">elem</name><operator pos:start="108:56" pos:end="108:57">-&gt;</operator><name pos:start="108:58" pos:end="108:64">out_num</name></name></expr></argument>, <argument pos:start="108:67" pos:end="108:67"><expr pos:start="108:67" pos:end="108:67"><literal type="number" pos:start="108:67" pos:end="108:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="112:5" pos:end="112:23"><expr pos:start="112:5" pos:end="112:22"><name pos:start="112:5" pos:end="112:15"><name pos:start="112:5" pos:end="112:8">elem</name><operator pos:start="112:9" pos:end="112:10">-&gt;</operator><name pos:start="112:11" pos:end="112:15">index</name></name> <operator pos:start="112:17" pos:end="112:17">=</operator> <name pos:start="112:19" pos:end="112:22">head</name></expr>;</expr_stmt>



    <expr_stmt pos:start="116:5" pos:end="116:16"><expr pos:start="116:5" pos:end="116:15"><name pos:start="116:5" pos:end="116:13"><name pos:start="116:5" pos:end="116:6">vq</name><operator pos:start="116:7" pos:end="116:8">-&gt;</operator><name pos:start="116:9" pos:end="116:13">inuse</name></name><operator pos:start="116:14" pos:end="116:15">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="120:5" pos:end="120:63"><expr pos:start="120:5" pos:end="120:62"><call pos:start="120:5" pos:end="120:62"><name pos:start="120:5" pos:end="120:23">trace_virtqueue_pop</name><argument_list pos:start="120:24" pos:end="120:62">(<argument pos:start="120:25" pos:end="120:26"><expr pos:start="120:25" pos:end="120:26"><name pos:start="120:25" pos:end="120:26">vq</name></expr></argument>, <argument pos:start="120:29" pos:end="120:32"><expr pos:start="120:29" pos:end="120:32"><name pos:start="120:29" pos:end="120:32">elem</name></expr></argument>, <argument pos:start="120:35" pos:end="120:46"><expr pos:start="120:35" pos:end="120:46"><name pos:start="120:35" pos:end="120:46"><name pos:start="120:35" pos:end="120:38">elem</name><operator pos:start="120:39" pos:end="120:40">-&gt;</operator><name pos:start="120:41" pos:end="120:46">in_num</name></name></expr></argument>, <argument pos:start="120:49" pos:end="120:61"><expr pos:start="120:49" pos:end="120:61"><name pos:start="120:49" pos:end="120:61"><name pos:start="120:49" pos:end="120:52">elem</name><operator pos:start="120:53" pos:end="120:54">-&gt;</operator><name pos:start="120:55" pos:end="120:61">out_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="122:5" pos:end="122:40">return <expr pos:start="122:12" pos:end="122:39"><name pos:start="122:12" pos:end="122:23"><name pos:start="122:12" pos:end="122:15">elem</name><operator pos:start="122:16" pos:end="122:17">-&gt;</operator><name pos:start="122:18" pos:end="122:23">in_num</name></name> <operator pos:start="122:25" pos:end="122:25">+</operator> <name pos:start="122:27" pos:end="122:39"><name pos:start="122:27" pos:end="122:30">elem</name><operator pos:start="122:31" pos:end="122:32">-&gt;</operator><name pos:start="122:33" pos:end="122:39">out_num</name></name></expr>;</return></block_content></block></else></if_stmt></block_content></block></do></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
