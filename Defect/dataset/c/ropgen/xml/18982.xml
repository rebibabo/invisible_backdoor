<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18982.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:11">timer_write</name><argument_list pos:start="1:12" pos:end="3:46">(<argument pos:start="1:13" pos:end="1:24">void *opaque</argument>, <argument pos:start="1:27" pos:end="1:37">hwaddr addr</argument>,

            <argument pos:start="3:13" pos:end="3:26">uint64_t val64</argument>, <argument pos:start="3:29" pos:end="3:45">unsigned int size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:24">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">timerblock</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">t</name> <init pos:start="7:26" pos:end="7:33">= <expr pos:start="7:28" pos:end="7:33"><name pos:start="7:28" pos:end="7:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">xlx_timer</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">xt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:22">timer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">value</name> <init pos:start="13:20" pos:end="13:26">= <expr pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:26">val64</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:8">addr</name> <operator pos:start="17:10" pos:end="17:12">&gt;&gt;=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:9">timer</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:27">timer_from_addr</name><argument_list pos:start="19:28" pos:end="19:33">(<argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:6">xt</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <operator pos:start="21:10" pos:end="21:10">&amp;</operator><name pos:start="21:11" pos:end="21:26"><name pos:start="21:11" pos:end="21:11">t</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">timers</name><index pos:start="21:20" pos:end="21:26">[<expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">timer</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:58"><expr pos:start="23:5" pos:end="25:57"><call pos:start="23:5" pos:end="25:57"><name pos:start="23:5" pos:end="23:5">D</name><argument_list pos:start="23:6" pos:end="25:57">(<argument pos:start="23:7" pos:end="25:56"><expr pos:start="23:7" pos:end="25:56"><call pos:start="23:7" pos:end="25:56"><name pos:start="23:7" pos:end="23:13">fprintf</name><argument_list pos:start="23:14" pos:end="25:56">(<argument pos:start="23:15" pos:end="23:20"><expr pos:start="23:15" pos:end="23:20"><name pos:start="23:15" pos:end="23:20">stderr</name></expr></argument>, <argument pos:start="23:23" pos:end="23:61"><expr pos:start="23:23" pos:end="23:61"><literal type="string" pos:start="23:23" pos:end="23:61">"%s addr=%x val=%x (timer=%d off=%d)\n"</literal></expr></argument>,

             <argument pos:start="25:14" pos:end="25:21"><expr pos:start="25:14" pos:end="25:21"><name pos:start="25:14" pos:end="25:21">__func__</name></expr></argument>, <argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:27">addr</name> <operator pos:start="25:29" pos:end="25:29">*</operator> <literal type="number" pos:start="25:31" pos:end="25:31">4</literal></expr></argument>, <argument pos:start="25:34" pos:end="25:38"><expr pos:start="25:34" pos:end="25:38"><name pos:start="25:34" pos:end="25:38">value</name></expr></argument>, <argument pos:start="25:41" pos:end="25:45"><expr pos:start="25:41" pos:end="25:45"><name pos:start="25:41" pos:end="25:45">timer</name></expr></argument>, <argument pos:start="25:48" pos:end="25:55"><expr pos:start="25:48" pos:end="25:55"><name pos:start="25:48" pos:end="25:51">addr</name> <operator pos:start="25:53" pos:end="25:53">&amp;</operator> <literal type="number" pos:start="25:55" pos:end="25:55">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:61">/* Further decoding to address a specific timers reg.  */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:14"><expr pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:8">addr</name> <operator pos:start="29:10" pos:end="29:11">&amp;=</operator> <literal type="number" pos:start="29:13" pos:end="29:13">3</literal></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="61:5">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">addr</name></expr>)</condition> 

    <block pos:start="33:5" pos:end="61:5">{<block_content pos:start="35:9" pos:end="59:18">

        <case pos:start="35:9" pos:end="35:20">case <expr pos:start="35:14" pos:end="35:19"><name pos:start="35:14" pos:end="35:19">R_TCSR</name></expr>:</case>

            <if_stmt pos:start="37:13" pos:end="39:36"><if pos:start="37:13" pos:end="39:36">if <condition pos:start="37:16" pos:end="37:34">(<expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:21">value</name> <operator pos:start="37:23" pos:end="37:23">&amp;</operator> <name pos:start="37:25" pos:end="37:33">TCSR_TINT</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:36"><block_content pos:start="39:17" pos:end="39:36">

                <expr_stmt pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:21">value</name> <operator pos:start="39:23" pos:end="39:24">&amp;=</operator> <operator pos:start="39:26" pos:end="39:26">~</operator><name pos:start="39:27" pos:end="39:35">TCSR_TINT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:14">xt</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">regs</name><index pos:start="43:21" pos:end="43:26">[<expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">addr</name></expr>]</index></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:34">value</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:33"><if pos:start="45:13" pos:end="47:33">if <condition pos:start="45:16" pos:end="45:33">(<expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:21">value</name> <operator pos:start="45:23" pos:end="45:23">&amp;</operator> <name pos:start="45:25" pos:end="45:32">TCSR_ENT</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:33"><block_content pos:start="47:17" pos:end="47:33">

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><call pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:28">timer_enable</name><argument_list pos:start="47:29" pos:end="47:32">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">xt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

 

        <default pos:start="53:9" pos:end="53:16">default:</default>

            <if_stmt pos:start="55:13" pos:end="57:39"><if pos:start="55:13" pos:end="57:39">if <condition pos:start="55:16" pos:end="55:44">(<expr pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:20">addr</name> <operator pos:start="55:22" pos:end="55:22">&lt;</operator> <call pos:start="55:24" pos:end="55:43"><name pos:start="55:24" pos:end="55:33">ARRAY_SIZE</name><argument_list pos:start="55:34" pos:end="55:43">(<argument pos:start="55:35" pos:end="55:42"><expr pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:36">xt</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:42">regs</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:39"><block_content pos:start="57:17" pos:end="57:39">

                <expr_stmt pos:start="57:17" pos:end="57:39"><expr pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:18">xt</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:24">regs</name><index pos:start="57:25" pos:end="57:30">[<expr pos:start="57:26" pos:end="57:29"><name pos:start="57:26" pos:end="57:29">addr</name></expr>]</index></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:38">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="63:5" pos:end="63:24"><expr pos:start="63:5" pos:end="63:23"><call pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:20">timer_update_irq</name><argument_list pos:start="63:21" pos:end="63:23">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
