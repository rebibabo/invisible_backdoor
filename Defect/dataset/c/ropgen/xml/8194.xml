<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8194.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_dc_progressive</name><parameter_list pos:start="1:33" pos:end="5:63">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:51">MJpegDecodeContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:63">int16_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">block</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:46">component</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:60"><decl pos:start="3:49" pos:end="3:60"><type pos:start="3:49" pos:end="3:60"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:60">dc_index</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:54"><decl pos:start="5:34" pos:end="5:54"><type pos:start="5:34" pos:end="5:54"><name pos:start="5:34" pos:end="5:40">int16_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:54">quant_matrix</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:62"><decl pos:start="5:57" pos:end="5:62"><type pos:start="5:57" pos:end="5:62"><name pos:start="5:57" pos:end="5:59">int</name></type> <name pos:start="5:61" pos:end="5:62">Al</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="31:1">{<block_content pos:start="9:5" pos:end="29:13">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:11">bdsp</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:23">clear_block</name></name><argument_list pos:start="11:24" pos:end="11:30">(<argument pos:start="11:25" pos:end="11:29"><expr pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:29">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:7">val</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:38"><name pos:start="13:11" pos:end="13:25">mjpeg_decode_dc</name><argument_list pos:start="13:26" pos:end="13:38">(<argument pos:start="13:27" pos:end="13:27"><expr pos:start="13:27" pos:end="13:27"><name pos:start="13:27" pos:end="13:27">s</name></expr></argument>, <argument pos:start="13:30" pos:end="13:37"><expr pos:start="13:30" pos:end="13:37"><name pos:start="13:30" pos:end="13:37">dc_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">val</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <literal type="number" pos:start="15:16" pos:end="15:22">0xfffff</literal></expr>)</condition> <block pos:start="15:25" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:35">

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:52">(<argument pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">avctx</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:40" pos:end="17:51"><expr pos:start="17:40" pos:end="17:51"><literal type="string" pos:start="17:40" pos:end="17:51">"error dc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:7">val</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <operator pos:start="23:11" pos:end="23:11">(</operator><name pos:start="23:12" pos:end="23:14">val</name> <operator pos:start="23:16" pos:end="23:16">*</operator> <operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:33"><name pos:start="23:19" pos:end="23:30">quant_matrix</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr>]</index></name> <operator pos:start="23:35" pos:end="23:36">&lt;&lt;</operator> <name pos:start="23:38" pos:end="23:39">Al</name><operator pos:start="23:40" pos:end="23:40">)</operator><operator pos:start="23:41" pos:end="23:41">)</operator> <operator pos:start="23:43" pos:end="23:43">+</operator> <name pos:start="23:45" pos:end="23:65"><name pos:start="23:45" pos:end="23:45">s</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:54">last_dc</name><index pos:start="23:55" pos:end="23:65">[<expr pos:start="23:56" pos:end="23:64"><name pos:start="23:56" pos:end="23:64">component</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">last_dc</name><index pos:start="25:15" pos:end="25:25">[<expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:24">component</name></expr>]</index></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:31">val</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:9">block</name><index pos:start="27:10" pos:end="27:12">[<expr pos:start="27:11" pos:end="27:11"><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>]</index></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:18">val</name></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
