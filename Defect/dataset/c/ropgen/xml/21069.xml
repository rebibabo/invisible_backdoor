<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21069.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">ff_draw_init</name><parameter_list pos:start="1:17" pos:end="1:80">(<parameter pos:start="1:18" pos:end="1:36"><decl pos:start="1:18" pos:end="1:36"><type pos:start="1:18" pos:end="1:36"><name pos:start="1:18" pos:end="1:30">FFDrawContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:36">draw</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:63"><decl pos:start="1:39" pos:end="1:63"><type pos:start="1:39" pos:end="1:63"><name pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:42">enum</name> <name pos:start="1:44" pos:end="1:56">AVPixelFormat</name></name></type> <name pos:start="1:58" pos:end="1:63">format</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:73">unsigned</name></type> <name pos:start="1:75" pos:end="1:79">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:30"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:28">AVPixFmtDescriptor</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">desc</name> <init pos:start="5:36" pos:end="5:64">= <expr pos:start="5:38" pos:end="5:64"><call pos:start="5:38" pos:end="5:64"><name pos:start="5:38" pos:end="5:56">av_pix_fmt_desc_get</name><argument_list pos:start="5:57" pos:end="5:64">(<argument pos:start="5:58" pos:end="5:63"><expr pos:start="5:58" pos:end="5:63"><name pos:start="5:58" pos:end="5:63">format</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:33"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:31">AVComponentDescriptor</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:34">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:17" pos:end="9:25">nb_planes</name> <init pos:start="9:27" pos:end="9:29">= <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:17">pixelstep</name><index pos:start="11:18" pos:end="11:29">[<expr pos:start="11:19" pos:end="11:28"><name pos:start="11:19" pos:end="11:28">MAX_PLANES</name></expr>]</index></name> <init pos:start="11:31" pos:end="11:37">= <expr pos:start="11:33" pos:end="11:37"><block pos:start="11:33" pos:end="11:37">{ <expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:13">desc</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">name</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:122">(<expr pos:start="19:9" pos:end="19:121"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:12">desc</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:19">flags</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <operator pos:start="19:23" pos:end="19:23">~</operator><operator pos:start="19:24" pos:end="19:24">(</operator><name pos:start="19:25" pos:end="19:46">AV_PIX_FMT_FLAG_PLANAR</name> <operator pos:start="19:48" pos:end="19:48">|</operator> <name pos:start="19:50" pos:end="19:68">AV_PIX_FMT_FLAG_RGB</name> <operator pos:start="19:70" pos:end="19:70">|</operator> <name pos:start="19:72" pos:end="19:96">AV_PIX_FMT_FLAG_PSEUDOPAL</name> <operator pos:start="19:98" pos:end="19:98">|</operator> <name pos:start="19:100" pos:end="19:120">AV_PIX_FMT_FLAG_ALPHA</name><operator pos:start="19:121" pos:end="19:121">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="23:5" pos:end="53:5">for <control pos:start="23:9" pos:end="23:45">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:40"><expr pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:24">desc</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:39">nb_components</name></name></expr>;</condition> <incr pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:42">i</name><operator pos:start="23:43" pos:end="23:44">++</operator></expr></incr>)</control> <block pos:start="23:47" pos:end="53:5">{<block_content pos:start="25:9" pos:end="51:51">

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:9">c</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">&amp;</operator><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:17">desc</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">comp</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:42">/* for now, only 8-bits formats */</comment>

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:37">(<expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:13">c</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:27">depth_minus1</name></name> <operator pos:start="29:29" pos:end="29:30">!=</operator> <literal type="number" pos:start="29:32" pos:end="29:34">8</literal> <operator pos:start="29:34" pos:end="29:34">-</operator> <literal type="number" pos:start="29:36" pos:end="29:36">1</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <return pos:start="31:13" pos:end="31:35">return <expr pos:start="31:20" pos:end="31:34"><call pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:35"><if pos:start="33:9" pos:end="35:35">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:13">c</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">plane</name></name> <operator pos:start="33:22" pos:end="33:23">&gt;=</operator> <name pos:start="33:25" pos:end="33:34">MAX_PLANES</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:34">/* strange interleaving */</comment>

        <if_stmt pos:start="39:9" pos:end="43:35"><if pos:start="39:9" pos:end="43:35">if <condition pos:start="39:12" pos:end="41:54">(<expr pos:start="39:13" pos:end="41:53"><name pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:21">pixelstep</name><index pos:start="39:22" pos:end="39:31">[<expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:23">c</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:30">plane</name></name></expr>]</index></name> <operator pos:start="39:33" pos:end="39:34">!=</operator> <literal type="number" pos:start="39:36" pos:end="39:36">0</literal> <operator pos:start="39:38" pos:end="39:39">&amp;&amp;</operator>

            <name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:21">pixelstep</name><index pos:start="41:22" pos:end="41:31">[<expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:23">c</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:30">plane</name></name></expr>]</index></name> <operator pos:start="41:33" pos:end="41:34">!=</operator> <name pos:start="41:36" pos:end="41:49"><name pos:start="41:36" pos:end="41:36">c</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:49">step_minus1</name></name> <operator pos:start="41:51" pos:end="41:51">+</operator> <literal type="number" pos:start="41:53" pos:end="41:53">1</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:35"><block_content pos:start="43:13" pos:end="43:35">

            <return pos:start="43:13" pos:end="43:35">return <expr pos:start="43:20" pos:end="43:34"><call pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:34">(<argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:17">pixelstep</name><index pos:start="45:18" pos:end="45:27">[<expr pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:19">c</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">plane</name></name></expr>]</index></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:44"><name pos:start="45:31" pos:end="45:31">c</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:44">step_minus1</name></name> <operator pos:start="45:46" pos:end="45:46">+</operator> <literal type="number" pos:start="45:48" pos:end="45:48">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:35"><if pos:start="47:9" pos:end="49:35">if <condition pos:start="47:12" pos:end="47:37">(<expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:21">pixelstep</name><index pos:start="47:22" pos:end="47:31">[<expr pos:start="47:23" pos:end="47:30"><name pos:start="47:23" pos:end="47:30"><name pos:start="47:23" pos:end="47:23">c</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">plane</name></name></expr>]</index></name> <operator pos:start="47:33" pos:end="47:34">&gt;=</operator> <literal type="number" pos:start="47:36" pos:end="47:36">8</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:35"><block_content pos:start="49:13" pos:end="49:35">

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:17">nb_planes</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:50"><name pos:start="51:21" pos:end="51:25">FFMAX</name><argument_list pos:start="51:26" pos:end="51:50">(<argument pos:start="51:27" pos:end="51:35"><expr pos:start="51:27" pos:end="51:35"><name pos:start="51:27" pos:end="51:35">nb_planes</name></expr></argument>, <argument pos:start="51:38" pos:end="51:49"><expr pos:start="51:38" pos:end="51:49"><name pos:start="51:38" pos:end="51:45"><name pos:start="51:38" pos:end="51:38">c</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:45">plane</name></name> <operator pos:start="51:47" pos:end="51:47">+</operator> <literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:70">(<expr pos:start="55:9" pos:end="55:69"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:28"><name pos:start="55:10" pos:end="55:13">desc</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:28">log2_chroma_w</name></name> <operator pos:start="55:30" pos:end="55:31">||</operator> <name pos:start="55:33" pos:end="55:51"><name pos:start="55:33" pos:end="55:36">desc</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:51">log2_chroma_h</name></name><operator pos:start="55:52" pos:end="55:52">)</operator> <operator pos:start="55:54" pos:end="55:55">&amp;&amp;</operator> <name pos:start="55:57" pos:end="55:65">nb_planes</name> <operator pos:start="55:67" pos:end="55:67">&lt;</operator> <literal type="number" pos:start="55:69" pos:end="55:69">3</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="57:33" pos:end="57:59">/* exclude NV12 and NV21 */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><call pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:34">(<argument pos:start="59:12" pos:end="59:15"><expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">draw</name></expr></argument>, <argument pos:start="59:18" pos:end="59:18"><expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr></argument>, <argument pos:start="59:21" pos:end="59:33"><expr pos:start="59:21" pos:end="59:33"><sizeof pos:start="59:21" pos:end="59:33">sizeof<argument_list pos:start="59:27" pos:end="59:33">(<argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><operator pos:start="59:28" pos:end="59:28">*</operator><name pos:start="59:29" pos:end="59:32">draw</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:8">draw</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:14">desc</name></name>      <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:26">desc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:8">draw</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:16">format</name></name>    <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:28">format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:8">draw</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:19">nb_planes</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:31">nb_planes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:64"><expr pos:start="67:5" pos:end="67:63"><call pos:start="67:5" pos:end="67:63"><name pos:start="67:5" pos:end="67:10">memcpy</name><argument_list pos:start="67:11" pos:end="67:63">(<argument pos:start="67:12" pos:end="67:26"><expr pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:15">draw</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:26">pixelstep</name></name></expr></argument>, <argument pos:start="67:29" pos:end="67:37"><expr pos:start="67:29" pos:end="67:37"><name pos:start="67:29" pos:end="67:37">pixelstep</name></expr></argument>, <argument pos:start="67:40" pos:end="67:62"><expr pos:start="67:40" pos:end="67:62"><sizeof pos:start="67:40" pos:end="67:62">sizeof<argument_list pos:start="67:46" pos:end="67:62">(<argument pos:start="67:47" pos:end="67:61"><expr pos:start="67:47" pos:end="67:61"><name pos:start="67:47" pos:end="67:61"><name pos:start="67:47" pos:end="67:50">draw</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:61">pixelstep</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:8">draw</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:14">hsub</name><index pos:start="69:15" pos:end="69:17">[<expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>]</index></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:24">draw</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:30">hsub</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">2</literal></expr>]</index></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <name pos:start="69:37" pos:end="69:50"><name pos:start="69:37" pos:end="69:40">draw</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:50">hsub_max</name></name> <operator pos:start="69:52" pos:end="69:52">=</operator> <name pos:start="69:54" pos:end="69:72"><name pos:start="69:54" pos:end="69:57">desc</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:72">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:73"><expr pos:start="71:5" pos:end="71:72"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:8">draw</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:14">vsub</name><index pos:start="71:15" pos:end="71:17">[<expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">1</literal></expr>]</index></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:24">draw</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:30">vsub</name><index pos:start="71:31" pos:end="71:33">[<expr pos:start="71:32" pos:end="71:32"><literal type="number" pos:start="71:32" pos:end="71:32">2</literal></expr>]</index></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:50"><name pos:start="71:37" pos:end="71:40">draw</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:50">vsub_max</name></name> <operator pos:start="71:52" pos:end="71:52">=</operator> <name pos:start="71:54" pos:end="71:72"><name pos:start="71:54" pos:end="71:57">desc</name><operator pos:start="71:58" pos:end="71:59">-&gt;</operator><name pos:start="71:60" pos:end="71:72">log2_chroma_h</name></name></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="77:50">for <control pos:start="73:9" pos:end="73:57">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:52"><expr pos:start="73:17" pos:end="73:51"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><operator pos:start="73:22" pos:end="73:22">(</operator><name pos:start="73:23" pos:end="73:41"><name pos:start="73:23" pos:end="73:26">desc</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:41">nb_components</name></name> <operator pos:start="73:43" pos:end="73:43">-</operator> <literal type="number" pos:start="73:45" pos:end="73:45">1</literal><operator pos:start="73:46" pos:end="73:46">)</operator> <operator pos:start="73:48" pos:end="73:48">|</operator> <literal type="number" pos:start="73:50" pos:end="73:50">1</literal><operator pos:start="73:51" pos:end="73:51">)</operator></expr>;</condition> <incr pos:start="73:54" pos:end="73:56"><expr pos:start="73:54" pos:end="73:56"><name pos:start="73:54" pos:end="73:54">i</name><operator pos:start="73:55" pos:end="73:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:9" pos:end="77:50"><block_content pos:start="75:9" pos:end="77:50">

        <expr_stmt pos:start="75:9" pos:end="77:50"><expr pos:start="75:9" pos:end="77:49"><name pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:12">draw</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:23">comp_mask</name><index pos:start="75:24" pos:end="75:44">[<expr pos:start="75:25" pos:end="75:43"><name pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:28">desc</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:34">comp</name><index pos:start="75:35" pos:end="75:37">[<expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">i</name></expr>]</index></name><operator pos:start="75:38" pos:end="75:38">.</operator><name pos:start="75:39" pos:end="75:43">plane</name></expr>]</index></name> <operator pos:start="75:46" pos:end="75:47">|=</operator>

            <literal type="number" pos:start="77:13" pos:end="77:13">1</literal> <operator pos:start="77:15" pos:end="77:16">&lt;&lt;</operator> <operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:22">desc</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:28">comp</name><index pos:start="77:29" pos:end="77:31">[<expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">i</name></expr>]</index></name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:44">offset_plus1</name> <operator pos:start="77:46" pos:end="77:46">-</operator> <literal type="number" pos:start="77:48" pos:end="77:48">1</literal><operator pos:start="77:49" pos:end="77:49">)</operator></expr>;</expr_stmt></block_content></block></for>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
