<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24810.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:43"><name pos:start="1:1" pos:end="1:20">petalogix_ml605_init</name><argument_list pos:start="1:21" pos:end="1:43">(<argument pos:start="1:22" pos:end="1:42">MachineState *machine</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="279:1">{<block_content pos:start="5:5" pos:end="275:33">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">ram_addr_t</name></type> <name pos:start="5:16" pos:end="5:23">ram_size</name> <init pos:start="5:25" pos:end="5:43">= <expr pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:33">machine</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:43">ram_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:35">address_space_mem</name> <init pos:start="7:37" pos:end="7:57">= <expr pos:start="7:39" pos:end="7:57"><call pos:start="7:39" pos:end="7:57"><name pos:start="7:39" pos:end="7:55">get_system_memory</name><argument_list pos:start="7:56" pos:end="7:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">dma</name></decl>, <decl pos:start="9:29" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:33">eth0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">Object</name> <modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:14">ds</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">MicroBlazeCPU</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">SysBusDevice</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:24">busdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:56"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">MemoryRegion</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:31">phys_lmb_bram</name> <init pos:start="21:33" pos:end="21:56">= <expr pos:start="21:35" pos:end="21:56"><call pos:start="21:35" pos:end="21:56"><name pos:start="21:35" pos:end="21:39">g_new</name><argument_list pos:start="21:40" pos:end="21:56">(<argument pos:start="21:41" pos:end="21:52"><expr pos:start="21:41" pos:end="21:52"><name pos:start="21:41" pos:end="21:52">MemoryRegion</name></expr></argument>, <argument pos:start="21:55" pos:end="21:55"><expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:52"><decl pos:start="23:5" pos:end="23:51"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">MemoryRegion</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:26">phys_ram</name> <init pos:start="23:28" pos:end="23:51">= <expr pos:start="23:30" pos:end="23:51"><call pos:start="23:30" pos:end="23:51"><name pos:start="23:30" pos:end="23:34">g_new</name><argument_list pos:start="23:35" pos:end="23:51">(<argument pos:start="23:36" pos:end="23:47"><expr pos:start="23:36" pos:end="23:47"><name pos:start="23:36" pos:end="23:47">MemoryRegion</name></expr></argument>, <argument pos:start="23:50" pos:end="23:50"><expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">qemu_irq</name></type> <name pos:start="25:14" pos:end="25:20"><name pos:start="25:14" pos:end="25:16">irq</name><index pos:start="25:17" pos:end="25:20">[<expr pos:start="25:18" pos:end="25:19"><literal type="number" pos:start="25:18" pos:end="25:19">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:19">/* init CPUs */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:7">cpu</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:57"><name pos:start="31:11" pos:end="31:24">MICROBLAZE_CPU</name><argument_list pos:start="31:25" pos:end="31:57">(<argument pos:start="31:26" pos:end="31:56"><expr pos:start="31:26" pos:end="31:56"><call pos:start="31:26" pos:end="31:56"><name pos:start="31:26" pos:end="31:35">object_new</name><argument_list pos:start="31:36" pos:end="31:56">(<argument pos:start="31:37" pos:end="31:55"><expr pos:start="31:37" pos:end="31:55"><name pos:start="31:37" pos:end="31:55">TYPE_MICROBLAZE_CPU</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="37:7">/* Use FPU but don't use floating point conversion and square

     * root instructions

     */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><call pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:27">object_property_set_int</name><argument_list pos:start="39:28" pos:end="39:68">(<argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><call pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:34">OBJECT</name><argument_list pos:start="39:35" pos:end="39:39">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">1</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:53"><expr pos:start="39:45" pos:end="39:53"><literal type="string" pos:start="39:45" pos:end="39:53">"use-fpu"</literal></expr></argument>, <argument pos:start="39:56" pos:end="39:67"><expr pos:start="39:56" pos:end="39:67"><operator pos:start="39:56" pos:end="39:56">&amp;</operator><name pos:start="39:57" pos:end="39:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:43"><expr pos:start="41:5" pos:end="43:42"><call pos:start="41:5" pos:end="43:42"><name pos:start="41:5" pos:end="41:28">object_property_set_bool</name><argument_list pos:start="41:29" pos:end="43:42">(<argument pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:40"><call pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:35">OBJECT</name><argument_list pos:start="41:36" pos:end="41:40">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">true</name></expr></argument>, <argument pos:start="41:49" pos:end="41:66"><expr pos:start="41:49" pos:end="41:66"><literal type="string" pos:start="41:49" pos:end="41:66">"dcache-writeback"</literal></expr></argument>,

                             <argument pos:start="43:30" pos:end="43:41"><expr pos:start="43:30" pos:end="43:41"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:41">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:76"><expr pos:start="45:5" pos:end="45:75"><call pos:start="45:5" pos:end="45:75"><name pos:start="45:5" pos:end="45:28">object_property_set_bool</name><argument_list pos:start="45:29" pos:end="45:75">(<argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><call pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:35">OBJECT</name><argument_list pos:start="45:36" pos:end="45:40">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">true</name></expr></argument>, <argument pos:start="45:49" pos:end="45:60"><expr pos:start="45:49" pos:end="45:60"><literal type="string" pos:start="45:49" pos:end="45:60">"endianness"</literal></expr></argument>, <argument pos:start="45:63" pos:end="45:74"><expr pos:start="45:63" pos:end="45:74"><operator pos:start="45:63" pos:end="45:63">&amp;</operator><name pos:start="45:64" pos:end="45:74">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:74"><expr pos:start="47:5" pos:end="47:73"><call pos:start="47:5" pos:end="47:73"><name pos:start="47:5" pos:end="47:28">object_property_set_bool</name><argument_list pos:start="47:29" pos:end="47:73">(<argument pos:start="47:30" pos:end="47:40"><expr pos:start="47:30" pos:end="47:40"><call pos:start="47:30" pos:end="47:40"><name pos:start="47:30" pos:end="47:35">OBJECT</name><argument_list pos:start="47:36" pos:end="47:40">(<argument pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:43" pos:end="47:46"><expr pos:start="47:43" pos:end="47:46"><name pos:start="47:43" pos:end="47:46">true</name></expr></argument>, <argument pos:start="47:49" pos:end="47:58"><expr pos:start="47:49" pos:end="47:58"><literal type="string" pos:start="47:49" pos:end="47:58">"realized"</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:72"><expr pos:start="47:61" pos:end="47:72"><operator pos:start="47:61" pos:end="47:61">&amp;</operator><name pos:start="47:62" pos:end="47:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:48">/* Attach emulated BRAM through the LMB.  */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:56"><expr pos:start="53:5" pos:end="55:55"><call pos:start="53:5" pos:end="55:55"><name pos:start="53:5" pos:end="53:26">memory_region_init_ram</name><argument_list pos:start="53:27" pos:end="55:55">(<argument pos:start="53:28" pos:end="53:40"><expr pos:start="53:28" pos:end="53:40"><name pos:start="53:28" pos:end="53:40">phys_lmb_bram</name></expr></argument>, <argument pos:start="53:43" pos:end="53:46"><expr pos:start="53:43" pos:end="53:46"><name pos:start="53:43" pos:end="53:46">NULL</name></expr></argument>, <argument pos:start="53:49" pos:end="53:74"><expr pos:start="53:49" pos:end="53:74"><literal type="string" pos:start="53:49" pos:end="53:74">"petalogix_ml605.lmb_bram"</literal></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:40"><expr pos:start="55:28" pos:end="55:40"><name pos:start="55:28" pos:end="55:40">LMB_BRAM_SIZE</name></expr></argument>, <argument pos:start="55:43" pos:end="55:54"><expr pos:start="55:43" pos:end="55:54"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:54">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><call pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:31">vmstate_register_ram_global</name><argument_list pos:start="57:32" pos:end="57:46">(<argument pos:start="57:33" pos:end="57:45"><expr pos:start="57:33" pos:end="57:45"><name pos:start="57:33" pos:end="57:45">phys_lmb_bram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:78"><expr pos:start="59:5" pos:end="59:77"><call pos:start="59:5" pos:end="59:77"><name pos:start="59:5" pos:end="59:31">memory_region_add_subregion</name><argument_list pos:start="59:32" pos:end="59:77">(<argument pos:start="59:33" pos:end="59:49"><expr pos:start="59:33" pos:end="59:49"><name pos:start="59:33" pos:end="59:49">address_space_mem</name></expr></argument>, <argument pos:start="59:52" pos:end="59:61"><expr pos:start="59:52" pos:end="59:61"><literal type="number" pos:start="59:52" pos:end="59:61">0x00000000</literal></expr></argument>, <argument pos:start="59:64" pos:end="59:76"><expr pos:start="59:64" pos:end="59:76"><name pos:start="59:64" pos:end="59:76">phys_lmb_bram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:41"><expr pos:start="63:5" pos:end="65:40"><call pos:start="63:5" pos:end="65:40"><name pos:start="63:5" pos:end="63:26">memory_region_init_ram</name><argument_list pos:start="63:27" pos:end="65:40">(<argument pos:start="63:28" pos:end="63:35"><expr pos:start="63:28" pos:end="63:35"><name pos:start="63:28" pos:end="63:35">phys_ram</name></expr></argument>, <argument pos:start="63:38" pos:end="63:41"><expr pos:start="63:38" pos:end="63:41"><name pos:start="63:38" pos:end="63:41">NULL</name></expr></argument>, <argument pos:start="63:44" pos:end="63:64"><expr pos:start="63:44" pos:end="63:64"><literal type="string" pos:start="63:44" pos:end="63:64">"petalogix_ml605.ram"</literal></expr></argument>, <argument pos:start="63:67" pos:end="63:74"><expr pos:start="63:67" pos:end="63:74"><name pos:start="63:67" pos:end="63:74">ram_size</name></expr></argument>,

                           <argument pos:start="65:28" pos:end="65:39"><expr pos:start="65:28" pos:end="65:39"><operator pos:start="65:28" pos:end="65:28">&amp;</operator><name pos:start="65:29" pos:end="65:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><call pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:31">vmstate_register_ram_global</name><argument_list pos:start="67:32" pos:end="67:41">(<argument pos:start="67:33" pos:end="67:40"><expr pos:start="67:33" pos:end="67:40"><name pos:start="67:33" pos:end="67:40">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:78"><expr pos:start="69:5" pos:end="69:77"><call pos:start="69:5" pos:end="69:77"><name pos:start="69:5" pos:end="69:31">memory_region_add_subregion</name><argument_list pos:start="69:32" pos:end="69:77">(<argument pos:start="69:33" pos:end="69:49"><expr pos:start="69:33" pos:end="69:49"><name pos:start="69:33" pos:end="69:49">address_space_mem</name></expr></argument>, <argument pos:start="69:52" pos:end="69:66"><expr pos:start="69:52" pos:end="69:66"><name pos:start="69:52" pos:end="69:66">MEMORY_BASEADDR</name></expr></argument>, <argument pos:start="69:69" pos:end="69:76"><expr pos:start="69:69" pos:end="69:76"><name pos:start="69:69" pos:end="69:76">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:9">dinfo</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:21">drive_get</name><argument_list pos:start="73:22" pos:end="73:38">(<argument pos:start="73:23" pos:end="73:31"><expr pos:start="73:23" pos:end="73:31"><name pos:start="73:23" pos:end="73:31">IF_PFLASH</name></expr></argument>, <argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><literal type="number" pos:start="73:34" pos:end="73:34">0</literal></expr></argument>, <argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="77:46">/* 5th parameter 2 means bank-width

     * 10th paremeter 0 means little-endian */</comment>

    <expr_stmt pos:start="79:5" pos:end="87:57"><expr pos:start="79:5" pos:end="87:56"><call pos:start="79:5" pos:end="87:56"><name pos:start="79:5" pos:end="79:25">pflash_cfi01_register</name><argument_list pos:start="79:26" pos:end="87:56">(<argument pos:start="79:27" pos:end="79:40"><expr pos:start="79:27" pos:end="79:40"><name pos:start="79:27" pos:end="79:40">FLASH_BASEADDR</name></expr></argument>,

                          <argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">NULL</name></expr></argument>, <argument pos:start="81:33" pos:end="81:55"><expr pos:start="81:33" pos:end="81:55"><literal type="string" pos:start="81:33" pos:end="81:55">"petalogix_ml605.flash"</literal></expr></argument>, <argument pos:start="81:58" pos:end="81:67"><expr pos:start="81:58" pos:end="81:67"><name pos:start="81:58" pos:end="81:67">FLASH_SIZE</name></expr></argument>,

                          <argument pos:start="83:27" pos:end="83:67"><expr pos:start="83:27" pos:end="83:67"><ternary pos:start="83:27" pos:end="83:67"><condition pos:start="83:27" pos:end="83:33"><expr pos:start="83:27" pos:end="83:31"><name pos:start="83:27" pos:end="83:31">dinfo</name></expr> ?</condition><then pos:start="83:35" pos:end="83:60"> <expr pos:start="83:35" pos:end="83:60"><call pos:start="83:35" pos:end="83:60"><name pos:start="83:35" pos:end="83:53">blk_by_legacy_dinfo</name><argument_list pos:start="83:54" pos:end="83:60">(<argument pos:start="83:55" pos:end="83:59"><expr pos:start="83:55" pos:end="83:59"><name pos:start="83:55" pos:end="83:59">dinfo</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="83:62" pos:end="83:67">: <expr pos:start="83:64" pos:end="83:67"><name pos:start="83:64" pos:end="83:67">NULL</name></expr></else></ternary></expr></argument>,

                          <argument pos:start="85:27" pos:end="85:37"><expr pos:start="85:27" pos:end="85:37"><operator pos:start="85:27" pos:end="85:27">(</operator><literal type="number" pos:start="85:28" pos:end="85:29">64</literal> <operator pos:start="85:31" pos:end="85:31">*</operator> <literal type="number" pos:start="85:33" pos:end="85:36">1024</literal><operator pos:start="85:37" pos:end="85:37">)</operator></expr></argument>, <argument pos:start="85:40" pos:end="85:55"><expr pos:start="85:40" pos:end="85:55"><name pos:start="85:40" pos:end="85:49">FLASH_SIZE</name> <operator pos:start="85:51" pos:end="85:52">&gt;&gt;</operator> <literal type="number" pos:start="85:54" pos:end="85:55">16</literal></expr></argument>,

                          <argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">2</literal></expr></argument>, <argument pos:start="87:30" pos:end="87:33"><expr pos:start="87:30" pos:end="87:33"><literal type="number" pos:start="87:30" pos:end="87:33">0x89</literal></expr></argument>, <argument pos:start="87:36" pos:end="87:39"><expr pos:start="87:36" pos:end="87:39"><literal type="number" pos:start="87:36" pos:end="87:39">0x18</literal></expr></argument>, <argument pos:start="87:42" pos:end="87:47"><expr pos:start="87:42" pos:end="87:47"><literal type="number" pos:start="87:42" pos:end="87:47">0x0000</literal></expr></argument>, <argument pos:start="87:50" pos:end="87:52"><expr pos:start="87:50" pos:end="87:52"><literal type="number" pos:start="87:50" pos:end="87:52">0x0</literal></expr></argument>, <argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="93:5" pos:end="93:45"><expr pos:start="93:5" pos:end="93:44"><name pos:start="93:5" pos:end="93:7">dev</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:44"><name pos:start="93:11" pos:end="93:21">qdev_create</name><argument_list pos:start="93:22" pos:end="93:44">(<argument pos:start="93:23" pos:end="93:26"><expr pos:start="93:23" pos:end="93:26"><name pos:start="93:23" pos:end="93:26">NULL</name></expr></argument>, <argument pos:start="93:29" pos:end="93:43"><expr pos:start="93:29" pos:end="93:43"><literal type="string" pos:start="93:29" pos:end="93:43">"xlnx.xps-intc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:62"><expr pos:start="95:5" pos:end="95:61"><call pos:start="95:5" pos:end="95:61"><name pos:start="95:5" pos:end="95:24">qdev_prop_set_uint32</name><argument_list pos:start="95:25" pos:end="95:61">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">dev</name></expr></argument>, <argument pos:start="95:31" pos:end="95:44"><expr pos:start="95:31" pos:end="95:44"><literal type="string" pos:start="95:31" pos:end="95:44">"kind-of-intr"</literal></expr></argument>, <argument pos:start="95:47" pos:end="95:60"><expr pos:start="95:47" pos:end="95:60"><literal type="number" pos:start="95:47" pos:end="95:47">1</literal> <operator pos:start="95:49" pos:end="95:50">&lt;&lt;</operator> <name pos:start="95:52" pos:end="95:60">TIMER_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:26"><expr pos:start="97:5" pos:end="97:25"><call pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:20">qdev_init_nofail</name><argument_list pos:start="97:21" pos:end="97:25">(<argument pos:start="97:22" pos:end="97:24"><expr pos:start="97:22" pos:end="97:24"><name pos:start="97:22" pos:end="97:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:59"><expr pos:start="99:5" pos:end="99:58"><call pos:start="99:5" pos:end="99:58"><name pos:start="99:5" pos:end="99:19">sysbus_mmio_map</name><argument_list pos:start="99:20" pos:end="99:58">(<argument pos:start="99:21" pos:end="99:39"><expr pos:start="99:21" pos:end="99:39"><call pos:start="99:21" pos:end="99:39"><name pos:start="99:21" pos:end="99:34">SYS_BUS_DEVICE</name><argument_list pos:start="99:35" pos:end="99:39">(<argument pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><name pos:start="99:36" pos:end="99:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">0</literal></expr></argument>, <argument pos:start="99:45" pos:end="99:57"><expr pos:start="99:45" pos:end="99:57"><name pos:start="99:45" pos:end="99:57">INTC_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:66"><expr pos:start="101:5" pos:end="103:65"><call pos:start="101:5" pos:end="103:65"><name pos:start="101:5" pos:end="101:22">sysbus_connect_irq</name><argument_list pos:start="101:23" pos:end="103:65">(<argument pos:start="101:24" pos:end="101:42"><expr pos:start="101:24" pos:end="101:42"><call pos:start="101:24" pos:end="101:42"><name pos:start="101:24" pos:end="101:37">SYS_BUS_DEVICE</name><argument_list pos:start="101:38" pos:end="101:42">(<argument pos:start="101:39" pos:end="101:41"><expr pos:start="101:39" pos:end="101:41"><name pos:start="101:39" pos:end="101:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:45" pos:end="101:45"><expr pos:start="101:45" pos:end="101:45"><literal type="number" pos:start="101:45" pos:end="101:45">0</literal></expr></argument>,

                       <argument pos:start="103:24" pos:end="103:64"><expr pos:start="103:24" pos:end="103:64"><call pos:start="103:24" pos:end="103:64"><name pos:start="103:24" pos:end="103:39">qdev_get_gpio_in</name><argument_list pos:start="103:40" pos:end="103:64">(<argument pos:start="103:41" pos:end="103:51"><expr pos:start="103:41" pos:end="103:51"><call pos:start="103:41" pos:end="103:51"><name pos:start="103:41" pos:end="103:46">DEVICE</name><argument_list pos:start="103:47" pos:end="103:51">(<argument pos:start="103:48" pos:end="103:50"><expr pos:start="103:48" pos:end="103:50"><name pos:start="103:48" pos:end="103:50">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:54" pos:end="103:63"><expr pos:start="103:54" pos:end="103:63"><name pos:start="103:54" pos:end="103:63">MB_CPU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="105:5" pos:end="109:5">for <control pos:start="105:9" pos:end="105:28">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:23"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <literal type="number" pos:start="105:21" pos:end="105:22">32</literal></expr>;</condition> <incr pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:25">i</name><operator pos:start="105:26" pos:end="105:27">++</operator></expr></incr>)</control> <block pos:start="105:30" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:42">

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:11">irq</name><index pos:start="107:12" pos:end="107:14">[<expr pos:start="107:13" pos:end="107:13"><name pos:start="107:13" pos:end="107:13">i</name></expr>]</index></name> <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:41"><name pos:start="107:18" pos:end="107:33">qdev_get_gpio_in</name><argument_list pos:start="107:34" pos:end="107:41">(<argument pos:start="107:35" pos:end="107:37"><expr pos:start="107:35" pos:end="107:37"><name pos:start="107:35" pos:end="107:37">dev</name></expr></argument>, <argument pos:start="107:40" pos:end="107:40"><expr pos:start="107:40" pos:end="107:40"><name pos:start="107:40" pos:end="107:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="113:5" pos:end="117:41"><expr pos:start="113:5" pos:end="117:40"><call pos:start="113:5" pos:end="117:40"><name pos:start="113:5" pos:end="113:18">serial_mm_init</name><argument_list pos:start="113:19" pos:end="117:40">(<argument pos:start="113:20" pos:end="113:36"><expr pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:36">address_space_mem</name></expr></argument>, <argument pos:start="113:39" pos:end="113:65"><expr pos:start="113:39" pos:end="113:65"><name pos:start="113:39" pos:end="113:56">UART16550_BASEADDR</name> <operator pos:start="113:58" pos:end="113:58">+</operator> <literal type="number" pos:start="113:60" pos:end="113:65">0x1000</literal></expr></argument>, <argument pos:start="113:68" pos:end="113:68"><expr pos:start="113:68" pos:end="113:68"><literal type="number" pos:start="113:68" pos:end="113:68">2</literal></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:37"><expr pos:start="115:20" pos:end="115:37"><name pos:start="115:20" pos:end="115:37"><name pos:start="115:20" pos:end="115:22">irq</name><index pos:start="115:23" pos:end="115:37">[<expr pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:36">UART16550_IRQ</name></expr>]</index></name></expr></argument>, <argument pos:start="115:40" pos:end="115:45"><expr pos:start="115:40" pos:end="115:45"><literal type="number" pos:start="115:40" pos:end="115:45">115200</literal></expr></argument>, <argument pos:start="115:48" pos:end="115:60"><expr pos:start="115:48" pos:end="115:60"><name pos:start="115:48" pos:end="115:60"><name pos:start="115:48" pos:end="115:57">serial_hds</name><index pos:start="115:58" pos:end="115:60">[<expr pos:start="115:59" pos:end="115:59"><literal type="number" pos:start="115:59" pos:end="115:59">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:39"><expr pos:start="117:20" pos:end="117:39"><name pos:start="117:20" pos:end="117:39">DEVICE_LITTLE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:39">/* 2 timers at irq 2 @ 100 Mhz.  */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:46"><expr pos:start="123:5" pos:end="123:45"><name pos:start="123:5" pos:end="123:7">dev</name> <operator pos:start="123:9" pos:end="123:9">=</operator> <call pos:start="123:11" pos:end="123:45"><name pos:start="123:11" pos:end="123:21">qdev_create</name><argument_list pos:start="123:22" pos:end="123:45">(<argument pos:start="123:23" pos:end="123:26"><expr pos:start="123:23" pos:end="123:26"><name pos:start="123:23" pos:end="123:26">NULL</name></expr></argument>, <argument pos:start="123:29" pos:end="123:44"><expr pos:start="123:29" pos:end="123:44"><literal type="string" pos:start="123:29" pos:end="123:44">"xlnx.xps-timer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:51"><expr pos:start="125:5" pos:end="125:50"><call pos:start="125:5" pos:end="125:50"><name pos:start="125:5" pos:end="125:24">qdev_prop_set_uint32</name><argument_list pos:start="125:25" pos:end="125:50">(<argument pos:start="125:26" pos:end="125:28"><expr pos:start="125:26" pos:end="125:28"><name pos:start="125:26" pos:end="125:28">dev</name></expr></argument>, <argument pos:start="125:31" pos:end="125:46"><expr pos:start="125:31" pos:end="125:46"><literal type="string" pos:start="125:31" pos:end="125:46">"one-timer-only"</literal></expr></argument>, <argument pos:start="125:49" pos:end="125:49"><expr pos:start="125:49" pos:end="125:49"><literal type="number" pos:start="125:49" pos:end="125:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:64"><expr pos:start="127:5" pos:end="127:63"><call pos:start="127:5" pos:end="127:63"><name pos:start="127:5" pos:end="127:24">qdev_prop_set_uint32</name><argument_list pos:start="127:25" pos:end="127:63">(<argument pos:start="127:26" pos:end="127:28"><expr pos:start="127:26" pos:end="127:28"><name pos:start="127:26" pos:end="127:28">dev</name></expr></argument>, <argument pos:start="127:31" pos:end="127:47"><expr pos:start="127:31" pos:end="127:47"><literal type="string" pos:start="127:31" pos:end="127:47">"clock-frequency"</literal></expr></argument>, <argument pos:start="127:50" pos:end="127:62"><expr pos:start="127:50" pos:end="127:62"><literal type="number" pos:start="127:50" pos:end="127:52">100</literal> <operator pos:start="127:54" pos:end="127:54">*</operator> <literal type="number" pos:start="127:56" pos:end="127:62">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:26"><expr pos:start="129:5" pos:end="129:25"><call pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:20">qdev_init_nofail</name><argument_list pos:start="129:21" pos:end="129:25">(<argument pos:start="129:22" pos:end="129:24"><expr pos:start="129:22" pos:end="129:24"><name pos:start="129:22" pos:end="129:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:60"><expr pos:start="131:5" pos:end="131:59"><call pos:start="131:5" pos:end="131:59"><name pos:start="131:5" pos:end="131:19">sysbus_mmio_map</name><argument_list pos:start="131:20" pos:end="131:59">(<argument pos:start="131:21" pos:end="131:39"><expr pos:start="131:21" pos:end="131:39"><call pos:start="131:21" pos:end="131:39"><name pos:start="131:21" pos:end="131:34">SYS_BUS_DEVICE</name><argument_list pos:start="131:35" pos:end="131:39">(<argument pos:start="131:36" pos:end="131:38"><expr pos:start="131:36" pos:end="131:38"><name pos:start="131:36" pos:end="131:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="131:42" pos:end="131:42"><expr pos:start="131:42" pos:end="131:42"><literal type="number" pos:start="131:42" pos:end="131:42">0</literal></expr></argument>, <argument pos:start="131:45" pos:end="131:58"><expr pos:start="131:45" pos:end="131:58"><name pos:start="131:45" pos:end="131:58">TIMER_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:63"><expr pos:start="133:5" pos:end="133:62"><call pos:start="133:5" pos:end="133:62"><name pos:start="133:5" pos:end="133:22">sysbus_connect_irq</name><argument_list pos:start="133:23" pos:end="133:62">(<argument pos:start="133:24" pos:end="133:42"><expr pos:start="133:24" pos:end="133:42"><call pos:start="133:24" pos:end="133:42"><name pos:start="133:24" pos:end="133:37">SYS_BUS_DEVICE</name><argument_list pos:start="133:38" pos:end="133:42">(<argument pos:start="133:39" pos:end="133:41"><expr pos:start="133:39" pos:end="133:41"><name pos:start="133:39" pos:end="133:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><literal type="number" pos:start="133:45" pos:end="133:45">0</literal></expr></argument>, <argument pos:start="133:48" pos:end="133:61"><expr pos:start="133:48" pos:end="133:61"><name pos:start="133:48" pos:end="133:61"><name pos:start="133:48" pos:end="133:50">irq</name><index pos:start="133:51" pos:end="133:61">[<expr pos:start="133:52" pos:end="133:60"><name pos:start="133:52" pos:end="133:60">TIMER_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:46">/* axi ethernet and dma initialization. */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:60"><expr pos:start="139:5" pos:end="139:59"><call pos:start="139:5" pos:end="139:59"><name pos:start="139:5" pos:end="139:24">qemu_check_nic_model</name><argument_list pos:start="139:25" pos:end="139:59">(<argument pos:start="139:26" pos:end="139:37"><expr pos:start="139:26" pos:end="139:37"><operator pos:start="139:26" pos:end="139:26">&amp;</operator><name pos:start="139:27" pos:end="139:37"><name pos:start="139:27" pos:end="139:34">nd_table</name><index pos:start="139:35" pos:end="139:37">[<expr pos:start="139:36" pos:end="139:36"><literal type="number" pos:start="139:36" pos:end="139:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="139:40" pos:end="139:58"><expr pos:start="139:40" pos:end="139:58"><literal type="string" pos:start="139:40" pos:end="139:58">"xlnx.axi-ethernet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:8">eth0</name> <operator pos:start="141:10" pos:end="141:10">=</operator> <call pos:start="141:12" pos:end="141:49"><name pos:start="141:12" pos:end="141:22">qdev_create</name><argument_list pos:start="141:23" pos:end="141:49">(<argument pos:start="141:24" pos:end="141:27"><expr pos:start="141:24" pos:end="141:27"><name pos:start="141:24" pos:end="141:27">NULL</name></expr></argument>, <argument pos:start="141:30" pos:end="141:48"><expr pos:start="141:30" pos:end="141:48"><literal type="string" pos:start="141:30" pos:end="141:48">"xlnx.axi-ethernet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:44"><expr pos:start="143:5" pos:end="143:43"><name pos:start="143:5" pos:end="143:7">dma</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:43"><name pos:start="143:11" pos:end="143:21">qdev_create</name><argument_list pos:start="143:22" pos:end="143:43">(<argument pos:start="143:23" pos:end="143:26"><expr pos:start="143:23" pos:end="143:26"><name pos:start="143:23" pos:end="143:26">NULL</name></expr></argument>, <argument pos:start="143:29" pos:end="143:42"><expr pos:start="143:29" pos:end="143:42"><literal type="string" pos:start="143:29" pos:end="143:42">"xlnx.axi-dma"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:45">/* FIXME: attach to the sysbus instead */</comment>

    <expr_stmt pos:start="149:5" pos:end="151:36"><expr pos:start="149:5" pos:end="151:35"><call pos:start="149:5" pos:end="151:35"><name pos:start="149:5" pos:end="149:29">object_property_add_child</name><argument_list pos:start="149:30" pos:end="151:35">(<argument pos:start="149:31" pos:end="149:48"><expr pos:start="149:31" pos:end="149:48"><call pos:start="149:31" pos:end="149:48"><name pos:start="149:31" pos:end="149:46">qdev_get_machine</name><argument_list pos:start="149:47" pos:end="149:48">()</argument_list></call></expr></argument>, <argument pos:start="149:51" pos:end="149:62"><expr pos:start="149:51" pos:end="149:62"><literal type="string" pos:start="149:51" pos:end="149:62">"xilinx-eth"</literal></expr></argument>, <argument pos:start="149:65" pos:end="149:76"><expr pos:start="149:65" pos:end="149:76"><call pos:start="149:65" pos:end="149:76"><name pos:start="149:65" pos:end="149:70">OBJECT</name><argument_list pos:start="149:71" pos:end="149:76">(<argument pos:start="149:72" pos:end="149:75"><expr pos:start="149:72" pos:end="149:75"><name pos:start="149:72" pos:end="149:75">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="151:31" pos:end="151:34"><expr pos:start="151:31" pos:end="151:34"><name pos:start="151:31" pos:end="151:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="155:36"><expr pos:start="153:5" pos:end="155:35"><call pos:start="153:5" pos:end="155:35"><name pos:start="153:5" pos:end="153:29">object_property_add_child</name><argument_list pos:start="153:30" pos:end="155:35">(<argument pos:start="153:31" pos:end="153:48"><expr pos:start="153:31" pos:end="153:48"><call pos:start="153:31" pos:end="153:48"><name pos:start="153:31" pos:end="153:46">qdev_get_machine</name><argument_list pos:start="153:47" pos:end="153:48">()</argument_list></call></expr></argument>, <argument pos:start="153:51" pos:end="153:62"><expr pos:start="153:51" pos:end="153:62"><literal type="string" pos:start="153:51" pos:end="153:62">"xilinx-dma"</literal></expr></argument>, <argument pos:start="153:65" pos:end="153:75"><expr pos:start="153:65" pos:end="153:75"><call pos:start="153:65" pos:end="153:75"><name pos:start="153:65" pos:end="153:70">OBJECT</name><argument_list pos:start="153:71" pos:end="153:75">(<argument pos:start="153:72" pos:end="153:74"><expr pos:start="153:72" pos:end="153:74"><name pos:start="153:72" pos:end="153:74">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="155:31" pos:end="155:34"><expr pos:start="155:31" pos:end="155:34"><name pos:start="155:31" pos:end="155:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="161:70"><expr pos:start="159:5" pos:end="161:69"><name pos:start="159:5" pos:end="159:6">ds</name> <operator pos:start="159:8" pos:end="159:8">=</operator> <call pos:start="159:10" pos:end="161:69"><name pos:start="159:10" pos:end="159:33">object_property_get_link</name><argument_list pos:start="159:34" pos:end="161:69">(<argument pos:start="159:35" pos:end="159:45"><expr pos:start="159:35" pos:end="159:45"><call pos:start="159:35" pos:end="159:45"><name pos:start="159:35" pos:end="159:40">OBJECT</name><argument_list pos:start="159:41" pos:end="159:45">(<argument pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:44">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="161:35" pos:end="161:62"><expr pos:start="161:35" pos:end="161:62"><literal type="string" pos:start="161:35" pos:end="161:62">"axistream-connected-target"</literal></expr></argument>, <argument pos:start="161:65" pos:end="161:68"><expr pos:start="161:65" pos:end="161:68"><name pos:start="161:65" pos:end="161:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="165:78"><expr pos:start="163:5" pos:end="165:77"><name pos:start="163:5" pos:end="163:6">cs</name> <operator pos:start="163:8" pos:end="163:8">=</operator> <call pos:start="163:10" pos:end="165:77"><name pos:start="163:10" pos:end="163:33">object_property_get_link</name><argument_list pos:start="163:34" pos:end="165:77">(<argument pos:start="163:35" pos:end="163:45"><expr pos:start="163:35" pos:end="163:45"><call pos:start="163:35" pos:end="163:45"><name pos:start="163:35" pos:end="163:40">OBJECT</name><argument_list pos:start="163:41" pos:end="163:45">(<argument pos:start="163:42" pos:end="163:44"><expr pos:start="163:42" pos:end="163:44"><name pos:start="163:42" pos:end="163:44">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="165:35" pos:end="165:70"><expr pos:start="165:35" pos:end="165:70"><literal type="string" pos:start="165:35" pos:end="165:70">"axistream-control-connected-target"</literal></expr></argument>, <argument pos:start="165:73" pos:end="165:76"><expr pos:start="165:73" pos:end="165:76"><name pos:start="165:73" pos:end="165:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:48"><expr pos:start="167:5" pos:end="167:47"><call pos:start="167:5" pos:end="167:47"><name pos:start="167:5" pos:end="167:27">qdev_set_nic_properties</name><argument_list pos:start="167:28" pos:end="167:47">(<argument pos:start="167:29" pos:end="167:32"><expr pos:start="167:29" pos:end="167:32"><name pos:start="167:29" pos:end="167:32">eth0</name></expr></argument>, <argument pos:start="167:35" pos:end="167:46"><expr pos:start="167:35" pos:end="167:46"><operator pos:start="167:35" pos:end="167:35">&amp;</operator><name pos:start="167:36" pos:end="167:46"><name pos:start="167:36" pos:end="167:43">nd_table</name><index pos:start="167:44" pos:end="167:46">[<expr pos:start="167:45" pos:end="167:45"><literal type="number" pos:start="167:45" pos:end="167:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:48"><expr pos:start="169:5" pos:end="169:47"><call pos:start="169:5" pos:end="169:47"><name pos:start="169:5" pos:end="169:24">qdev_prop_set_uint32</name><argument_list pos:start="169:25" pos:end="169:47">(<argument pos:start="169:26" pos:end="169:29"><expr pos:start="169:26" pos:end="169:29"><name pos:start="169:26" pos:end="169:29">eth0</name></expr></argument>, <argument pos:start="169:32" pos:end="169:38"><expr pos:start="169:32" pos:end="169:38"><literal type="string" pos:start="169:32" pos:end="169:38">"rxmem"</literal></expr></argument>, <argument pos:start="169:41" pos:end="169:46"><expr pos:start="169:41" pos:end="169:46"><literal type="number" pos:start="169:41" pos:end="169:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:48"><expr pos:start="171:5" pos:end="171:47"><call pos:start="171:5" pos:end="171:47"><name pos:start="171:5" pos:end="171:24">qdev_prop_set_uint32</name><argument_list pos:start="171:25" pos:end="171:47">(<argument pos:start="171:26" pos:end="171:29"><expr pos:start="171:26" pos:end="171:29"><name pos:start="171:26" pos:end="171:29">eth0</name></expr></argument>, <argument pos:start="171:32" pos:end="171:38"><expr pos:start="171:32" pos:end="171:38"><literal type="string" pos:start="171:32" pos:end="171:38">"txmem"</literal></expr></argument>, <argument pos:start="171:41" pos:end="171:46"><expr pos:start="171:41" pos:end="171:46"><literal type="number" pos:start="171:41" pos:end="171:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="175:66"><expr pos:start="173:5" pos:end="175:65"><call pos:start="173:5" pos:end="175:65"><name pos:start="173:5" pos:end="173:28">object_property_set_link</name><argument_list pos:start="173:29" pos:end="175:65">(<argument pos:start="173:30" pos:end="173:41"><expr pos:start="173:30" pos:end="173:41"><call pos:start="173:30" pos:end="173:41"><name pos:start="173:30" pos:end="173:35">OBJECT</name><argument_list pos:start="173:36" pos:end="173:41">(<argument pos:start="173:37" pos:end="173:40"><expr pos:start="173:37" pos:end="173:40"><name pos:start="173:37" pos:end="173:40">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="173:44" pos:end="173:53"><expr pos:start="173:44" pos:end="173:53"><call pos:start="173:44" pos:end="173:53"><name pos:start="173:44" pos:end="173:49">OBJECT</name><argument_list pos:start="173:50" pos:end="173:53">(<argument pos:start="173:51" pos:end="173:52"><expr pos:start="173:51" pos:end="173:52"><name pos:start="173:51" pos:end="173:52">ds</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="175:30" pos:end="175:50"><expr pos:start="175:30" pos:end="175:50"><literal type="string" pos:start="175:30" pos:end="175:50">"axistream-connected"</literal></expr></argument>, <argument pos:start="175:53" pos:end="175:64"><expr pos:start="175:53" pos:end="175:64"><operator pos:start="175:53" pos:end="175:53">&amp;</operator><name pos:start="175:54" pos:end="175:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="179:74"><expr pos:start="177:5" pos:end="179:73"><call pos:start="177:5" pos:end="179:73"><name pos:start="177:5" pos:end="177:28">object_property_set_link</name><argument_list pos:start="177:29" pos:end="179:73">(<argument pos:start="177:30" pos:end="177:41"><expr pos:start="177:30" pos:end="177:41"><call pos:start="177:30" pos:end="177:41"><name pos:start="177:30" pos:end="177:35">OBJECT</name><argument_list pos:start="177:36" pos:end="177:41">(<argument pos:start="177:37" pos:end="177:40"><expr pos:start="177:37" pos:end="177:40"><name pos:start="177:37" pos:end="177:40">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:44" pos:end="177:53"><expr pos:start="177:44" pos:end="177:53"><call pos:start="177:44" pos:end="177:53"><name pos:start="177:44" pos:end="177:49">OBJECT</name><argument_list pos:start="177:50" pos:end="177:53">(<argument pos:start="177:51" pos:end="177:52"><expr pos:start="177:51" pos:end="177:52"><name pos:start="177:51" pos:end="177:52">cs</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="179:30" pos:end="179:58"><expr pos:start="179:30" pos:end="179:58"><literal type="string" pos:start="179:30" pos:end="179:58">"axistream-control-connected"</literal></expr></argument>, <argument pos:start="179:61" pos:end="179:72"><expr pos:start="179:61" pos:end="179:72"><operator pos:start="179:61" pos:end="179:61">&amp;</operator><name pos:start="179:62" pos:end="179:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:27"><expr pos:start="181:5" pos:end="181:26"><call pos:start="181:5" pos:end="181:26"><name pos:start="181:5" pos:end="181:20">qdev_init_nofail</name><argument_list pos:start="181:21" pos:end="181:26">(<argument pos:start="181:22" pos:end="181:25"><expr pos:start="181:22" pos:end="181:25"><name pos:start="181:22" pos:end="181:25">eth0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:63"><expr pos:start="183:5" pos:end="183:62"><call pos:start="183:5" pos:end="183:62"><name pos:start="183:5" pos:end="183:19">sysbus_mmio_map</name><argument_list pos:start="183:20" pos:end="183:62">(<argument pos:start="183:21" pos:end="183:40"><expr pos:start="183:21" pos:end="183:40"><call pos:start="183:21" pos:end="183:40"><name pos:start="183:21" pos:end="183:34">SYS_BUS_DEVICE</name><argument_list pos:start="183:35" pos:end="183:40">(<argument pos:start="183:36" pos:end="183:39"><expr pos:start="183:36" pos:end="183:39"><name pos:start="183:36" pos:end="183:39">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:43" pos:end="183:43"><expr pos:start="183:43" pos:end="183:43"><literal type="number" pos:start="183:43" pos:end="183:43">0</literal></expr></argument>, <argument pos:start="183:46" pos:end="183:61"><expr pos:start="183:46" pos:end="183:61"><name pos:start="183:46" pos:end="183:61">AXIENET_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:66"><expr pos:start="185:5" pos:end="185:65"><call pos:start="185:5" pos:end="185:65"><name pos:start="185:5" pos:end="185:22">sysbus_connect_irq</name><argument_list pos:start="185:23" pos:end="185:65">(<argument pos:start="185:24" pos:end="185:43"><expr pos:start="185:24" pos:end="185:43"><call pos:start="185:24" pos:end="185:43"><name pos:start="185:24" pos:end="185:37">SYS_BUS_DEVICE</name><argument_list pos:start="185:38" pos:end="185:43">(<argument pos:start="185:39" pos:end="185:42"><expr pos:start="185:39" pos:end="185:42"><name pos:start="185:39" pos:end="185:42">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="185:46" pos:end="185:46"><expr pos:start="185:46" pos:end="185:46"><literal type="number" pos:start="185:46" pos:end="185:46">0</literal></expr></argument>, <argument pos:start="185:49" pos:end="185:64"><expr pos:start="185:49" pos:end="185:64"><name pos:start="185:49" pos:end="185:64"><name pos:start="185:49" pos:end="185:51">irq</name><index pos:start="185:52" pos:end="185:64">[<expr pos:start="185:53" pos:end="185:63"><name pos:start="185:53" pos:end="185:63">AXIENET_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="191:70"><expr pos:start="189:5" pos:end="191:69"><name pos:start="189:5" pos:end="189:6">ds</name> <operator pos:start="189:8" pos:end="189:8">=</operator> <call pos:start="189:10" pos:end="191:69"><name pos:start="189:10" pos:end="189:33">object_property_get_link</name><argument_list pos:start="189:34" pos:end="191:69">(<argument pos:start="189:35" pos:end="189:46"><expr pos:start="189:35" pos:end="189:46"><call pos:start="189:35" pos:end="189:46"><name pos:start="189:35" pos:end="189:40">OBJECT</name><argument_list pos:start="189:41" pos:end="189:46">(<argument pos:start="189:42" pos:end="189:45"><expr pos:start="189:42" pos:end="189:45"><name pos:start="189:42" pos:end="189:45">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="191:35" pos:end="191:62"><expr pos:start="191:35" pos:end="191:62"><literal type="string" pos:start="191:35" pos:end="191:62">"axistream-connected-target"</literal></expr></argument>, <argument pos:start="191:65" pos:end="191:68"><expr pos:start="191:65" pos:end="191:68"><name pos:start="191:65" pos:end="191:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:78"><expr pos:start="193:5" pos:end="195:77"><name pos:start="193:5" pos:end="193:6">cs</name> <operator pos:start="193:8" pos:end="193:8">=</operator> <call pos:start="193:10" pos:end="195:77"><name pos:start="193:10" pos:end="193:33">object_property_get_link</name><argument_list pos:start="193:34" pos:end="195:77">(<argument pos:start="193:35" pos:end="193:46"><expr pos:start="193:35" pos:end="193:46"><call pos:start="193:35" pos:end="193:46"><name pos:start="193:35" pos:end="193:40">OBJECT</name><argument_list pos:start="193:41" pos:end="193:46">(<argument pos:start="193:42" pos:end="193:45"><expr pos:start="193:42" pos:end="193:45"><name pos:start="193:42" pos:end="193:45">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="195:35" pos:end="195:70"><expr pos:start="195:35" pos:end="195:70"><literal type="string" pos:start="195:35" pos:end="195:70">"axistream-control-connected-target"</literal></expr></argument>, <argument pos:start="195:73" pos:end="195:76"><expr pos:start="195:73" pos:end="195:76"><name pos:start="195:73" pos:end="195:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:55"><expr pos:start="197:5" pos:end="197:54"><call pos:start="197:5" pos:end="197:54"><name pos:start="197:5" pos:end="197:24">qdev_prop_set_uint32</name><argument_list pos:start="197:25" pos:end="197:54">(<argument pos:start="197:26" pos:end="197:28"><expr pos:start="197:26" pos:end="197:28"><name pos:start="197:26" pos:end="197:28">dma</name></expr></argument>, <argument pos:start="197:31" pos:end="197:38"><expr pos:start="197:31" pos:end="197:38"><literal type="string" pos:start="197:31" pos:end="197:38">"freqhz"</literal></expr></argument>, <argument pos:start="197:41" pos:end="197:53"><expr pos:start="197:41" pos:end="197:53"><literal type="number" pos:start="197:41" pos:end="197:43">100</literal> <operator pos:start="197:45" pos:end="197:45">*</operator> <literal type="number" pos:start="197:47" pos:end="197:53">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="201:66"><expr pos:start="199:5" pos:end="201:65"><call pos:start="199:5" pos:end="201:65"><name pos:start="199:5" pos:end="199:28">object_property_set_link</name><argument_list pos:start="199:29" pos:end="201:65">(<argument pos:start="199:30" pos:end="199:40"><expr pos:start="199:30" pos:end="199:40"><call pos:start="199:30" pos:end="199:40"><name pos:start="199:30" pos:end="199:35">OBJECT</name><argument_list pos:start="199:36" pos:end="199:40">(<argument pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:39">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="199:43" pos:end="199:52"><expr pos:start="199:43" pos:end="199:52"><call pos:start="199:43" pos:end="199:52"><name pos:start="199:43" pos:end="199:48">OBJECT</name><argument_list pos:start="199:49" pos:end="199:52">(<argument pos:start="199:50" pos:end="199:51"><expr pos:start="199:50" pos:end="199:51"><name pos:start="199:50" pos:end="199:51">ds</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="201:30" pos:end="201:50"><expr pos:start="201:30" pos:end="201:50"><literal type="string" pos:start="201:30" pos:end="201:50">"axistream-connected"</literal></expr></argument>, <argument pos:start="201:53" pos:end="201:64"><expr pos:start="201:53" pos:end="201:64"><operator pos:start="201:53" pos:end="201:53">&amp;</operator><name pos:start="201:54" pos:end="201:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="205:74"><expr pos:start="203:5" pos:end="205:73"><call pos:start="203:5" pos:end="205:73"><name pos:start="203:5" pos:end="203:28">object_property_set_link</name><argument_list pos:start="203:29" pos:end="205:73">(<argument pos:start="203:30" pos:end="203:40"><expr pos:start="203:30" pos:end="203:40"><call pos:start="203:30" pos:end="203:40"><name pos:start="203:30" pos:end="203:35">OBJECT</name><argument_list pos:start="203:36" pos:end="203:40">(<argument pos:start="203:37" pos:end="203:39"><expr pos:start="203:37" pos:end="203:39"><name pos:start="203:37" pos:end="203:39">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:43" pos:end="203:52"><expr pos:start="203:43" pos:end="203:52"><call pos:start="203:43" pos:end="203:52"><name pos:start="203:43" pos:end="203:48">OBJECT</name><argument_list pos:start="203:49" pos:end="203:52">(<argument pos:start="203:50" pos:end="203:51"><expr pos:start="203:50" pos:end="203:51"><name pos:start="203:50" pos:end="203:51">cs</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="205:30" pos:end="205:58"><expr pos:start="205:30" pos:end="205:58"><literal type="string" pos:start="205:30" pos:end="205:58">"axistream-control-connected"</literal></expr></argument>, <argument pos:start="205:61" pos:end="205:72"><expr pos:start="205:61" pos:end="205:72"><operator pos:start="205:61" pos:end="205:61">&amp;</operator><name pos:start="205:62" pos:end="205:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:26"><expr pos:start="207:5" pos:end="207:25"><call pos:start="207:5" pos:end="207:25"><name pos:start="207:5" pos:end="207:20">qdev_init_nofail</name><argument_list pos:start="207:21" pos:end="207:25">(<argument pos:start="207:22" pos:end="207:24"><expr pos:start="207:22" pos:end="207:24"><name pos:start="207:22" pos:end="207:24">dma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:61"><expr pos:start="209:5" pos:end="209:60"><call pos:start="209:5" pos:end="209:60"><name pos:start="209:5" pos:end="209:19">sysbus_mmio_map</name><argument_list pos:start="209:20" pos:end="209:60">(<argument pos:start="209:21" pos:end="209:39"><expr pos:start="209:21" pos:end="209:39"><call pos:start="209:21" pos:end="209:39"><name pos:start="209:21" pos:end="209:34">SYS_BUS_DEVICE</name><argument_list pos:start="209:35" pos:end="209:39">(<argument pos:start="209:36" pos:end="209:38"><expr pos:start="209:36" pos:end="209:38"><name pos:start="209:36" pos:end="209:38">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="209:42" pos:end="209:42"><expr pos:start="209:42" pos:end="209:42"><literal type="number" pos:start="209:42" pos:end="209:42">0</literal></expr></argument>, <argument pos:start="209:45" pos:end="209:59"><expr pos:start="209:45" pos:end="209:59"><name pos:start="209:45" pos:end="209:59">AXIDMA_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:65"><expr pos:start="211:5" pos:end="211:64"><call pos:start="211:5" pos:end="211:64"><name pos:start="211:5" pos:end="211:22">sysbus_connect_irq</name><argument_list pos:start="211:23" pos:end="211:64">(<argument pos:start="211:24" pos:end="211:42"><expr pos:start="211:24" pos:end="211:42"><call pos:start="211:24" pos:end="211:42"><name pos:start="211:24" pos:end="211:37">SYS_BUS_DEVICE</name><argument_list pos:start="211:38" pos:end="211:42">(<argument pos:start="211:39" pos:end="211:41"><expr pos:start="211:39" pos:end="211:41"><name pos:start="211:39" pos:end="211:41">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="211:45" pos:end="211:45"><expr pos:start="211:45" pos:end="211:45"><literal type="number" pos:start="211:45" pos:end="211:45">0</literal></expr></argument>, <argument pos:start="211:48" pos:end="211:63"><expr pos:start="211:48" pos:end="211:63"><name pos:start="211:48" pos:end="211:63"><name pos:start="211:48" pos:end="211:50">irq</name><index pos:start="211:51" pos:end="211:63">[<expr pos:start="211:52" pos:end="211:62"><name pos:start="211:52" pos:end="211:62">AXIDMA_IRQ0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:65"><expr pos:start="213:5" pos:end="213:64"><call pos:start="213:5" pos:end="213:64"><name pos:start="213:5" pos:end="213:22">sysbus_connect_irq</name><argument_list pos:start="213:23" pos:end="213:64">(<argument pos:start="213:24" pos:end="213:42"><expr pos:start="213:24" pos:end="213:42"><call pos:start="213:24" pos:end="213:42"><name pos:start="213:24" pos:end="213:37">SYS_BUS_DEVICE</name><argument_list pos:start="213:38" pos:end="213:42">(<argument pos:start="213:39" pos:end="213:41"><expr pos:start="213:39" pos:end="213:41"><name pos:start="213:39" pos:end="213:41">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="213:45" pos:end="213:45"><expr pos:start="213:45" pos:end="213:45"><literal type="number" pos:start="213:45" pos:end="213:45">1</literal></expr></argument>, <argument pos:start="213:48" pos:end="213:63"><expr pos:start="213:48" pos:end="213:63"><name pos:start="213:48" pos:end="213:63"><name pos:start="213:48" pos:end="213:50">irq</name><index pos:start="213:51" pos:end="213:63">[<expr pos:start="213:52" pos:end="213:62"><name pos:start="213:52" pos:end="213:62">AXIDMA_IRQ1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <block pos:start="217:5" pos:end="255:5">{<block_content pos:start="219:9" pos:end="253:9">

        <decl_stmt pos:start="219:9" pos:end="219:20"><decl pos:start="219:9" pos:end="219:19"><type pos:start="219:9" pos:end="219:16"><name pos:start="219:9" pos:end="219:14">SSIBus</name> <modifier pos:start="219:16" pos:end="219:16">*</modifier></type><name pos:start="219:17" pos:end="219:19">spi</name></decl>;</decl_stmt>



        <expr_stmt pos:start="223:9" pos:end="223:48"><expr pos:start="223:9" pos:end="223:47"><name pos:start="223:9" pos:end="223:11">dev</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:47"><name pos:start="223:15" pos:end="223:25">qdev_create</name><argument_list pos:start="223:26" pos:end="223:47">(<argument pos:start="223:27" pos:end="223:30"><expr pos:start="223:27" pos:end="223:30"><name pos:start="223:27" pos:end="223:30">NULL</name></expr></argument>, <argument pos:start="223:33" pos:end="223:46"><expr pos:start="223:33" pos:end="223:46"><literal type="string" pos:start="223:33" pos:end="223:46">"xlnx.xps-spi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:65"><expr pos:start="225:9" pos:end="225:64"><call pos:start="225:9" pos:end="225:64"><name pos:start="225:9" pos:end="225:27">qdev_prop_set_uint8</name><argument_list pos:start="225:28" pos:end="225:64">(<argument pos:start="225:29" pos:end="225:31"><expr pos:start="225:29" pos:end="225:31"><name pos:start="225:29" pos:end="225:31">dev</name></expr></argument>, <argument pos:start="225:34" pos:end="225:46"><expr pos:start="225:34" pos:end="225:46"><literal type="string" pos:start="225:34" pos:end="225:46">"num-ss-bits"</literal></expr></argument>, <argument pos:start="225:49" pos:end="225:63"><expr pos:start="225:49" pos:end="225:63"><name pos:start="225:49" pos:end="225:63">NUM_SPI_FLASHES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:30"><expr pos:start="227:9" pos:end="227:29"><call pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:24">qdev_init_nofail</name><argument_list pos:start="227:25" pos:end="227:29">(<argument pos:start="227:26" pos:end="227:28"><expr pos:start="227:26" pos:end="227:28"><name pos:start="227:26" pos:end="227:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:37"><expr pos:start="229:9" pos:end="229:36"><name pos:start="229:9" pos:end="229:14">busdev</name> <operator pos:start="229:16" pos:end="229:16">=</operator> <call pos:start="229:18" pos:end="229:36"><name pos:start="229:18" pos:end="229:31">SYS_BUS_DEVICE</name><argument_list pos:start="229:32" pos:end="229:36">(<argument pos:start="229:33" pos:end="229:35"><expr pos:start="229:33" pos:end="229:35"><name pos:start="229:33" pos:end="229:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:49"><expr pos:start="231:9" pos:end="231:48"><call pos:start="231:9" pos:end="231:48"><name pos:start="231:9" pos:end="231:23">sysbus_mmio_map</name><argument_list pos:start="231:24" pos:end="231:48">(<argument pos:start="231:25" pos:end="231:30"><expr pos:start="231:25" pos:end="231:30"><name pos:start="231:25" pos:end="231:30">busdev</name></expr></argument>, <argument pos:start="231:33" pos:end="231:33"><expr pos:start="231:33" pos:end="231:33"><literal type="number" pos:start="231:33" pos:end="231:33">0</literal></expr></argument>, <argument pos:start="231:36" pos:end="231:47"><expr pos:start="231:36" pos:end="231:47"><name pos:start="231:36" pos:end="231:47">SPI_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:52"><expr pos:start="233:9" pos:end="233:51"><call pos:start="233:9" pos:end="233:51"><name pos:start="233:9" pos:end="233:26">sysbus_connect_irq</name><argument_list pos:start="233:27" pos:end="233:51">(<argument pos:start="233:28" pos:end="233:33"><expr pos:start="233:28" pos:end="233:33"><name pos:start="233:28" pos:end="233:33">busdev</name></expr></argument>, <argument pos:start="233:36" pos:end="233:36"><expr pos:start="233:36" pos:end="233:36"><literal type="number" pos:start="233:36" pos:end="233:36">0</literal></expr></argument>, <argument pos:start="233:39" pos:end="233:50"><expr pos:start="233:39" pos:end="233:50"><name pos:start="233:39" pos:end="233:50"><name pos:start="233:39" pos:end="233:41">irq</name><index pos:start="233:42" pos:end="233:50">[<expr pos:start="233:43" pos:end="233:49"><name pos:start="233:43" pos:end="233:49">SPI_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="237:9" pos:end="237:55"><expr pos:start="237:9" pos:end="237:54"><name pos:start="237:9" pos:end="237:11">spi</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <operator pos:start="237:15" pos:end="237:15">(</operator><name pos:start="237:16" pos:end="237:21">SSIBus</name> <operator pos:start="237:23" pos:end="237:23">*</operator><operator pos:start="237:24" pos:end="237:24">)</operator><call pos:start="237:25" pos:end="237:54"><name pos:start="237:25" pos:end="237:42">qdev_get_child_bus</name><argument_list pos:start="237:43" pos:end="237:54">(<argument pos:start="237:44" pos:end="237:46"><expr pos:start="237:44" pos:end="237:46"><name pos:start="237:44" pos:end="237:46">dev</name></expr></argument>, <argument pos:start="237:49" pos:end="237:53"><expr pos:start="237:49" pos:end="237:53"><literal type="string" pos:start="237:49" pos:end="237:53">"spi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="241:9" pos:end="253:9">for <control pos:start="241:13" pos:end="241:45">(<init pos:start="241:14" pos:end="241:19"><expr pos:start="241:14" pos:end="241:18"><name pos:start="241:14" pos:end="241:14">i</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="number" pos:start="241:18" pos:end="241:18">0</literal></expr>;</init> <condition pos:start="241:21" pos:end="241:40"><expr pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:21">i</name> <operator pos:start="241:23" pos:end="241:23">&lt;</operator> <name pos:start="241:25" pos:end="241:39">NUM_SPI_FLASHES</name></expr>;</condition> <incr pos:start="241:42" pos:end="241:44"><expr pos:start="241:42" pos:end="241:44"><name pos:start="241:42" pos:end="241:42">i</name><operator pos:start="241:43" pos:end="241:44">++</operator></expr></incr>)</control> <block pos:start="241:47" pos:end="253:9">{<block_content pos:start="243:13" pos:end="251:53">

            <decl_stmt pos:start="243:13" pos:end="243:29"><decl pos:start="243:13" pos:end="243:28"><type pos:start="243:13" pos:end="243:20"><name pos:start="243:13" pos:end="243:20">qemu_irq</name></type> <name pos:start="243:22" pos:end="243:28">cs_line</name></decl>;</decl_stmt>



            <expr_stmt pos:start="247:13" pos:end="247:51"><expr pos:start="247:13" pos:end="247:50"><name pos:start="247:13" pos:end="247:15">dev</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <call pos:start="247:19" pos:end="247:50"><name pos:start="247:19" pos:end="247:34">ssi_create_slave</name><argument_list pos:start="247:35" pos:end="247:50">(<argument pos:start="247:36" pos:end="247:38"><expr pos:start="247:36" pos:end="247:38"><name pos:start="247:36" pos:end="247:38">spi</name></expr></argument>, <argument pos:start="247:41" pos:end="247:49"><expr pos:start="247:41" pos:end="247:49"><literal type="string" pos:start="247:41" pos:end="247:49">"n25q128"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:66"><expr pos:start="249:13" pos:end="249:65"><name pos:start="249:13" pos:end="249:19">cs_line</name> <operator pos:start="249:21" pos:end="249:21">=</operator> <call pos:start="249:23" pos:end="249:65"><name pos:start="249:23" pos:end="249:44">qdev_get_gpio_in_named</name><argument_list pos:start="249:45" pos:end="249:65">(<argument pos:start="249:46" pos:end="249:48"><expr pos:start="249:46" pos:end="249:48"><name pos:start="249:46" pos:end="249:48">dev</name></expr></argument>, <argument pos:start="249:51" pos:end="249:61"><expr pos:start="249:51" pos:end="249:61"><name pos:start="249:51" pos:end="249:61">SSI_GPIO_CS</name></expr></argument>, <argument pos:start="249:64" pos:end="249:64"><expr pos:start="249:64" pos:end="249:64"><literal type="number" pos:start="249:64" pos:end="249:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:53"><expr pos:start="251:13" pos:end="251:52"><call pos:start="251:13" pos:end="251:52"><name pos:start="251:13" pos:end="251:30">sysbus_connect_irq</name><argument_list pos:start="251:31" pos:end="251:52">(<argument pos:start="251:32" pos:end="251:37"><expr pos:start="251:32" pos:end="251:37"><name pos:start="251:32" pos:end="251:37">busdev</name></expr></argument>, <argument pos:start="251:40" pos:end="251:42"><expr pos:start="251:40" pos:end="251:42"><name pos:start="251:40" pos:end="251:40">i</name><operator pos:start="251:41" pos:end="251:41">+</operator><literal type="number" pos:start="251:42" pos:end="251:42">1</literal></expr></argument>, <argument pos:start="251:45" pos:end="251:51"><expr pos:start="251:45" pos:end="251:51"><name pos:start="251:45" pos:end="251:51">cs_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>



    <comment type="block" pos:start="259:5" pos:end="259:44">/* setup PVR to match kernel settings */</comment>

    <expr_stmt pos:start="261:5" pos:end="261:38"><expr pos:start="261:5" pos:end="261:37"><name pos:start="261:5" pos:end="261:24"><name pos:start="261:5" pos:end="261:7">cpu</name><operator pos:start="261:8" pos:end="261:9">-&gt;</operator><name pos:start="261:10" pos:end="261:12">env</name><operator pos:start="261:13" pos:end="261:13">.</operator><name pos:start="261:14" pos:end="261:16">pvr</name><operator pos:start="261:17" pos:end="261:17">.</operator><name pos:start="261:18" pos:end="261:21">regs</name><index pos:start="261:22" pos:end="261:24">[<expr pos:start="261:23" pos:end="261:23"><literal type="number" pos:start="261:23" pos:end="261:23">4</literal></expr>]</index></name> <operator pos:start="261:26" pos:end="261:26">=</operator> <literal type="number" pos:start="261:28" pos:end="261:37">0xc56b8000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:38"><expr pos:start="263:5" pos:end="263:37"><name pos:start="263:5" pos:end="263:24"><name pos:start="263:5" pos:end="263:7">cpu</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:12">env</name><operator pos:start="263:13" pos:end="263:13">.</operator><name pos:start="263:14" pos:end="263:16">pvr</name><operator pos:start="263:17" pos:end="263:17">.</operator><name pos:start="263:18" pos:end="263:21">regs</name><index pos:start="263:22" pos:end="263:24">[<expr pos:start="263:23" pos:end="263:23"><literal type="number" pos:start="263:23" pos:end="263:23">5</literal></expr>]</index></name> <operator pos:start="263:26" pos:end="263:26">=</operator> <literal type="number" pos:start="263:28" pos:end="263:37">0xc56be000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:39"><expr pos:start="265:5" pos:end="265:38"><name pos:start="265:5" pos:end="265:25"><name pos:start="265:5" pos:end="265:7">cpu</name><operator pos:start="265:8" pos:end="265:9">-&gt;</operator><name pos:start="265:10" pos:end="265:12">env</name><operator pos:start="265:13" pos:end="265:13">.</operator><name pos:start="265:14" pos:end="265:16">pvr</name><operator pos:start="265:17" pos:end="265:17">.</operator><name pos:start="265:18" pos:end="265:21">regs</name><index pos:start="265:22" pos:end="265:25">[<expr pos:start="265:23" pos:end="265:24"><literal type="number" pos:start="265:23" pos:end="265:24">10</literal></expr>]</index></name> <operator pos:start="265:27" pos:end="265:27">=</operator> <literal type="number" pos:start="265:29" pos:end="265:38">0x0e000000</literal></expr>;</expr_stmt> <comment type="block" pos:start="265:41" pos:end="265:54">/* virtex 6 */</comment>



    <expr_stmt pos:start="269:5" pos:end="275:33"><expr pos:start="269:5" pos:end="275:32"><call pos:start="269:5" pos:end="275:32"><name pos:start="269:5" pos:end="269:26">microblaze_load_kernel</name><argument_list pos:start="269:27" pos:end="275:32">(<argument pos:start="269:28" pos:end="269:30"><expr pos:start="269:28" pos:end="269:30"><name pos:start="269:28" pos:end="269:30">cpu</name></expr></argument>, <argument pos:start="269:33" pos:end="269:47"><expr pos:start="269:33" pos:end="269:47"><name pos:start="269:33" pos:end="269:47">MEMORY_BASEADDR</name></expr></argument>, <argument pos:start="269:50" pos:end="269:57"><expr pos:start="269:50" pos:end="269:57"><name pos:start="269:50" pos:end="269:57">ram_size</name></expr></argument>,

                           <argument pos:start="271:28" pos:end="271:51"><expr pos:start="271:28" pos:end="271:51"><name pos:start="271:28" pos:end="271:51"><name pos:start="271:28" pos:end="271:34">machine</name><operator pos:start="271:35" pos:end="271:36">-&gt;</operator><name pos:start="271:37" pos:end="271:51">initrd_filename</name></name></expr></argument>,

                           <argument pos:start="273:28" pos:end="273:50"><expr pos:start="273:28" pos:end="273:50"><name pos:start="273:28" pos:end="273:50">BINARY_DEVICE_TREE_FILE</name></expr></argument>,

                           <argument pos:start="275:28" pos:end="275:31"><expr pos:start="275:28" pos:end="275:31"><name pos:start="275:28" pos:end="275:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block>
</unit>
