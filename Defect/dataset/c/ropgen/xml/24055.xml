<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24055.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ast_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:6">st</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:37"><name pos:start="11:10" pos:end="11:28">avformat_new_stream</name><argument_list pos:start="11:29" pos:end="11:37">(<argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><name pos:start="11:30" pos:end="11:30">s</name></expr></argument>, <argument pos:start="11:33" pos:end="11:36"><expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:11">st</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:13">avio_skip</name><argument_list pos:start="19:14" pos:end="19:23">(<argument pos:start="19:15" pos:end="19:19"><expr pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>, <argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:9">codec</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:21">avio_rb16</name><argument_list pos:start="21:22" pos:end="21:28">(<argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="35:5">switch <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">codec</name></expr>)</condition> <block pos:start="23:20" pos:end="35:5">{<block_content pos:start="25:5" pos:end="33:65">

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">1</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:10">st</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">codec</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">codec_id</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:58">AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:64">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:56"><expr pos:start="33:33" pos:end="33:56"><literal type="string" pos:start="33:33" pos:end="33:56">"unsupported codec %d\n"</literal></expr></argument>, <argument pos:start="33:59" pos:end="33:63"><expr pos:start="33:59" pos:end="33:63"><name pos:start="33:59" pos:end="33:63">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:13">avio_skip</name><argument_list pos:start="39:14" pos:end="39:23">(<argument pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">codec_type</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">channels</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:42"><name pos:start="45:27" pos:end="45:35">avio_rb16</name><argument_list pos:start="45:36" pos:end="45:42">(<argument pos:start="45:37" pos:end="45:41"><expr pos:start="45:37" pos:end="45:41"><name pos:start="45:37" pos:end="45:41"><name pos:start="45:37" pos:end="45:37">s</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:41">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:35"><if pos:start="47:5" pos:end="49:35">if <condition pos:start="47:8" pos:end="47:29">(<expr pos:start="47:9" pos:end="47:28"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:28"><name pos:start="47:10" pos:end="47:11">st</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">codec</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:28">channels</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:35"><block_content pos:start="49:9" pos:end="49:35">

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:57"><if pos:start="53:5" pos:end="55:56">if <condition pos:start="53:8" pos:end="53:33">(<expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:10">st</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:17">codec</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">channels</name></name> <operator pos:start="53:29" pos:end="53:30">==</operator> <literal type="number" pos:start="53:32" pos:end="53:32">2</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:56"><block_content pos:start="55:9" pos:end="55:56">

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:17">codec</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:33">channel_layout</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:55">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="57:5" pos:end="59:57">else if <condition pos:start="57:13" pos:end="57:38">(<expr pos:start="57:14" pos:end="57:37"><name pos:start="57:14" pos:end="57:32"><name pos:start="57:14" pos:end="57:15">st</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:22">codec</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:32">channels</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <literal type="number" pos:start="57:37" pos:end="57:37">4</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:57"><block_content pos:start="59:9" pos:end="59:57">

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:17">codec</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:33">channel_layout</name></name> <operator pos:start="59:35" pos:end="59:35">=</operator> <name pos:start="59:37" pos:end="59:56">AV_CH_LAYOUT_4POINT0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:24"><expr pos:start="63:5" pos:end="63:23"><call pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:13">avio_skip</name><argument_list pos:start="63:14" pos:end="63:23">(<argument pos:start="63:15" pos:end="63:19"><expr pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:15">s</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:19">pb</name></name></expr></argument>, <argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><literal type="number" pos:start="63:22" pos:end="63:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:46"><expr pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:6">st</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:13">codec</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:26">sample_rate</name></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <call pos:start="65:30" pos:end="65:45"><name pos:start="65:30" pos:end="65:38">avio_rb32</name><argument_list pos:start="65:39" pos:end="65:45">(<argument pos:start="65:40" pos:end="65:44"><expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:44">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="69:35"><if pos:start="67:5" pos:end="69:35">if <condition pos:start="67:8" pos:end="67:36">(<expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:17">codec</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:30">sample_rate</name></name> <operator pos:start="67:32" pos:end="67:33">&lt;=</operator> <literal type="number" pos:start="67:35" pos:end="67:35">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:35"><block_content pos:start="69:9" pos:end="69:35">

        <return pos:start="69:9" pos:end="69:35">return <expr pos:start="69:16" pos:end="69:34"><name pos:start="69:16" pos:end="69:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:6">st</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:18">start_time</name></name>         <operator pos:start="71:28" pos:end="71:28">=</operator> <literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:46"><expr pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:6">st</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:16">duration</name></name>           <operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:45"><name pos:start="73:30" pos:end="73:38">avio_rb32</name><argument_list pos:start="73:39" pos:end="73:45">(<argument pos:start="73:40" pos:end="73:44"><expr pos:start="73:40" pos:end="73:44"><name pos:start="73:40" pos:end="73:44"><name pos:start="73:40" pos:end="73:40">s</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:44">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><call pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:13">avio_skip</name><argument_list pos:start="75:14" pos:end="75:24">(<argument pos:start="75:15" pos:end="75:19"><expr pos:start="75:15" pos:end="75:19"><name pos:start="75:15" pos:end="75:19"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:19">pb</name></name></expr></argument>, <argument pos:start="75:22" pos:end="75:23"><expr pos:start="75:22" pos:end="75:23"><literal type="number" pos:start="75:22" pos:end="75:23">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:59"><expr pos:start="77:5" pos:end="77:58"><call pos:start="77:5" pos:end="77:58"><name pos:start="77:5" pos:end="77:23">avpriv_set_pts_info</name><argument_list pos:start="77:24" pos:end="77:58">(<argument pos:start="77:25" pos:end="77:26"><expr pos:start="77:25" pos:end="77:26"><name pos:start="77:25" pos:end="77:26">st</name></expr></argument>, <argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><literal type="number" pos:start="77:29" pos:end="77:30">64</literal></expr></argument>, <argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">1</literal></expr></argument>, <argument pos:start="77:36" pos:end="77:57"><expr pos:start="77:36" pos:end="77:57"><name pos:start="77:36" pos:end="77:57"><name pos:start="77:36" pos:end="77:37">st</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:44">codec</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:57">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
