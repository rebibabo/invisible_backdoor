<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19613.c" pos:tabs="8"><function pos:start="1:1" pos:end="198:77"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sos</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="198:77">{<block_content pos:start="5:5" pos:end="198:77">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:26">nb_components</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">i</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:32">h</name></decl>, <decl pos:start="5:35" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:35">v</name></decl>, <decl pos:start="5:38" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:38" pos:end="5:46">predictor</name></decl>, <decl pos:start="5:49" pos:end="5:63"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:49" pos:end="5:63">point_transform</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>, <decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:17">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:24">block_size</name><init pos:start="9:25" pos:end="9:45">= <expr pos:start="9:27" pos:end="9:45"><ternary pos:start="9:27" pos:end="9:45"><condition pos:start="9:27" pos:end="9:39"><expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:37">lossless</name></name></expr> ?</condition><then pos:start="9:41" pos:end="9:41"> <expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">1</literal></expr> </then><else pos:start="9:43" pos:end="9:45">: <expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ilv</name></decl>, <decl pos:start="11:14" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:23">prev_shift</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:40">/* XXX: verify len field validity */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:7">len</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:30"><name pos:start="17:11" pos:end="17:18">get_bits</name><argument_list pos:start="17:19" pos:end="17:30">(<argument pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:25"><operator pos:start="17:20" pos:end="17:20">&amp;</operator><name pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:25">gb</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:29"><expr pos:start="17:28" pos:end="17:29"><literal type="number" pos:start="17:28" pos:end="17:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:17">nb_components</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:28">get_bits</name><argument_list pos:start="19:29" pos:end="19:39">(<argument pos:start="19:30" pos:end="19:35"><expr pos:start="19:30" pos:end="19:35"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">gb</name></name></expr></argument>, <argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="25:5" pos:end="198:77"><if pos:start="25:5" pos:end="198:77">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:14">!=</operator> <literal type="number" pos:start="25:16" pos:end="25:17">6</literal><operator pos:start="25:17" pos:end="25:17">+</operator><literal type="number" pos:start="25:18" pos:end="25:18">2</literal><operator pos:start="25:19" pos:end="25:19">*</operator><name pos:start="25:20" pos:end="25:32">nb_components</name></expr>)</condition>

    <block pos:start="27:5" pos:end="198:77">{<block_content pos:start="29:9" pos:end="198:77">

        <expr_stmt pos:start="29:9" pos:end="29:78"><expr pos:start="29:9" pos:end="29:77"><call pos:start="29:9" pos:end="29:77"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:77">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:40" pos:end="29:71"><expr pos:start="29:40" pos:end="29:71"><literal type="string" pos:start="29:40" pos:end="29:71">"decode_sos: invalid len (%d)\n"</literal></expr></argument>, <argument pos:start="29:74" pos:end="29:76"><expr pos:start="29:74" pos:end="29:76"><name pos:start="29:74" pos:end="29:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="198:77">for<control pos:start="33:8" pos:end="33:32">(<init pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">i</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</init><condition pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">&lt;</operator><name pos:start="33:15" pos:end="33:27">nb_components</name></expr>;</condition><incr pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:29">i</name><operator pos:start="33:30" pos:end="33:31">++</operator></expr></incr>)</control> <block pos:start="33:34" pos:end="198:77">{<block_content pos:start="35:9" pos:end="198:77">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:10">id</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:32"><name pos:start="35:14" pos:end="35:21">get_bits</name><argument_list pos:start="35:22" pos:end="35:32">(<argument pos:start="35:23" pos:end="35:28"><expr pos:start="35:23" pos:end="35:28"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:28"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:28">gb</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">8</literal></expr></argument>)</argument_list></call> <operator pos:start="35:34" pos:end="35:34">-</operator> <literal type="number" pos:start="35:36" pos:end="35:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><call pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:61">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:40" pos:end="37:56"><expr pos:start="37:40" pos:end="37:56"><literal type="string" pos:start="37:40" pos:end="37:56">"component: %d\n"</literal></expr></argument>, <argument pos:start="37:59" pos:end="37:60"><expr pos:start="37:59" pos:end="37:60"><name pos:start="37:59" pos:end="37:60">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:34">/* find component index */</comment>

        <for pos:start="41:9" pos:end="45:22">for<control pos:start="41:12" pos:end="41:51">(<init pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:17">index</name><operator pos:start="41:18" pos:end="41:18">=</operator><literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>;</init><condition pos:start="41:21" pos:end="41:43"><expr pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:25">index</name><operator pos:start="41:26" pos:end="41:26">&lt;</operator><name pos:start="41:27" pos:end="41:42"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:42">nb_components</name></name></expr>;</condition><incr pos:start="41:44" pos:end="41:50"><expr pos:start="41:44" pos:end="41:50"><name pos:start="41:44" pos:end="41:48">index</name><operator pos:start="41:49" pos:end="41:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:13" pos:end="45:22"><block_content pos:start="43:13" pos:end="45:22">

            <if_stmt pos:start="43:13" pos:end="45:22"><if pos:start="43:13" pos:end="45:22">if <condition pos:start="43:16" pos:end="43:45">(<expr pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:18">id</name> <operator pos:start="43:20" pos:end="43:21">==</operator> <name pos:start="43:23" pos:end="43:44"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:37">component_id</name><index pos:start="43:38" pos:end="43:44">[<expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:22"><block_content pos:start="45:17" pos:end="45:22">

                <break pos:start="45:17" pos:end="45:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="47:9" pos:end="198:77"><if pos:start="47:9" pos:end="198:77">if <condition pos:start="47:12" pos:end="47:38">(<expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:17">index</name> <operator pos:start="47:19" pos:end="47:20">==</operator> <name pos:start="47:22" pos:end="47:37"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:37">nb_components</name></name></expr>)</condition>

        <block pos:start="49:9" pos:end="198:77">{<block_content pos:start="51:13" pos:end="198:77">

            <expr_stmt pos:start="51:13" pos:end="51:95"><expr pos:start="51:13" pos:end="51:94"><call pos:start="51:13" pos:end="51:94"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:94">(<argument pos:start="51:20" pos:end="51:27"><expr pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">avctx</name></name></expr></argument>, <argument pos:start="51:30" pos:end="51:41"><expr pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:44" pos:end="51:86"><expr pos:start="51:44" pos:end="51:86"><literal type="string" pos:start="51:44" pos:end="51:86">"decode_sos: index(%d) out of components\n"</literal></expr></argument>, <argument pos:start="51:89" pos:end="51:93"><expr pos:start="51:89" pos:end="51:93"><name pos:start="51:89" pos:end="51:93">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:21">comp_index</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">i</name></expr>]</index></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:32">index</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:64"><expr pos:start="61:9" pos:end="61:63"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">nb_blocks</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:43"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:36">h_count</name><index pos:start="61:37" pos:end="61:43">[<expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">index</name></expr>]</index></name> <operator pos:start="61:45" pos:end="61:45">*</operator> <name pos:start="61:47" pos:end="61:63"><name pos:start="61:47" pos:end="61:47">s</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:56">v_count</name><index pos:start="61:57" pos:end="61:63">[<expr pos:start="61:58" pos:end="61:62"><name pos:start="61:58" pos:end="61:62">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">h_scount</name><index pos:start="63:20" pos:end="63:22">[<expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">i</name></expr>]</index></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:42"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:35">h_count</name><index pos:start="63:36" pos:end="63:42">[<expr pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:41">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:19">v_scount</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">i</name></expr>]</index></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:35">v_count</name><index pos:start="65:36" pos:end="65:42">[<expr pos:start="65:37" pos:end="65:41"><name pos:start="65:37" pos:end="65:41">index</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:19">dc_index</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">i</name></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:44"><name pos:start="69:26" pos:end="69:33">get_bits</name><argument_list pos:start="69:34" pos:end="69:44">(<argument pos:start="69:35" pos:end="69:40"><expr pos:start="69:35" pos:end="69:40"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:40"><name pos:start="69:36" pos:end="69:36">s</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:40">gb</name></name></expr></argument>, <argument pos:start="69:43" pos:end="69:43"><expr pos:start="69:43" pos:end="69:43"><literal type="number" pos:start="69:43" pos:end="69:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">ac_index</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">i</name></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:44"><name pos:start="71:26" pos:end="71:33">get_bits</name><argument_list pos:start="71:34" pos:end="71:44">(<argument pos:start="71:35" pos:end="71:40"><expr pos:start="71:35" pos:end="71:40"><operator pos:start="71:35" pos:end="71:35">&amp;</operator><name pos:start="71:36" pos:end="71:40"><name pos:start="71:36" pos:end="71:36">s</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:40">gb</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><literal type="number" pos:start="71:43" pos:end="71:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="79:30"><if pos:start="75:9" pos:end="79:30">if <condition pos:start="75:12" pos:end="77:55">(<expr pos:start="75:13" pos:end="77:54"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">dc_index</name><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">i</name></expr>]</index></name> <operator pos:start="75:28" pos:end="75:28">&lt;</operator>  <literal type="number" pos:start="75:31" pos:end="75:31">0</literal> <operator pos:start="75:33" pos:end="75:34">||</operator> <name pos:start="75:36" pos:end="75:49"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:46">ac_index</name><index pos:start="75:47" pos:end="75:49">[<expr pos:start="75:48" pos:end="75:48"><name pos:start="75:48" pos:end="75:48">i</name></expr>]</index></name> <operator pos:start="75:51" pos:end="75:51">&lt;</operator> <literal type="number" pos:start="75:53" pos:end="75:53">0</literal> <operator pos:start="75:55" pos:end="75:56">||</operator>

            <name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:23">dc_index</name><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">i</name></expr>]</index></name> <operator pos:start="77:28" pos:end="77:29">&gt;=</operator> <literal type="number" pos:start="77:31" pos:end="77:31">4</literal> <operator pos:start="77:33" pos:end="77:34">||</operator> <name pos:start="77:36" pos:end="77:49"><name pos:start="77:36" pos:end="77:36">s</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:46">ac_index</name><index pos:start="77:47" pos:end="77:49">[<expr pos:start="77:48" pos:end="77:48"><name pos:start="77:48" pos:end="77:48">i</name></expr>]</index></name> <operator pos:start="77:51" pos:end="77:52">&gt;=</operator> <literal type="number" pos:start="77:54" pos:end="77:54">4</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:30"><block_content pos:start="79:13" pos:end="79:30">

            <goto pos:start="79:13" pos:end="79:30">goto <name pos:start="79:18" pos:end="79:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="83:30"><if pos:start="81:9" pos:end="83:30">if <condition pos:start="81:12" pos:end="81:83">(<expr pos:start="81:13" pos:end="81:82"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:39"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:20">vlcs</name><index pos:start="81:21" pos:end="81:23">[<expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>]</index><index pos:start="81:24" pos:end="81:39">[<expr pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:35">dc_index</name><index pos:start="81:36" pos:end="81:38">[<expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="81:40" pos:end="81:40">.</operator><name pos:start="81:41" pos:end="81:45">table</name> <operator pos:start="81:47" pos:end="81:48">||</operator> <operator pos:start="81:50" pos:end="81:50">!</operator><name pos:start="81:51" pos:end="81:76"><name pos:start="81:51" pos:end="81:51">s</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:57">vlcs</name><index pos:start="81:58" pos:end="81:60">[<expr pos:start="81:59" pos:end="81:59"><literal type="number" pos:start="81:59" pos:end="81:59">1</literal></expr>]</index><index pos:start="81:61" pos:end="81:76">[<expr pos:start="81:62" pos:end="81:75"><name pos:start="81:62" pos:end="81:75"><name pos:start="81:62" pos:end="81:62">s</name><operator pos:start="81:63" pos:end="81:64">-&gt;</operator><name pos:start="81:65" pos:end="81:72">ac_index</name><index pos:start="81:73" pos:end="81:75">[<expr pos:start="81:74" pos:end="81:74"><name pos:start="81:74" pos:end="81:74">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="81:77" pos:end="81:77">.</operator><name pos:start="81:78" pos:end="81:82">table</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:30"><block_content pos:start="83:13" pos:end="83:30">

            <goto pos:start="83:13" pos:end="83:30">goto <name pos:start="83:18" pos:end="83:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>




    <expr_stmt pos:start="88:5" pos:end="88:35"><expr pos:start="88:5" pos:end="88:34"><name pos:start="88:5" pos:end="88:13">predictor</name><operator pos:start="88:14" pos:end="88:14">=</operator> <call pos:start="88:16" pos:end="88:34"><name pos:start="88:16" pos:end="88:23">get_bits</name><argument_list pos:start="88:24" pos:end="88:34">(<argument pos:start="88:25" pos:end="88:30"><expr pos:start="88:25" pos:end="88:30"><operator pos:start="88:25" pos:end="88:25">&amp;</operator><name pos:start="88:26" pos:end="88:30"><name pos:start="88:26" pos:end="88:26">s</name><operator pos:start="88:27" pos:end="88:28">-&gt;</operator><name pos:start="88:29" pos:end="88:30">gb</name></name></expr></argument>, <argument pos:start="88:33" pos:end="88:33"><expr pos:start="88:33" pos:end="88:33"><literal type="number" pos:start="88:33" pos:end="88:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="88:37" pos:end="88:89">/* JPEG Ss / lossless JPEG predictor /JPEG-LS NEAR */</comment>

    <expr_stmt pos:start="90:5" pos:end="90:29"><expr pos:start="90:5" pos:end="90:28"><name pos:start="90:5" pos:end="90:7">ilv</name><operator pos:start="90:8" pos:end="90:8">=</operator> <call pos:start="90:10" pos:end="90:28"><name pos:start="90:10" pos:end="90:17">get_bits</name><argument_list pos:start="90:18" pos:end="90:28">(<argument pos:start="90:19" pos:end="90:24"><expr pos:start="90:19" pos:end="90:24"><operator pos:start="90:19" pos:end="90:19">&amp;</operator><name pos:start="90:20" pos:end="90:24"><name pos:start="90:20" pos:end="90:20">s</name><operator pos:start="90:21" pos:end="90:22">-&gt;</operator><name pos:start="90:23" pos:end="90:24">gb</name></name></expr></argument>, <argument pos:start="90:27" pos:end="90:27"><expr pos:start="90:27" pos:end="90:27"><literal type="number" pos:start="90:27" pos:end="90:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="90:34" pos:end="90:60">/* JPEG Se / JPEG-LS ILV */</comment>

    <expr_stmt pos:start="92:5" pos:end="92:37"><expr pos:start="92:5" pos:end="92:36"><name pos:start="92:5" pos:end="92:14">prev_shift</name> <operator pos:start="92:16" pos:end="92:16">=</operator> <call pos:start="92:18" pos:end="92:36"><name pos:start="92:18" pos:end="92:25">get_bits</name><argument_list pos:start="92:26" pos:end="92:36">(<argument pos:start="92:27" pos:end="92:32"><expr pos:start="92:27" pos:end="92:32"><operator pos:start="92:27" pos:end="92:27">&amp;</operator><name pos:start="92:28" pos:end="92:32"><name pos:start="92:28" pos:end="92:28">s</name><operator pos:start="92:29" pos:end="92:30">-&gt;</operator><name pos:start="92:31" pos:end="92:32">gb</name></name></expr></argument>, <argument pos:start="92:35" pos:end="92:35"><expr pos:start="92:35" pos:end="92:35"><literal type="number" pos:start="92:35" pos:end="92:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="92:39" pos:end="92:46">/* Ah */</comment>

    <expr_stmt pos:start="94:5" pos:end="94:41"><expr pos:start="94:5" pos:end="94:40"><name pos:start="94:5" pos:end="94:19">point_transform</name><operator pos:start="94:20" pos:end="94:20">=</operator> <call pos:start="94:22" pos:end="94:40"><name pos:start="94:22" pos:end="94:29">get_bits</name><argument_list pos:start="94:30" pos:end="94:40">(<argument pos:start="94:31" pos:end="94:36"><expr pos:start="94:31" pos:end="94:36"><operator pos:start="94:31" pos:end="94:31">&amp;</operator><name pos:start="94:32" pos:end="94:36"><name pos:start="94:32" pos:end="94:32">s</name><operator pos:start="94:33" pos:end="94:34">-&gt;</operator><name pos:start="94:35" pos:end="94:36">gb</name></name></expr></argument>, <argument pos:start="94:39" pos:end="94:39"><expr pos:start="94:39" pos:end="94:39"><literal type="number" pos:start="94:39" pos:end="94:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="94:43" pos:end="94:50">/* Al */</comment>



    <for pos:start="98:5" pos:end="100:29">for<control pos:start="98:8" pos:end="98:32">(<init pos:start="98:9" pos:end="98:12"><expr pos:start="98:9" pos:end="98:11"><name pos:start="98:9" pos:end="98:9">i</name><operator pos:start="98:10" pos:end="98:10">=</operator><literal type="number" pos:start="98:11" pos:end="98:11">0</literal></expr>;</init><condition pos:start="98:13" pos:end="98:28"><expr pos:start="98:13" pos:end="98:27"><name pos:start="98:13" pos:end="98:13">i</name><operator pos:start="98:14" pos:end="98:14">&lt;</operator><name pos:start="98:15" pos:end="98:27">nb_components</name></expr>;</condition><incr pos:start="98:29" pos:end="98:31"><expr pos:start="98:29" pos:end="98:31"><name pos:start="98:29" pos:end="98:29">i</name><operator pos:start="98:30" pos:end="98:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="100:9" pos:end="100:29"><block_content pos:start="100:9" pos:end="100:29">

        <expr_stmt pos:start="100:9" pos:end="100:29"><expr pos:start="100:9" pos:end="100:28"><name pos:start="100:9" pos:end="100:21"><name pos:start="100:9" pos:end="100:9">s</name><operator pos:start="100:10" pos:end="100:11">-&gt;</operator><name pos:start="100:12" pos:end="100:18">last_dc</name><index pos:start="100:19" pos:end="100:21">[<expr pos:start="100:20" pos:end="100:20"><name pos:start="100:20" pos:end="100:20">i</name></expr>]</index></name> <operator pos:start="100:23" pos:end="100:23">=</operator> <literal type="number" pos:start="100:25" pos:end="100:28">1024</literal></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="104:5" pos:end="198:77"><if pos:start="104:5" pos:end="112:5">if <condition pos:start="104:8" pos:end="104:26">(<expr pos:start="104:9" pos:end="104:25"><name pos:start="104:9" pos:end="104:21">nb_components</name> <operator pos:start="104:23" pos:end="104:23">&gt;</operator> <literal type="number" pos:start="104:25" pos:end="104:25">1</literal></expr>)</condition> <block pos:start="104:28" pos:end="112:5">{<block_content pos:start="108:9" pos:end="110:89">

        <comment type="block" pos:start="106:9" pos:end="106:32">/* interleaved stream */</comment>

        <expr_stmt pos:start="108:9" pos:end="108:89"><expr pos:start="108:9" pos:end="108:88"><name pos:start="108:9" pos:end="108:19"><name pos:start="108:9" pos:end="108:9">s</name><operator pos:start="108:10" pos:end="108:11">-&gt;</operator><name pos:start="108:12" pos:end="108:19">mb_width</name></name>  <operator pos:start="108:22" pos:end="108:22">=</operator> <operator pos:start="108:24" pos:end="108:24">(</operator><name pos:start="108:25" pos:end="108:32"><name pos:start="108:25" pos:end="108:25">s</name><operator pos:start="108:26" pos:end="108:27">-&gt;</operator><name pos:start="108:28" pos:end="108:32">width</name></name>  <operator pos:start="108:35" pos:end="108:35">+</operator> <name pos:start="108:37" pos:end="108:44"><name pos:start="108:37" pos:end="108:37">s</name><operator pos:start="108:38" pos:end="108:39">-&gt;</operator><name pos:start="108:40" pos:end="108:44">h_max</name></name> <operator pos:start="108:46" pos:end="108:46">*</operator> <name pos:start="108:48" pos:end="108:57">block_size</name> <operator pos:start="108:59" pos:end="108:59">-</operator> <literal type="number" pos:start="108:61" pos:end="108:61">1</literal><operator pos:start="108:62" pos:end="108:62">)</operator> <operator pos:start="108:64" pos:end="108:64">/</operator> <operator pos:start="108:66" pos:end="108:66">(</operator><name pos:start="108:67" pos:end="108:74"><name pos:start="108:67" pos:end="108:67">s</name><operator pos:start="108:68" pos:end="108:69">-&gt;</operator><name pos:start="108:70" pos:end="108:74">h_max</name></name> <operator pos:start="108:76" pos:end="108:76">*</operator> <name pos:start="108:78" pos:end="108:87">block_size</name><operator pos:start="108:88" pos:end="108:88">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="110:9" pos:end="110:89"><expr pos:start="110:9" pos:end="110:88"><name pos:start="110:9" pos:end="110:20"><name pos:start="110:9" pos:end="110:9">s</name><operator pos:start="110:10" pos:end="110:11">-&gt;</operator><name pos:start="110:12" pos:end="110:20">mb_height</name></name> <operator pos:start="110:22" pos:end="110:22">=</operator> <operator pos:start="110:24" pos:end="110:24">(</operator><name pos:start="110:25" pos:end="110:33"><name pos:start="110:25" pos:end="110:25">s</name><operator pos:start="110:26" pos:end="110:27">-&gt;</operator><name pos:start="110:28" pos:end="110:33">height</name></name> <operator pos:start="110:35" pos:end="110:35">+</operator> <name pos:start="110:37" pos:end="110:44"><name pos:start="110:37" pos:end="110:37">s</name><operator pos:start="110:38" pos:end="110:39">-&gt;</operator><name pos:start="110:40" pos:end="110:44">v_max</name></name> <operator pos:start="110:46" pos:end="110:46">*</operator> <name pos:start="110:48" pos:end="110:57">block_size</name> <operator pos:start="110:59" pos:end="110:59">-</operator> <literal type="number" pos:start="110:61" pos:end="110:61">1</literal><operator pos:start="110:62" pos:end="110:62">)</operator> <operator pos:start="110:64" pos:end="110:64">/</operator> <operator pos:start="110:66" pos:end="110:66">(</operator><name pos:start="110:67" pos:end="110:74"><name pos:start="110:67" pos:end="110:67">s</name><operator pos:start="110:68" pos:end="110:69">-&gt;</operator><name pos:start="110:70" pos:end="110:74">v_max</name></name> <operator pos:start="110:76" pos:end="110:76">*</operator> <name pos:start="110:78" pos:end="110:87">block_size</name><operator pos:start="110:88" pos:end="110:88">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="112:7" pos:end="198:77">else if<condition pos:start="112:14" pos:end="112:21">(<expr pos:start="112:15" pos:end="112:20"><operator pos:start="112:15" pos:end="112:15">!</operator><name pos:start="112:16" pos:end="112:20"><name pos:start="112:16" pos:end="112:16">s</name><operator pos:start="112:17" pos:end="112:18">-&gt;</operator><name pos:start="112:19" pos:end="112:20">ls</name></name></expr>)</condition> <block pos:start="112:23" pos:end="198:77">{<block_content pos:start="114:9" pos:end="198:77"> <comment type="block" pos:start="112:25" pos:end="112:51">/* skip this for JPEG-LS */</comment>

        <expr_stmt pos:start="114:9" pos:end="114:38"><expr pos:start="114:9" pos:end="114:37"><name pos:start="114:9" pos:end="114:9">h</name> <operator pos:start="114:11" pos:end="114:11">=</operator> <name pos:start="114:13" pos:end="114:20"><name pos:start="114:13" pos:end="114:13">s</name><operator pos:start="114:14" pos:end="114:15">-&gt;</operator><name pos:start="114:16" pos:end="114:20">h_max</name></name> <operator pos:start="114:22" pos:end="114:22">/</operator> <name pos:start="114:24" pos:end="114:37"><name pos:start="114:24" pos:end="114:24">s</name><operator pos:start="114:25" pos:end="114:26">-&gt;</operator><name pos:start="114:27" pos:end="114:34">h_scount</name><index pos:start="114:35" pos:end="114:37">[<expr pos:start="114:36" pos:end="114:36"><literal type="number" pos:start="114:36" pos:end="114:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="116:9" pos:end="116:38"><expr pos:start="116:9" pos:end="116:37"><name pos:start="116:9" pos:end="116:9">v</name> <operator pos:start="116:11" pos:end="116:11">=</operator> <name pos:start="116:13" pos:end="116:20"><name pos:start="116:13" pos:end="116:13">s</name><operator pos:start="116:14" pos:end="116:15">-&gt;</operator><name pos:start="116:16" pos:end="116:20">v_max</name></name> <operator pos:start="116:22" pos:end="116:22">/</operator> <name pos:start="116:24" pos:end="116:37"><name pos:start="116:24" pos:end="116:24">s</name><operator pos:start="116:25" pos:end="116:26">-&gt;</operator><name pos:start="116:27" pos:end="116:34">v_scount</name><index pos:start="116:35" pos:end="116:37">[<expr pos:start="116:36" pos:end="116:36"><literal type="number" pos:start="116:36" pos:end="116:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:75"><expr pos:start="118:9" pos:end="118:74"><name pos:start="118:9" pos:end="118:19"><name pos:start="118:9" pos:end="118:9">s</name><operator pos:start="118:10" pos:end="118:11">-&gt;</operator><name pos:start="118:12" pos:end="118:19">mb_width</name></name>  <operator pos:start="118:22" pos:end="118:22">=</operator> <operator pos:start="118:24" pos:end="118:24">(</operator><name pos:start="118:25" pos:end="118:32"><name pos:start="118:25" pos:end="118:25">s</name><operator pos:start="118:26" pos:end="118:27">-&gt;</operator><name pos:start="118:28" pos:end="118:32">width</name></name>  <operator pos:start="118:35" pos:end="118:35">+</operator> <name pos:start="118:37" pos:end="118:37">h</name> <operator pos:start="118:39" pos:end="118:39">*</operator> <name pos:start="118:41" pos:end="118:50">block_size</name> <operator pos:start="118:52" pos:end="118:52">-</operator> <literal type="number" pos:start="118:54" pos:end="118:54">1</literal><operator pos:start="118:55" pos:end="118:55">)</operator> <operator pos:start="118:57" pos:end="118:57">/</operator> <operator pos:start="118:59" pos:end="118:59">(</operator><name pos:start="118:60" pos:end="118:60">h</name> <operator pos:start="118:62" pos:end="118:62">*</operator> <name pos:start="118:64" pos:end="118:73">block_size</name><operator pos:start="118:74" pos:end="118:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:75"><expr pos:start="120:9" pos:end="120:74"><name pos:start="120:9" pos:end="120:20"><name pos:start="120:9" pos:end="120:9">s</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:20">mb_height</name></name> <operator pos:start="120:22" pos:end="120:22">=</operator> <operator pos:start="120:24" pos:end="120:24">(</operator><name pos:start="120:25" pos:end="120:33"><name pos:start="120:25" pos:end="120:25">s</name><operator pos:start="120:26" pos:end="120:27">-&gt;</operator><name pos:start="120:28" pos:end="120:33">height</name></name> <operator pos:start="120:35" pos:end="120:35">+</operator> <name pos:start="120:37" pos:end="120:37">v</name> <operator pos:start="120:39" pos:end="120:39">*</operator> <name pos:start="120:41" pos:end="120:50">block_size</name> <operator pos:start="120:52" pos:end="120:52">-</operator> <literal type="number" pos:start="120:54" pos:end="120:54">1</literal><operator pos:start="120:55" pos:end="120:55">)</operator> <operator pos:start="120:57" pos:end="120:57">/</operator> <operator pos:start="120:59" pos:end="120:59">(</operator><name pos:start="120:60" pos:end="120:60">v</name> <operator pos:start="120:62" pos:end="120:62">*</operator> <name pos:start="120:64" pos:end="120:73">block_size</name><operator pos:start="120:74" pos:end="120:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="122:9" pos:end="122:28"><expr pos:start="122:9" pos:end="122:27"><name pos:start="122:9" pos:end="122:23"><name pos:start="122:9" pos:end="122:9">s</name><operator pos:start="122:10" pos:end="122:11">-&gt;</operator><name pos:start="122:12" pos:end="122:20">nb_blocks</name><index pos:start="122:21" pos:end="122:23">[<expr pos:start="122:22" pos:end="122:22"><literal type="number" pos:start="122:22" pos:end="122:22">0</literal></expr>]</index></name> <operator pos:start="122:25" pos:end="122:25">=</operator> <literal type="number" pos:start="122:27" pos:end="122:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="124:9" pos:end="124:27"><expr pos:start="124:9" pos:end="124:26"><name pos:start="124:9" pos:end="124:22"><name pos:start="124:9" pos:end="124:9">s</name><operator pos:start="124:10" pos:end="124:11">-&gt;</operator><name pos:start="124:12" pos:end="124:19">h_scount</name><index pos:start="124:20" pos:end="124:22">[<expr pos:start="124:21" pos:end="124:21"><literal type="number" pos:start="124:21" pos:end="124:21">0</literal></expr>]</index></name> <operator pos:start="124:24" pos:end="124:24">=</operator> <literal type="number" pos:start="124:26" pos:end="124:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="126:9" pos:end="126:27"><expr pos:start="126:9" pos:end="126:26"><name pos:start="126:9" pos:end="126:22"><name pos:start="126:9" pos:end="126:9">s</name><operator pos:start="126:10" pos:end="126:11">-&gt;</operator><name pos:start="126:12" pos:end="126:19">v_scount</name><index pos:start="126:20" pos:end="126:22">[<expr pos:start="126:21" pos:end="126:21"><literal type="number" pos:start="126:21" pos:end="126:21">0</literal></expr>]</index></name> <operator pos:start="126:24" pos:end="126:24">=</operator> <literal type="number" pos:start="126:26" pos:end="126:26">1</literal></expr>;</expr_stmt>




    <if_stmt pos:start="131:5" pos:end="137:64"><if pos:start="131:5" pos:end="137:64">if<condition pos:start="131:7" pos:end="131:44">(<expr pos:start="131:8" pos:end="131:43"><name pos:start="131:8" pos:end="131:22"><name pos:start="131:8" pos:end="131:8">s</name><operator pos:start="131:9" pos:end="131:10">-&gt;</operator><name pos:start="131:11" pos:end="131:15">avctx</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:22">debug</name></name> <operator pos:start="131:24" pos:end="131:24">&amp;</operator> <name pos:start="131:26" pos:end="131:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="137:64"><block_content pos:start="133:9" pos:end="137:64">

        <expr_stmt pos:start="133:9" pos:end="137:64"><expr pos:start="133:9" pos:end="137:63"><call pos:start="133:9" pos:end="137:63"><name pos:start="133:9" pos:end="133:14">av_log</name><argument_list pos:start="133:15" pos:end="137:63">(<argument pos:start="133:16" pos:end="133:23"><expr pos:start="133:16" pos:end="133:23"><name pos:start="133:16" pos:end="133:23"><name pos:start="133:16" pos:end="133:16">s</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:23">avctx</name></name></expr></argument>, <argument pos:start="133:26" pos:end="133:37"><expr pos:start="133:26" pos:end="133:37"><name pos:start="133:26" pos:end="133:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="133:40" pos:end="133:77"><expr pos:start="133:40" pos:end="133:77"><literal type="string" pos:start="133:40" pos:end="133:77">"%s %s p:%d &gt;&gt;:%d ilv:%d bits:%d %s\n"</literal></expr></argument>, <argument pos:start="133:80" pos:end="133:122"><expr pos:start="133:80" pos:end="133:122"><ternary pos:start="133:80" pos:end="133:122"><condition pos:start="133:80" pos:end="133:92"><expr pos:start="133:80" pos:end="133:90"><name pos:start="133:80" pos:end="133:90"><name pos:start="133:80" pos:end="133:80">s</name><operator pos:start="133:81" pos:end="133:82">-&gt;</operator><name pos:start="133:83" pos:end="133:90">lossless</name></name></expr> ?</condition><then pos:start="133:94" pos:end="133:103"> <expr pos:start="133:94" pos:end="133:103"><literal type="string" pos:start="133:94" pos:end="133:103">"lossless"</literal></expr> </then><else pos:start="133:105" pos:end="133:122">: <expr pos:start="133:107" pos:end="133:122"><literal type="string" pos:start="133:107" pos:end="133:122">"sequencial DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="133:125" pos:end="133:143"><expr pos:start="133:125" pos:end="133:143"><ternary pos:start="133:125" pos:end="133:143"><condition pos:start="133:125" pos:end="133:132"><expr pos:start="133:125" pos:end="133:130"><name pos:start="133:125" pos:end="133:130"><name pos:start="133:125" pos:end="133:125">s</name><operator pos:start="133:126" pos:end="133:127">-&gt;</operator><name pos:start="133:128" pos:end="133:130">rgb</name></name></expr> ?</condition><then pos:start="133:134" pos:end="133:138"> <expr pos:start="133:134" pos:end="133:138"><literal type="string" pos:start="133:134" pos:end="133:138">"RGB"</literal></expr> </then><else pos:start="133:140" pos:end="133:143">: <expr pos:start="133:142" pos:end="133:143"><literal type="string" pos:start="133:142" pos:end="133:143">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="135:16" pos:end="135:24"><expr pos:start="135:16" pos:end="135:24"><name pos:start="135:16" pos:end="135:24">predictor</name></expr></argument>, <argument pos:start="135:27" pos:end="135:41"><expr pos:start="135:27" pos:end="135:41"><name pos:start="135:27" pos:end="135:41">point_transform</name></expr></argument>, <argument pos:start="135:44" pos:end="135:46"><expr pos:start="135:44" pos:end="135:46"><name pos:start="135:44" pos:end="135:46">ilv</name></expr></argument>, <argument pos:start="135:49" pos:end="135:55"><expr pos:start="135:49" pos:end="135:55"><name pos:start="135:49" pos:end="135:55"><name pos:start="135:49" pos:end="135:49">s</name><operator pos:start="135:50" pos:end="135:51">-&gt;</operator><name pos:start="135:52" pos:end="135:55">bits</name></name></expr></argument>,

               <argument pos:start="137:16" pos:end="137:62"><expr pos:start="137:16" pos:end="137:62"><ternary pos:start="137:16" pos:end="137:62"><condition pos:start="137:16" pos:end="137:31"><expr pos:start="137:16" pos:end="137:29"><name pos:start="137:16" pos:end="137:29"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:29">pegasus_rct</name></name></expr> ?</condition><then pos:start="137:33" pos:end="137:38"> <expr pos:start="137:33" pos:end="137:38"><literal type="string" pos:start="137:33" pos:end="137:38">"PRCT"</literal></expr> </then><else pos:start="137:40" pos:end="137:62">: <expr pos:start="137:42" pos:end="137:62"><operator pos:start="137:42" pos:end="137:42">(</operator><ternary pos:start="137:43" pos:end="137:61"><condition pos:start="137:43" pos:end="137:50"><expr pos:start="137:43" pos:end="137:48"><name pos:start="137:43" pos:end="137:48"><name pos:start="137:43" pos:end="137:43">s</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:48">rct</name></name></expr> ?</condition><then pos:start="137:52" pos:end="137:56"> <expr pos:start="137:52" pos:end="137:56"><literal type="string" pos:start="137:52" pos:end="137:56">"RCT"</literal></expr> </then><else pos:start="137:58" pos:end="137:61">: <expr pos:start="137:60" pos:end="137:61"><literal type="string" pos:start="137:60" pos:end="137:61">""</literal></expr></else></ternary><operator pos:start="137:62" pos:end="137:62">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <comment type="block" pos:start="143:5" pos:end="143:78">/* mjpeg-b can have padding bytes between sos and image data, skip them */</comment>

    <for pos:start="145:5" pos:end="147:29">for <control pos:start="145:9" pos:end="145:43">(<init pos:start="145:10" pos:end="145:31"><expr pos:start="145:10" pos:end="145:30"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <name pos:start="145:14" pos:end="145:30"><name pos:start="145:14" pos:end="145:14">s</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:30">mjpb_skiptosod</name></name></expr>;</init> <condition pos:start="145:33" pos:end="145:38"><expr pos:start="145:33" pos:end="145:37"><name pos:start="145:33" pos:end="145:33">i</name> <operator pos:start="145:35" pos:end="145:35">&gt;</operator> <literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>;</condition> <incr pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:40">i</name><operator pos:start="145:41" pos:end="145:42">--</operator></expr></incr>)</control><block type="pseudo" pos:start="147:9" pos:end="147:29"><block_content pos:start="147:9" pos:end="147:29">

        <expr_stmt pos:start="147:9" pos:end="147:29"><expr pos:start="147:9" pos:end="147:28"><call pos:start="147:9" pos:end="147:28"><name pos:start="147:9" pos:end="147:17">skip_bits</name><argument_list pos:start="147:18" pos:end="147:28">(<argument pos:start="147:19" pos:end="147:24"><expr pos:start="147:19" pos:end="147:24"><operator pos:start="147:19" pos:end="147:19">&amp;</operator><name pos:start="147:20" pos:end="147:24"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:24">gb</name></name></expr></argument>, <argument pos:start="147:27" pos:end="147:27"><expr pos:start="147:27" pos:end="147:27"><literal type="number" pos:start="147:27" pos:end="147:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="151:5" pos:end="198:77"><if pos:start="151:5" pos:end="198:77">if<condition pos:start="151:7" pos:end="151:19">(<expr pos:start="151:8" pos:end="151:18"><name pos:start="151:8" pos:end="151:18"><name pos:start="151:8" pos:end="151:8">s</name><operator pos:start="151:9" pos:end="151:10">-&gt;</operator><name pos:start="151:11" pos:end="151:18">lossless</name></name></expr>)</condition><block pos:start="151:20" pos:end="198:77">{<block_content pos:start="153:9" pos:end="198:77">

        <if_stmt pos:start="153:9" pos:end="198:77"><if pos:start="153:9" pos:end="164:9">if<condition pos:start="153:11" pos:end="153:42">(<expr pos:start="153:12" pos:end="153:41"><name pos:start="153:12" pos:end="153:32">CONFIG_JPEGLS_DECODER</name> <operator pos:start="153:34" pos:end="153:35">&amp;&amp;</operator> <name pos:start="153:37" pos:end="153:41"><name pos:start="153:37" pos:end="153:37">s</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:41">ls</name></name></expr>)</condition><block pos:start="153:43" pos:end="164:9">{<block_content pos:start="161:13" pos:end="161:80">

<comment type="line" pos:start="155:1" pos:end="155:20">//            for(){</comment>

<comment type="line" pos:start="157:1" pos:end="157:47">//            reset_ls_coding_parameters(s, 0);</comment>



            <if_stmt pos:start="161:13" pos:end="161:80"><if pos:start="161:13" pos:end="161:80">if<condition pos:start="161:15" pos:end="161:80">(<expr pos:start="161:16" pos:end="161:79"><call pos:start="161:16" pos:end="161:75"><name pos:start="161:16" pos:end="161:39">ff_jpegls_decode_picture</name><argument_list pos:start="161:40" pos:end="161:75">(<argument pos:start="161:41" pos:end="161:41"><expr pos:start="161:41" pos:end="161:41"><name pos:start="161:41" pos:end="161:41">s</name></expr></argument>, <argument pos:start="161:44" pos:end="161:52"><expr pos:start="161:44" pos:end="161:52"><name pos:start="161:44" pos:end="161:52">predictor</name></expr></argument>, <argument pos:start="161:55" pos:end="161:69"><expr pos:start="161:55" pos:end="161:69"><name pos:start="161:55" pos:end="161:69">point_transform</name></expr></argument>, <argument pos:start="161:72" pos:end="161:74"><expr pos:start="161:72" pos:end="161:74"><name pos:start="161:72" pos:end="161:74">ilv</name></expr></argument>)</argument_list></call> <operator pos:start="161:77" pos:end="161:77">&lt;</operator> <literal type="number" pos:start="161:79" pos:end="161:79">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>


        </block_content>}</block></if><else pos:start="164:10" pos:end="198:77">else<block pos:start="164:14" pos:end="198:77">{<block_content pos:start="166:13" pos:end="198:77">

            <if_stmt pos:start="166:13" pos:end="178:5"><if pos:start="166:13" pos:end="171:13">if<condition pos:start="166:15" pos:end="166:22">(<expr pos:start="166:16" pos:end="166:21"><name pos:start="166:16" pos:end="166:21"><name pos:start="166:16" pos:end="166:16">s</name><operator pos:start="166:17" pos:end="166:18">-&gt;</operator><name pos:start="166:19" pos:end="166:21">rgb</name></name></expr>)</condition><block pos:start="166:23" pos:end="171:13">{<block_content pos:start="168:17" pos:end="168:76">

                <if_stmt pos:start="168:17" pos:end="168:76"><if pos:start="168:17" pos:end="168:76">if<condition pos:start="168:19" pos:end="168:76">(<expr pos:start="168:20" pos:end="168:75"><call pos:start="168:20" pos:end="168:71"><name pos:start="168:20" pos:end="168:40">ljpeg_decode_rgb_scan</name><argument_list pos:start="168:41" pos:end="168:71">(<argument pos:start="168:42" pos:end="168:42"><expr pos:start="168:42" pos:end="168:42"><name pos:start="168:42" pos:end="168:42">s</name></expr></argument>, <argument pos:start="168:45" pos:end="168:53"><expr pos:start="168:45" pos:end="168:53"><name pos:start="168:45" pos:end="168:53">predictor</name></expr></argument>, <argument pos:start="168:56" pos:end="168:70"><expr pos:start="168:56" pos:end="168:70"><name pos:start="168:56" pos:end="168:70">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="168:73" pos:end="168:73">&lt;</operator> <literal type="number" pos:start="168:75" pos:end="168:75">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>


            </block_content>}</block></if><else pos:start="171:14" pos:end="178:5">else<block pos:start="171:18" pos:end="178:5">{<block_content pos:start="173:17" pos:end="173:76">

                <if_stmt pos:start="173:17" pos:end="173:76"><if pos:start="173:17" pos:end="173:76">if<condition pos:start="173:19" pos:end="173:76">(<expr pos:start="173:20" pos:end="173:75"><call pos:start="173:20" pos:end="173:71"><name pos:start="173:20" pos:end="173:40">ljpeg_decode_yuv_scan</name><argument_list pos:start="173:41" pos:end="173:71">(<argument pos:start="173:42" pos:end="173:42"><expr pos:start="173:42" pos:end="173:42"><name pos:start="173:42" pos:end="173:42">s</name></expr></argument>, <argument pos:start="173:45" pos:end="173:53"><expr pos:start="173:45" pos:end="173:53"><name pos:start="173:45" pos:end="173:53">predictor</name></expr></argument>, <argument pos:start="173:56" pos:end="173:70"><expr pos:start="173:56" pos:end="173:70"><name pos:start="173:56" pos:end="173:70">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="173:73" pos:end="173:73">&lt;</operator> <literal type="number" pos:start="173:75" pos:end="173:75">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>




    </block_content>}</block></else></if_stmt><if_stmt pos:start="178:6" pos:end="198:77"><else pos:start="178:6" pos:end="198:77">else<block pos:start="178:10" pos:end="198:77">{<block_content pos:start="180:9" pos:end="198:77">

        <if_stmt pos:start="180:9" pos:end="198:77"><if pos:start="180:9" pos:end="185:9">if<condition pos:start="180:11" pos:end="180:39">(<expr pos:start="180:12" pos:end="180:38"><name pos:start="180:12" pos:end="180:25"><name pos:start="180:12" pos:end="180:12">s</name><operator pos:start="180:13" pos:end="180:14">-&gt;</operator><name pos:start="180:15" pos:end="180:25">progressive</name></name> <operator pos:start="180:27" pos:end="180:28">&amp;&amp;</operator> <name pos:start="180:30" pos:end="180:38">predictor</name></expr>)</condition> <block pos:start="180:41" pos:end="185:9">{<block_content pos:start="182:13" pos:end="182:100">

            <if_stmt pos:start="182:13" pos:end="182:100"><if pos:start="182:13" pos:end="182:100">if<condition pos:start="182:15" pos:end="182:100">(<expr pos:start="182:16" pos:end="182:99"><call pos:start="182:16" pos:end="182:95"><name pos:start="182:16" pos:end="182:47">mjpeg_decode_scan_progressive_ac</name><argument_list pos:start="182:48" pos:end="182:95">(<argument pos:start="182:49" pos:end="182:49"><expr pos:start="182:49" pos:end="182:49"><name pos:start="182:49" pos:end="182:49">s</name></expr></argument>, <argument pos:start="182:52" pos:end="182:60"><expr pos:start="182:52" pos:end="182:60"><name pos:start="182:52" pos:end="182:60">predictor</name></expr></argument>, <argument pos:start="182:63" pos:end="182:65"><expr pos:start="182:63" pos:end="182:65"><name pos:start="182:63" pos:end="182:65">ilv</name></expr></argument>, <argument pos:start="182:68" pos:end="182:77"><expr pos:start="182:68" pos:end="182:77"><name pos:start="182:68" pos:end="182:77">prev_shift</name></expr></argument>, <argument pos:start="182:80" pos:end="182:94"><expr pos:start="182:80" pos:end="182:94"><name pos:start="182:80" pos:end="182:94">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="182:97" pos:end="182:97">&lt;</operator> <literal type="number" pos:start="182:99" pos:end="182:99">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>


        </block_content>}</block></if> <else pos:start="185:11" pos:end="198:77">else <block pos:start="185:16" pos:end="198:77">{<block_content pos:start="187:13" pos:end="198:77">

            <if_stmt pos:start="187:13" pos:end="192:13"><if pos:start="187:13" pos:end="192:13">if<condition pos:start="187:15" pos:end="187:84">(<expr pos:start="187:16" pos:end="187:83"><call pos:start="187:16" pos:end="187:79"><name pos:start="187:16" pos:end="187:32">mjpeg_decode_scan</name><argument_list pos:start="187:33" pos:end="187:79">(<argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><name pos:start="187:34" pos:end="187:34">s</name></expr></argument>, <argument pos:start="187:37" pos:end="187:49"><expr pos:start="187:37" pos:end="187:49"><name pos:start="187:37" pos:end="187:49">nb_components</name></expr></argument>, <argument pos:start="187:52" pos:end="187:61"><expr pos:start="187:52" pos:end="187:61"><name pos:start="187:52" pos:end="187:61">prev_shift</name></expr></argument>, <argument pos:start="187:64" pos:end="187:78"><expr pos:start="187:64" pos:end="187:78"><name pos:start="187:64" pos:end="187:78">point_transform</name></expr></argument>)</argument_list></call> <operator pos:start="187:81" pos:end="187:81">&lt;</operator> <literal type="number" pos:start="187:83" pos:end="187:83">0</literal></expr>)</condition><block type="pseudo" pos:start="192:5" pos:end="192:13"><block_content pos:start="192:5" pos:end="192:13">




    <expr_stmt pos:start="192:5" pos:end="192:13"><expr pos:start="192:5" pos:end="192:12"><call pos:start="192:5" pos:end="192:12"><name pos:start="192:5" pos:end="192:10">emms_c</name><argument_list pos:start="192:11" pos:end="192:12">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="194:5" pos:end="194:13">return <expr pos:start="194:12" pos:end="194:12"><literal type="number" pos:start="194:12" pos:end="194:12">0</literal></expr>;</return>

 <label pos:start="196:2" pos:end="196:14"><name pos:start="196:2" pos:end="196:13">out_of_range</name>:</label>

    <expr_stmt pos:start="198:5" pos:end="198:77"><expr pos:start="198:5" pos:end="198:76"><call pos:start="198:5" pos:end="198:76"><name pos:start="198:5" pos:end="198:10">av_log</name><argument_list pos:start="198:11" pos:end="198:76">(<argument pos:start="198:12" pos:end="198:19"><expr pos:start="198:12" pos:end="198:19"><name pos:start="198:12" pos:end="198:19"><name pos:start="198:12" pos:end="198:12">s</name><operator pos:start="198:13" pos:end="198:14">-&gt;</operator><name pos:start="198:15" pos:end="198:19">avctx</name></name></expr></argument>, <argument pos:start="198:22" pos:end="198:33"><expr pos:start="198:22" pos:end="198:33"><name pos:start="198:22" pos:end="198:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="198:36" pos:end="198:75"><expr pos:start="198:36" pos:end="198:75"><literal type="string" pos:start="198:36" pos:end="198:75">"decode_sos: ac/dc index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>

</unit>
