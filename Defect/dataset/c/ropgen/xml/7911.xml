<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7911.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">avi_write_idx1</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AVIContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">avi</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">idx_chunk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:15"><name pos:start="13:10" pos:end="13:12">tag</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">5</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="95:5"><if pos:start="17:5" pos:end="95:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:10">pb</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:20">seekable</name></name></expr>)</condition> <block pos:start="17:23" pos:end="95:5">{<block_content pos:start="19:9" pos:end="93:44">

        <decl_stmt pos:start="19:9" pos:end="19:25"><decl pos:start="19:9" pos:end="19:24"><type pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:17">AVIStream</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">avist</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:25"><type pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:17">AVIIentry</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:21">ie</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr></init></decl>, <decl pos:start="21:28" pos:end="21:31"><type ref="prev" pos:start="21:9" pos:end="21:19"><modifier pos:start="21:28" pos:end="21:28">*</modifier></type><name pos:start="21:29" pos:end="21:31">tie</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:34"><decl pos:start="23:9" pos:end="23:17"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:17">empty</name></decl>, <decl pos:start="23:20" pos:end="23:33"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:20" pos:end="23:28">stream_id</name> <init pos:start="23:30" pos:end="23:33">= <expr pos:start="23:32" pos:end="23:33"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:17">idx_chunk</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:32">ff_start_tag</name><argument_list pos:start="27:33" pos:end="27:44">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">pb</name></expr></argument>, <argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><literal type="string" pos:start="27:38" pos:end="27:43">"idx1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="29:9" pos:end="35:9">for <control pos:start="29:13" pos:end="29:43">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:38"><expr pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:37">nb_streams</name></name></expr>;</condition> <incr pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><name pos:start="29:40" pos:end="29:40">i</name><operator pos:start="29:41" pos:end="29:42">++</operator></expr></incr>)</control> <block pos:start="29:45" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:29">

            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:17">avist</name>        <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:37">streams</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">i</name></expr>]</index></name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:51">priv_data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:17">avist</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">entry</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <do pos:start="39:9" pos:end="87:25">do <block pos:start="39:12" pos:end="87:9">{<block_content pos:start="41:13" pos:end="85:13">

            <expr_stmt pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:17">empty</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</expr_stmt>

            <for pos:start="43:13" pos:end="65:13">for <control pos:start="43:17" pos:end="43:47">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:42"><expr pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <name pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:41">nb_streams</name></name></expr>;</condition> <incr pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:44">i</name><operator pos:start="43:45" pos:end="43:46">++</operator></expr></incr>)</control> <block pos:start="43:49" pos:end="65:13">{<block_content pos:start="45:17" pos:end="63:26">

                <expr_stmt pos:start="45:17" pos:end="45:49"><expr pos:start="45:17" pos:end="45:48"><name pos:start="45:17" pos:end="45:21">avist</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:34">streams</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">i</name></expr>]</index></name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:48">priv_data</name></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="49:29"><if pos:start="47:17" pos:end="49:29">if <condition pos:start="47:20" pos:end="47:57">(<expr pos:start="47:21" pos:end="47:56"><name pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:25">avist</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:34">indexes</name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:40">entry</name></name> <operator pos:start="47:42" pos:end="47:43">&lt;=</operator> <name pos:start="47:45" pos:end="47:56"><name pos:start="47:45" pos:end="47:49">avist</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:56">entry</name></name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:29"><block_content pos:start="49:21" pos:end="49:29">

                    <continue pos:start="49:21" pos:end="49:29">continue;</continue></block_content></block></if></if_stmt>



                <expr_stmt pos:start="53:17" pos:end="53:68"><expr pos:start="53:17" pos:end="53:67"><name pos:start="53:17" pos:end="53:19">tie</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:67"><name pos:start="53:23" pos:end="53:36">avi_get_ientry</name><argument_list pos:start="53:37" pos:end="53:67">(<argument pos:start="53:38" pos:end="53:52"><expr pos:start="53:38" pos:end="53:52"><operator pos:start="53:38" pos:end="53:38">&amp;</operator><name pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:43">avist</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:52">indexes</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:66"><expr pos:start="53:55" pos:end="53:66"><name pos:start="53:55" pos:end="53:66"><name pos:start="53:55" pos:end="53:59">avist</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:66">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:48">(<expr pos:start="55:21" pos:end="55:47"><name pos:start="55:21" pos:end="55:25">empty</name> <operator pos:start="55:27" pos:end="55:28">||</operator> <name pos:start="55:30" pos:end="55:37"><name pos:start="55:30" pos:end="55:32">tie</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:37">pos</name></name> <operator pos:start="55:39" pos:end="55:39">&lt;</operator> <name pos:start="55:41" pos:end="55:47"><name pos:start="55:41" pos:end="55:42">ie</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:47">pos</name></name></expr>)</condition> <block pos:start="55:50" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:34">

                    <expr_stmt pos:start="57:21" pos:end="57:36"><expr pos:start="57:21" pos:end="57:35"><name pos:start="57:21" pos:end="57:22">ie</name>        <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:35">tie</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:34"><expr pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:29">stream_id</name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:33">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:26"><expr pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:21">empty</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="67:13" pos:end="85:13"><if pos:start="67:13" pos:end="85:13">if <condition pos:start="67:16" pos:end="67:23">(<expr pos:start="67:17" pos:end="67:22"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:22">empty</name></expr>)</condition> <block pos:start="67:25" pos:end="85:13">{<block_content pos:start="69:17" pos:end="83:31">

                <expr_stmt pos:start="69:17" pos:end="69:57"><expr pos:start="69:17" pos:end="69:56"><name pos:start="69:17" pos:end="69:21">avist</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:45"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:34">streams</name><index pos:start="69:35" pos:end="69:45">[<expr pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:44">stream_id</name></expr>]</index></name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:56">priv_data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="73:79"><expr pos:start="71:17" pos:end="73:78"><call pos:start="71:17" pos:end="73:78"><name pos:start="71:17" pos:end="71:33">avi_stream2fourcc</name><argument_list pos:start="71:34" pos:end="73:78">(<argument pos:start="71:35" pos:end="71:37"><expr pos:start="71:35" pos:end="71:37"><name pos:start="71:35" pos:end="71:37">tag</name></expr></argument>, <argument pos:start="71:40" pos:end="71:48"><expr pos:start="71:40" pos:end="71:48"><name pos:start="71:40" pos:end="71:48">stream_id</name></expr></argument>,

                                  <argument pos:start="73:35" pos:end="73:77"><expr pos:start="73:35" pos:end="73:77"><name pos:start="73:35" pos:end="73:55"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:44">streams</name><index pos:start="73:45" pos:end="73:55">[<expr pos:start="73:46" pos:end="73:54"><name pos:start="73:46" pos:end="73:54">stream_id</name></expr>]</index></name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:77"><name pos:start="73:58" pos:end="73:65">codecpar</name><operator pos:start="73:66" pos:end="73:67">-&gt;</operator><name pos:start="73:68" pos:end="73:77">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:38"><expr pos:start="75:17" pos:end="75:37"><call pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:28">ffio_wfourcc</name><argument_list pos:start="75:29" pos:end="75:37">(<argument pos:start="75:30" pos:end="75:31"><expr pos:start="75:30" pos:end="75:31"><name pos:start="75:30" pos:end="75:31">pb</name></expr></argument>, <argument pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><name pos:start="75:34" pos:end="75:36">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:41"><expr pos:start="77:17" pos:end="77:40"><call pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:25">avio_wl32</name><argument_list pos:start="77:26" pos:end="77:40">(<argument pos:start="77:27" pos:end="77:28"><expr pos:start="77:27" pos:end="77:28"><name pos:start="77:27" pos:end="77:28">pb</name></expr></argument>, <argument pos:start="77:31" pos:end="77:39"><expr pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:32">ie</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:39">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:39"><expr pos:start="79:17" pos:end="79:38"><call pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:25">avio_wl32</name><argument_list pos:start="79:26" pos:end="79:38">(<argument pos:start="79:27" pos:end="79:28"><expr pos:start="79:27" pos:end="79:28"><name pos:start="79:27" pos:end="79:28">pb</name></expr></argument>, <argument pos:start="79:31" pos:end="79:37"><expr pos:start="79:31" pos:end="79:37"><name pos:start="79:31" pos:end="79:37"><name pos:start="79:31" pos:end="79:32">ie</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:37">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:38"><call pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:25">avio_wl32</name><argument_list pos:start="81:26" pos:end="81:38">(<argument pos:start="81:27" pos:end="81:28"><expr pos:start="81:27" pos:end="81:28"><name pos:start="81:27" pos:end="81:28">pb</name></expr></argument>, <argument pos:start="81:31" pos:end="81:37"><expr pos:start="81:31" pos:end="81:37"><name pos:start="81:31" pos:end="81:37"><name pos:start="81:31" pos:end="81:32">ie</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:37">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:31"><expr pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:21">avist</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:28">entry</name></name><operator pos:start="83:29" pos:end="83:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="87:17" pos:end="87:24">(<expr pos:start="87:18" pos:end="87:23"><operator pos:start="87:18" pos:end="87:18">!</operator><name pos:start="87:19" pos:end="87:23">empty</name></expr>)</condition>;</do>

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><call pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:18">ff_end_tag</name><argument_list pos:start="89:19" pos:end="89:33">(<argument pos:start="89:20" pos:end="89:21"><expr pos:start="89:20" pos:end="89:21"><name pos:start="89:20" pos:end="89:21">pb</name></expr></argument>, <argument pos:start="89:24" pos:end="89:32"><expr pos:start="89:24" pos:end="89:32"><name pos:start="89:24" pos:end="89:32">idx_chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><call pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:26">avi_write_counters</name><argument_list pos:start="93:27" pos:end="93:43">(<argument pos:start="93:28" pos:end="93:28"><expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">s</name></expr></argument>, <argument pos:start="93:31" pos:end="93:42"><expr pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:33">avi</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:42">riff_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
