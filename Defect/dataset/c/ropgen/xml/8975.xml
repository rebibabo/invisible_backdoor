<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8975.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_sot</name><parameter_list pos:start="1:19" pos:end="1:52">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:51"><decl pos:start="1:47" pos:end="1:51"><type pos:start="1:47" pos:end="1:51"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:51">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">Jpeg2000TilePart</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">tp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">Isot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">Psot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:17">TPsot</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><call pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:34">bytestream2_get_bytes_left</name><argument_list pos:start="15:35" pos:end="15:41">(<argument pos:start="15:36" pos:end="15:40"><expr pos:start="15:36" pos:end="15:40"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:40">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:43" pos:end="15:43">&lt;</operator> <literal type="number" pos:start="15:45" pos:end="15:45">8</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">curtileno</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:8">Isot</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:39"><name pos:start="23:12" pos:end="23:32">bytestream2_get_be16u</name><argument_list pos:start="23:33" pos:end="23:39">(<argument pos:start="23:34" pos:end="23:38"><expr pos:start="23:34" pos:end="23:38"><operator pos:start="23:34" pos:end="23:34">&amp;</operator><name pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:38">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="line" pos:start="23:49" pos:end="23:55">// Isot</comment>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:12">Isot</name> <operator pos:start="25:14" pos:end="25:15">&gt;=</operator> <name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:28">numXtiles</name></name> <operator pos:start="25:30" pos:end="25:30">*</operator> <name pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:43">numYtiles</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">curtileno</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:23">Isot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:8">Psot</name>  <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:33">bytestream2_get_be32u</name><argument_list pos:start="33:34" pos:end="33:40">(<argument pos:start="33:35" pos:end="33:39"><expr pos:start="33:35" pos:end="33:39"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:39">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="33:49" pos:end="33:55">// Psot</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:9">TPsot</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:33">bytestream2_get_byteu</name><argument_list pos:start="35:34" pos:end="35:40">(<argument pos:start="35:35" pos:end="35:39"><expr pos:start="35:35" pos:end="35:39"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:39"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:39">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="35:49" pos:end="35:56">// TPsot</comment>



    <comment type="block" pos:start="39:5" pos:end="39:33">/* Read TNSot but not used */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:25">bytestream2_get_byteu</name><argument_list pos:start="41:26" pos:end="41:32">(<argument pos:start="41:27" pos:end="41:31"><expr pos:start="41:27" pos:end="41:31"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:31">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="line" pos:start="41:49" pos:end="41:56">// TNsot</comment>



    <if_stmt pos:start="45:5" pos:end="47:57"><if pos:start="45:5" pos:end="47:57">if <condition pos:start="45:8" pos:end="45:14">(<expr pos:start="45:9" pos:end="45:13"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:13">Psot</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:57"><block_content pos:start="47:9" pos:end="47:57">

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:12">Psot</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:48"><name pos:start="47:16" pos:end="47:41">bytestream2_get_bytes_left</name><argument_list pos:start="47:42" pos:end="47:48">(<argument pos:start="47:43" pos:end="47:47"><expr pos:start="47:43" pos:end="47:47"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:47"><name pos:start="47:44" pos:end="47:44">s</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:47">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:50" pos:end="47:50">+</operator> <name pos:start="47:52" pos:end="47:52">n</name> <operator pos:start="47:54" pos:end="47:54">+</operator> <literal type="number" pos:start="47:56" pos:end="47:56">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:57">(<expr pos:start="51:9" pos:end="51:56"><name pos:start="51:9" pos:end="51:12">Psot</name> <operator pos:start="51:14" pos:end="51:14">&gt;</operator> <call pos:start="51:16" pos:end="51:48"><name pos:start="51:16" pos:end="51:41">bytestream2_get_bytes_left</name><argument_list pos:start="51:42" pos:end="51:48">(<argument pos:start="51:43" pos:end="51:47"><expr pos:start="51:43" pos:end="51:47"><operator pos:start="51:43" pos:end="51:43">&amp;</operator><name pos:start="51:44" pos:end="51:47"><name pos:start="51:44" pos:end="51:44">s</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:47">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:50" pos:end="51:50">+</operator> <name pos:start="51:52" pos:end="51:52">n</name> <operator pos:start="51:54" pos:end="51:54">+</operator> <literal type="number" pos:start="51:56" pos:end="51:56">2</literal></expr>)</condition> <block pos:start="51:59" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:35">

        <expr_stmt pos:start="53:9" pos:end="53:73"><expr pos:start="53:9" pos:end="53:72"><call pos:start="53:9" pos:end="53:72"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:72">(<argument pos:start="53:16" pos:end="53:23"><expr pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:23">avctx</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:37"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:40" pos:end="53:65"><expr pos:start="53:40" pos:end="53:65"><literal type="string" pos:start="53:40" pos:end="53:47">"Psot %"</literal><name pos:start="53:48" pos:end="53:53">PRIu32</name><literal type="string" pos:start="53:54" pos:end="53:65">" too big\n"</literal></expr></argument>, <argument pos:start="53:68" pos:end="53:71"><expr pos:start="53:68" pos:end="53:71"><name pos:start="53:68" pos:end="53:71">Psot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:57">(<expr pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:13">TPsot</name> <operator pos:start="61:15" pos:end="61:16">&gt;=</operator> <call pos:start="61:18" pos:end="61:56"><name pos:start="61:18" pos:end="61:31">FF_ARRAY_ELEMS</name><argument_list pos:start="61:32" pos:end="61:56">(<argument pos:start="61:33" pos:end="61:55"><expr pos:start="61:33" pos:end="61:55"><name pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:33">s</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:39">tile</name><index pos:start="61:40" pos:end="61:45">[<expr pos:start="61:41" pos:end="61:44"><name pos:start="61:41" pos:end="61:44">Isot</name></expr>]</index></name><operator pos:start="61:46" pos:end="61:46">.</operator><name pos:start="61:47" pos:end="61:55">tile_part</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:59" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:36">

        <expr_stmt pos:start="63:9" pos:end="63:82"><expr pos:start="63:9" pos:end="63:81"><call pos:start="63:9" pos:end="63:81"><name pos:start="63:9" pos:end="63:29">avpriv_request_sample</name><argument_list pos:start="63:30" pos:end="63:81">(<argument pos:start="63:31" pos:end="63:38"><expr pos:start="63:31" pos:end="63:38"><name pos:start="63:31" pos:end="63:38"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:38">avctx</name></name></expr></argument>, <argument pos:start="63:41" pos:end="63:73"><expr pos:start="63:41" pos:end="63:73"><literal type="string" pos:start="63:41" pos:end="63:55">"Support for %"</literal><name pos:start="63:56" pos:end="63:60">PRIu8</name><literal type="string" pos:start="63:61" pos:end="63:73">" components"</literal></expr></argument>, <argument pos:start="63:76" pos:end="63:80"><expr pos:start="63:76" pos:end="63:80"><name pos:start="63:76" pos:end="63:80">TPsot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:36">return <expr pos:start="65:16" pos:end="65:35"><name pos:start="65:16" pos:end="65:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:11">tile</name><index pos:start="71:12" pos:end="71:17">[<expr pos:start="71:13" pos:end="71:16"><name pos:start="71:13" pos:end="71:16">Isot</name></expr>]</index></name><operator pos:start="71:18" pos:end="71:18">.</operator><name pos:start="71:19" pos:end="71:24">tp_idx</name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:32">TPsot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:6">tp</name>             <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:34"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:28">tile</name><index pos:start="73:29" pos:end="73:34">[<expr pos:start="73:30" pos:end="73:33"><name pos:start="73:30" pos:end="73:33">Isot</name></expr>]</index></name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:44">tile_part</name> <operator pos:start="73:46" pos:end="73:46">+</operator> <name pos:start="73:48" pos:end="73:52">TPsot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:6">tp</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:18">tile_index</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:25">Isot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:14"><name pos:start="77:5" pos:end="77:6">tp</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:14">tp_end</name></name>     <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:32"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:25">g</name><operator pos:start="77:26" pos:end="77:26">.</operator><name pos:start="77:27" pos:end="77:32">buffer</name></name> <operator pos:start="77:34" pos:end="77:34">+</operator> <name pos:start="77:36" pos:end="77:39">Psot</name> <operator pos:start="77:41" pos:end="77:41">-</operator> <name pos:start="77:43" pos:end="77:43">n</name> <operator pos:start="77:45" pos:end="77:45">-</operator> <literal type="number" pos:start="77:47" pos:end="77:47">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="93:5"><if pos:start="81:5" pos:end="93:5">if <condition pos:start="81:8" pos:end="81:15">(<expr pos:start="81:9" pos:end="81:14"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:14">TPsot</name></expr>)</condition> <block pos:start="81:17" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:85">

        <decl_stmt pos:start="83:9" pos:end="83:52"><decl pos:start="83:9" pos:end="83:51"><type pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:20">Jpeg2000Tile</name> <modifier pos:start="83:22" pos:end="83:22">*</modifier></type><name pos:start="83:23" pos:end="83:26">tile</name> <init pos:start="83:28" pos:end="83:51">= <expr pos:start="83:30" pos:end="83:51"><name pos:start="83:30" pos:end="83:36"><name pos:start="83:30" pos:end="83:30">s</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:36">tile</name></name> <operator pos:start="83:38" pos:end="83:38">+</operator> <name pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:40">s</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:51">curtileno</name></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:27">/* copy defaults */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:86"><expr pos:start="89:9" pos:end="89:85"><call pos:start="89:9" pos:end="89:85"><name pos:start="89:9" pos:end="89:14">memcpy</name><argument_list pos:start="89:15" pos:end="89:85">(<argument pos:start="89:16" pos:end="89:27"><expr pos:start="89:16" pos:end="89:27"><name pos:start="89:16" pos:end="89:27"><name pos:start="89:16" pos:end="89:19">tile</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:27">codsty</name></name></expr></argument>, <argument pos:start="89:30" pos:end="89:38"><expr pos:start="89:30" pos:end="89:38"><name pos:start="89:30" pos:end="89:38"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:38">codsty</name></name></expr></argument>, <argument pos:start="89:41" pos:end="89:84"><expr pos:start="89:41" pos:end="89:84"><name pos:start="89:41" pos:end="89:54"><name pos:start="89:41" pos:end="89:41">s</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:54">ncomponents</name></name> <operator pos:start="89:56" pos:end="89:56">*</operator> <sizeof pos:start="89:58" pos:end="89:84">sizeof<argument_list pos:start="89:64" pos:end="89:84">(<argument pos:start="89:65" pos:end="89:83"><expr pos:start="89:65" pos:end="89:83"><name pos:start="89:65" pos:end="89:83">Jpeg2000CodingStyle</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:85"><expr pos:start="91:9" pos:end="91:84"><call pos:start="91:9" pos:end="91:84"><name pos:start="91:9" pos:end="91:14">memcpy</name><argument_list pos:start="91:15" pos:end="91:84">(<argument pos:start="91:16" pos:end="91:27"><expr pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:19">tile</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:27">qntsty</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:38"><expr pos:start="91:30" pos:end="91:38"><name pos:start="91:30" pos:end="91:38"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:38">qntsty</name></name></expr></argument>, <argument pos:start="91:41" pos:end="91:83"><expr pos:start="91:41" pos:end="91:83"><name pos:start="91:41" pos:end="91:54"><name pos:start="91:41" pos:end="91:41">s</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:54">ncomponents</name></name> <operator pos:start="91:56" pos:end="91:56">*</operator> <sizeof pos:start="91:58" pos:end="91:83">sizeof<argument_list pos:start="91:64" pos:end="91:83">(<argument pos:start="91:65" pos:end="91:82"><expr pos:start="91:65" pos:end="91:82"><name pos:start="91:65" pos:end="91:82">Jpeg2000QuantStyle</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
