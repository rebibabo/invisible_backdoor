<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17233.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:45">(<argument pos:start="1:32" pos:end="1:46">CPUMBState *env</argument>, <argument pos:start="1:49" pos:end="1:68">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:44">int search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="403:1">{<block_content pos:start="7:5" pos:end="401:36">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint16_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">j</name></decl>, <decl pos:start="11:12" pos:end="11:13"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:23">DisasContext</name></name></type> <name pos:start="13:25" pos:end="13:27">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:23">DisasContext</name></name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">dc</name> <init pos:start="15:29" pos:end="15:34">= <expr pos:start="15:31" pos:end="15:34"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:34">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:28">next_page_start</name></decl>, <decl pos:start="17:31" pos:end="17:39"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:31" pos:end="17:39">org_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:20">npc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:25">qemu_log_try_set_file</name><argument_list pos:start="27:26" pos:end="27:33">(<argument pos:start="27:27" pos:end="27:32"><expr pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:32">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:12">pc_start</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:17">tb</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:6">dc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:11">env</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:6">dc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:10">tb</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:13">org_flags</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:18">dc</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:32">synced_flags</name></name> <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:47"><name pos:start="37:36" pos:end="37:37">dc</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:47">tb_flags</name></name> <operator pos:start="37:49" pos:end="37:49">=</operator> <name pos:start="37:51" pos:end="37:59"><name pos:start="37:51" pos:end="37:52">tb</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:59">flags</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:15">gen_opc_end</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:37"><name pos:start="41:19" pos:end="41:25">tcg_ctx</name><operator pos:start="41:26" pos:end="41:26">.</operator><name pos:start="41:27" pos:end="41:37">gen_opc_buf</name></name> <operator pos:start="41:39" pos:end="41:39">+</operator> <name pos:start="41:41" pos:end="41:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:14">is_jmp</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:16"><expr pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:11">jmp</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:22">delayed_branch</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <operator pos:start="49:26" pos:end="49:26">!</operator><operator pos:start="49:27" pos:end="49:27">!</operator><operator pos:start="49:28" pos:end="49:28">(</operator><name pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:30">dc</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:40">tb_flags</name></name> <operator pos:start="49:42" pos:end="49:42">&amp;</operator> <name pos:start="49:44" pos:end="49:49">D_FLAG</name><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:27">(<expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:10">dc</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:26">delayed_branch</name></name></expr>)</condition> <block pos:start="51:29" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:10">dc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:15">jmp</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:30">JMP_INDIRECT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:10">pc</name></name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:26">singlestep_enabled</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:52"><name pos:start="59:30" pos:end="59:32">env</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:52">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:6">dc</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:24">cpustate_changed</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:6">dc</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:26">abort_at_next_insn</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <literal type="number" pos:start="63:30" pos:end="63:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:6">dc</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:15">nr_nops</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:66"><if pos:start="69:5" pos:end="71:66">if <condition pos:start="69:8" pos:end="69:21">(<expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:16">pc_start</name> <operator pos:start="69:18" pos:end="69:18">&amp;</operator> <literal type="number" pos:start="69:20" pos:end="69:20">3</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:66"><block_content pos:start="71:9" pos:end="71:66">

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:17">cpu_abort</name><argument_list pos:start="71:18" pos:end="71:65">(<argument pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><name pos:start="71:19" pos:end="71:21">env</name></expr></argument>, <argument pos:start="71:24" pos:end="71:54"><expr pos:start="71:24" pos:end="71:54"><literal type="string" pos:start="71:24" pos:end="71:54">"Microblaze: unaligned PC=%x\n"</literal></expr></argument>, <argument pos:start="71:57" pos:end="71:64"><expr pos:start="71:57" pos:end="71:64"><name pos:start="71:57" pos:end="71:64">pc_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="85:5"><if pos:start="75:5" pos:end="85:5">if <condition pos:start="75:8" pos:end="75:46">(<expr pos:start="75:9" pos:end="75:45"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:26">qemu_loglevel_mask</name><argument_list pos:start="75:27" pos:end="75:45">(<argument pos:start="75:28" pos:end="75:44"><expr pos:start="75:28" pos:end="75:44"><name pos:start="75:28" pos:end="75:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:48" pos:end="85:5">{<block_content pos:start="79:9" pos:end="84:0">

<cpp:if pos:start="77:1" pos:end="77:15">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:15"><operator pos:start="77:5" pos:end="77:5">!</operator><name pos:start="77:6" pos:end="77:15">SIM_COMPAT</name></expr></cpp:if>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><call pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:16">qemu_log</name><argument_list pos:start="79:17" pos:end="79:36">(<argument pos:start="79:18" pos:end="79:35"><expr pos:start="79:18" pos:end="79:35"><literal type="string" pos:start="79:18" pos:end="79:35">"--------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="84:0"><expr pos:start="81:9" pos:end="81:29"><call pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:21">log_cpu_state</name><argument_list pos:start="81:22" pos:end="81:29">(<argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">env</name></expr></argument>, <argument pos:start="81:28" pos:end="81:28"><expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:71"><expr pos:start="89:5" pos:end="89:70"><name pos:start="89:5" pos:end="89:19">next_page_start</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <operator pos:start="89:23" pos:end="89:23">(</operator><name pos:start="89:24" pos:end="89:31">pc_start</name> <operator pos:start="89:33" pos:end="89:33">&amp;</operator> <name pos:start="89:35" pos:end="89:50">TARGET_PAGE_MASK</name><operator pos:start="89:51" pos:end="89:51">)</operator> <operator pos:start="89:53" pos:end="89:53">+</operator> <name pos:start="89:55" pos:end="89:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:12"><expr pos:start="91:5" pos:end="91:11"><name pos:start="91:5" pos:end="91:6">lj</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <operator pos:start="91:10" pos:end="91:10">-</operator><literal type="number" pos:start="91:11" pos:end="91:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:18"><expr pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:13">num_insns</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:43"><expr pos:start="95:5" pos:end="95:42"><name pos:start="95:5" pos:end="95:13">max_insns</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:18">tb</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:26">cflags</name></name> <operator pos:start="95:28" pos:end="95:28">&amp;</operator> <name pos:start="95:30" pos:end="95:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:34"><if pos:start="97:5" pos:end="99:34">if <condition pos:start="97:8" pos:end="97:23">(<expr pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:17">max_insns</name> <operator pos:start="97:19" pos:end="97:20">==</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:34"><block_content pos:start="99:9" pos:end="99:34">

        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:17">max_insns</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><call pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:20">gen_icount_start</name><argument_list pos:start="103:21" pos:end="103:22">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="105:5" pos:end="257:43">do

    <block pos:start="107:5" pos:end="249:5">{<block_content pos:start="111:9" pos:end="247:18">

<cpp:if pos:start="109:1" pos:end="109:14">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:14">SIM_COMPAT</name></expr></cpp:if>

        <if_stmt pos:start="111:9" pos:end="120:0"><if pos:start="111:9" pos:end="120:0">if <condition pos:start="111:12" pos:end="111:50">(<expr pos:start="111:13" pos:end="111:49"><call pos:start="111:13" pos:end="111:49"><name pos:start="111:13" pos:end="111:30">qemu_loglevel_mask</name><argument_list pos:start="111:31" pos:end="111:49">(<argument pos:start="111:32" pos:end="111:48"><expr pos:start="111:32" pos:end="111:48"><name pos:start="111:32" pos:end="111:48">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:52" pos:end="120:0">{<block_content pos:start="113:13" pos:end="115:31">

            <expr_stmt pos:start="113:13" pos:end="113:51"><expr pos:start="113:13" pos:end="113:50"><call pos:start="113:13" pos:end="113:50"><name pos:start="113:13" pos:end="113:27">tcg_gen_movi_tl</name><argument_list pos:start="113:28" pos:end="113:50">(<argument pos:start="113:29" pos:end="113:41"><expr pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:34">cpu_SR</name><index pos:start="113:35" pos:end="113:41">[<expr pos:start="113:36" pos:end="113:40"><name pos:start="113:36" pos:end="113:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="113:44" pos:end="113:49"><expr pos:start="113:44" pos:end="113:49"><name pos:start="113:44" pos:end="113:49"><name pos:start="113:44" pos:end="113:45">dc</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:49">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><call pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:28">gen_helper_debug</name><argument_list pos:start="115:29" pos:end="115:30">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="121:9" pos:end="121:34"><expr pos:start="121:9" pos:end="121:33"><call pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:24">check_breakpoint</name><argument_list pos:start="121:25" pos:end="121:33">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">env</name></expr></argument>, <argument pos:start="121:31" pos:end="121:32"><expr pos:start="121:31" pos:end="121:32"><name pos:start="121:31" pos:end="121:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="145:9"><if pos:start="125:9" pos:end="145:9">if <condition pos:start="125:12" pos:end="125:22">(<expr pos:start="125:13" pos:end="125:21"><name pos:start="125:13" pos:end="125:21">search_pc</name></expr>)</condition> <block pos:start="125:24" pos:end="145:9">{<block_content pos:start="127:13" pos:end="143:63">

            <expr_stmt pos:start="127:13" pos:end="127:58"><expr pos:start="127:13" pos:end="127:57"><name pos:start="127:13" pos:end="127:13">j</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:35"><name pos:start="127:17" pos:end="127:23">tcg_ctx</name><operator pos:start="127:24" pos:end="127:24">.</operator><name pos:start="127:25" pos:end="127:35">gen_opc_ptr</name></name> <operator pos:start="127:37" pos:end="127:37">-</operator> <name pos:start="127:39" pos:end="127:57"><name pos:start="127:39" pos:end="127:45">tcg_ctx</name><operator pos:start="127:46" pos:end="127:46">.</operator><name pos:start="127:47" pos:end="127:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="137:13"><if pos:start="129:13" pos:end="137:13">if <condition pos:start="129:16" pos:end="129:23">(<expr pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:18">lj</name> <operator pos:start="129:20" pos:end="129:20">&lt;</operator> <name pos:start="129:22" pos:end="129:22">j</name></expr>)</condition> <block pos:start="129:25" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:58">

                <expr_stmt pos:start="131:17" pos:end="131:21"><expr pos:start="131:17" pos:end="131:20"><name pos:start="131:17" pos:end="131:18">lj</name><operator pos:start="131:19" pos:end="131:20">++</operator></expr>;</expr_stmt>

                <while pos:start="133:17" pos:end="135:58">while <condition pos:start="133:23" pos:end="133:30">(<expr pos:start="133:24" pos:end="133:29"><name pos:start="133:24" pos:end="133:25">lj</name> <operator pos:start="133:27" pos:end="133:27">&lt;</operator> <name pos:start="133:29" pos:end="133:29">j</name></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:58"><block_content pos:start="135:21" pos:end="135:58">

                    <expr_stmt pos:start="135:21" pos:end="135:58"><expr pos:start="135:21" pos:end="135:57"><name pos:start="135:21" pos:end="135:53"><name pos:start="135:21" pos:end="135:27">tcg_ctx</name><operator pos:start="135:28" pos:end="135:28">.</operator><name pos:start="135:29" pos:end="135:47">gen_opc_instr_start</name><index pos:start="135:48" pos:end="135:53">[<expr pos:start="135:49" pos:end="135:52"><name pos:start="135:49" pos:end="135:50">lj</name><operator pos:start="135:51" pos:end="135:52">++</operator></expr>]</index></name> <operator pos:start="135:55" pos:end="135:55">=</operator> <literal type="number" pos:start="135:57" pos:end="135:57">0</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:44"><expr pos:start="139:13" pos:end="139:43"><name pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:19">tcg_ctx</name><operator pos:start="139:20" pos:end="139:20">.</operator><name pos:start="139:21" pos:end="139:30">gen_opc_pc</name><index pos:start="139:31" pos:end="139:34">[<expr pos:start="139:32" pos:end="139:33"><name pos:start="139:32" pos:end="139:33">lj</name></expr>]</index></name> <operator pos:start="139:36" pos:end="139:36">=</operator> <name pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:39">dc</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:48"><expr pos:start="141:13" pos:end="141:47"><name pos:start="141:13" pos:end="141:43"><name pos:start="141:13" pos:end="141:19">tcg_ctx</name><operator pos:start="141:20" pos:end="141:20">.</operator><name pos:start="141:21" pos:end="141:39">gen_opc_instr_start</name><index pos:start="141:40" pos:end="141:43">[<expr pos:start="141:41" pos:end="141:42"><name pos:start="141:41" pos:end="141:42">lj</name></expr>]</index></name> <operator pos:start="141:45" pos:end="141:45">=</operator> <literal type="number" pos:start="141:47" pos:end="141:47">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:63"><expr pos:start="143:25" pos:end="143:62"><name pos:start="143:25" pos:end="143:50"><name pos:start="143:25" pos:end="143:31">tcg_ctx</name><operator pos:start="143:32" pos:end="143:32">.</operator><name pos:start="143:33" pos:end="143:46">gen_opc_icount</name><index pos:start="143:47" pos:end="143:50">[<expr pos:start="143:48" pos:end="143:49"><name pos:start="143:48" pos:end="143:49">lj</name></expr>]</index></name> <operator pos:start="143:52" pos:end="143:52">=</operator> <name pos:start="143:54" pos:end="143:62">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="149:9" pos:end="149:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><call pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:15">LOG_DIS</name><argument_list pos:start="151:16" pos:end="151:35">(<argument pos:start="151:17" pos:end="151:26"><expr pos:start="151:17" pos:end="151:26"><literal type="string" pos:start="151:17" pos:end="151:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="151:29" pos:end="151:34"><expr pos:start="151:29" pos:end="151:34"><name pos:start="151:29" pos:end="151:34"><name pos:start="151:29" pos:end="151:30">dc</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="157:27"><if pos:start="155:9" pos:end="157:27">if <condition pos:start="155:12" pos:end="155:68">(<expr pos:start="155:13" pos:end="155:67"><name pos:start="155:13" pos:end="155:21">num_insns</name> <operator pos:start="155:23" pos:end="155:23">+</operator> <literal type="number" pos:start="155:25" pos:end="155:25">1</literal> <operator pos:start="155:27" pos:end="155:28">==</operator> <name pos:start="155:30" pos:end="155:38">max_insns</name> <operator pos:start="155:40" pos:end="155:41">&amp;&amp;</operator> <operator pos:start="155:43" pos:end="155:43">(</operator><name pos:start="155:44" pos:end="155:53"><name pos:start="155:44" pos:end="155:45">tb</name><operator pos:start="155:46" pos:end="155:47">-&gt;</operator><name pos:start="155:48" pos:end="155:53">cflags</name></name> <operator pos:start="155:55" pos:end="155:55">&amp;</operator> <name pos:start="155:57" pos:end="155:66">CF_LAST_IO</name><operator pos:start="155:67" pos:end="155:67">)</operator></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:27"><block_content pos:start="157:13" pos:end="157:27">

            <expr_stmt pos:start="157:13" pos:end="157:27"><expr pos:start="157:13" pos:end="157:26"><call pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:24">gen_io_start</name><argument_list pos:start="157:25" pos:end="157:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:26"><expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:10">dc</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:21">clear_imm</name></name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:46"><expr pos:start="163:9" pos:end="163:45"><call pos:start="163:9" pos:end="163:45"><name pos:start="163:9" pos:end="163:14">decode</name><argument_list pos:start="163:15" pos:end="163:45">(<argument pos:start="163:16" pos:end="163:17"><expr pos:start="163:16" pos:end="163:17"><name pos:start="163:16" pos:end="163:17">dc</name></expr></argument>, <argument pos:start="163:20" pos:end="163:44"><expr pos:start="163:20" pos:end="163:44"><call pos:start="163:20" pos:end="163:44"><name pos:start="163:20" pos:end="163:31">cpu_ldl_code</name><argument_list pos:start="163:32" pos:end="163:44">(<argument pos:start="163:33" pos:end="163:35"><expr pos:start="163:33" pos:end="163:35"><name pos:start="163:33" pos:end="163:35">env</name></expr></argument>, <argument pos:start="163:38" pos:end="163:43"><expr pos:start="163:38" pos:end="163:43"><name pos:start="163:38" pos:end="163:43"><name pos:start="163:38" pos:end="163:39">dc</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:43">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="167:38"><if pos:start="165:9" pos:end="167:38">if <condition pos:start="165:12" pos:end="165:26">(<expr pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:14">dc</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:25">clear_imm</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:38"><block_content pos:start="167:13" pos:end="167:38">

            <expr_stmt pos:start="167:13" pos:end="167:38"><expr pos:start="167:13" pos:end="167:37"><name pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:14">dc</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:24">tb_flags</name></name> <operator pos:start="167:26" pos:end="167:27">&amp;=</operator> <operator pos:start="167:29" pos:end="167:29">~</operator><name pos:start="167:30" pos:end="167:37">IMM_FLAG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:20"><expr pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:14"><name pos:start="169:9" pos:end="169:10">dc</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:14">pc</name></name> <operator pos:start="169:16" pos:end="169:17">+=</operator> <literal type="number" pos:start="169:19" pos:end="169:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:20"><expr pos:start="171:9" pos:end="171:19"><name pos:start="171:9" pos:end="171:17">num_insns</name><operator pos:start="171:18" pos:end="171:19">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="175:9" pos:end="243:9"><if pos:start="175:9" pos:end="243:9">if <condition pos:start="175:12" pos:end="175:31">(<expr pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:14">dc</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:30">delayed_branch</name></name></expr>)</condition> <block pos:start="175:33" pos:end="243:9">{<block_content pos:start="177:13" pos:end="241:13">

            <expr_stmt pos:start="177:13" pos:end="177:33"><expr pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:30"><name pos:start="177:13" pos:end="177:14">dc</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:30">delayed_branch</name></name><operator pos:start="177:31" pos:end="177:32">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="241:13"><if pos:start="179:13" pos:end="241:13">if <condition pos:start="179:16" pos:end="179:36">(<expr pos:start="179:17" pos:end="179:35"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:35"><name pos:start="179:18" pos:end="179:19">dc</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:35">delayed_branch</name></name></expr>)</condition> <block pos:start="179:38" pos:end="241:13">{<block_content pos:start="181:17" pos:end="239:22">

                <if_stmt pos:start="181:17" pos:end="183:31"><if pos:start="181:17" pos:end="183:31">if <condition pos:start="181:20" pos:end="181:45">(<expr pos:start="181:21" pos:end="181:44"><name pos:start="181:21" pos:end="181:32"><name pos:start="181:21" pos:end="181:22">dc</name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:32">tb_flags</name></name> <operator pos:start="181:34" pos:end="181:34">&amp;</operator> <name pos:start="181:36" pos:end="181:44">DRTI_FLAG</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:31"><block_content pos:start="183:21" pos:end="183:31">

                    <expr_stmt pos:start="183:21" pos:end="183:31"><expr pos:start="183:21" pos:end="183:30"><call pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:26">do_rti</name><argument_list pos:start="183:27" pos:end="183:30">(<argument pos:start="183:28" pos:end="183:29"><expr pos:start="183:28" pos:end="183:29"><name pos:start="183:28" pos:end="183:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                 <if_stmt pos:start="185:18" pos:end="187:31"><if pos:start="185:18" pos:end="187:31">if <condition pos:start="185:21" pos:end="185:46">(<expr pos:start="185:22" pos:end="185:45"><name pos:start="185:22" pos:end="185:33"><name pos:start="185:22" pos:end="185:23">dc</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:33">tb_flags</name></name> <operator pos:start="185:35" pos:end="185:35">&amp;</operator> <name pos:start="185:37" pos:end="185:45">DRTB_FLAG</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:31"><block_content pos:start="187:21" pos:end="187:31">

                    <expr_stmt pos:start="187:21" pos:end="187:31"><expr pos:start="187:21" pos:end="187:30"><call pos:start="187:21" pos:end="187:30"><name pos:start="187:21" pos:end="187:26">do_rtb</name><argument_list pos:start="187:27" pos:end="187:30">(<argument pos:start="187:28" pos:end="187:29"><expr pos:start="187:28" pos:end="187:29"><name pos:start="187:28" pos:end="187:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="189:17" pos:end="191:31"><if pos:start="189:17" pos:end="191:31">if <condition pos:start="189:20" pos:end="189:45">(<expr pos:start="189:21" pos:end="189:44"><name pos:start="189:21" pos:end="189:32"><name pos:start="189:21" pos:end="189:22">dc</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:32">tb_flags</name></name> <operator pos:start="189:34" pos:end="189:34">&amp;</operator> <name pos:start="189:36" pos:end="189:44">DRTE_FLAG</name></expr>)</condition><block type="pseudo" pos:start="191:21" pos:end="191:31"><block_content pos:start="191:21" pos:end="191:31">

                    <expr_stmt pos:start="191:21" pos:end="191:31"><expr pos:start="191:21" pos:end="191:30"><call pos:start="191:21" pos:end="191:30"><name pos:start="191:21" pos:end="191:26">do_rte</name><argument_list pos:start="191:27" pos:end="191:30">(<argument pos:start="191:28" pos:end="191:29"><expr pos:start="191:28" pos:end="191:29"><name pos:start="191:28" pos:end="191:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="193:17" pos:end="193:49">/* Clear the delay slot flag.  */</comment>

                <expr_stmt pos:start="195:17" pos:end="195:40"><expr pos:start="195:17" pos:end="195:39"><name pos:start="195:17" pos:end="195:28"><name pos:start="195:17" pos:end="195:18">dc</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:28">tb_flags</name></name> <operator pos:start="195:30" pos:end="195:31">&amp;=</operator> <operator pos:start="195:33" pos:end="195:33">~</operator><name pos:start="195:34" pos:end="195:39">D_FLAG</name></expr>;</expr_stmt>

                <comment type="block" pos:start="197:17" pos:end="197:67">/* If it is a direct jump, try direct chaining.  */</comment>

                <if_stmt pos:start="199:17" pos:end="237:17"><if pos:start="199:17" pos:end="205:17">if <condition pos:start="199:20" pos:end="199:44">(<expr pos:start="199:21" pos:end="199:43"><name pos:start="199:21" pos:end="199:27"><name pos:start="199:21" pos:end="199:22">dc</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:27">jmp</name></name> <operator pos:start="199:29" pos:end="199:30">==</operator> <name pos:start="199:32" pos:end="199:43">JMP_INDIRECT</name></expr>)</condition> <block pos:start="199:46" pos:end="205:17">{<block_content pos:start="201:21" pos:end="203:44">

                    <expr_stmt pos:start="201:21" pos:end="201:73"><expr pos:start="201:21" pos:end="201:72"><call pos:start="201:21" pos:end="201:72"><name pos:start="201:21" pos:end="201:33">eval_cond_jmp</name><argument_list pos:start="201:34" pos:end="201:72">(<argument pos:start="201:35" pos:end="201:36"><expr pos:start="201:35" pos:end="201:36"><name pos:start="201:35" pos:end="201:36">dc</name></expr></argument>, <argument pos:start="201:39" pos:end="201:49"><expr pos:start="201:39" pos:end="201:49"><name pos:start="201:39" pos:end="201:49">env_btarget</name></expr></argument>, <argument pos:start="201:52" pos:end="201:71"><expr pos:start="201:52" pos:end="201:71"><call pos:start="201:52" pos:end="201:71"><name pos:start="201:52" pos:end="201:63">tcg_const_tl</name><argument_list pos:start="201:64" pos:end="201:71">(<argument pos:start="201:65" pos:end="201:70"><expr pos:start="201:65" pos:end="201:70"><name pos:start="201:65" pos:end="201:70"><name pos:start="201:65" pos:end="201:66">dc</name><operator pos:start="201:67" pos:end="201:68">-&gt;</operator><name pos:start="201:69" pos:end="201:70">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:44"><expr pos:start="203:21" pos:end="203:43"><name pos:start="203:21" pos:end="203:30"><name pos:start="203:21" pos:end="203:22">dc</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:30">is_jmp</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <name pos:start="203:34" pos:end="203:43">DISAS_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="205:19" pos:end="213:17">else if <condition pos:start="205:27" pos:end="205:49">(<expr pos:start="205:28" pos:end="205:48"><name pos:start="205:28" pos:end="205:34"><name pos:start="205:28" pos:end="205:29">dc</name><operator pos:start="205:30" pos:end="205:31">-&gt;</operator><name pos:start="205:32" pos:end="205:34">jmp</name></name> <operator pos:start="205:36" pos:end="205:37">==</operator> <name pos:start="205:39" pos:end="205:48">JMP_DIRECT</name></expr>)</condition> <block pos:start="205:51" pos:end="213:17">{<block_content pos:start="207:21" pos:end="211:47">

                    <expr_stmt pos:start="207:21" pos:end="207:37"><expr pos:start="207:21" pos:end="207:36"><call pos:start="207:21" pos:end="207:36"><name pos:start="207:21" pos:end="207:32">t_sync_flags</name><argument_list pos:start="207:33" pos:end="207:36">(<argument pos:start="207:34" pos:end="207:35"><expr pos:start="207:34" pos:end="207:35"><name pos:start="207:34" pos:end="207:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:51"><expr pos:start="209:21" pos:end="209:50"><call pos:start="209:21" pos:end="209:50"><name pos:start="209:21" pos:end="209:31">gen_goto_tb</name><argument_list pos:start="209:32" pos:end="209:50">(<argument pos:start="209:33" pos:end="209:34"><expr pos:start="209:33" pos:end="209:34"><name pos:start="209:33" pos:end="209:34">dc</name></expr></argument>, <argument pos:start="209:37" pos:end="209:37"><expr pos:start="209:37" pos:end="209:37"><literal type="number" pos:start="209:37" pos:end="209:37">0</literal></expr></argument>, <argument pos:start="209:40" pos:end="209:49"><expr pos:start="209:40" pos:end="209:49"><name pos:start="209:40" pos:end="209:49"><name pos:start="209:40" pos:end="209:41">dc</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:47"><expr pos:start="211:21" pos:end="211:46"><name pos:start="211:21" pos:end="211:30"><name pos:start="211:21" pos:end="211:22">dc</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:30">is_jmp</name></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="213:19" pos:end="237:17">else if <condition pos:start="213:27" pos:end="213:52">(<expr pos:start="213:28" pos:end="213:51"><name pos:start="213:28" pos:end="213:34"><name pos:start="213:28" pos:end="213:29">dc</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:34">jmp</name></name> <operator pos:start="213:36" pos:end="213:37">==</operator> <name pos:start="213:39" pos:end="213:51">JMP_DIRECT_CC</name></expr>)</condition> <block pos:start="213:54" pos:end="237:17">{<block_content pos:start="215:21" pos:end="235:47">

                    <decl_stmt pos:start="215:21" pos:end="215:27"><decl pos:start="215:21" pos:end="215:26"><type pos:start="215:21" pos:end="215:23"><name pos:start="215:21" pos:end="215:23">int</name></type> <name pos:start="215:25" pos:end="215:26">l1</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="219:21" pos:end="219:37"><expr pos:start="219:21" pos:end="219:36"><call pos:start="219:21" pos:end="219:36"><name pos:start="219:21" pos:end="219:32">t_sync_flags</name><argument_list pos:start="219:33" pos:end="219:36">(<argument pos:start="219:34" pos:end="219:35"><expr pos:start="219:34" pos:end="219:35"><name pos:start="219:34" pos:end="219:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:41"><expr pos:start="221:21" pos:end="221:40"><name pos:start="221:21" pos:end="221:22">l1</name> <operator pos:start="221:24" pos:end="221:24">=</operator> <call pos:start="221:26" pos:end="221:40"><name pos:start="221:26" pos:end="221:38">gen_new_label</name><argument_list pos:start="221:39" pos:end="221:40">()</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="223:21" pos:end="223:43">/* Conditional jmp.  */</comment>

                    <expr_stmt pos:start="225:21" pos:end="225:71"><expr pos:start="225:21" pos:end="225:70"><call pos:start="225:21" pos:end="225:70"><name pos:start="225:21" pos:end="225:38">tcg_gen_brcondi_tl</name><argument_list pos:start="225:39" pos:end="225:70">(<argument pos:start="225:40" pos:end="225:50"><expr pos:start="225:40" pos:end="225:50"><name pos:start="225:40" pos:end="225:50">TCG_COND_NE</name></expr></argument>, <argument pos:start="225:53" pos:end="225:62"><expr pos:start="225:53" pos:end="225:62"><name pos:start="225:53" pos:end="225:62">env_btaken</name></expr></argument>, <argument pos:start="225:65" pos:end="225:65"><expr pos:start="225:65" pos:end="225:65"><literal type="number" pos:start="225:65" pos:end="225:65">0</literal></expr></argument>, <argument pos:start="225:68" pos:end="225:69"><expr pos:start="225:68" pos:end="225:69"><name pos:start="225:68" pos:end="225:69">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:47"><expr pos:start="227:21" pos:end="227:46"><call pos:start="227:21" pos:end="227:46"><name pos:start="227:21" pos:end="227:31">gen_goto_tb</name><argument_list pos:start="227:32" pos:end="227:46">(<argument pos:start="227:33" pos:end="227:34"><expr pos:start="227:33" pos:end="227:34"><name pos:start="227:33" pos:end="227:34">dc</name></expr></argument>, <argument pos:start="227:37" pos:end="227:37"><expr pos:start="227:37" pos:end="227:37"><literal type="number" pos:start="227:37" pos:end="227:37">1</literal></expr></argument>, <argument pos:start="227:40" pos:end="227:45"><expr pos:start="227:40" pos:end="227:45"><name pos:start="227:40" pos:end="227:45"><name pos:start="227:40" pos:end="227:41">dc</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:45">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:38"><expr pos:start="229:21" pos:end="229:37"><call pos:start="229:21" pos:end="229:37"><name pos:start="229:21" pos:end="229:33">gen_set_label</name><argument_list pos:start="229:34" pos:end="229:37">(<argument pos:start="229:35" pos:end="229:36"><expr pos:start="229:35" pos:end="229:36"><name pos:start="229:35" pos:end="229:36">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:51"><expr pos:start="231:21" pos:end="231:50"><call pos:start="231:21" pos:end="231:50"><name pos:start="231:21" pos:end="231:31">gen_goto_tb</name><argument_list pos:start="231:32" pos:end="231:50">(<argument pos:start="231:33" pos:end="231:34"><expr pos:start="231:33" pos:end="231:34"><name pos:start="231:33" pos:end="231:34">dc</name></expr></argument>, <argument pos:start="231:37" pos:end="231:37"><expr pos:start="231:37" pos:end="231:37"><literal type="number" pos:start="231:37" pos:end="231:37">0</literal></expr></argument>, <argument pos:start="231:40" pos:end="231:49"><expr pos:start="231:40" pos:end="231:49"><name pos:start="231:40" pos:end="231:49"><name pos:start="231:40" pos:end="231:41">dc</name><operator pos:start="231:42" pos:end="231:43">-&gt;</operator><name pos:start="231:44" pos:end="231:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="235:21" pos:end="235:47"><expr pos:start="235:21" pos:end="235:46"><name pos:start="235:21" pos:end="235:30"><name pos:start="235:21" pos:end="235:22">dc</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:30">is_jmp</name></name> <operator pos:start="235:32" pos:end="235:32">=</operator> <name pos:start="235:34" pos:end="235:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="239:17" pos:end="239:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="245:9" pos:end="247:18"><if pos:start="245:9" pos:end="247:18">if <condition pos:start="245:12" pos:end="245:36">(<expr pos:start="245:13" pos:end="245:35"><name pos:start="245:13" pos:end="245:35"><name pos:start="245:13" pos:end="245:15">env</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:35">singlestep_enabled</name></name></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:18"><block_content pos:start="247:13" pos:end="247:18">

            <break pos:start="247:13" pos:end="247:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="249:13" pos:end="257:42">(<expr pos:start="249:14" pos:end="257:41"><operator pos:start="249:14" pos:end="249:14">!</operator><name pos:start="249:15" pos:end="249:24"><name pos:start="249:15" pos:end="249:16">dc</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:24">is_jmp</name></name> <operator pos:start="249:26" pos:end="249:27">&amp;&amp;</operator> <operator pos:start="249:29" pos:end="249:29">!</operator><name pos:start="249:30" pos:end="249:49"><name pos:start="249:30" pos:end="249:31">dc</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:49">cpustate_changed</name></name>

         <operator pos:start="251:10" pos:end="251:11">&amp;&amp;</operator> <name pos:start="251:13" pos:end="251:31"><name pos:start="251:13" pos:end="251:19">tcg_ctx</name><operator pos:start="251:20" pos:end="251:20">.</operator><name pos:start="251:21" pos:end="251:31">gen_opc_ptr</name></name> <operator pos:start="251:33" pos:end="251:33">&lt;</operator> <name pos:start="251:35" pos:end="251:45">gen_opc_end</name>

                 <operator pos:start="253:18" pos:end="253:19">&amp;&amp;</operator> <operator pos:start="253:21" pos:end="253:21">!</operator><name pos:start="253:22" pos:end="253:31">singlestep</name>

         <operator pos:start="255:10" pos:end="255:11">&amp;&amp;</operator> <operator pos:start="255:13" pos:end="255:13">(</operator><name pos:start="255:14" pos:end="255:19"><name pos:start="255:14" pos:end="255:15">dc</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:19">pc</name></name> <operator pos:start="255:21" pos:end="255:21">&lt;</operator> <name pos:start="255:23" pos:end="255:37">next_page_start</name><operator pos:start="255:38" pos:end="255:38">)</operator>

                 <operator pos:start="257:18" pos:end="257:19">&amp;&amp;</operator> <name pos:start="257:21" pos:end="257:29">num_insns</name> <operator pos:start="257:31" pos:end="257:31">&lt;</operator> <name pos:start="257:33" pos:end="257:41">max_insns</name></expr>)</condition>;</do>



    <expr_stmt pos:start="261:5" pos:end="261:17"><expr pos:start="261:5" pos:end="261:16"><name pos:start="261:5" pos:end="261:7">npc</name> <operator pos:start="261:9" pos:end="261:9">=</operator> <name pos:start="261:11" pos:end="261:16"><name pos:start="261:11" pos:end="261:12">dc</name><operator pos:start="261:13" pos:end="261:14">-&gt;</operator><name pos:start="261:15" pos:end="261:16">pc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="263:5" pos:end="277:5"><if pos:start="263:5" pos:end="277:5">if <condition pos:start="263:8" pos:end="263:58">(<expr pos:start="263:9" pos:end="263:57"><name pos:start="263:9" pos:end="263:15"><name pos:start="263:9" pos:end="263:10">dc</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:15">jmp</name></name> <operator pos:start="263:17" pos:end="263:18">==</operator> <name pos:start="263:20" pos:end="263:29">JMP_DIRECT</name> <operator pos:start="263:31" pos:end="263:32">||</operator> <name pos:start="263:34" pos:end="263:40"><name pos:start="263:34" pos:end="263:35">dc</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:40">jmp</name></name> <operator pos:start="263:42" pos:end="263:43">==</operator> <name pos:start="263:45" pos:end="263:57">JMP_DIRECT_CC</name></expr>)</condition> <block pos:start="263:60" pos:end="277:5">{<block_content pos:start="265:9" pos:end="275:29">

        <if_stmt pos:start="265:9" pos:end="275:29"><if pos:start="265:9" pos:end="273:9">if <condition pos:start="265:12" pos:end="265:34">(<expr pos:start="265:13" pos:end="265:33"><name pos:start="265:13" pos:end="265:24"><name pos:start="265:13" pos:end="265:14">dc</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:24">tb_flags</name></name> <operator pos:start="265:26" pos:end="265:26">&amp;</operator> <name pos:start="265:28" pos:end="265:33">D_FLAG</name></expr>)</condition> <block pos:start="265:36" pos:end="273:9">{<block_content pos:start="267:13" pos:end="271:30">

            <expr_stmt pos:start="267:13" pos:end="267:38"><expr pos:start="267:13" pos:end="267:37"><name pos:start="267:13" pos:end="267:22"><name pos:start="267:13" pos:end="267:14">dc</name><operator pos:start="267:15" pos:end="267:16">-&gt;</operator><name pos:start="267:17" pos:end="267:22">is_jmp</name></name> <operator pos:start="267:24" pos:end="267:24">=</operator> <name pos:start="267:26" pos:end="267:37">DISAS_UPDATE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:48"><expr pos:start="269:13" pos:end="269:47"><call pos:start="269:13" pos:end="269:47"><name pos:start="269:13" pos:end="269:27">tcg_gen_movi_tl</name><argument_list pos:start="269:28" pos:end="269:47">(<argument pos:start="269:29" pos:end="269:41"><expr pos:start="269:29" pos:end="269:41"><name pos:start="269:29" pos:end="269:41"><name pos:start="269:29" pos:end="269:34">cpu_SR</name><index pos:start="269:35" pos:end="269:41">[<expr pos:start="269:36" pos:end="269:40"><name pos:start="269:36" pos:end="269:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="269:44" pos:end="269:46"><expr pos:start="269:44" pos:end="269:46"><name pos:start="269:44" pos:end="269:46">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:30"><expr pos:start="271:13" pos:end="271:29"><call pos:start="271:13" pos:end="271:29"><name pos:start="271:13" pos:end="271:25">sync_jmpstate</name><argument_list pos:start="271:26" pos:end="271:29">(<argument pos:start="271:27" pos:end="271:28"><expr pos:start="271:27" pos:end="271:28"><name pos:start="271:27" pos:end="271:28">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="273:11" pos:end="275:29">else<block type="pseudo" pos:start="275:13" pos:end="275:29"><block_content pos:start="275:13" pos:end="275:29">

            <expr_stmt pos:start="275:13" pos:end="275:29"><expr pos:start="275:13" pos:end="275:28"><name pos:start="275:13" pos:end="275:15">npc</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <name pos:start="275:19" pos:end="275:28"><name pos:start="275:19" pos:end="275:20">dc</name><operator pos:start="275:21" pos:end="275:22">-&gt;</operator><name pos:start="275:23" pos:end="275:28">jmp_pc</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="283:21"><if pos:start="281:5" pos:end="283:21">if <condition pos:start="281:8" pos:end="281:32">(<expr pos:start="281:9" pos:end="281:31"><name pos:start="281:9" pos:end="281:18"><name pos:start="281:9" pos:end="281:10">tb</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:18">cflags</name></name> <operator pos:start="281:20" pos:end="281:20">&amp;</operator> <name pos:start="281:22" pos:end="281:31">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:21"><block_content pos:start="283:9" pos:end="283:21">

        <expr_stmt pos:start="283:9" pos:end="283:21"><expr pos:start="283:9" pos:end="283:20"><call pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:18">gen_io_end</name><argument_list pos:start="283:19" pos:end="283:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="285:5" pos:end="285:63">/* Force an update if the per-tb cpu state has changed.  */</comment>

    <if_stmt pos:start="287:5" pos:end="295:5"><if pos:start="287:5" pos:end="295:5">if <condition pos:start="287:8" pos:end="289:63">(<expr pos:start="287:9" pos:end="289:62"><name pos:start="287:9" pos:end="287:18"><name pos:start="287:9" pos:end="287:10">dc</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:18">is_jmp</name></name> <operator pos:start="287:20" pos:end="287:21">==</operator> <name pos:start="287:23" pos:end="287:32">DISAS_NEXT</name>

        <operator pos:start="289:9" pos:end="289:10">&amp;&amp;</operator> <operator pos:start="289:12" pos:end="289:12">(</operator><name pos:start="289:13" pos:end="289:32"><name pos:start="289:13" pos:end="289:14">dc</name><operator pos:start="289:15" pos:end="289:16">-&gt;</operator><name pos:start="289:17" pos:end="289:32">cpustate_changed</name></name> <operator pos:start="289:34" pos:end="289:35">||</operator> <name pos:start="289:37" pos:end="289:45">org_flags</name> <operator pos:start="289:47" pos:end="289:48">!=</operator> <name pos:start="289:50" pos:end="289:61"><name pos:start="289:50" pos:end="289:51">dc</name><operator pos:start="289:52" pos:end="289:53">-&gt;</operator><name pos:start="289:54" pos:end="289:61">tb_flags</name></name><operator pos:start="289:62" pos:end="289:62">)</operator></expr>)</condition> <block pos:start="289:65" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:44">

        <expr_stmt pos:start="291:9" pos:end="291:34"><expr pos:start="291:9" pos:end="291:33"><name pos:start="291:9" pos:end="291:18"><name pos:start="291:9" pos:end="291:10">dc</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:18">is_jmp</name></name> <operator pos:start="291:20" pos:end="291:20">=</operator> <name pos:start="291:22" pos:end="291:33">DISAS_UPDATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:44"><expr pos:start="293:9" pos:end="293:43"><call pos:start="293:9" pos:end="293:43"><name pos:start="293:9" pos:end="293:23">tcg_gen_movi_tl</name><argument_list pos:start="293:24" pos:end="293:43">(<argument pos:start="293:25" pos:end="293:37"><expr pos:start="293:25" pos:end="293:37"><name pos:start="293:25" pos:end="293:37"><name pos:start="293:25" pos:end="293:30">cpu_SR</name><index pos:start="293:31" pos:end="293:37">[<expr pos:start="293:32" pos:end="293:36"><name pos:start="293:32" pos:end="293:36">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="293:40" pos:end="293:42"><expr pos:start="293:40" pos:end="293:42"><name pos:start="293:40" pos:end="293:42">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:21"><expr pos:start="297:5" pos:end="297:20"><call pos:start="297:5" pos:end="297:20"><name pos:start="297:5" pos:end="297:16">t_sync_flags</name><argument_list pos:start="297:17" pos:end="297:20">(<argument pos:start="297:18" pos:end="297:19"><expr pos:start="297:18" pos:end="297:19"><name pos:start="297:18" pos:end="297:19">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="301:5" pos:end="349:5"><if pos:start="301:5" pos:end="317:5">if <condition pos:start="301:8" pos:end="301:42">(<expr pos:start="301:9" pos:end="301:41"><call pos:start="301:9" pos:end="301:41"><name pos:start="301:9" pos:end="301:16">unlikely</name><argument_list pos:start="301:17" pos:end="301:41">(<argument pos:start="301:18" pos:end="301:40"><expr pos:start="301:18" pos:end="301:40"><name pos:start="301:18" pos:end="301:40"><name pos:start="301:18" pos:end="301:20">env</name><operator pos:start="301:21" pos:end="301:22">-&gt;</operator><name pos:start="301:23" pos:end="301:40">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="301:44" pos:end="317:5">{<block_content pos:start="303:9" pos:end="315:31">

        <decl_stmt pos:start="303:9" pos:end="303:49"><decl pos:start="303:9" pos:end="303:48"><type pos:start="303:9" pos:end="303:16"><name pos:start="303:9" pos:end="303:16">TCGv_i32</name></type> <name pos:start="303:18" pos:end="303:20">tmp</name> <init pos:start="303:22" pos:end="303:48">= <expr pos:start="303:24" pos:end="303:48"><call pos:start="303:24" pos:end="303:48"><name pos:start="303:24" pos:end="303:36">tcg_const_i32</name><argument_list pos:start="303:37" pos:end="303:48">(<argument pos:start="303:38" pos:end="303:47"><expr pos:start="303:38" pos:end="303:47"><name pos:start="303:38" pos:end="303:47">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="307:9" pos:end="311:9"><if pos:start="307:9" pos:end="311:9">if <condition pos:start="307:12" pos:end="307:37">(<expr pos:start="307:13" pos:end="307:36"><name pos:start="307:13" pos:end="307:22"><name pos:start="307:13" pos:end="307:14">dc</name><operator pos:start="307:15" pos:end="307:16">-&gt;</operator><name pos:start="307:17" pos:end="307:22">is_jmp</name></name> <operator pos:start="307:24" pos:end="307:25">!=</operator> <name pos:start="307:27" pos:end="307:36">DISAS_JUMP</name></expr>)</condition> <block pos:start="307:39" pos:end="311:9">{<block_content pos:start="309:13" pos:end="309:48">

            <expr_stmt pos:start="309:13" pos:end="309:48"><expr pos:start="309:13" pos:end="309:47"><call pos:start="309:13" pos:end="309:47"><name pos:start="309:13" pos:end="309:27">tcg_gen_movi_tl</name><argument_list pos:start="309:28" pos:end="309:47">(<argument pos:start="309:29" pos:end="309:41"><expr pos:start="309:29" pos:end="309:41"><name pos:start="309:29" pos:end="309:41"><name pos:start="309:29" pos:end="309:34">cpu_SR</name><index pos:start="309:35" pos:end="309:41">[<expr pos:start="309:36" pos:end="309:40"><name pos:start="309:36" pos:end="309:40">SR_PC</name></expr>]</index></name></expr></argument>, <argument pos:start="309:44" pos:end="309:46"><expr pos:start="309:44" pos:end="309:46"><name pos:start="309:44" pos:end="309:46">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:49"><expr pos:start="313:9" pos:end="313:48"><call pos:start="313:9" pos:end="313:48"><name pos:start="313:9" pos:end="313:34">gen_helper_raise_exception</name><argument_list pos:start="313:35" pos:end="313:48">(<argument pos:start="313:36" pos:end="313:42"><expr pos:start="313:36" pos:end="313:42"><name pos:start="313:36" pos:end="313:42">cpu_env</name></expr></argument>, <argument pos:start="313:45" pos:end="313:47"><expr pos:start="313:45" pos:end="313:47"><name pos:start="313:45" pos:end="313:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:31"><expr pos:start="315:9" pos:end="315:30"><call pos:start="315:9" pos:end="315:30"><name pos:start="315:9" pos:end="315:25">tcg_temp_free_i32</name><argument_list pos:start="315:26" pos:end="315:30">(<argument pos:start="315:27" pos:end="315:29"><expr pos:start="315:27" pos:end="315:29"><name pos:start="315:27" pos:end="315:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="317:7" pos:end="349:5">else <block pos:start="317:12" pos:end="349:5">{<block_content pos:start="319:9" pos:end="347:9">

        <switch pos:start="319:9" pos:end="347:9">switch<condition pos:start="319:15" pos:end="319:26">(<expr pos:start="319:16" pos:end="319:25"><name pos:start="319:16" pos:end="319:25"><name pos:start="319:16" pos:end="319:17">dc</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:25">is_jmp</name></name></expr>)</condition> <block pos:start="319:28" pos:end="347:9">{<block_content pos:start="321:13" pos:end="345:22">

            <case pos:start="321:13" pos:end="321:28">case <expr pos:start="321:18" pos:end="321:27"><name pos:start="321:18" pos:end="321:27">DISAS_NEXT</name></expr>:</case>

                <expr_stmt pos:start="323:17" pos:end="323:40"><expr pos:start="323:17" pos:end="323:39"><call pos:start="323:17" pos:end="323:39"><name pos:start="323:17" pos:end="323:27">gen_goto_tb</name><argument_list pos:start="323:28" pos:end="323:39">(<argument pos:start="323:29" pos:end="323:30"><expr pos:start="323:29" pos:end="323:30"><name pos:start="323:29" pos:end="323:30">dc</name></expr></argument>, <argument pos:start="323:33" pos:end="323:33"><expr pos:start="323:33" pos:end="323:33"><literal type="number" pos:start="323:33" pos:end="323:33">1</literal></expr></argument>, <argument pos:start="323:36" pos:end="323:38"><expr pos:start="323:36" pos:end="323:38"><name pos:start="323:36" pos:end="323:38">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="325:17" pos:end="325:22">break;</break>

            <default pos:start="327:13" pos:end="327:20">default:</default>

            <case pos:start="329:13" pos:end="329:28">case <expr pos:start="329:18" pos:end="329:27"><name pos:start="329:18" pos:end="329:27">DISAS_JUMP</name></expr>:</case>

            <case pos:start="331:13" pos:end="331:30">case <expr pos:start="331:18" pos:end="331:29"><name pos:start="331:18" pos:end="331:29">DISAS_UPDATE</name></expr>:</case>

                <comment type="block" pos:start="333:17" pos:end="335:41">/* indicate that the hash table must be used

                   to find the next TB */</comment>

                <expr_stmt pos:start="337:17" pos:end="337:35"><expr pos:start="337:17" pos:end="337:34"><call pos:start="337:17" pos:end="337:34"><name pos:start="337:17" pos:end="337:31">tcg_gen_exit_tb</name><argument_list pos:start="337:32" pos:end="337:34">(<argument pos:start="337:33" pos:end="337:33"><expr pos:start="337:33" pos:end="337:33"><literal type="number" pos:start="337:33" pos:end="337:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="339:17" pos:end="339:22">break;</break>

            <case pos:start="341:13" pos:end="341:31">case <expr pos:start="341:18" pos:end="341:30"><name pos:start="341:18" pos:end="341:30">DISAS_TB_JUMP</name></expr>:</case>

                <comment type="block" pos:start="343:17" pos:end="343:46">/* nothing more to generate */</comment>

                <break pos:start="345:17" pos:end="345:22">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:34"><expr pos:start="351:5" pos:end="351:33"><call pos:start="351:5" pos:end="351:33"><name pos:start="351:5" pos:end="351:18">gen_icount_end</name><argument_list pos:start="351:19" pos:end="351:33">(<argument pos:start="351:20" pos:end="351:21"><expr pos:start="351:20" pos:end="351:21"><name pos:start="351:20" pos:end="351:21">tb</name></expr></argument>, <argument pos:start="351:24" pos:end="351:32"><expr pos:start="351:24" pos:end="351:32"><name pos:start="351:24" pos:end="351:32">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:40"><expr pos:start="353:5" pos:end="353:39"><operator pos:start="353:5" pos:end="353:5">*</operator><name pos:start="353:6" pos:end="353:24"><name pos:start="353:6" pos:end="353:12">tcg_ctx</name><operator pos:start="353:13" pos:end="353:13">.</operator><name pos:start="353:14" pos:end="353:24">gen_opc_ptr</name></name> <operator pos:start="353:26" pos:end="353:26">=</operator> <name pos:start="353:28" pos:end="353:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="355:5" pos:end="378:0"><if pos:start="355:5" pos:end="365:5">if <condition pos:start="355:8" pos:end="355:18">(<expr pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:17">search_pc</name></expr>)</condition> <block pos:start="355:20" pos:end="365:5">{<block_content pos:start="357:9" pos:end="363:50">

        <expr_stmt pos:start="357:9" pos:end="357:54"><expr pos:start="357:9" pos:end="357:53"><name pos:start="357:9" pos:end="357:9">j</name> <operator pos:start="357:11" pos:end="357:11">=</operator> <name pos:start="357:13" pos:end="357:31"><name pos:start="357:13" pos:end="357:19">tcg_ctx</name><operator pos:start="357:20" pos:end="357:20">.</operator><name pos:start="357:21" pos:end="357:31">gen_opc_ptr</name></name> <operator pos:start="357:33" pos:end="357:33">-</operator> <name pos:start="357:35" pos:end="357:53"><name pos:start="357:35" pos:end="357:41">tcg_ctx</name><operator pos:start="357:42" pos:end="357:42">.</operator><name pos:start="357:43" pos:end="357:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:13"><expr pos:start="359:9" pos:end="359:12"><name pos:start="359:9" pos:end="359:10">lj</name><operator pos:start="359:11" pos:end="359:12">++</operator></expr>;</expr_stmt>

        <while pos:start="361:9" pos:end="363:50">while <condition pos:start="361:15" pos:end="361:23">(<expr pos:start="361:16" pos:end="361:22"><name pos:start="361:16" pos:end="361:17">lj</name> <operator pos:start="361:19" pos:end="361:20">&lt;=</operator> <name pos:start="361:22" pos:end="361:22">j</name></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:50"><block_content pos:start="363:13" pos:end="363:50">

            <expr_stmt pos:start="363:13" pos:end="363:50"><expr pos:start="363:13" pos:end="363:49"><name pos:start="363:13" pos:end="363:45"><name pos:start="363:13" pos:end="363:19">tcg_ctx</name><operator pos:start="363:20" pos:end="363:20">.</operator><name pos:start="363:21" pos:end="363:39">gen_opc_instr_start</name><index pos:start="363:40" pos:end="363:45">[<expr pos:start="363:41" pos:end="363:44"><name pos:start="363:41" pos:end="363:42">lj</name><operator pos:start="363:43" pos:end="363:44">++</operator></expr>]</index></name> <operator pos:start="363:47" pos:end="363:47">=</operator> <literal type="number" pos:start="363:49" pos:end="363:49">0</literal></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></if> <else pos:start="365:7" pos:end="378:0">else <block pos:start="365:12" pos:end="378:0">{<block_content pos:start="367:9" pos:end="369:39">

        <expr_stmt pos:start="367:9" pos:end="367:37"><expr pos:start="367:9" pos:end="367:36"><name pos:start="367:9" pos:end="367:16"><name pos:start="367:9" pos:end="367:10">tb</name><operator pos:start="367:11" pos:end="367:12">-&gt;</operator><name pos:start="367:13" pos:end="367:16">size</name></name> <operator pos:start="367:18" pos:end="367:18">=</operator> <name pos:start="367:20" pos:end="367:25"><name pos:start="367:20" pos:end="367:21">dc</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:25">pc</name></name> <operator pos:start="367:27" pos:end="367:27">-</operator> <name pos:start="367:29" pos:end="367:36">pc_start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:39"><expr pos:start="369:17" pos:end="369:38"><name pos:start="369:17" pos:end="369:26"><name pos:start="369:17" pos:end="369:18">tb</name><operator pos:start="369:19" pos:end="369:20">-&gt;</operator><name pos:start="369:21" pos:end="369:26">icount</name></name> <operator pos:start="369:28" pos:end="369:28">=</operator> <name pos:start="369:30" pos:end="369:38">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="375:1" pos:end="375:18">#<cpp:directive pos:start="375:2" pos:end="375:6">ifdef</cpp:directive> <name pos:start="375:8" pos:end="375:18">DEBUG_DISAS</name></cpp:ifdef>

<cpp:if pos:start="377:1" pos:end="377:15">#<cpp:directive pos:start="377:2" pos:end="377:3">if</cpp:directive> <expr pos:start="377:5" pos:end="377:15"><operator pos:start="377:5" pos:end="377:5">!</operator><name pos:start="377:6" pos:end="377:15">SIM_COMPAT</name></expr></cpp:if>

    <if_stmt pos:start="379:5" pos:end="400:0"><if pos:start="379:5" pos:end="400:0">if <condition pos:start="379:8" pos:end="379:46">(<expr pos:start="379:9" pos:end="379:45"><call pos:start="379:9" pos:end="379:45"><name pos:start="379:9" pos:end="379:26">qemu_loglevel_mask</name><argument_list pos:start="379:27" pos:end="379:45">(<argument pos:start="379:28" pos:end="379:44"><expr pos:start="379:28" pos:end="379:44"><name pos:start="379:28" pos:end="379:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="379:48" pos:end="400:0">{<block_content pos:start="381:9" pos:end="393:33">

        <expr_stmt pos:start="381:9" pos:end="384:0"><expr pos:start="381:9" pos:end="381:22"><call pos:start="381:9" pos:end="381:22"><name pos:start="381:9" pos:end="381:16">qemu_log</name><argument_list pos:start="381:17" pos:end="381:22">(<argument pos:start="381:18" pos:end="381:21"><expr pos:start="381:18" pos:end="381:21"><literal type="string" pos:start="381:18" pos:end="381:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="383:1" pos:end="383:13">#<cpp:directive pos:start="383:2" pos:end="383:3">if</cpp:directive> <expr pos:start="383:5" pos:end="383:13"><name pos:start="383:5" pos:end="383:13">DISAS_GNU</name></expr></cpp:if>

        <expr_stmt pos:start="385:9" pos:end="388:0"><expr pos:start="385:9" pos:end="385:61"><call pos:start="385:9" pos:end="385:61"><name pos:start="385:9" pos:end="385:24">log_target_disas</name><argument_list pos:start="385:25" pos:end="385:61">(<argument pos:start="385:26" pos:end="385:28"><expr pos:start="385:26" pos:end="385:28"><name pos:start="385:26" pos:end="385:28">env</name></expr></argument>, <argument pos:start="385:31" pos:end="385:38"><expr pos:start="385:31" pos:end="385:38"><name pos:start="385:31" pos:end="385:38">pc_start</name></expr></argument>, <argument pos:start="385:41" pos:end="385:57"><expr pos:start="385:41" pos:end="385:57"><name pos:start="385:41" pos:end="385:46"><name pos:start="385:41" pos:end="385:42">dc</name><operator pos:start="385:43" pos:end="385:44">-&gt;</operator><name pos:start="385:45" pos:end="385:46">pc</name></name> <operator pos:start="385:48" pos:end="385:48">-</operator> <name pos:start="385:50" pos:end="385:57">pc_start</name></expr></argument>, <argument pos:start="385:60" pos:end="385:60"><expr pos:start="385:60" pos:end="385:60"><literal type="number" pos:start="385:60" pos:end="385:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="387:1" pos:end="387:6">#<cpp:directive pos:start="387:2" pos:end="387:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="389:9" pos:end="393:33"><expr pos:start="389:9" pos:end="393:32"><call pos:start="389:9" pos:end="393:32"><name pos:start="389:9" pos:end="389:16">qemu_log</name><argument_list pos:start="389:17" pos:end="393:32">(<argument pos:start="389:18" pos:end="389:41"><expr pos:start="389:18" pos:end="389:41"><literal type="string" pos:start="389:18" pos:end="389:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="391:13" pos:end="391:29"><expr pos:start="391:13" pos:end="391:29"><name pos:start="391:13" pos:end="391:18"><name pos:start="391:13" pos:end="391:14">dc</name><operator pos:start="391:15" pos:end="391:16">-&gt;</operator><name pos:start="391:17" pos:end="391:18">pc</name></name> <operator pos:start="391:20" pos:end="391:20">-</operator> <name pos:start="391:22" pos:end="391:29">pc_start</name></expr></argument>, <argument pos:start="391:32" pos:end="393:31"><expr pos:start="391:32" pos:end="393:31"><name pos:start="391:32" pos:end="391:50"><name pos:start="391:32" pos:end="391:38">tcg_ctx</name><operator pos:start="391:39" pos:end="391:39">.</operator><name pos:start="391:40" pos:end="391:50">gen_opc_ptr</name></name> <operator pos:start="391:52" pos:end="391:52">-</operator>

            <name pos:start="393:13" pos:end="393:31"><name pos:start="393:13" pos:end="393:19">tcg_ctx</name><operator pos:start="393:20" pos:end="393:20">.</operator><name pos:start="393:21" pos:end="393:31">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="397:1" pos:end="397:6">#<cpp:directive pos:start="397:2" pos:end="397:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="399:1" pos:end="399:6">#<cpp:directive pos:start="399:2" pos:end="399:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="401:5" pos:end="401:36"><expr pos:start="401:5" pos:end="401:35"><call pos:start="401:5" pos:end="401:35"><name pos:start="401:5" pos:end="401:10">assert</name><argument_list pos:start="401:11" pos:end="401:35">(<argument pos:start="401:12" pos:end="401:34"><expr pos:start="401:12" pos:end="401:34"><operator pos:start="401:12" pos:end="401:12">!</operator><name pos:start="401:13" pos:end="401:34"><name pos:start="401:13" pos:end="401:14">dc</name><operator pos:start="401:15" pos:end="401:16">-&gt;</operator><name pos:start="401:17" pos:end="401:34">abort_at_next_insn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
