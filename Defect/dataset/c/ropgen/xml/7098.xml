<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7098.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">setup_sigframe_v2</name><parameter_list pos:start="1:30" pos:end="3:66">(<parameter pos:start="1:31" pos:end="1:59"><decl pos:start="1:31" pos:end="1:59"><type pos:start="1:31" pos:end="1:59"><name pos:start="1:31" pos:end="1:55"><name pos:start="1:31" pos:end="1:36">struct</name> <name pos:start="1:38" pos:end="1:55">target_ucontext_v2</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">uc</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><name pos:start="3:31" pos:end="3:45">target_sigset_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">set</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:60">CPUState</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">target_sigaltstack</name></name></type> <name pos:start="7:31" pos:end="7:35">stack</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:59">/* Clear all the bits of the ucontext we don't use.  */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><call pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:68">(<argument pos:start="15:12" pos:end="15:13"><expr pos:start="15:12" pos:end="15:13"><name pos:start="15:12" pos:end="15:13">uc</name></expr></argument>, <argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr></argument>, <argument pos:start="15:19" pos:end="15:67"><expr pos:start="15:19" pos:end="15:67"><call pos:start="15:19" pos:end="15:67"><name pos:start="15:19" pos:end="15:26">offsetof</name><argument_list pos:start="15:27" pos:end="15:67">(<argument pos:start="15:28" pos:end="15:52"><expr pos:start="15:28" pos:end="15:52">struct <name pos:start="15:35" pos:end="15:52">target_ucontext_v2</name></expr></argument>, <argument pos:start="15:55" pos:end="15:66"><expr pos:start="15:55" pos:end="15:66"><name pos:start="15:55" pos:end="15:66">tuc_mcontext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:36">(<argument pos:start="19:12" pos:end="19:17"><expr pos:start="19:12" pos:end="19:17"><operator pos:start="19:12" pos:end="19:12">&amp;</operator><name pos:start="19:13" pos:end="19:17">stack</name></expr></argument>, <argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></argument>, <argument pos:start="19:23" pos:end="19:35"><expr pos:start="19:23" pos:end="19:35"><sizeof pos:start="19:23" pos:end="19:35">sizeof<argument_list pos:start="19:29" pos:end="19:35">(<argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:14">__put_user</name><argument_list pos:start="21:15" pos:end="21:59">(<argument pos:start="21:16" pos:end="21:44"><expr pos:start="21:16" pos:end="21:44"><name pos:start="21:16" pos:end="21:44"><name pos:start="21:16" pos:end="21:38">target_sigaltstack_used</name><operator pos:start="21:39" pos:end="21:39">.</operator><name pos:start="21:40" pos:end="21:44">ss_sp</name></name></expr></argument>, <argument pos:start="21:47" pos:end="21:58"><expr pos:start="21:47" pos:end="21:58"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:58"><name pos:start="21:48" pos:end="21:52">stack</name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:58">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:64"><expr pos:start="23:5" pos:end="23:63"><call pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:14">__put_user</name><argument_list pos:start="23:15" pos:end="23:63">(<argument pos:start="23:16" pos:end="23:46"><expr pos:start="23:16" pos:end="23:46"><name pos:start="23:16" pos:end="23:46"><name pos:start="23:16" pos:end="23:38">target_sigaltstack_used</name><operator pos:start="23:39" pos:end="23:39">.</operator><name pos:start="23:40" pos:end="23:46">ss_size</name></name></expr></argument>, <argument pos:start="23:49" pos:end="23:62"><expr pos:start="23:49" pos:end="23:62"><operator pos:start="23:49" pos:end="23:49">&amp;</operator><name pos:start="23:50" pos:end="23:62"><name pos:start="23:50" pos:end="23:54">stack</name><operator pos:start="23:55" pos:end="23:55">.</operator><name pos:start="23:56" pos:end="23:62">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:73"><expr pos:start="25:5" pos:end="25:72"><call pos:start="25:5" pos:end="25:72"><name pos:start="25:5" pos:end="25:14">__put_user</name><argument_list pos:start="25:15" pos:end="25:72">(<argument pos:start="25:16" pos:end="25:54"><expr pos:start="25:16" pos:end="25:54"><call pos:start="25:16" pos:end="25:54"><name pos:start="25:16" pos:end="25:27">sas_ss_flags</name><argument_list pos:start="25:28" pos:end="25:54">(<argument pos:start="25:29" pos:end="25:53"><expr pos:start="25:29" pos:end="25:53"><call pos:start="25:29" pos:end="25:53"><name pos:start="25:29" pos:end="25:48">get_sp_from_cpustate</name><argument_list pos:start="25:49" pos:end="25:53">(<argument pos:start="25:50" pos:end="25:52"><expr pos:start="25:50" pos:end="25:52"><name pos:start="25:50" pos:end="25:52">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:57" pos:end="25:71"><expr pos:start="25:57" pos:end="25:71"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:71"><name pos:start="25:58" pos:end="25:62">stack</name><operator pos:start="25:63" pos:end="25:63">.</operator><name pos:start="25:64" pos:end="25:71">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><call pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="27:49">(<argument pos:start="27:12" pos:end="27:25"><expr pos:start="27:12" pos:end="27:25"><operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:14">uc</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">tuc_stack</name></name></expr></argument>, <argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:33">stack</name></expr></argument>, <argument pos:start="27:36" pos:end="27:48"><expr pos:start="27:36" pos:end="27:48"><sizeof pos:start="27:36" pos:end="27:48">sizeof<argument_list pos:start="27:42" pos:end="27:48">(<argument pos:start="27:43" pos:end="27:47"><expr pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:47">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:20">setup_sigcontext</name><argument_list pos:start="31:21" pos:end="31:57">(<argument pos:start="31:22" pos:end="31:38"><expr pos:start="31:22" pos:end="31:38"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:24">uc</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:38">tuc_mcontext</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">env</name></expr></argument>, <argument pos:start="31:46" pos:end="31:56"><expr pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:48">set</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:53">sig</name><index pos:start="31:54" pos:end="31:56">[<expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:48">/* FIXME: Save coprocessor signal frame.  */</comment>

    <for pos:start="35:5" pos:end="39:5">for<control pos:start="35:8" pos:end="35:42">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:37"><expr pos:start="35:16" pos:end="35:36"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:39">i</name><operator pos:start="35:40" pos:end="35:41">++</operator></expr></incr>)</control> <block pos:start="35:44" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:57">

        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><call pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:18">__put_user</name><argument_list pos:start="37:19" pos:end="37:56">(<argument pos:start="37:20" pos:end="37:30"><expr pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:22">set</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">sig</name><index pos:start="37:28" pos:end="37:30">[<expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:33" pos:end="37:55"><expr pos:start="37:33" pos:end="37:55"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:55"><name pos:start="37:34" pos:end="37:35">uc</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:48">tuc_sigmask</name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:52">sig</name><index pos:start="37:53" pos:end="37:55">[<expr pos:start="37:54" pos:end="37:54"><name pos:start="37:54" pos:end="37:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
