<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10966.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:32">nvme_write_zeros</name><parameter_list pos:start="1:33" pos:end="3:21">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:41">NvmeCtrl</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">n</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:59">NvmeNamespace</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ns</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:72">NvmeCmd</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">cmd</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:20"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:15">NvmeRequest</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:20">req</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:28">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">NvmeRwCmd</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rw</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:30">NvmeRwCmd</name> <operator pos:start="7:32" pos:end="7:32">*</operator><operator pos:start="7:33" pos:end="7:33">)</operator><name pos:start="7:34" pos:end="7:36">cmd</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:70"><decl pos:start="9:5" pos:end="9:69"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name></type> <name pos:start="9:19" pos:end="9:27">lba_index</name> <init pos:start="9:29" pos:end="9:69">= <expr pos:start="9:31" pos:end="9:69"><call pos:start="9:31" pos:end="9:69"><name pos:start="9:31" pos:end="9:52">NVME_ID_NS_FLBAS_INDEX</name><argument_list pos:start="9:53" pos:end="9:69">(<argument pos:start="9:54" pos:end="9:68"><expr pos:start="9:54" pos:end="9:68"><name pos:start="9:54" pos:end="9:68"><name pos:start="9:54" pos:end="9:55">ns</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:62">id_ns</name><operator pos:start="9:63" pos:end="9:63">.</operator><name pos:start="9:64" pos:end="9:68">flbas</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name></type> <name pos:start="11:19" pos:end="11:28">data_shift</name> <init pos:start="11:30" pos:end="11:59">= <expr pos:start="11:32" pos:end="11:59"><name pos:start="11:32" pos:end="11:56"><name pos:start="11:32" pos:end="11:33">ns</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:40">id_ns</name><operator pos:start="11:41" pos:end="11:41">.</operator><name pos:start="11:42" pos:end="11:45">lbaf</name><index pos:start="11:46" pos:end="11:56">[<expr pos:start="11:47" pos:end="11:55"><name pos:start="11:47" pos:end="11:55">lba_index</name></expr>]</index></name><operator pos:start="11:57" pos:end="11:57">.</operator><name pos:start="11:58" pos:end="11:59">ds</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">slba</name> <init pos:start="13:19" pos:end="13:41">= <expr pos:start="13:21" pos:end="13:41"><call pos:start="13:21" pos:end="13:41"><name pos:start="13:21" pos:end="13:31">le64_to_cpu</name><argument_list pos:start="13:32" pos:end="13:41">(<argument pos:start="13:33" pos:end="13:40"><expr pos:start="13:33" pos:end="13:40"><name pos:start="13:33" pos:end="13:40"><name pos:start="13:33" pos:end="13:34">rw</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:40">slba</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">nlb</name>  <init pos:start="15:19" pos:end="15:44">= <expr pos:start="15:21" pos:end="15:44"><call pos:start="15:21" pos:end="15:40"><name pos:start="15:21" pos:end="15:31">le16_to_cpu</name><argument_list pos:start="15:32" pos:end="15:40">(<argument pos:start="15:33" pos:end="15:39"><expr pos:start="15:33" pos:end="15:39"><name pos:start="15:33" pos:end="15:39"><name pos:start="15:33" pos:end="15:34">rw</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">nlb</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:42" pos:end="15:42">+</operator> <literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:64"><decl pos:start="17:5" pos:end="17:63"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:21">aio_slba</name> <init pos:start="17:23" pos:end="17:63">= <expr pos:start="17:25" pos:end="17:63"><name pos:start="17:25" pos:end="17:28">slba</name> <operator pos:start="17:30" pos:end="17:31">&lt;&lt;</operator> <operator pos:start="17:33" pos:end="17:33">(</operator><name pos:start="17:34" pos:end="17:43">data_shift</name> <operator pos:start="17:45" pos:end="17:45">-</operator> <name pos:start="17:47" pos:end="17:62">BDRV_SECTOR_BITS</name><operator pos:start="17:63" pos:end="17:63">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:62"><decl pos:start="19:5" pos:end="19:61"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">aio_nlb</name> <init pos:start="19:22" pos:end="19:61">= <expr pos:start="19:24" pos:end="19:61"><name pos:start="19:24" pos:end="19:26">nlb</name> <operator pos:start="19:28" pos:end="19:29">&lt;&lt;</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:41">data_shift</name> <operator pos:start="19:43" pos:end="19:43">-</operator> <name pos:start="19:45" pos:end="19:60">BDRV_SECTOR_BITS</name><operator pos:start="19:61" pos:end="19:61">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:12">slba</name> <operator pos:start="23:14" pos:end="23:14">+</operator> <name pos:start="23:16" pos:end="23:18">nlb</name> <operator pos:start="23:20" pos:end="23:20">&gt;</operator> <name pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:23">ns</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:30">id_ns</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:35">nsze</name></name></expr>)</condition> <block pos:start="23:38" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:41">

        <return pos:start="25:9" pos:end="25:41">return <expr pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:29">NVME_LBA_RANGE</name> <operator pos:start="25:31" pos:end="25:31">|</operator> <name pos:start="25:33" pos:end="25:40">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:7">req</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:15">has_sg</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:23">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:39"><expr pos:start="33:5" pos:end="35:38"><call pos:start="33:5" pos:end="35:38"><name pos:start="33:5" pos:end="33:20">block_acct_start</name><argument_list pos:start="33:21" pos:end="35:38">(<argument pos:start="33:22" pos:end="33:47"><expr pos:start="33:22" pos:end="33:47"><call pos:start="33:22" pos:end="33:47"><name pos:start="33:22" pos:end="33:34">blk_get_stats</name><argument_list pos:start="33:35" pos:end="33:47">(<argument pos:start="33:36" pos:end="33:46"><expr pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:36">n</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:42">conf</name><operator pos:start="33:43" pos:end="33:43">.</operator><name pos:start="33:44" pos:end="33:46">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:50" pos:end="33:59"><expr pos:start="33:50" pos:end="33:59"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:59"><name pos:start="33:51" pos:end="33:53">req</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:59">acct</name></name></expr></argument>, <argument pos:start="33:62" pos:end="33:62"><expr pos:start="33:62" pos:end="33:62"><literal type="number" pos:start="33:62" pos:end="33:62">0</literal></expr></argument>,

                     <argument pos:start="35:22" pos:end="35:37"><expr pos:start="35:22" pos:end="35:37"><name pos:start="35:22" pos:end="35:37">BLOCK_ACCT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:77"><expr pos:start="37:5" pos:end="39:76"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">req</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:14">aiocb</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="39:76"><name pos:start="37:18" pos:end="37:38">blk_aio_pwrite_zeroes</name><argument_list pos:start="37:39" pos:end="39:76">(<argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:40">n</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:46">conf</name><operator pos:start="37:47" pos:end="37:47">.</operator><name pos:start="37:48" pos:end="37:50">blk</name></name></expr></argument>, <argument pos:start="37:53" pos:end="37:60"><expr pos:start="37:53" pos:end="37:60"><name pos:start="37:53" pos:end="37:60">aio_slba</name></expr></argument>, <argument pos:start="37:63" pos:end="37:69"><expr pos:start="37:63" pos:end="37:69"><name pos:start="37:63" pos:end="37:69">aio_nlb</name></expr></argument>,

                                        <argument pos:start="39:41" pos:end="39:58"><expr pos:start="39:41" pos:end="39:58"><name pos:start="39:41" pos:end="39:58">BDRV_REQ_MAY_UNMAP</name></expr></argument>, <argument pos:start="39:61" pos:end="39:70"><expr pos:start="39:61" pos:end="39:70"><name pos:start="39:61" pos:end="39:70">nvme_rw_cb</name></expr></argument>, <argument pos:start="39:73" pos:end="39:75"><expr pos:start="39:73" pos:end="39:75"><name pos:start="39:73" pos:end="39:75">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:28">return <expr pos:start="41:12" pos:end="41:27"><name pos:start="41:12" pos:end="41:27">NVME_NO_COMPLETE</name></expr>;</return>

</block_content>}</block></function>
</unit>
