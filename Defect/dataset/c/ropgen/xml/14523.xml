<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14523.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">writer_open</name><parameter_list pos:start="1:23" pos:end="3:71">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:36">WriterContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">wctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:57">Writer</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">writer</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:83"><decl pos:start="1:68" pos:end="1:83"><type pos:start="1:68" pos:end="1:83"><specifier pos:start="1:68" pos:end="1:72">const</specifier> <name pos:start="1:74" pos:end="1:77">char</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:83">args</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:53"><decl pos:start="3:24" pos:end="3:53"><type pos:start="3:24" pos:end="3:53"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:35">struct</name> <name pos:start="3:37" pos:end="3:43">section</name></name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:53">sections</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:70"><decl pos:start="3:56" pos:end="3:70"><type pos:start="3:56" pos:end="3:70"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:70">nb_sections</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:15">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:52">(<expr pos:start="11:9" pos:end="11:51"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><operator pos:start="11:11" pos:end="11:11">*</operator><name pos:start="11:12" pos:end="11:15">wctx</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:50"><name pos:start="11:19" pos:end="11:27">av_malloc</name><argument_list pos:start="11:28" pos:end="11:50">(<argument pos:start="11:29" pos:end="11:49"><expr pos:start="11:29" pos:end="11:49"><sizeof pos:start="11:29" pos:end="11:49">sizeof<argument_list pos:start="11:35" pos:end="11:49">(<argument pos:start="11:36" pos:end="11:48"><expr pos:start="11:36" pos:end="11:48"><name pos:start="11:36" pos:end="11:48">WriterContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="11:51" pos:end="11:51">)</operator></expr>)</condition> <block pos:start="11:54" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:21">AVERROR</name><argument_list pos:start="13:22" pos:end="13:29">(<argument pos:start="13:23" pos:end="13:28"><expr pos:start="13:23" pos:end="13:28"><name pos:start="13:23" pos:end="13:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="15:9" pos:end="15:18">goto <name pos:start="15:14" pos:end="15:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:57">(<expr pos:start="21:9" pos:end="21:56"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:23"><operator pos:start="21:11" pos:end="21:11">(</operator><operator pos:start="21:12" pos:end="21:12">*</operator><name pos:start="21:13" pos:end="21:16">wctx</name><operator pos:start="21:17" pos:end="21:17">)</operator><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">priv</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:55"><name pos:start="21:27" pos:end="21:36">av_mallocz</name><argument_list pos:start="21:37" pos:end="21:55">(<argument pos:start="21:38" pos:end="21:54"><expr pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:43">writer</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:54">priv_size</name></name></expr></argument>)</argument_list></call><operator pos:start="21:56" pos:end="21:56">)</operator></expr>)</condition> <block pos:start="21:59" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:21">AVERROR</name><argument_list pos:start="23:22" pos:end="23:29">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:18"><operator pos:start="31:5" pos:end="31:5">(</operator><operator pos:start="31:6" pos:end="31:6">*</operator><name pos:start="31:7" pos:end="31:10">wctx</name><operator pos:start="31:11" pos:end="31:11">)</operator><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:18">class</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:34">writer_class</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:19"><operator pos:start="33:5" pos:end="33:5">(</operator><operator pos:start="33:6" pos:end="33:6">*</operator><name pos:start="33:7" pos:end="33:10">wctx</name><operator pos:start="33:11" pos:end="33:11">)</operator><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:19">writer</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:28">writer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:18"><operator pos:start="35:5" pos:end="35:5">(</operator><operator pos:start="35:6" pos:end="35:6">*</operator><name pos:start="35:7" pos:end="35:10">wctx</name><operator pos:start="35:11" pos:end="35:11">)</operator><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:18">level</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">-</operator><literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:21"><operator pos:start="37:5" pos:end="37:5">(</operator><operator pos:start="37:6" pos:end="37:6">*</operator><name pos:start="37:7" pos:end="37:10">wctx</name><operator pos:start="37:11" pos:end="37:11">)</operator><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:21">sections</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:32">sections</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:24"><operator pos:start="39:5" pos:end="39:5">(</operator><operator pos:start="39:6" pos:end="39:6">*</operator><name pos:start="39:7" pos:end="39:10">wctx</name><operator pos:start="39:11" pos:end="39:11">)</operator><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:24">nb_sections</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:38">nb_sections</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:14">writer</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:26">priv_class</name></name></expr>)</condition> <block pos:start="43:29" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:22">

        <decl_stmt pos:start="45:9" pos:end="45:39"><decl pos:start="45:9" pos:end="45:38"><type pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:12">void</name> <modifier pos:start="45:14" pos:end="45:14">*</modifier></type><name pos:start="45:15" pos:end="45:22">priv_ctx</name> <init pos:start="45:24" pos:end="45:38">= <expr pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:38"><operator pos:start="45:26" pos:end="45:26">(</operator><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:31">wctx</name><operator pos:start="45:32" pos:end="45:32">)</operator><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:38">priv</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><operator pos:start="47:9" pos:end="47:9">*</operator><operator pos:start="47:10" pos:end="47:10">(</operator><operator pos:start="47:11" pos:end="47:11">(</operator><specifier pos:start="47:12" pos:end="47:16">const</specifier> <name pos:start="47:18" pos:end="47:24">AVClass</name> <operator pos:start="47:26" pos:end="47:26">*</operator><operator pos:start="47:27" pos:end="47:27">*</operator><operator pos:start="47:28" pos:end="47:28">)</operator><name pos:start="47:29" pos:end="47:36">priv_ctx</name><operator pos:start="47:37" pos:end="47:37">)</operator> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:58"><name pos:start="47:41" pos:end="47:46">writer</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:58">priv_class</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><call pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:27">av_opt_set_defaults</name><argument_list pos:start="49:28" pos:end="49:37">(<argument pos:start="49:29" pos:end="49:36"><expr pos:start="49:29" pos:end="49:36"><name pos:start="49:29" pos:end="49:36">priv_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="57:22"><if pos:start="53:9" pos:end="57:22">if <condition pos:start="53:12" pos:end="55:72">(<expr pos:start="53:13" pos:end="55:71"><name pos:start="53:13" pos:end="53:16">args</name> <operator pos:start="53:18" pos:end="53:19">&amp;&amp;</operator>

            <operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:16">ret</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:66"><name pos:start="55:20" pos:end="55:40">av_set_options_string</name><argument_list pos:start="55:41" pos:end="55:66">(<argument pos:start="55:42" pos:end="55:49"><expr pos:start="55:42" pos:end="55:49"><name pos:start="55:42" pos:end="55:49">priv_ctx</name></expr></argument>, <argument pos:start="55:52" pos:end="55:55"><expr pos:start="55:52" pos:end="55:55"><name pos:start="55:52" pos:end="55:55">args</name></expr></argument>, <argument pos:start="55:58" pos:end="55:60"><expr pos:start="55:58" pos:end="55:60"><literal type="string" pos:start="55:58" pos:end="55:60">"="</literal></expr></argument>, <argument pos:start="55:63" pos:end="55:65"><expr pos:start="55:63" pos:end="55:65"><literal type="string" pos:start="55:63" pos:end="55:65">":"</literal></expr></argument>)</argument_list></call><operator pos:start="55:67" pos:end="55:67">)</operator> <operator pos:start="55:69" pos:end="55:69">&lt;</operator> <literal type="number" pos:start="55:71" pos:end="55:71">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="63:5" pos:end="65:79">for <control pos:start="63:9" pos:end="63:47">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:42"><expr pos:start="63:17" pos:end="63:41"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:41">SECTION_MAX_NB_LEVELS</name></expr>;</condition> <incr pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><name pos:start="63:44" pos:end="63:44">i</name><operator pos:start="63:45" pos:end="63:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:9" pos:end="65:79"><block_content pos:start="65:9" pos:end="65:79">

        <expr_stmt pos:start="65:9" pos:end="65:79"><expr pos:start="65:9" pos:end="65:78"><call pos:start="65:9" pos:end="65:78"><name pos:start="65:9" pos:end="65:22">av_bprint_init</name><argument_list pos:start="65:23" pos:end="65:78">(<argument pos:start="65:24" pos:end="65:48"><expr pos:start="65:24" pos:end="65:48"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:45"><operator pos:start="65:25" pos:end="65:25">(</operator><operator pos:start="65:26" pos:end="65:26">*</operator><name pos:start="65:27" pos:end="65:30">wctx</name><operator pos:start="65:31" pos:end="65:31">)</operator><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:45">section_pbuf</name></name><index pos:start="65:46" pos:end="65:48">[<expr pos:start="65:47" pos:end="65:47"><name pos:start="65:47" pos:end="65:47">i</name></expr>]</index></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">1</literal></expr></argument>, <argument pos:start="65:54" pos:end="65:77"><expr pos:start="65:54" pos:end="65:77"><name pos:start="65:54" pos:end="65:77">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="69:5" pos:end="71:43"><if pos:start="69:5" pos:end="71:43">if <condition pos:start="69:8" pos:end="69:30">(<expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:29"><operator pos:start="69:9" pos:end="69:9">(</operator><operator pos:start="69:10" pos:end="69:10">*</operator><name pos:start="69:11" pos:end="69:14">wctx</name><operator pos:start="69:15" pos:end="69:15">)</operator><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:29"><name pos:start="69:18" pos:end="69:23">writer</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:29">init</name></name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:43"><block_content pos:start="71:9" pos:end="71:43">

        <expr_stmt pos:start="71:9" pos:end="71:43"><expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:42"><name pos:start="71:15" pos:end="71:35"><operator pos:start="71:15" pos:end="71:15">(</operator><operator pos:start="71:16" pos:end="71:16">*</operator><name pos:start="71:17" pos:end="71:20">wctx</name><operator pos:start="71:21" pos:end="71:21">)</operator><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:29">writer</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:35">init</name></name></name><argument_list pos:start="71:36" pos:end="71:42">(<argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><operator pos:start="71:37" pos:end="71:37">*</operator><name pos:start="71:38" pos:end="71:41">wctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="75:18"><if pos:start="73:5" pos:end="75:18">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>



<label pos:start="83:1" pos:end="83:5"><name pos:start="83:1" pos:end="83:4">fail</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:23"><expr pos:start="85:5" pos:end="85:22"><call pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:16">writer_close</name><argument_list pos:start="85:17" pos:end="85:22">(<argument pos:start="85:18" pos:end="85:21"><expr pos:start="85:18" pos:end="85:21"><name pos:start="85:18" pos:end="85:21">wctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
