<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9337.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_rtp_get_payload_type</name><parameter_list pos:start="1:28" pos:end="3:59">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">fmt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:49"><decl pos:start="3:29" pos:end="3:49"><type pos:start="3:29" pos:end="3:49"><name pos:start="3:29" pos:end="3:42">AVCodecContext</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">codec</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:58"><decl pos:start="3:52" pos:end="3:58"><type pos:start="3:52" pos:end="3:58"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:58">idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:32">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVOutputFormat</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">ofmt</name> <init pos:start="9:26" pos:end="9:52">= <expr pos:start="9:28" pos:end="9:52"><ternary pos:start="9:28" pos:end="9:52"><condition pos:start="9:28" pos:end="9:32"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:30">fmt</name></expr> ?</condition><then pos:start="9:34" pos:end="9:45"> <expr pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:36">fmt</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:45">oformat</name></name></expr> </then><else pos:start="9:47" pos:end="9:52">: <expr pos:start="9:49" pos:end="9:52"><name pos:start="9:49" pos:end="9:52">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:67">/* Was the payload type already specified for the RTP muxer? */</comment>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:51">(<expr pos:start="15:9" pos:end="15:50"><name pos:start="15:9" pos:end="15:12">ofmt</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <name pos:start="15:17" pos:end="15:32"><name pos:start="15:17" pos:end="15:20">ofmt</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:32">priv_class</name></name> <operator pos:start="15:34" pos:end="15:35">&amp;&amp;</operator> <name pos:start="15:37" pos:end="15:50"><name pos:start="15:37" pos:end="15:39">fmt</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">priv_data</name></name></expr>)</condition> <block pos:start="15:53" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:37">

        <decl_stmt pos:start="17:9" pos:end="17:29"><decl pos:start="17:9" pos:end="17:28"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:28">payload_type</name></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="23:37"><if pos:start="19:9" pos:end="23:37">if <condition pos:start="19:12" pos:end="21:30">(<expr pos:start="19:13" pos:end="21:29"><call pos:start="19:13" pos:end="19:76"><name pos:start="19:13" pos:end="19:26">av_opt_get_int</name><argument_list pos:start="19:27" pos:end="19:76">(<argument pos:start="19:28" pos:end="19:41"><expr pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:30">fmt</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:41">priv_data</name></name></expr></argument>, <argument pos:start="19:44" pos:end="19:57"><expr pos:start="19:44" pos:end="19:57"><literal type="string" pos:start="19:44" pos:end="19:57">"payload_type"</literal></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">0</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:75"><expr pos:start="19:63" pos:end="19:75"><operator pos:start="19:63" pos:end="19:63">&amp;</operator><name pos:start="19:64" pos:end="19:75">payload_type</name></expr></argument>)</argument_list></call> <operator pos:start="19:78" pos:end="19:79">&gt;=</operator> <literal type="number" pos:start="19:81" pos:end="19:81">0</literal> <operator pos:start="19:83" pos:end="19:84">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:24">payload_type</name> <operator pos:start="21:26" pos:end="21:27">&gt;=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:37"><block_content pos:start="23:13" pos:end="23:37">

            <return pos:start="23:13" pos:end="23:37">return <expr pos:start="23:20" pos:end="23:36"><operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:23">int</name><operator pos:start="23:24" pos:end="23:24">)</operator><name pos:start="23:25" pos:end="23:36">payload_type</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* static payload type */</comment>

    <for pos:start="31:5" pos:end="67:9">for <control pos:start="31:9" pos:end="31:50">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:45"><expr pos:start="31:17" pos:end="31:44"><name pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:33">rtp_payload_types</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr>]</index></name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:39">pt</name> <operator pos:start="31:41" pos:end="31:42">&gt;=</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>;</condition> <incr pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><operator pos:start="31:47" pos:end="31:48">++</operator><name pos:start="31:49" pos:end="31:49">i</name></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="67:9"><block_content pos:start="33:9" pos:end="67:9">

        <if_stmt pos:start="33:9" pos:end="67:9"><if pos:start="33:9" pos:end="67:9">if <condition pos:start="33:12" pos:end="33:61">(<expr pos:start="33:13" pos:end="33:60"><name pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:29">rtp_payload_types</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">i</name></expr>]</index></name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:41">codec_id</name> <operator pos:start="33:43" pos:end="33:44">==</operator> <name pos:start="33:46" pos:end="33:60"><name pos:start="33:46" pos:end="33:50">codec</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:60">codec_id</name></name></expr>)</condition> <block pos:start="33:63" pos:end="67:9">{<block_content pos:start="35:13" pos:end="65:43">

            <if_stmt pos:start="35:13" pos:end="41:25"><if pos:start="35:13" pos:end="41:25">if <condition pos:start="35:16" pos:end="39:76">(<expr pos:start="35:17" pos:end="39:75"><name pos:start="35:17" pos:end="35:31"><name pos:start="35:17" pos:end="35:21">codec</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:31">codec_id</name></name> <operator pos:start="35:33" pos:end="35:34">==</operator> <name pos:start="35:36" pos:end="35:51">AV_CODEC_ID_H263</name> <operator pos:start="35:53" pos:end="35:54">&amp;&amp;</operator> <operator pos:start="35:56" pos:end="35:56">(</operator><operator pos:start="35:57" pos:end="35:57">!</operator><name pos:start="35:58" pos:end="35:60">fmt</name> <operator pos:start="35:62" pos:end="35:63">||</operator>

                <operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:41"><name pos:start="37:18" pos:end="37:20">fmt</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:29">oformat</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:41">priv_class</name></name> <operator pos:start="37:43" pos:end="37:44">||</operator>

                <operator pos:start="39:17" pos:end="39:17">!</operator><call pos:start="39:18" pos:end="39:74"><name pos:start="39:18" pos:end="39:35">av_opt_flag_is_set</name><argument_list pos:start="39:36" pos:end="39:74">(<argument pos:start="39:37" pos:end="39:50"><expr pos:start="39:37" pos:end="39:50"><name pos:start="39:37" pos:end="39:50"><name pos:start="39:37" pos:end="39:39">fmt</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:50">priv_data</name></name></expr></argument>, <argument pos:start="39:53" pos:end="39:62"><expr pos:start="39:53" pos:end="39:62"><literal type="string" pos:start="39:53" pos:end="39:62">"rtpflags"</literal></expr></argument>, <argument pos:start="39:65" pos:end="39:73"><expr pos:start="39:65" pos:end="39:73"><literal type="string" pos:start="39:65" pos:end="39:73">"rfc2190"</literal></expr></argument>)</argument_list></call><operator pos:start="39:75" pos:end="39:75">)</operator></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:25"><block_content pos:start="41:17" pos:end="41:25">

                <continue pos:start="41:17" pos:end="41:25">continue;</continue></block_content></block></if></if_stmt>

            <comment type="block" pos:start="43:13" pos:end="45:48">/* G722 has 8000 as nominal rate even if the sample rate is 16000,

             * see section 4.5.2 in RFC 3551. */</comment>

            <if_stmt pos:start="47:13" pos:end="51:47"><if pos:start="47:13" pos:end="51:47">if <condition pos:start="47:16" pos:end="49:68">(<expr pos:start="47:17" pos:end="49:67"><name pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:31">codec_id</name></name> <operator pos:start="47:33" pos:end="47:34">==</operator> <name pos:start="47:36" pos:end="47:57">AV_CODEC_ID_ADPCM_G722</name> <operator pos:start="47:59" pos:end="47:60">&amp;&amp;</operator>

                <name pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:34">sample_rate</name></name> <operator pos:start="49:36" pos:end="49:37">==</operator> <literal type="number" pos:start="49:39" pos:end="49:43">16000</literal> <operator pos:start="49:45" pos:end="49:46">&amp;&amp;</operator> <name pos:start="49:48" pos:end="49:62"><name pos:start="49:48" pos:end="49:52">codec</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:62">channels</name></name> <operator pos:start="49:64" pos:end="49:65">==</operator> <literal type="number" pos:start="49:67" pos:end="49:67">1</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:47"><block_content pos:start="51:17" pos:end="51:47">

                <return pos:start="51:17" pos:end="51:47">return <expr pos:start="51:24" pos:end="51:46"><name pos:start="51:24" pos:end="51:43"><name pos:start="51:24" pos:end="51:40">rtp_payload_types</name><index pos:start="51:41" pos:end="51:43">[<expr pos:start="51:42" pos:end="51:42"><name pos:start="51:42" pos:end="51:42">i</name></expr>]</index></name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:46">pt</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="63:25"><if pos:start="53:13" pos:end="63:25">if <condition pos:start="53:16" pos:end="61:75">(<expr pos:start="53:17" pos:end="61:74"><name pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:21">codec</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:33">codec_type</name></name> <operator pos:start="53:35" pos:end="53:36">==</operator> <name pos:start="53:38" pos:end="53:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="53:57" pos:end="53:58">&amp;&amp;</operator>

                <operator pos:start="55:17" pos:end="55:17">(</operator><operator pos:start="55:18" pos:end="55:18">(</operator><name pos:start="55:19" pos:end="55:38"><name pos:start="55:19" pos:end="55:35">rtp_payload_types</name><index pos:start="55:36" pos:end="55:38">[<expr pos:start="55:37" pos:end="55:37"><name pos:start="55:37" pos:end="55:37">i</name></expr>]</index></name><operator pos:start="55:39" pos:end="55:39">.</operator><name pos:start="55:40" pos:end="55:49">clock_rate</name> <operator pos:start="55:51" pos:end="55:51">&gt;</operator> <literal type="number" pos:start="55:53" pos:end="55:53">0</literal> <operator pos:start="55:55" pos:end="55:56">&amp;&amp;</operator>

                  <name pos:start="57:19" pos:end="57:36"><name pos:start="57:19" pos:end="57:23">codec</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:36">sample_rate</name></name> <operator pos:start="57:38" pos:end="57:39">!=</operator> <name pos:start="57:41" pos:end="57:60"><name pos:start="57:41" pos:end="57:57">rtp_payload_types</name><index pos:start="57:58" pos:end="57:60">[<expr pos:start="57:59" pos:end="57:59"><name pos:start="57:59" pos:end="57:59">i</name></expr>]</index></name><operator pos:start="57:61" pos:end="57:61">.</operator><name pos:start="57:62" pos:end="57:71">clock_rate</name><operator pos:start="57:72" pos:end="57:72">)</operator> <operator pos:start="57:74" pos:end="57:75">||</operator>

                 <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:38"><name pos:start="59:19" pos:end="59:35">rtp_payload_types</name><index pos:start="59:36" pos:end="59:38">[<expr pos:start="59:37" pos:end="59:37"><name pos:start="59:37" pos:end="59:37">i</name></expr>]</index></name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:53">audio_channels</name> <operator pos:start="59:55" pos:end="59:55">&gt;</operator> <literal type="number" pos:start="59:57" pos:end="59:57">0</literal> <operator pos:start="59:59" pos:end="59:60">&amp;&amp;</operator>

                  <name pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:23">codec</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:33">channels</name></name> <operator pos:start="61:35" pos:end="61:36">!=</operator> <name pos:start="61:38" pos:end="61:57"><name pos:start="61:38" pos:end="61:54">rtp_payload_types</name><index pos:start="61:55" pos:end="61:57">[<expr pos:start="61:56" pos:end="61:56"><name pos:start="61:56" pos:end="61:56">i</name></expr>]</index></name><operator pos:start="61:58" pos:end="61:58">.</operator><name pos:start="61:59" pos:end="61:72">audio_channels</name><operator pos:start="61:73" pos:end="61:73">)</operator><operator pos:start="61:74" pos:end="61:74">)</operator></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:25"><block_content pos:start="63:17" pos:end="63:25">

                <continue pos:start="63:17" pos:end="63:25">continue;</continue></block_content></block></if></if_stmt>

            <return pos:start="65:13" pos:end="65:43">return <expr pos:start="65:20" pos:end="65:42"><name pos:start="65:20" pos:end="65:39"><name pos:start="65:20" pos:end="65:36">rtp_payload_types</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:42">pt</name></expr>;</return>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="71:5" pos:end="73:54"><if pos:start="71:5" pos:end="73:54">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">idx</name> <operator pos:start="71:13" pos:end="71:13">&lt;</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:54"><block_content pos:start="73:9" pos:end="73:54">

        <expr_stmt pos:start="73:9" pos:end="73:54"><expr pos:start="73:9" pos:end="73:53"><name pos:start="73:9" pos:end="73:11">idx</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:31"><name pos:start="73:15" pos:end="73:19">codec</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:31">codec_type</name></name> <operator pos:start="73:33" pos:end="73:34">==</operator> <name pos:start="73:36" pos:end="73:53">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:30">/* dynamic payload type */</comment>

    <return pos:start="79:5" pos:end="79:32">return <expr pos:start="79:12" pos:end="79:31"><name pos:start="79:12" pos:end="79:25">RTP_PT_PRIVATE</name> <operator pos:start="79:27" pos:end="79:27">+</operator> <name pos:start="79:29" pos:end="79:31">idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
