<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18882.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">print_report</name><parameter_list pos:start="1:25" pos:end="5:65">(<parameter pos:start="1:26" pos:end="1:49"><decl pos:start="1:26" pos:end="1:49"><type pos:start="1:26" pos:end="1:49"><name pos:start="1:26" pos:end="1:35">OutputFile</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:49">output_files</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:48"><decl pos:start="3:26" pos:end="3:48"><type pos:start="3:26" pos:end="3:48"><name pos:start="3:26" pos:end="3:37">OutputStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">ost_table</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:65">nb_ostreams</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:28">int</name></type> <name pos:start="5:30" pos:end="5:43">is_last_report</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:64"><decl pos:start="5:46" pos:end="5:64"><type pos:start="5:46" pos:end="5:64"><name pos:start="5:46" pos:end="5:52">int64_t</name></type> <name pos:start="5:54" pos:end="5:64">timer_start</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="253:1">{<block_content pos:start="9:5" pos:end="251:5">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">OutputStream</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">AVFormatContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">frame_number</name></decl>, <decl pos:start="19:23" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:23" pos:end="19:25">vid</name></decl>, <decl pos:start="19:28" pos:end="19:28"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:28" pos:end="19:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">double</name></type> <name pos:start="21:12" pos:end="21:18">bitrate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:15">pts</name> <init pos:start="23:17" pos:end="23:27">= <expr pos:start="23:19" pos:end="23:27"><name pos:start="23:19" pos:end="23:27">INT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:18"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:18">int64_t</name></type> <name pos:start="25:20" pos:end="25:28">last_time</name> <init pos:start="25:30" pos:end="25:33">= <expr pos:start="25:32" pos:end="25:33"><operator pos:start="25:32" pos:end="25:32">-</operator><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:14"><specifier pos:start="27:5" pos:end="27:10">static</specifier> <name pos:start="27:12" pos:end="27:14">int</name></type> <name pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:27">qp_histogram</name><index pos:start="27:28" pos:end="27:31">[<expr pos:start="27:29" pos:end="27:30"><literal type="number" pos:start="27:29" pos:end="27:30">52</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:30"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">hours</name></decl>, <decl pos:start="29:16" pos:end="29:19"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:19">mins</name></decl>, <decl pos:start="29:22" pos:end="29:25"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:22" pos:end="29:25">secs</name></decl>, <decl pos:start="29:28" pos:end="29:29"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:28" pos:end="29:29">us</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="55:5"><if pos:start="33:5" pos:end="55:5">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:23">is_last_report</name></expr>)</condition> <block pos:start="33:26" pos:end="55:5">{<block_content pos:start="35:9" pos:end="53:29">

        <decl_stmt pos:start="35:9" pos:end="35:25"><decl pos:start="35:9" pos:end="35:24"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">int64_t</name></type> <name pos:start="35:17" pos:end="35:24">cur_time</name></decl>;</decl_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:50">/* display the report every 0.5 seconds */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:16">cur_time</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:29">av_gettime</name><argument_list pos:start="39:30" pos:end="39:31">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:21">last_time</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <operator pos:start="41:26" pos:end="41:26">-</operator><literal type="number" pos:start="41:27" pos:end="41:27">1</literal></expr>)</condition> <block pos:start="41:30" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:19">

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:21">last_time</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:32">cur_time</name></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:19"><if pos:start="49:9" pos:end="51:19">if <condition pos:start="49:12" pos:end="49:44">(<expr pos:start="49:13" pos:end="49:43"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:21">cur_time</name> <operator pos:start="49:23" pos:end="49:23">-</operator> <name pos:start="49:25" pos:end="49:33">last_time</name><operator pos:start="49:34" pos:end="49:34">)</operator> <operator pos:start="49:36" pos:end="49:36">&lt;</operator> <literal type="number" pos:start="49:38" pos:end="49:43">500000</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:19"><block_content pos:start="51:13" pos:end="51:19">

            <return pos:start="51:13" pos:end="51:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:17">last_time</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:28">cur_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:6">oc</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <name pos:start="61:10" pos:end="61:24"><name pos:start="61:10" pos:end="61:21">output_files</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>]</index></name><operator pos:start="61:25" pos:end="61:25">.</operator><name pos:start="61:26" pos:end="61:28">ctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:14">total_size</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:34"><name pos:start="65:18" pos:end="65:26">avio_size</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:29">oc</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="69:38"><if pos:start="67:5" pos:end="69:38">if<condition pos:start="67:7" pos:end="67:20">(<expr pos:start="67:8" pos:end="67:19"><name pos:start="67:8" pos:end="67:17">total_size</name><operator pos:start="67:18" pos:end="67:18">&lt;</operator><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:38"><block_content pos:start="69:9" pos:end="69:38"> <comment type="line" pos:start="67:22" pos:end="67:90">// FIXME improve avio_size() so it works with non seekable output too</comment>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:18">total_size</name><operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:29">avio_tell</name><argument_list pos:start="69:30" pos:end="69:37">(<argument pos:start="69:31" pos:end="69:36"><expr pos:start="69:31" pos:end="69:36"><name pos:start="69:31" pos:end="69:36"><name pos:start="69:31" pos:end="69:32">oc</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:18"><expr pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:10"><name pos:start="73:5" pos:end="73:7">buf</name><index pos:start="73:8" pos:end="73:10">[<expr pos:start="73:9" pos:end="73:9"><literal type="number" pos:start="73:9" pos:end="73:9">0</literal></expr>]</index></name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="char" pos:start="73:14" pos:end="73:17">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:12"><expr pos:start="75:5" pos:end="75:11"><name pos:start="75:5" pos:end="75:7">vid</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <literal type="number" pos:start="75:11" pos:end="75:11">0</literal></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="179:5">for<control pos:start="77:8" pos:end="77:30">(<init pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">i</name><operator pos:start="77:10" pos:end="77:10">=</operator><literal type="number" pos:start="77:11" pos:end="77:11">0</literal></expr>;</init><condition pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:13">i</name><operator pos:start="77:14" pos:end="77:14">&lt;</operator><name pos:start="77:15" pos:end="77:25">nb_ostreams</name></expr>;</condition><incr pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:27">i</name><operator pos:start="77:28" pos:end="77:29">++</operator></expr></incr>)</control> <block pos:start="77:32" pos:end="179:5">{<block_content pos:start="79:9" pos:end="177:75">

        <decl_stmt pos:start="79:9" pos:end="79:21"><decl pos:start="79:9" pos:end="79:20"><type pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:13">float</name></type> <name pos:start="79:15" pos:end="79:15">q</name> <init pos:start="79:17" pos:end="79:20">= <expr pos:start="79:19" pos:end="79:20"><operator pos:start="79:19" pos:end="79:19">-</operator><literal type="number" pos:start="79:20" pos:end="79:20">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:11">ost</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">&amp;</operator><name pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:24">ost_table</name><index pos:start="81:25" pos:end="81:27">[<expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:11">enc</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:28"><name pos:start="83:15" pos:end="83:17">ost</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:21">st</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:28">codec</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:62"><if pos:start="85:9" pos:end="87:62">if <condition pos:start="85:12" pos:end="85:54">(<expr pos:start="85:13" pos:end="85:53"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:33"><name pos:start="85:14" pos:end="85:16">ost</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:20">st</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:33">stream_copy</name></name> <operator pos:start="85:35" pos:end="85:36">&amp;&amp;</operator> <name pos:start="85:38" pos:end="85:53"><name pos:start="85:38" pos:end="85:40">enc</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:53">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:62"><block_content pos:start="87:13" pos:end="87:62">

            <expr_stmt pos:start="87:13" pos:end="87:62"><expr pos:start="87:13" pos:end="87:61"><name pos:start="87:13" pos:end="87:13">q</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:41"><name pos:start="87:17" pos:end="87:19">enc</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:32">coded_frame</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:41">quality</name></name><operator pos:start="87:42" pos:end="87:42">/</operator><operator pos:start="87:43" pos:end="87:43">(</operator><name pos:start="87:44" pos:end="87:48">float</name><operator pos:start="87:49" pos:end="87:49">)</operator><name pos:start="87:50" pos:end="87:61">FF_QP2LAMBDA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:57">(<expr pos:start="89:13" pos:end="89:56"><name pos:start="89:13" pos:end="89:15">vid</name> <operator pos:start="89:17" pos:end="89:18">&amp;&amp;</operator> <name pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:22">enc</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:34">codec_type</name></name> <operator pos:start="89:36" pos:end="89:37">==</operator> <name pos:start="89:39" pos:end="89:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="89:59" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:82">

            <expr_stmt pos:start="91:13" pos:end="91:82"><expr pos:start="91:13" pos:end="91:81"><call pos:start="91:13" pos:end="91:81"><name pos:start="91:13" pos:end="91:20">snprintf</name><argument_list pos:start="91:21" pos:end="91:81">(<argument pos:start="91:22" pos:end="91:38"><expr pos:start="91:22" pos:end="91:38"><name pos:start="91:22" pos:end="91:24">buf</name> <operator pos:start="91:26" pos:end="91:26">+</operator> <call pos:start="91:28" pos:end="91:38"><name pos:start="91:28" pos:end="91:33">strlen</name><argument_list pos:start="91:34" pos:end="91:38">(<argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><name pos:start="91:35" pos:end="91:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:41" pos:end="91:65"><expr pos:start="91:41" pos:end="91:65"><sizeof pos:start="91:41" pos:end="91:51">sizeof<argument_list pos:start="91:47" pos:end="91:51">(<argument pos:start="91:48" pos:end="91:50"><expr pos:start="91:48" pos:end="91:50"><name pos:start="91:48" pos:end="91:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="91:53" pos:end="91:53">-</operator> <call pos:start="91:55" pos:end="91:65"><name pos:start="91:55" pos:end="91:60">strlen</name><argument_list pos:start="91:61" pos:end="91:65">(<argument pos:start="91:62" pos:end="91:64"><expr pos:start="91:62" pos:end="91:64"><name pos:start="91:62" pos:end="91:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:68" pos:end="91:77"><expr pos:start="91:68" pos:end="91:77"><literal type="string" pos:start="91:68" pos:end="91:77">"q=%2.1f "</literal></expr></argument>, <argument pos:start="91:80" pos:end="91:80"><expr pos:start="91:80" pos:end="91:80"><name pos:start="91:80" pos:end="91:80">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="171:9"><if pos:start="95:9" pos:end="171:9">if <condition pos:start="95:12" pos:end="95:58">(<expr pos:start="95:13" pos:end="95:57"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:16">vid</name> <operator pos:start="95:18" pos:end="95:19">&amp;&amp;</operator> <name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:23">enc</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:35">codec_type</name></name> <operator pos:start="95:37" pos:end="95:38">==</operator> <name pos:start="95:40" pos:end="95:57">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="95:60" pos:end="171:9">{<block_content pos:start="97:13" pos:end="169:20">

            <decl_stmt pos:start="97:13" pos:end="97:61"><decl pos:start="97:13" pos:end="97:60"><type pos:start="97:13" pos:end="97:17"><name pos:start="97:13" pos:end="97:17">float</name></type> <name pos:start="97:19" pos:end="97:19">t</name> <init pos:start="97:21" pos:end="97:60">= <expr pos:start="97:23" pos:end="97:60"><operator pos:start="97:23" pos:end="97:23">(</operator><call pos:start="97:24" pos:end="97:35"><name pos:start="97:24" pos:end="97:33">av_gettime</name><argument_list pos:start="97:34" pos:end="97:35">()</argument_list></call><operator pos:start="97:36" pos:end="97:36">-</operator><name pos:start="97:37" pos:end="97:47">timer_start</name><operator pos:start="97:48" pos:end="97:48">)</operator> <operator pos:start="97:50" pos:end="97:50">/</operator> <literal type="number" pos:start="97:52" pos:end="97:60">1000000.0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:45"><expr pos:start="101:13" pos:end="101:44"><name pos:start="101:13" pos:end="101:24">frame_number</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:44"><name pos:start="101:28" pos:end="101:30">ost</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:44">frame_number</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="105:75"><expr pos:start="103:13" pos:end="105:74"><call pos:start="103:13" pos:end="105:74"><name pos:start="103:13" pos:end="103:20">snprintf</name><argument_list pos:start="103:21" pos:end="105:74">(<argument pos:start="103:22" pos:end="103:38"><expr pos:start="103:22" pos:end="103:38"><name pos:start="103:22" pos:end="103:24">buf</name> <operator pos:start="103:26" pos:end="103:26">+</operator> <call pos:start="103:28" pos:end="103:38"><name pos:start="103:28" pos:end="103:33">strlen</name><argument_list pos:start="103:34" pos:end="103:38">(<argument pos:start="103:35" pos:end="103:37"><expr pos:start="103:35" pos:end="103:37"><name pos:start="103:35" pos:end="103:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:41" pos:end="103:65"><expr pos:start="103:41" pos:end="103:65"><sizeof pos:start="103:41" pos:end="103:51">sizeof<argument_list pos:start="103:47" pos:end="103:51">(<argument pos:start="103:48" pos:end="103:50"><expr pos:start="103:48" pos:end="103:50"><name pos:start="103:48" pos:end="103:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="103:53" pos:end="103:53">-</operator> <call pos:start="103:55" pos:end="103:65"><name pos:start="103:55" pos:end="103:60">strlen</name><argument_list pos:start="103:61" pos:end="103:65">(<argument pos:start="103:62" pos:end="103:64"><expr pos:start="103:62" pos:end="103:64"><name pos:start="103:62" pos:end="103:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:68" pos:end="103:95"><expr pos:start="103:68" pos:end="103:95"><literal type="string" pos:start="103:68" pos:end="103:95">"frame=%5d fps=%3d q=%3.1f "</literal></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:33"><expr pos:start="105:22" pos:end="105:33"><name pos:start="105:22" pos:end="105:33">frame_number</name></expr></argument>, <argument pos:start="105:36" pos:end="105:70"><expr pos:start="105:36" pos:end="105:70"><ternary pos:start="105:36" pos:end="105:70"><condition pos:start="105:36" pos:end="105:41"><expr pos:start="105:36" pos:end="105:40"><operator pos:start="105:36" pos:end="105:36">(</operator><name pos:start="105:37" pos:end="105:37">t</name><operator pos:start="105:38" pos:end="105:38">&gt;</operator><literal type="number" pos:start="105:39" pos:end="105:39">1</literal><operator pos:start="105:40" pos:end="105:40">)</operator></expr>?</condition><then pos:start="105:42" pos:end="105:66"><expr pos:start="105:42" pos:end="105:66"><operator pos:start="105:42" pos:end="105:42">(</operator><name pos:start="105:43" pos:end="105:45">int</name><operator pos:start="105:46" pos:end="105:46">)</operator><operator pos:start="105:47" pos:end="105:47">(</operator><name pos:start="105:48" pos:end="105:59">frame_number</name><operator pos:start="105:60" pos:end="105:60">/</operator><name pos:start="105:61" pos:end="105:61">t</name><operator pos:start="105:62" pos:end="105:62">+</operator><literal type="number" pos:start="105:63" pos:end="105:65">0.5</literal><operator pos:start="105:66" pos:end="105:66">)</operator></expr> </then><else pos:start="105:68" pos:end="105:70">: <expr pos:start="105:70" pos:end="105:70"><literal type="number" pos:start="105:70" pos:end="105:70">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="105:73" pos:end="105:73"><expr pos:start="105:73" pos:end="105:73"><name pos:start="105:73" pos:end="105:73">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:76"><if pos:start="107:13" pos:end="109:76">if<condition pos:start="107:15" pos:end="107:30">(<expr pos:start="107:16" pos:end="107:29"><name pos:start="107:16" pos:end="107:29">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:76"><block_content pos:start="109:17" pos:end="109:76">

                <expr_stmt pos:start="109:17" pos:end="109:76"><expr pos:start="109:17" pos:end="109:75"><call pos:start="109:17" pos:end="109:75"><name pos:start="109:17" pos:end="109:24">snprintf</name><argument_list pos:start="109:25" pos:end="109:75">(<argument pos:start="109:26" pos:end="109:42"><expr pos:start="109:26" pos:end="109:42"><name pos:start="109:26" pos:end="109:28">buf</name> <operator pos:start="109:30" pos:end="109:30">+</operator> <call pos:start="109:32" pos:end="109:42"><name pos:start="109:32" pos:end="109:37">strlen</name><argument_list pos:start="109:38" pos:end="109:42">(<argument pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><name pos:start="109:39" pos:end="109:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:45" pos:end="109:69"><expr pos:start="109:45" pos:end="109:69"><sizeof pos:start="109:45" pos:end="109:55">sizeof<argument_list pos:start="109:51" pos:end="109:55">(<argument pos:start="109:52" pos:end="109:54"><expr pos:start="109:52" pos:end="109:54"><name pos:start="109:52" pos:end="109:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="109:57" pos:end="109:57">-</operator> <call pos:start="109:59" pos:end="109:69"><name pos:start="109:59" pos:end="109:64">strlen</name><argument_list pos:start="109:65" pos:end="109:69">(<argument pos:start="109:66" pos:end="109:68"><expr pos:start="109:66" pos:end="109:68"><name pos:start="109:66" pos:end="109:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:72" pos:end="109:74"><expr pos:start="109:72" pos:end="109:74"><literal type="string" pos:start="109:72" pos:end="109:74">"L"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="111:13" pos:end="125:13"><if pos:start="111:13" pos:end="125:13">if<condition pos:start="111:15" pos:end="111:23">(<expr pos:start="111:16" pos:end="111:22"><name pos:start="111:16" pos:end="111:22">qp_hist</name></expr>)</condition><block pos:start="111:24" pos:end="125:13">{<block_content pos:start="113:17" pos:end="123:125">

                <decl_stmt pos:start="113:17" pos:end="113:22"><decl pos:start="113:17" pos:end="113:21"><type pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">int</name></type> <name pos:start="113:21" pos:end="113:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:35"><decl pos:start="115:17" pos:end="115:34"><type pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:19">int</name></type> <name pos:start="115:21" pos:end="115:22">qp</name> <init pos:start="115:24" pos:end="115:34">= <expr pos:start="115:26" pos:end="115:34"><call pos:start="115:26" pos:end="115:34"><name pos:start="115:26" pos:end="115:31">lrintf</name><argument_list pos:start="115:32" pos:end="115:34">(<argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="117:17" pos:end="119:39"><if pos:start="117:17" pos:end="119:39">if<condition pos:start="117:19" pos:end="117:60">(<expr pos:start="117:20" pos:end="117:59"><name pos:start="117:20" pos:end="117:21">qp</name><operator pos:start="117:22" pos:end="117:23">&gt;=</operator><literal type="number" pos:start="117:24" pos:end="117:24">0</literal> <operator pos:start="117:26" pos:end="117:27">&amp;&amp;</operator> <name pos:start="117:29" pos:end="117:30">qp</name><operator pos:start="117:31" pos:end="117:31">&lt;</operator><call pos:start="117:32" pos:end="117:59"><name pos:start="117:32" pos:end="117:45">FF_ARRAY_ELEMS</name><argument_list pos:start="117:46" pos:end="117:59">(<argument pos:start="117:47" pos:end="117:58"><expr pos:start="117:47" pos:end="117:58"><name pos:start="117:47" pos:end="117:58">qp_histogram</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:39"><block_content pos:start="119:21" pos:end="119:39">

                    <expr_stmt pos:start="119:21" pos:end="119:39"><expr pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:32">qp_histogram</name><index pos:start="119:33" pos:end="119:36">[<expr pos:start="119:34" pos:end="119:35"><name pos:start="119:34" pos:end="119:35">qp</name></expr>]</index></name><operator pos:start="119:37" pos:end="119:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="121:17" pos:end="123:125">for<control pos:start="121:20" pos:end="121:35">(<init pos:start="121:21" pos:end="121:24"><expr pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:21">j</name><operator pos:start="121:22" pos:end="121:22">=</operator><literal type="number" pos:start="121:23" pos:end="121:23">0</literal></expr>;</init> <condition pos:start="121:26" pos:end="121:30"><expr pos:start="121:26" pos:end="121:29"><name pos:start="121:26" pos:end="121:26">j</name><operator pos:start="121:27" pos:end="121:27">&lt;</operator><literal type="number" pos:start="121:28" pos:end="121:29">32</literal></expr>;</condition> <incr pos:start="121:32" pos:end="121:34"><expr pos:start="121:32" pos:end="121:34"><name pos:start="121:32" pos:end="121:32">j</name><operator pos:start="121:33" pos:end="121:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:21" pos:end="123:125"><block_content pos:start="123:21" pos:end="123:125">

                    <expr_stmt pos:start="123:21" pos:end="123:125"><expr pos:start="123:21" pos:end="123:124"><call pos:start="123:21" pos:end="123:124"><name pos:start="123:21" pos:end="123:28">snprintf</name><argument_list pos:start="123:29" pos:end="123:124">(<argument pos:start="123:30" pos:end="123:46"><expr pos:start="123:30" pos:end="123:46"><name pos:start="123:30" pos:end="123:32">buf</name> <operator pos:start="123:34" pos:end="123:34">+</operator> <call pos:start="123:36" pos:end="123:46"><name pos:start="123:36" pos:end="123:41">strlen</name><argument_list pos:start="123:42" pos:end="123:46">(<argument pos:start="123:43" pos:end="123:45"><expr pos:start="123:43" pos:end="123:45"><name pos:start="123:43" pos:end="123:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:49" pos:end="123:73"><expr pos:start="123:49" pos:end="123:73"><sizeof pos:start="123:49" pos:end="123:59">sizeof<argument_list pos:start="123:55" pos:end="123:59">(<argument pos:start="123:56" pos:end="123:58"><expr pos:start="123:56" pos:end="123:58"><name pos:start="123:56" pos:end="123:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="123:61" pos:end="123:61">-</operator> <call pos:start="123:63" pos:end="123:73"><name pos:start="123:63" pos:end="123:68">strlen</name><argument_list pos:start="123:69" pos:end="123:73">(<argument pos:start="123:70" pos:end="123:72"><expr pos:start="123:70" pos:end="123:72"><name pos:start="123:70" pos:end="123:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:76" pos:end="123:79"><expr pos:start="123:76" pos:end="123:79"><literal type="string" pos:start="123:76" pos:end="123:79">"%X"</literal></expr></argument>, <argument pos:start="123:82" pos:end="123:123"><expr pos:start="123:82" pos:end="123:123"><operator pos:start="123:82" pos:end="123:82">(</operator><name pos:start="123:83" pos:end="123:85">int</name><operator pos:start="123:86" pos:end="123:86">)</operator><call pos:start="123:87" pos:end="123:123"><name pos:start="123:87" pos:end="123:92">lrintf</name><argument_list pos:start="123:93" pos:end="123:123">(<argument pos:start="123:94" pos:end="123:122"><expr pos:start="123:94" pos:end="123:122"><call pos:start="123:94" pos:end="123:115"><name pos:start="123:94" pos:end="123:96">log</name><argument_list pos:start="123:97" pos:end="123:115">(<argument pos:start="123:98" pos:end="123:114"><expr pos:start="123:98" pos:end="123:114"><name pos:start="123:98" pos:end="123:112"><name pos:start="123:98" pos:end="123:109">qp_histogram</name><index pos:start="123:110" pos:end="123:112">[<expr pos:start="123:111" pos:end="123:111"><name pos:start="123:111" pos:end="123:111">j</name></expr>]</index></name><operator pos:start="123:113" pos:end="123:113">+</operator><literal type="number" pos:start="123:114" pos:end="123:114">1</literal></expr></argument>)</argument_list></call><operator pos:start="123:116" pos:end="123:116">/</operator><call pos:start="123:117" pos:end="123:122"><name pos:start="123:117" pos:end="123:119">log</name><argument_list pos:start="123:120" pos:end="123:122">(<argument pos:start="123:121" pos:end="123:121"><expr pos:start="123:121" pos:end="123:121"><literal type="number" pos:start="123:121" pos:end="123:121">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="127:13" pos:end="167:13"><if pos:start="127:13" pos:end="167:13">if <condition pos:start="127:16" pos:end="127:43">(<expr pos:start="127:17" pos:end="127:42"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:19">enc</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:26">flags</name></name><operator pos:start="127:27" pos:end="127:27">&amp;</operator><name pos:start="127:28" pos:end="127:42">CODEC_FLAG_PSNR</name></expr>)</condition><block pos:start="127:44" pos:end="167:13">{<block_content pos:start="129:17" pos:end="165:110">

                <decl_stmt pos:start="129:17" pos:end="129:22"><decl pos:start="129:17" pos:end="129:21"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="131:17" pos:end="131:42"><decl pos:start="131:17" pos:end="131:28"><type pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22">double</name></type> <name pos:start="131:24" pos:end="131:28">error</name></decl>, <decl pos:start="131:31" pos:end="131:41"><type ref="prev" pos:start="131:17" pos:end="131:22"/><name pos:start="131:31" pos:end="131:39">error_sum</name><init pos:start="131:40" pos:end="131:41">=<expr pos:start="131:41" pos:end="131:41"><literal type="number" pos:start="131:41" pos:end="131:41">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="133:17" pos:end="133:42"><decl pos:start="133:17" pos:end="133:28"><type pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:22">double</name></type> <name pos:start="133:24" pos:end="133:28">scale</name></decl>, <decl pos:start="133:31" pos:end="133:41"><type ref="prev" pos:start="133:17" pos:end="133:22"/><name pos:start="133:31" pos:end="133:39">scale_sum</name><init pos:start="133:40" pos:end="133:41">=<expr pos:start="133:41" pos:end="133:41"><literal type="number" pos:start="133:41" pos:end="133:41">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="135:17" pos:end="135:44"><decl pos:start="135:17" pos:end="135:43"><type pos:start="135:17" pos:end="135:20"><name pos:start="135:17" pos:end="135:20">char</name></type> <name pos:start="135:22" pos:end="135:28"><name pos:start="135:22" pos:end="135:25">type</name><index pos:start="135:26" pos:end="135:28">[<expr pos:start="135:27" pos:end="135:27"><literal type="number" pos:start="135:27" pos:end="135:27">3</literal></expr>]</index></name><init pos:start="135:29" pos:end="135:43">= <expr pos:start="135:31" pos:end="135:43"><block pos:start="135:31" pos:end="135:43">{<expr pos:start="135:32" pos:end="135:34"><literal type="char" pos:start="135:32" pos:end="135:34">'Y'</literal></expr>,<expr pos:start="135:36" pos:end="135:38"><literal type="char" pos:start="135:36" pos:end="135:38">'U'</literal></expr>,<expr pos:start="135:40" pos:end="135:42"><literal type="char" pos:start="135:40" pos:end="135:42">'V'</literal></expr>}</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:80"><expr pos:start="137:17" pos:end="137:79"><call pos:start="137:17" pos:end="137:79"><name pos:start="137:17" pos:end="137:24">snprintf</name><argument_list pos:start="137:25" pos:end="137:79">(<argument pos:start="137:26" pos:end="137:42"><expr pos:start="137:26" pos:end="137:42"><name pos:start="137:26" pos:end="137:28">buf</name> <operator pos:start="137:30" pos:end="137:30">+</operator> <call pos:start="137:32" pos:end="137:42"><name pos:start="137:32" pos:end="137:37">strlen</name><argument_list pos:start="137:38" pos:end="137:42">(<argument pos:start="137:39" pos:end="137:41"><expr pos:start="137:39" pos:end="137:41"><name pos:start="137:39" pos:end="137:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:45" pos:end="137:69"><expr pos:start="137:45" pos:end="137:69"><sizeof pos:start="137:45" pos:end="137:55">sizeof<argument_list pos:start="137:51" pos:end="137:55">(<argument pos:start="137:52" pos:end="137:54"><expr pos:start="137:52" pos:end="137:54"><name pos:start="137:52" pos:end="137:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="137:57" pos:end="137:57">-</operator> <call pos:start="137:59" pos:end="137:69"><name pos:start="137:59" pos:end="137:64">strlen</name><argument_list pos:start="137:65" pos:end="137:69">(<argument pos:start="137:66" pos:end="137:68"><expr pos:start="137:66" pos:end="137:68"><name pos:start="137:66" pos:end="137:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:72" pos:end="137:78"><expr pos:start="137:72" pos:end="137:78"><literal type="string" pos:start="137:72" pos:end="137:78">"PSNR="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="139:17" pos:end="163:17">for<control pos:start="139:20" pos:end="139:34">(<init pos:start="139:21" pos:end="139:24"><expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:21">j</name><operator pos:start="139:22" pos:end="139:22">=</operator><literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr>;</init> <condition pos:start="139:26" pos:end="139:29"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:26">j</name><operator pos:start="139:27" pos:end="139:27">&lt;</operator><literal type="number" pos:start="139:28" pos:end="139:28">3</literal></expr>;</condition> <incr pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:31">j</name><operator pos:start="139:32" pos:end="139:33">++</operator></expr></incr>)</control><block pos:start="139:35" pos:end="163:17">{<block_content pos:start="141:21" pos:end="161:116">

                    <if_stmt pos:start="141:21" pos:end="153:21"><if pos:start="141:21" pos:end="147:21">if<condition pos:start="141:23" pos:end="141:38">(<expr pos:start="141:24" pos:end="141:37"><name pos:start="141:24" pos:end="141:37">is_last_report</name></expr>)</condition><block pos:start="141:39" pos:end="147:21">{<block_content pos:start="143:25" pos:end="145:79">

                        <expr_stmt pos:start="143:25" pos:end="143:45"><expr pos:start="143:25" pos:end="143:44"><name pos:start="143:25" pos:end="143:29">error</name><operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:44"><name pos:start="143:32" pos:end="143:34">enc</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:41">error</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:79"><expr pos:start="145:25" pos:end="145:78"><name pos:start="145:25" pos:end="145:29">scale</name><operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:41"><name pos:start="145:32" pos:end="145:34">enc</name><operator pos:start="145:35" pos:end="145:36">-&gt;</operator><name pos:start="145:37" pos:end="145:41">width</name></name><operator pos:start="145:42" pos:end="145:42">*</operator><name pos:start="145:43" pos:end="145:53"><name pos:start="145:43" pos:end="145:45">enc</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:53">height</name></name><operator pos:start="145:54" pos:end="145:54">*</operator><literal type="number" pos:start="145:55" pos:end="145:59">255.0</literal><operator pos:start="145:60" pos:end="145:60">*</operator><literal type="number" pos:start="145:61" pos:end="145:65">255.0</literal><operator pos:start="145:66" pos:end="145:66">*</operator><name pos:start="145:67" pos:end="145:78">frame_number</name></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="147:22" pos:end="153:21">else<block pos:start="147:26" pos:end="153:21">{<block_content pos:start="149:25" pos:end="151:66">

                        <expr_stmt pos:start="149:25" pos:end="149:58"><expr pos:start="149:25" pos:end="149:57"><name pos:start="149:25" pos:end="149:29">error</name><operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:57"><name pos:start="149:32" pos:end="149:34">enc</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:47">coded_frame</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:54">error</name><index pos:start="149:55" pos:end="149:57">[<expr pos:start="149:56" pos:end="149:56"><name pos:start="149:56" pos:end="149:56">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="151:25" pos:end="151:66"><expr pos:start="151:25" pos:end="151:65"><name pos:start="151:25" pos:end="151:29">scale</name><operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:41"><name pos:start="151:32" pos:end="151:34">enc</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:41">width</name></name><operator pos:start="151:42" pos:end="151:42">*</operator><name pos:start="151:43" pos:end="151:53"><name pos:start="151:43" pos:end="151:45">enc</name><operator pos:start="151:46" pos:end="151:47">-&gt;</operator><name pos:start="151:48" pos:end="151:53">height</name></name><operator pos:start="151:54" pos:end="151:54">*</operator><literal type="number" pos:start="151:55" pos:end="151:59">255.0</literal><operator pos:start="151:60" pos:end="151:60">*</operator><literal type="number" pos:start="151:61" pos:end="151:65">255.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="155:21" pos:end="155:35"><if pos:start="155:21" pos:end="155:35">if<condition pos:start="155:23" pos:end="155:25">(<expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">j</name></expr>)</condition><block type="pseudo" pos:start="155:27" pos:end="155:35"><block_content pos:start="155:27" pos:end="155:35"> <expr_stmt pos:start="155:27" pos:end="155:35"><expr pos:start="155:27" pos:end="155:34"><name pos:start="155:27" pos:end="155:31">scale</name><operator pos:start="155:32" pos:end="155:33">/=</operator><literal type="number" pos:start="155:34" pos:end="155:34">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:39"><expr pos:start="157:21" pos:end="157:38"><name pos:start="157:21" pos:end="157:29">error_sum</name> <operator pos:start="157:31" pos:end="157:32">+=</operator> <name pos:start="157:34" pos:end="157:38">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:39"><expr pos:start="159:21" pos:end="159:38"><name pos:start="159:21" pos:end="159:29">scale_sum</name> <operator pos:start="159:31" pos:end="159:32">+=</operator> <name pos:start="159:34" pos:end="159:38">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:116"><expr pos:start="161:21" pos:end="161:115"><call pos:start="161:21" pos:end="161:115"><name pos:start="161:21" pos:end="161:28">snprintf</name><argument_list pos:start="161:29" pos:end="161:115">(<argument pos:start="161:30" pos:end="161:46"><expr pos:start="161:30" pos:end="161:46"><name pos:start="161:30" pos:end="161:32">buf</name> <operator pos:start="161:34" pos:end="161:34">+</operator> <call pos:start="161:36" pos:end="161:46"><name pos:start="161:36" pos:end="161:41">strlen</name><argument_list pos:start="161:42" pos:end="161:46">(<argument pos:start="161:43" pos:end="161:45"><expr pos:start="161:43" pos:end="161:45"><name pos:start="161:43" pos:end="161:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:49" pos:end="161:73"><expr pos:start="161:49" pos:end="161:73"><sizeof pos:start="161:49" pos:end="161:59">sizeof<argument_list pos:start="161:55" pos:end="161:59">(<argument pos:start="161:56" pos:end="161:58"><expr pos:start="161:56" pos:end="161:58"><name pos:start="161:56" pos:end="161:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="161:61" pos:end="161:61">-</operator> <call pos:start="161:63" pos:end="161:73"><name pos:start="161:63" pos:end="161:68">strlen</name><argument_list pos:start="161:69" pos:end="161:73">(<argument pos:start="161:70" pos:end="161:72"><expr pos:start="161:70" pos:end="161:72"><name pos:start="161:70" pos:end="161:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:76" pos:end="161:86"><expr pos:start="161:76" pos:end="161:86"><literal type="string" pos:start="161:76" pos:end="161:86">"%c:%2.2f "</literal></expr></argument>, <argument pos:start="161:89" pos:end="161:95"><expr pos:start="161:89" pos:end="161:95"><name pos:start="161:89" pos:end="161:95"><name pos:start="161:89" pos:end="161:92">type</name><index pos:start="161:93" pos:end="161:95">[<expr pos:start="161:94" pos:end="161:94"><name pos:start="161:94" pos:end="161:94">j</name></expr>]</index></name></expr></argument>, <argument pos:start="161:98" pos:end="161:114"><expr pos:start="161:98" pos:end="161:114"><call pos:start="161:98" pos:end="161:114"><name pos:start="161:98" pos:end="161:101">psnr</name><argument_list pos:start="161:102" pos:end="161:114">(<argument pos:start="161:103" pos:end="161:113"><expr pos:start="161:103" pos:end="161:113"><name pos:start="161:103" pos:end="161:107">error</name><operator pos:start="161:108" pos:end="161:108">/</operator><name pos:start="161:109" pos:end="161:113">scale</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="165:17" pos:end="165:110"><expr pos:start="165:17" pos:end="165:109"><call pos:start="165:17" pos:end="165:109"><name pos:start="165:17" pos:end="165:24">snprintf</name><argument_list pos:start="165:25" pos:end="165:109">(<argument pos:start="165:26" pos:end="165:42"><expr pos:start="165:26" pos:end="165:42"><name pos:start="165:26" pos:end="165:28">buf</name> <operator pos:start="165:30" pos:end="165:30">+</operator> <call pos:start="165:32" pos:end="165:42"><name pos:start="165:32" pos:end="165:37">strlen</name><argument_list pos:start="165:38" pos:end="165:42">(<argument pos:start="165:39" pos:end="165:41"><expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:45" pos:end="165:69"><expr pos:start="165:45" pos:end="165:69"><sizeof pos:start="165:45" pos:end="165:55">sizeof<argument_list pos:start="165:51" pos:end="165:55">(<argument pos:start="165:52" pos:end="165:54"><expr pos:start="165:52" pos:end="165:54"><name pos:start="165:52" pos:end="165:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="165:57" pos:end="165:57">-</operator> <call pos:start="165:59" pos:end="165:69"><name pos:start="165:59" pos:end="165:64">strlen</name><argument_list pos:start="165:65" pos:end="165:69">(<argument pos:start="165:66" pos:end="165:68"><expr pos:start="165:66" pos:end="165:68"><name pos:start="165:66" pos:end="165:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:72" pos:end="165:81"><expr pos:start="165:72" pos:end="165:81"><literal type="string" pos:start="165:72" pos:end="165:81">"*:%2.2f "</literal></expr></argument>, <argument pos:start="165:84" pos:end="165:108"><expr pos:start="165:84" pos:end="165:108"><call pos:start="165:84" pos:end="165:108"><name pos:start="165:84" pos:end="165:87">psnr</name><argument_list pos:start="165:88" pos:end="165:108">(<argument pos:start="165:89" pos:end="165:107"><expr pos:start="165:89" pos:end="165:107"><name pos:start="165:89" pos:end="165:97">error_sum</name><operator pos:start="165:98" pos:end="165:98">/</operator><name pos:start="165:99" pos:end="165:107">scale_sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:20"><expr pos:start="169:13" pos:end="169:19"><name pos:start="169:13" pos:end="169:15">vid</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <literal type="number" pos:start="169:19" pos:end="169:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="173:9" pos:end="173:38">/* compute min output value */</comment>

        <expr_stmt pos:start="175:9" pos:end="177:75"><expr pos:start="175:9" pos:end="177:74"><name pos:start="175:9" pos:end="175:11">pts</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <call pos:start="175:15" pos:end="177:74"><name pos:start="175:15" pos:end="175:19">FFMIN</name><argument_list pos:start="175:20" pos:end="177:74">(<argument pos:start="175:21" pos:end="175:23"><expr pos:start="175:21" pos:end="175:23"><name pos:start="175:21" pos:end="175:23">pts</name></expr></argument>, <argument pos:start="175:26" pos:end="177:73"><expr pos:start="175:26" pos:end="177:73"><call pos:start="175:26" pos:end="177:73"><name pos:start="175:26" pos:end="175:37">av_rescale_q</name><argument_list pos:start="175:38" pos:end="177:73">(<argument pos:start="175:39" pos:end="175:54"><expr pos:start="175:39" pos:end="175:54"><name pos:start="175:39" pos:end="175:54"><name pos:start="175:39" pos:end="175:41">ost</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:45">st</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:50">pts</name><operator pos:start="175:51" pos:end="175:51">.</operator><name pos:start="175:52" pos:end="175:54">val</name></name></expr></argument>,

                                      <argument pos:start="177:39" pos:end="177:56"><expr pos:start="177:39" pos:end="177:56"><name pos:start="177:39" pos:end="177:56"><name pos:start="177:39" pos:end="177:41">ost</name><operator pos:start="177:42" pos:end="177:43">-&gt;</operator><name pos:start="177:44" pos:end="177:45">st</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:56">time_base</name></name></expr></argument>, <argument pos:start="177:59" pos:end="177:72"><expr pos:start="177:59" pos:end="177:72"><name pos:start="177:59" pos:end="177:72">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="183:5" pos:end="183:30"><expr pos:start="183:5" pos:end="183:29"><name pos:start="183:5" pos:end="183:8">secs</name> <operator pos:start="183:10" pos:end="183:10">=</operator> <name pos:start="183:12" pos:end="183:14">pts</name> <operator pos:start="183:16" pos:end="183:16">/</operator> <name pos:start="183:18" pos:end="183:29">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:28"><expr pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:6">us</name> <operator pos:start="185:8" pos:end="185:8">=</operator> <name pos:start="185:10" pos:end="185:12">pts</name> <operator pos:start="185:14" pos:end="185:14">%</operator> <name pos:start="185:16" pos:end="185:27">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:21"><expr pos:start="187:5" pos:end="187:20"><name pos:start="187:5" pos:end="187:8">mins</name> <operator pos:start="187:10" pos:end="187:10">=</operator> <name pos:start="187:12" pos:end="187:15">secs</name> <operator pos:start="187:17" pos:end="187:17">/</operator> <literal type="number" pos:start="187:19" pos:end="187:20">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:15"><expr pos:start="189:5" pos:end="189:14"><name pos:start="189:5" pos:end="189:8">secs</name> <operator pos:start="189:10" pos:end="189:11">%=</operator> <literal type="number" pos:start="189:13" pos:end="189:14">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:22"><expr pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:9">hours</name> <operator pos:start="191:11" pos:end="191:11">=</operator> <name pos:start="191:13" pos:end="191:16">mins</name> <operator pos:start="191:18" pos:end="191:18">/</operator> <literal type="number" pos:start="191:20" pos:end="191:21">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:15"><expr pos:start="193:5" pos:end="193:14"><name pos:start="193:5" pos:end="193:8">mins</name> <operator pos:start="193:10" pos:end="193:11">%=</operator> <literal type="number" pos:start="193:13" pos:end="193:14">60</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:56"><expr pos:start="197:5" pos:end="197:55"><name pos:start="197:5" pos:end="197:11">bitrate</name> <operator pos:start="197:13" pos:end="197:13">=</operator> <ternary pos:start="197:15" pos:end="197:55"><condition pos:start="197:15" pos:end="197:19"><expr pos:start="197:15" pos:end="197:17"><name pos:start="197:15" pos:end="197:17">pts</name></expr> ?</condition><then pos:start="197:21" pos:end="197:51"> <expr pos:start="197:21" pos:end="197:51"><name pos:start="197:21" pos:end="197:30">total_size</name> <operator pos:start="197:32" pos:end="197:32">*</operator> <literal type="number" pos:start="197:34" pos:end="197:34">8</literal> <operator pos:start="197:36" pos:end="197:36">/</operator> <operator pos:start="197:38" pos:end="197:38">(</operator><name pos:start="197:39" pos:end="197:41">pts</name> <operator pos:start="197:43" pos:end="197:43">/</operator> <literal type="number" pos:start="197:45" pos:end="197:50">1000.0</literal><operator pos:start="197:51" pos:end="197:51">)</operator></expr> </then><else pos:start="197:53" pos:end="197:55">: <expr pos:start="197:55" pos:end="197:55"><literal type="number" pos:start="197:55" pos:end="197:55">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="203:56"><expr pos:start="201:5" pos:end="203:55"><call pos:start="201:5" pos:end="203:55"><name pos:start="201:5" pos:end="201:12">snprintf</name><argument_list pos:start="201:13" pos:end="203:55">(<argument pos:start="201:14" pos:end="201:30"><expr pos:start="201:14" pos:end="201:30"><name pos:start="201:14" pos:end="201:16">buf</name> <operator pos:start="201:18" pos:end="201:18">+</operator> <call pos:start="201:20" pos:end="201:30"><name pos:start="201:20" pos:end="201:25">strlen</name><argument_list pos:start="201:26" pos:end="201:30">(<argument pos:start="201:27" pos:end="201:29"><expr pos:start="201:27" pos:end="201:29"><name pos:start="201:27" pos:end="201:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="201:33" pos:end="201:57"><expr pos:start="201:33" pos:end="201:57"><sizeof pos:start="201:33" pos:end="201:43">sizeof<argument_list pos:start="201:39" pos:end="201:43">(<argument pos:start="201:40" pos:end="201:42"><expr pos:start="201:40" pos:end="201:42"><name pos:start="201:40" pos:end="201:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="201:45" pos:end="201:45">-</operator> <call pos:start="201:47" pos:end="201:57"><name pos:start="201:47" pos:end="201:52">strlen</name><argument_list pos:start="201:53" pos:end="201:57">(<argument pos:start="201:54" pos:end="201:56"><expr pos:start="201:54" pos:end="201:56"><name pos:start="201:54" pos:end="201:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="203:14" pos:end="203:33"><expr pos:start="203:14" pos:end="203:33"><literal type="string" pos:start="203:14" pos:end="203:33">"size=%8.0fkB time="</literal></expr></argument>, <argument pos:start="203:36" pos:end="203:54"><expr pos:start="203:36" pos:end="203:54"><name pos:start="203:36" pos:end="203:45">total_size</name> <operator pos:start="203:47" pos:end="203:47">/</operator> <literal type="number" pos:start="203:49" pos:end="203:54">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="209:40"><expr pos:start="205:5" pos:end="209:39"><call pos:start="205:5" pos:end="209:39"><name pos:start="205:5" pos:end="205:12">snprintf</name><argument_list pos:start="205:13" pos:end="209:39">(<argument pos:start="205:14" pos:end="205:30"><expr pos:start="205:14" pos:end="205:30"><name pos:start="205:14" pos:end="205:16">buf</name> <operator pos:start="205:18" pos:end="205:18">+</operator> <call pos:start="205:20" pos:end="205:30"><name pos:start="205:20" pos:end="205:25">strlen</name><argument_list pos:start="205:26" pos:end="205:30">(<argument pos:start="205:27" pos:end="205:29"><expr pos:start="205:27" pos:end="205:29"><name pos:start="205:27" pos:end="205:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="205:33" pos:end="205:57"><expr pos:start="205:33" pos:end="205:57"><sizeof pos:start="205:33" pos:end="205:43">sizeof<argument_list pos:start="205:39" pos:end="205:43">(<argument pos:start="205:40" pos:end="205:42"><expr pos:start="205:40" pos:end="205:42"><name pos:start="205:40" pos:end="205:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="205:45" pos:end="205:45">-</operator> <call pos:start="205:47" pos:end="205:57"><name pos:start="205:47" pos:end="205:52">strlen</name><argument_list pos:start="205:53" pos:end="205:57">(<argument pos:start="205:54" pos:end="205:56"><expr pos:start="205:54" pos:end="205:56"><name pos:start="205:54" pos:end="205:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="207:14" pos:end="207:35"><expr pos:start="207:14" pos:end="207:35"><literal type="string" pos:start="207:14" pos:end="207:35">"%02d:%02d:%02d.%02d "</literal></expr></argument>, <argument pos:start="207:38" pos:end="207:42"><expr pos:start="207:38" pos:end="207:42"><name pos:start="207:38" pos:end="207:42">hours</name></expr></argument>, <argument pos:start="207:45" pos:end="207:48"><expr pos:start="207:45" pos:end="207:48"><name pos:start="207:45" pos:end="207:48">mins</name></expr></argument>, <argument pos:start="207:51" pos:end="207:54"><expr pos:start="207:51" pos:end="207:54"><name pos:start="207:51" pos:end="207:54">secs</name></expr></argument>,

             <argument pos:start="209:14" pos:end="209:38"><expr pos:start="209:14" pos:end="209:38"><operator pos:start="209:14" pos:end="209:14">(</operator><literal type="number" pos:start="209:15" pos:end="209:17">100</literal> <operator pos:start="209:19" pos:end="209:19">*</operator> <name pos:start="209:21" pos:end="209:22">us</name><operator pos:start="209:23" pos:end="209:23">)</operator> <operator pos:start="209:25" pos:end="209:25">/</operator> <name pos:start="209:27" pos:end="209:38">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="213:46"><expr pos:start="211:5" pos:end="213:45"><call pos:start="211:5" pos:end="213:45"><name pos:start="211:5" pos:end="211:12">snprintf</name><argument_list pos:start="211:13" pos:end="213:45">(<argument pos:start="211:14" pos:end="211:30"><expr pos:start="211:14" pos:end="211:30"><name pos:start="211:14" pos:end="211:16">buf</name> <operator pos:start="211:18" pos:end="211:18">+</operator> <call pos:start="211:20" pos:end="211:30"><name pos:start="211:20" pos:end="211:25">strlen</name><argument_list pos:start="211:26" pos:end="211:30">(<argument pos:start="211:27" pos:end="211:29"><expr pos:start="211:27" pos:end="211:29"><name pos:start="211:27" pos:end="211:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="211:33" pos:end="211:57"><expr pos:start="211:33" pos:end="211:57"><sizeof pos:start="211:33" pos:end="211:43">sizeof<argument_list pos:start="211:39" pos:end="211:43">(<argument pos:start="211:40" pos:end="211:42"><expr pos:start="211:40" pos:end="211:42"><name pos:start="211:40" pos:end="211:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="211:45" pos:end="211:45">-</operator> <call pos:start="211:47" pos:end="211:57"><name pos:start="211:47" pos:end="211:52">strlen</name><argument_list pos:start="211:53" pos:end="211:57">(<argument pos:start="211:54" pos:end="211:56"><expr pos:start="211:54" pos:end="211:56"><name pos:start="211:54" pos:end="211:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="213:14" pos:end="213:35"><expr pos:start="213:14" pos:end="213:35"><literal type="string" pos:start="213:14" pos:end="213:35">"bitrate=%6.1fkbits/s"</literal></expr></argument>, <argument pos:start="213:38" pos:end="213:44"><expr pos:start="213:38" pos:end="213:44"><name pos:start="213:38" pos:end="213:44">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="217:5" pos:end="221:47"><if pos:start="217:5" pos:end="221:47">if <condition pos:start="217:8" pos:end="217:40">(<expr pos:start="217:9" pos:end="217:39"><name pos:start="217:9" pos:end="217:21">nb_frames_dup</name> <operator pos:start="217:23" pos:end="217:24">||</operator> <name pos:start="217:26" pos:end="217:39">nb_frames_drop</name></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="221:47"><block_content pos:start="219:9" pos:end="221:47">

        <expr_stmt pos:start="219:9" pos:end="221:47"><expr pos:start="219:9" pos:end="221:46"><call pos:start="219:9" pos:end="221:46"><name pos:start="219:9" pos:end="219:16">snprintf</name><argument_list pos:start="219:17" pos:end="221:46">(<argument pos:start="219:18" pos:end="219:34"><expr pos:start="219:18" pos:end="219:34"><name pos:start="219:18" pos:end="219:20">buf</name> <operator pos:start="219:22" pos:end="219:22">+</operator> <call pos:start="219:24" pos:end="219:34"><name pos:start="219:24" pos:end="219:29">strlen</name><argument_list pos:start="219:30" pos:end="219:34">(<argument pos:start="219:31" pos:end="219:33"><expr pos:start="219:31" pos:end="219:33"><name pos:start="219:31" pos:end="219:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="219:37" pos:end="219:61"><expr pos:start="219:37" pos:end="219:61"><sizeof pos:start="219:37" pos:end="219:47">sizeof<argument_list pos:start="219:43" pos:end="219:47">(<argument pos:start="219:44" pos:end="219:46"><expr pos:start="219:44" pos:end="219:46"><name pos:start="219:44" pos:end="219:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="219:49" pos:end="219:49">-</operator> <call pos:start="219:51" pos:end="219:61"><name pos:start="219:51" pos:end="219:56">strlen</name><argument_list pos:start="219:57" pos:end="219:61">(<argument pos:start="219:58" pos:end="219:60"><expr pos:start="219:58" pos:end="219:60"><name pos:start="219:58" pos:end="219:60">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="219:64" pos:end="219:80"><expr pos:start="219:64" pos:end="219:80"><literal type="string" pos:start="219:64" pos:end="219:80">" dup=%d drop=%d"</literal></expr></argument>,

                <argument pos:start="221:17" pos:end="221:29"><expr pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:29">nb_frames_dup</name></expr></argument>, <argument pos:start="221:32" pos:end="221:45"><expr pos:start="221:32" pos:end="221:45"><name pos:start="221:32" pos:end="221:45">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:81"><expr pos:start="225:5" pos:end="225:80"><call pos:start="225:5" pos:end="225:80"><name pos:start="225:5" pos:end="225:10">av_log</name><argument_list pos:start="225:11" pos:end="225:80">(<argument pos:start="225:12" pos:end="225:15"><expr pos:start="225:12" pos:end="225:15"><name pos:start="225:12" pos:end="225:15">NULL</name></expr></argument>, <argument pos:start="225:18" pos:end="225:62"><expr pos:start="225:18" pos:end="225:62"><ternary pos:start="225:18" pos:end="225:62"><condition pos:start="225:18" pos:end="225:33"><expr pos:start="225:18" pos:end="225:31"><name pos:start="225:18" pos:end="225:31">is_last_report</name></expr> ?</condition><then pos:start="225:35" pos:end="225:48"> <expr pos:start="225:35" pos:end="225:48"><name pos:start="225:35" pos:end="225:48">AV_LOG_WARNING</name></expr> </then><else pos:start="225:50" pos:end="225:62">: <expr pos:start="225:52" pos:end="225:62"><name pos:start="225:52" pos:end="225:62">AV_LOG_INFO</name></expr></else></ternary></expr></argument>, <argument pos:start="225:65" pos:end="225:74"><expr pos:start="225:65" pos:end="225:74"><literal type="string" pos:start="225:65" pos:end="225:74">"%s    \r"</literal></expr></argument>, <argument pos:start="225:77" pos:end="225:79"><expr pos:start="225:77" pos:end="225:79"><name pos:start="225:77" pos:end="225:79">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:19"><expr pos:start="229:5" pos:end="229:18"><call pos:start="229:5" pos:end="229:18"><name pos:start="229:5" pos:end="229:10">fflush</name><argument_list pos:start="229:11" pos:end="229:18">(<argument pos:start="229:12" pos:end="229:17"><expr pos:start="229:12" pos:end="229:17"><name pos:start="229:12" pos:end="229:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="233:5" pos:end="251:5"><if pos:start="233:5" pos:end="251:5">if <condition pos:start="233:8" pos:end="233:23">(<expr pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:22">is_last_report</name></expr>)</condition> <block pos:start="233:25" pos:end="251:5">{<block_content pos:start="235:9" pos:end="249:10">

        <decl_stmt pos:start="235:9" pos:end="235:58"><decl pos:start="235:9" pos:end="235:57"><type pos:start="235:9" pos:end="235:15"><name pos:start="235:9" pos:end="235:15">int64_t</name></type> <name pos:start="235:17" pos:end="235:19">raw</name><init pos:start="235:20" pos:end="235:57">= <expr pos:start="235:22" pos:end="235:57"><name pos:start="235:22" pos:end="235:31">audio_size</name> <operator pos:start="235:33" pos:end="235:33">+</operator> <name pos:start="235:35" pos:end="235:44">video_size</name> <operator pos:start="235:46" pos:end="235:46">+</operator> <name pos:start="235:48" pos:end="235:57">extra_size</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:40"><expr pos:start="237:9" pos:end="237:39"><call pos:start="237:9" pos:end="237:39"><name pos:start="237:9" pos:end="237:14">av_log</name><argument_list pos:start="237:15" pos:end="237:39">(<argument pos:start="237:16" pos:end="237:19"><expr pos:start="237:16" pos:end="237:19"><name pos:start="237:16" pos:end="237:19">NULL</name></expr></argument>, <argument pos:start="237:22" pos:end="237:32"><expr pos:start="237:22" pos:end="237:32"><name pos:start="237:22" pos:end="237:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="237:35" pos:end="237:38"><expr pos:start="237:35" pos:end="237:38"><literal type="string" pos:start="237:35" pos:end="237:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="249:10"><expr pos:start="239:9" pos:end="249:9"><call pos:start="239:9" pos:end="249:9"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="249:9">(<argument pos:start="239:16" pos:end="239:19"><expr pos:start="239:16" pos:end="239:19"><name pos:start="239:16" pos:end="239:19">NULL</name></expr></argument>, <argument pos:start="239:22" pos:end="239:32"><expr pos:start="239:22" pos:end="239:32"><name pos:start="239:22" pos:end="239:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="239:35" pos:end="239:109"><expr pos:start="239:35" pos:end="239:109"><literal type="string" pos:start="239:35" pos:end="239:109">"video:%1.0fkB audio:%1.0fkB global headers:%1.0fkB muxing overhead %f%%\n"</literal></expr></argument>,

               <argument pos:start="241:16" pos:end="241:32"><expr pos:start="241:16" pos:end="241:32"><name pos:start="241:16" pos:end="241:25">video_size</name><operator pos:start="241:26" pos:end="241:26">/</operator><literal type="number" pos:start="241:27" pos:end="241:32">1024.0</literal></expr></argument>,

               <argument pos:start="243:16" pos:end="243:32"><expr pos:start="243:16" pos:end="243:32"><name pos:start="243:16" pos:end="243:25">audio_size</name><operator pos:start="243:26" pos:end="243:26">/</operator><literal type="number" pos:start="243:27" pos:end="243:32">1024.0</literal></expr></argument>,

               <argument pos:start="245:16" pos:end="245:32"><expr pos:start="245:16" pos:end="245:32"><name pos:start="245:16" pos:end="245:25">extra_size</name><operator pos:start="245:26" pos:end="245:26">/</operator><literal type="number" pos:start="245:27" pos:end="245:32">1024.0</literal></expr></argument>,

               <argument pos:start="247:16" pos:end="247:43"><expr pos:start="247:16" pos:end="247:43"><literal type="number" pos:start="247:16" pos:end="247:20">100.0</literal><operator pos:start="247:21" pos:end="247:21">*</operator><operator pos:start="247:22" pos:end="247:22">(</operator><name pos:start="247:23" pos:end="247:32">total_size</name> <operator pos:start="247:34" pos:end="247:34">-</operator> <name pos:start="247:36" pos:end="247:38">raw</name><operator pos:start="247:39" pos:end="247:39">)</operator><operator pos:start="247:40" pos:end="247:40">/</operator><name pos:start="247:41" pos:end="247:43">raw</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
