<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20956.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">CPUAlphaState</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type> <name pos:start="1:17" pos:end="1:30">cpu_alpha_init</name> <parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:44"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:53">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUAlphaState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">implver</name></decl>, <decl pos:start="7:18" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:22">amask</name></decl>, <decl pos:start="7:25" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:25">i</name></decl>, <decl pos:start="7:28" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:30">max</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:7">env</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:45"><name pos:start="11:11" pos:end="11:22">qemu_mallocz</name><argument_list pos:start="11:23" pos:end="11:45">(<argument pos:start="11:24" pos:end="11:44"><expr pos:start="11:24" pos:end="11:44"><sizeof pos:start="11:24" pos:end="11:44">sizeof<argument_list pos:start="11:30" pos:end="11:44">(<argument pos:start="11:31" pos:end="11:43"><expr pos:start="11:31" pos:end="11:43"><name pos:start="11:31" pos:end="11:43">CPUAlphaState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:17">cpu_exec_init</name><argument_list pos:start="13:18" pos:end="13:22">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:24">alpha_translate_init</name><argument_list pos:start="15:25" pos:end="15:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:13">tlb_flush</name><argument_list pos:start="17:14" pos:end="17:21">(<argument pos:start="17:15" pos:end="17:17"><expr pos:start="17:15" pos:end="17:17"><name pos:start="17:15" pos:end="17:17">env</name></expr></argument>, <argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:70">/* Default to ev67; no reason not to emulate insns by default.  */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:11">implver</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:27">IMPLVER_21264</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:44"><expr pos:start="25:5" pos:end="27:43"><name pos:start="25:5" pos:end="25:9">amask</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:22">AMASK_BWX</name> <operator pos:start="25:24" pos:end="25:24">|</operator> <name pos:start="25:26" pos:end="25:34">AMASK_FIX</name> <operator pos:start="25:36" pos:end="25:36">|</operator> <name pos:start="25:38" pos:end="25:46">AMASK_CIX</name> <operator pos:start="25:48" pos:end="25:48">|</operator> <name pos:start="25:50" pos:end="25:58">AMASK_MVI</name>

	     <operator pos:start="27:14" pos:end="27:14">|</operator> <name pos:start="27:16" pos:end="27:25">AMASK_TRAP</name> <operator pos:start="27:27" pos:end="27:27">|</operator> <name pos:start="27:29" pos:end="27:42">AMASK_PREFETCH</name><operator pos:start="27:43" pos:end="27:43">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:7">max</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:30"><name pos:start="31:11" pos:end="31:20">ARRAY_SIZE</name><argument_list pos:start="31:21" pos:end="31:30">(<argument pos:start="31:22" pos:end="31:29"><expr pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:29">cpu_defs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="45:5">for <control pos:start="33:9" pos:end="33:29">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:23">max</name></expr>;</condition> <incr pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:26">i</name><operator pos:start="33:27" pos:end="33:28">++</operator></expr></incr>)</control> <block pos:start="33:31" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:54">(<expr pos:start="35:13" pos:end="35:53"><call pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:18">strcmp</name> <argument_list pos:start="35:20" pos:end="35:48">(<argument pos:start="35:21" pos:end="35:29"><expr pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:29">cpu_model</name></expr></argument>, <argument pos:start="35:32" pos:end="35:47"><expr pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:42"><name pos:start="35:32" pos:end="35:39">cpu_defs</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">i</name></expr>]</index></name><operator pos:start="35:43" pos:end="35:43">.</operator><name pos:start="35:44" pos:end="35:47">name</name></expr></argument>)</argument_list></call> <operator pos:start="35:50" pos:end="35:51">==</operator> <literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr>)</condition> <block pos:start="35:56" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:18">

            <expr_stmt pos:start="37:13" pos:end="37:42"><expr pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:19">implver</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:33"><name pos:start="37:23" pos:end="37:30">cpu_defs</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">i</name></expr>]</index></name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:41">implver</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:38"><expr pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:17">amask</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:28">cpu_defs</name><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">i</name></expr>]</index></name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:37">amask</name></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">env</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">implver</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:26">implver</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:7">env</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:14">amask</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:22">amask</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="56:0"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:7">env</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:11">ps</name></name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:20">0x1F00</literal></expr>;</expr_stmt>

<cpp:if pos:start="55:1" pos:end="55:30">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:30"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:11">defined</name> <argument_list pos:start="55:13" pos:end="55:30">(<argument pos:start="55:14" pos:end="55:29"><expr pos:start="55:14" pos:end="55:29"><name pos:start="55:14" pos:end="55:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:7">env</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:11">ps</name></name> <operator pos:start="57:13" pos:end="57:14">|=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">1</literal> <operator pos:start="57:18" pos:end="57:19">&lt;&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="64:0"><expr pos:start="59:5" pos:end="61:68"><call pos:start="59:5" pos:end="61:68"><name pos:start="59:5" pos:end="59:24">cpu_alpha_store_fpcr</name><argument_list pos:start="59:25" pos:end="61:68">(<argument pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:28">env</name></expr></argument>, <argument pos:start="59:31" pos:end="61:67"><expr pos:start="59:31" pos:end="61:67"><operator pos:start="59:31" pos:end="59:31">(</operator><name pos:start="59:32" pos:end="59:40">FPCR_INVD</name> <operator pos:start="59:42" pos:end="59:42">|</operator> <name pos:start="59:44" pos:end="59:52">FPCR_DZED</name> <operator pos:start="59:54" pos:end="59:54">|</operator> <name pos:start="59:56" pos:end="59:64">FPCR_OVFD</name>

                               <operator pos:start="61:32" pos:end="61:32">|</operator> <name pos:start="61:34" pos:end="61:42">FPCR_UNFD</name> <operator pos:start="61:44" pos:end="61:44">|</operator> <name pos:start="61:46" pos:end="61:54">FPCR_INED</name> <operator pos:start="61:56" pos:end="61:56">|</operator> <name pos:start="61:58" pos:end="61:66">FPCR_DNOD</name><operator pos:start="61:67" pos:end="61:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="65:5" pos:end="72:0"><expr pos:start="65:5" pos:end="65:17"><call pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:12">pal_init</name><argument_list pos:start="65:13" pos:end="65:17">(<argument pos:start="65:14" pos:end="65:16"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:16">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:24">/* Initialize IPR */</comment>

<cpp:if pos:start="71:1" pos:end="71:30">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:11">defined</name> <argument_list pos:start="71:13" pos:end="71:30">(<argument pos:start="71:14" pos:end="71:29"><expr pos:start="71:14" pos:end="71:29"><name pos:start="71:14" pos:end="71:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">ipr</name><index pos:start="73:13" pos:end="73:26">[<expr pos:start="73:14" pos:end="73:25"><name pos:start="73:14" pos:end="73:25">IPR_EXC_ADDR</name></expr>]</index></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:7">env</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">ipr</name><index pos:start="75:13" pos:end="75:25">[<expr pos:start="75:14" pos:end="75:24"><name pos:start="75:14" pos:end="75:24">IPR_EXC_SUM</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="80:0"><expr pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:12">ipr</name><index pos:start="77:13" pos:end="77:26">[<expr pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:25">IPR_EXC_MASK</name></expr>]</index></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <literal type="number" pos:start="77:30" pos:end="77:30">0</literal></expr>;</expr_stmt>

<cpp:else pos:start="79:1" pos:end="79:5">#<cpp:directive pos:start="79:2" pos:end="79:5">else</cpp:directive></cpp:else>

    <block pos:start="81:5" pos:end="122:0">{<block_content pos:start="83:9" pos:end="117:37">

        <decl_stmt pos:start="83:9" pos:end="83:23"><decl pos:start="83:9" pos:end="83:22"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">uint64_t</name></type> <name pos:start="83:18" pos:end="83:22">hwpcb</name></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:13">hwpcb</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:34"><name pos:start="85:17" pos:end="85:19">env</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:24">ipr</name><index pos:start="85:25" pos:end="85:34">[<expr pos:start="85:26" pos:end="85:33"><name pos:start="85:26" pos:end="85:33">IPR_PCBB</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">ipr</name><index pos:start="87:17" pos:end="87:25">[<expr pos:start="87:18" pos:end="87:24"><name pos:start="87:18" pos:end="87:24">IPR_ASN</name></expr>]</index></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:11">env</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:16">ipr</name><index pos:start="89:17" pos:end="89:27">[<expr pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:26">IPR_ASTEN</name></expr>]</index></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <literal type="number" pos:start="89:31" pos:end="89:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:11">env</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:16">ipr</name><index pos:start="91:17" pos:end="91:27">[<expr pos:start="91:18" pos:end="91:26"><name pos:start="91:18" pos:end="91:26">IPR_ASTSR</name></expr>]</index></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:32"><expr pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">env</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:16">ipr</name><index pos:start="93:17" pos:end="93:27">[<expr pos:start="93:18" pos:end="93:26"><name pos:start="93:18" pos:end="93:26">IPR_DATFX</name></expr>]</index></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <literal type="number" pos:start="93:31" pos:end="93:31">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:27">/* XXX: fix this */</comment>

        <comment type="line" pos:start="97:9" pos:end="97:53">//    env-&gt;ipr[IPR_ESP] = ldq_raw(hwpcb + 8);</comment>

        <comment type="line" pos:start="99:9" pos:end="99:53">//    env-&gt;ipr[IPR_KSP] = ldq_raw(hwpcb + 0);</comment>

        <comment type="line" pos:start="101:9" pos:end="101:54">//    env-&gt;ipr[IPR_SSP] = ldq_raw(hwpcb + 16);</comment>

        <comment type="line" pos:start="103:9" pos:end="103:54">//    env-&gt;ipr[IPR_USP] = ldq_raw(hwpcb + 24);</comment>

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:11">env</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:16">ipr</name><index pos:start="105:17" pos:end="105:25">[<expr pos:start="105:18" pos:end="105:24"><name pos:start="105:18" pos:end="105:24">IPR_FEN</name></expr>]</index></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <literal type="number" pos:start="105:29" pos:end="105:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:11">env</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:16">ipr</name><index pos:start="107:17" pos:end="107:25">[<expr pos:start="107:18" pos:end="107:24"><name pos:start="107:18" pos:end="107:24">IPR_IPL</name></expr>]</index></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <literal type="number" pos:start="107:29" pos:end="107:30">31</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:31"><expr pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:11">env</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:16">ipr</name><index pos:start="109:17" pos:end="109:26">[<expr pos:start="109:18" pos:end="109:25"><name pos:start="109:18" pos:end="109:25">IPR_MCES</name></expr>]</index></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <literal type="number" pos:start="109:30" pos:end="109:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:34"><expr pos:start="111:9" pos:end="111:33"><name pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:16">ipr</name><index pos:start="111:17" pos:end="111:29">[<expr pos:start="111:18" pos:end="111:28"><name pos:start="111:18" pos:end="111:28">IPR_PERFMON</name></expr>]</index></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="111:36" pos:end="111:64">/* Implementation specific */</comment>

        <comment type="line" pos:start="113:9" pos:end="113:55">//    env-&gt;ipr[IPR_PTBR] = ldq_raw(hwpcb + 32);</comment>

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:11">env</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">ipr</name><index pos:start="115:17" pos:end="115:26">[<expr pos:start="115:18" pos:end="115:25"><name pos:start="115:18" pos:end="115:25">IPR_SISR</name></expr>]</index></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:11">env</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:16">ipr</name><index pos:start="117:17" pos:end="117:28">[<expr pos:start="117:18" pos:end="117:27"><name pos:start="117:18" pos:end="117:27">IPR_VIRBND</name></expr>]</index></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <operator pos:start="117:32" pos:end="117:32">-</operator><literal type="number" pos:start="117:33" pos:end="117:36">1ULL</literal></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="125:5" pos:end="125:24"><expr pos:start="125:5" pos:end="125:23"><call pos:start="125:5" pos:end="125:23"><name pos:start="125:5" pos:end="125:18">qemu_init_vcpu</name><argument_list pos:start="125:19" pos:end="125:23">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:15">return <expr pos:start="127:12" pos:end="127:14"><name pos:start="127:12" pos:end="127:14">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
