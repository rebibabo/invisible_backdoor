<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26092.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_packet</name><parameter_list pos:start="1:24" pos:end="1:76">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:75">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:15">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:20">out_pkt</name> <init pos:start="5:22" pos:end="5:28">= <expr pos:start="5:24" pos:end="5:28"><block pos:start="5:24" pos:end="5:28">{ <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="5:31" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:31" pos:end="5:39">flush_pkt</name> <init pos:start="5:41" pos:end="5:47">= <expr pos:start="5:43" pos:end="5:47"><block pos:start="5:43" pos:end="5:47">{ <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:43">= <expr pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:43">[<expr pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:42">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">data</name> <init pos:start="9:19" pos:end="9:42">= <expr pos:start="9:21" pos:end="9:42"><ternary pos:start="9:21" pos:end="9:42"><condition pos:start="9:21" pos:end="9:25"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:23">pkt</name></expr> ?</condition><then pos:start="9:27" pos:end="9:35"> <expr pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:29">pkt</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:35">data</name></name></expr> </then><else pos:start="9:37" pos:end="9:42">: <expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name>      <init pos:start="11:19" pos:end="11:39">= <expr pos:start="11:21" pos:end="11:39"><ternary pos:start="11:21" pos:end="11:39"><condition pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:23">pkt</name></expr> ?</condition><then pos:start="11:27" pos:end="11:35"> <expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:29">pkt</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">size</name></name></expr> </then><else pos:start="11:37" pos:end="11:39">: <expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:27">got_output</name> <init pos:start="13:29" pos:end="13:31">= <expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">pkt</name></expr>)</condition> <block pos:start="17:15" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:23">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:22">av_init_packet</name><argument_list pos:start="19:23" pos:end="19:34">(<argument pos:start="19:24" pos:end="19:33"><expr pos:start="19:24" pos:end="19:33"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:33">flush_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">pkt</name>        <operator pos:start="21:20" pos:end="21:20">=</operator> <operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:31">flush_pkt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:18">got_output</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="29:5" pos:end="165:5">while <condition pos:start="29:11" pos:end="29:57">(<expr pos:start="29:12" pos:end="29:56"><name pos:start="29:12" pos:end="29:15">size</name> <operator pos:start="29:17" pos:end="29:17">&gt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal> <operator pos:start="29:21" pos:end="29:22">||</operator> <operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:27">pkt</name> <operator pos:start="29:29" pos:end="29:30">==</operator> <operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:41">flush_pkt</name> <operator pos:start="29:43" pos:end="29:44">&amp;&amp;</operator> <name pos:start="29:46" pos:end="29:55">got_output</name><operator pos:start="29:56" pos:end="29:56">)</operator></expr>)</condition> <block pos:start="29:59" pos:end="165:5">{<block_content pos:start="31:9" pos:end="163:9">

        <decl_stmt pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:15">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:22">av_init_packet</name><argument_list pos:start="35:23" pos:end="35:32">(<argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:31">out_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="41:61"><expr pos:start="37:9" pos:end="41:60"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="41:60"><name pos:start="37:15" pos:end="37:30">av_parser_parse2</name><argument_list pos:start="37:31" pos:end="41:60">(<argument pos:start="37:32" pos:end="37:41"><expr pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:33">st</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:41">parser</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:52"><expr pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:45">st</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:52">codec</name></name></expr></argument>,

                               <argument pos:start="39:32" pos:end="39:44"><expr pos:start="39:32" pos:end="39:44"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:39">out_pkt</name><operator pos:start="39:40" pos:end="39:40">.</operator><name pos:start="39:41" pos:end="39:44">data</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:59"><expr pos:start="39:47" pos:end="39:59"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:59"><name pos:start="39:48" pos:end="39:54">out_pkt</name><operator pos:start="39:55" pos:end="39:55">.</operator><name pos:start="39:56" pos:end="39:59">size</name></name></expr></argument>, <argument pos:start="39:62" pos:end="39:65"><expr pos:start="39:62" pos:end="39:65"><name pos:start="39:62" pos:end="39:65">data</name></expr></argument>, <argument pos:start="39:68" pos:end="39:71"><expr pos:start="39:68" pos:end="39:71"><name pos:start="39:68" pos:end="39:71">size</name></expr></argument>,

                               <argument pos:start="41:32" pos:end="41:39"><expr pos:start="41:32" pos:end="41:39"><name pos:start="41:32" pos:end="41:39"><name pos:start="41:32" pos:end="41:34">pkt</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:39">pts</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:49"><expr pos:start="41:42" pos:end="41:49"><name pos:start="41:42" pos:end="41:49"><name pos:start="41:42" pos:end="41:44">pkt</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:49">dts</name></name></expr></argument>, <argument pos:start="41:52" pos:end="41:59"><expr pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:54">pkt</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:59">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">pts</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:22">pkt</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:27">dts</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:36">/* increment read pointer */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:12">data</name> <operator pos:start="49:14" pos:end="49:15">+=</operator> <name pos:start="49:17" pos:end="49:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:12">size</name> <operator pos:start="51:14" pos:end="51:15">-=</operator> <name pos:start="51:17" pos:end="51:19">len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:18">got_output</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <operator pos:start="55:22" pos:end="55:22">!</operator><operator pos:start="55:23" pos:end="55:23">!</operator><name pos:start="55:24" pos:end="55:35"><name pos:start="55:24" pos:end="55:30">out_pkt</name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:35">size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="61:21"><if pos:start="59:9" pos:end="61:21">if <condition pos:start="59:12" pos:end="59:26">(<expr pos:start="59:13" pos:end="59:25"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:20">out_pkt</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:25">size</name></name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:21"><block_content pos:start="61:13" pos:end="61:21">

            <continue pos:start="61:13" pos:end="61:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:27">(<expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:26">side_data</name></name></expr>)</condition> <block pos:start="65:29" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:40">

            <expr_stmt pos:start="67:13" pos:end="67:53"><expr pos:start="67:13" pos:end="67:52"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:19">out_pkt</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:29">side_data</name></name>       <operator pos:start="67:37" pos:end="67:37">=</operator> <name pos:start="67:39" pos:end="67:52"><name pos:start="67:39" pos:end="67:41">pkt</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:52">side_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:19">out_pkt</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:35">side_data_elems</name></name> <operator pos:start="69:37" pos:end="69:37">=</operator> <name pos:start="69:39" pos:end="69:58"><name pos:start="69:39" pos:end="69:41">pkt</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:58">side_data_elems</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:15">pkt</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:26">side_data</name></name>          <operator pos:start="71:37" pos:end="71:37">=</operator> <name pos:start="71:39" pos:end="71:42">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:40"><expr pos:start="73:13" pos:end="73:39"><name pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:15">pkt</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:32">side_data_elems</name></name>    <operator pos:start="73:37" pos:end="73:37">=</operator> <literal type="number" pos:start="73:39" pos:end="73:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:30">/* set the duration */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:15">out_pkt</name><operator pos:start="81:16" pos:end="81:16">.</operator><name pos:start="81:17" pos:end="81:24">duration</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="99:9">if <condition pos:start="83:12" pos:end="83:56">(<expr pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:14">st</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:21">codec</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:33">codec_type</name></name> <operator pos:start="83:35" pos:end="83:36">==</operator> <name pos:start="83:38" pos:end="83:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="83:58" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:13">

            <if_stmt pos:start="85:13" pos:end="97:13"><if pos:start="85:13" pos:end="97:13">if <condition pos:start="85:16" pos:end="85:43">(<expr pos:start="85:17" pos:end="85:42"><name pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:18">st</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:25">codec</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:38">sample_rate</name></name> <operator pos:start="85:40" pos:end="85:40">&gt;</operator> <literal type="number" pos:start="85:42" pos:end="85:42">0</literal></expr>)</condition> <block pos:start="85:45" pos:end="97:13">{<block_content pos:start="87:17" pos:end="95:52">

                <expr_stmt pos:start="87:17" pos:end="95:52"><expr pos:start="87:17" pos:end="95:51"><name pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:23">out_pkt</name><operator pos:start="87:24" pos:end="87:24">.</operator><name pos:start="87:25" pos:end="87:32">duration</name></name> <operator pos:start="87:34" pos:end="87:34">=</operator>

                    <macro pos:start="89:21" pos:end="95:51"><name pos:start="89:21" pos:end="89:36">av_rescale_q_rnd</name><argument_list pos:start="89:37" pos:end="95:51">(<argument pos:start="89:38" pos:end="89:57">st-&gt;parser-&gt;duration</argument>,

                                     <argument pos:start="91:38" pos:end="91:53">(AVRational) { <literal type="number" pos:start="91:53" pos:end="91:53">1</literal></argument>, <argument pos:start="91:56" pos:end="91:79">st-&gt;codec-&gt;sample_rate }</argument>,

                                     <argument pos:start="93:38" pos:end="93:50">st-&gt;time_base</argument>,

                                     <argument pos:start="95:38" pos:end="95:50">AV_ROUND_DOWN</argument>)</argument_list></macro></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:41"><expr pos:start="103:9" pos:end="103:40"><name pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:15">out_pkt</name><operator pos:start="103:16" pos:end="103:16">.</operator><name pos:start="103:17" pos:end="103:28">stream_index</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:40"><name pos:start="103:32" pos:end="103:33">st</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:40">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:47"><expr pos:start="105:9" pos:end="105:46"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:15">out_pkt</name><operator pos:start="105:16" pos:end="105:16">.</operator><name pos:start="105:17" pos:end="105:19">pts</name></name>          <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:46"><name pos:start="105:32" pos:end="105:33">st</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:41">parser</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:46">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:47"><expr pos:start="107:9" pos:end="107:46"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:15">out_pkt</name><operator pos:start="107:16" pos:end="107:16">.</operator><name pos:start="107:17" pos:end="107:19">dts</name></name>          <operator pos:start="107:30" pos:end="107:30">=</operator> <name pos:start="107:32" pos:end="107:46"><name pos:start="107:32" pos:end="107:33">st</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:41">parser</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:46">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:15">out_pkt</name><operator pos:start="109:16" pos:end="109:16">.</operator><name pos:start="109:17" pos:end="109:19">pos</name></name>          <operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:46"><name pos:start="109:32" pos:end="109:33">st</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:41">parser</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:46">pos</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="119:45"><if pos:start="113:9" pos:end="119:45">if <condition pos:start="113:12" pos:end="117:57">(<expr pos:start="113:13" pos:end="117:56"><name pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:22">parser</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:33">key_frame</name></name> <operator pos:start="113:35" pos:end="113:36">==</operator> <literal type="number" pos:start="113:38" pos:end="113:38">1</literal> <operator pos:start="113:40" pos:end="113:41">||</operator>

            <operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:34"><name pos:start="115:14" pos:end="115:15">st</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:23">parser</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:34">key_frame</name></name> <operator pos:start="115:36" pos:end="115:37">==</operator> <operator pos:start="115:39" pos:end="115:39">-</operator><literal type="number" pos:start="115:40" pos:end="115:40">1</literal> <operator pos:start="115:42" pos:end="115:43">&amp;&amp;</operator>

             <name pos:start="117:14" pos:end="117:34"><name pos:start="117:14" pos:end="117:15">st</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:23">parser</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:34">pict_type</name></name> <operator pos:start="117:36" pos:end="117:37">==</operator> <name pos:start="117:39" pos:end="117:55">AV_PICTURE_TYPE_I</name><operator pos:start="117:56" pos:end="117:56">)</operator></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:45"><block_content pos:start="119:13" pos:end="119:45">

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:19">out_pkt</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:25">flags</name></name> <operator pos:start="119:27" pos:end="119:28">|=</operator> <name pos:start="119:30" pos:end="119:44">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:56"><expr pos:start="123:9" pos:end="123:55"><call pos:start="123:9" pos:end="123:55"><name pos:start="123:9" pos:end="123:26">compute_pkt_fields</name><argument_list pos:start="123:27" pos:end="123:55">(<argument pos:start="123:28" pos:end="123:28"><expr pos:start="123:28" pos:end="123:28"><name pos:start="123:28" pos:end="123:28">s</name></expr></argument>, <argument pos:start="123:31" pos:end="123:32"><expr pos:start="123:31" pos:end="123:32"><name pos:start="123:31" pos:end="123:32">st</name></expr></argument>, <argument pos:start="123:35" pos:end="123:44"><expr pos:start="123:35" pos:end="123:44"><name pos:start="123:35" pos:end="123:44"><name pos:start="123:35" pos:end="123:36">st</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:44">parser</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:54"><expr pos:start="123:47" pos:end="123:54"><operator pos:start="123:47" pos:end="123:47">&amp;</operator><name pos:start="123:48" pos:end="123:54">out_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="137:9"><if pos:start="127:9" pos:end="137:9">if <condition pos:start="127:12" pos:end="129:44">(<expr pos:start="127:13" pos:end="129:43"><operator pos:start="127:13" pos:end="127:13">(</operator><name pos:start="127:14" pos:end="127:30"><name pos:start="127:14" pos:end="127:14">s</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:23">iformat</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:30">flags</name></name> <operator pos:start="127:32" pos:end="127:32">&amp;</operator> <name pos:start="127:34" pos:end="127:52">AVFMT_GENERIC_INDEX</name><operator pos:start="127:53" pos:end="127:53">)</operator> <operator pos:start="127:55" pos:end="127:56">&amp;&amp;</operator>

            <name pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:19">out_pkt</name><operator pos:start="129:20" pos:end="129:20">.</operator><name pos:start="129:21" pos:end="129:25">flags</name></name> <operator pos:start="129:27" pos:end="129:27">&amp;</operator> <name pos:start="129:29" pos:end="129:43">AV_PKT_FLAG_KEY</name></expr>)</condition> <block pos:start="129:46" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:55">

            <expr_stmt pos:start="131:13" pos:end="131:42"><expr pos:start="131:13" pos:end="131:41"><call pos:start="131:13" pos:end="131:41"><name pos:start="131:13" pos:end="131:27">ff_reduce_index</name><argument_list pos:start="131:28" pos:end="131:41">(<argument pos:start="131:29" pos:end="131:29"><expr pos:start="131:29" pos:end="131:29"><name pos:start="131:29" pos:end="131:29">s</name></expr></argument>, <argument pos:start="131:32" pos:end="131:40"><expr pos:start="131:32" pos:end="131:40"><name pos:start="131:32" pos:end="131:40"><name pos:start="131:32" pos:end="131:33">st</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:40">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="135:55"><expr pos:start="133:13" pos:end="135:54"><call pos:start="133:13" pos:end="135:54"><name pos:start="133:13" pos:end="133:30">av_add_index_entry</name><argument_list pos:start="133:31" pos:end="135:54">(<argument pos:start="133:32" pos:end="133:33"><expr pos:start="133:32" pos:end="133:33"><name pos:start="133:32" pos:end="133:33">st</name></expr></argument>, <argument pos:start="133:36" pos:end="133:59"><expr pos:start="133:36" pos:end="133:59"><name pos:start="133:36" pos:end="133:59"><name pos:start="133:36" pos:end="133:37">st</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:45">parser</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:59">frame_offset</name></name></expr></argument>, <argument pos:start="133:62" pos:end="133:72"><expr pos:start="133:62" pos:end="133:72"><name pos:start="133:62" pos:end="133:72"><name pos:start="133:62" pos:end="133:68">out_pkt</name><operator pos:start="133:69" pos:end="133:69">.</operator><name pos:start="133:70" pos:end="133:72">dts</name></name></expr></argument>,

                               <argument pos:start="135:32" pos:end="135:32"><expr pos:start="135:32" pos:end="135:32"><literal type="number" pos:start="135:32" pos:end="135:32">0</literal></expr></argument>, <argument pos:start="135:35" pos:end="135:35"><expr pos:start="135:35" pos:end="135:35"><literal type="number" pos:start="135:35" pos:end="135:35">0</literal></expr></argument>, <argument pos:start="135:38" pos:end="135:53"><expr pos:start="135:38" pos:end="135:53"><name pos:start="135:38" pos:end="135:53">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:67">(<expr pos:start="141:13" pos:end="141:66"><name pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:19">out_pkt</name><operator pos:start="141:20" pos:end="141:20">.</operator><name pos:start="141:21" pos:end="141:24">data</name></name> <operator pos:start="141:26" pos:end="141:27">==</operator> <name pos:start="141:29" pos:end="141:37"><name pos:start="141:29" pos:end="141:31">pkt</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:37">data</name></name> <operator pos:start="141:39" pos:end="141:40">&amp;&amp;</operator> <name pos:start="141:42" pos:end="141:53"><name pos:start="141:42" pos:end="141:48">out_pkt</name><operator pos:start="141:49" pos:end="141:49">.</operator><name pos:start="141:50" pos:end="141:53">size</name></name> <operator pos:start="141:55" pos:end="141:56">==</operator> <name pos:start="141:58" pos:end="141:66"><name pos:start="141:58" pos:end="141:60">pkt</name><operator pos:start="141:61" pos:end="141:62">-&gt;</operator><name pos:start="141:63" pos:end="141:66">size</name></name></expr>)</condition> <block pos:start="141:69" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:31">

            <expr_stmt pos:start="143:13" pos:end="143:35"><expr pos:start="143:13" pos:end="143:34"><name pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:19">out_pkt</name><operator pos:start="143:20" pos:end="143:20">.</operator><name pos:start="143:21" pos:end="143:23">buf</name></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <name pos:start="143:27" pos:end="143:34"><name pos:start="143:27" pos:end="143:29">pkt</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:34">buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:31"><expr pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:15">pkt</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:20">buf</name></name>    <operator pos:start="145:25" pos:end="145:25">=</operator> <name pos:start="145:27" pos:end="145:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="151:22"><if pos:start="149:9" pos:end="151:22">if <condition pos:start="149:12" pos:end="149:48">(<expr pos:start="149:13" pos:end="149:47"><operator pos:start="149:13" pos:end="149:13">(</operator><name pos:start="149:14" pos:end="149:16">ret</name> <operator pos:start="149:18" pos:end="149:18">=</operator> <call pos:start="149:20" pos:end="149:42"><name pos:start="149:20" pos:end="149:32">av_dup_packet</name><argument_list pos:start="149:33" pos:end="149:42">(<argument pos:start="149:34" pos:end="149:41"><expr pos:start="149:34" pos:end="149:41"><operator pos:start="149:34" pos:end="149:34">&amp;</operator><name pos:start="149:35" pos:end="149:41">out_pkt</name></expr></argument>)</argument_list></call><operator pos:start="149:43" pos:end="149:43">)</operator> <operator pos:start="149:45" pos:end="149:45">&lt;</operator> <literal type="number" pos:start="149:47" pos:end="149:47">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:22"><block_content pos:start="151:13" pos:end="151:22">

            <goto pos:start="151:13" pos:end="151:22">goto <name pos:start="151:18" pos:end="151:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="163:9"><if pos:start="155:9" pos:end="163:9">if <condition pos:start="155:12" pos:end="155:95">(<expr pos:start="155:13" pos:end="155:94"><operator pos:start="155:13" pos:end="155:13">!</operator><call pos:start="155:14" pos:end="155:94"><name pos:start="155:14" pos:end="155:26">add_to_pktbuf</name><argument_list pos:start="155:27" pos:end="155:94">(<argument pos:start="155:28" pos:end="155:52"><expr pos:start="155:28" pos:end="155:52"><operator pos:start="155:28" pos:end="155:28">&amp;</operator><name pos:start="155:29" pos:end="155:52"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:39">internal</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:52">parse_queue</name></name></expr></argument>, <argument pos:start="155:55" pos:end="155:62"><expr pos:start="155:55" pos:end="155:62"><operator pos:start="155:55" pos:end="155:55">&amp;</operator><name pos:start="155:56" pos:end="155:62">out_pkt</name></expr></argument>, <argument pos:start="155:65" pos:end="155:93"><expr pos:start="155:65" pos:end="155:93"><operator pos:start="155:65" pos:end="155:65">&amp;</operator><name pos:start="155:66" pos:end="155:93"><name pos:start="155:66" pos:end="155:66">s</name><operator pos:start="155:67" pos:end="155:68">-&gt;</operator><name pos:start="155:69" pos:end="155:76">internal</name><operator pos:start="155:77" pos:end="155:78">-&gt;</operator><name pos:start="155:79" pos:end="155:93">parse_queue_end</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:97" pos:end="163:9">{<block_content pos:start="157:13" pos:end="161:22">

            <expr_stmt pos:start="157:13" pos:end="157:38"><expr pos:start="157:13" pos:end="157:37"><call pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:27">av_packet_unref</name><argument_list pos:start="157:28" pos:end="157:37">(<argument pos:start="157:29" pos:end="157:36"><expr pos:start="157:29" pos:end="157:36"><operator pos:start="157:29" pos:end="157:29">&amp;</operator><name pos:start="157:30" pos:end="157:36">out_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:34"><expr pos:start="159:13" pos:end="159:33"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <call pos:start="159:19" pos:end="159:33"><name pos:start="159:19" pos:end="159:25">AVERROR</name><argument_list pos:start="159:26" pos:end="159:33">(<argument pos:start="159:27" pos:end="159:32"><expr pos:start="159:27" pos:end="159:32"><name pos:start="159:27" pos:end="159:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="161:13" pos:end="161:22">goto <name pos:start="161:18" pos:end="161:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="169:5" pos:end="169:56">/* end of the stream =&gt; close and free the parser */</comment>

    <if_stmt pos:start="171:5" pos:end="177:5"><if pos:start="171:5" pos:end="177:5">if <condition pos:start="171:8" pos:end="171:26">(<expr pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:11">pkt</name> <operator pos:start="171:13" pos:end="171:14">==</operator> <operator pos:start="171:16" pos:end="171:16">&amp;</operator><name pos:start="171:17" pos:end="171:25">flush_pkt</name></expr>)</condition> <block pos:start="171:28" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:26">

        <expr_stmt pos:start="173:9" pos:end="173:36"><expr pos:start="173:9" pos:end="173:35"><call pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:23">av_parser_close</name><argument_list pos:start="173:24" pos:end="173:35">(<argument pos:start="173:25" pos:end="173:34"><expr pos:start="173:25" pos:end="173:34"><name pos:start="173:25" pos:end="173:34"><name pos:start="173:25" pos:end="173:26">st</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:34">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:26"><expr pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:10">st</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:18">parser</name></name> <operator pos:start="175:20" pos:end="175:20">=</operator> <name pos:start="175:22" pos:end="175:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="181:1" pos:end="181:5"><name pos:start="181:1" pos:end="181:4">fail</name>:</label>

    <expr_stmt pos:start="183:5" pos:end="183:25"><expr pos:start="183:5" pos:end="183:24"><call pos:start="183:5" pos:end="183:24"><name pos:start="183:5" pos:end="183:19">av_packet_unref</name><argument_list pos:start="183:20" pos:end="183:24">(<argument pos:start="183:21" pos:end="183:23"><expr pos:start="183:21" pos:end="183:23"><name pos:start="183:21" pos:end="183:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="185:5" pos:end="185:15">return <expr pos:start="185:12" pos:end="185:14"><name pos:start="185:12" pos:end="185:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
