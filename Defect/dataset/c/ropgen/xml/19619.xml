<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19619.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:45">(<argument pos:start="1:32" pos:end="1:48">CPUCRISState *env</argument>, <argument pos:start="1:51" pos:end="1:70">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:44">int search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="511:1">{<block_content pos:start="7:5" pos:end="510:0">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint16_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:25">insn_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">j</name></decl>, <decl pos:start="13:12" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:23">DisasContext</name></name></type> <name pos:start="15:25" pos:end="15:27">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:23">DisasContext</name></name> <modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:27">dc</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:34">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:28">next_page_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">target_ulong</name></type> <name pos:start="21:18" pos:end="21:20">npc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><call pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:25">qemu_log_try_set_file</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:32"><expr pos:start="29:27" pos:end="29:32"><name pos:start="29:27" pos:end="29:32">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">pregs</name><index pos:start="33:19" pos:end="33:25">[<expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">PR_VR</name></expr>]</index></name> <operator pos:start="33:27" pos:end="33:28">==</operator> <literal type="number" pos:start="33:30" pos:end="33:31">32</literal></expr>)</condition> <block pos:start="33:34" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:33">

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:10">dc</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:19">decoder</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:37">crisv32_decoder</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:10">dc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:28">clear_locked_irq</name></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:33">

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:10">dc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">decoder</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:37">crisv10_decoder</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:10">dc</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:28">clear_locked_irq</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="53:7">/* Odd PC indicates that branch is rexecuting due to exception in the

     * delayslot, like in real hw.

     */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:12">pc_start</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:21"><name pos:start="55:16" pos:end="55:17">tb</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:21">pc</name></name> <operator pos:start="55:23" pos:end="55:23">&amp;</operator> <operator pos:start="55:25" pos:end="55:25">~</operator><literal type="number" pos:start="55:26" pos:end="55:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:11">env</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:17">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:16"><expr pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:10">tb</name></name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:15">gen_opc_end</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:37"><name pos:start="63:19" pos:end="63:25">tcg_ctx</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:37">gen_opc_buf</name></name> <operator pos:start="63:39" pos:end="63:39">+</operator> <name pos:start="63:41" pos:end="63:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:28"><expr pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:6">dc</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:14">is_jmp</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:6">dc</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:11">ppc</name></name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:22">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:10"><name pos:start="71:5" pos:end="71:6">dc</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:10">pc</name></name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:6">dc</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:26">singlestep_enabled</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:52"><name pos:start="73:30" pos:end="73:32">env</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:52">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:6">dc</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:22">flags_uptodate</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:6">dc</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:19">flagx_known</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:6">dc</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:15">flags_x</name></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:27"><name pos:start="79:19" pos:end="79:20">tb</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">flags</name></name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <name pos:start="79:31" pos:end="79:36">X_FLAG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:26"><expr pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:6">dc</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:21">cc_x_uptodate</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:20"><expr pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:6">dc</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:15">cc_mask</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:6">dc</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:17">update_cc</name></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <literal type="number" pos:start="85:21" pos:end="85:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:6">dc</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:20">clear_prefix</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:42"><expr pos:start="91:5" pos:end="91:41"><call pos:start="91:5" pos:end="91:41"><name pos:start="91:5" pos:end="91:21">cris_update_cc_op</name><argument_list pos:start="91:22" pos:end="91:41">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">dc</name></expr></argument>, <argument pos:start="91:27" pos:end="91:37"><expr pos:start="91:27" pos:end="91:37"><name pos:start="91:27" pos:end="91:37">CC_OP_FLAGS</name></expr></argument>, <argument pos:start="91:40" pos:end="91:40"><expr pos:start="91:40" pos:end="91:40"><literal type="number" pos:start="91:40" pos:end="91:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:30"><expr pos:start="93:5" pos:end="93:29"><name pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:6">dc</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:24">cc_size_uptodate</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <operator pos:start="93:28" pos:end="93:28">-</operator><literal type="number" pos:start="93:29" pos:end="93:29">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:27">/* Decode TB flags.  */</comment>

    <expr_stmt pos:start="99:5" pos:end="101:34"><expr pos:start="99:5" pos:end="101:33"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:6">dc</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:16">tb_flags</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:21">tb</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:28">flags</name></name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <operator pos:start="99:32" pos:end="99:32">(</operator><name pos:start="99:33" pos:end="99:38">S_FLAG</name> <operator pos:start="99:40" pos:end="99:40">|</operator> <name pos:start="99:42" pos:end="99:47">P_FLAG</name> <operator pos:start="99:49" pos:end="99:49">|</operator> <name pos:start="99:51" pos:end="99:56">U_FLAG</name> \

            <operator pos:start="101:13" pos:end="101:13">|</operator> <name pos:start="101:15" pos:end="101:20">X_FLAG</name> <operator pos:start="101:22" pos:end="101:22">|</operator> <name pos:start="101:24" pos:end="101:32">PFIX_FLAG</name><operator pos:start="101:33" pos:end="101:33">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:43"><expr pos:start="103:5" pos:end="103:42"><name pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:6">dc</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:22">delayed_branch</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <operator pos:start="103:26" pos:end="103:26">!</operator><operator pos:start="103:27" pos:end="103:27">!</operator><operator pos:start="103:28" pos:end="103:28">(</operator><name pos:start="103:29" pos:end="103:37"><name pos:start="103:29" pos:end="103:30">tb</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:37">flags</name></name> <operator pos:start="103:39" pos:end="103:39">&amp;</operator> <literal type="number" pos:start="103:41" pos:end="103:41">7</literal><operator pos:start="103:42" pos:end="103:42">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:27">(<expr pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:10">dc</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:26">delayed_branch</name></name></expr>)</condition> <block pos:start="105:29" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:31">

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:10">dc</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:15">jmp</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:30">JMP_INDIRECT</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="113:5">else <block pos:start="109:12" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:28">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:10">dc</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:15">jmp</name></name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:27">JMP_NOJMP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:29"><expr pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:6">dc</name><operator pos:start="117:7" pos:end="117:8">-&gt;</operator><name pos:start="117:9" pos:end="117:24">cpustate_changed</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="163:5"><if pos:start="121:5" pos:end="163:5">if <condition pos:start="121:8" pos:end="121:46">(<expr pos:start="121:9" pos:end="121:45"><call pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:26">qemu_loglevel_mask</name><argument_list pos:start="121:27" pos:end="121:45">(<argument pos:start="121:28" pos:end="121:44"><expr pos:start="121:28" pos:end="121:44"><name pos:start="121:28" pos:end="121:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:48" pos:end="163:5">{<block_content pos:start="123:9" pos:end="161:54">

        <expr_stmt pos:start="123:9" pos:end="157:46"><expr pos:start="123:9" pos:end="157:45"><call pos:start="123:9" pos:end="157:45"><name pos:start="123:9" pos:end="123:16">qemu_log</name><argument_list pos:start="123:17" pos:end="157:45">(

                <argument pos:start="125:17" pos:end="135:31"><expr pos:start="125:17" pos:end="135:31"><literal type="string" pos:start="125:17" pos:end="125:40">"srch=%d pc=%x %x flg=%"</literal> <name pos:start="125:42" pos:end="125:47">PRIx64</name> <literal type="string" pos:start="125:49" pos:end="125:71">" bt=%x ds=%u ccs=%x\n"</literal>

                <literal type="string" pos:start="127:17" pos:end="127:33">"pid=%x usp=%x\n"</literal>

                <literal type="string" pos:start="129:17" pos:end="129:31">"%x.%x.%x.%x\n"</literal>

                <literal type="string" pos:start="131:17" pos:end="131:31">"%x.%x.%x.%x\n"</literal>

                <literal type="string" pos:start="133:17" pos:end="133:31">"%x.%x.%x.%x\n"</literal>

                <literal type="string" pos:start="135:17" pos:end="135:31">"%x.%x.%x.%x\n"</literal></expr></argument>,

                <argument pos:start="137:17" pos:end="137:25"><expr pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:25">search_pc</name></expr></argument>, <argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:29">dc</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:33">pc</name></name></expr></argument>, <argument pos:start="137:36" pos:end="137:42"><expr pos:start="137:36" pos:end="137:42"><name pos:start="137:36" pos:end="137:42"><name pos:start="137:36" pos:end="137:37">dc</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:42">ppc</name></name></expr></argument>,

                <argument pos:start="139:17" pos:end="139:35"><expr pos:start="139:17" pos:end="139:35"><operator pos:start="139:17" pos:end="139:17">(</operator><name pos:start="139:18" pos:end="139:25">uint64_t</name><operator pos:start="139:26" pos:end="139:26">)</operator><name pos:start="139:27" pos:end="139:35"><name pos:start="139:27" pos:end="139:28">tb</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:35">flags</name></name></expr></argument>,

                <argument pos:start="141:17" pos:end="141:28"><expr pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:19">env</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:28">btarget</name></name></expr></argument>, <argument pos:start="141:31" pos:end="141:53"><expr pos:start="141:31" pos:end="141:53"><operator pos:start="141:31" pos:end="141:31">(</operator><name pos:start="141:32" pos:end="141:39">unsigned</name><operator pos:start="141:40" pos:end="141:40">)</operator><name pos:start="141:41" pos:end="141:49"><name pos:start="141:41" pos:end="141:42">tb</name><operator pos:start="141:43" pos:end="141:44">-&gt;</operator><name pos:start="141:45" pos:end="141:49">flags</name></name> <operator pos:start="141:51" pos:end="141:51">&amp;</operator> <literal type="number" pos:start="141:53" pos:end="141:53">7</literal></expr></argument>,

                <argument pos:start="143:17" pos:end="143:34"><expr pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:19">env</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:26">pregs</name><index pos:start="143:27" pos:end="143:34">[<expr pos:start="143:28" pos:end="143:33"><name pos:start="143:28" pos:end="143:33">PR_CCS</name></expr>]</index></name></expr></argument>,

                <argument pos:start="145:17" pos:end="145:34"><expr pos:start="145:17" pos:end="145:34"><name pos:start="145:17" pos:end="145:34"><name pos:start="145:17" pos:end="145:19">env</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:26">pregs</name><index pos:start="145:27" pos:end="145:34">[<expr pos:start="145:28" pos:end="145:33"><name pos:start="145:28" pos:end="145:33">PR_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="145:37" pos:end="145:54"><expr pos:start="145:37" pos:end="145:54"><name pos:start="145:37" pos:end="145:54"><name pos:start="145:37" pos:end="145:39">env</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:46">pregs</name><index pos:start="145:47" pos:end="145:54">[<expr pos:start="145:48" pos:end="145:53"><name pos:start="145:48" pos:end="145:53">PR_USP</name></expr>]</index></name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:28"><expr pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:19">env</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:25">regs</name><index pos:start="147:26" pos:end="147:28">[<expr pos:start="147:27" pos:end="147:27"><literal type="number" pos:start="147:27" pos:end="147:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:31" pos:end="147:42"><expr pos:start="147:31" pos:end="147:42"><name pos:start="147:31" pos:end="147:42"><name pos:start="147:31" pos:end="147:33">env</name><operator pos:start="147:34" pos:end="147:35">-&gt;</operator><name pos:start="147:36" pos:end="147:39">regs</name><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:45" pos:end="147:56"><expr pos:start="147:45" pos:end="147:56"><name pos:start="147:45" pos:end="147:56"><name pos:start="147:45" pos:end="147:47">env</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:53">regs</name><index pos:start="147:54" pos:end="147:56">[<expr pos:start="147:55" pos:end="147:55"><literal type="number" pos:start="147:55" pos:end="147:55">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:59" pos:end="147:70"><expr pos:start="147:59" pos:end="147:70"><name pos:start="147:59" pos:end="147:70"><name pos:start="147:59" pos:end="147:61">env</name><operator pos:start="147:62" pos:end="147:63">-&gt;</operator><name pos:start="147:64" pos:end="147:67">regs</name><index pos:start="147:68" pos:end="147:70">[<expr pos:start="147:69" pos:end="147:69"><literal type="number" pos:start="147:69" pos:end="147:69">3</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="149:17" pos:end="149:28"><expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:19">env</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:25">regs</name><index pos:start="149:26" pos:end="149:28">[<expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:31" pos:end="149:42"><expr pos:start="149:31" pos:end="149:42"><name pos:start="149:31" pos:end="149:42"><name pos:start="149:31" pos:end="149:33">env</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:39">regs</name><index pos:start="149:40" pos:end="149:42">[<expr pos:start="149:41" pos:end="149:41"><literal type="number" pos:start="149:41" pos:end="149:41">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:45" pos:end="149:56"><expr pos:start="149:45" pos:end="149:56"><name pos:start="149:45" pos:end="149:56"><name pos:start="149:45" pos:end="149:47">env</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:53">regs</name><index pos:start="149:54" pos:end="149:56">[<expr pos:start="149:55" pos:end="149:55"><literal type="number" pos:start="149:55" pos:end="149:55">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:59" pos:end="149:70"><expr pos:start="149:59" pos:end="149:70"><name pos:start="149:59" pos:end="149:70"><name pos:start="149:59" pos:end="149:61">env</name><operator pos:start="149:62" pos:end="149:63">-&gt;</operator><name pos:start="149:64" pos:end="149:67">regs</name><index pos:start="149:68" pos:end="149:70">[<expr pos:start="149:69" pos:end="149:69"><literal type="number" pos:start="149:69" pos:end="149:69">7</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="151:17" pos:end="151:28"><expr pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:19">env</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:25">regs</name><index pos:start="151:26" pos:end="151:28">[<expr pos:start="151:27" pos:end="151:27"><literal type="number" pos:start="151:27" pos:end="151:27">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:31" pos:end="151:42"><expr pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:33">env</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:39">regs</name><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><literal type="number" pos:start="151:41" pos:end="151:41">9</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="153:17" pos:end="153:29"><expr pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:19">env</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">regs</name><index pos:start="153:26" pos:end="153:29">[<expr pos:start="153:27" pos:end="153:28"><literal type="number" pos:start="153:27" pos:end="153:28">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:32" pos:end="153:44"><expr pos:start="153:32" pos:end="153:44"><name pos:start="153:32" pos:end="153:44"><name pos:start="153:32" pos:end="153:34">env</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:40">regs</name><index pos:start="153:41" pos:end="153:44">[<expr pos:start="153:42" pos:end="153:43"><literal type="number" pos:start="153:42" pos:end="153:43">11</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="155:17" pos:end="155:29"><expr pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:19">env</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:25">regs</name><index pos:start="155:26" pos:end="155:29">[<expr pos:start="155:27" pos:end="155:28"><literal type="number" pos:start="155:27" pos:end="155:28">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:32" pos:end="155:44"><expr pos:start="155:32" pos:end="155:44"><name pos:start="155:32" pos:end="155:44"><name pos:start="155:32" pos:end="155:34">env</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:40">regs</name><index pos:start="155:41" pos:end="155:44">[<expr pos:start="155:42" pos:end="155:43"><literal type="number" pos:start="155:42" pos:end="155:43">13</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="157:17" pos:end="157:29"><expr pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:19">env</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:25">regs</name><index pos:start="157:26" pos:end="157:29">[<expr pos:start="157:27" pos:end="157:28"><literal type="number" pos:start="157:27" pos:end="157:28">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:32" pos:end="157:44"><expr pos:start="157:32" pos:end="157:44"><name pos:start="157:32" pos:end="157:44"><name pos:start="157:32" pos:end="157:34">env</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:40">regs</name><index pos:start="157:41" pos:end="157:44">[<expr pos:start="157:42" pos:end="157:43"><literal type="number" pos:start="157:42" pos:end="157:43">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:37"><expr pos:start="159:9" pos:end="159:36"><call pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:16">qemu_log</name><argument_list pos:start="159:17" pos:end="159:36">(<argument pos:start="159:18" pos:end="159:35"><expr pos:start="159:18" pos:end="159:35"><literal type="string" pos:start="159:18" pos:end="159:35">"--------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:54"><expr pos:start="161:9" pos:end="161:53"><call pos:start="161:9" pos:end="161:53"><name pos:start="161:9" pos:end="161:16">qemu_log</name><argument_list pos:start="161:17" pos:end="161:53">(<argument pos:start="161:18" pos:end="161:27"><expr pos:start="161:18" pos:end="161:27"><literal type="string" pos:start="161:18" pos:end="161:27">"IN: %s\n"</literal></expr></argument>, <argument pos:start="161:30" pos:end="161:52"><expr pos:start="161:30" pos:end="161:52"><call pos:start="161:30" pos:end="161:52"><name pos:start="161:30" pos:end="161:42">lookup_symbol</name><argument_list pos:start="161:43" pos:end="161:52">(<argument pos:start="161:44" pos:end="161:51"><expr pos:start="161:44" pos:end="161:51"><name pos:start="161:44" pos:end="161:51">pc_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:71"><expr pos:start="167:5" pos:end="167:70"><name pos:start="167:5" pos:end="167:19">next_page_start</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <operator pos:start="167:23" pos:end="167:23">(</operator><name pos:start="167:24" pos:end="167:31">pc_start</name> <operator pos:start="167:33" pos:end="167:33">&amp;</operator> <name pos:start="167:35" pos:end="167:50">TARGET_PAGE_MASK</name><operator pos:start="167:51" pos:end="167:51">)</operator> <operator pos:start="167:53" pos:end="167:53">+</operator> <name pos:start="167:55" pos:end="167:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:12"><expr pos:start="169:5" pos:end="169:11"><name pos:start="169:5" pos:end="169:6">lj</name> <operator pos:start="169:8" pos:end="169:8">=</operator> <operator pos:start="169:10" pos:end="169:10">-</operator><literal type="number" pos:start="169:11" pos:end="169:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:18"><expr pos:start="171:5" pos:end="171:17"><name pos:start="171:5" pos:end="171:13">num_insns</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <literal type="number" pos:start="171:17" pos:end="171:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:43"><expr pos:start="173:5" pos:end="173:42"><name pos:start="173:5" pos:end="173:13">max_insns</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">tb</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">cflags</name></name> <operator pos:start="173:28" pos:end="173:28">&amp;</operator> <name pos:start="173:30" pos:end="173:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="175:5" pos:end="179:5"><if pos:start="175:5" pos:end="179:5">if <condition pos:start="175:8" pos:end="175:23">(<expr pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:17">max_insns</name> <operator pos:start="175:19" pos:end="175:20">==</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr>)</condition> <block pos:start="175:25" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:34">

        <expr_stmt pos:start="177:9" pos:end="177:34"><expr pos:start="177:9" pos:end="177:33"><name pos:start="177:9" pos:end="177:17">max_insns</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <name pos:start="177:21" pos:end="177:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:23"><expr pos:start="183:5" pos:end="183:22"><call pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:20">gen_icount_start</name><argument_list pos:start="183:21" pos:end="183:22">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="185:5" pos:end="367:38">do <block pos:start="185:8" pos:end="359:5">{<block_content pos:start="187:9" pos:end="357:9">

        <expr_stmt pos:start="187:9" pos:end="187:34"><expr pos:start="187:9" pos:end="187:33"><call pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:24">check_breakpoint</name><argument_list pos:start="187:25" pos:end="187:33">(<argument pos:start="187:26" pos:end="187:28"><expr pos:start="187:26" pos:end="187:28"><name pos:start="187:26" pos:end="187:28">env</name></expr></argument>, <argument pos:start="187:31" pos:end="187:32"><expr pos:start="187:31" pos:end="187:32"><name pos:start="187:31" pos:end="187:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="191:9" pos:end="221:9"><if pos:start="191:9" pos:end="221:9">if <condition pos:start="191:12" pos:end="191:22">(<expr pos:start="191:13" pos:end="191:21"><name pos:start="191:13" pos:end="191:21">search_pc</name></expr>)</condition> <block pos:start="191:24" pos:end="221:9">{<block_content pos:start="193:13" pos:end="219:51">

            <expr_stmt pos:start="193:13" pos:end="193:58"><expr pos:start="193:13" pos:end="193:57"><name pos:start="193:13" pos:end="193:13">j</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <name pos:start="193:17" pos:end="193:35"><name pos:start="193:17" pos:end="193:23">tcg_ctx</name><operator pos:start="193:24" pos:end="193:24">.</operator><name pos:start="193:25" pos:end="193:35">gen_opc_ptr</name></name> <operator pos:start="193:37" pos:end="193:37">-</operator> <name pos:start="193:39" pos:end="193:57"><name pos:start="193:39" pos:end="193:45">tcg_ctx</name><operator pos:start="193:46" pos:end="193:46">.</operator><name pos:start="193:47" pos:end="193:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="205:13"><if pos:start="195:13" pos:end="205:13">if <condition pos:start="195:16" pos:end="195:23">(<expr pos:start="195:17" pos:end="195:22"><name pos:start="195:17" pos:end="195:18">lj</name> <operator pos:start="195:20" pos:end="195:20">&lt;</operator> <name pos:start="195:22" pos:end="195:22">j</name></expr>)</condition> <block pos:start="195:25" pos:end="205:13">{<block_content pos:start="197:17" pos:end="203:17">

                <expr_stmt pos:start="197:17" pos:end="197:21"><expr pos:start="197:17" pos:end="197:20"><name pos:start="197:17" pos:end="197:18">lj</name><operator pos:start="197:19" pos:end="197:20">++</operator></expr>;</expr_stmt>

                <while pos:start="199:17" pos:end="203:17">while <condition pos:start="199:23" pos:end="199:30">(<expr pos:start="199:24" pos:end="199:29"><name pos:start="199:24" pos:end="199:25">lj</name> <operator pos:start="199:27" pos:end="199:27">&lt;</operator> <name pos:start="199:29" pos:end="199:29">j</name></expr>)</condition> <block pos:start="199:32" pos:end="203:17">{<block_content pos:start="201:21" pos:end="201:58">

                    <expr_stmt pos:start="201:21" pos:end="201:58"><expr pos:start="201:21" pos:end="201:57"><name pos:start="201:21" pos:end="201:53"><name pos:start="201:21" pos:end="201:27">tcg_ctx</name><operator pos:start="201:28" pos:end="201:28">.</operator><name pos:start="201:29" pos:end="201:47">gen_opc_instr_start</name><index pos:start="201:48" pos:end="201:53">[<expr pos:start="201:49" pos:end="201:52"><name pos:start="201:49" pos:end="201:50">lj</name><operator pos:start="201:51" pos:end="201:52">++</operator></expr>]</index></name> <operator pos:start="201:55" pos:end="201:55">=</operator> <literal type="number" pos:start="201:57" pos:end="201:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="207:13" pos:end="215:13"><if pos:start="207:13" pos:end="211:13">if <condition pos:start="207:16" pos:end="207:40">(<expr pos:start="207:17" pos:end="207:39"><name pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:18">dc</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:34">delayed_branch</name></name> <operator pos:start="207:36" pos:end="207:37">==</operator> <literal type="number" pos:start="207:39" pos:end="207:39">1</literal></expr>)</condition> <block pos:start="207:42" pos:end="211:13">{<block_content pos:start="209:17" pos:end="209:53">

                <expr_stmt pos:start="209:17" pos:end="209:53"><expr pos:start="209:17" pos:end="209:52"><name pos:start="209:17" pos:end="209:38"><name pos:start="209:17" pos:end="209:23">tcg_ctx</name><operator pos:start="209:24" pos:end="209:24">.</operator><name pos:start="209:25" pos:end="209:34">gen_opc_pc</name><index pos:start="209:35" pos:end="209:38">[<expr pos:start="209:36" pos:end="209:37"><name pos:start="209:36" pos:end="209:37">lj</name></expr>]</index></name> <operator pos:start="209:40" pos:end="209:40">=</operator> <name pos:start="209:42" pos:end="209:48"><name pos:start="209:42" pos:end="209:43">dc</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:48">ppc</name></name> <operator pos:start="209:50" pos:end="209:50">|</operator> <literal type="number" pos:start="209:52" pos:end="209:52">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="211:15" pos:end="215:13">else <block pos:start="211:20" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:48">

                <expr_stmt pos:start="213:17" pos:end="213:48"><expr pos:start="213:17" pos:end="213:47"><name pos:start="213:17" pos:end="213:38"><name pos:start="213:17" pos:end="213:23">tcg_ctx</name><operator pos:start="213:24" pos:end="213:24">.</operator><name pos:start="213:25" pos:end="213:34">gen_opc_pc</name><index pos:start="213:35" pos:end="213:38">[<expr pos:start="213:36" pos:end="213:37"><name pos:start="213:36" pos:end="213:37">lj</name></expr>]</index></name> <operator pos:start="213:40" pos:end="213:40">=</operator> <name pos:start="213:42" pos:end="213:47"><name pos:start="213:42" pos:end="213:43">dc</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:47">pc</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:43"><name pos:start="217:13" pos:end="217:19">tcg_ctx</name><operator pos:start="217:20" pos:end="217:20">.</operator><name pos:start="217:21" pos:end="217:39">gen_opc_instr_start</name><index pos:start="217:40" pos:end="217:43">[<expr pos:start="217:41" pos:end="217:42"><name pos:start="217:41" pos:end="217:42">lj</name></expr>]</index></name> <operator pos:start="217:45" pos:end="217:45">=</operator> <literal type="number" pos:start="217:47" pos:end="217:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:51"><expr pos:start="219:13" pos:end="219:50"><name pos:start="219:13" pos:end="219:38"><name pos:start="219:13" pos:end="219:19">tcg_ctx</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:34">gen_opc_icount</name><index pos:start="219:35" pos:end="219:38">[<expr pos:start="219:36" pos:end="219:37"><name pos:start="219:36" pos:end="219:37">lj</name></expr>]</index></name> <operator pos:start="219:40" pos:end="219:40">=</operator> <name pos:start="219:42" pos:end="219:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="225:9" pos:end="225:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="227:9" pos:end="227:36"><expr pos:start="227:9" pos:end="227:35"><call pos:start="227:9" pos:end="227:35"><name pos:start="227:9" pos:end="227:15">LOG_DIS</name><argument_list pos:start="227:16" pos:end="227:35">(<argument pos:start="227:17" pos:end="227:26"><expr pos:start="227:17" pos:end="227:26"><literal type="string" pos:start="227:17" pos:end="227:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="227:29" pos:end="227:34"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:30">dc</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="231:9" pos:end="235:9"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:68">(<expr pos:start="231:13" pos:end="231:67"><name pos:start="231:13" pos:end="231:21">num_insns</name> <operator pos:start="231:23" pos:end="231:23">+</operator> <literal type="number" pos:start="231:25" pos:end="231:25">1</literal> <operator pos:start="231:27" pos:end="231:28">==</operator> <name pos:start="231:30" pos:end="231:38">max_insns</name> <operator pos:start="231:40" pos:end="231:41">&amp;&amp;</operator> <operator pos:start="231:43" pos:end="231:43">(</operator><name pos:start="231:44" pos:end="231:53"><name pos:start="231:44" pos:end="231:45">tb</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:53">cflags</name></name> <operator pos:start="231:55" pos:end="231:55">&amp;</operator> <name pos:start="231:57" pos:end="231:66">CF_LAST_IO</name><operator pos:start="231:67" pos:end="231:67">)</operator></expr>)</condition> <block pos:start="231:70" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:27">

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><call pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:24">gen_io_start</name><argument_list pos:start="233:25" pos:end="233:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:24"><expr pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:19"><name pos:start="237:9" pos:end="237:10">dc</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:19">clear_x</name></name> <operator pos:start="237:21" pos:end="237:21">=</operator> <literal type="number" pos:start="237:23" pos:end="237:23">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="241:9" pos:end="241:40"><expr pos:start="241:9" pos:end="241:39"><name pos:start="241:9" pos:end="241:16">insn_len</name> <operator pos:start="241:18" pos:end="241:18">=</operator> <call pos:start="241:20" pos:end="241:39"><name pos:start="241:20" pos:end="241:30"><name pos:start="241:20" pos:end="241:21">dc</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:30">decoder</name></name><argument_list pos:start="241:31" pos:end="241:39">(<argument pos:start="241:32" pos:end="241:34"><expr pos:start="241:32" pos:end="241:34"><name pos:start="241:32" pos:end="241:34">env</name></expr></argument>, <argument pos:start="241:37" pos:end="241:38"><expr pos:start="241:37" pos:end="241:38"><name pos:start="241:37" pos:end="241:38">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:25"><expr pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:10">dc</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:15">ppc</name></name> <operator pos:start="243:17" pos:end="243:17">=</operator> <name pos:start="243:19" pos:end="243:24"><name pos:start="243:19" pos:end="243:20">dc</name><operator pos:start="243:21" pos:end="243:22">-&gt;</operator><name pos:start="243:23" pos:end="243:24">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:27"><expr pos:start="245:9" pos:end="245:26"><name pos:start="245:9" pos:end="245:14"><name pos:start="245:9" pos:end="245:10">dc</name><operator pos:start="245:11" pos:end="245:12">-&gt;</operator><name pos:start="245:13" pos:end="245:14">pc</name></name> <operator pos:start="245:16" pos:end="245:17">+=</operator> <name pos:start="245:19" pos:end="245:26">insn_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="251:9"><if pos:start="247:9" pos:end="251:9">if <condition pos:start="247:12" pos:end="247:24">(<expr pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:14">dc</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:23">clear_x</name></name></expr>)</condition> <block pos:start="247:26" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:34">

            <expr_stmt pos:start="249:13" pos:end="249:34"><expr pos:start="249:13" pos:end="249:33"><call pos:start="249:13" pos:end="249:33"><name pos:start="249:13" pos:end="249:29">cris_clear_x_flag</name><argument_list pos:start="249:30" pos:end="249:33">(<argument pos:start="249:31" pos:end="249:32"><expr pos:start="249:31" pos:end="249:32"><name pos:start="249:31" pos:end="249:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:20"><expr pos:start="255:9" pos:end="255:19"><name pos:start="255:9" pos:end="255:17">num_insns</name><operator pos:start="255:18" pos:end="255:19">++</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="257:9" pos:end="261:63">/* Check for delayed branches here. If we do it before

           actually generating any host code, the simulator will just

           loop doing nothing for on this program location.  */</comment>

        <if_stmt pos:start="263:9" pos:end="345:9"><if pos:start="263:9" pos:end="345:9">if <condition pos:start="263:12" pos:end="263:31">(<expr pos:start="263:13" pos:end="263:30"><name pos:start="263:13" pos:end="263:30"><name pos:start="263:13" pos:end="263:14">dc</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:30">delayed_branch</name></name></expr>)</condition> <block pos:start="263:33" pos:end="345:9">{<block_content pos:start="265:13" pos:end="343:13">

            <expr_stmt pos:start="265:13" pos:end="265:33"><expr pos:start="265:13" pos:end="265:32"><name pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:14">dc</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:30">delayed_branch</name></name><operator pos:start="265:31" pos:end="265:32">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="267:13" pos:end="343:13"><if pos:start="267:13" pos:end="343:13">if <condition pos:start="267:16" pos:end="267:40">(<expr pos:start="267:17" pos:end="267:39"><name pos:start="267:17" pos:end="267:34"><name pos:start="267:17" pos:end="267:18">dc</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:34">delayed_branch</name></name> <operator pos:start="267:36" pos:end="267:37">==</operator> <literal type="number" pos:start="267:39" pos:end="267:39">0</literal></expr>)</condition> <block pos:start="267:42" pos:end="343:13">{<block_content pos:start="269:17" pos:end="341:22">

                <if_stmt pos:start="269:17" pos:end="273:17"><if pos:start="269:17" pos:end="273:17">if <condition pos:start="269:20" pos:end="269:34">(<expr pos:start="269:21" pos:end="269:33"><name pos:start="269:21" pos:end="269:29"><name pos:start="269:21" pos:end="269:22">tb</name><operator pos:start="269:23" pos:end="269:24">-&gt;</operator><name pos:start="269:25" pos:end="269:29">flags</name></name> <operator pos:start="269:31" pos:end="269:31">&amp;</operator> <literal type="number" pos:start="269:33" pos:end="269:33">7</literal></expr>)</condition> <block pos:start="269:36" pos:end="273:17">{<block_content pos:start="271:21" pos:end="271:61">

                    <expr_stmt pos:start="271:21" pos:end="271:61"><expr pos:start="271:21" pos:end="271:60"><call pos:start="271:21" pos:end="271:60"><name pos:start="271:21" pos:end="271:36">t_gen_mov_env_TN</name><argument_list pos:start="271:37" pos:end="271:60">(<argument pos:start="271:38" pos:end="271:42"><expr pos:start="271:38" pos:end="271:42"><name pos:start="271:38" pos:end="271:42">dslot</name></expr></argument>, <argument pos:start="271:45" pos:end="271:59"><expr pos:start="271:45" pos:end="271:59"><call pos:start="271:45" pos:end="271:59"><name pos:start="271:45" pos:end="271:56">tcg_const_tl</name><argument_list pos:start="271:57" pos:end="271:59">(<argument pos:start="271:58" pos:end="271:58"><expr pos:start="271:58" pos:end="271:58"><literal type="number" pos:start="271:58" pos:end="271:58">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="275:17" pos:end="281:17"><if pos:start="275:17" pos:end="281:17">if <condition pos:start="275:20" pos:end="277:61">(<expr pos:start="275:21" pos:end="277:60"><name pos:start="275:21" pos:end="275:40"><name pos:start="275:21" pos:end="275:22">dc</name><operator pos:start="275:23" pos:end="275:24">-&gt;</operator><name pos:start="275:25" pos:end="275:40">cpustate_changed</name></name> <operator pos:start="275:42" pos:end="275:43">||</operator> <operator pos:start="275:45" pos:end="275:45">!</operator><name pos:start="275:46" pos:end="275:60"><name pos:start="275:46" pos:end="275:47">dc</name><operator pos:start="275:48" pos:end="275:49">-&gt;</operator><name pos:start="275:50" pos:end="275:60">flagx_known</name></name>

                    <operator pos:start="277:21" pos:end="277:22">||</operator> <operator pos:start="277:24" pos:end="277:24">(</operator><name pos:start="277:25" pos:end="277:35"><name pos:start="277:25" pos:end="277:26">dc</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:35">flags_x</name></name> <operator pos:start="277:37" pos:end="277:38">!=</operator> <operator pos:start="277:40" pos:end="277:40">(</operator><name pos:start="277:41" pos:end="277:49"><name pos:start="277:41" pos:end="277:42">tb</name><operator pos:start="277:43" pos:end="277:44">-&gt;</operator><name pos:start="277:45" pos:end="277:49">flags</name></name> <operator pos:start="277:51" pos:end="277:51">&amp;</operator> <name pos:start="277:53" pos:end="277:58">X_FLAG</name><operator pos:start="277:59" pos:end="277:59">)</operator><operator pos:start="277:60" pos:end="277:60">)</operator></expr>)</condition> <block pos:start="277:63" pos:end="281:17">{<block_content pos:start="279:21" pos:end="279:46">

                    <expr_stmt pos:start="279:21" pos:end="279:46"><expr pos:start="279:21" pos:end="279:45"><call pos:start="279:21" pos:end="279:45"><name pos:start="279:21" pos:end="279:41">cris_store_direct_jmp</name><argument_list pos:start="279:42" pos:end="279:45">(<argument pos:start="279:43" pos:end="279:44"><expr pos:start="279:43" pos:end="279:44"><name pos:start="279:43" pos:end="279:44">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="285:17" pos:end="291:17"><if pos:start="285:17" pos:end="291:17">if <condition pos:start="285:20" pos:end="285:41">(<expr pos:start="285:21" pos:end="285:40"><name pos:start="285:21" pos:end="285:40"><name pos:start="285:21" pos:end="285:22">dc</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:40">clear_locked_irq</name></name></expr>)</condition> <block pos:start="285:43" pos:end="291:17">{<block_content pos:start="287:21" pos:end="289:66">

                    <expr_stmt pos:start="287:21" pos:end="287:45"><expr pos:start="287:21" pos:end="287:44"><name pos:start="287:21" pos:end="287:40"><name pos:start="287:21" pos:end="287:22">dc</name><operator pos:start="287:23" pos:end="287:24">-&gt;</operator><name pos:start="287:25" pos:end="287:40">clear_locked_irq</name></name> <operator pos:start="287:42" pos:end="287:42">=</operator> <literal type="number" pos:start="287:44" pos:end="287:44">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:66"><expr pos:start="289:21" pos:end="289:65"><call pos:start="289:21" pos:end="289:65"><name pos:start="289:21" pos:end="289:36">t_gen_mov_env_TN</name><argument_list pos:start="289:37" pos:end="289:65">(<argument pos:start="289:38" pos:end="289:47"><expr pos:start="289:38" pos:end="289:47"><name pos:start="289:38" pos:end="289:47">locked_irq</name></expr></argument>, <argument pos:start="289:50" pos:end="289:64"><expr pos:start="289:50" pos:end="289:64"><call pos:start="289:50" pos:end="289:64"><name pos:start="289:50" pos:end="289:61">tcg_const_tl</name><argument_list pos:start="289:62" pos:end="289:64">(<argument pos:start="289:63" pos:end="289:63"><expr pos:start="289:63" pos:end="289:63"><literal type="number" pos:start="289:63" pos:end="289:63">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="295:17" pos:end="339:17"><if pos:start="295:17" pos:end="323:17">if <condition pos:start="295:20" pos:end="295:45">(<expr pos:start="295:21" pos:end="295:44"><name pos:start="295:21" pos:end="295:27"><name pos:start="295:21" pos:end="295:22">dc</name><operator pos:start="295:23" pos:end="295:24">-&gt;</operator><name pos:start="295:25" pos:end="295:27">jmp</name></name> <operator pos:start="295:29" pos:end="295:30">==</operator> <name pos:start="295:32" pos:end="295:44">JMP_DIRECT_CC</name></expr>)</condition> <block pos:start="295:47" pos:end="323:17">{<block_content pos:start="297:21" pos:end="321:40">

                    <decl_stmt pos:start="297:21" pos:end="297:27"><decl pos:start="297:21" pos:end="297:26"><type pos:start="297:21" pos:end="297:23"><name pos:start="297:21" pos:end="297:23">int</name></type> <name pos:start="297:25" pos:end="297:26">l1</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="301:21" pos:end="301:41"><expr pos:start="301:21" pos:end="301:40"><name pos:start="301:21" pos:end="301:22">l1</name> <operator pos:start="301:24" pos:end="301:24">=</operator> <call pos:start="301:26" pos:end="301:40"><name pos:start="301:26" pos:end="301:38">gen_new_label</name><argument_list pos:start="301:39" pos:end="301:40">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="303:21" pos:end="303:44"><expr pos:start="303:21" pos:end="303:43"><call pos:start="303:21" pos:end="303:43"><name pos:start="303:21" pos:end="303:39">cris_evaluate_flags</name><argument_list pos:start="303:40" pos:end="303:43">(<argument pos:start="303:41" pos:end="303:42"><expr pos:start="303:41" pos:end="303:42"><name pos:start="303:41" pos:end="303:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <comment type="block" pos:start="307:21" pos:end="307:43">/* Conditional jmp.  */</comment>

                    <expr_stmt pos:start="309:21" pos:end="311:50"><expr pos:start="309:21" pos:end="311:49"><call pos:start="309:21" pos:end="311:49"><name pos:start="309:21" pos:end="309:38">tcg_gen_brcondi_tl</name><argument_list pos:start="309:39" pos:end="311:49">(<argument pos:start="309:40" pos:end="309:50"><expr pos:start="309:40" pos:end="309:50"><name pos:start="309:40" pos:end="309:50">TCG_COND_EQ</name></expr></argument>,

                               <argument pos:start="311:32" pos:end="311:41"><expr pos:start="311:32" pos:end="311:41"><name pos:start="311:32" pos:end="311:41">env_btaken</name></expr></argument>, <argument pos:start="311:44" pos:end="311:44"><expr pos:start="311:44" pos:end="311:44"><literal type="number" pos:start="311:44" pos:end="311:44">0</literal></expr></argument>, <argument pos:start="311:47" pos:end="311:48"><expr pos:start="311:47" pos:end="311:48"><name pos:start="311:47" pos:end="311:48">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="313:21" pos:end="313:51"><expr pos:start="313:21" pos:end="313:50"><call pos:start="313:21" pos:end="313:50"><name pos:start="313:21" pos:end="313:31">gen_goto_tb</name><argument_list pos:start="313:32" pos:end="313:50">(<argument pos:start="313:33" pos:end="313:34"><expr pos:start="313:33" pos:end="313:34"><name pos:start="313:33" pos:end="313:34">dc</name></expr></argument>, <argument pos:start="313:37" pos:end="313:37"><expr pos:start="313:37" pos:end="313:37"><literal type="number" pos:start="313:37" pos:end="313:37">1</literal></expr></argument>, <argument pos:start="313:40" pos:end="313:49"><expr pos:start="313:40" pos:end="313:49"><name pos:start="313:40" pos:end="313:49"><name pos:start="313:40" pos:end="313:41">dc</name><operator pos:start="313:42" pos:end="313:43">-&gt;</operator><name pos:start="313:44" pos:end="313:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="315:21" pos:end="315:38"><expr pos:start="315:21" pos:end="315:37"><call pos:start="315:21" pos:end="315:37"><name pos:start="315:21" pos:end="315:33">gen_set_label</name><argument_list pos:start="315:34" pos:end="315:37">(<argument pos:start="315:35" pos:end="315:36"><expr pos:start="315:35" pos:end="315:36"><name pos:start="315:35" pos:end="315:36">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:47"><expr pos:start="317:21" pos:end="317:46"><call pos:start="317:21" pos:end="317:46"><name pos:start="317:21" pos:end="317:31">gen_goto_tb</name><argument_list pos:start="317:32" pos:end="317:46">(<argument pos:start="317:33" pos:end="317:34"><expr pos:start="317:33" pos:end="317:34"><name pos:start="317:33" pos:end="317:34">dc</name></expr></argument>, <argument pos:start="317:37" pos:end="317:37"><expr pos:start="317:37" pos:end="317:37"><literal type="number" pos:start="317:37" pos:end="317:37">0</literal></expr></argument>, <argument pos:start="317:40" pos:end="317:45"><expr pos:start="317:40" pos:end="317:45"><name pos:start="317:40" pos:end="317:45"><name pos:start="317:40" pos:end="317:41">dc</name><operator pos:start="317:42" pos:end="317:43">-&gt;</operator><name pos:start="317:44" pos:end="317:45">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="319:21" pos:end="319:47"><expr pos:start="319:21" pos:end="319:46"><name pos:start="319:21" pos:end="319:30"><name pos:start="319:21" pos:end="319:22">dc</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:30">is_jmp</name></name> <operator pos:start="319:32" pos:end="319:32">=</operator> <name pos:start="319:34" pos:end="319:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="321:40"><expr pos:start="321:21" pos:end="321:39"><name pos:start="321:21" pos:end="321:27"><name pos:start="321:21" pos:end="321:22">dc</name><operator pos:start="321:23" pos:end="321:24">-&gt;</operator><name pos:start="321:25" pos:end="321:27">jmp</name></name> <operator pos:start="321:29" pos:end="321:29">=</operator> <name pos:start="321:31" pos:end="321:39">JMP_NOJMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="323:19" pos:end="333:17">else if <condition pos:start="323:27" pos:end="323:49">(<expr pos:start="323:28" pos:end="323:48"><name pos:start="323:28" pos:end="323:34"><name pos:start="323:28" pos:end="323:29">dc</name><operator pos:start="323:30" pos:end="323:31">-&gt;</operator><name pos:start="323:32" pos:end="323:34">jmp</name></name> <operator pos:start="323:36" pos:end="323:37">==</operator> <name pos:start="323:39" pos:end="323:48">JMP_DIRECT</name></expr>)</condition> <block pos:start="323:51" pos:end="333:17">{<block_content pos:start="325:21" pos:end="331:40">

                    <expr_stmt pos:start="325:21" pos:end="325:44"><expr pos:start="325:21" pos:end="325:43"><call pos:start="325:21" pos:end="325:43"><name pos:start="325:21" pos:end="325:39">cris_evaluate_flags</name><argument_list pos:start="325:40" pos:end="325:43">(<argument pos:start="325:41" pos:end="325:42"><expr pos:start="325:41" pos:end="325:42"><name pos:start="325:41" pos:end="325:42">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:51"><expr pos:start="327:21" pos:end="327:50"><call pos:start="327:21" pos:end="327:50"><name pos:start="327:21" pos:end="327:31">gen_goto_tb</name><argument_list pos:start="327:32" pos:end="327:50">(<argument pos:start="327:33" pos:end="327:34"><expr pos:start="327:33" pos:end="327:34"><name pos:start="327:33" pos:end="327:34">dc</name></expr></argument>, <argument pos:start="327:37" pos:end="327:37"><expr pos:start="327:37" pos:end="327:37"><literal type="number" pos:start="327:37" pos:end="327:37">0</literal></expr></argument>, <argument pos:start="327:40" pos:end="327:49"><expr pos:start="327:40" pos:end="327:49"><name pos:start="327:40" pos:end="327:49"><name pos:start="327:40" pos:end="327:41">dc</name><operator pos:start="327:42" pos:end="327:43">-&gt;</operator><name pos:start="327:44" pos:end="327:49">jmp_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:47"><expr pos:start="329:21" pos:end="329:46"><name pos:start="329:21" pos:end="329:30"><name pos:start="329:21" pos:end="329:22">dc</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:30">is_jmp</name></name> <operator pos:start="329:32" pos:end="329:32">=</operator> <name pos:start="329:34" pos:end="329:46">DISAS_TB_JUMP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:40"><expr pos:start="331:21" pos:end="331:39"><name pos:start="331:21" pos:end="331:27"><name pos:start="331:21" pos:end="331:22">dc</name><operator pos:start="331:23" pos:end="331:24">-&gt;</operator><name pos:start="331:25" pos:end="331:27">jmp</name></name> <operator pos:start="331:29" pos:end="331:29">=</operator> <name pos:start="331:31" pos:end="331:39">JMP_NOJMP</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="333:19" pos:end="339:17">else <block pos:start="333:24" pos:end="339:17">{<block_content pos:start="335:21" pos:end="337:44">

                    <expr_stmt pos:start="335:21" pos:end="335:68"><expr pos:start="335:21" pos:end="335:67"><call pos:start="335:21" pos:end="335:67"><name pos:start="335:21" pos:end="335:32">t_gen_cc_jmp</name><argument_list pos:start="335:33" pos:end="335:67">(<argument pos:start="335:34" pos:end="335:44"><expr pos:start="335:34" pos:end="335:44"><name pos:start="335:34" pos:end="335:44">env_btarget</name></expr></argument>, <argument pos:start="335:47" pos:end="335:66"><expr pos:start="335:47" pos:end="335:66"><call pos:start="335:47" pos:end="335:66"><name pos:start="335:47" pos:end="335:58">tcg_const_tl</name><argument_list pos:start="335:59" pos:end="335:66">(<argument pos:start="335:60" pos:end="335:65"><expr pos:start="335:60" pos:end="335:65"><name pos:start="335:60" pos:end="335:65"><name pos:start="335:60" pos:end="335:61">dc</name><operator pos:start="335:62" pos:end="335:63">-&gt;</operator><name pos:start="335:64" pos:end="335:65">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:44"><expr pos:start="337:21" pos:end="337:43"><name pos:start="337:21" pos:end="337:30"><name pos:start="337:21" pos:end="337:22">dc</name><operator pos:start="337:23" pos:end="337:24">-&gt;</operator><name pos:start="337:25" pos:end="337:30">is_jmp</name></name> <operator pos:start="337:32" pos:end="337:32">=</operator> <name pos:start="337:34" pos:end="337:43">DISAS_JUMP</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="341:17" pos:end="341:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="349:9" pos:end="351:38">/* If we are rexecuting a branch due to exceptions on

           delay slots dont break.  */</comment>

        <if_stmt pos:start="353:9" pos:end="357:9"><if pos:start="353:9" pos:end="357:9">if <condition pos:start="353:12" pos:end="353:53">(<expr pos:start="353:13" pos:end="353:52"><operator pos:start="353:13" pos:end="353:13">!</operator><operator pos:start="353:14" pos:end="353:14">(</operator><name pos:start="353:15" pos:end="353:20"><name pos:start="353:15" pos:end="353:16">tb</name><operator pos:start="353:17" pos:end="353:18">-&gt;</operator><name pos:start="353:19" pos:end="353:20">pc</name></name> <operator pos:start="353:22" pos:end="353:22">&amp;</operator> <literal type="number" pos:start="353:24" pos:end="353:24">1</literal><operator pos:start="353:25" pos:end="353:25">)</operator> <operator pos:start="353:27" pos:end="353:28">&amp;&amp;</operator> <name pos:start="353:30" pos:end="353:52"><name pos:start="353:30" pos:end="353:32">env</name><operator pos:start="353:33" pos:end="353:34">-&gt;</operator><name pos:start="353:35" pos:end="353:52">singlestep_enabled</name></name></expr>)</condition> <block pos:start="353:55" pos:end="357:9">{<block_content pos:start="355:13" pos:end="355:18">

            <break pos:start="355:13" pos:end="355:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="359:13" pos:end="367:37">(<expr pos:start="359:14" pos:end="367:36"><operator pos:start="359:14" pos:end="359:14">!</operator><name pos:start="359:15" pos:end="359:24"><name pos:start="359:15" pos:end="359:16">dc</name><operator pos:start="359:17" pos:end="359:18">-&gt;</operator><name pos:start="359:19" pos:end="359:24">is_jmp</name></name> <operator pos:start="359:26" pos:end="359:27">&amp;&amp;</operator> <operator pos:start="359:29" pos:end="359:29">!</operator><name pos:start="359:30" pos:end="359:49"><name pos:start="359:30" pos:end="359:31">dc</name><operator pos:start="359:32" pos:end="359:33">-&gt;</operator><name pos:start="359:34" pos:end="359:49">cpustate_changed</name></name>

            <operator pos:start="361:13" pos:end="361:14">&amp;&amp;</operator> <name pos:start="361:16" pos:end="361:34"><name pos:start="361:16" pos:end="361:22">tcg_ctx</name><operator pos:start="361:23" pos:end="361:23">.</operator><name pos:start="361:24" pos:end="361:34">gen_opc_ptr</name></name> <operator pos:start="361:36" pos:end="361:36">&lt;</operator> <name pos:start="361:38" pos:end="361:48">gen_opc_end</name>

            <operator pos:start="363:13" pos:end="363:14">&amp;&amp;</operator> <operator pos:start="363:16" pos:end="363:16">!</operator><name pos:start="363:17" pos:end="363:26">singlestep</name>

            <operator pos:start="365:13" pos:end="365:14">&amp;&amp;</operator> <operator pos:start="365:16" pos:end="365:16">(</operator><name pos:start="365:17" pos:end="365:22"><name pos:start="365:17" pos:end="365:18">dc</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:22">pc</name></name> <operator pos:start="365:24" pos:end="365:24">&lt;</operator> <name pos:start="365:26" pos:end="365:40">next_page_start</name><operator pos:start="365:41" pos:end="365:41">)</operator>

            <operator pos:start="367:13" pos:end="367:14">&amp;&amp;</operator> <name pos:start="367:16" pos:end="367:24">num_insns</name> <operator pos:start="367:26" pos:end="367:26">&lt;</operator> <name pos:start="367:28" pos:end="367:36">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="371:5" pos:end="375:5"><if pos:start="371:5" pos:end="375:5">if <condition pos:start="371:8" pos:end="371:29">(<expr pos:start="371:9" pos:end="371:28"><name pos:start="371:9" pos:end="371:28"><name pos:start="371:9" pos:end="371:10">dc</name><operator pos:start="371:11" pos:end="371:12">-&gt;</operator><name pos:start="371:13" pos:end="371:28">clear_locked_irq</name></name></expr>)</condition> <block pos:start="371:31" pos:end="375:5">{<block_content pos:start="373:9" pos:end="373:54">

        <expr_stmt pos:start="373:9" pos:end="373:54"><expr pos:start="373:9" pos:end="373:53"><call pos:start="373:9" pos:end="373:53"><name pos:start="373:9" pos:end="373:24">t_gen_mov_env_TN</name><argument_list pos:start="373:25" pos:end="373:53">(<argument pos:start="373:26" pos:end="373:35"><expr pos:start="373:26" pos:end="373:35"><name pos:start="373:26" pos:end="373:35">locked_irq</name></expr></argument>, <argument pos:start="373:38" pos:end="373:52"><expr pos:start="373:38" pos:end="373:52"><call pos:start="373:38" pos:end="373:52"><name pos:start="373:38" pos:end="373:49">tcg_const_tl</name><argument_list pos:start="373:50" pos:end="373:52">(<argument pos:start="373:51" pos:end="373:51"><expr pos:start="373:51" pos:end="373:51"><literal type="number" pos:start="373:51" pos:end="373:51">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="379:5" pos:end="379:17"><expr pos:start="379:5" pos:end="379:16"><name pos:start="379:5" pos:end="379:7">npc</name> <operator pos:start="379:9" pos:end="379:9">=</operator> <name pos:start="379:11" pos:end="379:16"><name pos:start="379:11" pos:end="379:12">dc</name><operator pos:start="379:13" pos:end="379:14">-&gt;</operator><name pos:start="379:15" pos:end="379:16">pc</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="383:9" pos:end="385:25"><if pos:start="383:9" pos:end="385:25">if <condition pos:start="383:12" pos:end="383:36">(<expr pos:start="383:13" pos:end="383:35"><name pos:start="383:13" pos:end="383:22"><name pos:start="383:13" pos:end="383:14">tb</name><operator pos:start="383:15" pos:end="383:16">-&gt;</operator><name pos:start="383:17" pos:end="383:22">cflags</name></name> <operator pos:start="383:24" pos:end="383:24">&amp;</operator> <name pos:start="383:26" pos:end="383:35">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:25"><block_content pos:start="385:13" pos:end="385:25">

            <expr_stmt pos:start="385:13" pos:end="385:25"><expr pos:start="385:13" pos:end="385:24"><call pos:start="385:13" pos:end="385:24"><name pos:start="385:13" pos:end="385:22">gen_io_end</name><argument_list pos:start="385:23" pos:end="385:24">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="387:5" pos:end="387:63">/* Force an update if the per-tb cpu state has changed.  */</comment>

    <if_stmt pos:start="389:5" pos:end="399:5"><if pos:start="389:5" pos:end="399:5">if <condition pos:start="389:8" pos:end="393:50">(<expr pos:start="389:9" pos:end="393:49"><name pos:start="389:9" pos:end="389:18"><name pos:start="389:9" pos:end="389:10">dc</name><operator pos:start="389:11" pos:end="389:12">-&gt;</operator><name pos:start="389:13" pos:end="389:18">is_jmp</name></name> <operator pos:start="389:20" pos:end="389:21">==</operator> <name pos:start="389:23" pos:end="389:32">DISAS_NEXT</name>

        <operator pos:start="391:9" pos:end="391:10">&amp;&amp;</operator> <operator pos:start="391:12" pos:end="391:12">(</operator><name pos:start="391:13" pos:end="391:32"><name pos:start="391:13" pos:end="391:14">dc</name><operator pos:start="391:15" pos:end="391:16">-&gt;</operator><name pos:start="391:17" pos:end="391:32">cpustate_changed</name></name> <operator pos:start="391:34" pos:end="391:35">||</operator> <operator pos:start="391:37" pos:end="391:37">!</operator><name pos:start="391:38" pos:end="391:52"><name pos:start="391:38" pos:end="391:39">dc</name><operator pos:start="391:40" pos:end="391:41">-&gt;</operator><name pos:start="391:42" pos:end="391:52">flagx_known</name></name>

        <operator pos:start="393:9" pos:end="393:10">||</operator> <operator pos:start="393:12" pos:end="393:12">(</operator><name pos:start="393:13" pos:end="393:23"><name pos:start="393:13" pos:end="393:14">dc</name><operator pos:start="393:15" pos:end="393:16">-&gt;</operator><name pos:start="393:17" pos:end="393:23">flags_x</name></name> <operator pos:start="393:25" pos:end="393:26">!=</operator> <operator pos:start="393:28" pos:end="393:28">(</operator><name pos:start="393:29" pos:end="393:37"><name pos:start="393:29" pos:end="393:30">tb</name><operator pos:start="393:31" pos:end="393:32">-&gt;</operator><name pos:start="393:33" pos:end="393:37">flags</name></name> <operator pos:start="393:39" pos:end="393:39">&amp;</operator> <name pos:start="393:41" pos:end="393:46">X_FLAG</name><operator pos:start="393:47" pos:end="393:47">)</operator><operator pos:start="393:48" pos:end="393:48">)</operator><operator pos:start="393:49" pos:end="393:49">)</operator></expr>)</condition> <block pos:start="393:52" pos:end="399:5">{<block_content pos:start="395:9" pos:end="397:37">

        <expr_stmt pos:start="395:9" pos:end="395:34"><expr pos:start="395:9" pos:end="395:33"><name pos:start="395:9" pos:end="395:18"><name pos:start="395:9" pos:end="395:10">dc</name><operator pos:start="395:11" pos:end="395:12">-&gt;</operator><name pos:start="395:13" pos:end="395:18">is_jmp</name></name> <operator pos:start="395:20" pos:end="395:20">=</operator> <name pos:start="395:22" pos:end="395:33">DISAS_UPDATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:37"><expr pos:start="397:9" pos:end="397:36"><call pos:start="397:9" pos:end="397:36"><name pos:start="397:9" pos:end="397:23">tcg_gen_movi_tl</name><argument_list pos:start="397:24" pos:end="397:36">(<argument pos:start="397:25" pos:end="397:30"><expr pos:start="397:25" pos:end="397:30"><name pos:start="397:25" pos:end="397:30">env_pc</name></expr></argument>, <argument pos:start="397:33" pos:end="397:35"><expr pos:start="397:33" pos:end="397:35"><name pos:start="397:33" pos:end="397:35">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="401:5" pos:end="401:44">/* Broken branch+delayslot sequence.  */</comment>

    <if_stmt pos:start="403:5" pos:end="411:5"><if pos:start="403:5" pos:end="411:5">if <condition pos:start="403:8" pos:end="403:32">(<expr pos:start="403:9" pos:end="403:31"><name pos:start="403:9" pos:end="403:26"><name pos:start="403:9" pos:end="403:10">dc</name><operator pos:start="403:11" pos:end="403:12">-&gt;</operator><name pos:start="403:13" pos:end="403:26">delayed_branch</name></name> <operator pos:start="403:28" pos:end="403:29">==</operator> <literal type="number" pos:start="403:31" pos:end="403:31">1</literal></expr>)</condition> <block pos:start="403:34" pos:end="411:5">{<block_content pos:start="407:9" pos:end="409:34">

        <comment type="block" pos:start="405:9" pos:end="405:61">/* Set env-&gt;dslot to the size of the branch insn.  */</comment>

        <expr_stmt pos:start="407:9" pos:end="407:64"><expr pos:start="407:9" pos:end="407:63"><call pos:start="407:9" pos:end="407:63"><name pos:start="407:9" pos:end="407:24">t_gen_mov_env_TN</name><argument_list pos:start="407:25" pos:end="407:63">(<argument pos:start="407:26" pos:end="407:30"><expr pos:start="407:26" pos:end="407:30"><name pos:start="407:26" pos:end="407:30">dslot</name></expr></argument>, <argument pos:start="407:33" pos:end="407:62"><expr pos:start="407:33" pos:end="407:62"><call pos:start="407:33" pos:end="407:62"><name pos:start="407:33" pos:end="407:44">tcg_const_tl</name><argument_list pos:start="407:45" pos:end="407:62">(<argument pos:start="407:46" pos:end="407:61"><expr pos:start="407:46" pos:end="407:61"><name pos:start="407:46" pos:end="407:51"><name pos:start="407:46" pos:end="407:47">dc</name><operator pos:start="407:48" pos:end="407:49">-&gt;</operator><name pos:start="407:50" pos:end="407:51">pc</name></name> <operator pos:start="407:53" pos:end="407:53">-</operator> <name pos:start="407:55" pos:end="407:61"><name pos:start="407:55" pos:end="407:56">dc</name><operator pos:start="407:57" pos:end="407:58">-&gt;</operator><name pos:start="407:59" pos:end="407:61">ppc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:34"><expr pos:start="409:9" pos:end="409:33"><call pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:29">cris_store_direct_jmp</name><argument_list pos:start="409:30" pos:end="409:33">(<argument pos:start="409:31" pos:end="409:32"><expr pos:start="409:31" pos:end="409:32"><name pos:start="409:31" pos:end="409:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="415:5" pos:end="415:28"><expr pos:start="415:5" pos:end="415:27"><call pos:start="415:5" pos:end="415:27"><name pos:start="415:5" pos:end="415:23">cris_evaluate_flags</name><argument_list pos:start="415:24" pos:end="415:27">(<argument pos:start="415:25" pos:end="415:26"><expr pos:start="415:25" pos:end="415:26"><name pos:start="415:25" pos:end="415:26">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="419:5" pos:end="463:5"><if pos:start="419:5" pos:end="429:5">if <condition pos:start="419:8" pos:end="419:42">(<expr pos:start="419:9" pos:end="419:41"><call pos:start="419:9" pos:end="419:41"><name pos:start="419:9" pos:end="419:16">unlikely</name><argument_list pos:start="419:17" pos:end="419:41">(<argument pos:start="419:18" pos:end="419:40"><expr pos:start="419:18" pos:end="419:40"><name pos:start="419:18" pos:end="419:40"><name pos:start="419:18" pos:end="419:20">env</name><operator pos:start="419:21" pos:end="419:22">-&gt;</operator><name pos:start="419:23" pos:end="419:40">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="419:44" pos:end="429:5">{<block_content pos:start="421:9" pos:end="427:42">

        <if_stmt pos:start="421:9" pos:end="425:9"><if pos:start="421:9" pos:end="425:9">if <condition pos:start="421:12" pos:end="421:37">(<expr pos:start="421:13" pos:end="421:36"><name pos:start="421:13" pos:end="421:22"><name pos:start="421:13" pos:end="421:14">dc</name><operator pos:start="421:15" pos:end="421:16">-&gt;</operator><name pos:start="421:17" pos:end="421:22">is_jmp</name></name> <operator pos:start="421:24" pos:end="421:25">==</operator> <name pos:start="421:27" pos:end="421:36">DISAS_NEXT</name></expr>)</condition> <block pos:start="421:39" pos:end="425:9">{<block_content pos:start="423:13" pos:end="423:41">

            <expr_stmt pos:start="423:13" pos:end="423:41"><expr pos:start="423:13" pos:end="423:40"><call pos:start="423:13" pos:end="423:40"><name pos:start="423:13" pos:end="423:27">tcg_gen_movi_tl</name><argument_list pos:start="423:28" pos:end="423:40">(<argument pos:start="423:29" pos:end="423:34"><expr pos:start="423:29" pos:end="423:34"><name pos:start="423:29" pos:end="423:34">env_pc</name></expr></argument>, <argument pos:start="423:37" pos:end="423:39"><expr pos:start="423:37" pos:end="423:39"><name pos:start="423:37" pos:end="423:39">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:42"><expr pos:start="427:9" pos:end="427:41"><call pos:start="427:9" pos:end="427:41"><name pos:start="427:9" pos:end="427:29">t_gen_raise_exception</name><argument_list pos:start="427:30" pos:end="427:41">(<argument pos:start="427:31" pos:end="427:40"><expr pos:start="427:31" pos:end="427:40"><name pos:start="427:31" pos:end="427:40">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="429:7" pos:end="463:5">else <block pos:start="429:12" pos:end="463:5">{<block_content pos:start="431:9" pos:end="461:9">

        <switch pos:start="431:9" pos:end="461:9">switch <condition pos:start="431:16" pos:end="431:27">(<expr pos:start="431:17" pos:end="431:26"><name pos:start="431:17" pos:end="431:26"><name pos:start="431:17" pos:end="431:18">dc</name><operator pos:start="431:19" pos:end="431:20">-&gt;</operator><name pos:start="431:21" pos:end="431:26">is_jmp</name></name></expr>)</condition> <block pos:start="431:29" pos:end="461:9">{<block_content pos:start="433:9" pos:end="459:18">

        <case pos:start="433:9" pos:end="433:24">case <expr pos:start="433:14" pos:end="433:23"><name pos:start="433:14" pos:end="433:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="435:13" pos:end="435:36"><expr pos:start="435:13" pos:end="435:35"><call pos:start="435:13" pos:end="435:35"><name pos:start="435:13" pos:end="435:23">gen_goto_tb</name><argument_list pos:start="435:24" pos:end="435:35">(<argument pos:start="435:25" pos:end="435:26"><expr pos:start="435:25" pos:end="435:26"><name pos:start="435:25" pos:end="435:26">dc</name></expr></argument>, <argument pos:start="435:29" pos:end="435:29"><expr pos:start="435:29" pos:end="435:29"><literal type="number" pos:start="435:29" pos:end="435:29">1</literal></expr></argument>, <argument pos:start="435:32" pos:end="435:34"><expr pos:start="435:32" pos:end="435:34"><name pos:start="435:32" pos:end="435:34">npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="437:13" pos:end="437:18">break;</break>

        <default pos:start="439:9" pos:end="439:16">default:</default>

        <case pos:start="441:9" pos:end="441:24">case <expr pos:start="441:14" pos:end="441:23"><name pos:start="441:14" pos:end="441:23">DISAS_JUMP</name></expr>:</case>

        <case pos:start="443:9" pos:end="443:26">case <expr pos:start="443:14" pos:end="443:25"><name pos:start="443:14" pos:end="443:25">DISAS_UPDATE</name></expr>:</case>

            <comment type="block" pos:start="445:13" pos:end="447:41">/* indicate that the hash table must be used

                   to find the next TB */</comment>

            <expr_stmt pos:start="449:13" pos:end="449:31"><expr pos:start="449:13" pos:end="449:30"><call pos:start="449:13" pos:end="449:30"><name pos:start="449:13" pos:end="449:27">tcg_gen_exit_tb</name><argument_list pos:start="449:28" pos:end="449:30">(<argument pos:start="449:29" pos:end="449:29"><expr pos:start="449:29" pos:end="449:29"><literal type="number" pos:start="449:29" pos:end="449:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="451:13" pos:end="451:18">break;</break>

        <case pos:start="453:9" pos:end="453:23">case <expr pos:start="453:14" pos:end="453:22"><name pos:start="453:14" pos:end="453:22">DISAS_SWI</name></expr>:</case>

        <case pos:start="455:9" pos:end="455:27">case <expr pos:start="455:14" pos:end="455:26"><name pos:start="455:14" pos:end="455:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="457:13" pos:end="457:42">/* nothing more to generate */</comment>

            <break pos:start="459:13" pos:end="459:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:34"><expr pos:start="465:5" pos:end="465:33"><call pos:start="465:5" pos:end="465:33"><name pos:start="465:5" pos:end="465:18">gen_icount_end</name><argument_list pos:start="465:19" pos:end="465:33">(<argument pos:start="465:20" pos:end="465:21"><expr pos:start="465:20" pos:end="465:21"><name pos:start="465:20" pos:end="465:21">tb</name></expr></argument>, <argument pos:start="465:24" pos:end="465:32"><expr pos:start="465:24" pos:end="465:32"><name pos:start="465:24" pos:end="465:32">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:40"><expr pos:start="467:5" pos:end="467:39"><operator pos:start="467:5" pos:end="467:5">*</operator><name pos:start="467:6" pos:end="467:24"><name pos:start="467:6" pos:end="467:12">tcg_ctx</name><operator pos:start="467:13" pos:end="467:13">.</operator><name pos:start="467:14" pos:end="467:24">gen_opc_ptr</name></name> <operator pos:start="467:26" pos:end="467:26">=</operator> <name pos:start="467:28" pos:end="467:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="469:5" pos:end="494:0"><if pos:start="469:5" pos:end="481:5">if <condition pos:start="469:8" pos:end="469:18">(<expr pos:start="469:9" pos:end="469:17"><name pos:start="469:9" pos:end="469:17">search_pc</name></expr>)</condition> <block pos:start="469:20" pos:end="481:5">{<block_content pos:start="471:9" pos:end="479:9">

        <expr_stmt pos:start="471:9" pos:end="471:54"><expr pos:start="471:9" pos:end="471:53"><name pos:start="471:9" pos:end="471:9">j</name> <operator pos:start="471:11" pos:end="471:11">=</operator> <name pos:start="471:13" pos:end="471:31"><name pos:start="471:13" pos:end="471:19">tcg_ctx</name><operator pos:start="471:20" pos:end="471:20">.</operator><name pos:start="471:21" pos:end="471:31">gen_opc_ptr</name></name> <operator pos:start="471:33" pos:end="471:33">-</operator> <name pos:start="471:35" pos:end="471:53"><name pos:start="471:35" pos:end="471:41">tcg_ctx</name><operator pos:start="471:42" pos:end="471:42">.</operator><name pos:start="471:43" pos:end="471:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:13"><expr pos:start="473:9" pos:end="473:12"><name pos:start="473:9" pos:end="473:10">lj</name><operator pos:start="473:11" pos:end="473:12">++</operator></expr>;</expr_stmt>

        <while pos:start="475:9" pos:end="479:9">while <condition pos:start="475:15" pos:end="475:23">(<expr pos:start="475:16" pos:end="475:22"><name pos:start="475:16" pos:end="475:17">lj</name> <operator pos:start="475:19" pos:end="475:20">&lt;=</operator> <name pos:start="475:22" pos:end="475:22">j</name></expr>)</condition> <block pos:start="475:25" pos:end="479:9">{<block_content pos:start="477:13" pos:end="477:50">

            <expr_stmt pos:start="477:13" pos:end="477:50"><expr pos:start="477:13" pos:end="477:49"><name pos:start="477:13" pos:end="477:45"><name pos:start="477:13" pos:end="477:19">tcg_ctx</name><operator pos:start="477:20" pos:end="477:20">.</operator><name pos:start="477:21" pos:end="477:39">gen_opc_instr_start</name><index pos:start="477:40" pos:end="477:45">[<expr pos:start="477:41" pos:end="477:44"><name pos:start="477:41" pos:end="477:42">lj</name><operator pos:start="477:43" pos:end="477:44">++</operator></expr>]</index></name> <operator pos:start="477:47" pos:end="477:47">=</operator> <literal type="number" pos:start="477:49" pos:end="477:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="481:7" pos:end="494:0">else <block pos:start="481:12" pos:end="494:0">{<block_content pos:start="483:9" pos:end="485:31">

        <expr_stmt pos:start="483:9" pos:end="483:37"><expr pos:start="483:9" pos:end="483:36"><name pos:start="483:9" pos:end="483:16"><name pos:start="483:9" pos:end="483:10">tb</name><operator pos:start="483:11" pos:end="483:12">-&gt;</operator><name pos:start="483:13" pos:end="483:16">size</name></name> <operator pos:start="483:18" pos:end="483:18">=</operator> <name pos:start="483:20" pos:end="483:25"><name pos:start="483:20" pos:end="483:21">dc</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:25">pc</name></name> <operator pos:start="483:27" pos:end="483:27">-</operator> <name pos:start="483:29" pos:end="483:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:31"><expr pos:start="485:9" pos:end="485:30"><name pos:start="485:9" pos:end="485:18"><name pos:start="485:9" pos:end="485:10">tb</name><operator pos:start="485:11" pos:end="485:12">-&gt;</operator><name pos:start="485:13" pos:end="485:18">icount</name></name> <operator pos:start="485:20" pos:end="485:20">=</operator> <name pos:start="485:22" pos:end="485:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="491:1" pos:end="491:18">#<cpp:directive pos:start="491:2" pos:end="491:6">ifdef</cpp:directive> <name pos:start="491:8" pos:end="491:18">DEBUG_DISAS</name></cpp:ifdef>

<cpp:if pos:start="493:1" pos:end="493:15">#<cpp:directive pos:start="493:2" pos:end="493:3">if</cpp:directive> <expr pos:start="493:5" pos:end="493:15"><operator pos:start="493:5" pos:end="493:5">!</operator><name pos:start="493:6" pos:end="493:15">DISAS_CRIS</name></expr></cpp:if>

    <if_stmt pos:start="495:5" pos:end="510:0"><if pos:start="495:5" pos:end="510:0">if <condition pos:start="495:8" pos:end="495:46">(<expr pos:start="495:9" pos:end="495:45"><call pos:start="495:9" pos:end="495:45"><name pos:start="495:9" pos:end="495:26">qemu_loglevel_mask</name><argument_list pos:start="495:27" pos:end="495:45">(<argument pos:start="495:28" pos:end="495:44"><expr pos:start="495:28" pos:end="495:44"><name pos:start="495:28" pos:end="495:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="495:48" pos:end="510:0">{<block_content pos:start="497:9" pos:end="503:74">

        <expr_stmt pos:start="497:9" pos:end="499:56"><expr pos:start="497:9" pos:end="499:55"><call pos:start="497:9" pos:end="499:55"><name pos:start="497:9" pos:end="497:24">log_target_disas</name><argument_list pos:start="497:25" pos:end="499:55">(<argument pos:start="497:26" pos:end="497:28"><expr pos:start="497:26" pos:end="497:28"><name pos:start="497:26" pos:end="497:28">env</name></expr></argument>, <argument pos:start="497:31" pos:end="497:38"><expr pos:start="497:31" pos:end="497:38"><name pos:start="497:31" pos:end="497:38">pc_start</name></expr></argument>, <argument pos:start="497:41" pos:end="497:57"><expr pos:start="497:41" pos:end="497:57"><name pos:start="497:41" pos:end="497:46"><name pos:start="497:41" pos:end="497:42">dc</name><operator pos:start="497:43" pos:end="497:44">-&gt;</operator><name pos:start="497:45" pos:end="497:46">pc</name></name> <operator pos:start="497:48" pos:end="497:48">-</operator> <name pos:start="497:50" pos:end="497:57">pc_start</name></expr></argument>,

                                 <argument pos:start="499:34" pos:end="499:54"><expr pos:start="499:34" pos:end="499:54"><name pos:start="499:34" pos:end="499:54"><name pos:start="499:34" pos:end="499:35">dc</name><operator pos:start="499:36" pos:end="499:37">-&gt;</operator><name pos:start="499:38" pos:end="499:40">env</name><operator pos:start="499:41" pos:end="499:42">-&gt;</operator><name pos:start="499:43" pos:end="499:47">pregs</name><index pos:start="499:48" pos:end="499:54">[<expr pos:start="499:49" pos:end="499:53"><name pos:start="499:49" pos:end="499:53">PR_VR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="501:9" pos:end="503:74"><expr pos:start="501:9" pos:end="503:73"><call pos:start="501:9" pos:end="503:73"><name pos:start="501:9" pos:end="501:16">qemu_log</name><argument_list pos:start="501:17" pos:end="503:73">(<argument pos:start="501:18" pos:end="501:41"><expr pos:start="501:18" pos:end="501:41"><literal type="string" pos:start="501:18" pos:end="501:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="503:13" pos:end="503:29"><expr pos:start="503:13" pos:end="503:29"><name pos:start="503:13" pos:end="503:18"><name pos:start="503:13" pos:end="503:14">dc</name><operator pos:start="503:15" pos:end="503:16">-&gt;</operator><name pos:start="503:17" pos:end="503:18">pc</name></name> <operator pos:start="503:20" pos:end="503:20">-</operator> <name pos:start="503:22" pos:end="503:29">pc_start</name></expr></argument>, <argument pos:start="503:32" pos:end="503:72"><expr pos:start="503:32" pos:end="503:72"><name pos:start="503:32" pos:end="503:50"><name pos:start="503:32" pos:end="503:38">tcg_ctx</name><operator pos:start="503:39" pos:end="503:39">.</operator><name pos:start="503:40" pos:end="503:50">gen_opc_ptr</name></name> <operator pos:start="503:52" pos:end="503:52">-</operator> <name pos:start="503:54" pos:end="503:72"><name pos:start="503:54" pos:end="503:60">tcg_ctx</name><operator pos:start="503:61" pos:end="503:61">.</operator><name pos:start="503:62" pos:end="503:72">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="507:1" pos:end="507:6">#<cpp:directive pos:start="507:2" pos:end="507:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="509:1" pos:end="509:6">#<cpp:directive pos:start="509:2" pos:end="509:6">endif</cpp:directive></cpp:endif>

</block_content>}</block>
</unit>
