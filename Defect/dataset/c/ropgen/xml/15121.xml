<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15121.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:34">bgr24ToY</name>)<parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dst</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">src</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:73">width</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="7:9" pos:end="166:0">

<cpp:ifdef pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:15">HAVE_MMX</name></cpp:ifdef>

	<asm pos:start="7:9" pos:end="146:0">asm <specifier pos:start="7:13" pos:end="7:20">volatile</specifier>(

		"mov %2, %%"REG_a"		\n\t"

		"movq "MANGLE(bgr2YCoeff)", %%mm6		\n\t"

		"movq "MANGLE(w1111)", %%mm5		\n\t"

		"pxor %%mm7, %%mm7		\n\t"

		"lea (%%"REG_a", %%"REG_a", 2), %%"REG_b"\n\t"

		".balign 16			\n\t"

		"1:				\n\t"

		PREFETCH" 64(%0, %%"REG_b")	\n\t"

		"movd (%0, %%"REG_b"), %%mm0	\n\t"

		"movd 3(%0, %%"REG_b"), %%mm1	\n\t"

		"punpcklbw %%mm7, %%mm0		\n\t"

		"punpcklbw %%mm7, %%mm1		\n\t"

		"movd 6(%0, %%"REG_b"), %%mm2	\n\t"

		"movd 9(%0, %%"REG_b"), %%mm3	\n\t"

		"punpcklbw %%mm7, %%mm2		\n\t"

		"punpcklbw %%mm7, %%mm3		\n\t"

		"pmaddwd %%mm6, %%mm0		\n\t"

		"pmaddwd %%mm6, %%mm1		\n\t"

		"pmaddwd %%mm6, %%mm2		\n\t"

		"pmaddwd %%mm6, %%mm3		\n\t"

<cpp:ifndef pos:start="49:1" pos:end="49:21">#<cpp:directive pos:start="49:2" pos:end="49:7">ifndef</cpp:directive> <name pos:start="49:9" pos:end="49:21">FAST_BGR2YV12</name></cpp:ifndef>

		"psrad $8, %%mm0		\n\t"

		"psrad $8, %%mm1		\n\t"

		"psrad $8, %%mm2		\n\t"

		"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

		"packssdw %%mm1, %%mm0		\n\t"

		"packssdw %%mm3, %%mm2		\n\t"

		"pmaddwd %%mm5, %%mm0		\n\t"

		"pmaddwd %%mm5, %%mm2		\n\t"

		"packssdw %%mm2, %%mm0		\n\t"

		"psraw $7, %%mm0		\n\t"



		"movd 12(%0, %%"REG_b"), %%mm4	\n\t"

		"movd 15(%0, %%"REG_b"), %%mm1	\n\t"

		"punpcklbw %%mm7, %%mm4		\n\t"

		"punpcklbw %%mm7, %%mm1		\n\t"

		"movd 18(%0, %%"REG_b"), %%mm2	\n\t"

		"movd 21(%0, %%"REG_b"), %%mm3	\n\t"

		"punpcklbw %%mm7, %%mm2		\n\t"

		"punpcklbw %%mm7, %%mm3		\n\t"

		"pmaddwd %%mm6, %%mm4		\n\t"

		"pmaddwd %%mm6, %%mm1		\n\t"

		"pmaddwd %%mm6, %%mm2		\n\t"

		"pmaddwd %%mm6, %%mm3		\n\t"

<cpp:ifndef pos:start="99:1" pos:end="99:21">#<cpp:directive pos:start="99:2" pos:end="99:7">ifndef</cpp:directive> <name pos:start="99:9" pos:end="99:21">FAST_BGR2YV12</name></cpp:ifndef>

		"psrad $8, %%mm4		\n\t"

		"psrad $8, %%mm1		\n\t"

		"psrad $8, %%mm2		\n\t"

		"psrad $8, %%mm3		\n\t"

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

		"packssdw %%mm1, %%mm4		\n\t"

		"packssdw %%mm3, %%mm2		\n\t"

		"pmaddwd %%mm5, %%mm4		\n\t"

		"pmaddwd %%mm5, %%mm2		\n\t"

		"add $24, %%"REG_b"		\n\t"

		"packssdw %%mm2, %%mm4		\n\t"

		"psraw $7, %%mm4		\n\t"



		"packuswb %%mm4, %%mm0		\n\t"

		"paddusb "MANGLE(bgr2YOffset)", %%mm0	\n\t"



		"movq %%mm0, (%1, %%"REG_a")	\n\t"

		"add $8, %%"REG_a"		\n\t"

		" js 1b				\n\t"

		: : "r" (src+width*3), "r" (dst+width), "g" ((long)-width)

		: "%"REG_a, "%"REG_b

	);</asm>

<cpp:else pos:start="145:1" pos:end="145:5">#<cpp:directive pos:start="145:2" pos:end="145:5">else</cpp:directive></cpp:else>

	<decl_stmt pos:start="147:9" pos:end="147:14"><decl pos:start="147:9" pos:end="147:13"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:13">i</name></decl>;</decl_stmt>

	<for pos:start="149:9" pos:end="166:0">for<control pos:start="149:12" pos:end="149:30">(<init pos:start="149:13" pos:end="149:16"><expr pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:13">i</name><operator pos:start="149:14" pos:end="149:14">=</operator><literal type="number" pos:start="149:15" pos:end="149:15">0</literal></expr>;</init> <condition pos:start="149:18" pos:end="149:25"><expr pos:start="149:18" pos:end="149:24"><name pos:start="149:18" pos:end="149:18">i</name><operator pos:start="149:19" pos:end="149:19">&lt;</operator><name pos:start="149:20" pos:end="149:24">width</name></expr>;</condition> <incr pos:start="149:27" pos:end="149:29"><expr pos:start="149:27" pos:end="149:29"><name pos:start="149:27" pos:end="149:27">i</name><operator pos:start="149:28" pos:end="149:29">++</operator></expr></incr>)</control>

	<block pos:start="151:9" pos:end="166:0">{<block_content pos:start="153:17" pos:end="161:89">

		<decl_stmt pos:start="153:17" pos:end="153:34"><decl pos:start="153:17" pos:end="153:33"><type pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">int</name></type> <name pos:start="153:21" pos:end="153:21">b</name><init pos:start="153:22" pos:end="153:33">= <expr pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:26">src</name><index pos:start="153:27" pos:end="153:33">[<expr pos:start="153:28" pos:end="153:32"><name pos:start="153:28" pos:end="153:28">i</name><operator pos:start="153:29" pos:end="153:29">*</operator><literal type="number" pos:start="153:30" pos:end="153:31">3</literal><operator pos:start="153:31" pos:end="153:31">+</operator><literal type="number" pos:start="153:32" pos:end="153:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="155:17" pos:end="155:34"><decl pos:start="155:17" pos:end="155:33"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:21">g</name><init pos:start="155:22" pos:end="155:33">= <expr pos:start="155:24" pos:end="155:33"><name pos:start="155:24" pos:end="155:33"><name pos:start="155:24" pos:end="155:26">src</name><index pos:start="155:27" pos:end="155:33">[<expr pos:start="155:28" pos:end="155:32"><name pos:start="155:28" pos:end="155:28">i</name><operator pos:start="155:29" pos:end="155:29">*</operator><literal type="number" pos:start="155:30" pos:end="155:31">3</literal><operator pos:start="155:31" pos:end="155:31">+</operator><literal type="number" pos:start="155:32" pos:end="155:32">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="157:17" pos:end="157:34"><decl pos:start="157:17" pos:end="157:33"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:21">r</name><init pos:start="157:22" pos:end="157:33">= <expr pos:start="157:24" pos:end="157:33"><name pos:start="157:24" pos:end="157:33"><name pos:start="157:24" pos:end="157:26">src</name><index pos:start="157:27" pos:end="157:33">[<expr pos:start="157:28" pos:end="157:32"><name pos:start="157:28" pos:end="157:28">i</name><operator pos:start="157:29" pos:end="157:29">*</operator><literal type="number" pos:start="157:30" pos:end="157:31">3</literal><operator pos:start="157:31" pos:end="157:31">+</operator><literal type="number" pos:start="157:32" pos:end="157:32">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



		<expr_stmt pos:start="161:17" pos:end="161:89"><expr pos:start="161:17" pos:end="161:88"><name pos:start="161:17" pos:end="161:22"><name pos:start="161:17" pos:end="161:19">dst</name><index pos:start="161:20" pos:end="161:22">[<expr pos:start="161:21" pos:end="161:21"><name pos:start="161:21" pos:end="161:21">i</name></expr>]</index></name><operator pos:start="161:23" pos:end="161:23">=</operator> <operator pos:start="161:25" pos:end="161:25">(</operator><operator pos:start="161:26" pos:end="161:26">(</operator><name pos:start="161:27" pos:end="161:28">RY</name><operator pos:start="161:29" pos:end="161:29">*</operator><name pos:start="161:30" pos:end="161:30">r</name> <operator pos:start="161:32" pos:end="161:32">+</operator> <name pos:start="161:34" pos:end="161:35">GY</name><operator pos:start="161:36" pos:end="161:36">*</operator><name pos:start="161:37" pos:end="161:37">g</name> <operator pos:start="161:39" pos:end="161:39">+</operator> <name pos:start="161:41" pos:end="161:42">BY</name><operator pos:start="161:43" pos:end="161:43">*</operator><name pos:start="161:44" pos:end="161:44">b</name> <operator pos:start="161:46" pos:end="161:46">+</operator> <operator pos:start="161:48" pos:end="161:48">(</operator><literal type="number" pos:start="161:49" pos:end="161:50">33</literal><operator pos:start="161:51" pos:end="161:52">&lt;&lt;</operator><operator pos:start="161:53" pos:end="161:53">(</operator><name pos:start="161:54" pos:end="161:66">RGB2YUV_SHIFT</name><operator pos:start="161:67" pos:end="161:67">-</operator><literal type="number" pos:start="161:68" pos:end="161:68">1</literal><operator pos:start="161:69" pos:end="161:69">)</operator><operator pos:start="161:70" pos:end="161:70">)</operator> <operator pos:start="161:72" pos:end="161:72">)</operator><operator pos:start="161:73" pos:end="161:74">&gt;&gt;</operator><name pos:start="161:75" pos:end="161:87">RGB2YUV_SHIFT</name><operator pos:start="161:88" pos:end="161:88">)</operator></expr>;</expr_stmt>

	</block_content>}</block></for>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
