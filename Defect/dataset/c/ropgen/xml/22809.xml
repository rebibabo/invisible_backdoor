<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22809.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:33">handle_aiocb_ioctl</name><parameter_list pos:start="1:34" pos:end="1:60">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:52">qemu_paiocb</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">aiocb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:29">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:79"><expr pos:start="9:5" pos:end="9:78"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:78"><name pos:start="9:11" pos:end="9:15">ioctl</name><argument_list pos:start="9:16" pos:end="9:78">(<argument pos:start="9:17" pos:end="9:33"><expr pos:start="9:17" pos:end="9:33"><name pos:start="9:17" pos:end="9:33"><name pos:start="9:17" pos:end="9:21">aiocb</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:33">aio_fildes</name></name></expr></argument>, <argument pos:start="9:36" pos:end="9:55"><expr pos:start="9:36" pos:end="9:55"><name pos:start="9:36" pos:end="9:55"><name pos:start="9:36" pos:end="9:40">aiocb</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:55">aio_ioctl_cmd</name></name></expr></argument>, <argument pos:start="9:58" pos:end="9:77"><expr pos:start="9:58" pos:end="9:77"><name pos:start="9:58" pos:end="9:77"><name pos:start="9:58" pos:end="9:62">aiocb</name><operator pos:start="9:63" pos:end="9:64">-&gt;</operator><name pos:start="9:65" pos:end="9:77">aio_ioctl_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:22"><if pos:start="11:5" pos:end="13:22">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:14">==</operator> <operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:22"><block_content pos:start="13:9" pos:end="13:22">

        <return pos:start="13:9" pos:end="13:22">return <expr pos:start="13:16" pos:end="13:21"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:21">errno</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="31:7">/*

     * This looks weird, but the aio code only consideres a request

     * successful if it has written the number full number of bytes.

     *

     * Now we overload aio_nbytes as aio_ioctl_cmd for the ioctl command,

     * so in fact we return the ioctl command here to make posix_aio_read()

     * happy..

     */</comment>

    <return pos:start="33:5" pos:end="33:29">return <expr pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:16">aiocb</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">aio_nbytes</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
