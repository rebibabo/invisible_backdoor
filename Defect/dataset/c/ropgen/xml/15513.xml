<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15513.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tta_decode_init</name><parameter_list pos:start="1:27" pos:end="1:50">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="59:13">{<block_content pos:start="3:5" pos:end="59:13">
    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">TTAContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:17">s</name> <init pos:start="3:19" pos:end="3:36">= <expr pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:25">avctx</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:21"><expr pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:5">s</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:12">avctx</name></name> <operator pos:start="5:14" pos:end="5:14">=</operator> <name pos:start="5:16" pos:end="5:20">avctx</name></expr>;</expr_stmt>
    <comment type="line" pos:start="6:5" pos:end="6:50">// 30bytes includes a seektable with one frame</comment>
    <if_stmt pos:start="7:5" pos:end="8:67"><if pos:start="7:5" pos:end="8:67">if <condition pos:start="7:8" pos:end="7:35">(<expr pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:13">avctx</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:29">extradata_size</name></name> <operator pos:start="7:31" pos:end="7:31">&lt;</operator> <literal type="number" pos:start="7:33" pos:end="7:34">30</literal></expr>)</condition><block type="pseudo" pos:start="8:5" pos:end="8:67"><block_content pos:start="8:5" pos:end="8:67">
    <expr_stmt pos:start="8:5" pos:end="8:67"><expr pos:start="8:5" pos:end="8:66"><call pos:start="8:5" pos:end="8:66"><name pos:start="8:5" pos:end="8:17">init_get_bits</name><argument_list pos:start="8:18" pos:end="8:66">(<argument pos:start="8:19" pos:end="8:24"><expr pos:start="8:19" pos:end="8:24"><operator pos:start="8:19" pos:end="8:19">&amp;</operator><name pos:start="8:20" pos:end="8:24"><name pos:start="8:20" pos:end="8:20">s</name><operator pos:start="8:21" pos:end="8:22">-&gt;</operator><name pos:start="8:23" pos:end="8:24">gb</name></name></expr></argument>, <argument pos:start="8:27" pos:end="8:42"><expr pos:start="8:27" pos:end="8:42"><name pos:start="8:27" pos:end="8:42"><name pos:start="8:27" pos:end="8:31">avctx</name><operator pos:start="8:32" pos:end="8:33">-&gt;</operator><name pos:start="8:34" pos:end="8:42">extradata</name></name></expr></argument>, <argument pos:start="8:45" pos:end="8:65"><expr pos:start="8:45" pos:end="8:65"><name pos:start="8:45" pos:end="8:65"><name pos:start="8:45" pos:end="8:49">avctx</name><operator pos:start="8:50" pos:end="8:51">-&gt;</operator><name pos:start="8:52" pos:end="8:65">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="9:5" pos:end="59:13"><if pos:start="9:5" pos:end="59:13">if <condition pos:start="9:8" pos:end="9:70">(<expr pos:start="9:9" pos:end="9:69"><call pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:22">show_bits_long</name><argument_list pos:start="9:23" pos:end="9:34">(<argument pos:start="9:24" pos:end="9:29"><expr pos:start="9:24" pos:end="9:29"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">gb</name></name></expr></argument>, <argument pos:start="9:32" pos:end="9:33"><expr pos:start="9:32" pos:end="9:33"><literal type="number" pos:start="9:32" pos:end="9:33">32</literal></expr></argument>)</argument_list></call> <operator pos:start="9:36" pos:end="9:37">==</operator> <call pos:start="9:39" pos:end="9:69"><name pos:start="9:39" pos:end="9:46">bswap_32</name><argument_list pos:start="9:47" pos:end="9:69">(<argument pos:start="9:48" pos:end="9:68"><expr pos:start="9:48" pos:end="9:68"><call pos:start="9:48" pos:end="9:68"><name pos:start="9:48" pos:end="9:60">ff_get_fourcc</name><argument_list pos:start="9:61" pos:end="9:68">(<argument pos:start="9:62" pos:end="9:67"><expr pos:start="9:62" pos:end="9:67"><literal type="string" pos:start="9:62" pos:end="9:67">"TTA1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition>
    <block pos:start="10:5" pos:end="59:13">{<block_content pos:start="12:9" pos:end="59:13">
        <comment type="block" pos:start="11:9" pos:end="11:23">/* signature */</comment>
        <expr_stmt pos:start="12:9" pos:end="12:30"><expr pos:start="12:9" pos:end="12:29"><call pos:start="12:9" pos:end="12:29"><name pos:start="12:9" pos:end="12:17">skip_bits</name><argument_list pos:start="12:18" pos:end="12:29">(<argument pos:start="12:19" pos:end="12:24"><expr pos:start="12:19" pos:end="12:24"><operator pos:start="12:19" pos:end="12:19">&amp;</operator><name pos:start="12:20" pos:end="12:24"><name pos:start="12:20" pos:end="12:20">s</name><operator pos:start="12:21" pos:end="12:22">-&gt;</operator><name pos:start="12:23" pos:end="12:24">gb</name></name></expr></argument>, <argument pos:start="12:27" pos:end="12:28"><expr pos:start="12:27" pos:end="12:28"><literal type="number" pos:start="12:27" pos:end="12:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="13:1" pos:end="13:77">//        if (get_bits_long(&amp;s-&gt;gb, 32) != bswap_32(ff_get_fourcc("TTA1"))) {</comment>
<comment type="line" pos:start="14:1" pos:end="14:64">//            av_log(s-&gt;avctx, AV_LOG_ERROR, "Missing magic\n");</comment>
<comment type="line" pos:start="15:1" pos:end="15:24">//            return -1;</comment>
<comment type="line" pos:start="16:1" pos:end="16:11">//        }</comment>
        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">flags</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:27">get_le16</name><argument_list pos:start="17:28" pos:end="17:35">(<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:34"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="59:13"><if pos:start="18:9" pos:end="59:13">if <condition pos:start="18:12" pos:end="18:43">(<expr pos:start="18:13" pos:end="18:42"><name pos:start="18:13" pos:end="18:20"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:20">flags</name></name> <operator pos:start="18:22" pos:end="18:23">!=</operator> <literal type="number" pos:start="18:25" pos:end="18:25">1</literal> <operator pos:start="18:27" pos:end="18:28">&amp;&amp;</operator> <name pos:start="18:30" pos:end="18:37"><name pos:start="18:30" pos:end="18:30">s</name><operator pos:start="18:31" pos:end="18:32">-&gt;</operator><name pos:start="18:33" pos:end="18:37">flags</name></name> <operator pos:start="18:39" pos:end="18:40">!=</operator> <literal type="number" pos:start="18:42" pos:end="18:42">3</literal></expr>)</condition>
        <block pos:start="19:9" pos:end="59:13">{<block_content pos:start="20:13" pos:end="59:13">
            <expr_stmt pos:start="20:13" pos:end="20:62"><expr pos:start="20:13" pos:end="20:61"><call pos:start="20:13" pos:end="20:61"><name pos:start="20:13" pos:end="20:18">av_log</name><argument_list pos:start="20:19" pos:end="20:61">(<argument pos:start="20:20" pos:end="20:27"><expr pos:start="20:20" pos:end="20:27"><name pos:start="20:20" pos:end="20:27"><name pos:start="20:20" pos:end="20:20">s</name><operator pos:start="20:21" pos:end="20:22">-&gt;</operator><name pos:start="20:23" pos:end="20:27">avctx</name></name></expr></argument>, <argument pos:start="20:30" pos:end="20:41"><expr pos:start="20:30" pos:end="20:41"><name pos:start="20:30" pos:end="20:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="20:44" pos:end="20:60"><expr pos:start="20:44" pos:end="20:60"><literal type="string" pos:start="20:44" pos:end="20:60">"Invalid flags\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">is_float</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <operator pos:start="21:23" pos:end="21:23">(</operator><name pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:31">flags</name></name> <operator pos:start="21:33" pos:end="21:34">==</operator> <name pos:start="21:36" pos:end="21:47">FORMAT_FLOAT</name><operator pos:start="21:48" pos:end="21:48">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:57"><expr pos:start="22:9" pos:end="22:56"><name pos:start="22:9" pos:end="22:23"><name pos:start="22:9" pos:end="22:13">avctx</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:23">channels</name></name> <operator pos:start="22:25" pos:end="22:25">=</operator> <name pos:start="22:27" pos:end="22:37"><name pos:start="22:27" pos:end="22:27">s</name><operator pos:start="22:28" pos:end="22:29">-&gt;</operator><name pos:start="22:30" pos:end="22:37">channels</name></name> <operator pos:start="22:39" pos:end="22:39">=</operator> <call pos:start="22:41" pos:end="22:56"><name pos:start="22:41" pos:end="22:48">get_le16</name><argument_list pos:start="22:49" pos:end="22:56">(<argument pos:start="22:50" pos:end="22:55"><expr pos:start="22:50" pos:end="22:55"><operator pos:start="22:50" pos:end="22:50">&amp;</operator><name pos:start="22:51" pos:end="22:55"><name pos:start="22:51" pos:end="22:51">s</name><operator pos:start="22:52" pos:end="22:53">-&gt;</operator><name pos:start="22:54" pos:end="22:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:30">bits_per_sample</name></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <call pos:start="23:34" pos:end="23:49"><name pos:start="23:34" pos:end="23:41">get_le16</name><argument_list pos:start="23:42" pos:end="23:49">(<argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:50"><expr pos:start="24:9" pos:end="24:49"><name pos:start="24:9" pos:end="24:14"><name pos:start="24:9" pos:end="24:9">s</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:14">bps</name></name> <operator pos:start="24:16" pos:end="24:16">=</operator> <operator pos:start="24:18" pos:end="24:18">(</operator><name pos:start="24:19" pos:end="24:40"><name pos:start="24:19" pos:end="24:23">avctx</name><operator pos:start="24:24" pos:end="24:25">-&gt;</operator><name pos:start="24:26" pos:end="24:40">bits_per_sample</name></name> <operator pos:start="24:42" pos:end="24:42">+</operator> <literal type="number" pos:start="24:44" pos:end="24:44">7</literal><operator pos:start="24:45" pos:end="24:45">)</operator> <operator pos:start="24:47" pos:end="24:47">/</operator> <literal type="number" pos:start="24:49" pos:end="24:49">8</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">sample_rate</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <call pos:start="25:30" pos:end="25:45"><name pos:start="25:30" pos:end="25:37">get_le32</name><argument_list pos:start="25:38" pos:end="25:45">(<argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:40">s</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="59:13"><if pos:start="26:9" pos:end="59:13">if<condition pos:start="26:11" pos:end="26:40">(<expr pos:start="26:12" pos:end="26:39"><name pos:start="26:12" pos:end="26:29"><name pos:start="26:12" pos:end="26:16">avctx</name><operator pos:start="26:17" pos:end="26:18">-&gt;</operator><name pos:start="26:19" pos:end="26:29">sample_rate</name></name> <operator pos:start="26:31" pos:end="26:31">&gt;</operator> <literal type="number" pos:start="26:33" pos:end="26:39">1000000</literal></expr>)</condition><block pos:start="26:41" pos:end="59:13">{<block_content pos:start="27:13" pos:end="59:13"> <comment type="line" pos:start="26:43" pos:end="26:117">//prevent FRAME_TIME * avctx-&gt;sample_rate from overflowing and sanity check</comment>
            <expr_stmt pos:start="27:13" pos:end="27:67"><expr pos:start="27:13" pos:end="27:66"><call pos:start="27:13" pos:end="27:66"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:66">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:24">avctx</name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:41" pos:end="27:65"><expr pos:start="27:41" pos:end="27:65"><literal type="string" pos:start="27:41" pos:end="27:65">"sample_rate too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:42"><expr pos:start="28:9" pos:end="28:41"><name pos:start="28:9" pos:end="28:22"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:22">data_length</name></name> <operator pos:start="28:24" pos:end="28:24">=</operator> <call pos:start="28:26" pos:end="28:41"><name pos:start="28:26" pos:end="28:33">get_le32</name><argument_list pos:start="28:34" pos:end="28:41">(<argument pos:start="28:35" pos:end="28:40"><expr pos:start="28:35" pos:end="28:40"><operator pos:start="28:35" pos:end="28:35">&amp;</operator><name pos:start="28:36" pos:end="28:40"><name pos:start="28:36" pos:end="28:36">s</name><operator pos:start="28:37" pos:end="28:38">-&gt;</operator><name pos:start="28:39" pos:end="28:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:17">skip_bits</name><argument_list pos:start="29:18" pos:end="29:29">(<argument pos:start="29:19" pos:end="29:24"><expr pos:start="29:19" pos:end="29:24"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:24">gb</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><literal type="number" pos:start="29:27" pos:end="29:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:32" pos:end="29:49">// CRC32 of header</comment>
        <if_stmt pos:start="30:9" pos:end="59:13"><if pos:start="30:9" pos:end="59:13">if <condition pos:start="30:12" pos:end="30:24">(<expr pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:13">s</name><operator pos:start="30:14" pos:end="30:15">-&gt;</operator><name pos:start="30:16" pos:end="30:23">is_float</name></name></expr>)</condition>
        <block pos:start="31:9" pos:end="59:13">{<block_content pos:start="32:13" pos:end="59:13">
            <expr_stmt pos:start="32:13" pos:end="32:47"><expr pos:start="32:13" pos:end="32:46"><name pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:17">avctx</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:29">sample_fmt</name></name> <operator pos:start="32:31" pos:end="32:31">=</operator> <name pos:start="32:33" pos:end="32:46">SAMPLE_FMT_FLT</name></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:106"><expr pos:start="33:13" pos:end="33:105"><call pos:start="33:13" pos:end="33:105"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:105">(<argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">avctx</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><name pos:start="33:30" pos:end="33:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:44" pos:end="33:104"><expr pos:start="33:44" pos:end="33:104"><literal type="string" pos:start="33:44" pos:end="33:104">"Unsupported sample format. Please contact the developers.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="57:5"><else pos:start="34:9" pos:end="57:5">else<block type="pseudo" pos:start="34:14" pos:end="57:5"><block_content pos:start="34:14" pos:end="57:5"> <switch pos:start="34:14" pos:end="57:5">switch<condition pos:start="34:20" pos:end="34:27">(<expr pos:start="34:21" pos:end="34:26"><name pos:start="34:21" pos:end="34:26"><name pos:start="34:21" pos:end="34:21">s</name><operator pos:start="34:22" pos:end="34:23">-&gt;</operator><name pos:start="34:24" pos:end="34:26">bps</name></name></expr>)</condition> <block pos:start="34:29" pos:end="57:5">{<block_content pos:start="36:13" pos:end="56:83">
<comment type="line" pos:start="35:1" pos:end="35:63">//            case 1: avctx-&gt;sample_fmt = SAMPLE_FMT_U8; break;</comment>
            <case pos:start="36:13" pos:end="36:19">case <expr pos:start="36:18" pos:end="36:18"><literal type="number" pos:start="36:18" pos:end="36:18">2</literal></expr>:</case> <expr_stmt pos:start="36:21" pos:end="36:55"><expr pos:start="36:21" pos:end="36:54"><name pos:start="36:21" pos:end="36:37"><name pos:start="36:21" pos:end="36:25">avctx</name><operator pos:start="36:26" pos:end="36:27">-&gt;</operator><name pos:start="36:28" pos:end="36:37">sample_fmt</name></name> <operator pos:start="36:39" pos:end="36:39">=</operator> <name pos:start="36:41" pos:end="36:54">SAMPLE_FMT_S16</name></expr>;</expr_stmt> <break pos:start="36:57" pos:end="36:62">break;</break>
<comment type="line" pos:start="37:1" pos:end="37:64">//            case 3: avctx-&gt;sample_fmt = SAMPLE_FMT_S24; break;</comment>
            <case pos:start="38:13" pos:end="38:19">case <expr pos:start="38:18" pos:end="38:18"><literal type="number" pos:start="38:18" pos:end="38:18">4</literal></expr>:</case> <expr_stmt pos:start="38:21" pos:end="38:55"><expr pos:start="38:21" pos:end="38:54"><name pos:start="38:21" pos:end="38:37"><name pos:start="38:21" pos:end="38:25">avctx</name><operator pos:start="38:26" pos:end="38:27">-&gt;</operator><name pos:start="38:28" pos:end="38:37">sample_fmt</name></name> <operator pos:start="38:39" pos:end="38:39">=</operator> <name pos:start="38:41" pos:end="38:54">SAMPLE_FMT_S32</name></expr>;</expr_stmt> <break pos:start="38:57" pos:end="38:62">break;</break>
            <default pos:start="39:13" pos:end="39:20">default:</default>
                <expr_stmt pos:start="40:17" pos:end="43:0"><expr pos:start="40:17" pos:end="40:117"><call pos:start="40:17" pos:end="40:117"><name pos:start="40:17" pos:end="40:22">av_log</name><argument_list pos:start="40:23" pos:end="40:117">(<argument pos:start="40:24" pos:end="40:31"><expr pos:start="40:24" pos:end="40:31"><name pos:start="40:24" pos:end="40:31"><name pos:start="40:24" pos:end="40:24">s</name><operator pos:start="40:25" pos:end="40:26">-&gt;</operator><name pos:start="40:27" pos:end="40:31">avctx</name></name></expr></argument>, <argument pos:start="40:34" pos:end="40:45"><expr pos:start="40:34" pos:end="40:45"><name pos:start="40:34" pos:end="40:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="40:48" pos:end="40:116"><expr pos:start="40:48" pos:end="40:116"><literal type="string" pos:start="40:48" pos:end="40:116">"Invalid/unsupported sample format. Please contact the developers.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="41:9" pos:end="41:69">// FIXME: horribly broken, but directly from reference source</comment>
<cpp:define pos:start="42:1" pos:end="42:41">#<cpp:directive pos:start="42:2" pos:end="42:7">define</cpp:directive> <cpp:macro pos:start="42:9" pos:end="42:18"><name pos:start="42:9" pos:end="42:18">FRAME_TIME</name></cpp:macro> <cpp:value pos:start="42:20" pos:end="42:41">1.04489795918367346939</cpp:value></cpp:define>
        <expr_stmt pos:start="43:9" pos:end="43:65"><expr pos:start="43:9" pos:end="43:64"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:23">frame_length</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:30">int</name><operator pos:start="43:31" pos:end="43:31">)</operator><operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:42">FRAME_TIME</name> <operator pos:start="43:44" pos:end="43:44">*</operator> <name pos:start="43:46" pos:end="43:63"><name pos:start="43:46" pos:end="43:50">avctx</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:63">sample_rate</name></name><operator pos:start="43:64" pos:end="43:64">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:64"><expr pos:start="44:9" pos:end="44:63"><name pos:start="44:9" pos:end="44:28"><name pos:start="44:9" pos:end="44:9">s</name><operator pos:start="44:10" pos:end="44:11">-&gt;</operator><name pos:start="44:12" pos:end="44:28">last_frame_length</name></name> <operator pos:start="44:30" pos:end="44:30">=</operator> <name pos:start="44:32" pos:end="44:45"><name pos:start="44:32" pos:end="44:32">s</name><operator pos:start="44:33" pos:end="44:34">-&gt;</operator><name pos:start="44:35" pos:end="44:45">data_length</name></name> <operator pos:start="44:47" pos:end="44:47">%</operator> <name pos:start="44:49" pos:end="44:63"><name pos:start="44:49" pos:end="44:49">s</name><operator pos:start="44:50" pos:end="44:51">-&gt;</operator><name pos:start="44:52" pos:end="44:63">frame_length</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="46:55"><expr pos:start="45:9" pos:end="46:54"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:23">total_frames</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:40"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:40">data_length</name></name> <operator pos:start="45:42" pos:end="45:42">/</operator> <name pos:start="45:44" pos:end="45:58"><name pos:start="45:44" pos:end="45:44">s</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:58">frame_length</name></name> <operator pos:start="45:60" pos:end="45:60">+</operator>
                        <operator pos:start="46:25" pos:end="46:25">(</operator><ternary pos:start="46:26" pos:end="46:53"><condition pos:start="46:26" pos:end="46:47"><expr pos:start="46:26" pos:end="46:45"><name pos:start="46:26" pos:end="46:45"><name pos:start="46:26" pos:end="46:26">s</name><operator pos:start="46:27" pos:end="46:28">-&gt;</operator><name pos:start="46:29" pos:end="46:45">last_frame_length</name></name></expr> ?</condition><then pos:start="46:49" pos:end="46:49"> <expr pos:start="46:49" pos:end="46:49"><literal type="number" pos:start="46:49" pos:end="46:49">1</literal></expr> </then><else pos:start="46:51" pos:end="46:53">: <expr pos:start="46:53" pos:end="46:53"><literal type="number" pos:start="46:53" pos:end="46:53">0</literal></expr></else></ternary><operator pos:start="46:54" pos:end="46:54">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="47:9" pos:end="49:32"><expr pos:start="47:9" pos:end="49:31"><call pos:start="47:9" pos:end="49:31"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:31">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:40" pos:end="47:89"><expr pos:start="47:40" pos:end="47:89"><literal type="string" pos:start="47:40" pos:end="47:89">"flags: %x chans: %d bps: %d rate: %d block: %d\n"</literal></expr></argument>,
            <argument pos:start="48:13" pos:end="48:20"><expr pos:start="48:13" pos:end="48:20"><name pos:start="48:13" pos:end="48:20"><name pos:start="48:13" pos:end="48:13">s</name><operator pos:start="48:14" pos:end="48:15">-&gt;</operator><name pos:start="48:16" pos:end="48:20">flags</name></name></expr></argument>, <argument pos:start="48:23" pos:end="48:37"><expr pos:start="48:23" pos:end="48:37"><name pos:start="48:23" pos:end="48:37"><name pos:start="48:23" pos:end="48:27">avctx</name><operator pos:start="48:28" pos:end="48:29">-&gt;</operator><name pos:start="48:30" pos:end="48:37">channels</name></name></expr></argument>, <argument pos:start="48:40" pos:end="48:61"><expr pos:start="48:40" pos:end="48:61"><name pos:start="48:40" pos:end="48:61"><name pos:start="48:40" pos:end="48:44">avctx</name><operator pos:start="48:45" pos:end="48:46">-&gt;</operator><name pos:start="48:47" pos:end="48:61">bits_per_sample</name></name></expr></argument>, <argument pos:start="48:64" pos:end="48:81"><expr pos:start="48:64" pos:end="48:81"><name pos:start="48:64" pos:end="48:81"><name pos:start="48:64" pos:end="48:68">avctx</name><operator pos:start="48:69" pos:end="48:70">-&gt;</operator><name pos:start="48:71" pos:end="48:81">sample_rate</name></name></expr></argument>,
            <argument pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:17">avctx</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:30">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="50:9" pos:end="51:84"><expr pos:start="50:9" pos:end="51:83"><call pos:start="50:9" pos:end="51:83"><name pos:start="50:9" pos:end="50:14">av_log</name><argument_list pos:start="50:15" pos:end="51:83">(<argument pos:start="50:16" pos:end="50:23"><expr pos:start="50:16" pos:end="50:23"><name pos:start="50:16" pos:end="50:23"><name pos:start="50:16" pos:end="50:16">s</name><operator pos:start="50:17" pos:end="50:18">-&gt;</operator><name pos:start="50:19" pos:end="50:23">avctx</name></name></expr></argument>, <argument pos:start="50:26" pos:end="50:37"><expr pos:start="50:26" pos:end="50:37"><name pos:start="50:26" pos:end="50:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="50:40" pos:end="50:94"><expr pos:start="50:40" pos:end="50:94"><literal type="string" pos:start="50:40" pos:end="50:94">"data_length: %d frame_length: %d last: %d total: %d\n"</literal></expr></argument>,
            <argument pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:26">data_length</name></name></expr></argument>, <argument pos:start="51:29" pos:end="51:43"><expr pos:start="51:29" pos:end="51:43"><name pos:start="51:29" pos:end="51:43"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:43">frame_length</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:65"><expr pos:start="51:46" pos:end="51:65"><name pos:start="51:46" pos:end="51:65"><name pos:start="51:46" pos:end="51:46">s</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:65">last_frame_length</name></name></expr></argument>, <argument pos:start="51:68" pos:end="51:82"><expr pos:start="51:68" pos:end="51:82"><name pos:start="51:68" pos:end="51:82"><name pos:start="51:68" pos:end="51:68">s</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:82">total_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="52:9" pos:end="52:28">// FIXME: seek table</comment>
        <for pos:start="53:9" pos:end="54:34">for <control pos:start="53:13" pos:end="53:45">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:40"><expr pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <name pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:39">total_frames</name></name></expr>;</condition> <incr pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:42">i</name><operator pos:start="53:43" pos:end="53:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="54:13" pos:end="54:34"><block_content pos:start="54:13" pos:end="54:34">
            <expr_stmt pos:start="54:13" pos:end="54:34"><expr pos:start="54:13" pos:end="54:33"><call pos:start="54:13" pos:end="54:33"><name pos:start="54:13" pos:end="54:21">skip_bits</name><argument_list pos:start="54:22" pos:end="54:33">(<argument pos:start="54:23" pos:end="54:28"><expr pos:start="54:23" pos:end="54:28"><operator pos:start="54:23" pos:end="54:23">&amp;</operator><name pos:start="54:24" pos:end="54:28"><name pos:start="54:24" pos:end="54:24">s</name><operator pos:start="54:25" pos:end="54:26">-&gt;</operator><name pos:start="54:27" pos:end="54:28">gb</name></name></expr></argument>, <argument pos:start="54:31" pos:end="54:32"><expr pos:start="54:31" pos:end="54:32"><literal type="number" pos:start="54:31" pos:end="54:32">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><call pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:17">skip_bits</name><argument_list pos:start="55:18" pos:end="55:29">(<argument pos:start="55:19" pos:end="55:24"><expr pos:start="55:19" pos:end="55:24"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:24">gb</name></name></expr></argument>, <argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><literal type="number" pos:start="55:27" pos:end="55:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="55:32" pos:end="55:52">// CRC32 of seektable</comment>
        <expr_stmt pos:start="56:9" pos:end="56:83"><expr pos:start="56:9" pos:end="56:82"><name pos:start="56:9" pos:end="56:24"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:24">decode_buffer</name></name> <operator pos:start="56:26" pos:end="56:26">=</operator> <call pos:start="56:28" pos:end="56:82"><name pos:start="56:28" pos:end="56:37">av_mallocz</name><argument_list pos:start="56:38" pos:end="56:82">(<argument pos:start="56:39" pos:end="56:81"><expr pos:start="56:39" pos:end="56:81"><sizeof pos:start="56:39" pos:end="56:53">sizeof<argument_list pos:start="56:45" pos:end="56:53">(<argument pos:start="56:46" pos:end="56:52"><expr pos:start="56:46" pos:end="56:52"><name pos:start="56:46" pos:end="56:52">int32_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="56:54" pos:end="56:54">*</operator><name pos:start="56:55" pos:end="56:69"><name pos:start="56:55" pos:end="56:55">s</name><operator pos:start="56:56" pos:end="56:57">-&gt;</operator><name pos:start="56:58" pos:end="56:69">frame_length</name></name><operator pos:start="56:70" pos:end="56:70">*</operator><name pos:start="56:71" pos:end="56:81"><name pos:start="56:71" pos:end="56:71">s</name><operator pos:start="56:72" pos:end="56:73">-&gt;</operator><name pos:start="56:74" pos:end="56:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></switch></block_content></block></else></if_stmt> <if_stmt pos:start="57:7" pos:end="59:13"><else pos:start="57:7" pos:end="59:13">else <block pos:start="57:12" pos:end="59:13">{<block_content pos:start="58:9" pos:end="59:13">
        <expr_stmt pos:start="58:9" pos:end="58:65"><expr pos:start="58:9" pos:end="58:64"><call pos:start="58:9" pos:end="58:64"><name pos:start="58:9" pos:end="58:14">av_log</name><argument_list pos:start="58:15" pos:end="58:64">(<argument pos:start="58:16" pos:end="58:20"><expr pos:start="58:16" pos:end="58:20"><name pos:start="58:16" pos:end="58:20">avctx</name></expr></argument>, <argument pos:start="58:23" pos:end="58:34"><expr pos:start="58:23" pos:end="58:34"><name pos:start="58:23" pos:end="58:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="58:37" pos:end="58:63"><expr pos:start="58:37" pos:end="58:63"><literal type="string" pos:start="58:37" pos:end="58:63">"Wrong extradata present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
