<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16672.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:42">ff_h264_decode_ref_pic_list_reordering</name><parameter_list pos:start="1:43" pos:end="1:58">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>)</parameter_list><block pos:start="1:59" pos:end="231:1">{<block_content pos:start="3:5" pos:end="229:13">

    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:12"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:12">list</name></decl>, <decl pos:start="3:15" pos:end="3:19"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:19">index</name></decl>, <decl pos:start="3:22" pos:end="3:34"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:22" pos:end="3:34">pic_structure</name></decl>, <decl pos:start="3:37" pos:end="3:37"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:37" pos:end="3:37">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><call pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:20">print_short_term</name><argument_list pos:start="7:21" pos:end="7:23">(<argument pos:start="7:22" pos:end="7:22"><expr pos:start="7:22" pos:end="7:22"><name pos:start="7:22" pos:end="7:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><call pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:19">print_long_term</name><argument_list pos:start="9:20" pos:end="9:22">(<argument pos:start="9:21" pos:end="9:21"><expr pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="13:5" pos:end="197:5">for<control pos:start="13:8" pos:end="13:43">(<init pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">list</name><operator pos:start="13:13" pos:end="13:13">=</operator><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:35"><expr pos:start="13:17" pos:end="13:34"><name pos:start="13:17" pos:end="13:20">list</name><operator pos:start="13:21" pos:end="13:21">&lt;</operator><name pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:22">h</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:34">list_count</name></name></expr>;</condition> <incr pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:40">list</name><operator pos:start="13:41" pos:end="13:42">++</operator></expr></incr>)</control><block pos:start="13:44" pos:end="197:5">{<block_content pos:start="15:9" pos:end="195:9">

        <for pos:start="15:9" pos:end="17:79">for <control pos:start="15:13" pos:end="15:48">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:43"><expr pos:start="15:21" pos:end="15:42"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:42"><name pos:start="15:25" pos:end="15:25">h</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:36">ref_count</name><index pos:start="15:37" pos:end="15:42">[<expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:45">i</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:13" pos:end="17:79"><block_content pos:start="17:13" pos:end="17:79">

            <expr_stmt pos:start="17:13" pos:end="17:79"><expr pos:start="17:13" pos:end="17:78"><call pos:start="17:13" pos:end="17:78"><name pos:start="17:13" pos:end="17:24">COPY_PICTURE</name><argument_list pos:start="17:25" pos:end="17:78">(<argument pos:start="17:26" pos:end="17:46"><expr pos:start="17:26" pos:end="17:46"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:46"><name pos:start="17:27" pos:end="17:27">h</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:37">ref_list</name><index pos:start="17:38" pos:end="17:43">[<expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">list</name></expr>]</index><index pos:start="17:44" pos:end="17:46">[<expr pos:start="17:45" pos:end="17:45"><name pos:start="17:45" pos:end="17:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="17:49" pos:end="17:77"><expr pos:start="17:49" pos:end="17:77"><operator pos:start="17:49" pos:end="17:49">&amp;</operator><name pos:start="17:50" pos:end="17:77"><name pos:start="17:50" pos:end="17:50">h</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:68">default_ref_list</name><index pos:start="17:69" pos:end="17:74">[<expr pos:start="17:70" pos:end="17:73"><name pos:start="17:70" pos:end="17:73">list</name></expr>]</index><index pos:start="17:75" pos:end="17:77">[<expr pos:start="17:76" pos:end="17:76"><name pos:start="17:76" pos:end="17:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="21:9" pos:end="195:9"><if pos:start="21:9" pos:end="195:9">if<condition pos:start="21:11" pos:end="21:29">(<expr pos:start="21:12" pos:end="21:28"><call pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:20">get_bits1</name><argument_list pos:start="21:21" pos:end="21:28">(<argument pos:start="21:22" pos:end="21:27"><expr pos:start="21:22" pos:end="21:27"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:23">h</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="21:30" pos:end="195:9">{<block_content pos:start="23:13" pos:end="193:13">

            <decl_stmt pos:start="23:13" pos:end="23:38"><decl pos:start="23:13" pos:end="23:37"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:20">pred</name><init pos:start="23:21" pos:end="23:37">= <expr pos:start="23:23" pos:end="23:37"><name pos:start="23:23" pos:end="23:37"><name pos:start="23:23" pos:end="23:23">h</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:37">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="27:13" pos:end="193:13">for<control pos:start="27:16" pos:end="27:35">(<init pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:21">index</name><operator pos:start="27:22" pos:end="27:22">=</operator><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</init> <condition pos:start="27:26" pos:end="27:26">;</condition> <incr pos:start="27:28" pos:end="27:34"><expr pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:32">index</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr></incr>)</control><block pos:start="27:36" pos:end="193:13">{<block_content pos:start="29:17" pos:end="191:17">

                <decl_stmt pos:start="29:17" pos:end="29:82"><decl pos:start="29:17" pos:end="29:81"><type pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:24">unsigned</name> <name pos:start="29:26" pos:end="29:28">int</name></type> <name pos:start="29:30" pos:end="29:55">reordering_of_pic_nums_idc</name><init pos:start="29:56" pos:end="29:81">= <expr pos:start="29:58" pos:end="29:81"><call pos:start="29:58" pos:end="29:81"><name pos:start="29:58" pos:end="29:73">get_ue_golomb_31</name><argument_list pos:start="29:74" pos:end="29:81">(<argument pos:start="29:75" pos:end="29:80"><expr pos:start="29:75" pos:end="29:80"><operator pos:start="29:75" pos:end="29:75">&amp;</operator><name pos:start="29:76" pos:end="29:80"><name pos:start="29:76" pos:end="29:76">h</name><operator pos:start="29:77" pos:end="29:78">-&gt;</operator><name pos:start="29:79" pos:end="29:80">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="31:17" pos:end="31:36"><decl pos:start="31:17" pos:end="31:35"><type pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:24">unsigned</name> <name pos:start="31:26" pos:end="31:28">int</name></type> <name pos:start="31:30" pos:end="31:35">pic_id</name></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:22"><decl pos:start="33:17" pos:end="33:21"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:36"><decl pos:start="35:17" pos:end="35:35"><type pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:23">Picture</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:28">ref</name> <init pos:start="35:30" pos:end="35:35">= <expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="39:17" pos:end="41:26"><if pos:start="39:17" pos:end="41:26">if<condition pos:start="39:19" pos:end="39:49">(<expr pos:start="39:20" pos:end="39:48"><name pos:start="39:20" pos:end="39:45">reordering_of_pic_nums_idc</name><operator pos:start="39:46" pos:end="39:47">==</operator><literal type="number" pos:start="39:48" pos:end="39:48">3</literal></expr>)</condition><block type="pseudo" pos:start="41:21" pos:end="41:26"><block_content pos:start="41:21" pos:end="41:26">

                    <break pos:start="41:21" pos:end="41:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="45:17" pos:end="51:17"><if pos:start="45:17" pos:end="51:17">if<condition pos:start="45:19" pos:end="45:47">(<expr pos:start="45:20" pos:end="45:46"><name pos:start="45:20" pos:end="45:24">index</name> <operator pos:start="45:26" pos:end="45:27">&gt;=</operator> <name pos:start="45:29" pos:end="45:46"><name pos:start="45:29" pos:end="45:29">h</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:40">ref_count</name><index pos:start="45:41" pos:end="45:46">[<expr pos:start="45:42" pos:end="45:45"><name pos:start="45:42" pos:end="45:45">list</name></expr>]</index></name></expr>)</condition><block pos:start="45:48" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:30">

                    <expr_stmt pos:start="47:21" pos:end="47:81"><expr pos:start="47:21" pos:end="47:80"><call pos:start="47:21" pos:end="47:80"><name pos:start="47:21" pos:end="47:26">av_log</name><argument_list pos:start="47:27" pos:end="47:80">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:28">h</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:35">avctx</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:52" pos:end="47:79"><expr pos:start="47:52" pos:end="47:79"><literal type="string" pos:start="47:52" pos:end="47:79">"reference count overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="49:21" pos:end="49:30">return <expr pos:start="49:28" pos:end="49:29"><operator pos:start="49:28" pos:end="49:28">-</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="55:17" pos:end="191:17"><if pos:start="55:17" pos:end="185:17">if<condition pos:start="55:19" pos:end="55:48">(<expr pos:start="55:20" pos:end="55:47"><name pos:start="55:20" pos:end="55:45">reordering_of_pic_nums_idc</name><operator pos:start="55:46" pos:end="55:46">&lt;</operator><literal type="number" pos:start="55:47" pos:end="55:47">3</literal></expr>)</condition><block pos:start="55:49" pos:end="185:17">{<block_content pos:start="57:21" pos:end="183:21">

                    <if_stmt pos:start="57:21" pos:end="149:21"><if pos:start="57:21" pos:end="111:21">if<condition pos:start="57:23" pos:end="57:52">(<expr pos:start="57:24" pos:end="57:51"><name pos:start="57:24" pos:end="57:49">reordering_of_pic_nums_idc</name><operator pos:start="57:50" pos:end="57:50">&lt;</operator><literal type="number" pos:start="57:51" pos:end="57:51">2</literal></expr>)</condition><block pos:start="57:53" pos:end="111:21">{<block_content pos:start="59:25" pos:end="109:46">

                        <decl_stmt pos:start="59:25" pos:end="59:87"><decl pos:start="59:25" pos:end="59:86"><type pos:start="59:25" pos:end="59:42"><specifier pos:start="59:25" pos:end="59:29">const</specifier> <name pos:start="59:31" pos:end="59:38">unsigned</name> <name pos:start="59:40" pos:end="59:42">int</name></type> <name pos:start="59:44" pos:end="59:59">abs_diff_pic_num</name><init pos:start="59:60" pos:end="59:86">= <expr pos:start="59:62" pos:end="59:86"><call pos:start="59:62" pos:end="59:82"><name pos:start="59:62" pos:end="59:74">get_ue_golomb</name><argument_list pos:start="59:75" pos:end="59:82">(<argument pos:start="59:76" pos:end="59:81"><expr pos:start="59:76" pos:end="59:81"><operator pos:start="59:76" pos:end="59:76">&amp;</operator><name pos:start="59:77" pos:end="59:81"><name pos:start="59:77" pos:end="59:77">h</name><operator pos:start="59:78" pos:end="59:79">-&gt;</operator><name pos:start="59:80" pos:end="59:81">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:84" pos:end="59:84">+</operator> <literal type="number" pos:start="59:86" pos:end="59:86">1</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="61:25" pos:end="61:38"><decl pos:start="61:25" pos:end="61:37"><type pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">int</name></type> <name pos:start="61:29" pos:end="61:37">frame_num</name></decl>;</decl_stmt>



                        <if_stmt pos:start="65:25" pos:end="71:25"><if pos:start="65:25" pos:end="71:25">if<condition pos:start="65:27" pos:end="65:61">(<expr pos:start="65:28" pos:end="65:60"><name pos:start="65:28" pos:end="65:43">abs_diff_pic_num</name> <operator pos:start="65:45" pos:end="65:45">&gt;</operator> <name pos:start="65:47" pos:end="65:60"><name pos:start="65:47" pos:end="65:47">h</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:60">max_pic_num</name></name></expr>)</condition><block pos:start="65:62" pos:end="71:25">{<block_content pos:start="67:29" pos:end="69:38">

                            <expr_stmt pos:start="67:29" pos:end="67:90"><expr pos:start="67:29" pos:end="67:89"><call pos:start="67:29" pos:end="67:89"><name pos:start="67:29" pos:end="67:34">av_log</name><argument_list pos:start="67:35" pos:end="67:89">(<argument pos:start="67:36" pos:end="67:43"><expr pos:start="67:36" pos:end="67:43"><name pos:start="67:36" pos:end="67:43"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:43">avctx</name></name></expr></argument>, <argument pos:start="67:46" pos:end="67:57"><expr pos:start="67:46" pos:end="67:57"><name pos:start="67:46" pos:end="67:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:60" pos:end="67:88"><expr pos:start="67:60" pos:end="67:88"><literal type="string" pos:start="67:60" pos:end="67:88">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="69:29" pos:end="69:38">return <expr pos:start="69:36" pos:end="69:37"><operator pos:start="69:36" pos:end="69:36">-</operator><literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>



                        <if_stmt pos:start="75:25" pos:end="77:84"><if pos:start="75:25" pos:end="75:84">if<condition pos:start="75:27" pos:end="75:59">(<expr pos:start="75:28" pos:end="75:58"><name pos:start="75:28" pos:end="75:53">reordering_of_pic_nums_idc</name> <operator pos:start="75:55" pos:end="75:56">==</operator> <literal type="number" pos:start="75:58" pos:end="75:58">0</literal></expr>)</condition><block type="pseudo" pos:start="75:61" pos:end="75:84"><block_content pos:start="75:61" pos:end="75:84"> <expr_stmt pos:start="75:61" pos:end="75:84"><expr pos:start="75:61" pos:end="75:83"><name pos:start="75:61" pos:end="75:64">pred</name><operator pos:start="75:65" pos:end="75:66">-=</operator> <name pos:start="75:68" pos:end="75:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="77:25" pos:end="77:84">else<block type="pseudo" pos:start="77:61" pos:end="77:84"><block_content pos:start="77:61" pos:end="77:84">                                <expr_stmt pos:start="77:61" pos:end="77:84"><expr pos:start="77:61" pos:end="77:83"><name pos:start="77:61" pos:end="77:64">pred</name><operator pos:start="77:65" pos:end="77:66">+=</operator> <name pos:start="77:68" pos:end="77:83">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:51"><expr pos:start="79:25" pos:end="79:50"><name pos:start="79:25" pos:end="79:28">pred</name> <operator pos:start="79:30" pos:end="79:31">&amp;=</operator> <name pos:start="79:33" pos:end="79:46"><name pos:start="79:33" pos:end="79:33">h</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:46">max_pic_num</name></name> <operator pos:start="79:48" pos:end="79:48">-</operator> <literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="83:25" pos:end="83:77"><expr pos:start="83:25" pos:end="83:76"><name pos:start="83:25" pos:end="83:33">frame_num</name> <operator pos:start="83:35" pos:end="83:35">=</operator> <call pos:start="83:37" pos:end="83:76"><name pos:start="83:37" pos:end="83:51">pic_num_extract</name><argument_list pos:start="83:52" pos:end="83:76">(<argument pos:start="83:53" pos:end="83:53"><expr pos:start="83:53" pos:end="83:53"><name pos:start="83:53" pos:end="83:53">h</name></expr></argument>, <argument pos:start="83:56" pos:end="83:59"><expr pos:start="83:56" pos:end="83:59"><name pos:start="83:56" pos:end="83:59">pred</name></expr></argument>, <argument pos:start="83:62" pos:end="83:75"><expr pos:start="83:62" pos:end="83:75"><operator pos:start="83:62" pos:end="83:62">&amp;</operator><name pos:start="83:63" pos:end="83:75">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <for pos:start="87:25" pos:end="105:25">for<control pos:start="87:28" pos:end="87:63">(<init pos:start="87:29" pos:end="87:52"><expr pos:start="87:29" pos:end="87:51"><name pos:start="87:29" pos:end="87:29">i</name><operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:49"><name pos:start="87:32" pos:end="87:32">h</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:49">short_ref_count</name></name><operator pos:start="87:50" pos:end="87:50">-</operator><literal type="number" pos:start="87:51" pos:end="87:51">1</literal></expr>;</init> <condition pos:start="87:54" pos:end="87:58"><expr pos:start="87:54" pos:end="87:57"><name pos:start="87:54" pos:end="87:54">i</name><operator pos:start="87:55" pos:end="87:56">&gt;=</operator><literal type="number" pos:start="87:57" pos:end="87:57">0</literal></expr>;</condition> <incr pos:start="87:60" pos:end="87:62"><expr pos:start="87:60" pos:end="87:62"><name pos:start="87:60" pos:end="87:60">i</name><operator pos:start="87:61" pos:end="87:62">--</operator></expr></incr>)</control><block pos:start="87:64" pos:end="105:25">{<block_content pos:start="89:29" pos:end="103:38">

                            <expr_stmt pos:start="89:29" pos:end="89:50"><expr pos:start="89:29" pos:end="89:49"><name pos:start="89:29" pos:end="89:31">ref</name> <operator pos:start="89:33" pos:end="89:33">=</operator> <name pos:start="89:35" pos:end="89:49"><name pos:start="89:35" pos:end="89:35">h</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:46">short_ref</name><index pos:start="89:47" pos:end="89:49">[<expr pos:start="89:48" pos:end="89:48"><name pos:start="89:48" pos:end="89:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:51"><expr pos:start="91:29" pos:end="91:50"><call pos:start="91:29" pos:end="91:50"><name pos:start="91:29" pos:end="91:34">assert</name><argument_list pos:start="91:35" pos:end="91:50">(<argument pos:start="91:36" pos:end="91:49"><expr pos:start="91:36" pos:end="91:49"><name pos:start="91:36" pos:end="91:49"><name pos:start="91:36" pos:end="91:38">ref</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:49">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="93:29" pos:end="93:51"><expr pos:start="93:29" pos:end="93:50"><call pos:start="93:29" pos:end="93:50"><name pos:start="93:29" pos:end="93:34">assert</name><argument_list pos:start="93:35" pos:end="93:50">(<argument pos:start="93:36" pos:end="93:49"><expr pos:start="93:36" pos:end="93:49"><operator pos:start="93:36" pos:end="93:36">!</operator><name pos:start="93:37" pos:end="93:49"><name pos:start="93:37" pos:end="93:39">ref</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:49">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="95:29" pos:end="103:38"><if pos:start="95:29" pos:end="103:38">if<condition pos:start="95:31" pos:end="101:31">(

                                   <expr pos:start="97:36" pos:end="99:67"><name pos:start="97:36" pos:end="97:49"><name pos:start="97:36" pos:end="97:38">ref</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:49">frame_num</name></name> <operator pos:start="97:51" pos:end="97:52">==</operator> <name pos:start="97:54" pos:end="97:62">frame_num</name> <operator pos:start="97:64" pos:end="97:65">&amp;&amp;</operator>

                                   <operator pos:start="99:36" pos:end="99:36">(</operator><name pos:start="99:37" pos:end="99:50"><name pos:start="99:37" pos:end="99:39">ref</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:50">reference</name></name> <operator pos:start="99:52" pos:end="99:52">&amp;</operator> <name pos:start="99:54" pos:end="99:66">pic_structure</name><operator pos:start="99:67" pos:end="99:67">)</operator></expr>

                              )</condition><block type="pseudo" pos:start="103:33" pos:end="103:38"><block_content pos:start="103:33" pos:end="103:38">

                                <break pos:start="103:33" pos:end="103:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <if_stmt pos:start="107:25" pos:end="109:46"><if pos:start="107:25" pos:end="109:46">if<condition pos:start="107:27" pos:end="107:32">(<expr pos:start="107:28" pos:end="107:31"><name pos:start="107:28" pos:end="107:28">i</name><operator pos:start="107:29" pos:end="107:30">&gt;=</operator><literal type="number" pos:start="107:31" pos:end="107:31">0</literal></expr>)</condition><block type="pseudo" pos:start="109:29" pos:end="109:46"><block_content pos:start="109:29" pos:end="109:46">

                            <expr_stmt pos:start="109:29" pos:end="109:46"><expr pos:start="109:29" pos:end="109:45"><name pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:31">ref</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:39">pic_id</name></name><operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:45">pred</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if><else pos:start="111:22" pos:end="149:21">else<block pos:start="111:26" pos:end="149:21">{<block_content pos:start="113:25" pos:end="147:25">

                        <decl_stmt pos:start="113:25" pos:end="113:37"><decl pos:start="113:25" pos:end="113:36"><type pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">int</name></type> <name pos:start="113:29" pos:end="113:36">long_idx</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="115:25" pos:end="115:54"><expr pos:start="115:25" pos:end="115:53"><name pos:start="115:25" pos:end="115:30">pic_id</name><operator pos:start="115:31" pos:end="115:31">=</operator> <call pos:start="115:33" pos:end="115:53"><name pos:start="115:33" pos:end="115:45">get_ue_golomb</name><argument_list pos:start="115:46" pos:end="115:53">(<argument pos:start="115:47" pos:end="115:52"><expr pos:start="115:47" pos:end="115:52"><operator pos:start="115:47" pos:end="115:47">&amp;</operator><name pos:start="115:48" pos:end="115:52"><name pos:start="115:48" pos:end="115:48">h</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="115:56" pos:end="115:74">//long_term_pic_idx</comment>



                        <expr_stmt pos:start="119:25" pos:end="119:77"><expr pos:start="119:25" pos:end="119:76"><name pos:start="119:25" pos:end="119:32">long_idx</name><operator pos:start="119:33" pos:end="119:33">=</operator> <call pos:start="119:35" pos:end="119:76"><name pos:start="119:35" pos:end="119:49">pic_num_extract</name><argument_list pos:start="119:50" pos:end="119:76">(<argument pos:start="119:51" pos:end="119:51"><expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">h</name></expr></argument>, <argument pos:start="119:54" pos:end="119:59"><expr pos:start="119:54" pos:end="119:59"><name pos:start="119:54" pos:end="119:59">pic_id</name></expr></argument>, <argument pos:start="119:62" pos:end="119:75"><expr pos:start="119:62" pos:end="119:75"><operator pos:start="119:62" pos:end="119:62">&amp;</operator><name pos:start="119:63" pos:end="119:75">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="123:25" pos:end="129:25"><if pos:start="123:25" pos:end="129:25">if<condition pos:start="123:27" pos:end="123:39">(<expr pos:start="123:28" pos:end="123:38"><name pos:start="123:28" pos:end="123:35">long_idx</name><operator pos:start="123:36" pos:end="123:36">&gt;</operator><literal type="number" pos:start="123:37" pos:end="123:38">31</literal></expr>)</condition><block pos:start="123:40" pos:end="129:25">{<block_content pos:start="125:29" pos:end="127:38">

                            <expr_stmt pos:start="125:29" pos:end="125:91"><expr pos:start="125:29" pos:end="125:90"><call pos:start="125:29" pos:end="125:90"><name pos:start="125:29" pos:end="125:34">av_log</name><argument_list pos:start="125:35" pos:end="125:90">(<argument pos:start="125:36" pos:end="125:43"><expr pos:start="125:36" pos:end="125:43"><name pos:start="125:36" pos:end="125:43"><name pos:start="125:36" pos:end="125:36">h</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:43">avctx</name></name></expr></argument>, <argument pos:start="125:46" pos:end="125:57"><expr pos:start="125:46" pos:end="125:57"><name pos:start="125:46" pos:end="125:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:60" pos:end="125:89"><expr pos:start="125:60" pos:end="125:89"><literal type="string" pos:start="125:60" pos:end="125:89">"long_term_pic_idx overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="127:29" pos:end="127:38">return <expr pos:start="127:36" pos:end="127:37"><operator pos:start="127:36" pos:end="127:36">-</operator><literal type="number" pos:start="127:37" pos:end="127:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:52"><expr pos:start="131:25" pos:end="131:51"><name pos:start="131:25" pos:end="131:27">ref</name> <operator pos:start="131:29" pos:end="131:29">=</operator> <name pos:start="131:31" pos:end="131:51"><name pos:start="131:31" pos:end="131:31">h</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:41">long_ref</name><index pos:start="131:42" pos:end="131:51">[<expr pos:start="131:43" pos:end="131:50"><name pos:start="131:43" pos:end="131:50">long_idx</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:58"><expr pos:start="133:25" pos:end="133:57"><call pos:start="133:25" pos:end="133:57"><name pos:start="133:25" pos:end="133:30">assert</name><argument_list pos:start="133:31" pos:end="133:57">(<argument pos:start="133:32" pos:end="133:56"><expr pos:start="133:32" pos:end="133:56"><operator pos:start="133:32" pos:end="133:32">!</operator><operator pos:start="133:33" pos:end="133:33">(</operator><name pos:start="133:34" pos:end="133:36">ref</name> <operator pos:start="133:38" pos:end="133:39">&amp;&amp;</operator> <operator pos:start="133:41" pos:end="133:41">!</operator><name pos:start="133:42" pos:end="133:55"><name pos:start="133:42" pos:end="133:44">ref</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:55">reference</name></name><operator pos:start="133:56" pos:end="133:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="135:25" pos:end="147:25"><if pos:start="135:25" pos:end="143:25">if <condition pos:start="135:28" pos:end="135:68">(<expr pos:start="135:29" pos:end="135:67"><name pos:start="135:29" pos:end="135:31">ref</name> <operator pos:start="135:33" pos:end="135:34">&amp;&amp;</operator> <operator pos:start="135:36" pos:end="135:36">(</operator><name pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:39">ref</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:50">reference</name></name> <operator pos:start="135:52" pos:end="135:52">&amp;</operator> <name pos:start="135:54" pos:end="135:66">pic_structure</name><operator pos:start="135:67" pos:end="135:67">)</operator></expr>)</condition> <block pos:start="135:70" pos:end="143:25">{<block_content pos:start="137:29" pos:end="141:32">

                            <expr_stmt pos:start="137:29" pos:end="137:48"><expr pos:start="137:29" pos:end="137:47"><name pos:start="137:29" pos:end="137:39"><name pos:start="137:29" pos:end="137:31">ref</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:39">pic_id</name></name><operator pos:start="137:40" pos:end="137:40">=</operator> <name pos:start="137:42" pos:end="137:47">pic_id</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="139:29" pos:end="139:50"><expr pos:start="139:29" pos:end="139:49"><call pos:start="139:29" pos:end="139:49"><name pos:start="139:29" pos:end="139:34">assert</name><argument_list pos:start="139:35" pos:end="139:49">(<argument pos:start="139:36" pos:end="139:48"><expr pos:start="139:36" pos:end="139:48"><name pos:start="139:36" pos:end="139:48"><name pos:start="139:36" pos:end="139:38">ref</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:48">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="141:29" pos:end="141:32"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:29">i</name><operator pos:start="141:30" pos:end="141:30">=</operator><literal type="number" pos:start="141:31" pos:end="141:31">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="143:26" pos:end="147:25">else<block pos:start="143:30" pos:end="147:25">{<block_content pos:start="145:29" pos:end="145:33">

                            <expr_stmt pos:start="145:29" pos:end="145:33"><expr pos:start="145:29" pos:end="145:32"><name pos:start="145:29" pos:end="145:29">i</name><operator pos:start="145:30" pos:end="145:30">=</operator><operator pos:start="145:31" pos:end="145:31">-</operator><literal type="number" pos:start="145:32" pos:end="145:32">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>



                    <if_stmt pos:start="153:21" pos:end="183:21"><if pos:start="153:21" pos:end="159:21">if <condition pos:start="153:24" pos:end="153:30">(<expr pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:25">i</name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <literal type="number" pos:start="153:29" pos:end="153:29">0</literal></expr>)</condition> <block pos:start="153:32" pos:end="159:21">{<block_content pos:start="155:25" pos:end="157:78">

                        <expr_stmt pos:start="155:25" pos:end="155:101"><expr pos:start="155:25" pos:end="155:100"><call pos:start="155:25" pos:end="155:100"><name pos:start="155:25" pos:end="155:30">av_log</name><argument_list pos:start="155:31" pos:end="155:100">(<argument pos:start="155:32" pos:end="155:39"><expr pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:32">h</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:39">avctx</name></name></expr></argument>, <argument pos:start="155:42" pos:end="155:53"><expr pos:start="155:42" pos:end="155:53"><name pos:start="155:42" pos:end="155:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:56" pos:end="155:99"><expr pos:start="155:56" pos:end="155:99"><literal type="string" pos:start="155:56" pos:end="155:99">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="157:25" pos:end="157:78"><expr pos:start="157:25" pos:end="157:77"><call pos:start="157:25" pos:end="157:77"><name pos:start="157:25" pos:end="157:30">memset</name><argument_list pos:start="157:31" pos:end="157:77">(<argument pos:start="157:32" pos:end="157:56"><expr pos:start="157:32" pos:end="157:56"><operator pos:start="157:32" pos:end="157:32">&amp;</operator><name pos:start="157:33" pos:end="157:56"><name pos:start="157:33" pos:end="157:33">h</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:43">ref_list</name><index pos:start="157:44" pos:end="157:49">[<expr pos:start="157:45" pos:end="157:48"><name pos:start="157:45" pos:end="157:48">list</name></expr>]</index><index pos:start="157:50" pos:end="157:56">[<expr pos:start="157:51" pos:end="157:55"><name pos:start="157:51" pos:end="157:55">index</name></expr>]</index></name></expr></argument>, <argument pos:start="157:59" pos:end="157:59"><expr pos:start="157:59" pos:end="157:59"><literal type="number" pos:start="157:59" pos:end="157:59">0</literal></expr></argument>, <argument pos:start="157:62" pos:end="157:76"><expr pos:start="157:62" pos:end="157:76"><sizeof pos:start="157:62" pos:end="157:76">sizeof<argument_list pos:start="157:68" pos:end="157:76">(<argument pos:start="157:69" pos:end="157:75"><expr pos:start="157:69" pos:end="157:75"><name pos:start="157:69" pos:end="157:75">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="157:80" pos:end="157:86">//FIXME</comment>

                    </block_content>}</block></if> <else pos:start="159:23" pos:end="183:21">else <block pos:start="159:28" pos:end="183:21">{<block_content pos:start="161:25" pos:end="181:25">

                        <for pos:start="161:25" pos:end="167:25">for<control pos:start="161:28" pos:end="161:65">(<init pos:start="161:29" pos:end="161:36"><expr pos:start="161:29" pos:end="161:35"><name pos:start="161:29" pos:end="161:29">i</name><operator pos:start="161:30" pos:end="161:30">=</operator><name pos:start="161:31" pos:end="161:35">index</name></expr>;</init> <condition pos:start="161:38" pos:end="161:60"><expr pos:start="161:38" pos:end="161:59"><name pos:start="161:38" pos:end="161:38">i</name><operator pos:start="161:39" pos:end="161:39">+</operator><literal type="number" pos:start="161:40" pos:end="161:40">1</literal><operator pos:start="161:41" pos:end="161:41">&lt;</operator><name pos:start="161:42" pos:end="161:59"><name pos:start="161:42" pos:end="161:42">h</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:53">ref_count</name><index pos:start="161:54" pos:end="161:59">[<expr pos:start="161:55" pos:end="161:58"><name pos:start="161:55" pos:end="161:58">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="161:62" pos:end="161:64"><expr pos:start="161:62" pos:end="161:64"><name pos:start="161:62" pos:end="161:62">i</name><operator pos:start="161:63" pos:end="161:64">++</operator></expr></incr>)</control><block pos:start="161:66" pos:end="167:25">{<block_content pos:start="163:29" pos:end="165:38">

                            <if_stmt pos:start="163:29" pos:end="165:38"><if pos:start="163:29" pos:end="165:38">if<condition pos:start="163:31" pos:end="163:124">(<expr pos:start="163:32" pos:end="163:123"><name pos:start="163:32" pos:end="163:44"><name pos:start="163:32" pos:end="163:34">ref</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:44">long_ref</name></name> <operator pos:start="163:46" pos:end="163:47">==</operator> <name pos:start="163:49" pos:end="163:68"><name pos:start="163:49" pos:end="163:49">h</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:59">ref_list</name><index pos:start="163:60" pos:end="163:65">[<expr pos:start="163:61" pos:end="163:64"><name pos:start="163:61" pos:end="163:64">list</name></expr>]</index><index pos:start="163:66" pos:end="163:68">[<expr pos:start="163:67" pos:end="163:67"><name pos:start="163:67" pos:end="163:67">i</name></expr>]</index></name><operator pos:start="163:69" pos:end="163:69">.</operator><name pos:start="163:70" pos:end="163:77">long_ref</name> <operator pos:start="163:79" pos:end="163:80">&amp;&amp;</operator> <name pos:start="163:82" pos:end="163:92"><name pos:start="163:82" pos:end="163:84">ref</name><operator pos:start="163:85" pos:end="163:86">-&gt;</operator><name pos:start="163:87" pos:end="163:92">pic_id</name></name> <operator pos:start="163:94" pos:end="163:95">==</operator> <name pos:start="163:97" pos:end="163:116"><name pos:start="163:97" pos:end="163:97">h</name><operator pos:start="163:98" pos:end="163:99">-&gt;</operator><name pos:start="163:100" pos:end="163:107">ref_list</name><index pos:start="163:108" pos:end="163:113">[<expr pos:start="163:109" pos:end="163:112"><name pos:start="163:109" pos:end="163:112">list</name></expr>]</index><index pos:start="163:114" pos:end="163:116">[<expr pos:start="163:115" pos:end="163:115"><name pos:start="163:115" pos:end="163:115">i</name></expr>]</index></name><operator pos:start="163:117" pos:end="163:117">.</operator><name pos:start="163:118" pos:end="163:123">pic_id</name></expr>)</condition><block type="pseudo" pos:start="165:33" pos:end="165:38"><block_content pos:start="165:33" pos:end="165:38">

                                <break pos:start="165:33" pos:end="165:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <for pos:start="169:25" pos:end="173:25">for<control pos:start="169:28" pos:end="169:45">(<init pos:start="169:29" pos:end="169:29">;</init> <condition pos:start="169:31" pos:end="169:40"><expr pos:start="169:31" pos:end="169:39"><name pos:start="169:31" pos:end="169:31">i</name> <operator pos:start="169:33" pos:end="169:33">&gt;</operator> <name pos:start="169:35" pos:end="169:39">index</name></expr>;</condition> <incr pos:start="169:42" pos:end="169:44"><expr pos:start="169:42" pos:end="169:44"><name pos:start="169:42" pos:end="169:42">i</name><operator pos:start="169:43" pos:end="169:44">--</operator></expr></incr>)</control><block pos:start="169:46" pos:end="173:25">{<block_content pos:start="171:29" pos:end="171:91">

                            <expr_stmt pos:start="171:29" pos:end="171:91"><expr pos:start="171:29" pos:end="171:90"><call pos:start="171:29" pos:end="171:90"><name pos:start="171:29" pos:end="171:40">COPY_PICTURE</name><argument_list pos:start="171:41" pos:end="171:90">(<argument pos:start="171:42" pos:end="171:62"><expr pos:start="171:42" pos:end="171:62"><operator pos:start="171:42" pos:end="171:42">&amp;</operator><name pos:start="171:43" pos:end="171:62"><name pos:start="171:43" pos:end="171:43">h</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:53">ref_list</name><index pos:start="171:54" pos:end="171:59">[<expr pos:start="171:55" pos:end="171:58"><name pos:start="171:55" pos:end="171:58">list</name></expr>]</index><index pos:start="171:60" pos:end="171:62">[<expr pos:start="171:61" pos:end="171:61"><name pos:start="171:61" pos:end="171:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="171:65" pos:end="171:89"><expr pos:start="171:65" pos:end="171:89"><operator pos:start="171:65" pos:end="171:65">&amp;</operator><name pos:start="171:66" pos:end="171:89"><name pos:start="171:66" pos:end="171:66">h</name><operator pos:start="171:67" pos:end="171:68">-&gt;</operator><name pos:start="171:69" pos:end="171:76">ref_list</name><index pos:start="171:77" pos:end="171:82">[<expr pos:start="171:78" pos:end="171:81"><name pos:start="171:78" pos:end="171:81">list</name></expr>]</index><index pos:start="171:83" pos:end="171:89">[<expr pos:start="171:84" pos:end="171:88"><name pos:start="171:84" pos:end="171:84">i</name> <operator pos:start="171:86" pos:end="171:86">-</operator> <literal type="number" pos:start="171:88" pos:end="171:88">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="175:25" pos:end="175:69"><expr pos:start="175:25" pos:end="175:68"><call pos:start="175:25" pos:end="175:68"><name pos:start="175:25" pos:end="175:36">COPY_PICTURE</name><argument_list pos:start="175:37" pos:end="175:68">(<argument pos:start="175:38" pos:end="175:62"><expr pos:start="175:38" pos:end="175:62"><operator pos:start="175:38" pos:end="175:38">&amp;</operator><name pos:start="175:39" pos:end="175:62"><name pos:start="175:39" pos:end="175:39">h</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:49">ref_list</name><index pos:start="175:50" pos:end="175:55">[<expr pos:start="175:51" pos:end="175:54"><name pos:start="175:51" pos:end="175:54">list</name></expr>]</index><index pos:start="175:56" pos:end="175:62">[<expr pos:start="175:57" pos:end="175:61"><name pos:start="175:57" pos:end="175:61">index</name></expr>]</index></name></expr></argument>, <argument pos:start="175:65" pos:end="175:67"><expr pos:start="175:65" pos:end="175:67"><name pos:start="175:65" pos:end="175:67">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="177:25" pos:end="181:25"><if pos:start="177:25" pos:end="181:25">if <condition pos:start="177:28" pos:end="177:42">(<expr pos:start="177:29" pos:end="177:41"><name pos:start="177:29" pos:end="177:41">FIELD_PICTURE</name></expr>)</condition><block pos:start="177:43" pos:end="181:25">{<block_content pos:start="179:29" pos:end="179:83">

                            <expr_stmt pos:start="179:29" pos:end="179:83"><expr pos:start="179:29" pos:end="179:82"><call pos:start="179:29" pos:end="179:82"><name pos:start="179:29" pos:end="179:40">pic_as_field</name><argument_list pos:start="179:41" pos:end="179:82">(<argument pos:start="179:42" pos:end="179:66"><expr pos:start="179:42" pos:end="179:66"><operator pos:start="179:42" pos:end="179:42">&amp;</operator><name pos:start="179:43" pos:end="179:66"><name pos:start="179:43" pos:end="179:43">h</name><operator pos:start="179:44" pos:end="179:45">-&gt;</operator><name pos:start="179:46" pos:end="179:53">ref_list</name><index pos:start="179:54" pos:end="179:59">[<expr pos:start="179:55" pos:end="179:58"><name pos:start="179:55" pos:end="179:58">list</name></expr>]</index><index pos:start="179:60" pos:end="179:66">[<expr pos:start="179:61" pos:end="179:65"><name pos:start="179:61" pos:end="179:65">index</name></expr>]</index></name></expr></argument>, <argument pos:start="179:69" pos:end="179:81"><expr pos:start="179:69" pos:end="179:81"><name pos:start="179:69" pos:end="179:81">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if><else pos:start="185:18" pos:end="191:17">else<block pos:start="185:22" pos:end="191:17">{<block_content pos:start="187:21" pos:end="189:30">

                    <expr_stmt pos:start="187:21" pos:end="187:91"><expr pos:start="187:21" pos:end="187:90"><call pos:start="187:21" pos:end="187:90"><name pos:start="187:21" pos:end="187:26">av_log</name><argument_list pos:start="187:27" pos:end="187:90">(<argument pos:start="187:28" pos:end="187:35"><expr pos:start="187:28" pos:end="187:35"><name pos:start="187:28" pos:end="187:35"><name pos:start="187:28" pos:end="187:28">h</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:35">avctx</name></name></expr></argument>, <argument pos:start="187:38" pos:end="187:49"><expr pos:start="187:38" pos:end="187:49"><name pos:start="187:38" pos:end="187:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="187:52" pos:end="187:89"><expr pos:start="187:52" pos:end="187:89"><literal type="string" pos:start="187:52" pos:end="187:89">"illegal reordering_of_pic_nums_idc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="189:21" pos:end="189:30">return <expr pos:start="189:28" pos:end="189:29"><operator pos:start="189:28" pos:end="189:28">-</operator><literal type="number" pos:start="189:29" pos:end="189:29">1</literal></expr>;</return>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="199:5" pos:end="225:5">for<control pos:start="199:8" pos:end="199:43">(<init pos:start="199:9" pos:end="199:15"><expr pos:start="199:9" pos:end="199:14"><name pos:start="199:9" pos:end="199:12">list</name><operator pos:start="199:13" pos:end="199:13">=</operator><literal type="number" pos:start="199:14" pos:end="199:14">0</literal></expr>;</init> <condition pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:20">list</name><operator pos:start="199:21" pos:end="199:21">&lt;</operator><name pos:start="199:22" pos:end="199:34"><name pos:start="199:22" pos:end="199:22">h</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:34">list_count</name></name></expr>;</condition> <incr pos:start="199:37" pos:end="199:42"><expr pos:start="199:37" pos:end="199:42"><name pos:start="199:37" pos:end="199:40">list</name><operator pos:start="199:41" pos:end="199:42">++</operator></expr></incr>)</control><block pos:start="199:44" pos:end="225:5">{<block_content pos:start="201:9" pos:end="223:9">

        <for pos:start="201:9" pos:end="223:9">for<control pos:start="201:12" pos:end="201:58">(<init pos:start="201:13" pos:end="201:21"><expr pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:17">index</name><operator pos:start="201:18" pos:end="201:18">=</operator> <literal type="number" pos:start="201:20" pos:end="201:20">0</literal></expr>;</init> <condition pos:start="201:23" pos:end="201:49"><expr pos:start="201:23" pos:end="201:48"><name pos:start="201:23" pos:end="201:27">index</name> <operator pos:start="201:29" pos:end="201:29">&lt;</operator> <name pos:start="201:31" pos:end="201:48"><name pos:start="201:31" pos:end="201:31">h</name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:42">ref_count</name><index pos:start="201:43" pos:end="201:48">[<expr pos:start="201:44" pos:end="201:47"><name pos:start="201:44" pos:end="201:47">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="201:51" pos:end="201:57"><expr pos:start="201:51" pos:end="201:57"><name pos:start="201:51" pos:end="201:55">index</name><operator pos:start="201:56" pos:end="201:57">++</operator></expr></incr>)</control><block pos:start="201:59" pos:end="223:9">{<block_content pos:start="203:13" pos:end="221:13">

            <if_stmt pos:start="203:13" pos:end="221:13"><if pos:start="203:13" pos:end="221:13">if <condition pos:start="203:16" pos:end="203:52">(<expr pos:start="203:17" pos:end="203:51"><operator pos:start="203:17" pos:end="203:17">!</operator><name pos:start="203:18" pos:end="203:41"><name pos:start="203:18" pos:end="203:18">h</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:28">ref_list</name><index pos:start="203:29" pos:end="203:34">[<expr pos:start="203:30" pos:end="203:33"><name pos:start="203:30" pos:end="203:33">list</name></expr>]</index><index pos:start="203:35" pos:end="203:41">[<expr pos:start="203:36" pos:end="203:40"><name pos:start="203:36" pos:end="203:40">index</name></expr>]</index></name><operator pos:start="203:42" pos:end="203:42">.</operator><name pos:start="203:43" pos:end="203:51"><name pos:start="203:43" pos:end="203:43">f</name><operator pos:start="203:44" pos:end="203:44">.</operator><name pos:start="203:45" pos:end="203:48">data</name><index pos:start="203:49" pos:end="203:51">[<expr pos:start="203:50" pos:end="203:50"><literal type="number" pos:start="203:50" pos:end="203:50">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="203:54" pos:end="221:13">{<block_content pos:start="205:17" pos:end="219:30">

                <decl_stmt pos:start="205:17" pos:end="205:22"><decl pos:start="205:17" pos:end="205:21"><type pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">int</name></type> <name pos:start="205:21" pos:end="205:21">i</name></decl>;</decl_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:127"><expr pos:start="207:17" pos:end="207:126"><call pos:start="207:17" pos:end="207:126"><name pos:start="207:17" pos:end="207:22">av_log</name><argument_list pos:start="207:23" pos:end="207:126">(<argument pos:start="207:24" pos:end="207:31"><expr pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:24">h</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:31">avctx</name></name></expr></argument>, <argument pos:start="207:34" pos:end="207:45"><expr pos:start="207:34" pos:end="207:45"><name pos:start="207:34" pos:end="207:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:48" pos:end="207:91"><expr pos:start="207:48" pos:end="207:91"><literal type="string" pos:start="207:48" pos:end="207:91">"Missing reference picture, default is %d\n"</literal></expr></argument>, <argument pos:start="207:94" pos:end="207:125"><expr pos:start="207:94" pos:end="207:125"><name pos:start="207:94" pos:end="207:121"><name pos:start="207:94" pos:end="207:94">h</name><operator pos:start="207:95" pos:end="207:96">-&gt;</operator><name pos:start="207:97" pos:end="207:112">default_ref_list</name><index pos:start="207:113" pos:end="207:118">[<expr pos:start="207:114" pos:end="207:117"><name pos:start="207:114" pos:end="207:117">list</name></expr>]</index><index pos:start="207:119" pos:end="207:121">[<expr pos:start="207:120" pos:end="207:120"><literal type="number" pos:start="207:120" pos:end="207:120">0</literal></expr>]</index></name><operator pos:start="207:122" pos:end="207:122">.</operator><name pos:start="207:123" pos:end="207:125">poc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="209:17" pos:end="211:46">for <control pos:start="209:21" pos:end="209:62">(<init pos:start="209:22" pos:end="209:25"><expr pos:start="209:22" pos:end="209:24"><name pos:start="209:22" pos:end="209:22">i</name><operator pos:start="209:23" pos:end="209:23">=</operator><literal type="number" pos:start="209:24" pos:end="209:24">0</literal></expr>;</init> <condition pos:start="209:27" pos:end="209:57"><expr pos:start="209:27" pos:end="209:56"><name pos:start="209:27" pos:end="209:27">i</name><operator pos:start="209:28" pos:end="209:28">&lt;</operator><call pos:start="209:29" pos:end="209:56"><name pos:start="209:29" pos:end="209:42">FF_ARRAY_ELEMS</name><argument_list pos:start="209:43" pos:end="209:56">(<argument pos:start="209:44" pos:end="209:55"><expr pos:start="209:44" pos:end="209:55"><name pos:start="209:44" pos:end="209:55"><name pos:start="209:44" pos:end="209:44">h</name><operator pos:start="209:45" pos:end="209:46">-&gt;</operator><name pos:start="209:47" pos:end="209:55">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="209:59" pos:end="209:61"><expr pos:start="209:59" pos:end="209:61"><name pos:start="209:59" pos:end="209:59">i</name><operator pos:start="209:60" pos:end="209:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:21" pos:end="211:46"><block_content pos:start="211:21" pos:end="211:46">

                    <expr_stmt pos:start="211:21" pos:end="211:46"><expr pos:start="211:21" pos:end="211:45"><name pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:21">h</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:32">last_pocs</name><index pos:start="211:33" pos:end="211:35">[<expr pos:start="211:34" pos:end="211:34"><name pos:start="211:34" pos:end="211:34">i</name></expr>]</index></name> <operator pos:start="211:37" pos:end="211:37">=</operator> <name pos:start="211:39" pos:end="211:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="213:17" pos:end="219:30"><if pos:start="213:17" pos:end="215:91">if <condition pos:start="213:20" pos:end="213:59">(<expr pos:start="213:21" pos:end="213:58"><name pos:start="213:21" pos:end="213:48"><name pos:start="213:21" pos:end="213:21">h</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:39">default_ref_list</name><index pos:start="213:40" pos:end="213:45">[<expr pos:start="213:41" pos:end="213:44"><name pos:start="213:41" pos:end="213:44">list</name></expr>]</index><index pos:start="213:46" pos:end="213:48">[<expr pos:start="213:47" pos:end="213:47"><literal type="number" pos:start="213:47" pos:end="213:47">0</literal></expr>]</index></name><operator pos:start="213:49" pos:end="213:49">.</operator><name pos:start="213:50" pos:end="213:58"><name pos:start="213:50" pos:end="213:50">f</name><operator pos:start="213:51" pos:end="213:51">.</operator><name pos:start="213:52" pos:end="213:55">data</name><index pos:start="213:56" pos:end="213:58">[<expr pos:start="213:57" pos:end="213:57"><literal type="number" pos:start="213:57" pos:end="213:57">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="215:21" pos:end="215:91"><block_content pos:start="215:21" pos:end="215:91">

                    <expr_stmt pos:start="215:21" pos:end="215:91"><expr pos:start="215:21" pos:end="215:90"><call pos:start="215:21" pos:end="215:90"><name pos:start="215:21" pos:end="215:32">COPY_PICTURE</name><argument_list pos:start="215:33" pos:end="215:90">(<argument pos:start="215:34" pos:end="215:58"><expr pos:start="215:34" pos:end="215:58"><operator pos:start="215:34" pos:end="215:34">&amp;</operator><name pos:start="215:35" pos:end="215:58"><name pos:start="215:35" pos:end="215:35">h</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:45">ref_list</name><index pos:start="215:46" pos:end="215:51">[<expr pos:start="215:47" pos:end="215:50"><name pos:start="215:47" pos:end="215:50">list</name></expr>]</index><index pos:start="215:52" pos:end="215:58">[<expr pos:start="215:53" pos:end="215:57"><name pos:start="215:53" pos:end="215:57">index</name></expr>]</index></name></expr></argument>, <argument pos:start="215:61" pos:end="215:89"><expr pos:start="215:61" pos:end="215:89"><operator pos:start="215:61" pos:end="215:61">&amp;</operator><name pos:start="215:62" pos:end="215:89"><name pos:start="215:62" pos:end="215:62">h</name><operator pos:start="215:63" pos:end="215:64">-&gt;</operator><name pos:start="215:65" pos:end="215:80">default_ref_list</name><index pos:start="215:81" pos:end="215:86">[<expr pos:start="215:82" pos:end="215:85"><name pos:start="215:82" pos:end="215:85">list</name></expr>]</index><index pos:start="215:87" pos:end="215:89">[<expr pos:start="215:88" pos:end="215:88"><literal type="number" pos:start="215:88" pos:end="215:88">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="217:17" pos:end="219:30">else<block type="pseudo" pos:start="219:21" pos:end="219:30"><block_content pos:start="219:21" pos:end="219:30">

                    <return pos:start="219:21" pos:end="219:30">return <expr pos:start="219:28" pos:end="219:29"><operator pos:start="219:28" pos:end="219:28">-</operator><literal type="number" pos:start="219:29" pos:end="219:29">1</literal></expr>;</return></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
