<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1153.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">avcodec_check_dimensions</name><parameter_list pos:start="1:29" pos:end="1:78">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:45">av_log_ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:55">unsigned</name> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:61">w</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:71">unsigned</name> <name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:77">h</name></decl></parameter>)</parameter_list><block pos:start="1:79" pos:end="13:1">{<block_content pos:start="3:5" pos:end="11:14">

    <if_stmt pos:start="3:5" pos:end="5:17"><if pos:start="3:5" pos:end="5:17">if<condition pos:start="3:7" pos:end="3:69">(<expr pos:start="3:8" pos:end="3:68"><operator pos:start="3:8" pos:end="3:8">(</operator><name pos:start="3:9" pos:end="3:11">int</name><operator pos:start="3:12" pos:end="3:12">)</operator><name pos:start="3:13" pos:end="3:13">w</name><operator pos:start="3:14" pos:end="3:14">&gt;</operator><literal type="number" pos:start="3:15" pos:end="3:15">0</literal> <operator pos:start="3:17" pos:end="3:18">&amp;&amp;</operator> <operator pos:start="3:20" pos:end="3:20">(</operator><name pos:start="3:21" pos:end="3:23">int</name><operator pos:start="3:24" pos:end="3:24">)</operator><name pos:start="3:25" pos:end="3:25">h</name><operator pos:start="3:26" pos:end="3:26">&gt;</operator><literal type="number" pos:start="3:27" pos:end="3:27">0</literal> <operator pos:start="3:29" pos:end="3:30">&amp;&amp;</operator> <operator pos:start="3:32" pos:end="3:32">(</operator><name pos:start="3:33" pos:end="3:33">w</name><operator pos:start="3:34" pos:end="3:34">+</operator><literal type="number" pos:start="3:35" pos:end="3:37">128</literal><operator pos:start="3:38" pos:end="3:38">)</operator><operator pos:start="3:39" pos:end="3:39">*</operator><operator pos:start="3:40" pos:end="3:40">(</operator><name pos:start="3:41" pos:end="3:48">uint64_t</name><operator pos:start="3:49" pos:end="3:49">)</operator><operator pos:start="3:50" pos:end="3:50">(</operator><name pos:start="3:51" pos:end="3:51">h</name><operator pos:start="3:52" pos:end="3:52">+</operator><literal type="number" pos:start="3:53" pos:end="3:55">128</literal><operator pos:start="3:56" pos:end="3:56">)</operator> <operator pos:start="3:58" pos:end="3:58">&lt;</operator> <name pos:start="3:60" pos:end="3:66">INT_MAX</name><operator pos:start="3:67" pos:end="3:67">/</operator><literal type="number" pos:start="3:68" pos:end="3:68">4</literal></expr>)</condition><block type="pseudo" pos:start="5:9" pos:end="5:17"><block_content pos:start="5:9" pos:end="5:17">

        <return pos:start="5:9" pos:end="5:17">return <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:77"><expr pos:start="9:5" pos:end="9:76"><call pos:start="9:5" pos:end="9:76"><name pos:start="9:5" pos:end="9:10">av_log</name><argument_list pos:start="9:11" pos:end="9:76">(<argument pos:start="9:12" pos:end="9:21"><expr pos:start="9:12" pos:end="9:21"><name pos:start="9:12" pos:end="9:21">av_log_ctx</name></expr></argument>, <argument pos:start="9:24" pos:end="9:35"><expr pos:start="9:24" pos:end="9:35"><name pos:start="9:24" pos:end="9:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="9:38" pos:end="9:69"><expr pos:start="9:38" pos:end="9:69"><literal type="string" pos:start="9:38" pos:end="9:69">"picture size invalid (%ux%u)\n"</literal></expr></argument>, <argument pos:start="9:72" pos:end="9:72"><expr pos:start="9:72" pos:end="9:72"><name pos:start="9:72" pos:end="9:72">w</name></expr></argument>, <argument pos:start="9:75" pos:end="9:75"><expr pos:start="9:75" pos:end="9:75"><name pos:start="9:75" pos:end="9:75">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="11:5" pos:end="11:14">return <expr pos:start="11:12" pos:end="11:13"><operator pos:start="11:12" pos:end="11:12">-</operator><literal type="number" pos:start="11:13" pos:end="11:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
