<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4764.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">audio_resample</name><parameter_list pos:start="1:19" pos:end="1:83">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><name pos:start="1:20" pos:end="1:34">ReSampleContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:44">short</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">output</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">short</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">input</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:82">nb_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:23">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:22">nb_samples1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">short</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:16">bufin</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">short</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:17">bufout</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">short</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:18">buftmp2</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">2</literal></expr>]</index></name></decl>, <decl pos:start="11:24" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:31">buftmp3</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">lenout</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:72">(<expr pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:25">input_channels</name></name> <operator pos:start="17:27" pos:end="17:28">==</operator> <name pos:start="17:30" pos:end="17:47"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:47">output_channels</name></name> <operator pos:start="17:49" pos:end="17:50">&amp;&amp;</operator> <name pos:start="17:52" pos:end="17:59"><name pos:start="17:52" pos:end="17:52">s</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:59">ratio</name></name> <operator pos:start="17:61" pos:end="17:62">==</operator> <literal type="number" pos:start="17:64" pos:end="17:66">1.0</literal> <operator pos:start="17:68" pos:end="17:69">&amp;&amp;</operator> <literal type="number" pos:start="17:71" pos:end="17:71">0</literal></expr>)</condition> <block pos:start="17:74" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:26">

        <comment type="block" pos:start="19:9" pos:end="19:27">/* nothing to do */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:78"><expr pos:start="21:9" pos:end="21:77"><call pos:start="21:9" pos:end="21:77"><name pos:start="21:9" pos:end="21:14">memcpy</name><argument_list pos:start="21:15" pos:end="21:77">(<argument pos:start="21:16" pos:end="21:21"><expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21">output</name></expr></argument>, <argument pos:start="21:24" pos:end="21:28"><expr pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:28">input</name></expr></argument>, <argument pos:start="21:31" pos:end="21:76"><expr pos:start="21:31" pos:end="21:76"><name pos:start="21:31" pos:end="21:40">nb_samples</name> <operator pos:start="21:42" pos:end="21:42">*</operator> <name pos:start="21:44" pos:end="21:60"><name pos:start="21:44" pos:end="21:44">s</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:60">input_channels</name></name> <operator pos:start="21:62" pos:end="21:62">*</operator> <sizeof pos:start="21:64" pos:end="21:76">sizeof<argument_list pos:start="21:70" pos:end="21:76">(<argument pos:start="21:71" pos:end="21:75"><expr pos:start="21:71" pos:end="21:75"><name pos:start="21:71" pos:end="21:75">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:26">return <expr pos:start="23:16" pos:end="23:25"><name pos:start="23:16" pos:end="23:25">nb_samples</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:54">/* XXX: move those malloc to resample init code */</comment>

    <for pos:start="31:5" pos:end="39:5">for<control pos:start="31:8" pos:end="31:39">(<init pos:start="31:9" pos:end="31:12"><expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:9">i</name><operator pos:start="31:10" pos:end="31:10">=</operator><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr>;</init> <condition pos:start="31:14" pos:end="31:34"><expr pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:14">i</name><operator pos:start="31:15" pos:end="31:15">&lt;</operator><name pos:start="31:16" pos:end="31:33"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:33">filter_channels</name></name></expr>;</condition> <incr pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:36">i</name><operator pos:start="31:37" pos:end="31:38">++</operator></expr></incr>)</control><block pos:start="31:40" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:44">

        <expr_stmt pos:start="33:9" pos:end="33:83"><expr pos:start="33:9" pos:end="33:82"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:13">bufin</name><index pos:start="33:14" pos:end="33:16">[<expr pos:start="33:15" pos:end="33:15"><name pos:start="33:15" pos:end="33:15">i</name></expr>]</index></name><operator pos:start="33:17" pos:end="33:17">=</operator> <operator pos:start="33:19" pos:end="33:19">(</operator><name pos:start="33:20" pos:end="33:24">short</name><operator pos:start="33:25" pos:end="33:25">*</operator><operator pos:start="33:26" pos:end="33:26">)</operator> <call pos:start="33:28" pos:end="33:82"><name pos:start="33:28" pos:end="33:36">av_malloc</name><argument_list pos:start="33:37" pos:end="33:82">( <argument pos:start="33:39" pos:end="33:80"><expr pos:start="33:39" pos:end="33:80"><operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:49">nb_samples</name> <operator pos:start="33:51" pos:end="33:51">+</operator> <name pos:start="33:53" pos:end="33:63"><name pos:start="33:53" pos:end="33:53">s</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:63">temp_len</name></name><operator pos:start="33:64" pos:end="33:64">)</operator> <operator pos:start="33:66" pos:end="33:66">*</operator> <sizeof pos:start="33:68" pos:end="33:80">sizeof<argument_list pos:start="33:74" pos:end="33:80">(<argument pos:start="33:75" pos:end="33:79"><expr pos:start="33:75" pos:end="33:79"><name pos:start="33:75" pos:end="33:79">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:66"><expr pos:start="35:9" pos:end="35:65"><call pos:start="35:9" pos:end="35:65"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:65">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:20">bufin</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:26" pos:end="35:35"><expr pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:32">temp</name><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:38" pos:end="35:64"><expr pos:start="35:38" pos:end="35:64"><name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:48">temp_len</name></name> <operator pos:start="35:50" pos:end="35:50">*</operator> <sizeof pos:start="35:52" pos:end="35:64">sizeof<argument_list pos:start="35:58" pos:end="35:64">(<argument pos:start="35:59" pos:end="35:63"><expr pos:start="35:59" pos:end="35:63"><name pos:start="35:59" pos:end="35:63">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:15">buftmp2</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">i</name></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:26">bufin</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">+</operator> <name pos:start="37:33" pos:end="37:43"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:43">temp_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="43:42">/* make some zoom to avoid round pb */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:10">lenout</name><operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:16">int</name><operator pos:start="45:17" pos:end="45:17">)</operator><operator pos:start="45:18" pos:end="45:18">(</operator><literal type="number" pos:start="45:19" pos:end="45:19">4</literal><operator pos:start="45:20" pos:end="45:20">*</operator><name pos:start="45:21" pos:end="45:30">nb_samples</name> <operator pos:start="45:32" pos:end="45:32">*</operator> <name pos:start="45:34" pos:end="45:41"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:41">ratio</name></name><operator pos:start="45:42" pos:end="45:42">)</operator> <operator pos:start="45:44" pos:end="45:44">+</operator> <literal type="number" pos:start="45:46" pos:end="45:47">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:10">bufout</name><index pos:start="47:11" pos:end="47:13">[<expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>]</index></name><operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:21">short</name><operator pos:start="47:22" pos:end="47:22">*</operator><operator pos:start="47:23" pos:end="47:23">)</operator> <call pos:start="47:25" pos:end="47:59"><name pos:start="47:25" pos:end="47:33">av_malloc</name><argument_list pos:start="47:34" pos:end="47:59">( <argument pos:start="47:36" pos:end="47:57"><expr pos:start="47:36" pos:end="47:57"><name pos:start="47:36" pos:end="47:41">lenout</name> <operator pos:start="47:43" pos:end="47:43">*</operator> <sizeof pos:start="47:45" pos:end="47:57">sizeof<argument_list pos:start="47:51" pos:end="47:57">(<argument pos:start="47:52" pos:end="47:56"><expr pos:start="47:52" pos:end="47:56"><name pos:start="47:52" pos:end="47:56">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:60"><expr pos:start="49:5" pos:end="49:59"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:10">bufout</name><index pos:start="49:11" pos:end="49:13">[<expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">1</literal></expr>]</index></name><operator pos:start="49:14" pos:end="49:14">=</operator> <operator pos:start="49:16" pos:end="49:16">(</operator><name pos:start="49:17" pos:end="49:21">short</name><operator pos:start="49:22" pos:end="49:22">*</operator><operator pos:start="49:23" pos:end="49:23">)</operator> <call pos:start="49:25" pos:end="49:59"><name pos:start="49:25" pos:end="49:33">av_malloc</name><argument_list pos:start="49:34" pos:end="49:59">( <argument pos:start="49:36" pos:end="49:57"><expr pos:start="49:36" pos:end="49:57"><name pos:start="49:36" pos:end="49:41">lenout</name> <operator pos:start="49:43" pos:end="49:43">*</operator> <sizeof pos:start="49:45" pos:end="49:57">sizeof<argument_list pos:start="49:51" pos:end="49:57">(<argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><name pos:start="49:52" pos:end="49:56">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="81:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="55:32">(<expr pos:start="53:9" pos:end="55:31"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">input_channels</name></name> <operator pos:start="53:27" pos:end="53:28">==</operator> <literal type="number" pos:start="53:30" pos:end="53:30">2</literal> <operator pos:start="53:32" pos:end="53:33">&amp;&amp;</operator>

        <name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:26">output_channels</name></name> <operator pos:start="55:28" pos:end="55:29">==</operator> <literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>)</condition> <block pos:start="55:34" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:54">

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:15">buftmp3</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:27">output</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><call pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:22">stereo_to_mono</name><argument_list pos:start="59:23" pos:end="59:53">(<argument pos:start="59:24" pos:end="59:33"><expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:30">buftmp2</name><index pos:start="59:31" pos:end="59:33">[<expr pos:start="59:32" pos:end="59:32"><literal type="number" pos:start="59:32" pos:end="59:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:36" pos:end="59:40"><expr pos:start="59:36" pos:end="59:40"><name pos:start="59:36" pos:end="59:40">input</name></expr></argument>, <argument pos:start="59:43" pos:end="59:52"><expr pos:start="59:43" pos:end="59:52"><name pos:start="59:43" pos:end="59:52">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="67:5">else if <condition pos:start="61:15" pos:end="61:65">(<expr pos:start="61:16" pos:end="61:64"><name pos:start="61:16" pos:end="61:33"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:33">output_channels</name></name> <operator pos:start="61:35" pos:end="61:36">&gt;=</operator> <literal type="number" pos:start="61:38" pos:end="61:38">2</literal> <operator pos:start="61:40" pos:end="61:41">&amp;&amp;</operator> <name pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:43">s</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:59">input_channels</name></name> <operator pos:start="61:61" pos:end="61:62">==</operator> <literal type="number" pos:start="61:64" pos:end="61:64">1</literal></expr>)</condition> <block pos:start="61:67" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:60">

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:15">buftmp3</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>]</index></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:27">bufout</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><literal type="number" pos:start="63:29" pos:end="63:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:60"><expr pos:start="65:9" pos:end="65:59"><call pos:start="65:9" pos:end="65:59"><name pos:start="65:9" pos:end="65:14">memcpy</name><argument_list pos:start="65:15" pos:end="65:59">(<argument pos:start="65:16" pos:end="65:25"><expr pos:start="65:16" pos:end="65:25"><name pos:start="65:16" pos:end="65:25"><name pos:start="65:16" pos:end="65:22">buftmp2</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:28" pos:end="65:32"><expr pos:start="65:28" pos:end="65:32"><name pos:start="65:28" pos:end="65:32">input</name></expr></argument>, <argument pos:start="65:35" pos:end="65:58"><expr pos:start="65:35" pos:end="65:58"><name pos:start="65:35" pos:end="65:44">nb_samples</name><operator pos:start="65:45" pos:end="65:45">*</operator><sizeof pos:start="65:46" pos:end="65:58">sizeof<argument_list pos:start="65:52" pos:end="65:58">(<argument pos:start="65:53" pos:end="65:57"><expr pos:start="65:53" pos:end="65:57"><name pos:start="65:53" pos:end="65:57">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="75:5">else if <condition pos:start="67:15" pos:end="67:39">(<expr pos:start="67:16" pos:end="67:38"><name pos:start="67:16" pos:end="67:33"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:33">output_channels</name></name> <operator pos:start="67:35" pos:end="67:36">&gt;=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">2</literal></expr>)</condition> <block pos:start="67:41" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:64">

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:15">buftmp3</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:30"><name pos:start="69:22" pos:end="69:27">bufout</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:15">buftmp3</name><index pos:start="71:16" pos:end="71:18">[<expr pos:start="71:17" pos:end="71:17"><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>]</index></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:30"><name pos:start="71:22" pos:end="71:27">bufout</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:64"><expr pos:start="73:9" pos:end="73:63"><call pos:start="73:9" pos:end="73:63"><name pos:start="73:9" pos:end="73:20">stereo_split</name><argument_list pos:start="73:21" pos:end="73:63">(<argument pos:start="73:22" pos:end="73:31"><expr pos:start="73:22" pos:end="73:31"><name pos:start="73:22" pos:end="73:31"><name pos:start="73:22" pos:end="73:28">buftmp2</name><index pos:start="73:29" pos:end="73:31">[<expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:34" pos:end="73:43"><expr pos:start="73:34" pos:end="73:43"><name pos:start="73:34" pos:end="73:43"><name pos:start="73:34" pos:end="73:40">buftmp2</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><literal type="number" pos:start="73:42" pos:end="73:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:46" pos:end="73:50"><expr pos:start="73:46" pos:end="73:50"><name pos:start="73:46" pos:end="73:50">input</name></expr></argument>, <argument pos:start="73:53" pos:end="73:62"><expr pos:start="73:53" pos:end="73:62"><name pos:start="73:53" pos:end="73:62">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="81:5">else <block pos:start="75:12" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:60">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:15">buftmp3</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:27">output</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:60"><expr pos:start="79:9" pos:end="79:59"><call pos:start="79:9" pos:end="79:59"><name pos:start="79:9" pos:end="79:14">memcpy</name><argument_list pos:start="79:15" pos:end="79:59">(<argument pos:start="79:16" pos:end="79:25"><expr pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:22">buftmp2</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:28" pos:end="79:32"><expr pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:32">input</name></expr></argument>, <argument pos:start="79:35" pos:end="79:58"><expr pos:start="79:35" pos:end="79:58"><name pos:start="79:35" pos:end="79:44">nb_samples</name><operator pos:start="79:45" pos:end="79:45">*</operator><sizeof pos:start="79:46" pos:end="79:58">sizeof<argument_list pos:start="79:52" pos:end="79:58">(<argument pos:start="79:53" pos:end="79:57"><expr pos:start="79:53" pos:end="79:57"><name pos:start="79:53" pos:end="79:57">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:14">nb_samples</name> <operator pos:start="85:16" pos:end="85:17">+=</operator> <name pos:start="85:19" pos:end="85:29"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:29">temp_len</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:31">/* resample each channel */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:20"><expr pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:15">nb_samples1</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="91:22" pos:end="91:40">/* avoid warning */</comment>

    <for pos:start="93:5" pos:end="109:5">for<control pos:start="93:8" pos:end="93:37">(<init pos:start="93:9" pos:end="93:12"><expr pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:9">i</name><operator pos:start="93:10" pos:end="93:10">=</operator><literal type="number" pos:start="93:11" pos:end="93:11">0</literal></expr>;</init><condition pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:14">&lt;</operator><name pos:start="93:15" pos:end="93:32"><name pos:start="93:15" pos:end="93:15">s</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:32">filter_channels</name></name></expr>;</condition><incr pos:start="93:34" pos:end="93:36"><expr pos:start="93:34" pos:end="93:36"><name pos:start="93:34" pos:end="93:34">i</name><operator pos:start="93:35" pos:end="93:36">++</operator></expr></incr>)</control> <block pos:start="93:39" pos:end="109:5">{<block_content pos:start="95:9" pos:end="107:75">

        <decl_stmt pos:start="95:9" pos:end="95:21"><decl pos:start="95:9" pos:end="95:20"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:20">consumed</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:47"><decl pos:start="97:9" pos:end="97:46"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:19">is_last</name><init pos:start="97:20" pos:end="97:46">= <expr pos:start="97:22" pos:end="97:46"><name pos:start="97:22" pos:end="97:22">i</name><operator pos:start="97:23" pos:end="97:23">+</operator><literal type="number" pos:start="97:24" pos:end="97:24">1</literal> <operator pos:start="97:26" pos:end="97:27">==</operator> <name pos:start="97:29" pos:end="97:46"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:46">filter_channels</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:117"><expr pos:start="101:9" pos:end="101:116"><name pos:start="101:9" pos:end="101:19">nb_samples1</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="101:116"><name pos:start="101:23" pos:end="101:33">av_resample</name><argument_list pos:start="101:34" pos:end="101:116">(<argument pos:start="101:35" pos:end="101:53"><expr pos:start="101:35" pos:end="101:53"><name pos:start="101:35" pos:end="101:53"><name pos:start="101:35" pos:end="101:35">s</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:53">resample_context</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:65"><expr pos:start="101:56" pos:end="101:65"><name pos:start="101:56" pos:end="101:65"><name pos:start="101:56" pos:end="101:62">buftmp3</name><index pos:start="101:63" pos:end="101:65">[<expr pos:start="101:64" pos:end="101:64"><name pos:start="101:64" pos:end="101:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:68" pos:end="101:75"><expr pos:start="101:68" pos:end="101:75"><name pos:start="101:68" pos:end="101:75"><name pos:start="101:68" pos:end="101:72">bufin</name><index pos:start="101:73" pos:end="101:75">[<expr pos:start="101:74" pos:end="101:74"><name pos:start="101:74" pos:end="101:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:78" pos:end="101:86"><expr pos:start="101:78" pos:end="101:86"><operator pos:start="101:78" pos:end="101:78">&amp;</operator><name pos:start="101:79" pos:end="101:86">consumed</name></expr></argument>, <argument pos:start="101:89" pos:end="101:98"><expr pos:start="101:89" pos:end="101:98"><name pos:start="101:89" pos:end="101:98">nb_samples</name></expr></argument>, <argument pos:start="101:101" pos:end="101:106"><expr pos:start="101:101" pos:end="101:106"><name pos:start="101:101" pos:end="101:106">lenout</name></expr></argument>, <argument pos:start="101:109" pos:end="101:115"><expr pos:start="101:109" pos:end="101:115"><name pos:start="101:109" pos:end="101:115">is_last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:19">temp_len</name></name><operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:31">nb_samples</name> <operator pos:start="103:33" pos:end="103:33">-</operator> <name pos:start="103:35" pos:end="103:42">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:70"><expr pos:start="105:9" pos:end="105:69"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:15">temp</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><name pos:start="105:17" pos:end="105:17">i</name></expr>]</index></name><operator pos:start="105:19" pos:end="105:19">=</operator> <call pos:start="105:21" pos:end="105:69"><name pos:start="105:21" pos:end="105:30">av_realloc</name><argument_list pos:start="105:31" pos:end="105:69">(<argument pos:start="105:32" pos:end="105:41"><expr pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:32">s</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:38">temp</name><index pos:start="105:39" pos:end="105:41">[<expr pos:start="105:40" pos:end="105:40"><name pos:start="105:40" pos:end="105:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="105:44" pos:end="105:68"><expr pos:start="105:44" pos:end="105:68"><name pos:start="105:44" pos:end="105:54"><name pos:start="105:44" pos:end="105:44">s</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:54">temp_len</name></name><operator pos:start="105:55" pos:end="105:55">*</operator><sizeof pos:start="105:56" pos:end="105:68">sizeof<argument_list pos:start="105:62" pos:end="105:68">(<argument pos:start="105:63" pos:end="105:67"><expr pos:start="105:63" pos:end="105:67"><name pos:start="105:63" pos:end="105:67">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:75"><expr pos:start="107:9" pos:end="107:74"><call pos:start="107:9" pos:end="107:74"><name pos:start="107:9" pos:end="107:14">memcpy</name><argument_list pos:start="107:15" pos:end="107:74">(<argument pos:start="107:16" pos:end="107:25"><expr pos:start="107:16" pos:end="107:25"><name pos:start="107:16" pos:end="107:25"><name pos:start="107:16" pos:end="107:16">s</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:22">temp</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">i</name></expr>]</index></name></expr></argument>, <argument pos:start="107:28" pos:end="107:46"><expr pos:start="107:28" pos:end="107:46"><name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:32">bufin</name><index pos:start="107:33" pos:end="107:35">[<expr pos:start="107:34" pos:end="107:34"><name pos:start="107:34" pos:end="107:34">i</name></expr>]</index></name> <operator pos:start="107:37" pos:end="107:37">+</operator> <name pos:start="107:39" pos:end="107:46">consumed</name></expr></argument>, <argument pos:start="107:49" pos:end="107:73"><expr pos:start="107:49" pos:end="107:73"><name pos:start="107:49" pos:end="107:59"><name pos:start="107:49" pos:end="107:49">s</name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:59">temp_len</name></name><operator pos:start="107:60" pos:end="107:60">*</operator><sizeof pos:start="107:61" pos:end="107:73">sizeof<argument_list pos:start="107:67" pos:end="107:73">(<argument pos:start="107:68" pos:end="107:72"><expr pos:start="107:68" pos:end="107:72"><name pos:start="107:68" pos:end="107:72">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="113:5" pos:end="125:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:58">(<expr pos:start="113:9" pos:end="113:57"><name pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:26">output_channels</name></name> <operator pos:start="113:28" pos:end="113:29">==</operator> <literal type="number" pos:start="113:31" pos:end="113:31">2</literal> <operator pos:start="113:33" pos:end="113:34">&amp;&amp;</operator> <name pos:start="113:36" pos:end="113:52"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:52">input_channels</name></name> <operator pos:start="113:54" pos:end="113:55">==</operator> <literal type="number" pos:start="113:57" pos:end="113:57">1</literal></expr>)</condition> <block pos:start="113:60" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:56">

        <expr_stmt pos:start="115:9" pos:end="115:56"><expr pos:start="115:9" pos:end="115:55"><call pos:start="115:9" pos:end="115:55"><name pos:start="115:9" pos:end="115:22">mono_to_stereo</name><argument_list pos:start="115:23" pos:end="115:55">(<argument pos:start="115:24" pos:end="115:29"><expr pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:29">output</name></expr></argument>, <argument pos:start="115:32" pos:end="115:41"><expr pos:start="115:32" pos:end="115:41"><name pos:start="115:32" pos:end="115:41"><name pos:start="115:32" pos:end="115:38">buftmp3</name><index pos:start="115:39" pos:end="115:41">[<expr pos:start="115:40" pos:end="115:40"><literal type="number" pos:start="115:40" pos:end="115:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="115:44" pos:end="115:54"><expr pos:start="115:44" pos:end="115:54"><name pos:start="115:44" pos:end="115:54">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="117:7" pos:end="121:5">else if <condition pos:start="117:15" pos:end="117:39">(<expr pos:start="117:16" pos:end="117:38"><name pos:start="117:16" pos:end="117:33"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:33">output_channels</name></name> <operator pos:start="117:35" pos:end="117:36">==</operator> <literal type="number" pos:start="117:38" pos:end="117:38">2</literal></expr>)</condition> <block pos:start="117:41" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:64">

        <expr_stmt pos:start="119:9" pos:end="119:64"><expr pos:start="119:9" pos:end="119:63"><call pos:start="119:9" pos:end="119:63"><name pos:start="119:9" pos:end="119:18">stereo_mux</name><argument_list pos:start="119:19" pos:end="119:63">(<argument pos:start="119:20" pos:end="119:25"><expr pos:start="119:20" pos:end="119:25"><name pos:start="119:20" pos:end="119:25">output</name></expr></argument>, <argument pos:start="119:28" pos:end="119:37"><expr pos:start="119:28" pos:end="119:37"><name pos:start="119:28" pos:end="119:37"><name pos:start="119:28" pos:end="119:34">buftmp3</name><index pos:start="119:35" pos:end="119:37">[<expr pos:start="119:36" pos:end="119:36"><literal type="number" pos:start="119:36" pos:end="119:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:40" pos:end="119:49"><expr pos:start="119:40" pos:end="119:49"><name pos:start="119:40" pos:end="119:49"><name pos:start="119:40" pos:end="119:46">buftmp3</name><index pos:start="119:47" pos:end="119:49">[<expr pos:start="119:48" pos:end="119:48"><literal type="number" pos:start="119:48" pos:end="119:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:52" pos:end="119:62"><expr pos:start="119:52" pos:end="119:62"><name pos:start="119:52" pos:end="119:62">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="121:7" pos:end="125:5">else if <condition pos:start="121:15" pos:end="121:39">(<expr pos:start="121:16" pos:end="121:38"><name pos:start="121:16" pos:end="121:33"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:33">output_channels</name></name> <operator pos:start="121:35" pos:end="121:36">==</operator> <literal type="number" pos:start="121:38" pos:end="121:38">6</literal></expr>)</condition> <block pos:start="121:41" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:65">

        <expr_stmt pos:start="123:9" pos:end="123:65"><expr pos:start="123:9" pos:end="123:64"><call pos:start="123:9" pos:end="123:64"><name pos:start="123:9" pos:end="123:19">ac3_5p1_mux</name><argument_list pos:start="123:20" pos:end="123:64">(<argument pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:26">output</name></expr></argument>, <argument pos:start="123:29" pos:end="123:38"><expr pos:start="123:29" pos:end="123:38"><name pos:start="123:29" pos:end="123:38"><name pos:start="123:29" pos:end="123:35">buftmp3</name><index pos:start="123:36" pos:end="123:38">[<expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:41" pos:end="123:50"><expr pos:start="123:41" pos:end="123:50"><name pos:start="123:41" pos:end="123:50"><name pos:start="123:41" pos:end="123:47">buftmp3</name><index pos:start="123:48" pos:end="123:50">[<expr pos:start="123:49" pos:end="123:49"><literal type="number" pos:start="123:49" pos:end="123:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:53" pos:end="123:63"><expr pos:start="123:53" pos:end="123:63"><name pos:start="123:53" pos:end="123:63">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="129:5" pos:end="131:26">for<control pos:start="129:8" pos:end="129:39">(<init pos:start="129:9" pos:end="129:12"><expr pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:9">i</name><operator pos:start="129:10" pos:end="129:10">=</operator><literal type="number" pos:start="129:11" pos:end="129:11">0</literal></expr>;</init> <condition pos:start="129:14" pos:end="129:34"><expr pos:start="129:14" pos:end="129:33"><name pos:start="129:14" pos:end="129:14">i</name><operator pos:start="129:15" pos:end="129:15">&lt;</operator><name pos:start="129:16" pos:end="129:33"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:33">filter_channels</name></name></expr>;</condition> <incr pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:36">i</name><operator pos:start="129:37" pos:end="129:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:9" pos:end="131:26"><block_content pos:start="131:9" pos:end="131:26">

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><call pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:15">av_free</name><argument_list pos:start="131:16" pos:end="131:25">(<argument pos:start="131:17" pos:end="131:24"><expr pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:21">bufin</name><index pos:start="131:22" pos:end="131:24">[<expr pos:start="131:23" pos:end="131:23"><name pos:start="131:23" pos:end="131:23">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="135:5" pos:end="135:23"><expr pos:start="135:5" pos:end="135:22"><call pos:start="135:5" pos:end="135:22"><name pos:start="135:5" pos:end="135:11">av_free</name><argument_list pos:start="135:12" pos:end="135:22">(<argument pos:start="135:13" pos:end="135:21"><expr pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:18">bufout</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><literal type="number" pos:start="135:20" pos:end="135:20">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:23"><expr pos:start="137:5" pos:end="137:22"><call pos:start="137:5" pos:end="137:22"><name pos:start="137:5" pos:end="137:11">av_free</name><argument_list pos:start="137:12" pos:end="137:22">(<argument pos:start="137:13" pos:end="137:21"><expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:18">bufout</name><index pos:start="137:19" pos:end="137:21">[<expr pos:start="137:20" pos:end="137:20"><literal type="number" pos:start="137:20" pos:end="137:20">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:23">return <expr pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:22">nb_samples1</name></expr>;</return>

</block_content>}</block></function>
</unit>
