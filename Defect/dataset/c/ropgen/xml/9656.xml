<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9656.c" pos:tabs="8"><function pos:start="1:1" pos:end="431:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vc1_decode_p_mb</name><parameter_list pos:start="1:27" pos:end="1:63">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">VC1Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">v</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:49">DCTELEM</name></type> <name pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">block</name><index pos:start="1:56" pos:end="1:58">[<expr pos:start="1:57" pos:end="1:57"><literal type="number" pos:start="1:57" pos:end="1:57">6</literal></expr>]</index><index pos:start="1:59" pos:end="1:62">[<expr pos:start="1:60" pos:end="1:61"><literal type="number" pos:start="1:60" pos:end="1:61">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="431:1">{<block_content pos:start="5:5" pos:end="429:14">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name></decl>;</decl_stmt> <comment type="block" pos:start="13:14" pos:end="13:37">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">status</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="25:47"><decl pos:start="23:5" pos:end="23:57"><type pos:start="23:5" pos:end="23:20"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <specifier pos:start="23:12" pos:end="23:16">const</specifier> <name pos:start="23:18" pos:end="23:20">int</name></type> <name pos:start="23:22" pos:end="23:34"><name pos:start="23:22" pos:end="23:31">size_table</name><index pos:start="23:32" pos:end="23:34">[<expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">6</literal></expr>]</index></name> <init pos:start="23:36" pos:end="23:57">= <expr pos:start="23:38" pos:end="23:57"><block pos:start="23:38" pos:end="23:57">{ <expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr>, <expr pos:start="23:43" pos:end="23:43"><literal type="number" pos:start="23:43" pos:end="23:43">2</literal></expr>, <expr pos:start="23:46" pos:end="23:46"><literal type="number" pos:start="23:46" pos:end="23:46">3</literal></expr>, <expr pos:start="23:49" pos:end="23:49"><literal type="number" pos:start="23:49" pos:end="23:49">4</literal></expr>, <expr pos:start="23:52" pos:end="23:52"><literal type="number" pos:start="23:52" pos:end="23:52">5</literal></expr>, <expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">8</literal></expr> }</block></expr></init></decl>,

      <decl pos:start="25:7" pos:end="25:46"><type ref="prev" pos:start="23:5" pos:end="23:20"/><name pos:start="25:7" pos:end="25:21"><name pos:start="25:7" pos:end="25:18">offset_table</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">6</literal></expr>]</index></name> <init pos:start="25:23" pos:end="25:46">= <expr pos:start="25:25" pos:end="25:46"><block pos:start="25:25" pos:end="25:46">{ <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>, <expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">1</literal></expr>, <expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">3</literal></expr>, <expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">7</literal></expr>, <expr pos:start="25:39" pos:end="25:40"><literal type="number" pos:start="25:39" pos:end="25:40">15</literal></expr>, <expr pos:start="25:43" pos:end="25:44"><literal type="number" pos:start="25:43" pos:end="25:44">31</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:21">mb_has_coeffs</name> <init pos:start="27:23" pos:end="27:25">= <expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="27:28" pos:end="27:42">/* last_flag */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">dmv_x</name></decl>, <decl pos:start="29:16" pos:end="29:20"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="29:23" pos:end="29:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">index</name></decl>, <decl pos:start="31:16" pos:end="31:21"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:16" pos:end="31:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="31:24" pos:end="31:40">/* LUT indices */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:18"><decl pos:start="33:5" pos:end="33:11"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">val</name></decl>, <decl pos:start="33:14" pos:end="33:17"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:14" pos:end="33:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="33:20" pos:end="33:36">/* temp values */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:24"><decl pos:start="35:5" pos:end="35:23"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:19">first_block</name> <init pos:start="35:21" pos:end="35:23">= <expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:15"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:15">dst_idx</name></decl>, <decl pos:start="37:18" pos:end="37:20"><type ref="prev" pos:start="37:5" pos:end="37:7"/><name pos:start="37:18" pos:end="37:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:24"><decl pos:start="39:5" pos:end="39:15"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:15">skipped</name></decl>, <decl pos:start="39:18" pos:end="39:23"><type ref="prev" pos:start="39:5" pos:end="39:7"/><name pos:start="39:18" pos:end="39:23">fourmv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:10">mquant</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">v</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:18">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="43:21" pos:end="43:46">/* Loosy initialization */</comment>



    <if_stmt pos:start="47:5" pos:end="53:45"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">v</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:25">mv_type_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:14">fourmv</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:30"><name pos:start="49:18" pos:end="49:26">get_bits1</name><argument_list pos:start="49:27" pos:end="49:30">(<argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><name pos:start="49:28" pos:end="49:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="51:5" pos:end="53:45">else<block type="pseudo" pos:start="53:9" pos:end="53:45"><block_content pos:start="53:9" pos:end="53:45">

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:14">fourmv</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:44"><name pos:start="53:18" pos:end="53:18">v</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:36">mv_type_mb_plane</name><index pos:start="53:37" pos:end="53:44">[<expr pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:43">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="55:5" pos:end="61:44"><if pos:start="55:5" pos:end="57:32">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">v</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">skip_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:32"><block_content pos:start="57:9" pos:end="57:32">

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:15">skipped</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:27">get_bits1</name><argument_list pos:start="57:28" pos:end="57:31">(<argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><name pos:start="57:29" pos:end="57:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="59:5" pos:end="61:44">else<block type="pseudo" pos:start="61:9" pos:end="61:44"><block_content pos:start="61:9" pos:end="61:44">

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:15">skipped</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:43"><name pos:start="61:19" pos:end="61:19">v</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:35">mbskip_table</name><index pos:start="61:36" pos:end="61:43">[<expr pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:42">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><call pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:10">dsp</name><operator pos:start="65:11" pos:end="65:11">.</operator><name pos:start="65:12" pos:end="65:23">clear_blocks</name></name><argument_list pos:start="65:24" pos:end="65:36">(<argument pos:start="65:25" pos:end="65:35"><expr pos:start="65:25" pos:end="65:35"><name pos:start="65:25" pos:end="65:35"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:32">block</name><index pos:start="65:33" pos:end="65:35">[<expr pos:start="65:34" pos:end="65:34"><literal type="number" pos:start="65:34" pos:end="65:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="423:5"><if pos:start="69:5" pos:end="225:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:15">fourmv</name></expr>)</condition> <comment type="block" pos:start="69:18" pos:end="69:31">/* 1MV mode */</comment>

    <block pos:start="71:5" pos:end="225:5">{<block_content pos:start="73:9" pos:end="223:9">

        <if_stmt pos:start="73:9" pos:end="223:9"><if pos:start="73:9" pos:end="203:9">if <condition pos:start="73:12" pos:end="73:21">(<expr pos:start="73:13" pos:end="73:20"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:20">skipped</name></expr>)</condition>

        <block pos:start="75:9" pos:end="203:9">{<block_content pos:start="77:13" pos:end="201:13">

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><call pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:22">GET_MVDATA</name><argument_list pos:start="77:23" pos:end="77:36">(<argument pos:start="77:24" pos:end="77:28"><expr pos:start="77:24" pos:end="77:28"><name pos:start="77:24" pos:end="77:28">dmv_x</name></expr></argument>, <argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:35">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:93"><expr pos:start="81:13" pos:end="81:92"><name pos:start="81:13" pos:end="81:46"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:30">current_picture</name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:38">mb_type</name><index pos:start="81:39" pos:end="81:46">[<expr pos:start="81:40" pos:end="81:45"><name pos:start="81:40" pos:end="81:45">mb_pos</name></expr>]</index></name> <operator pos:start="81:48" pos:end="81:48">=</operator> <ternary pos:start="81:50" pos:end="81:92"><condition pos:start="81:50" pos:end="81:62"><expr pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:50">s</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:60">mb_intra</name></name></expr> ?</condition><then pos:start="81:64" pos:end="81:76"> <expr pos:start="81:64" pos:end="81:76"><name pos:start="81:64" pos:end="81:76">MB_TYPE_INTRA</name></expr> </then><else pos:start="81:78" pos:end="81:92">: <expr pos:start="81:80" pos:end="81:92"><name pos:start="81:80" pos:end="81:92">MB_TYPE_16x16</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:86"><expr pos:start="83:13" pos:end="83:85"><call pos:start="83:13" pos:end="83:85"><name pos:start="83:13" pos:end="83:23">vc1_pred_mv</name><argument_list pos:start="83:24" pos:end="83:85">(<argument pos:start="83:25" pos:end="83:25"><expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">s</name></expr></argument>, <argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr></argument>, <argument pos:start="83:31" pos:end="83:35"><expr pos:start="83:31" pos:end="83:35"><name pos:start="83:31" pos:end="83:35">dmv_x</name></expr></argument>, <argument pos:start="83:38" pos:end="83:42"><expr pos:start="83:38" pos:end="83:42"><name pos:start="83:38" pos:end="83:42">dmv_y</name></expr></argument>, <argument pos:start="83:45" pos:end="83:45"><expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">1</literal></expr></argument>, <argument pos:start="83:48" pos:end="83:57"><expr pos:start="83:48" pos:end="83:57"><name pos:start="83:48" pos:end="83:57"><name pos:start="83:48" pos:end="83:48">v</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:57">range_x</name></name></expr></argument>, <argument pos:start="83:60" pos:end="83:69"><expr pos:start="83:60" pos:end="83:69"><name pos:start="83:60" pos:end="83:69"><name pos:start="83:60" pos:end="83:60">v</name><operator pos:start="83:61" pos:end="83:62">-&gt;</operator><name pos:start="83:63" pos:end="83:69">range_y</name></name></expr></argument>, <argument pos:start="83:72" pos:end="83:84"><expr pos:start="83:72" pos:end="83:84"><name pos:start="83:72" pos:end="83:84"><name pos:start="83:72" pos:end="83:72">v</name><operator pos:start="83:73" pos:end="83:74">-&gt;</operator><name pos:start="83:75" pos:end="83:81">mb_type</name><index pos:start="83:82" pos:end="83:84">[<expr pos:start="83:83" pos:end="83:83"><literal type="number" pos:start="83:83" pos:end="83:83">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="87:13" pos:end="87:52">/* FIXME Set DC val for inter block ? */</comment>

            <if_stmt pos:start="89:13" pos:end="121:13"><if pos:start="89:13" pos:end="99:13">if <condition pos:start="89:16" pos:end="89:46">(<expr pos:start="89:17" pos:end="89:45"><name pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">mb_intra</name></name> <operator pos:start="89:29" pos:end="89:30">&amp;&amp;</operator> <operator pos:start="89:32" pos:end="89:32">!</operator><name pos:start="89:33" pos:end="89:45">mb_has_coeffs</name></expr>)</condition>

            <block pos:start="91:13" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:24">

                <expr_stmt pos:start="93:17" pos:end="93:29"><expr pos:start="93:17" pos:end="93:28"><call pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:26">GET_MQUANT</name><argument_list pos:start="93:27" pos:end="93:28">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:45"><expr pos:start="95:17" pos:end="95:44"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:26">ac_pred</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <call pos:start="95:30" pos:end="95:44"><name pos:start="95:30" pos:end="95:37">get_bits</name><argument_list pos:start="95:38" pos:end="95:44">(<argument pos:start="95:39" pos:end="95:40"><expr pos:start="95:39" pos:end="95:40"><name pos:start="95:39" pos:end="95:40">gb</name></expr></argument>, <argument pos:start="95:43" pos:end="95:43"><expr pos:start="95:43" pos:end="95:43"><literal type="number" pos:start="95:43" pos:end="95:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:24"><expr pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:19">cbp</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="101:13" pos:end="111:13">else if <condition pos:start="101:21" pos:end="101:35">(<expr pos:start="101:22" pos:end="101:34"><name pos:start="101:22" pos:end="101:34">mb_has_coeffs</name></expr>)</condition>

            <block pos:start="103:13" pos:end="111:13">{<block_content pos:start="105:17" pos:end="109:29">

                <if_stmt pos:start="105:17" pos:end="105:62"><if pos:start="105:17" pos:end="105:62">if <condition pos:start="105:20" pos:end="105:32">(<expr pos:start="105:21" pos:end="105:31"><name pos:start="105:21" pos:end="105:31"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:31">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="105:34" pos:end="105:62"><block_content pos:start="105:34" pos:end="105:62"> <expr_stmt pos:start="105:34" pos:end="105:62"><expr pos:start="105:34" pos:end="105:61"><name pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:34">s</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:43">ac_pred</name></name> <operator pos:start="105:45" pos:end="105:45">=</operator> <call pos:start="105:47" pos:end="105:61"><name pos:start="105:47" pos:end="105:54">get_bits</name><argument_list pos:start="105:55" pos:end="105:61">(<argument pos:start="105:56" pos:end="105:57"><expr pos:start="105:56" pos:end="105:57"><name pos:start="105:56" pos:end="105:57">gb</name></expr></argument>, <argument pos:start="105:60" pos:end="105:60"><expr pos:start="105:60" pos:end="105:60"><literal type="number" pos:start="105:60" pos:end="105:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:87"><expr pos:start="107:17" pos:end="107:86"><name pos:start="107:17" pos:end="107:19">cbp</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:86"><name pos:start="107:23" pos:end="107:30">get_vlc2</name><argument_list pos:start="107:31" pos:end="107:86">(<argument pos:start="107:32" pos:end="107:39"><expr pos:start="107:32" pos:end="107:39"><operator pos:start="107:32" pos:end="107:32">&amp;</operator><name pos:start="107:33" pos:end="107:39"><name pos:start="107:33" pos:end="107:33">v</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:36">s</name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:39">gb</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:60"><expr pos:start="107:42" pos:end="107:60"><name pos:start="107:42" pos:end="107:60"><name pos:start="107:42" pos:end="107:42">v</name><operator pos:start="107:43" pos:end="107:44">-&gt;</operator><name pos:start="107:45" pos:end="107:53">cbpcy_vlc</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:60">table</name></name></expr></argument>, <argument pos:start="107:63" pos:end="107:82"><expr pos:start="107:63" pos:end="107:82"><name pos:start="107:63" pos:end="107:82">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="107:85" pos:end="107:85"><expr pos:start="107:85" pos:end="107:85"><literal type="number" pos:start="107:85" pos:end="107:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:29"><expr pos:start="109:17" pos:end="109:28"><call pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:26">GET_MQUANT</name><argument_list pos:start="109:27" pos:end="109:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="113:13" pos:end="121:13">else

            <block pos:start="115:13" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:24">

                <expr_stmt pos:start="117:17" pos:end="117:31"><expr pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:22">mquant</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <name pos:start="117:26" pos:end="117:30"><name pos:start="117:26" pos:end="117:26">v</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:30">pq</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:24"><expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:19">cbp</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:61"><expr pos:start="123:13" pos:end="123:60"><name pos:start="123:13" pos:end="123:51"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:30">current_picture</name><operator pos:start="123:31" pos:end="123:31">.</operator><name pos:start="123:32" pos:end="123:43">qscale_table</name><index pos:start="123:44" pos:end="123:51">[<expr pos:start="123:45" pos:end="123:50"><name pos:start="123:45" pos:end="123:50">mb_pos</name></expr>]</index></name> <operator pos:start="123:53" pos:end="123:53">=</operator> <name pos:start="123:55" pos:end="123:60">mquant</name></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="131:54"><if pos:start="127:13" pos:end="131:54">if <condition pos:start="127:16" pos:end="127:59">(<expr pos:start="127:17" pos:end="127:58"><operator pos:start="127:17" pos:end="127:17">!</operator><name pos:start="127:18" pos:end="127:25"><name pos:start="127:18" pos:end="127:18">v</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:25">ttmbf</name></name> <operator pos:start="127:27" pos:end="127:28">&amp;&amp;</operator> <operator pos:start="127:30" pos:end="127:30">!</operator><name pos:start="127:31" pos:end="127:41"><name pos:start="127:31" pos:end="127:31">s</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:41">mb_intra</name></name> <operator pos:start="127:43" pos:end="127:44">&amp;&amp;</operator> <name pos:start="127:46" pos:end="127:58">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="131:54"><block_content pos:start="129:17" pos:end="131:54">

                <expr_stmt pos:start="129:17" pos:end="131:54"><expr pos:start="129:17" pos:end="131:53"><name pos:start="129:17" pos:end="129:20">ttmb</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="131:53"><name pos:start="129:24" pos:end="129:31">get_vlc2</name><argument_list pos:start="129:32" pos:end="131:53">(<argument pos:start="129:33" pos:end="129:34"><expr pos:start="129:33" pos:end="129:34"><name pos:start="129:33" pos:end="129:34">gb</name></expr></argument>, <argument pos:start="129:37" pos:end="129:67"><expr pos:start="129:37" pos:end="129:67"><name pos:start="129:37" pos:end="129:61"><name pos:start="129:37" pos:end="129:48">vc1_ttmb_vlc</name><index pos:start="129:49" pos:end="129:61">[<expr pos:start="129:50" pos:end="129:60"><name pos:start="129:50" pos:end="129:60"><name pos:start="129:50" pos:end="129:50">v</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:60">tt_index</name></name></expr>]</index></name><operator pos:start="129:62" pos:end="129:62">.</operator><name pos:start="129:63" pos:end="129:67">table</name></expr></argument>,

                                <argument pos:start="131:33" pos:end="131:49"><expr pos:start="131:33" pos:end="131:49"><name pos:start="131:33" pos:end="131:49">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="131:52" pos:end="131:52"><expr pos:start="131:52" pos:end="131:52"><literal type="number" pos:start="131:52" pos:end="131:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="133:13" pos:end="133:43"><if pos:start="133:13" pos:end="133:43">if<condition pos:start="133:15" pos:end="133:28">(<expr pos:start="133:16" pos:end="133:27"><operator pos:start="133:16" pos:end="133:16">!</operator><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:27">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="133:30" pos:end="133:43"><block_content pos:start="133:30" pos:end="133:43"> <expr_stmt pos:start="133:30" pos:end="133:43"><expr pos:start="133:30" pos:end="133:42"><call pos:start="133:30" pos:end="133:42"><name pos:start="133:30" pos:end="133:39">vc1_mc_1mv</name><argument_list pos:start="133:40" pos:end="133:42">(<argument pos:start="133:41" pos:end="133:41"><expr pos:start="133:41" pos:end="133:41"><name pos:start="133:41" pos:end="133:41">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:19">dst_idx</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>;</expr_stmt>

            <for pos:start="137:13" pos:end="201:13">for <control pos:start="137:17" pos:end="137:31">(<init pos:start="137:18" pos:end="137:21"><expr pos:start="137:18" pos:end="137:20"><name pos:start="137:18" pos:end="137:18">i</name><operator pos:start="137:19" pos:end="137:19">=</operator><literal type="number" pos:start="137:20" pos:end="137:20">0</literal></expr>;</init> <condition pos:start="137:23" pos:end="137:26"><expr pos:start="137:23" pos:end="137:25"><name pos:start="137:23" pos:end="137:23">i</name><operator pos:start="137:24" pos:end="137:24">&lt;</operator><literal type="number" pos:start="137:25" pos:end="137:25">6</literal></expr>;</condition> <incr pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:28">i</name><operator pos:start="137:29" pos:end="137:30">++</operator></expr></incr>)</control>

            <block pos:start="139:13" pos:end="201:13">{<block_content pos:start="141:17" pos:end="199:17">

                <expr_stmt pos:start="141:17" pos:end="141:52"><expr pos:start="141:17" pos:end="141:51"><name pos:start="141:17" pos:end="141:47"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:25">dc_val</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>]</index><index pos:start="141:29" pos:end="141:47">[<expr pos:start="141:30" pos:end="141:46"><name pos:start="141:30" pos:end="141:46"><name pos:start="141:30" pos:end="141:30">s</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:43">block_index</name><index pos:start="141:44" pos:end="141:46">[<expr pos:start="141:45" pos:end="141:45"><name pos:start="141:45" pos:end="141:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="141:49" pos:end="141:49">=</operator> <literal type="number" pos:start="141:51" pos:end="141:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:34"><expr pos:start="143:17" pos:end="143:33"><name pos:start="143:17" pos:end="143:23">dst_idx</name> <operator pos:start="143:25" pos:end="143:26">+=</operator> <name pos:start="143:28" pos:end="143:28">i</name> <operator pos:start="143:30" pos:end="143:31">&gt;&gt;</operator> <literal type="number" pos:start="143:33" pos:end="143:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:45"><expr pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:19">val</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <operator pos:start="145:23" pos:end="145:23">(</operator><operator pos:start="145:24" pos:end="145:24">(</operator><name pos:start="145:25" pos:end="145:27">cbp</name> <operator pos:start="145:29" pos:end="145:30">&gt;&gt;</operator> <operator pos:start="145:32" pos:end="145:32">(</operator><literal type="number" pos:start="145:33" pos:end="145:35">5</literal> <operator pos:start="145:35" pos:end="145:35">-</operator> <name pos:start="145:37" pos:end="145:37">i</name><operator pos:start="145:38" pos:end="145:38">)</operator><operator pos:start="145:39" pos:end="145:39">)</operator> <operator pos:start="145:41" pos:end="145:41">&amp;</operator> <literal type="number" pos:start="145:43" pos:end="145:43">1</literal><operator pos:start="145:44" pos:end="145:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:78"><expr pos:start="147:17" pos:end="147:77"><name pos:start="147:17" pos:end="147:19">off</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <ternary pos:start="147:23" pos:end="147:77"><condition pos:start="147:23" pos:end="147:31"><expr pos:start="147:23" pos:end="147:29"><operator pos:start="147:23" pos:end="147:23">(</operator><name pos:start="147:24" pos:end="147:24">i</name> <operator pos:start="147:26" pos:end="147:26">&amp;</operator> <literal type="number" pos:start="147:28" pos:end="147:28">4</literal><operator pos:start="147:29" pos:end="147:29">)</operator></expr> ?</condition><then pos:start="147:33" pos:end="147:33"> <expr pos:start="147:33" pos:end="147:33"><literal type="number" pos:start="147:33" pos:end="147:33">0</literal></expr> </then><else pos:start="147:35" pos:end="147:77">: <expr pos:start="147:37" pos:end="147:77"><operator pos:start="147:37" pos:end="147:37">(</operator><operator pos:start="147:38" pos:end="147:38">(</operator><name pos:start="147:39" pos:end="147:39">i</name> <operator pos:start="147:41" pos:end="147:41">&amp;</operator> <literal type="number" pos:start="147:43" pos:end="147:43">1</literal><operator pos:start="147:44" pos:end="147:44">)</operator> <operator pos:start="147:46" pos:end="147:46">*</operator> <literal type="number" pos:start="147:48" pos:end="147:50">8</literal> <operator pos:start="147:50" pos:end="147:50">+</operator> <operator pos:start="147:52" pos:end="147:52">(</operator><name pos:start="147:53" pos:end="147:53">i</name> <operator pos:start="147:55" pos:end="147:55">&amp;</operator> <literal type="number" pos:start="147:57" pos:end="147:57">2</literal><operator pos:start="147:58" pos:end="147:58">)</operator> <operator pos:start="147:60" pos:end="147:60">*</operator> <literal type="number" pos:start="147:62" pos:end="147:62">4</literal> <operator pos:start="147:64" pos:end="147:64">*</operator> <name pos:start="147:66" pos:end="147:76"><name pos:start="147:66" pos:end="147:66">s</name><operator pos:start="147:67" pos:end="147:68">-&gt;</operator><name pos:start="147:69" pos:end="147:76">linesize</name></name><operator pos:start="147:77" pos:end="147:77">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:63"><expr pos:start="149:17" pos:end="149:62"><name pos:start="149:17" pos:end="149:48"><name pos:start="149:17" pos:end="149:17">v</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:26">mb_type</name><index pos:start="149:27" pos:end="149:29">[<expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">0</literal></expr>]</index><index pos:start="149:30" pos:end="149:48">[<expr pos:start="149:31" pos:end="149:47"><name pos:start="149:31" pos:end="149:47"><name pos:start="149:31" pos:end="149:31">s</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:44">block_index</name><index pos:start="149:45" pos:end="149:47">[<expr pos:start="149:46" pos:end="149:46"><name pos:start="149:46" pos:end="149:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="149:50" pos:end="149:50">=</operator> <name pos:start="149:52" pos:end="149:62"><name pos:start="149:52" pos:end="149:52">s</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:62">mb_intra</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="151:17" pos:end="199:17"><if pos:start="151:17" pos:end="189:17">if<condition pos:start="151:19" pos:end="151:31">(<expr pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:20">s</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:30">mb_intra</name></name></expr>)</condition> <block pos:start="151:33" pos:end="189:17">{<block_content pos:start="155:21" pos:end="187:21">

                    <comment type="block" pos:start="153:21" pos:end="153:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="155:21" pos:end="155:48"><expr pos:start="155:21" pos:end="155:47"><name pos:start="155:21" pos:end="155:30"><name pos:start="155:21" pos:end="155:21">v</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:30">a_avail</name></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:43"><name pos:start="155:34" pos:end="155:34">v</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:43">c_avail</name></name> <operator pos:start="155:45" pos:end="155:45">=</operator> <literal type="number" pos:start="155:47" pos:end="155:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="157:21" pos:end="159:89"><if pos:start="157:21" pos:end="159:89">if<condition pos:start="157:23" pos:end="157:51">(<expr pos:start="157:24" pos:end="157:50"><name pos:start="157:24" pos:end="157:24">i</name> <operator pos:start="157:26" pos:end="157:27">==</operator> <literal type="number" pos:start="157:29" pos:end="157:29">2</literal> <operator pos:start="157:31" pos:end="157:32">||</operator> <name pos:start="157:34" pos:end="157:34">i</name> <operator pos:start="157:36" pos:end="157:37">==</operator> <literal type="number" pos:start="157:39" pos:end="157:39">3</literal> <operator pos:start="157:41" pos:end="157:42">||</operator> <name pos:start="157:44" pos:end="157:50"><name pos:start="157:44" pos:end="157:44">s</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:50">mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="159:25" pos:end="159:89"><block_content pos:start="159:25" pos:end="159:89">

                        <expr_stmt pos:start="159:25" pos:end="159:89"><expr pos:start="159:25" pos:end="159:88"><name pos:start="159:25" pos:end="159:34"><name pos:start="159:25" pos:end="159:25">v</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:34">a_avail</name></name> <operator pos:start="159:36" pos:end="159:36">=</operator> <name pos:start="159:38" pos:end="159:88"><name pos:start="159:38" pos:end="159:38">v</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:47">mb_type</name><index pos:start="159:48" pos:end="159:50">[<expr pos:start="159:49" pos:end="159:49"><literal type="number" pos:start="159:49" pos:end="159:49">0</literal></expr>]</index><index pos:start="159:51" pos:end="159:88">[<expr pos:start="159:52" pos:end="159:87"><name pos:start="159:52" pos:end="159:68"><name pos:start="159:52" pos:end="159:52">s</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:65">block_index</name><index pos:start="159:66" pos:end="159:68">[<expr pos:start="159:67" pos:end="159:67"><name pos:start="159:67" pos:end="159:67">i</name></expr>]</index></name> <operator pos:start="159:70" pos:end="159:70">-</operator> <name pos:start="159:72" pos:end="159:87"><name pos:start="159:72" pos:end="159:72">s</name><operator pos:start="159:73" pos:end="159:74">-&gt;</operator><name pos:start="159:75" pos:end="159:84">block_wrap</name><index pos:start="159:85" pos:end="159:87">[<expr pos:start="159:86" pos:end="159:86"><name pos:start="159:86" pos:end="159:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="161:21" pos:end="163:74"><if pos:start="161:21" pos:end="163:74">if<condition pos:start="161:23" pos:end="161:51">(<expr pos:start="161:24" pos:end="161:50"><name pos:start="161:24" pos:end="161:24">i</name> <operator pos:start="161:26" pos:end="161:27">==</operator> <literal type="number" pos:start="161:29" pos:end="161:29">1</literal> <operator pos:start="161:31" pos:end="161:32">||</operator> <name pos:start="161:34" pos:end="161:34">i</name> <operator pos:start="161:36" pos:end="161:37">==</operator> <literal type="number" pos:start="161:39" pos:end="161:39">3</literal> <operator pos:start="161:41" pos:end="161:42">||</operator> <name pos:start="161:44" pos:end="161:50"><name pos:start="161:44" pos:end="161:44">s</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:50">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:74"><block_content pos:start="163:25" pos:end="163:74">

                        <expr_stmt pos:start="163:25" pos:end="163:74"><expr pos:start="163:25" pos:end="163:73"><name pos:start="163:25" pos:end="163:34"><name pos:start="163:25" pos:end="163:25">v</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:34">c_avail</name></name> <operator pos:start="163:36" pos:end="163:36">=</operator> <name pos:start="163:38" pos:end="163:73"><name pos:start="163:38" pos:end="163:38">v</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:47">mb_type</name><index pos:start="163:48" pos:end="163:50">[<expr pos:start="163:49" pos:end="163:49"><literal type="number" pos:start="163:49" pos:end="163:49">0</literal></expr>]</index><index pos:start="163:51" pos:end="163:73">[<expr pos:start="163:52" pos:end="163:72"><name pos:start="163:52" pos:end="163:68"><name pos:start="163:52" pos:end="163:52">s</name><operator pos:start="163:53" pos:end="163:54">-&gt;</operator><name pos:start="163:55" pos:end="163:65">block_index</name><index pos:start="163:66" pos:end="163:68">[<expr pos:start="163:67" pos:end="163:67"><name pos:start="163:67" pos:end="163:67">i</name></expr>]</index></name> <operator pos:start="163:70" pos:end="163:70">-</operator> <literal type="number" pos:start="163:72" pos:end="163:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="167:21" pos:end="167:106"><expr pos:start="167:21" pos:end="167:105"><call pos:start="167:21" pos:end="167:105"><name pos:start="167:21" pos:end="167:42">vc1_decode_intra_block</name><argument_list pos:start="167:43" pos:end="167:105">(<argument pos:start="167:44" pos:end="167:44"><expr pos:start="167:44" pos:end="167:44"><name pos:start="167:44" pos:end="167:44">v</name></expr></argument>, <argument pos:start="167:47" pos:end="167:54"><expr pos:start="167:47" pos:end="167:54"><name pos:start="167:47" pos:end="167:54"><name pos:start="167:47" pos:end="167:51">block</name><index pos:start="167:52" pos:end="167:54">[<expr pos:start="167:53" pos:end="167:53"><name pos:start="167:53" pos:end="167:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="167:57" pos:end="167:57"><expr pos:start="167:57" pos:end="167:57"><name pos:start="167:57" pos:end="167:57">i</name></expr></argument>, <argument pos:start="167:60" pos:end="167:62"><expr pos:start="167:60" pos:end="167:62"><name pos:start="167:60" pos:end="167:62">val</name></expr></argument>, <argument pos:start="167:65" pos:end="167:70"><expr pos:start="167:65" pos:end="167:70"><name pos:start="167:65" pos:end="167:70">mquant</name></expr></argument>, <argument pos:start="167:73" pos:end="167:104"><expr pos:start="167:73" pos:end="167:104"><ternary pos:start="167:73" pos:end="167:104"><condition pos:start="167:73" pos:end="167:78"><expr pos:start="167:73" pos:end="167:77"><operator pos:start="167:73" pos:end="167:73">(</operator><name pos:start="167:74" pos:end="167:74">i</name><operator pos:start="167:75" pos:end="167:75">&amp;</operator><literal type="number" pos:start="167:76" pos:end="167:76">4</literal><operator pos:start="167:77" pos:end="167:77">)</operator></expr>?</condition><then pos:start="167:79" pos:end="167:91"><expr pos:start="167:79" pos:end="167:91"><name pos:start="167:79" pos:end="167:91"><name pos:start="167:79" pos:end="167:79">v</name><operator pos:start="167:80" pos:end="167:81">-&gt;</operator><name pos:start="167:82" pos:end="167:91">codingset2</name></name></expr></then><else pos:start="167:92" pos:end="167:104">:<expr pos:start="167:93" pos:end="167:104"><name pos:start="167:93" pos:end="167:104"><name pos:start="167:93" pos:end="167:93">v</name><operator pos:start="167:94" pos:end="167:95">-&gt;</operator><name pos:start="167:96" pos:end="167:104">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:50"><expr pos:start="169:21" pos:end="169:49"><call pos:start="169:21" pos:end="169:49"><name pos:start="169:21" pos:end="169:33">vc1_inv_trans</name><argument_list pos:start="169:34" pos:end="169:49">(<argument pos:start="169:35" pos:end="169:42"><expr pos:start="169:35" pos:end="169:42"><name pos:start="169:35" pos:end="169:42"><name pos:start="169:35" pos:end="169:39">block</name><index pos:start="169:40" pos:end="169:42">[<expr pos:start="169:41" pos:end="169:41"><name pos:start="169:41" pos:end="169:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="169:45" pos:end="169:45"><expr pos:start="169:45" pos:end="169:45"><literal type="number" pos:start="169:45" pos:end="169:45">8</literal></expr></argument>, <argument pos:start="169:48" pos:end="169:48"><expr pos:start="169:48" pos:end="169:48"><literal type="number" pos:start="169:48" pos:end="169:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="171:21" pos:end="171:63">for<control pos:start="171:24" pos:end="171:43">(<init pos:start="171:25" pos:end="171:30"><expr pos:start="171:25" pos:end="171:29"><name pos:start="171:25" pos:end="171:25">j</name> <operator pos:start="171:27" pos:end="171:27">=</operator> <literal type="number" pos:start="171:29" pos:end="171:29">0</literal></expr>;</init> <condition pos:start="171:32" pos:end="171:38"><expr pos:start="171:32" pos:end="171:37"><name pos:start="171:32" pos:end="171:32">j</name> <operator pos:start="171:34" pos:end="171:34">&lt;</operator> <literal type="number" pos:start="171:36" pos:end="171:37">64</literal></expr>;</condition> <incr pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><name pos:start="171:40" pos:end="171:40">j</name><operator pos:start="171:41" pos:end="171:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:45" pos:end="171:63"><block_content pos:start="171:45" pos:end="171:63"> <expr_stmt pos:start="171:45" pos:end="171:63"><expr pos:start="171:45" pos:end="171:62"><name pos:start="171:45" pos:end="171:55"><name pos:start="171:45" pos:end="171:49">block</name><index pos:start="171:50" pos:end="171:52">[<expr pos:start="171:51" pos:end="171:51"><name pos:start="171:51" pos:end="171:51">i</name></expr>]</index><index pos:start="171:53" pos:end="171:55">[<expr pos:start="171:54" pos:end="171:54"><name pos:start="171:54" pos:end="171:54">j</name></expr>]</index></name> <operator pos:start="171:57" pos:end="171:58">+=</operator> <literal type="number" pos:start="171:60" pos:end="171:62">128</literal></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="173:21" pos:end="173:111"><expr pos:start="173:21" pos:end="173:110"><call pos:start="173:21" pos:end="173:110"><name pos:start="173:21" pos:end="173:45"><name pos:start="173:21" pos:end="173:21">s</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:26">dsp</name><operator pos:start="173:27" pos:end="173:27">.</operator><name pos:start="173:28" pos:end="173:45">put_pixels_clamped</name></name><argument_list pos:start="173:46" pos:end="173:110">(<argument pos:start="173:47" pos:end="173:54"><expr pos:start="173:47" pos:end="173:54"><name pos:start="173:47" pos:end="173:54"><name pos:start="173:47" pos:end="173:51">block</name><index pos:start="173:52" pos:end="173:54">[<expr pos:start="173:53" pos:end="173:53"><name pos:start="173:53" pos:end="173:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="173:57" pos:end="173:78"><expr pos:start="173:57" pos:end="173:78"><name pos:start="173:57" pos:end="173:72"><name pos:start="173:57" pos:end="173:57">s</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:63">dest</name><index pos:start="173:64" pos:end="173:72">[<expr pos:start="173:65" pos:end="173:71"><name pos:start="173:65" pos:end="173:71">dst_idx</name></expr>]</index></name> <operator pos:start="173:74" pos:end="173:74">+</operator> <name pos:start="173:76" pos:end="173:78">off</name></expr></argument>, <argument pos:start="173:81" pos:end="173:109"><expr pos:start="173:81" pos:end="173:109"><name pos:start="173:81" pos:end="173:91"><name pos:start="173:81" pos:end="173:81">s</name><operator pos:start="173:82" pos:end="173:83">-&gt;</operator><name pos:start="173:84" pos:end="173:91">linesize</name></name> <operator pos:start="173:93" pos:end="173:94">&gt;&gt;</operator> <operator pos:start="173:96" pos:end="173:96">(</operator><operator pos:start="173:97" pos:end="173:97">(</operator><name pos:start="173:98" pos:end="173:98">i</name> <operator pos:start="173:100" pos:end="173:100">&amp;</operator> <literal type="number" pos:start="173:102" pos:end="173:102">4</literal><operator pos:start="173:103" pos:end="173:103">)</operator> <operator pos:start="173:105" pos:end="173:106">&gt;&gt;</operator> <literal type="number" pos:start="173:108" pos:end="173:108">2</literal><operator pos:start="173:109" pos:end="173:109">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="175:21" pos:end="175:53">/* TODO: proper loop filtering */</comment>

                    <if_stmt pos:start="177:21" pos:end="187:21"><if pos:start="177:21" pos:end="187:21">if<condition pos:start="177:23" pos:end="177:48">(<expr pos:start="177:24" pos:end="177:47"><name pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:24">v</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:28">pq</name></name> <operator pos:start="177:30" pos:end="177:31">&gt;=</operator> <literal type="number" pos:start="177:33" pos:end="177:33">9</literal> <operator pos:start="177:35" pos:end="177:36">&amp;&amp;</operator> <name pos:start="177:38" pos:end="177:47"><name pos:start="177:38" pos:end="177:38">v</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:47">overlap</name></name></expr>)</condition> <block pos:start="177:50" pos:end="187:21">{<block_content pos:start="179:25" pos:end="185:124">

                        <if_stmt pos:start="179:25" pos:end="181:124"><if pos:start="179:25" pos:end="181:124">if<condition pos:start="179:27" pos:end="179:38">(<expr pos:start="179:28" pos:end="179:37"><name pos:start="179:28" pos:end="179:37"><name pos:start="179:28" pos:end="179:28">v</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:37">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="181:29" pos:end="181:124"><block_content pos:start="181:29" pos:end="181:124">

                            <expr_stmt pos:start="181:29" pos:end="181:124"><expr pos:start="181:29" pos:end="181:123"><call pos:start="181:29" pos:end="181:123"><name pos:start="181:29" pos:end="181:53"><name pos:start="181:29" pos:end="181:29">s</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:34">dsp</name><operator pos:start="181:35" pos:end="181:35">.</operator><name pos:start="181:36" pos:end="181:53">h263_v_loop_filter</name></name><argument_list pos:start="181:54" pos:end="181:123">(<argument pos:start="181:55" pos:end="181:76"><expr pos:start="181:55" pos:end="181:76"><name pos:start="181:55" pos:end="181:70"><name pos:start="181:55" pos:end="181:55">s</name><operator pos:start="181:56" pos:end="181:57">-&gt;</operator><name pos:start="181:58" pos:end="181:61">dest</name><index pos:start="181:62" pos:end="181:70">[<expr pos:start="181:63" pos:end="181:69"><name pos:start="181:63" pos:end="181:69">dst_idx</name></expr>]</index></name> <operator pos:start="181:72" pos:end="181:72">+</operator> <name pos:start="181:74" pos:end="181:76">off</name></expr></argument>, <argument pos:start="181:79" pos:end="181:107"><expr pos:start="181:79" pos:end="181:107"><name pos:start="181:79" pos:end="181:89"><name pos:start="181:79" pos:end="181:79">s</name><operator pos:start="181:80" pos:end="181:81">-&gt;</operator><name pos:start="181:82" pos:end="181:89">linesize</name></name> <operator pos:start="181:91" pos:end="181:92">&gt;&gt;</operator> <operator pos:start="181:94" pos:end="181:94">(</operator><operator pos:start="181:95" pos:end="181:95">(</operator><name pos:start="181:96" pos:end="181:96">i</name> <operator pos:start="181:98" pos:end="181:98">&amp;</operator> <literal type="number" pos:start="181:100" pos:end="181:100">4</literal><operator pos:start="181:101" pos:end="181:101">)</operator> <operator pos:start="181:103" pos:end="181:104">&gt;&gt;</operator> <literal type="number" pos:start="181:106" pos:end="181:106">2</literal><operator pos:start="181:107" pos:end="181:107">)</operator></expr></argument>, <argument pos:start="181:110" pos:end="181:122"><expr pos:start="181:110" pos:end="181:122"><name pos:start="181:110" pos:end="181:122"><name pos:start="181:110" pos:end="181:110">s</name><operator pos:start="181:111" pos:end="181:112">-&gt;</operator><name pos:start="181:113" pos:end="181:122">y_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="183:25" pos:end="185:124"><if pos:start="183:25" pos:end="185:124">if<condition pos:start="183:27" pos:end="183:38">(<expr pos:start="183:28" pos:end="183:37"><name pos:start="183:28" pos:end="183:37"><name pos:start="183:28" pos:end="183:28">v</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:37">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="185:29" pos:end="185:124"><block_content pos:start="185:29" pos:end="185:124">

                            <expr_stmt pos:start="185:29" pos:end="185:124"><expr pos:start="185:29" pos:end="185:123"><call pos:start="185:29" pos:end="185:123"><name pos:start="185:29" pos:end="185:53"><name pos:start="185:29" pos:end="185:29">s</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">dsp</name><operator pos:start="185:35" pos:end="185:35">.</operator><name pos:start="185:36" pos:end="185:53">h263_h_loop_filter</name></name><argument_list pos:start="185:54" pos:end="185:123">(<argument pos:start="185:55" pos:end="185:76"><expr pos:start="185:55" pos:end="185:76"><name pos:start="185:55" pos:end="185:70"><name pos:start="185:55" pos:end="185:55">s</name><operator pos:start="185:56" pos:end="185:57">-&gt;</operator><name pos:start="185:58" pos:end="185:61">dest</name><index pos:start="185:62" pos:end="185:70">[<expr pos:start="185:63" pos:end="185:69"><name pos:start="185:63" pos:end="185:69">dst_idx</name></expr>]</index></name> <operator pos:start="185:72" pos:end="185:72">+</operator> <name pos:start="185:74" pos:end="185:76">off</name></expr></argument>, <argument pos:start="185:79" pos:end="185:107"><expr pos:start="185:79" pos:end="185:107"><name pos:start="185:79" pos:end="185:89"><name pos:start="185:79" pos:end="185:79">s</name><operator pos:start="185:80" pos:end="185:81">-&gt;</operator><name pos:start="185:82" pos:end="185:89">linesize</name></name> <operator pos:start="185:91" pos:end="185:92">&gt;&gt;</operator> <operator pos:start="185:94" pos:end="185:94">(</operator><operator pos:start="185:95" pos:end="185:95">(</operator><name pos:start="185:96" pos:end="185:96">i</name> <operator pos:start="185:98" pos:end="185:98">&amp;</operator> <literal type="number" pos:start="185:100" pos:end="185:100">4</literal><operator pos:start="185:101" pos:end="185:101">)</operator> <operator pos:start="185:103" pos:end="185:104">&gt;&gt;</operator> <literal type="number" pos:start="185:106" pos:end="185:106">2</literal><operator pos:start="185:107" pos:end="185:107">)</operator></expr></argument>, <argument pos:start="185:110" pos:end="185:122"><expr pos:start="185:110" pos:end="185:122"><name pos:start="185:110" pos:end="185:122"><name pos:start="185:110" pos:end="185:110">s</name><operator pos:start="185:111" pos:end="185:112">-&gt;</operator><name pos:start="185:113" pos:end="185:122">y_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="189:19" pos:end="199:17">else if<condition pos:start="189:26" pos:end="189:30">(<expr pos:start="189:27" pos:end="189:29"><name pos:start="189:27" pos:end="189:29">val</name></expr>)</condition> <block pos:start="189:32" pos:end="199:17">{<block_content pos:start="191:21" pos:end="197:113">

                    <expr_stmt pos:start="191:21" pos:end="191:82"><expr pos:start="191:21" pos:end="191:81"><call pos:start="191:21" pos:end="191:81"><name pos:start="191:21" pos:end="191:38">vc1_decode_p_block</name><argument_list pos:start="191:39" pos:end="191:81">(<argument pos:start="191:40" pos:end="191:40"><expr pos:start="191:40" pos:end="191:40"><name pos:start="191:40" pos:end="191:40">v</name></expr></argument>, <argument pos:start="191:43" pos:end="191:50"><expr pos:start="191:43" pos:end="191:50"><name pos:start="191:43" pos:end="191:50"><name pos:start="191:43" pos:end="191:47">block</name><index pos:start="191:48" pos:end="191:50">[<expr pos:start="191:49" pos:end="191:49"><name pos:start="191:49" pos:end="191:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="191:53" pos:end="191:53"><expr pos:start="191:53" pos:end="191:53"><name pos:start="191:53" pos:end="191:53">i</name></expr></argument>, <argument pos:start="191:56" pos:end="191:61"><expr pos:start="191:56" pos:end="191:61"><name pos:start="191:56" pos:end="191:61">mquant</name></expr></argument>, <argument pos:start="191:64" pos:end="191:67"><expr pos:start="191:64" pos:end="191:67"><name pos:start="191:64" pos:end="191:67">ttmb</name></expr></argument>, <argument pos:start="191:70" pos:end="191:80"><expr pos:start="191:70" pos:end="191:80"><name pos:start="191:70" pos:end="191:80">first_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="193:56"><if pos:start="193:21" pos:end="193:56">if<condition pos:start="193:23" pos:end="193:45">(<expr pos:start="193:24" pos:end="193:44"><operator pos:start="193:24" pos:end="193:24">!</operator><name pos:start="193:25" pos:end="193:32"><name pos:start="193:25" pos:end="193:25">v</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:32">ttmbf</name></name> <operator pos:start="193:34" pos:end="193:35">&amp;&amp;</operator> <name pos:start="193:37" pos:end="193:40">ttmb</name> <operator pos:start="193:42" pos:end="193:42">&lt;</operator> <literal type="number" pos:start="193:44" pos:end="193:44">8</literal></expr>)</condition><block type="pseudo" pos:start="193:47" pos:end="193:56"><block_content pos:start="193:47" pos:end="193:56"> <expr_stmt pos:start="193:47" pos:end="193:56"><expr pos:start="193:47" pos:end="193:55"><name pos:start="193:47" pos:end="193:50">ttmb</name> <operator pos:start="193:52" pos:end="193:52">=</operator> <operator pos:start="193:54" pos:end="193:54">-</operator><literal type="number" pos:start="193:55" pos:end="193:55">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:36"><expr pos:start="195:21" pos:end="195:35"><name pos:start="195:21" pos:end="195:31">first_block</name> <operator pos:start="195:33" pos:end="195:33">=</operator> <literal type="number" pos:start="195:35" pos:end="195:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:113"><expr pos:start="197:21" pos:end="197:112"><call pos:start="197:21" pos:end="197:112"><name pos:start="197:21" pos:end="197:45"><name pos:start="197:21" pos:end="197:21">s</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:26">dsp</name><operator pos:start="197:27" pos:end="197:27">.</operator><name pos:start="197:28" pos:end="197:45">add_pixels_clamped</name></name><argument_list pos:start="197:46" pos:end="197:112">(<argument pos:start="197:47" pos:end="197:54"><expr pos:start="197:47" pos:end="197:54"><name pos:start="197:47" pos:end="197:54"><name pos:start="197:47" pos:end="197:51">block</name><index pos:start="197:52" pos:end="197:54">[<expr pos:start="197:53" pos:end="197:53"><name pos:start="197:53" pos:end="197:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="197:57" pos:end="197:78"><expr pos:start="197:57" pos:end="197:78"><name pos:start="197:57" pos:end="197:72"><name pos:start="197:57" pos:end="197:57">s</name><operator pos:start="197:58" pos:end="197:59">-&gt;</operator><name pos:start="197:60" pos:end="197:63">dest</name><index pos:start="197:64" pos:end="197:72">[<expr pos:start="197:65" pos:end="197:71"><name pos:start="197:65" pos:end="197:71">dst_idx</name></expr>]</index></name> <operator pos:start="197:74" pos:end="197:74">+</operator> <name pos:start="197:76" pos:end="197:78">off</name></expr></argument>, <argument pos:start="197:81" pos:end="197:111"><expr pos:start="197:81" pos:end="197:111"><ternary pos:start="197:81" pos:end="197:111"><condition pos:start="197:81" pos:end="197:86"><expr pos:start="197:81" pos:end="197:85"><operator pos:start="197:81" pos:end="197:81">(</operator><name pos:start="197:82" pos:end="197:82">i</name><operator pos:start="197:83" pos:end="197:83">&amp;</operator><literal type="number" pos:start="197:84" pos:end="197:84">4</literal><operator pos:start="197:85" pos:end="197:85">)</operator></expr>?</condition><then pos:start="197:87" pos:end="197:99"><expr pos:start="197:87" pos:end="197:99"><name pos:start="197:87" pos:end="197:99"><name pos:start="197:87" pos:end="197:87">s</name><operator pos:start="197:88" pos:end="197:89">-&gt;</operator><name pos:start="197:90" pos:end="197:99">uvlinesize</name></name></expr></then><else pos:start="197:100" pos:end="197:111">:<expr pos:start="197:101" pos:end="197:111"><name pos:start="197:101" pos:end="197:111"><name pos:start="197:101" pos:end="197:101">s</name><operator pos:start="197:102" pos:end="197:103">-&gt;</operator><name pos:start="197:104" pos:end="197:111">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if>

        <else pos:start="205:9" pos:end="223:9">else <comment type="line" pos:start="205:14" pos:end="205:22">//Skipped</comment>

        <block pos:start="207:9" pos:end="223:9">{<block_content pos:start="209:13" pos:end="221:21">

            <expr_stmt pos:start="209:13" pos:end="209:28"><expr pos:start="209:13" pos:end="209:27"><name pos:start="209:13" pos:end="209:23"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:23">mb_intra</name></name> <operator pos:start="209:25" pos:end="209:25">=</operator> <literal type="number" pos:start="209:27" pos:end="209:27">0</literal></expr>;</expr_stmt>

            <for pos:start="211:13" pos:end="211:72">for<control pos:start="211:16" pos:end="211:34">(<init pos:start="211:17" pos:end="211:22"><expr pos:start="211:17" pos:end="211:21"><name pos:start="211:17" pos:end="211:17">i</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <literal type="number" pos:start="211:21" pos:end="211:21">0</literal></expr>;</init> <condition pos:start="211:24" pos:end="211:29"><expr pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:24">i</name> <operator pos:start="211:26" pos:end="211:26">&lt;</operator> <literal type="number" pos:start="211:28" pos:end="211:28">6</literal></expr>;</condition> <incr pos:start="211:31" pos:end="211:33"><expr pos:start="211:31" pos:end="211:33"><name pos:start="211:31" pos:end="211:31">i</name><operator pos:start="211:32" pos:end="211:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:36" pos:end="211:72"><block_content pos:start="211:36" pos:end="211:72"> <expr_stmt pos:start="211:36" pos:end="211:72"><expr pos:start="211:36" pos:end="211:71"><name pos:start="211:36" pos:end="211:67"><name pos:start="211:36" pos:end="211:36">v</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:45">mb_type</name><index pos:start="211:46" pos:end="211:48">[<expr pos:start="211:47" pos:end="211:47"><literal type="number" pos:start="211:47" pos:end="211:47">0</literal></expr>]</index><index pos:start="211:49" pos:end="211:67">[<expr pos:start="211:50" pos:end="211:66"><name pos:start="211:50" pos:end="211:66"><name pos:start="211:50" pos:end="211:50">s</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:63">block_index</name><index pos:start="211:64" pos:end="211:66">[<expr pos:start="211:65" pos:end="211:65"><name pos:start="211:65" pos:end="211:65">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="211:69" pos:end="211:69">=</operator> <literal type="number" pos:start="211:71" pos:end="211:71">0</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="213:13" pos:end="213:62"><expr pos:start="213:13" pos:end="213:61"><name pos:start="213:13" pos:end="213:46"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:30">current_picture</name><operator pos:start="213:31" pos:end="213:31">.</operator><name pos:start="213:32" pos:end="213:38">mb_type</name><index pos:start="213:39" pos:end="213:46">[<expr pos:start="213:40" pos:end="213:45"><name pos:start="213:40" pos:end="213:45">mb_pos</name></expr>]</index></name> <operator pos:start="213:48" pos:end="213:48">=</operator> <name pos:start="213:50" pos:end="213:61">MB_TYPE_SKIP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:56"><expr pos:start="215:13" pos:end="215:55"><name pos:start="215:13" pos:end="215:51"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:30">current_picture</name><operator pos:start="215:31" pos:end="215:31">.</operator><name pos:start="215:32" pos:end="215:43">qscale_table</name><index pos:start="215:44" pos:end="215:51">[<expr pos:start="215:45" pos:end="215:50"><name pos:start="215:45" pos:end="215:50">mb_pos</name></expr>]</index></name> <operator pos:start="215:53" pos:end="215:53">=</operator> <literal type="number" pos:start="215:55" pos:end="215:55">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:78"><expr pos:start="217:13" pos:end="217:77"><call pos:start="217:13" pos:end="217:77"><name pos:start="217:13" pos:end="217:23">vc1_pred_mv</name><argument_list pos:start="217:24" pos:end="217:77">(<argument pos:start="217:25" pos:end="217:25"><expr pos:start="217:25" pos:end="217:25"><name pos:start="217:25" pos:end="217:25">s</name></expr></argument>, <argument pos:start="217:28" pos:end="217:28"><expr pos:start="217:28" pos:end="217:28"><literal type="number" pos:start="217:28" pos:end="217:28">0</literal></expr></argument>, <argument pos:start="217:31" pos:end="217:31"><expr pos:start="217:31" pos:end="217:31"><literal type="number" pos:start="217:31" pos:end="217:31">0</literal></expr></argument>, <argument pos:start="217:34" pos:end="217:34"><expr pos:start="217:34" pos:end="217:34"><literal type="number" pos:start="217:34" pos:end="217:34">0</literal></expr></argument>, <argument pos:start="217:37" pos:end="217:37"><expr pos:start="217:37" pos:end="217:37"><literal type="number" pos:start="217:37" pos:end="217:37">1</literal></expr></argument>, <argument pos:start="217:40" pos:end="217:49"><expr pos:start="217:40" pos:end="217:49"><name pos:start="217:40" pos:end="217:49"><name pos:start="217:40" pos:end="217:40">v</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:49">range_x</name></name></expr></argument>, <argument pos:start="217:52" pos:end="217:61"><expr pos:start="217:52" pos:end="217:61"><name pos:start="217:52" pos:end="217:61"><name pos:start="217:52" pos:end="217:52">v</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:61">range_y</name></name></expr></argument>, <argument pos:start="217:64" pos:end="217:76"><expr pos:start="217:64" pos:end="217:76"><name pos:start="217:64" pos:end="217:76"><name pos:start="217:64" pos:end="217:64">v</name><operator pos:start="217:65" pos:end="217:66">-&gt;</operator><name pos:start="217:67" pos:end="217:73">mb_type</name><index pos:start="217:74" pos:end="217:76">[<expr pos:start="217:75" pos:end="217:75"><literal type="number" pos:start="217:75" pos:end="217:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:26"><expr pos:start="219:13" pos:end="219:25"><call pos:start="219:13" pos:end="219:25"><name pos:start="219:13" pos:end="219:22">vc1_mc_1mv</name><argument_list pos:start="219:23" pos:end="219:25">(<argument pos:start="219:24" pos:end="219:24"><expr pos:start="219:24" pos:end="219:24"><name pos:start="219:24" pos:end="219:24">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="221:13" pos:end="221:21">return <expr pos:start="221:20" pos:end="221:20"><literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <comment type="line" pos:start="225:7" pos:end="225:16">//1MV mode</comment>

    <else pos:start="227:5" pos:end="423:5">else <comment type="line" pos:start="227:10" pos:end="227:19">//4MV mode</comment>

    <block pos:start="229:5" pos:end="423:5">{<block_content pos:start="231:9" pos:end="421:9">

        <if_stmt pos:start="231:9" pos:end="421:9"><if pos:start="231:9" pos:end="395:9">if <condition pos:start="231:12" pos:end="231:40">(<expr pos:start="231:13" pos:end="231:20"><operator pos:start="231:13" pos:end="231:13">!</operator><name pos:start="231:14" pos:end="231:20">skipped</name></expr> <comment type="block" pos:start="231:22" pos:end="231:39">/* unskipped MB */</comment>)</condition>

        <block pos:start="233:9" pos:end="395:9">{<block_content pos:start="235:13" pos:end="393:26">

            <decl_stmt pos:start="235:13" pos:end="235:49"><decl pos:start="235:13" pos:end="235:31"><type pos:start="235:13" pos:end="235:15"><name pos:start="235:13" pos:end="235:15">int</name></type> <name pos:start="235:17" pos:end="235:27">intra_count</name> <init pos:start="235:29" pos:end="235:31">= <expr pos:start="235:31" pos:end="235:31"><literal type="number" pos:start="235:31" pos:end="235:31">0</literal></expr></init></decl>, <decl pos:start="235:34" pos:end="235:48"><type ref="prev" pos:start="235:13" pos:end="235:15"/><name pos:start="235:34" pos:end="235:44">coded_inter</name> <init pos:start="235:46" pos:end="235:48">= <expr pos:start="235:48" pos:end="235:48"><literal type="number" pos:start="235:48" pos:end="235:48">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="237:13" pos:end="237:41"><decl pos:start="237:13" pos:end="237:27"><type pos:start="237:13" pos:end="237:15"><name pos:start="237:13" pos:end="237:15">int</name></type> <name pos:start="237:17" pos:end="237:27"><name pos:start="237:17" pos:end="237:24">is_intra</name><index pos:start="237:25" pos:end="237:27">[<expr pos:start="237:26" pos:end="237:26"><literal type="number" pos:start="237:26" pos:end="237:26">6</literal></expr>]</index></name></decl>, <decl pos:start="237:30" pos:end="237:40"><type ref="prev" pos:start="237:13" pos:end="237:15"/><name pos:start="237:30" pos:end="237:40"><name pos:start="237:30" pos:end="237:37">is_coded</name><index pos:start="237:38" pos:end="237:40">[<expr pos:start="237:39" pos:end="237:39"><literal type="number" pos:start="237:39" pos:end="237:39">6</literal></expr>]</index></name></decl>;</decl_stmt>

            <comment type="block" pos:start="239:13" pos:end="239:27">/* Get CBPCY */</comment>

            <expr_stmt pos:start="241:13" pos:end="241:83"><expr pos:start="241:13" pos:end="241:82"><name pos:start="241:13" pos:end="241:15">cbp</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:82"><name pos:start="241:19" pos:end="241:26">get_vlc2</name><argument_list pos:start="241:27" pos:end="241:82">(<argument pos:start="241:28" pos:end="241:35"><expr pos:start="241:28" pos:end="241:35"><operator pos:start="241:28" pos:end="241:28">&amp;</operator><name pos:start="241:29" pos:end="241:35"><name pos:start="241:29" pos:end="241:29">v</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:32">s</name><operator pos:start="241:33" pos:end="241:33">.</operator><name pos:start="241:34" pos:end="241:35">gb</name></name></expr></argument>, <argument pos:start="241:38" pos:end="241:56"><expr pos:start="241:38" pos:end="241:56"><name pos:start="241:38" pos:end="241:56"><name pos:start="241:38" pos:end="241:38">v</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:49">cbpcy_vlc</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:56">table</name></name></expr></argument>, <argument pos:start="241:59" pos:end="241:78"><expr pos:start="241:59" pos:end="241:78"><name pos:start="241:59" pos:end="241:78">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="241:81" pos:end="241:81"><expr pos:start="241:81" pos:end="241:81"><literal type="number" pos:start="241:81" pos:end="241:81">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="243:13" pos:end="293:13">for <control pos:start="243:17" pos:end="243:31">(<init pos:start="243:18" pos:end="243:21"><expr pos:start="243:18" pos:end="243:20"><name pos:start="243:18" pos:end="243:18">i</name><operator pos:start="243:19" pos:end="243:19">=</operator><literal type="number" pos:start="243:20" pos:end="243:20">0</literal></expr>;</init> <condition pos:start="243:23" pos:end="243:26"><expr pos:start="243:23" pos:end="243:25"><name pos:start="243:23" pos:end="243:23">i</name><operator pos:start="243:24" pos:end="243:24">&lt;</operator><literal type="number" pos:start="243:25" pos:end="243:25">6</literal></expr>;</condition> <incr pos:start="243:28" pos:end="243:30"><expr pos:start="243:28" pos:end="243:30"><name pos:start="243:28" pos:end="243:28">i</name><operator pos:start="243:29" pos:end="243:30">++</operator></expr></incr>)</control>

            <block pos:start="245:13" pos:end="293:13">{<block_content pos:start="247:17" pos:end="291:74">

                <expr_stmt pos:start="247:17" pos:end="247:45"><expr pos:start="247:17" pos:end="247:44"><name pos:start="247:17" pos:end="247:19">val</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <operator pos:start="247:23" pos:end="247:23">(</operator><operator pos:start="247:24" pos:end="247:24">(</operator><name pos:start="247:25" pos:end="247:27">cbp</name> <operator pos:start="247:29" pos:end="247:30">&gt;&gt;</operator> <operator pos:start="247:32" pos:end="247:32">(</operator><literal type="number" pos:start="247:33" pos:end="247:35">5</literal> <operator pos:start="247:35" pos:end="247:35">-</operator> <name pos:start="247:37" pos:end="247:37">i</name><operator pos:start="247:38" pos:end="247:38">)</operator><operator pos:start="247:39" pos:end="247:39">)</operator> <operator pos:start="247:41" pos:end="247:41">&amp;</operator> <literal type="number" pos:start="247:43" pos:end="247:43">1</literal><operator pos:start="247:44" pos:end="247:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:52"><expr pos:start="249:17" pos:end="249:51"><name pos:start="249:17" pos:end="249:47"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:25">dc_val</name><index pos:start="249:26" pos:end="249:28">[<expr pos:start="249:27" pos:end="249:27"><literal type="number" pos:start="249:27" pos:end="249:27">0</literal></expr>]</index><index pos:start="249:29" pos:end="249:47">[<expr pos:start="249:30" pos:end="249:46"><name pos:start="249:30" pos:end="249:46"><name pos:start="249:30" pos:end="249:30">s</name><operator pos:start="249:31" pos:end="249:32">-&gt;</operator><name pos:start="249:33" pos:end="249:43">block_index</name><index pos:start="249:44" pos:end="249:46">[<expr pos:start="249:45" pos:end="249:45"><name pos:start="249:45" pos:end="249:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="249:49" pos:end="249:49">=</operator> <literal type="number" pos:start="249:51" pos:end="249:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:32"><expr pos:start="251:17" pos:end="251:31"><name pos:start="251:17" pos:end="251:27"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:27">mb_intra</name></name> <operator pos:start="251:29" pos:end="251:29">=</operator> <literal type="number" pos:start="251:31" pos:end="251:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="253:17" pos:end="277:17"><if pos:start="253:17" pos:end="277:17">if<condition pos:start="253:19" pos:end="253:25">(<expr pos:start="253:20" pos:end="253:24"><name pos:start="253:20" pos:end="253:20">i</name> <operator pos:start="253:22" pos:end="253:22">&lt;</operator> <literal type="number" pos:start="253:24" pos:end="253:24">4</literal></expr>)</condition> <block pos:start="253:27" pos:end="277:17">{<block_content pos:start="255:21" pos:end="275:48">

                    <expr_stmt pos:start="255:21" pos:end="255:38"><expr pos:start="255:21" pos:end="255:37"><name pos:start="255:21" pos:end="255:25">dmv_x</name> <operator pos:start="255:27" pos:end="255:27">=</operator> <name pos:start="255:29" pos:end="255:33">dmv_y</name> <operator pos:start="255:35" pos:end="255:35">=</operator> <literal type="number" pos:start="255:37" pos:end="255:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:36"><expr pos:start="257:21" pos:end="257:35"><name pos:start="257:21" pos:end="257:31"><name pos:start="257:21" pos:end="257:21">s</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:31">mb_intra</name></name> <operator pos:start="257:33" pos:end="257:33">=</operator> <literal type="number" pos:start="257:35" pos:end="257:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:38"><expr pos:start="259:21" pos:end="259:37"><name pos:start="259:21" pos:end="259:33">mb_has_coeffs</name> <operator pos:start="259:35" pos:end="259:35">=</operator> <literal type="number" pos:start="259:37" pos:end="259:37">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="261:21" pos:end="265:21"><if pos:start="261:21" pos:end="265:21">if<condition pos:start="261:23" pos:end="261:27">(<expr pos:start="261:24" pos:end="261:26"><name pos:start="261:24" pos:end="261:26">val</name></expr>)</condition> <block pos:start="261:29" pos:end="265:21">{<block_content pos:start="263:25" pos:end="263:49">

                        <expr_stmt pos:start="263:25" pos:end="263:49"><expr pos:start="263:25" pos:end="263:48"><call pos:start="263:25" pos:end="263:48"><name pos:start="263:25" pos:end="263:34">GET_MVDATA</name><argument_list pos:start="263:35" pos:end="263:48">(<argument pos:start="263:36" pos:end="263:40"><expr pos:start="263:36" pos:end="263:40"><name pos:start="263:36" pos:end="263:40">dmv_x</name></expr></argument>, <argument pos:start="263:43" pos:end="263:47"><expr pos:start="263:43" pos:end="263:47"><name pos:start="263:43" pos:end="263:47">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:94"><expr pos:start="267:21" pos:end="267:93"><call pos:start="267:21" pos:end="267:93"><name pos:start="267:21" pos:end="267:31">vc1_pred_mv</name><argument_list pos:start="267:32" pos:end="267:93">(<argument pos:start="267:33" pos:end="267:33"><expr pos:start="267:33" pos:end="267:33"><name pos:start="267:33" pos:end="267:33">s</name></expr></argument>, <argument pos:start="267:36" pos:end="267:36"><expr pos:start="267:36" pos:end="267:36"><name pos:start="267:36" pos:end="267:36">i</name></expr></argument>, <argument pos:start="267:39" pos:end="267:43"><expr pos:start="267:39" pos:end="267:43"><name pos:start="267:39" pos:end="267:43">dmv_x</name></expr></argument>, <argument pos:start="267:46" pos:end="267:50"><expr pos:start="267:46" pos:end="267:50"><name pos:start="267:46" pos:end="267:50">dmv_y</name></expr></argument>, <argument pos:start="267:53" pos:end="267:53"><expr pos:start="267:53" pos:end="267:53"><literal type="number" pos:start="267:53" pos:end="267:53">0</literal></expr></argument>, <argument pos:start="267:56" pos:end="267:65"><expr pos:start="267:56" pos:end="267:65"><name pos:start="267:56" pos:end="267:65"><name pos:start="267:56" pos:end="267:56">v</name><operator pos:start="267:57" pos:end="267:58">-&gt;</operator><name pos:start="267:59" pos:end="267:65">range_x</name></name></expr></argument>, <argument pos:start="267:68" pos:end="267:77"><expr pos:start="267:68" pos:end="267:77"><name pos:start="267:68" pos:end="267:77"><name pos:start="267:68" pos:end="267:68">v</name><operator pos:start="267:69" pos:end="267:70">-&gt;</operator><name pos:start="267:71" pos:end="267:77">range_y</name></name></expr></argument>, <argument pos:start="267:80" pos:end="267:92"><expr pos:start="267:80" pos:end="267:92"><name pos:start="267:80" pos:end="267:92"><name pos:start="267:80" pos:end="267:80">v</name><operator pos:start="267:81" pos:end="267:82">-&gt;</operator><name pos:start="267:83" pos:end="267:89">mb_type</name><index pos:start="267:90" pos:end="267:92">[<expr pos:start="267:91" pos:end="267:91"><literal type="number" pos:start="267:91" pos:end="267:91">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="269:21" pos:end="269:59"><if pos:start="269:21" pos:end="269:59">if<condition pos:start="269:23" pos:end="269:36">(<expr pos:start="269:24" pos:end="269:35"><operator pos:start="269:24" pos:end="269:24">!</operator><name pos:start="269:25" pos:end="269:35"><name pos:start="269:25" pos:end="269:25">s</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:35">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="269:38" pos:end="269:59"><block_content pos:start="269:38" pos:end="269:59"> <expr_stmt pos:start="269:38" pos:end="269:59"><expr pos:start="269:38" pos:end="269:58"><call pos:start="269:38" pos:end="269:58"><name pos:start="269:38" pos:end="269:52">vc1_mc_4mv_luma</name><argument_list pos:start="269:53" pos:end="269:58">(<argument pos:start="269:54" pos:end="269:54"><expr pos:start="269:54" pos:end="269:54"><name pos:start="269:54" pos:end="269:54">v</name></expr></argument>, <argument pos:start="269:57" pos:end="269:57"><expr pos:start="269:57" pos:end="269:57"><name pos:start="269:57" pos:end="269:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="271:21" pos:end="271:47"><expr pos:start="271:21" pos:end="271:46"><name pos:start="271:21" pos:end="271:31">intra_count</name> <operator pos:start="271:33" pos:end="271:34">+=</operator> <name pos:start="271:36" pos:end="271:46"><name pos:start="271:36" pos:end="271:36">s</name><operator pos:start="271:37" pos:end="271:38">-&gt;</operator><name pos:start="271:39" pos:end="271:46">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="273:21" pos:end="273:46"><expr pos:start="273:21" pos:end="273:45"><name pos:start="273:21" pos:end="273:31"><name pos:start="273:21" pos:end="273:28">is_intra</name><index pos:start="273:29" pos:end="273:31">[<expr pos:start="273:30" pos:end="273:30"><name pos:start="273:30" pos:end="273:30">i</name></expr>]</index></name> <operator pos:start="273:33" pos:end="273:33">=</operator> <name pos:start="273:35" pos:end="273:45"><name pos:start="273:35" pos:end="273:35">s</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:45">mb_intra</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:48"><expr pos:start="275:21" pos:end="275:47"><name pos:start="275:21" pos:end="275:31"><name pos:start="275:21" pos:end="275:28">is_coded</name><index pos:start="275:29" pos:end="275:31">[<expr pos:start="275:30" pos:end="275:30"><name pos:start="275:30" pos:end="275:30">i</name></expr>]</index></name> <operator pos:start="275:33" pos:end="275:33">=</operator> <name pos:start="275:35" pos:end="275:47">mb_has_coeffs</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="279:17" pos:end="285:17"><if pos:start="279:17" pos:end="285:17">if<condition pos:start="279:19" pos:end="279:23">(<expr pos:start="279:20" pos:end="279:22"><name pos:start="279:20" pos:end="279:20">i</name><operator pos:start="279:21" pos:end="279:21">&amp;</operator><literal type="number" pos:start="279:22" pos:end="279:22">4</literal></expr>)</condition><block pos:start="279:24" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:38">

                    <expr_stmt pos:start="281:21" pos:end="281:53"><expr pos:start="281:21" pos:end="281:52"><name pos:start="281:21" pos:end="281:31"><name pos:start="281:21" pos:end="281:28">is_intra</name><index pos:start="281:29" pos:end="281:31">[<expr pos:start="281:30" pos:end="281:30"><name pos:start="281:30" pos:end="281:30">i</name></expr>]</index></name> <operator pos:start="281:33" pos:end="281:33">=</operator> <operator pos:start="281:35" pos:end="281:35">(</operator><name pos:start="281:36" pos:end="281:46">intra_count</name> <operator pos:start="281:48" pos:end="281:49">&gt;=</operator> <literal type="number" pos:start="281:51" pos:end="281:51">3</literal><operator pos:start="281:52" pos:end="281:52">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:38"><expr pos:start="283:21" pos:end="283:37"><name pos:start="283:21" pos:end="283:31"><name pos:start="283:21" pos:end="283:28">is_coded</name><index pos:start="283:29" pos:end="283:31">[<expr pos:start="283:30" pos:end="283:30"><name pos:start="283:30" pos:end="283:30">i</name></expr>]</index></name> <operator pos:start="283:33" pos:end="283:33">=</operator> <name pos:start="283:35" pos:end="283:37">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="287:17" pos:end="287:48"><if pos:start="287:17" pos:end="287:48">if<condition pos:start="287:19" pos:end="287:26">(<expr pos:start="287:20" pos:end="287:25"><name pos:start="287:20" pos:end="287:20">i</name> <operator pos:start="287:22" pos:end="287:23">==</operator> <literal type="number" pos:start="287:25" pos:end="287:25">4</literal></expr>)</condition><block type="pseudo" pos:start="287:28" pos:end="287:48"><block_content pos:start="287:28" pos:end="287:48"> <expr_stmt pos:start="287:28" pos:end="287:48"><expr pos:start="287:28" pos:end="287:47"><call pos:start="287:28" pos:end="287:47"><name pos:start="287:28" pos:end="287:44">vc1_mc_4mv_chroma</name><argument_list pos:start="287:45" pos:end="287:47">(<argument pos:start="287:46" pos:end="287:46"><expr pos:start="287:46" pos:end="287:46"><name pos:start="287:46" pos:end="287:46">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:63"><expr pos:start="289:17" pos:end="289:62"><name pos:start="289:17" pos:end="289:48"><name pos:start="289:17" pos:end="289:17">v</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:26">mb_type</name><index pos:start="289:27" pos:end="289:29">[<expr pos:start="289:28" pos:end="289:28"><literal type="number" pos:start="289:28" pos:end="289:28">0</literal></expr>]</index><index pos:start="289:30" pos:end="289:48">[<expr pos:start="289:31" pos:end="289:47"><name pos:start="289:31" pos:end="289:47"><name pos:start="289:31" pos:end="289:31">s</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:44">block_index</name><index pos:start="289:45" pos:end="289:47">[<expr pos:start="289:46" pos:end="289:46"><name pos:start="289:46" pos:end="289:46">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="289:50" pos:end="289:50">=</operator> <name pos:start="289:52" pos:end="289:62"><name pos:start="289:52" pos:end="289:59">is_intra</name><index pos:start="289:60" pos:end="289:62">[<expr pos:start="289:61" pos:end="289:61"><name pos:start="289:61" pos:end="289:61">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="291:74"><if pos:start="291:17" pos:end="291:74">if<condition pos:start="291:19" pos:end="291:32">(<expr pos:start="291:20" pos:end="291:31"><operator pos:start="291:20" pos:end="291:20">!</operator><name pos:start="291:21" pos:end="291:31">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="291:34" pos:end="291:74"><block_content pos:start="291:34" pos:end="291:74"> <expr_stmt pos:start="291:34" pos:end="291:74"><expr pos:start="291:34" pos:end="291:73"><name pos:start="291:34" pos:end="291:44">coded_inter</name> <operator pos:start="291:46" pos:end="291:46">=</operator> <operator pos:start="291:48" pos:end="291:48">!</operator><name pos:start="291:49" pos:end="291:59"><name pos:start="291:49" pos:end="291:56">is_intra</name><index pos:start="291:57" pos:end="291:59">[<expr pos:start="291:58" pos:end="291:58"><name pos:start="291:58" pos:end="291:58">i</name></expr>]</index></name> <operator pos:start="291:61" pos:end="291:61">&amp;</operator> <name pos:start="291:63" pos:end="291:73"><name pos:start="291:63" pos:end="291:70">is_coded</name><index pos:start="291:71" pos:end="291:73">[<expr pos:start="291:72" pos:end="291:72"><name pos:start="291:72" pos:end="291:72">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="295:13" pos:end="295:24"><expr pos:start="295:13" pos:end="295:23"><name pos:start="295:13" pos:end="295:19">dst_idx</name> <operator pos:start="295:21" pos:end="295:21">=</operator> <literal type="number" pos:start="295:23" pos:end="295:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:25"><expr pos:start="297:13" pos:end="297:24"><call pos:start="297:13" pos:end="297:24"><name pos:start="297:13" pos:end="297:22">GET_MQUANT</name><argument_list pos:start="297:23" pos:end="297:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:61"><expr pos:start="299:13" pos:end="299:60"><name pos:start="299:13" pos:end="299:51"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:30">current_picture</name><operator pos:start="299:31" pos:end="299:31">.</operator><name pos:start="299:32" pos:end="299:43">qscale_table</name><index pos:start="299:44" pos:end="299:51">[<expr pos:start="299:45" pos:end="299:50"><name pos:start="299:45" pos:end="299:50">mb_pos</name></expr>]</index></name> <operator pos:start="299:53" pos:end="299:53">=</operator> <name pos:start="299:55" pos:end="299:60">mquant</name></expr>;</expr_stmt>

            <comment type="block" pos:start="301:13" pos:end="301:53">/* test if block is intra and has pred */</comment>

            <block pos:start="303:13" pos:end="325:13">{<block_content pos:start="305:17" pos:end="323:36">

                <decl_stmt pos:start="305:17" pos:end="305:34"><decl pos:start="305:17" pos:end="305:33"><type pos:start="305:17" pos:end="305:19"><name pos:start="305:17" pos:end="305:19">int</name></type> <name pos:start="305:21" pos:end="305:29">intrapred</name> <init pos:start="305:31" pos:end="305:33">= <expr pos:start="305:33" pos:end="305:33"><literal type="number" pos:start="305:33" pos:end="305:33">0</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="307:17" pos:end="319:21">for<control pos:start="307:20" pos:end="307:34">(<init pos:start="307:21" pos:end="307:24"><expr pos:start="307:21" pos:end="307:23"><name pos:start="307:21" pos:end="307:21">i</name><operator pos:start="307:22" pos:end="307:22">=</operator><literal type="number" pos:start="307:23" pos:end="307:23">0</literal></expr>;</init> <condition pos:start="307:26" pos:end="307:29"><expr pos:start="307:26" pos:end="307:28"><name pos:start="307:26" pos:end="307:26">i</name><operator pos:start="307:27" pos:end="307:27">&lt;</operator><literal type="number" pos:start="307:28" pos:end="307:28">6</literal></expr>;</condition> <incr pos:start="307:31" pos:end="307:33"><expr pos:start="307:31" pos:end="307:33"><name pos:start="307:31" pos:end="307:31">i</name><operator pos:start="307:32" pos:end="307:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="309:21" pos:end="319:21"><block_content pos:start="309:21" pos:end="319:21">

                    <if_stmt pos:start="309:21" pos:end="319:21"><if pos:start="309:21" pos:end="319:21">if<condition pos:start="309:23" pos:end="309:35">(<expr pos:start="309:24" pos:end="309:34"><name pos:start="309:24" pos:end="309:34"><name pos:start="309:24" pos:end="309:31">is_intra</name><index pos:start="309:32" pos:end="309:34">[<expr pos:start="309:33" pos:end="309:33"><name pos:start="309:33" pos:end="309:33">i</name></expr>]</index></name></expr>)</condition> <block pos:start="309:37" pos:end="319:21">{<block_content pos:start="311:25" pos:end="317:25">

                        <if_stmt pos:start="311:25" pos:end="317:25"><if pos:start="311:25" pos:end="317:25">if<condition pos:start="311:27" pos:end="311:119">(<expr pos:start="311:28" pos:end="311:118"><name pos:start="311:28" pos:end="311:78"><name pos:start="311:28" pos:end="311:28">v</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:37">mb_type</name><index pos:start="311:38" pos:end="311:40">[<expr pos:start="311:39" pos:end="311:39"><literal type="number" pos:start="311:39" pos:end="311:39">0</literal></expr>]</index><index pos:start="311:41" pos:end="311:78">[<expr pos:start="311:42" pos:end="311:77"><name pos:start="311:42" pos:end="311:58"><name pos:start="311:42" pos:end="311:42">s</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:55">block_index</name><index pos:start="311:56" pos:end="311:58">[<expr pos:start="311:57" pos:end="311:57"><name pos:start="311:57" pos:end="311:57">i</name></expr>]</index></name> <operator pos:start="311:60" pos:end="311:60">-</operator> <name pos:start="311:62" pos:end="311:77"><name pos:start="311:62" pos:end="311:62">s</name><operator pos:start="311:63" pos:end="311:64">-&gt;</operator><name pos:start="311:65" pos:end="311:74">block_wrap</name><index pos:start="311:75" pos:end="311:77">[<expr pos:start="311:76" pos:end="311:76"><name pos:start="311:76" pos:end="311:76">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="311:80" pos:end="311:81">||</operator> <name pos:start="311:83" pos:end="311:118"><name pos:start="311:83" pos:end="311:83">v</name><operator pos:start="311:84" pos:end="311:85">-&gt;</operator><name pos:start="311:86" pos:end="311:92">mb_type</name><index pos:start="311:93" pos:end="311:95">[<expr pos:start="311:94" pos:end="311:94"><literal type="number" pos:start="311:94" pos:end="311:94">0</literal></expr>]</index><index pos:start="311:96" pos:end="311:118">[<expr pos:start="311:97" pos:end="311:117"><name pos:start="311:97" pos:end="311:113"><name pos:start="311:97" pos:end="311:97">s</name><operator pos:start="311:98" pos:end="311:99">-&gt;</operator><name pos:start="311:100" pos:end="311:110">block_index</name><index pos:start="311:111" pos:end="311:113">[<expr pos:start="311:112" pos:end="311:112"><name pos:start="311:112" pos:end="311:112">i</name></expr>]</index></name> <operator pos:start="311:115" pos:end="311:115">-</operator> <literal type="number" pos:start="311:117" pos:end="311:117">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="311:121" pos:end="317:25">{<block_content pos:start="313:29" pos:end="315:34">

                            <expr_stmt pos:start="313:29" pos:end="313:42"><expr pos:start="313:29" pos:end="313:41"><name pos:start="313:29" pos:end="313:37">intrapred</name> <operator pos:start="313:39" pos:end="313:39">=</operator> <literal type="number" pos:start="313:41" pos:end="313:41">1</literal></expr>;</expr_stmt>

                            <break pos:start="315:29" pos:end="315:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <if_stmt pos:start="321:17" pos:end="323:36"><if pos:start="321:17" pos:end="321:58">if<condition pos:start="321:19" pos:end="321:29">(<expr pos:start="321:20" pos:end="321:28"><name pos:start="321:20" pos:end="321:28">intrapred</name></expr>)</condition><block type="pseudo" pos:start="321:30" pos:end="321:58"><block_content pos:start="321:30" pos:end="321:58"><expr_stmt pos:start="321:30" pos:end="321:58"><expr pos:start="321:30" pos:end="321:57"><name pos:start="321:30" pos:end="321:39"><name pos:start="321:30" pos:end="321:30">s</name><operator pos:start="321:31" pos:end="321:32">-&gt;</operator><name pos:start="321:33" pos:end="321:39">ac_pred</name></name> <operator pos:start="321:41" pos:end="321:41">=</operator> <call pos:start="321:43" pos:end="321:57"><name pos:start="321:43" pos:end="321:50">get_bits</name><argument_list pos:start="321:51" pos:end="321:57">(<argument pos:start="321:52" pos:end="321:53"><expr pos:start="321:52" pos:end="321:53"><name pos:start="321:52" pos:end="321:53">gb</name></expr></argument>, <argument pos:start="321:56" pos:end="321:56"><expr pos:start="321:56" pos:end="321:56"><literal type="number" pos:start="321:56" pos:end="321:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="323:17" pos:end="323:36">else<block type="pseudo" pos:start="323:22" pos:end="323:36"><block_content pos:start="323:22" pos:end="323:36"> <expr_stmt pos:start="323:22" pos:end="323:36"><expr pos:start="323:22" pos:end="323:35"><name pos:start="323:22" pos:end="323:31"><name pos:start="323:22" pos:end="323:22">s</name><operator pos:start="323:23" pos:end="323:24">-&gt;</operator><name pos:start="323:25" pos:end="323:31">ac_pred</name></name> <operator pos:start="323:33" pos:end="323:33">=</operator> <literal type="number" pos:start="323:35" pos:end="323:35">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="327:13" pos:end="329:92"><if pos:start="327:13" pos:end="329:92">if <condition pos:start="327:16" pos:end="327:41">(<expr pos:start="327:17" pos:end="327:40"><operator pos:start="327:17" pos:end="327:17">!</operator><name pos:start="327:18" pos:end="327:25"><name pos:start="327:18" pos:end="327:18">v</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:25">ttmbf</name></name> <operator pos:start="327:27" pos:end="327:28">&amp;&amp;</operator> <name pos:start="327:30" pos:end="327:40">coded_inter</name></expr>)</condition><block type="pseudo" pos:start="329:17" pos:end="329:92"><block_content pos:start="329:17" pos:end="329:92">

                <expr_stmt pos:start="329:17" pos:end="329:92"><expr pos:start="329:17" pos:end="329:91"><name pos:start="329:17" pos:end="329:20">ttmb</name> <operator pos:start="329:22" pos:end="329:22">=</operator> <call pos:start="329:24" pos:end="329:91"><name pos:start="329:24" pos:end="329:31">get_vlc2</name><argument_list pos:start="329:32" pos:end="329:91">(<argument pos:start="329:33" pos:end="329:34"><expr pos:start="329:33" pos:end="329:34"><name pos:start="329:33" pos:end="329:34">gb</name></expr></argument>, <argument pos:start="329:37" pos:end="329:67"><expr pos:start="329:37" pos:end="329:67"><name pos:start="329:37" pos:end="329:61"><name pos:start="329:37" pos:end="329:48">vc1_ttmb_vlc</name><index pos:start="329:49" pos:end="329:61">[<expr pos:start="329:50" pos:end="329:60"><name pos:start="329:50" pos:end="329:60"><name pos:start="329:50" pos:end="329:50">v</name><operator pos:start="329:51" pos:end="329:52">-&gt;</operator><name pos:start="329:53" pos:end="329:60">tt_index</name></name></expr>]</index></name><operator pos:start="329:62" pos:end="329:62">.</operator><name pos:start="329:63" pos:end="329:67">table</name></expr></argument>, <argument pos:start="329:70" pos:end="329:86"><expr pos:start="329:70" pos:end="329:86"><name pos:start="329:70" pos:end="329:86">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="329:89" pos:end="329:90"><expr pos:start="329:89" pos:end="329:90"><literal type="number" pos:start="329:89" pos:end="329:90">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="331:13" pos:end="391:13">for <control pos:start="331:17" pos:end="331:31">(<init pos:start="331:18" pos:end="331:21"><expr pos:start="331:18" pos:end="331:20"><name pos:start="331:18" pos:end="331:18">i</name><operator pos:start="331:19" pos:end="331:19">=</operator><literal type="number" pos:start="331:20" pos:end="331:20">0</literal></expr>;</init> <condition pos:start="331:23" pos:end="331:26"><expr pos:start="331:23" pos:end="331:25"><name pos:start="331:23" pos:end="331:23">i</name><operator pos:start="331:24" pos:end="331:24">&lt;</operator><literal type="number" pos:start="331:25" pos:end="331:25">6</literal></expr>;</condition> <incr pos:start="331:28" pos:end="331:30"><expr pos:start="331:28" pos:end="331:30"><name pos:start="331:28" pos:end="331:28">i</name><operator pos:start="331:29" pos:end="331:30">++</operator></expr></incr>)</control>

            <block pos:start="333:13" pos:end="391:13">{<block_content pos:start="335:17" pos:end="389:17">

                <expr_stmt pos:start="335:17" pos:end="335:34"><expr pos:start="335:17" pos:end="335:33"><name pos:start="335:17" pos:end="335:23">dst_idx</name> <operator pos:start="335:25" pos:end="335:26">+=</operator> <name pos:start="335:28" pos:end="335:28">i</name> <operator pos:start="335:30" pos:end="335:31">&gt;&gt;</operator> <literal type="number" pos:start="335:33" pos:end="335:33">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:78"><expr pos:start="337:17" pos:end="337:77"><name pos:start="337:17" pos:end="337:19">off</name> <operator pos:start="337:21" pos:end="337:21">=</operator> <ternary pos:start="337:23" pos:end="337:77"><condition pos:start="337:23" pos:end="337:31"><expr pos:start="337:23" pos:end="337:29"><operator pos:start="337:23" pos:end="337:23">(</operator><name pos:start="337:24" pos:end="337:24">i</name> <operator pos:start="337:26" pos:end="337:26">&amp;</operator> <literal type="number" pos:start="337:28" pos:end="337:28">4</literal><operator pos:start="337:29" pos:end="337:29">)</operator></expr> ?</condition><then pos:start="337:33" pos:end="337:33"> <expr pos:start="337:33" pos:end="337:33"><literal type="number" pos:start="337:33" pos:end="337:33">0</literal></expr> </then><else pos:start="337:35" pos:end="337:77">: <expr pos:start="337:37" pos:end="337:77"><operator pos:start="337:37" pos:end="337:37">(</operator><operator pos:start="337:38" pos:end="337:38">(</operator><name pos:start="337:39" pos:end="337:39">i</name> <operator pos:start="337:41" pos:end="337:41">&amp;</operator> <literal type="number" pos:start="337:43" pos:end="337:43">1</literal><operator pos:start="337:44" pos:end="337:44">)</operator> <operator pos:start="337:46" pos:end="337:46">*</operator> <literal type="number" pos:start="337:48" pos:end="337:50">8</literal> <operator pos:start="337:50" pos:end="337:50">+</operator> <operator pos:start="337:52" pos:end="337:52">(</operator><name pos:start="337:53" pos:end="337:53">i</name> <operator pos:start="337:55" pos:end="337:55">&amp;</operator> <literal type="number" pos:start="337:57" pos:end="337:57">2</literal><operator pos:start="337:58" pos:end="337:58">)</operator> <operator pos:start="337:60" pos:end="337:60">*</operator> <literal type="number" pos:start="337:62" pos:end="337:62">4</literal> <operator pos:start="337:64" pos:end="337:64">*</operator> <name pos:start="337:66" pos:end="337:76"><name pos:start="337:66" pos:end="337:66">s</name><operator pos:start="337:67" pos:end="337:68">-&gt;</operator><name pos:start="337:69" pos:end="337:76">linesize</name></name><operator pos:start="337:77" pos:end="337:77">)</operator></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:42"><expr pos:start="339:17" pos:end="339:41"><name pos:start="339:17" pos:end="339:27"><name pos:start="339:17" pos:end="339:17">s</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:27">mb_intra</name></name> <operator pos:start="339:29" pos:end="339:29">=</operator> <name pos:start="339:31" pos:end="339:41"><name pos:start="339:31" pos:end="339:38">is_intra</name><index pos:start="339:39" pos:end="339:41">[<expr pos:start="339:40" pos:end="339:40"><name pos:start="339:40" pos:end="339:40">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="341:17" pos:end="389:17"><if pos:start="341:17" pos:end="379:17">if <condition pos:start="341:20" pos:end="341:32">(<expr pos:start="341:21" pos:end="341:31"><name pos:start="341:21" pos:end="341:31"><name pos:start="341:21" pos:end="341:28">is_intra</name><index pos:start="341:29" pos:end="341:31">[<expr pos:start="341:30" pos:end="341:30"><name pos:start="341:30" pos:end="341:30">i</name></expr>]</index></name></expr>)</condition> <block pos:start="341:34" pos:end="379:17">{<block_content pos:start="345:21" pos:end="377:21">

                    <comment type="block" pos:start="343:21" pos:end="343:74">/* check if prediction blocks A and C are available */</comment>

                    <expr_stmt pos:start="345:21" pos:end="345:48"><expr pos:start="345:21" pos:end="345:47"><name pos:start="345:21" pos:end="345:30"><name pos:start="345:21" pos:end="345:21">v</name><operator pos:start="345:22" pos:end="345:23">-&gt;</operator><name pos:start="345:24" pos:end="345:30">a_avail</name></name> <operator pos:start="345:32" pos:end="345:32">=</operator> <name pos:start="345:34" pos:end="345:43"><name pos:start="345:34" pos:end="345:34">v</name><operator pos:start="345:35" pos:end="345:36">-&gt;</operator><name pos:start="345:37" pos:end="345:43">c_avail</name></name> <operator pos:start="345:45" pos:end="345:45">=</operator> <literal type="number" pos:start="345:47" pos:end="345:47">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="347:21" pos:end="349:89"><if pos:start="347:21" pos:end="349:89">if<condition pos:start="347:23" pos:end="347:51">(<expr pos:start="347:24" pos:end="347:50"><name pos:start="347:24" pos:end="347:24">i</name> <operator pos:start="347:26" pos:end="347:27">==</operator> <literal type="number" pos:start="347:29" pos:end="347:29">2</literal> <operator pos:start="347:31" pos:end="347:32">||</operator> <name pos:start="347:34" pos:end="347:34">i</name> <operator pos:start="347:36" pos:end="347:37">==</operator> <literal type="number" pos:start="347:39" pos:end="347:39">3</literal> <operator pos:start="347:41" pos:end="347:42">||</operator> <name pos:start="347:44" pos:end="347:50"><name pos:start="347:44" pos:end="347:44">s</name><operator pos:start="347:45" pos:end="347:46">-&gt;</operator><name pos:start="347:47" pos:end="347:50">mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="349:25" pos:end="349:89"><block_content pos:start="349:25" pos:end="349:89">

                        <expr_stmt pos:start="349:25" pos:end="349:89"><expr pos:start="349:25" pos:end="349:88"><name pos:start="349:25" pos:end="349:34"><name pos:start="349:25" pos:end="349:25">v</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:34">a_avail</name></name> <operator pos:start="349:36" pos:end="349:36">=</operator> <name pos:start="349:38" pos:end="349:88"><name pos:start="349:38" pos:end="349:38">v</name><operator pos:start="349:39" pos:end="349:40">-&gt;</operator><name pos:start="349:41" pos:end="349:47">mb_type</name><index pos:start="349:48" pos:end="349:50">[<expr pos:start="349:49" pos:end="349:49"><literal type="number" pos:start="349:49" pos:end="349:49">0</literal></expr>]</index><index pos:start="349:51" pos:end="349:88">[<expr pos:start="349:52" pos:end="349:87"><name pos:start="349:52" pos:end="349:68"><name pos:start="349:52" pos:end="349:52">s</name><operator pos:start="349:53" pos:end="349:54">-&gt;</operator><name pos:start="349:55" pos:end="349:65">block_index</name><index pos:start="349:66" pos:end="349:68">[<expr pos:start="349:67" pos:end="349:67"><name pos:start="349:67" pos:end="349:67">i</name></expr>]</index></name> <operator pos:start="349:70" pos:end="349:70">-</operator> <name pos:start="349:72" pos:end="349:87"><name pos:start="349:72" pos:end="349:72">s</name><operator pos:start="349:73" pos:end="349:74">-&gt;</operator><name pos:start="349:75" pos:end="349:84">block_wrap</name><index pos:start="349:85" pos:end="349:87">[<expr pos:start="349:86" pos:end="349:86"><name pos:start="349:86" pos:end="349:86">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="351:21" pos:end="353:74"><if pos:start="351:21" pos:end="353:74">if<condition pos:start="351:23" pos:end="351:51">(<expr pos:start="351:24" pos:end="351:50"><name pos:start="351:24" pos:end="351:24">i</name> <operator pos:start="351:26" pos:end="351:27">==</operator> <literal type="number" pos:start="351:29" pos:end="351:29">1</literal> <operator pos:start="351:31" pos:end="351:32">||</operator> <name pos:start="351:34" pos:end="351:34">i</name> <operator pos:start="351:36" pos:end="351:37">==</operator> <literal type="number" pos:start="351:39" pos:end="351:39">3</literal> <operator pos:start="351:41" pos:end="351:42">||</operator> <name pos:start="351:44" pos:end="351:50"><name pos:start="351:44" pos:end="351:44">s</name><operator pos:start="351:45" pos:end="351:46">-&gt;</operator><name pos:start="351:47" pos:end="351:50">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="353:25" pos:end="353:74"><block_content pos:start="353:25" pos:end="353:74">

                        <expr_stmt pos:start="353:25" pos:end="353:74"><expr pos:start="353:25" pos:end="353:73"><name pos:start="353:25" pos:end="353:34"><name pos:start="353:25" pos:end="353:25">v</name><operator pos:start="353:26" pos:end="353:27">-&gt;</operator><name pos:start="353:28" pos:end="353:34">c_avail</name></name> <operator pos:start="353:36" pos:end="353:36">=</operator> <name pos:start="353:38" pos:end="353:73"><name pos:start="353:38" pos:end="353:38">v</name><operator pos:start="353:39" pos:end="353:40">-&gt;</operator><name pos:start="353:41" pos:end="353:47">mb_type</name><index pos:start="353:48" pos:end="353:50">[<expr pos:start="353:49" pos:end="353:49"><literal type="number" pos:start="353:49" pos:end="353:49">0</literal></expr>]</index><index pos:start="353:51" pos:end="353:73">[<expr pos:start="353:52" pos:end="353:72"><name pos:start="353:52" pos:end="353:68"><name pos:start="353:52" pos:end="353:52">s</name><operator pos:start="353:53" pos:end="353:54">-&gt;</operator><name pos:start="353:55" pos:end="353:65">block_index</name><index pos:start="353:66" pos:end="353:68">[<expr pos:start="353:67" pos:end="353:67"><name pos:start="353:67" pos:end="353:67">i</name></expr>]</index></name> <operator pos:start="353:70" pos:end="353:70">-</operator> <literal type="number" pos:start="353:72" pos:end="353:72">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="357:21" pos:end="357:117"><expr pos:start="357:21" pos:end="357:116"><call pos:start="357:21" pos:end="357:116"><name pos:start="357:21" pos:end="357:42">vc1_decode_intra_block</name><argument_list pos:start="357:43" pos:end="357:116">(<argument pos:start="357:44" pos:end="357:44"><expr pos:start="357:44" pos:end="357:44"><name pos:start="357:44" pos:end="357:44">v</name></expr></argument>, <argument pos:start="357:47" pos:end="357:57"><expr pos:start="357:47" pos:end="357:57"><name pos:start="357:47" pos:end="357:57"><name pos:start="357:47" pos:end="357:47">s</name><operator pos:start="357:48" pos:end="357:49">-&gt;</operator><name pos:start="357:50" pos:end="357:54">block</name><index pos:start="357:55" pos:end="357:57">[<expr pos:start="357:56" pos:end="357:56"><name pos:start="357:56" pos:end="357:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="357:60" pos:end="357:60"><expr pos:start="357:60" pos:end="357:60"><name pos:start="357:60" pos:end="357:60">i</name></expr></argument>, <argument pos:start="357:63" pos:end="357:73"><expr pos:start="357:63" pos:end="357:73"><name pos:start="357:63" pos:end="357:73"><name pos:start="357:63" pos:end="357:70">is_coded</name><index pos:start="357:71" pos:end="357:73">[<expr pos:start="357:72" pos:end="357:72"><name pos:start="357:72" pos:end="357:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="357:76" pos:end="357:81"><expr pos:start="357:76" pos:end="357:81"><name pos:start="357:76" pos:end="357:81">mquant</name></expr></argument>, <argument pos:start="357:84" pos:end="357:115"><expr pos:start="357:84" pos:end="357:115"><ternary pos:start="357:84" pos:end="357:115"><condition pos:start="357:84" pos:end="357:89"><expr pos:start="357:84" pos:end="357:88"><operator pos:start="357:84" pos:end="357:84">(</operator><name pos:start="357:85" pos:end="357:85">i</name><operator pos:start="357:86" pos:end="357:86">&amp;</operator><literal type="number" pos:start="357:87" pos:end="357:87">4</literal><operator pos:start="357:88" pos:end="357:88">)</operator></expr>?</condition><then pos:start="357:90" pos:end="357:102"><expr pos:start="357:90" pos:end="357:102"><name pos:start="357:90" pos:end="357:102"><name pos:start="357:90" pos:end="357:90">v</name><operator pos:start="357:91" pos:end="357:92">-&gt;</operator><name pos:start="357:93" pos:end="357:102">codingset2</name></name></expr></then><else pos:start="357:103" pos:end="357:115">:<expr pos:start="357:104" pos:end="357:115"><name pos:start="357:104" pos:end="357:115"><name pos:start="357:104" pos:end="357:104">v</name><operator pos:start="357:105" pos:end="357:106">-&gt;</operator><name pos:start="357:107" pos:end="357:115">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:50"><expr pos:start="359:21" pos:end="359:49"><call pos:start="359:21" pos:end="359:49"><name pos:start="359:21" pos:end="359:33">vc1_inv_trans</name><argument_list pos:start="359:34" pos:end="359:49">(<argument pos:start="359:35" pos:end="359:42"><expr pos:start="359:35" pos:end="359:42"><name pos:start="359:35" pos:end="359:42"><name pos:start="359:35" pos:end="359:39">block</name><index pos:start="359:40" pos:end="359:42">[<expr pos:start="359:41" pos:end="359:41"><name pos:start="359:41" pos:end="359:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="359:45" pos:end="359:45"><expr pos:start="359:45" pos:end="359:45"><literal type="number" pos:start="359:45" pos:end="359:45">8</literal></expr></argument>, <argument pos:start="359:48" pos:end="359:48"><expr pos:start="359:48" pos:end="359:48"><literal type="number" pos:start="359:48" pos:end="359:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="361:21" pos:end="361:63">for<control pos:start="361:24" pos:end="361:43">(<init pos:start="361:25" pos:end="361:30"><expr pos:start="361:25" pos:end="361:29"><name pos:start="361:25" pos:end="361:25">j</name> <operator pos:start="361:27" pos:end="361:27">=</operator> <literal type="number" pos:start="361:29" pos:end="361:29">0</literal></expr>;</init> <condition pos:start="361:32" pos:end="361:38"><expr pos:start="361:32" pos:end="361:37"><name pos:start="361:32" pos:end="361:32">j</name> <operator pos:start="361:34" pos:end="361:34">&lt;</operator> <literal type="number" pos:start="361:36" pos:end="361:37">64</literal></expr>;</condition> <incr pos:start="361:40" pos:end="361:42"><expr pos:start="361:40" pos:end="361:42"><name pos:start="361:40" pos:end="361:40">j</name><operator pos:start="361:41" pos:end="361:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="361:45" pos:end="361:63"><block_content pos:start="361:45" pos:end="361:63"> <expr_stmt pos:start="361:45" pos:end="361:63"><expr pos:start="361:45" pos:end="361:62"><name pos:start="361:45" pos:end="361:55"><name pos:start="361:45" pos:end="361:49">block</name><index pos:start="361:50" pos:end="361:52">[<expr pos:start="361:51" pos:end="361:51"><name pos:start="361:51" pos:end="361:51">i</name></expr>]</index><index pos:start="361:53" pos:end="361:55">[<expr pos:start="361:54" pos:end="361:54"><name pos:start="361:54" pos:end="361:54">j</name></expr>]</index></name> <operator pos:start="361:57" pos:end="361:58">+=</operator> <literal type="number" pos:start="361:60" pos:end="361:62">128</literal></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="363:21" pos:end="363:116"><expr pos:start="363:21" pos:end="363:115"><call pos:start="363:21" pos:end="363:115"><name pos:start="363:21" pos:end="363:45"><name pos:start="363:21" pos:end="363:21">s</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:26">dsp</name><operator pos:start="363:27" pos:end="363:27">.</operator><name pos:start="363:28" pos:end="363:45">put_pixels_clamped</name></name><argument_list pos:start="363:46" pos:end="363:115">(<argument pos:start="363:47" pos:end="363:57"><expr pos:start="363:47" pos:end="363:57"><name pos:start="363:47" pos:end="363:57"><name pos:start="363:47" pos:end="363:47">s</name><operator pos:start="363:48" pos:end="363:49">-&gt;</operator><name pos:start="363:50" pos:end="363:54">block</name><index pos:start="363:55" pos:end="363:57">[<expr pos:start="363:56" pos:end="363:56"><name pos:start="363:56" pos:end="363:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="363:60" pos:end="363:81"><expr pos:start="363:60" pos:end="363:81"><name pos:start="363:60" pos:end="363:75"><name pos:start="363:60" pos:end="363:60">s</name><operator pos:start="363:61" pos:end="363:62">-&gt;</operator><name pos:start="363:63" pos:end="363:66">dest</name><index pos:start="363:67" pos:end="363:75">[<expr pos:start="363:68" pos:end="363:74"><name pos:start="363:68" pos:end="363:74">dst_idx</name></expr>]</index></name> <operator pos:start="363:77" pos:end="363:77">+</operator> <name pos:start="363:79" pos:end="363:81">off</name></expr></argument>, <argument pos:start="363:84" pos:end="363:114"><expr pos:start="363:84" pos:end="363:114"><ternary pos:start="363:84" pos:end="363:114"><condition pos:start="363:84" pos:end="363:89"><expr pos:start="363:84" pos:end="363:88"><operator pos:start="363:84" pos:end="363:84">(</operator><name pos:start="363:85" pos:end="363:85">i</name><operator pos:start="363:86" pos:end="363:86">&amp;</operator><literal type="number" pos:start="363:87" pos:end="363:87">4</literal><operator pos:start="363:88" pos:end="363:88">)</operator></expr>?</condition><then pos:start="363:90" pos:end="363:102"><expr pos:start="363:90" pos:end="363:102"><name pos:start="363:90" pos:end="363:102"><name pos:start="363:90" pos:end="363:90">s</name><operator pos:start="363:91" pos:end="363:92">-&gt;</operator><name pos:start="363:93" pos:end="363:102">uvlinesize</name></name></expr></then><else pos:start="363:103" pos:end="363:114">:<expr pos:start="363:104" pos:end="363:114"><name pos:start="363:104" pos:end="363:114"><name pos:start="363:104" pos:end="363:104">s</name><operator pos:start="363:105" pos:end="363:106">-&gt;</operator><name pos:start="363:107" pos:end="363:114">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="365:21" pos:end="365:53">/* TODO: proper loop filtering */</comment>

                    <if_stmt pos:start="367:21" pos:end="377:21"><if pos:start="367:21" pos:end="377:21">if<condition pos:start="367:23" pos:end="367:48">(<expr pos:start="367:24" pos:end="367:47"><name pos:start="367:24" pos:end="367:28"><name pos:start="367:24" pos:end="367:24">v</name><operator pos:start="367:25" pos:end="367:26">-&gt;</operator><name pos:start="367:27" pos:end="367:28">pq</name></name> <operator pos:start="367:30" pos:end="367:31">&gt;=</operator> <literal type="number" pos:start="367:33" pos:end="367:33">9</literal> <operator pos:start="367:35" pos:end="367:36">&amp;&amp;</operator> <name pos:start="367:38" pos:end="367:47"><name pos:start="367:38" pos:end="367:38">v</name><operator pos:start="367:39" pos:end="367:40">-&gt;</operator><name pos:start="367:41" pos:end="367:47">overlap</name></name></expr>)</condition> <block pos:start="367:50" pos:end="377:21">{<block_content pos:start="369:25" pos:end="375:124">

                        <if_stmt pos:start="369:25" pos:end="371:124"><if pos:start="369:25" pos:end="371:124">if<condition pos:start="369:27" pos:end="369:38">(<expr pos:start="369:28" pos:end="369:37"><name pos:start="369:28" pos:end="369:37"><name pos:start="369:28" pos:end="369:28">v</name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:37">a_avail</name></name></expr>)</condition><block type="pseudo" pos:start="371:29" pos:end="371:124"><block_content pos:start="371:29" pos:end="371:124">

                            <expr_stmt pos:start="371:29" pos:end="371:124"><expr pos:start="371:29" pos:end="371:123"><call pos:start="371:29" pos:end="371:123"><name pos:start="371:29" pos:end="371:53"><name pos:start="371:29" pos:end="371:29">s</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:34">dsp</name><operator pos:start="371:35" pos:end="371:35">.</operator><name pos:start="371:36" pos:end="371:53">h263_v_loop_filter</name></name><argument_list pos:start="371:54" pos:end="371:123">(<argument pos:start="371:55" pos:end="371:76"><expr pos:start="371:55" pos:end="371:76"><name pos:start="371:55" pos:end="371:70"><name pos:start="371:55" pos:end="371:55">s</name><operator pos:start="371:56" pos:end="371:57">-&gt;</operator><name pos:start="371:58" pos:end="371:61">dest</name><index pos:start="371:62" pos:end="371:70">[<expr pos:start="371:63" pos:end="371:69"><name pos:start="371:63" pos:end="371:69">dst_idx</name></expr>]</index></name> <operator pos:start="371:72" pos:end="371:72">+</operator> <name pos:start="371:74" pos:end="371:76">off</name></expr></argument>, <argument pos:start="371:79" pos:end="371:107"><expr pos:start="371:79" pos:end="371:107"><name pos:start="371:79" pos:end="371:89"><name pos:start="371:79" pos:end="371:79">s</name><operator pos:start="371:80" pos:end="371:81">-&gt;</operator><name pos:start="371:82" pos:end="371:89">linesize</name></name> <operator pos:start="371:91" pos:end="371:92">&gt;&gt;</operator> <operator pos:start="371:94" pos:end="371:94">(</operator><operator pos:start="371:95" pos:end="371:95">(</operator><name pos:start="371:96" pos:end="371:96">i</name> <operator pos:start="371:98" pos:end="371:98">&amp;</operator> <literal type="number" pos:start="371:100" pos:end="371:100">4</literal><operator pos:start="371:101" pos:end="371:101">)</operator> <operator pos:start="371:103" pos:end="371:104">&gt;&gt;</operator> <literal type="number" pos:start="371:106" pos:end="371:106">2</literal><operator pos:start="371:107" pos:end="371:107">)</operator></expr></argument>, <argument pos:start="371:110" pos:end="371:122"><expr pos:start="371:110" pos:end="371:122"><name pos:start="371:110" pos:end="371:122"><name pos:start="371:110" pos:end="371:110">s</name><operator pos:start="371:111" pos:end="371:112">-&gt;</operator><name pos:start="371:113" pos:end="371:122">y_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="373:25" pos:end="375:124"><if pos:start="373:25" pos:end="375:124">if<condition pos:start="373:27" pos:end="373:38">(<expr pos:start="373:28" pos:end="373:37"><name pos:start="373:28" pos:end="373:37"><name pos:start="373:28" pos:end="373:28">v</name><operator pos:start="373:29" pos:end="373:30">-&gt;</operator><name pos:start="373:31" pos:end="373:37">c_avail</name></name></expr>)</condition><block type="pseudo" pos:start="375:29" pos:end="375:124"><block_content pos:start="375:29" pos:end="375:124">

                            <expr_stmt pos:start="375:29" pos:end="375:124"><expr pos:start="375:29" pos:end="375:123"><call pos:start="375:29" pos:end="375:123"><name pos:start="375:29" pos:end="375:53"><name pos:start="375:29" pos:end="375:29">s</name><operator pos:start="375:30" pos:end="375:31">-&gt;</operator><name pos:start="375:32" pos:end="375:34">dsp</name><operator pos:start="375:35" pos:end="375:35">.</operator><name pos:start="375:36" pos:end="375:53">h263_h_loop_filter</name></name><argument_list pos:start="375:54" pos:end="375:123">(<argument pos:start="375:55" pos:end="375:76"><expr pos:start="375:55" pos:end="375:76"><name pos:start="375:55" pos:end="375:70"><name pos:start="375:55" pos:end="375:55">s</name><operator pos:start="375:56" pos:end="375:57">-&gt;</operator><name pos:start="375:58" pos:end="375:61">dest</name><index pos:start="375:62" pos:end="375:70">[<expr pos:start="375:63" pos:end="375:69"><name pos:start="375:63" pos:end="375:69">dst_idx</name></expr>]</index></name> <operator pos:start="375:72" pos:end="375:72">+</operator> <name pos:start="375:74" pos:end="375:76">off</name></expr></argument>, <argument pos:start="375:79" pos:end="375:107"><expr pos:start="375:79" pos:end="375:107"><name pos:start="375:79" pos:end="375:89"><name pos:start="375:79" pos:end="375:79">s</name><operator pos:start="375:80" pos:end="375:81">-&gt;</operator><name pos:start="375:82" pos:end="375:89">linesize</name></name> <operator pos:start="375:91" pos:end="375:92">&gt;&gt;</operator> <operator pos:start="375:94" pos:end="375:94">(</operator><operator pos:start="375:95" pos:end="375:95">(</operator><name pos:start="375:96" pos:end="375:96">i</name> <operator pos:start="375:98" pos:end="375:98">&amp;</operator> <literal type="number" pos:start="375:100" pos:end="375:100">4</literal><operator pos:start="375:101" pos:end="375:101">)</operator> <operator pos:start="375:103" pos:end="375:104">&gt;&gt;</operator> <literal type="number" pos:start="375:106" pos:end="375:106">2</literal><operator pos:start="375:107" pos:end="375:107">)</operator></expr></argument>, <argument pos:start="375:110" pos:end="375:122"><expr pos:start="375:110" pos:end="375:122"><name pos:start="375:110" pos:end="375:122"><name pos:start="375:110" pos:end="375:110">s</name><operator pos:start="375:111" pos:end="375:112">-&gt;</operator><name pos:start="375:113" pos:end="375:122">y_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="379:19" pos:end="389:17">else if<condition pos:start="379:26" pos:end="379:38">(<expr pos:start="379:27" pos:end="379:37"><name pos:start="379:27" pos:end="379:37"><name pos:start="379:27" pos:end="379:34">is_coded</name><index pos:start="379:35" pos:end="379:37">[<expr pos:start="379:36" pos:end="379:36"><name pos:start="379:36" pos:end="379:36">i</name></expr>]</index></name></expr>)</condition> <block pos:start="379:40" pos:end="389:17">{<block_content pos:start="381:21" pos:end="387:116">

                    <expr_stmt pos:start="381:21" pos:end="381:94"><expr pos:start="381:21" pos:end="381:93"><name pos:start="381:21" pos:end="381:26">status</name> <operator pos:start="381:28" pos:end="381:28">=</operator> <call pos:start="381:30" pos:end="381:93"><name pos:start="381:30" pos:end="381:47">vc1_decode_p_block</name><argument_list pos:start="381:48" pos:end="381:93">(<argument pos:start="381:49" pos:end="381:49"><expr pos:start="381:49" pos:end="381:49"><name pos:start="381:49" pos:end="381:49">v</name></expr></argument>, <argument pos:start="381:52" pos:end="381:62"><expr pos:start="381:52" pos:end="381:62"><name pos:start="381:52" pos:end="381:62"><name pos:start="381:52" pos:end="381:52">s</name><operator pos:start="381:53" pos:end="381:54">-&gt;</operator><name pos:start="381:55" pos:end="381:59">block</name><index pos:start="381:60" pos:end="381:62">[<expr pos:start="381:61" pos:end="381:61"><name pos:start="381:61" pos:end="381:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="381:65" pos:end="381:65"><expr pos:start="381:65" pos:end="381:65"><name pos:start="381:65" pos:end="381:65">i</name></expr></argument>, <argument pos:start="381:68" pos:end="381:73"><expr pos:start="381:68" pos:end="381:73"><name pos:start="381:68" pos:end="381:73">mquant</name></expr></argument>, <argument pos:start="381:76" pos:end="381:79"><expr pos:start="381:76" pos:end="381:79"><name pos:start="381:76" pos:end="381:79">ttmb</name></expr></argument>, <argument pos:start="381:82" pos:end="381:92"><expr pos:start="381:82" pos:end="381:92"><name pos:start="381:82" pos:end="381:92">first_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="383:21" pos:end="383:56"><if pos:start="383:21" pos:end="383:56">if<condition pos:start="383:23" pos:end="383:45">(<expr pos:start="383:24" pos:end="383:44"><operator pos:start="383:24" pos:end="383:24">!</operator><name pos:start="383:25" pos:end="383:32"><name pos:start="383:25" pos:end="383:25">v</name><operator pos:start="383:26" pos:end="383:27">-&gt;</operator><name pos:start="383:28" pos:end="383:32">ttmbf</name></name> <operator pos:start="383:34" pos:end="383:35">&amp;&amp;</operator> <name pos:start="383:37" pos:end="383:40">ttmb</name> <operator pos:start="383:42" pos:end="383:42">&lt;</operator> <literal type="number" pos:start="383:44" pos:end="383:44">8</literal></expr>)</condition><block type="pseudo" pos:start="383:47" pos:end="383:56"><block_content pos:start="383:47" pos:end="383:56"> <expr_stmt pos:start="383:47" pos:end="383:56"><expr pos:start="383:47" pos:end="383:55"><name pos:start="383:47" pos:end="383:50">ttmb</name> <operator pos:start="383:52" pos:end="383:52">=</operator> <operator pos:start="383:54" pos:end="383:54">-</operator><literal type="number" pos:start="383:55" pos:end="383:55">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:36"><expr pos:start="385:21" pos:end="385:35"><name pos:start="385:21" pos:end="385:31">first_block</name> <operator pos:start="385:33" pos:end="385:33">=</operator> <literal type="number" pos:start="385:35" pos:end="385:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:116"><expr pos:start="387:21" pos:end="387:115"><call pos:start="387:21" pos:end="387:115"><name pos:start="387:21" pos:end="387:45"><name pos:start="387:21" pos:end="387:21">s</name><operator pos:start="387:22" pos:end="387:23">-&gt;</operator><name pos:start="387:24" pos:end="387:26">dsp</name><operator pos:start="387:27" pos:end="387:27">.</operator><name pos:start="387:28" pos:end="387:45">add_pixels_clamped</name></name><argument_list pos:start="387:46" pos:end="387:115">(<argument pos:start="387:47" pos:end="387:57"><expr pos:start="387:47" pos:end="387:57"><name pos:start="387:47" pos:end="387:57"><name pos:start="387:47" pos:end="387:47">s</name><operator pos:start="387:48" pos:end="387:49">-&gt;</operator><name pos:start="387:50" pos:end="387:54">block</name><index pos:start="387:55" pos:end="387:57">[<expr pos:start="387:56" pos:end="387:56"><name pos:start="387:56" pos:end="387:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="387:60" pos:end="387:81"><expr pos:start="387:60" pos:end="387:81"><name pos:start="387:60" pos:end="387:75"><name pos:start="387:60" pos:end="387:60">s</name><operator pos:start="387:61" pos:end="387:62">-&gt;</operator><name pos:start="387:63" pos:end="387:66">dest</name><index pos:start="387:67" pos:end="387:75">[<expr pos:start="387:68" pos:end="387:74"><name pos:start="387:68" pos:end="387:74">dst_idx</name></expr>]</index></name> <operator pos:start="387:77" pos:end="387:77">+</operator> <name pos:start="387:79" pos:end="387:81">off</name></expr></argument>, <argument pos:start="387:84" pos:end="387:114"><expr pos:start="387:84" pos:end="387:114"><ternary pos:start="387:84" pos:end="387:114"><condition pos:start="387:84" pos:end="387:89"><expr pos:start="387:84" pos:end="387:88"><operator pos:start="387:84" pos:end="387:84">(</operator><name pos:start="387:85" pos:end="387:85">i</name><operator pos:start="387:86" pos:end="387:86">&amp;</operator><literal type="number" pos:start="387:87" pos:end="387:87">4</literal><operator pos:start="387:88" pos:end="387:88">)</operator></expr>?</condition><then pos:start="387:90" pos:end="387:102"><expr pos:start="387:90" pos:end="387:102"><name pos:start="387:90" pos:end="387:102"><name pos:start="387:90" pos:end="387:90">s</name><operator pos:start="387:91" pos:end="387:92">-&gt;</operator><name pos:start="387:93" pos:end="387:102">uvlinesize</name></name></expr></then><else pos:start="387:103" pos:end="387:114">:<expr pos:start="387:104" pos:end="387:114"><name pos:start="387:104" pos:end="387:114"><name pos:start="387:104" pos:end="387:104">s</name><operator pos:start="387:105" pos:end="387:106">-&gt;</operator><name pos:start="387:107" pos:end="387:114">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <return pos:start="393:13" pos:end="393:26">return <expr pos:start="393:20" pos:end="393:25"><name pos:start="393:20" pos:end="393:25">status</name></expr>;</return>

        </block_content>}</block></if>

        <else pos:start="397:9" pos:end="421:9">else <comment type="line" pos:start="397:14" pos:end="397:25">//Skipped MB</comment>

        <block pos:start="399:9" pos:end="421:9">{<block_content pos:start="401:13" pos:end="419:21">

            <expr_stmt pos:start="401:13" pos:end="401:28"><expr pos:start="401:13" pos:end="401:27"><name pos:start="401:13" pos:end="401:23"><name pos:start="401:13" pos:end="401:13">s</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:23">mb_intra</name></name> <operator pos:start="401:25" pos:end="401:25">=</operator> <literal type="number" pos:start="401:27" pos:end="401:27">0</literal></expr>;</expr_stmt>

            <for pos:start="403:13" pos:end="403:69">for <control pos:start="403:17" pos:end="403:31">(<init pos:start="403:18" pos:end="403:21"><expr pos:start="403:18" pos:end="403:20"><name pos:start="403:18" pos:end="403:18">i</name><operator pos:start="403:19" pos:end="403:19">=</operator><literal type="number" pos:start="403:20" pos:end="403:20">0</literal></expr>;</init> <condition pos:start="403:23" pos:end="403:26"><expr pos:start="403:23" pos:end="403:25"><name pos:start="403:23" pos:end="403:23">i</name><operator pos:start="403:24" pos:end="403:24">&lt;</operator><literal type="number" pos:start="403:25" pos:end="403:25">6</literal></expr>;</condition> <incr pos:start="403:28" pos:end="403:30"><expr pos:start="403:28" pos:end="403:30"><name pos:start="403:28" pos:end="403:28">i</name><operator pos:start="403:29" pos:end="403:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="403:33" pos:end="403:69"><block_content pos:start="403:33" pos:end="403:69"> <expr_stmt pos:start="403:33" pos:end="403:69"><expr pos:start="403:33" pos:end="403:68"><name pos:start="403:33" pos:end="403:64"><name pos:start="403:33" pos:end="403:33">v</name><operator pos:start="403:34" pos:end="403:35">-&gt;</operator><name pos:start="403:36" pos:end="403:42">mb_type</name><index pos:start="403:43" pos:end="403:45">[<expr pos:start="403:44" pos:end="403:44"><literal type="number" pos:start="403:44" pos:end="403:44">0</literal></expr>]</index><index pos:start="403:46" pos:end="403:64">[<expr pos:start="403:47" pos:end="403:63"><name pos:start="403:47" pos:end="403:63"><name pos:start="403:47" pos:end="403:47">s</name><operator pos:start="403:48" pos:end="403:49">-&gt;</operator><name pos:start="403:50" pos:end="403:60">block_index</name><index pos:start="403:61" pos:end="403:63">[<expr pos:start="403:62" pos:end="403:62"><name pos:start="403:62" pos:end="403:62">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="403:66" pos:end="403:66">=</operator> <literal type="number" pos:start="403:68" pos:end="403:68">0</literal></expr>;</expr_stmt></block_content></block></for>

            <for pos:start="405:13" pos:end="413:13">for <control pos:start="405:17" pos:end="405:31">(<init pos:start="405:18" pos:end="405:21"><expr pos:start="405:18" pos:end="405:20"><name pos:start="405:18" pos:end="405:18">i</name><operator pos:start="405:19" pos:end="405:19">=</operator><literal type="number" pos:start="405:20" pos:end="405:20">0</literal></expr>;</init> <condition pos:start="405:23" pos:end="405:26"><expr pos:start="405:23" pos:end="405:25"><name pos:start="405:23" pos:end="405:23">i</name><operator pos:start="405:24" pos:end="405:24">&lt;</operator><literal type="number" pos:start="405:25" pos:end="405:25">4</literal></expr>;</condition> <incr pos:start="405:28" pos:end="405:30"><expr pos:start="405:28" pos:end="405:30"><name pos:start="405:28" pos:end="405:28">i</name><operator pos:start="405:29" pos:end="405:30">++</operator></expr></incr>)</control>

            <block pos:start="407:13" pos:end="413:13">{<block_content pos:start="409:17" pos:end="411:38">

                <expr_stmt pos:start="409:17" pos:end="409:82"><expr pos:start="409:17" pos:end="409:81"><call pos:start="409:17" pos:end="409:81"><name pos:start="409:17" pos:end="409:27">vc1_pred_mv</name><argument_list pos:start="409:28" pos:end="409:81">(<argument pos:start="409:29" pos:end="409:29"><expr pos:start="409:29" pos:end="409:29"><name pos:start="409:29" pos:end="409:29">s</name></expr></argument>, <argument pos:start="409:32" pos:end="409:32"><expr pos:start="409:32" pos:end="409:32"><name pos:start="409:32" pos:end="409:32">i</name></expr></argument>, <argument pos:start="409:35" pos:end="409:35"><expr pos:start="409:35" pos:end="409:35"><literal type="number" pos:start="409:35" pos:end="409:35">0</literal></expr></argument>, <argument pos:start="409:38" pos:end="409:38"><expr pos:start="409:38" pos:end="409:38"><literal type="number" pos:start="409:38" pos:end="409:38">0</literal></expr></argument>, <argument pos:start="409:41" pos:end="409:41"><expr pos:start="409:41" pos:end="409:41"><literal type="number" pos:start="409:41" pos:end="409:41">0</literal></expr></argument>, <argument pos:start="409:44" pos:end="409:53"><expr pos:start="409:44" pos:end="409:53"><name pos:start="409:44" pos:end="409:53"><name pos:start="409:44" pos:end="409:44">v</name><operator pos:start="409:45" pos:end="409:46">-&gt;</operator><name pos:start="409:47" pos:end="409:53">range_x</name></name></expr></argument>, <argument pos:start="409:56" pos:end="409:65"><expr pos:start="409:56" pos:end="409:65"><name pos:start="409:56" pos:end="409:65"><name pos:start="409:56" pos:end="409:56">v</name><operator pos:start="409:57" pos:end="409:58">-&gt;</operator><name pos:start="409:59" pos:end="409:65">range_y</name></name></expr></argument>, <argument pos:start="409:68" pos:end="409:80"><expr pos:start="409:68" pos:end="409:80"><name pos:start="409:68" pos:end="409:80"><name pos:start="409:68" pos:end="409:68">v</name><operator pos:start="409:69" pos:end="409:70">-&gt;</operator><name pos:start="409:71" pos:end="409:77">mb_type</name><index pos:start="409:78" pos:end="409:80">[<expr pos:start="409:79" pos:end="409:79"><literal type="number" pos:start="409:79" pos:end="409:79">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:38"><expr pos:start="411:17" pos:end="411:37"><call pos:start="411:17" pos:end="411:37"><name pos:start="411:17" pos:end="411:31">vc1_mc_4mv_luma</name><argument_list pos:start="411:32" pos:end="411:37">(<argument pos:start="411:33" pos:end="411:33"><expr pos:start="411:33" pos:end="411:33"><name pos:start="411:33" pos:end="411:33">v</name></expr></argument>, <argument pos:start="411:36" pos:end="411:36"><expr pos:start="411:36" pos:end="411:36"><name pos:start="411:36" pos:end="411:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="415:13" pos:end="415:33"><expr pos:start="415:13" pos:end="415:32"><call pos:start="415:13" pos:end="415:32"><name pos:start="415:13" pos:end="415:29">vc1_mc_4mv_chroma</name><argument_list pos:start="415:30" pos:end="415:32">(<argument pos:start="415:31" pos:end="415:31"><expr pos:start="415:31" pos:end="415:31"><name pos:start="415:31" pos:end="415:31">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:56"><expr pos:start="417:13" pos:end="417:55"><name pos:start="417:13" pos:end="417:51"><name pos:start="417:13" pos:end="417:13">s</name><operator pos:start="417:14" pos:end="417:15">-&gt;</operator><name pos:start="417:16" pos:end="417:30">current_picture</name><operator pos:start="417:31" pos:end="417:31">.</operator><name pos:start="417:32" pos:end="417:43">qscale_table</name><index pos:start="417:44" pos:end="417:51">[<expr pos:start="417:45" pos:end="417:50"><name pos:start="417:45" pos:end="417:50">mb_pos</name></expr>]</index></name> <operator pos:start="417:53" pos:end="417:53">=</operator> <literal type="number" pos:start="417:55" pos:end="417:55">0</literal></expr>;</expr_stmt>

            <return pos:start="419:13" pos:end="419:21">return <expr pos:start="419:20" pos:end="419:20"><literal type="number" pos:start="419:20" pos:end="419:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="427:5" pos:end="427:29">/* Should never happen */</comment>

    <return pos:start="429:5" pos:end="429:14">return <expr pos:start="429:12" pos:end="429:13"><operator pos:start="429:12" pos:end="429:12">-</operator><literal type="number" pos:start="429:13" pos:end="429:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
