<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8641.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">bdrv_io_unplugged_end</name><parameter_list pos:start="1:27" pos:end="1:48">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">BdrvChild</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">child</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:32">(<argument pos:start="9:12" pos:end="9:31"><expr pos:start="9:12" pos:end="9:31"><name pos:start="9:12" pos:end="9:31"><name pos:start="9:12" pos:end="9:13">bs</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:31">io_plug_disabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:17">QLIST_FOREACH</name><argument_list pos:start="11:18" pos:end="11:45">(<argument pos:start="11:19" pos:end="11:23">child</argument>, <argument pos:start="11:26" pos:end="11:38">&amp;bs-&gt;children</argument>, <argument pos:start="11:41" pos:end="11:44">next</argument>)</argument_list></macro> <block pos:start="11:47" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:41">

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:29">bdrv_io_unplugged_end</name><argument_list pos:start="13:30" pos:end="13:40">(<argument pos:start="13:31" pos:end="13:39"><expr pos:start="13:31" pos:end="13:39"><name pos:start="13:31" pos:end="13:39"><name pos:start="13:31" pos:end="13:35">child</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:39">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:58">(<expr pos:start="19:9" pos:end="19:57"><operator pos:start="19:9" pos:end="19:10">--</operator><name pos:start="19:11" pos:end="19:30"><name pos:start="19:11" pos:end="19:12">bs</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:30">io_plug_disabled</name></name> <operator pos:start="19:32" pos:end="19:33">==</operator> <literal type="number" pos:start="19:35" pos:end="19:35">0</literal> <operator pos:start="19:37" pos:end="19:38">&amp;&amp;</operator> <name pos:start="19:40" pos:end="19:53"><name pos:start="19:40" pos:end="19:41">bs</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:53">io_plugged</name></name> <operator pos:start="19:55" pos:end="19:55">&gt;</operator> <literal type="number" pos:start="19:57" pos:end="19:57">0</literal></expr>)</condition> <block pos:start="19:60" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <decl_stmt pos:start="21:9" pos:end="21:35"><decl pos:start="21:9" pos:end="21:34"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">BlockDriver</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:24">drv</name> <init pos:start="21:26" pos:end="21:34">= <expr pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:29">bs</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:34">drv</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:37">(<expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:15">drv</name> <operator pos:start="23:17" pos:end="23:18">&amp;&amp;</operator> <name pos:start="23:20" pos:end="23:36"><name pos:start="23:20" pos:end="23:22">drv</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:36">bdrv_io_plug</name></name></expr>)</condition> <block pos:start="23:39" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:34">

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:15">drv</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:29">bdrv_io_plug</name></name><argument_list pos:start="25:30" pos:end="25:33">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
