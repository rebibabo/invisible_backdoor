<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3893.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">ff_check_pixfmt_descriptors</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list><block pos:start="1:39" pos:end="79:1">{<block_content pos:start="3:5" pos:end="77:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="77:5">for <control pos:start="7:9" pos:end="7:60">(<init pos:start="7:10" pos:end="7:13"><expr pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:10">i</name><operator pos:start="7:11" pos:end="7:11">=</operator><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr>;</init> <condition pos:start="7:15" pos:end="7:55"><expr pos:start="7:15" pos:end="7:54"><name pos:start="7:15" pos:end="7:15">i</name><operator pos:start="7:16" pos:end="7:16">&lt;</operator><call pos:start="7:17" pos:end="7:54"><name pos:start="7:17" pos:end="7:30">FF_ARRAY_ELEMS</name><argument_list pos:start="7:31" pos:end="7:54">(<argument pos:start="7:32" pos:end="7:53"><expr pos:start="7:32" pos:end="7:53"><name pos:start="7:32" pos:end="7:53">av_pix_fmt_descriptors</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="7:57" pos:end="7:59"><expr pos:start="7:57" pos:end="7:59"><name pos:start="7:57" pos:end="7:57">i</name><operator pos:start="7:58" pos:end="7:59">++</operator></expr></incr>)</control> <block pos:start="7:62" pos:end="77:5">{<block_content pos:start="9:9" pos:end="75:9">

        <decl_stmt pos:start="9:9" pos:end="9:65"><decl pos:start="9:9" pos:end="9:64"><type pos:start="9:9" pos:end="9:34"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:32">AVPixFmtDescriptor</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:35">d</name> <init pos:start="9:37" pos:end="9:64">= <expr pos:start="9:39" pos:end="9:64"><operator pos:start="9:39" pos:end="9:39">&amp;</operator><name pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:61">av_pix_fmt_descriptors</name><index pos:start="9:62" pos:end="9:64">[<expr pos:start="9:63" pos:end="9:63"><name pos:start="9:63" pos:end="9:63">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:39"><decl pos:start="11:9" pos:end="11:38"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">uint8_t</name></type> <name pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:20">fill</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">4</literal></expr>]</index><index pos:start="11:24" pos:end="11:30">[<expr pos:start="11:25" pos:end="11:29"><literal type="number" pos:start="11:25" pos:end="11:26">8</literal><operator pos:start="11:26" pos:end="11:26">+</operator><literal type="number" pos:start="11:27" pos:end="11:28">6</literal><operator pos:start="11:28" pos:end="11:28">+</operator><literal type="number" pos:start="11:29" pos:end="11:29">3</literal></expr>]</index></name> <init pos:start="11:32" pos:end="11:38">= <expr pos:start="11:34" pos:end="11:38"><block pos:start="11:34" pos:end="11:38">{<expr pos:start="11:35" pos:end="11:37"><block pos:start="11:35" pos:end="11:37">{<expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:64"><decl pos:start="13:9" pos:end="13:63"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:21">data</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">4</literal></expr>]</index></name> <init pos:start="13:26" pos:end="13:63">= <expr pos:start="13:28" pos:end="13:63"><block pos:start="13:28" pos:end="13:63">{<expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:32">fill</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr>]</index></name></expr>, <expr pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:41">fill</name><index pos:start="13:42" pos:end="13:44">[<expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr>]</index></name></expr>, <expr pos:start="13:47" pos:end="13:53"><name pos:start="13:47" pos:end="13:53"><name pos:start="13:47" pos:end="13:50">fill</name><index pos:start="13:51" pos:end="13:53">[<expr pos:start="13:52" pos:end="13:52"><literal type="number" pos:start="13:52" pos:end="13:52">2</literal></expr>]</index></name></expr>, <expr pos:start="13:56" pos:end="13:62"><name pos:start="13:56" pos:end="13:62"><name pos:start="13:56" pos:end="13:59">fill</name><index pos:start="13:60" pos:end="13:62">[<expr pos:start="13:61" pos:end="13:61"><literal type="number" pos:start="13:61" pos:end="13:61">3</literal></expr>]</index></name></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:20">linesize</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">4</literal></expr>]</index></name> <init pos:start="15:25" pos:end="15:35">= <expr pos:start="15:27" pos:end="15:35"><block pos:start="15:27" pos:end="15:35">{<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>,<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">0</literal></expr>,<expr pos:start="15:32" pos:end="15:32"><literal type="number" pos:start="15:32" pos:end="15:32">0</literal></expr>,<expr pos:start="15:34" pos:end="15:34"><literal type="number" pos:start="15:34" pos:end="15:34">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:24"><decl pos:start="17:9" pos:end="17:23"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint16_t</name></type> <name pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:20">tmp</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:97">(<expr pos:start="21:13" pos:end="21:96"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:14">d</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">name</name></name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <operator pos:start="21:25" pos:end="21:25">!</operator><name pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:26">d</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:41">nb_components</name></name> <operator pos:start="21:43" pos:end="21:44">&amp;&amp;</operator> <operator pos:start="21:46" pos:end="21:46">!</operator><name pos:start="21:47" pos:end="21:62"><name pos:start="21:47" pos:end="21:47">d</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:62">log2_chroma_w</name></name> <operator pos:start="21:64" pos:end="21:65">&amp;&amp;</operator> <operator pos:start="21:67" pos:end="21:67">!</operator><name pos:start="21:68" pos:end="21:83"><name pos:start="21:68" pos:end="21:68">d</name><operator pos:start="21:69" pos:end="21:70">-&gt;</operator><name pos:start="21:71" pos:end="21:83">log2_chroma_h</name></name> <operator pos:start="21:85" pos:end="21:86">&amp;&amp;</operator> <operator pos:start="21:88" pos:end="21:88">!</operator><name pos:start="21:89" pos:end="21:96"><name pos:start="21:89" pos:end="21:89">d</name><operator pos:start="21:90" pos:end="21:91">-&gt;</operator><name pos:start="21:92" pos:end="21:96">flags</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>

<comment type="line" pos:start="25:1" pos:end="25:65">//         av_log(NULL, AV_LOG_DEBUG, "Checking: %s\n", d-&gt;name);</comment>

        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><call pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:18">av_assert0</name><argument_list pos:start="27:19" pos:end="27:41">(<argument pos:start="27:20" pos:end="27:40"><expr pos:start="27:20" pos:end="27:40"><name pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:20">d</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:35">log2_chroma_w</name></name> <operator pos:start="27:37" pos:end="27:38">&lt;=</operator> <literal type="number" pos:start="27:40" pos:end="27:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:18">av_assert0</name><argument_list pos:start="29:19" pos:end="29:41">(<argument pos:start="29:20" pos:end="29:40"><expr pos:start="29:20" pos:end="29:40"><name pos:start="29:20" pos:end="29:35"><name pos:start="29:20" pos:end="29:20">d</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:35">log2_chroma_h</name></name> <operator pos:start="29:37" pos:end="29:38">&lt;=</operator> <literal type="number" pos:start="29:40" pos:end="29:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><call pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:18">av_assert0</name><argument_list pos:start="31:19" pos:end="31:41">(<argument pos:start="31:20" pos:end="31:40"><expr pos:start="31:20" pos:end="31:40"><name pos:start="31:20" pos:end="31:35"><name pos:start="31:20" pos:end="31:20">d</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:35">nb_components</name></name> <operator pos:start="31:37" pos:end="31:38">&lt;=</operator> <literal type="number" pos:start="31:40" pos:end="31:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><call pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:18">av_assert0</name><argument_list pos:start="33:19" pos:end="33:41">(<argument pos:start="33:20" pos:end="33:40"><expr pos:start="33:20" pos:end="33:40"><name pos:start="33:20" pos:end="33:26"><name pos:start="33:20" pos:end="33:20">d</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:26">name</name></name> <operator pos:start="33:28" pos:end="33:29">&amp;&amp;</operator> <name pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:31">d</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">name</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:105"><expr pos:start="35:9" pos:end="35:104"><call pos:start="35:9" pos:end="35:104"><name pos:start="35:9" pos:end="35:18">av_assert0</name><argument_list pos:start="35:19" pos:end="35:104">(<argument pos:start="35:20" pos:end="35:103"><expr pos:start="35:20" pos:end="35:103"><operator pos:start="35:20" pos:end="35:20">(</operator><name pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:21">d</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:36">nb_components</name></name><operator pos:start="35:37" pos:end="35:38">==</operator><literal type="number" pos:start="35:39" pos:end="35:39">4</literal> <operator pos:start="35:41" pos:end="35:42">||</operator> <name pos:start="35:44" pos:end="35:59"><name pos:start="35:44" pos:end="35:44">d</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:59">nb_components</name></name><operator pos:start="35:60" pos:end="35:61">==</operator><literal type="number" pos:start="35:62" pos:end="35:62">2</literal><operator pos:start="35:63" pos:end="35:63">)</operator> <operator pos:start="35:65" pos:end="35:66">==</operator> <operator pos:start="35:68" pos:end="35:68">!</operator><operator pos:start="35:69" pos:end="35:69">!</operator><operator pos:start="35:70" pos:end="35:70">(</operator><name pos:start="35:71" pos:end="35:78"><name pos:start="35:71" pos:end="35:71">d</name><operator pos:start="35:72" pos:end="35:73">-&gt;</operator><name pos:start="35:74" pos:end="35:78">flags</name></name> <operator pos:start="35:80" pos:end="35:80">&amp;</operator> <name pos:start="35:82" pos:end="35:102">AV_PIX_FMT_FLAG_ALPHA</name><operator pos:start="35:103" pos:end="35:103">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:18">av_assert2</name><argument_list pos:start="37:19" pos:end="37:48">(<argument pos:start="37:20" pos:end="37:47"><expr pos:start="37:20" pos:end="37:47"><call pos:start="37:20" pos:end="37:42"><name pos:start="37:20" pos:end="37:33">av_get_pix_fmt</name><argument_list pos:start="37:34" pos:end="37:42">(<argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:35">d</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:44" pos:end="37:45">==</operator> <name pos:start="37:47" pos:end="37:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="41:9" pos:end="75:9">for <control pos:start="41:13" pos:end="41:49">(<init pos:start="41:14" pos:end="41:17"><expr pos:start="41:14" pos:end="41:16"><name pos:start="41:14" pos:end="41:14">j</name><operator pos:start="41:15" pos:end="41:15">=</operator><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</init> <condition pos:start="41:19" pos:end="41:44"><expr pos:start="41:19" pos:end="41:43"><name pos:start="41:19" pos:end="41:19">j</name><operator pos:start="41:20" pos:end="41:20">&lt;</operator><call pos:start="41:21" pos:end="41:43"><name pos:start="41:21" pos:end="41:34">FF_ARRAY_ELEMS</name><argument_list pos:start="41:35" pos:end="41:43">(<argument pos:start="41:36" pos:end="41:42"><expr pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:36">d</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:42">comp</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="41:46" pos:end="41:48"><expr pos:start="41:46" pos:end="41:48"><name pos:start="41:46" pos:end="41:46">j</name><operator pos:start="41:47" pos:end="41:48">++</operator></expr></incr>)</control> <block pos:start="41:51" pos:end="75:9">{<block_content pos:start="43:13" pos:end="73:68">

            <decl_stmt pos:start="43:13" pos:end="43:57"><decl pos:start="43:13" pos:end="43:56"><type pos:start="43:13" pos:end="43:41"><specifier pos:start="43:13" pos:end="43:17">const</specifier> <name pos:start="43:19" pos:end="43:39">AVComponentDescriptor</name> <modifier pos:start="43:41" pos:end="43:41">*</modifier></type><name pos:start="43:42" pos:end="43:42">c</name> <init pos:start="43:44" pos:end="43:56">= <expr pos:start="43:46" pos:end="43:56"><operator pos:start="43:46" pos:end="43:46">&amp;</operator><name pos:start="43:47" pos:end="43:56"><name pos:start="43:47" pos:end="43:47">d</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:53">comp</name><index pos:start="43:54" pos:end="43:56">[<expr pos:start="43:55" pos:end="43:55"><name pos:start="43:55" pos:end="43:55">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if<condition pos:start="45:15" pos:end="45:35">(<expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:16">j</name><operator pos:start="45:17" pos:end="45:18">&gt;=</operator><name pos:start="45:19" pos:end="45:34"><name pos:start="45:19" pos:end="45:19">d</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:34">nb_components</name></name></expr>)</condition> <block pos:start="45:37" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:25">

                <expr_stmt pos:start="47:17" pos:end="47:110"><expr pos:start="47:17" pos:end="47:109"><call pos:start="47:17" pos:end="47:109"><name pos:start="47:17" pos:end="47:26">av_assert0</name><argument_list pos:start="47:27" pos:end="47:109">(<argument pos:start="47:28" pos:end="47:108"><expr pos:start="47:28" pos:end="47:108"><operator pos:start="47:28" pos:end="47:28">!</operator><name pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:29">c</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:36">plane</name></name> <operator pos:start="47:38" pos:end="47:39">&amp;&amp;</operator> <operator pos:start="47:41" pos:end="47:41">!</operator><name pos:start="47:42" pos:end="47:55"><name pos:start="47:42" pos:end="47:42">c</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:55">step_minus1</name></name> <operator pos:start="47:57" pos:end="47:58">&amp;&amp;</operator> <operator pos:start="47:60" pos:end="47:60">!</operator><name pos:start="47:61" pos:end="47:75"><name pos:start="47:61" pos:end="47:61">c</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:75">offset_plus1</name></name> <operator pos:start="47:77" pos:end="47:78">&amp;&amp;</operator> <operator pos:start="47:80" pos:end="47:80">!</operator><name pos:start="47:81" pos:end="47:88"><name pos:start="47:81" pos:end="47:81">c</name><operator pos:start="47:82" pos:end="47:83">-&gt;</operator><name pos:start="47:84" pos:end="47:88">shift</name></name> <operator pos:start="47:90" pos:end="47:91">&amp;&amp;</operator> <operator pos:start="47:93" pos:end="47:93">!</operator><name pos:start="47:94" pos:end="47:108"><name pos:start="47:94" pos:end="47:94">c</name><operator pos:start="47:95" pos:end="47:96">-&gt;</operator><name pos:start="47:97" pos:end="47:108">depth_minus1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="49:17" pos:end="49:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="61:13"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:53">(<expr pos:start="53:17" pos:end="53:52"><name pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:17">d</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">flags</name></name> <operator pos:start="53:26" pos:end="53:26">&amp;</operator> <name pos:start="53:28" pos:end="53:52">AV_PIX_FMT_FLAG_BITSTREAM</name></expr>)</condition> <block pos:start="53:55" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:62">

                <expr_stmt pos:start="55:17" pos:end="55:62"><expr pos:start="55:17" pos:end="55:61"><call pos:start="55:17" pos:end="55:61"><name pos:start="55:17" pos:end="55:26">av_assert0</name><argument_list pos:start="55:27" pos:end="55:61">(<argument pos:start="55:28" pos:end="55:60"><expr pos:start="55:28" pos:end="55:60"><name pos:start="55:28" pos:end="55:41"><name pos:start="55:28" pos:end="55:28">c</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:41">step_minus1</name></name> <operator pos:start="55:43" pos:end="55:44">&gt;=</operator> <name pos:start="55:46" pos:end="55:60"><name pos:start="55:46" pos:end="55:46">c</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:60">depth_minus1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="61:13">else <block pos:start="57:20" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:70">

                <expr_stmt pos:start="59:17" pos:end="59:70"><expr pos:start="59:17" pos:end="59:69"><call pos:start="59:17" pos:end="59:69"><name pos:start="59:17" pos:end="59:26">av_assert0</name><argument_list pos:start="59:27" pos:end="59:69">(<argument pos:start="59:28" pos:end="59:68"><expr pos:start="59:28" pos:end="59:68"><literal type="number" pos:start="59:28" pos:end="59:28">8</literal><operator pos:start="59:29" pos:end="59:29">*</operator><operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:44"><name pos:start="59:31" pos:end="59:31">c</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:44">step_minus1</name></name><operator pos:start="59:45" pos:end="59:45">+</operator><literal type="number" pos:start="59:46" pos:end="59:46">1</literal><operator pos:start="59:47" pos:end="59:47">)</operator> <operator pos:start="59:49" pos:end="59:50">&gt;=</operator> <name pos:start="59:52" pos:end="59:66"><name pos:start="59:52" pos:end="59:52">c</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:66">depth_minus1</name></name><operator pos:start="59:67" pos:end="59:67">+</operator><literal type="number" pos:start="59:68" pos:end="59:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:77"><expr pos:start="63:13" pos:end="63:76"><call pos:start="63:13" pos:end="63:76"><name pos:start="63:13" pos:end="63:30">av_read_image_line</name><argument_list pos:start="63:31" pos:end="63:76">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">tmp</name></expr></argument>, <argument pos:start="63:37" pos:end="63:47"><expr pos:start="63:37" pos:end="63:47"><operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:41">void</name><operator pos:start="63:42" pos:end="63:42">*</operator><operator pos:start="63:43" pos:end="63:43">)</operator><name pos:start="63:44" pos:end="63:47">data</name></expr></argument>, <argument pos:start="63:50" pos:end="63:57"><expr pos:start="63:50" pos:end="63:57"><name pos:start="63:50" pos:end="63:57">linesize</name></expr></argument>, <argument pos:start="63:60" pos:end="63:60"><expr pos:start="63:60" pos:end="63:60"><name pos:start="63:60" pos:end="63:60">d</name></expr></argument>, <argument pos:start="63:63" pos:end="63:63"><expr pos:start="63:63" pos:end="63:63"><literal type="number" pos:start="63:63" pos:end="63:63">0</literal></expr></argument>, <argument pos:start="63:66" pos:end="63:66"><expr pos:start="63:66" pos:end="63:66"><literal type="number" pos:start="63:66" pos:end="63:66">0</literal></expr></argument>, <argument pos:start="63:69" pos:end="63:69"><expr pos:start="63:69" pos:end="63:69"><name pos:start="63:69" pos:end="63:69">j</name></expr></argument>, <argument pos:start="63:72" pos:end="63:72"><expr pos:start="63:72" pos:end="63:72"><literal type="number" pos:start="63:72" pos:end="63:72">2</literal></expr></argument>, <argument pos:start="63:75" pos:end="63:75"><expr pos:start="63:75" pos:end="63:75"><literal type="number" pos:start="63:75" pos:end="63:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:25"><if pos:start="65:13" pos:end="67:25">if <condition pos:start="65:16" pos:end="65:47">(<expr pos:start="65:17" pos:end="65:46"><operator pos:start="65:17" pos:end="65:17">!</operator><call pos:start="65:18" pos:end="65:46"><name pos:start="65:18" pos:end="65:24">strncmp</name><argument_list pos:start="65:25" pos:end="65:46">(<argument pos:start="65:26" pos:end="65:32"><expr pos:start="65:26" pos:end="65:32"><name pos:start="65:26" pos:end="65:32"><name pos:start="65:26" pos:end="65:26">d</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">name</name></name></expr></argument>, <argument pos:start="65:35" pos:end="65:42"><expr pos:start="65:35" pos:end="65:42"><literal type="string" pos:start="65:35" pos:end="65:42">"bayer_"</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><literal type="number" pos:start="65:45" pos:end="65:45">6</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:25"><block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:51"><expr pos:start="69:13" pos:end="69:50"><call pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:22">av_assert0</name><argument_list pos:start="69:23" pos:end="69:50">(<argument pos:start="69:24" pos:end="69:49"><expr pos:start="69:24" pos:end="69:49"><name pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:26">tmp</name><index pos:start="69:27" pos:end="69:29">[<expr pos:start="69:28" pos:end="69:28"><literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>]</index></name> <operator pos:start="69:31" pos:end="69:32">==</operator> <literal type="number" pos:start="69:34" pos:end="69:34">0</literal> <operator pos:start="69:36" pos:end="69:37">&amp;&amp;</operator> <name pos:start="69:39" pos:end="69:44"><name pos:start="69:39" pos:end="69:41">tmp</name><index pos:start="69:42" pos:end="69:44">[<expr pos:start="69:43" pos:end="69:43"><literal type="number" pos:start="69:43" pos:end="69:43">1</literal></expr>]</index></name> <operator pos:start="69:46" pos:end="69:47">==</operator> <literal type="number" pos:start="69:49" pos:end="69:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:61"><expr pos:start="71:13" pos:end="71:60"><name pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:15">tmp</name><index pos:start="71:16" pos:end="71:18">[<expr pos:start="71:17" pos:end="71:17"><literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>]</index></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:27"><name pos:start="71:22" pos:end="71:24">tmp</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr>]</index></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <operator pos:start="71:31" pos:end="71:31">(</operator><literal type="number" pos:start="71:32" pos:end="71:32">1</literal><operator pos:start="71:33" pos:end="71:34">&lt;&lt;</operator><operator pos:start="71:35" pos:end="71:35">(</operator><name pos:start="71:36" pos:end="71:50"><name pos:start="71:36" pos:end="71:36">c</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:50">depth_minus1</name></name> <operator pos:start="71:52" pos:end="71:52">+</operator> <literal type="number" pos:start="71:54" pos:end="71:54">1</literal><operator pos:start="71:55" pos:end="71:55">)</operator><operator pos:start="71:56" pos:end="71:56">)</operator> <operator pos:start="71:58" pos:end="71:58">-</operator> <literal type="number" pos:start="71:60" pos:end="71:60">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:68"><expr pos:start="73:13" pos:end="73:67"><call pos:start="73:13" pos:end="73:67"><name pos:start="73:13" pos:end="73:31">av_write_image_line</name><argument_list pos:start="73:32" pos:end="73:67">(<argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">tmp</name></expr></argument>, <argument pos:start="73:38" pos:end="73:41"><expr pos:start="73:38" pos:end="73:41"><name pos:start="73:38" pos:end="73:41">data</name></expr></argument>, <argument pos:start="73:44" pos:end="73:51"><expr pos:start="73:44" pos:end="73:51"><name pos:start="73:44" pos:end="73:51">linesize</name></expr></argument>, <argument pos:start="73:54" pos:end="73:54"><expr pos:start="73:54" pos:end="73:54"><name pos:start="73:54" pos:end="73:54">d</name></expr></argument>, <argument pos:start="73:57" pos:end="73:57"><expr pos:start="73:57" pos:end="73:57"><literal type="number" pos:start="73:57" pos:end="73:57">0</literal></expr></argument>, <argument pos:start="73:60" pos:end="73:60"><expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">0</literal></expr></argument>, <argument pos:start="73:63" pos:end="73:63"><expr pos:start="73:63" pos:end="73:63"><name pos:start="73:63" pos:end="73:63">j</name></expr></argument>, <argument pos:start="73:66" pos:end="73:66"><expr pos:start="73:66" pos:end="73:66"><literal type="number" pos:start="73:66" pos:end="73:66">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
