<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5192.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_filter</name><parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">spec</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:65"><name pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:62">USBAutoFilter</name></name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <enum pos:start="5:5" pos:end="5:38">enum <block pos:start="5:10" pos:end="5:37">{ <decl pos:start="5:12" pos:end="5:14"><name pos:start="5:12" pos:end="5:14">BUS</name></decl>, <decl pos:start="5:17" pos:end="5:19"><name pos:start="5:17" pos:end="5:19">DEV</name></decl>, <decl pos:start="5:22" pos:end="5:24"><name pos:start="5:22" pos:end="5:24">VID</name></decl>, <decl pos:start="5:27" pos:end="5:29"><name pos:start="5:27" pos:end="5:29">PID</name></decl>, <decl pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">DONE</name></decl> }</block>;</enum>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">spec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">f</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:14">bus_num</name></name>    <operator pos:start="13:19" pos:end="13:19">=</operator> <operator pos:start="13:21" pos:end="13:21">-</operator><literal type="number" pos:start="13:22" pos:end="13:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">f</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">addr</name></name>       <operator pos:start="15:19" pos:end="15:19">=</operator> <operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">f</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">vendor_id</name></name>  <operator pos:start="17:19" pos:end="17:19">=</operator> <operator pos:start="17:21" pos:end="17:21">-</operator><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">f</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">product_id</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">-</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="51:5">for <control pos:start="23:9" pos:end="23:32">(<init pos:start="23:10" pos:end="23:17"><expr pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">BUS</name></expr>;</init> <condition pos:start="23:19" pos:end="23:27"><expr pos:start="23:19" pos:end="23:26"><name pos:start="23:19" pos:end="23:19">i</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:26">DONE</name></expr>;</condition> <incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control> <block pos:start="23:34" pos:end="51:5">{<block_content pos:start="25:9" pos:end="49:9">

    	<expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:9">p</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:19">strpbrk</name><argument_list pos:start="25:20" pos:end="25:28">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">p</name></expr></argument>, <argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><literal type="string" pos:start="25:24" pos:end="25:27">":."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    	<if_stmt pos:start="27:9" pos:end="27:22"><if pos:start="27:9" pos:end="27:22">if <condition pos:start="27:12" pos:end="27:15">(<expr pos:start="27:13" pos:end="27:14"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:14">p</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:22"><block_content pos:start="27:17" pos:end="27:22"> <break pos:start="27:17" pos:end="27:22">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:12"><expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:9">p</name><operator pos:start="29:10" pos:end="29:11">++</operator></expr>;</expr_stmt>

 

    	<if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">p</name> <operator pos:start="33:16" pos:end="33:17">==</operator> <literal type="char" pos:start="33:19" pos:end="33:21">'*'</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <switch pos:start="39:9" pos:end="49:9">switch<condition pos:start="39:15" pos:end="39:17">(<expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">i</name></expr>)</condition> <block pos:start="39:19" pos:end="49:9">{<block_content pos:start="41:9" pos:end="47:61">

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><name pos:start="41:14" pos:end="41:16">BUS</name></expr>:</case> <expr_stmt pos:start="41:19" pos:end="41:51"><expr pos:start="41:19" pos:end="41:50"><name pos:start="41:19" pos:end="41:28"><name pos:start="41:19" pos:end="41:19">f</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:28">bus_num</name></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <call pos:start="41:32" pos:end="41:50"><name pos:start="41:32" pos:end="41:37">strtol</name><argument_list pos:start="41:38" pos:end="41:50">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">p</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">NULL</name></expr></argument>, <argument pos:start="41:48" pos:end="41:49"><expr pos:start="41:48" pos:end="41:49"><literal type="number" pos:start="41:48" pos:end="41:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="41:56" pos:end="41:61">break;</break>

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><name pos:start="43:14" pos:end="43:16">DEV</name></expr>:</case> <expr_stmt pos:start="43:19" pos:end="43:51"><expr pos:start="43:19" pos:end="43:50"><name pos:start="43:19" pos:end="43:25"><name pos:start="43:19" pos:end="43:19">f</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">addr</name></name>    <operator pos:start="43:30" pos:end="43:30">=</operator> <call pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:37">strtol</name><argument_list pos:start="43:38" pos:end="43:50">(<argument pos:start="43:39" pos:end="43:39"><expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">p</name></expr></argument>, <argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">NULL</name></expr></argument>, <argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><literal type="number" pos:start="43:48" pos:end="43:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="43:56" pos:end="43:61">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><name pos:start="45:14" pos:end="45:16">VID</name></expr>:</case> <expr_stmt pos:start="45:19" pos:end="45:54"><expr pos:start="45:19" pos:end="45:53"><name pos:start="45:19" pos:end="45:30"><name pos:start="45:19" pos:end="45:19">f</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:30">vendor_id</name></name>  <operator pos:start="45:33" pos:end="45:33">=</operator> <call pos:start="45:35" pos:end="45:53"><name pos:start="45:35" pos:end="45:40">strtol</name><argument_list pos:start="45:41" pos:end="45:53">(<argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><name pos:start="45:42" pos:end="45:42">p</name></expr></argument>, <argument pos:start="45:45" pos:end="45:48"><expr pos:start="45:45" pos:end="45:48"><name pos:start="45:45" pos:end="45:48">NULL</name></expr></argument>, <argument pos:start="45:51" pos:end="45:52"><expr pos:start="45:51" pos:end="45:52"><literal type="number" pos:start="45:51" pos:end="45:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="45:56" pos:end="45:61">break;</break>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:16">PID</name></expr>:</case> <expr_stmt pos:start="47:19" pos:end="47:54"><expr pos:start="47:19" pos:end="47:53"><name pos:start="47:19" pos:end="47:31"><name pos:start="47:19" pos:end="47:19">f</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:31">product_id</name></name> <operator pos:start="47:33" pos:end="47:33">=</operator> <call pos:start="47:35" pos:end="47:53"><name pos:start="47:35" pos:end="47:40">strtol</name><argument_list pos:start="47:41" pos:end="47:53">(<argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><name pos:start="47:42" pos:end="47:42">p</name></expr></argument>, <argument pos:start="47:45" pos:end="47:48"><expr pos:start="47:45" pos:end="47:48"><name pos:start="47:45" pos:end="47:48">NULL</name></expr></argument>, <argument pos:start="47:51" pos:end="47:52"><expr pos:start="47:51" pos:end="47:52"><literal type="number" pos:start="47:51" pos:end="47:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="47:56" pos:end="47:61">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">i</name> <operator pos:start="55:11" pos:end="55:11">&lt;</operator> <name pos:start="55:13" pos:end="55:15">DEV</name></expr>)</condition> <block pos:start="55:18" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:18">

        <expr_stmt pos:start="57:9" pos:end="57:69"><expr pos:start="57:9" pos:end="57:68"><call pos:start="57:9" pos:end="57:68"><name pos:start="57:9" pos:end="57:15">fprintf</name><argument_list pos:start="57:16" pos:end="57:68">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">stderr</name></expr></argument>, <argument pos:start="57:25" pos:end="57:61"><expr pos:start="57:25" pos:end="57:61"><literal type="string" pos:start="57:25" pos:end="57:61">"husb: invalid auto filter spec %s\n"</literal></expr></argument>, <argument pos:start="57:64" pos:end="57:67"><expr pos:start="57:64" pos:end="57:67"><name pos:start="57:64" pos:end="57:67">spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
