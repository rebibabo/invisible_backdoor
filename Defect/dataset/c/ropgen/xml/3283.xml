<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3283.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">dyn_buf_write</name><parameter_list pos:start="1:25" pos:end="1:66">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">buf</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:65">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:20">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DynBuffer</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">new_size</name></decl>, <decl pos:start="7:19" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:36">new_allocated_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:37">/* reallocate buffer if needed */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:12">new_size</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:21"><name pos:start="13:16" pos:end="13:16">d</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:21">pos</name></name> <operator pos:start="13:23" pos:end="13:23">+</operator> <name pos:start="13:25" pos:end="13:32">buf_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:22">new_allocated_size</name> <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:26">d</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:42">allocated_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if<condition pos:start="17:7" pos:end="17:49">(<expr pos:start="17:8" pos:end="17:48"><name pos:start="17:8" pos:end="17:38"><name pos:start="17:8" pos:end="17:15">new_size</name> <argument_list type="generic" pos:start="17:17" pos:end="17:38">&lt; <argument pos:start="17:19" pos:end="17:36"><expr pos:start="17:19" pos:end="17:36"><name pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:19">d</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">pos</name></name> <operator pos:start="17:26" pos:end="17:27">||</operator> <name pos:start="17:29" pos:end="17:36">new_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="17:40" pos:end="17:46">INT_MAX</name><operator pos:start="17:47" pos:end="17:47">/</operator><literal type="number" pos:start="17:48" pos:end="17:48">2</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="21:5" pos:end="31:5">while <condition pos:start="21:11" pos:end="21:41">(<expr pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:19">new_size</name> <operator pos:start="21:21" pos:end="21:21">&gt;</operator> <name pos:start="21:23" pos:end="21:40">new_allocated_size</name></expr>)</condition> <block pos:start="21:43" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:61">

        <if_stmt pos:start="23:9" pos:end="29:61"><if pos:start="23:9" pos:end="25:42">if <condition pos:start="23:12" pos:end="23:32">(<expr pos:start="23:13" pos:end="23:31"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:31">new_allocated_size</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:42"><block_content pos:start="25:13" pos:end="25:42">

            <expr_stmt pos:start="25:13" pos:end="25:42"><expr pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:30">new_allocated_size</name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:41">new_size</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="27:9" pos:end="29:61">else<block type="pseudo" pos:start="29:13" pos:end="29:61"><block_content pos:start="29:13" pos:end="29:61">

            <expr_stmt pos:start="29:13" pos:end="29:61"><expr pos:start="29:13" pos:end="29:60"><name pos:start="29:13" pos:end="29:30">new_allocated_size</name> <operator pos:start="29:32" pos:end="29:33">+=</operator> <name pos:start="29:35" pos:end="29:52">new_allocated_size</name> <operator pos:start="29:54" pos:end="29:54">/</operator> <literal type="number" pos:start="29:56" pos:end="29:58">2</literal> <operator pos:start="29:58" pos:end="29:58">+</operator> <literal type="number" pos:start="29:60" pos:end="29:60">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:47">(<expr pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:26">new_allocated_size</name> <operator pos:start="35:28" pos:end="35:28">&gt;</operator> <name pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:30">d</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:46">allocated_size</name></name></expr>)</condition> <block pos:start="35:49" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:47">

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">d</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">buffer</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:61"><name pos:start="37:21" pos:end="37:30">av_realloc</name><argument_list pos:start="37:31" pos:end="37:61">(<argument pos:start="37:32" pos:end="37:40"><expr pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:32">d</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:40">buffer</name></name></expr></argument>, <argument pos:start="37:43" pos:end="37:60"><expr pos:start="37:43" pos:end="37:60"><name pos:start="37:43" pos:end="37:60">new_allocated_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:26"><if pos:start="39:9" pos:end="41:26">if<condition pos:start="39:11" pos:end="39:29">(<expr pos:start="39:12" pos:end="39:28"><name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:12">d</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:20">buffer</name></name> <operator pos:start="39:22" pos:end="39:23">==</operator> <name pos:start="39:25" pos:end="39:28">NULL</name></expr>)</condition><block type="pseudo" pos:start="41:14" pos:end="41:26"><block_content pos:start="41:14" pos:end="41:26">

             <return pos:start="41:14" pos:end="41:26">return <expr pos:start="41:21" pos:end="41:25"><operator pos:start="41:21" pos:end="41:21">-</operator><literal type="number" pos:start="41:22" pos:end="41:25">1234</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:9">d</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:25">allocated_size</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:46">new_allocated_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><call pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:45">(<argument pos:start="47:12" pos:end="47:29"><expr pos:start="47:12" pos:end="47:29"><name pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:12">d</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:20">buffer</name></name> <operator pos:start="47:22" pos:end="47:22">+</operator> <name pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:24">d</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:29">pos</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">buf</name></expr></argument>, <argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:22"><expr pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:5">d</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:10">pos</name></name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:21">new_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:25"><if pos:start="51:5" pos:end="53:25">if <condition pos:start="51:8" pos:end="51:25">(<expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">d</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">pos</name></name> <operator pos:start="51:16" pos:end="51:16">&gt;</operator> <name pos:start="51:18" pos:end="51:24"><name pos:start="51:18" pos:end="51:18">d</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:24">size</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:25"><block_content pos:start="53:9" pos:end="53:25">

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">d</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">size</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:24"><name pos:start="53:19" pos:end="53:19">d</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:24">pos</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="55:5" pos:end="55:20">return <expr pos:start="55:12" pos:end="55:19"><name pos:start="55:12" pos:end="55:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
