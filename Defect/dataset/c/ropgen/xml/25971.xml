<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25971.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:46">(<argument pos:start="1:32" pos:end="1:43">M68kCPU *cpu</argument>, <argument pos:start="1:46" pos:end="1:65">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:45">bool search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="247:1">{<block_content pos:start="7:5" pos:end="239:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPUM68KState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">cpu</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">DisasContext</name></type> <name pos:start="11:18" pos:end="11:20">dc1</name></decl>, <decl pos:start="11:23" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:25">dc</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:32">dc1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">CPUBreakpoint</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">j</name></decl>, <decl pos:start="17:12" pos:end="17:13"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:25">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">pc_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">max_insns</name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:36">/* generate intermediate code */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:12">pc_start</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:17">tb</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">pc</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:6">dc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:10">tb</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:15">gen_opc_end</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:25">tcg_ctx</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:37">gen_opc_buf</name></name> <operator pos:start="39:39" pos:end="39:39">+</operator> <name pos:start="39:41" pos:end="39:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:11">env</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:17">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:14">is_jmp</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:10">pc</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">cc_op</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:29">CC_OP_DYNAMIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:52"><expr pos:start="51:5" pos:end="51:51"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:26">singlestep_enabled</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:51"><name pos:start="51:30" pos:end="51:31">cs</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:51">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:6">dc</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:12">fpcr</name></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:18">env</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:24">fpcr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:6">dc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:12">user</name></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">sr</name></name> <operator pos:start="55:25" pos:end="55:25">&amp;</operator> <name pos:start="55:27" pos:end="55:30">SR_S</name><operator pos:start="55:31" pos:end="55:31">)</operator> <operator pos:start="55:33" pos:end="55:34">==</operator> <literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:14">is_mem</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:16">done_mac</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:12"><expr pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:6">lj</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <operator pos:start="61:10" pos:end="61:10">-</operator><literal type="number" pos:start="61:11" pos:end="61:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:13">num_insns</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:13">max_insns</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:18">tb</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:26">cflags</name></name> <operator pos:start="65:28" pos:end="65:28">&amp;</operator> <name pos:start="65:30" pos:end="65:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="69:34"><if pos:start="67:5" pos:end="69:34">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:17">max_insns</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:34"><block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:17">max_insns</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><call pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:16">gen_tb_start</name><argument_list pos:start="73:17" pos:end="73:18">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="75:5" pos:end="143:36">do <block pos:start="75:8" pos:end="135:5">{<block_content pos:start="77:9" pos:end="133:20">

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:17">pc_offset</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:22">dc</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:26">pc</name></name> <operator pos:start="77:28" pos:end="77:28">-</operator> <name pos:start="77:30" pos:end="77:37">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:28">gen_throws_exception</name> <operator pos:start="79:30" pos:end="79:30">=</operator> <name pos:start="79:32" pos:end="79:35">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="101:9"><if pos:start="81:9" pos:end="101:9">if <condition pos:start="81:12" pos:end="81:54">(<expr pos:start="81:13" pos:end="81:53"><call pos:start="81:13" pos:end="81:53"><name pos:start="81:13" pos:end="81:20">unlikely</name><argument_list pos:start="81:21" pos:end="81:53">(<argument pos:start="81:22" pos:end="81:52"><expr pos:start="81:22" pos:end="81:52"><operator pos:start="81:22" pos:end="81:22">!</operator><call pos:start="81:23" pos:end="81:52"><name pos:start="81:23" pos:end="81:34">QTAILQ_EMPTY</name><argument_list pos:start="81:35" pos:end="81:52">(<argument pos:start="81:36" pos:end="81:51"><expr pos:start="81:36" pos:end="81:51"><operator pos:start="81:36" pos:end="81:36">&amp;</operator><name pos:start="81:37" pos:end="81:51"><name pos:start="81:37" pos:end="81:38">cs</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:51">breakpoints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:56" pos:end="101:9">{<block_content pos:start="83:13" pos:end="99:22">

            <macro pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:26">QTAILQ_FOREACH</name><argument_list pos:start="83:27" pos:end="83:55">(<argument pos:start="83:28" pos:end="83:29">bp</argument>, <argument pos:start="83:32" pos:end="83:47">&amp;cs-&gt;breakpoints</argument>, <argument pos:start="83:50" pos:end="83:54">entry</argument>)</argument_list></macro> <block pos:start="83:57" pos:end="95:13">{<block_content pos:start="85:17" pos:end="93:17">

                <if_stmt pos:start="85:17" pos:end="93:17"><if pos:start="85:17" pos:end="93:17">if <condition pos:start="85:20" pos:end="85:37">(<expr pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:22">bp</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:26">pc</name></name> <operator pos:start="85:28" pos:end="85:29">==</operator> <name pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:32">dc</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:36">pc</name></name></expr>)</condition> <block pos:start="85:39" pos:end="93:17">{<block_content pos:start="87:21" pos:end="91:26">

                    <expr_stmt pos:start="87:21" pos:end="87:58"><expr pos:start="87:21" pos:end="87:57"><call pos:start="87:21" pos:end="87:57"><name pos:start="87:21" pos:end="87:33">gen_exception</name><argument_list pos:start="87:34" pos:end="87:57">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">dc</name></expr></argument>, <argument pos:start="87:39" pos:end="87:44"><expr pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:40">dc</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:44">pc</name></name></expr></argument>, <argument pos:start="87:47" pos:end="87:56"><expr pos:start="87:47" pos:end="87:56"><name pos:start="87:47" pos:end="87:56">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:44"><expr pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:22">dc</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:30">is_jmp</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:43">DISAS_JUMP</name></expr>;</expr_stmt>

                    <break pos:start="91:21" pos:end="91:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="97:13" pos:end="99:22"><if pos:start="97:13" pos:end="99:22">if <condition pos:start="97:16" pos:end="97:27">(<expr pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:18">dc</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:26">is_jmp</name></name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:22"><block_content pos:start="99:17" pos:end="99:22">

                <break pos:start="99:17" pos:end="99:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="123:9"><if pos:start="103:9" pos:end="123:9">if <condition pos:start="103:12" pos:end="103:22">(<expr pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:21">search_pc</name></expr>)</condition> <block pos:start="103:24" pos:end="123:9">{<block_content pos:start="105:13" pos:end="121:51">

            <expr_stmt pos:start="105:13" pos:end="105:58"><expr pos:start="105:13" pos:end="105:57"><name pos:start="105:13" pos:end="105:13">j</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:23">tcg_ctx</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:35">gen_opc_ptr</name></name> <operator pos:start="105:37" pos:end="105:37">-</operator> <name pos:start="105:39" pos:end="105:57"><name pos:start="105:39" pos:end="105:45">tcg_ctx</name><operator pos:start="105:46" pos:end="105:46">.</operator><name pos:start="105:47" pos:end="105:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="115:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:23">(<expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:18">lj</name> <operator pos:start="107:20" pos:end="107:20">&lt;</operator> <name pos:start="107:22" pos:end="107:22">j</name></expr>)</condition> <block pos:start="107:25" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:58">

                <expr_stmt pos:start="109:17" pos:end="109:21"><expr pos:start="109:17" pos:end="109:20"><name pos:start="109:17" pos:end="109:18">lj</name><operator pos:start="109:19" pos:end="109:20">++</operator></expr>;</expr_stmt>

                <while pos:start="111:17" pos:end="113:58">while <condition pos:start="111:23" pos:end="111:30">(<expr pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:25">lj</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:29">j</name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:58"><block_content pos:start="113:21" pos:end="113:58">

                    <expr_stmt pos:start="113:21" pos:end="113:58"><expr pos:start="113:21" pos:end="113:57"><name pos:start="113:21" pos:end="113:53"><name pos:start="113:21" pos:end="113:27">tcg_ctx</name><operator pos:start="113:28" pos:end="113:28">.</operator><name pos:start="113:29" pos:end="113:47">gen_opc_instr_start</name><index pos:start="113:48" pos:end="113:53">[<expr pos:start="113:49" pos:end="113:52"><name pos:start="113:49" pos:end="113:50">lj</name><operator pos:start="113:51" pos:end="113:52">++</operator></expr>]</index></name> <operator pos:start="113:55" pos:end="113:55">=</operator> <literal type="number" pos:start="113:57" pos:end="113:57">0</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:44"><expr pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:19">tcg_ctx</name><operator pos:start="117:20" pos:end="117:20">.</operator><name pos:start="117:21" pos:end="117:30">gen_opc_pc</name><index pos:start="117:31" pos:end="117:34">[<expr pos:start="117:32" pos:end="117:33"><name pos:start="117:32" pos:end="117:33">lj</name></expr>]</index></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <name pos:start="117:38" pos:end="117:43"><name pos:start="117:38" pos:end="117:39">dc</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:48"><expr pos:start="119:13" pos:end="119:47"><name pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:19">tcg_ctx</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:39">gen_opc_instr_start</name><index pos:start="119:40" pos:end="119:43">[<expr pos:start="119:41" pos:end="119:42"><name pos:start="119:41" pos:end="119:42">lj</name></expr>]</index></name> <operator pos:start="119:45" pos:end="119:45">=</operator> <literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:51"><expr pos:start="121:13" pos:end="121:50"><name pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:19">tcg_ctx</name><operator pos:start="121:20" pos:end="121:20">.</operator><name pos:start="121:21" pos:end="121:34">gen_opc_icount</name><index pos:start="121:35" pos:end="121:38">[<expr pos:start="121:36" pos:end="121:37"><name pos:start="121:36" pos:end="121:37">lj</name></expr>]</index></name> <operator pos:start="121:40" pos:end="121:40">=</operator> <name pos:start="121:42" pos:end="121:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="127:27"><if pos:start="125:9" pos:end="127:27">if <condition pos:start="125:12" pos:end="125:68">(<expr pos:start="125:13" pos:end="125:67"><name pos:start="125:13" pos:end="125:21">num_insns</name> <operator pos:start="125:23" pos:end="125:23">+</operator> <literal type="number" pos:start="125:25" pos:end="125:25">1</literal> <operator pos:start="125:27" pos:end="125:28">==</operator> <name pos:start="125:30" pos:end="125:38">max_insns</name> <operator pos:start="125:40" pos:end="125:41">&amp;&amp;</operator> <operator pos:start="125:43" pos:end="125:43">(</operator><name pos:start="125:44" pos:end="125:53"><name pos:start="125:44" pos:end="125:45">tb</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:53">cflags</name></name> <operator pos:start="125:55" pos:end="125:55">&amp;</operator> <name pos:start="125:57" pos:end="125:66">CF_LAST_IO</name><operator pos:start="125:67" pos:end="125:67">)</operator></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:27"><block_content pos:start="127:13" pos:end="127:27">

            <expr_stmt pos:start="127:13" pos:end="127:27"><expr pos:start="127:13" pos:end="127:26"><call pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:24">gen_io_start</name><argument_list pos:start="127:25" pos:end="127:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:10">dc</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:19">insn_pc</name></name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:28"><name pos:start="129:23" pos:end="129:24">dc</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:28">pc</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><call pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:23">disas_m68k_insn</name><argument_list pos:start="131:24" pos:end="131:32">(<argument pos:start="131:25" pos:end="131:27"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">env</name></expr></argument>, <argument pos:start="131:30" pos:end="131:31"><expr pos:start="131:30" pos:end="131:31"><name pos:start="131:30" pos:end="131:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:17">num_insns</name><operator pos:start="133:18" pos:end="133:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="135:13" pos:end="143:35">(<expr pos:start="135:14" pos:end="143:34"><operator pos:start="135:14" pos:end="135:14">!</operator><name pos:start="135:15" pos:end="135:24"><name pos:start="135:15" pos:end="135:16">dc</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:24">is_jmp</name></name> <operator pos:start="135:26" pos:end="135:27">&amp;&amp;</operator> <name pos:start="135:29" pos:end="135:47"><name pos:start="135:29" pos:end="135:35">tcg_ctx</name><operator pos:start="135:36" pos:end="135:36">.</operator><name pos:start="135:37" pos:end="135:47">gen_opc_ptr</name></name> <operator pos:start="135:49" pos:end="135:49">&lt;</operator> <name pos:start="135:51" pos:end="135:61">gen_opc_end</name> <operator pos:start="135:63" pos:end="135:64">&amp;&amp;</operator>

             <operator pos:start="137:14" pos:end="137:14">!</operator><name pos:start="137:15" pos:end="137:36"><name pos:start="137:15" pos:end="137:16">cs</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:36">singlestep_enabled</name></name> <operator pos:start="137:38" pos:end="137:39">&amp;&amp;</operator>

             <operator pos:start="139:14" pos:end="139:14">!</operator><name pos:start="139:15" pos:end="139:24">singlestep</name> <operator pos:start="139:26" pos:end="139:27">&amp;&amp;</operator>

             <operator pos:start="141:14" pos:end="141:14">(</operator><name pos:start="141:15" pos:end="141:23">pc_offset</name><operator pos:start="141:24" pos:end="141:24">)</operator> <operator pos:start="141:26" pos:end="141:26">&lt;</operator> <operator pos:start="141:28" pos:end="141:28">(</operator><name pos:start="141:29" pos:end="141:44">TARGET_PAGE_SIZE</name> <operator pos:start="141:46" pos:end="141:46">-</operator> <literal type="number" pos:start="141:48" pos:end="141:49">32</literal><operator pos:start="141:50" pos:end="141:50">)</operator> <operator pos:start="141:52" pos:end="141:53">&amp;&amp;</operator>

             <name pos:start="143:14" pos:end="143:22">num_insns</name> <operator pos:start="143:24" pos:end="143:24">&lt;</operator> <name pos:start="143:26" pos:end="143:34">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="147:5" pos:end="149:21"><if pos:start="147:5" pos:end="149:21">if <condition pos:start="147:8" pos:end="147:32">(<expr pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:10">tb</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:18">cflags</name></name> <operator pos:start="147:20" pos:end="147:20">&amp;</operator> <name pos:start="147:22" pos:end="147:31">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:21"><block_content pos:start="149:9" pos:end="149:21">

        <expr_stmt pos:start="149:9" pos:end="149:21"><expr pos:start="149:9" pos:end="149:20"><call pos:start="149:9" pos:end="149:20"><name pos:start="149:9" pos:end="149:18">gen_io_end</name><argument_list pos:start="149:19" pos:end="149:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="199:5"><if pos:start="151:5" pos:end="165:5">if <condition pos:start="151:8" pos:end="151:41">(<expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:16">unlikely</name><argument_list pos:start="151:17" pos:end="151:40">(<argument pos:start="151:18" pos:end="151:39"><expr pos:start="151:18" pos:end="151:39"><name pos:start="151:18" pos:end="151:39"><name pos:start="151:18" pos:end="151:19">cs</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:39">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:43" pos:end="165:5">{<block_content pos:start="155:9" pos:end="163:71">

        <comment type="block" pos:start="153:9" pos:end="153:72">/* Make sure the pc is updated, and raise a debug exception.  */</comment>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:24">(<expr pos:start="155:13" pos:end="155:23"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:23"><name pos:start="155:14" pos:end="155:15">dc</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:23">is_jmp</name></name></expr>)</condition> <block pos:start="155:26" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:46">

            <expr_stmt pos:start="157:13" pos:end="157:32"><expr pos:start="157:13" pos:end="157:31"><call pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:27">gen_flush_cc_op</name><argument_list pos:start="157:28" pos:end="157:31">(<argument pos:start="157:29" pos:end="157:30"><expr pos:start="157:29" pos:end="157:30"><name pos:start="157:29" pos:end="157:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:46"><expr pos:start="159:13" pos:end="159:45"><call pos:start="159:13" pos:end="159:45"><name pos:start="159:13" pos:end="159:28">tcg_gen_movi_i32</name><argument_list pos:start="159:29" pos:end="159:45">(<argument pos:start="159:30" pos:end="159:36"><expr pos:start="159:30" pos:end="159:36"><name pos:start="159:30" pos:end="159:36">QREG_PC</name></expr></argument>, <argument pos:start="159:39" pos:end="159:44"><expr pos:start="159:39" pos:end="159:44"><name pos:start="159:39" pos:end="159:44"><name pos:start="159:39" pos:end="159:40">dc</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:44">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:71"><expr pos:start="163:9" pos:end="163:70"><call pos:start="163:9" pos:end="163:70"><name pos:start="163:9" pos:end="163:34">gen_helper_raise_exception</name><argument_list pos:start="163:35" pos:end="163:70">(<argument pos:start="163:36" pos:end="163:42"><expr pos:start="163:36" pos:end="163:42"><name pos:start="163:36" pos:end="163:42">cpu_env</name></expr></argument>, <argument pos:start="163:45" pos:end="163:69"><expr pos:start="163:45" pos:end="163:69"><call pos:start="163:45" pos:end="163:69"><name pos:start="163:45" pos:end="163:57">tcg_const_i32</name><argument_list pos:start="163:58" pos:end="163:69">(<argument pos:start="163:59" pos:end="163:68"><expr pos:start="163:59" pos:end="163:68"><name pos:start="163:59" pos:end="163:68">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="199:5">else <block pos:start="165:12" pos:end="199:5">{<block_content pos:start="167:9" pos:end="197:9">

        <switch pos:start="167:9" pos:end="197:9">switch<condition pos:start="167:15" pos:end="167:26">(<expr pos:start="167:16" pos:end="167:25"><name pos:start="167:16" pos:end="167:25"><name pos:start="167:16" pos:end="167:17">dc</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:25">is_jmp</name></name></expr>)</condition> <block pos:start="167:28" pos:end="197:9">{<block_content pos:start="169:9" pos:end="195:18">

        <case pos:start="169:9" pos:end="169:24">case <expr pos:start="169:14" pos:end="169:23"><name pos:start="169:14" pos:end="169:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="171:13" pos:end="171:32"><expr pos:start="171:13" pos:end="171:31"><call pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:27">gen_flush_cc_op</name><argument_list pos:start="171:28" pos:end="171:31">(<argument pos:start="171:29" pos:end="171:30"><expr pos:start="171:29" pos:end="171:30"><name pos:start="171:29" pos:end="171:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:38"><expr pos:start="173:13" pos:end="173:37"><call pos:start="173:13" pos:end="173:37"><name pos:start="173:13" pos:end="173:22">gen_jmp_tb</name><argument_list pos:start="173:23" pos:end="173:37">(<argument pos:start="173:24" pos:end="173:25"><expr pos:start="173:24" pos:end="173:25"><name pos:start="173:24" pos:end="173:25">dc</name></expr></argument>, <argument pos:start="173:28" pos:end="173:28"><expr pos:start="173:28" pos:end="173:28"><literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr></argument>, <argument pos:start="173:31" pos:end="173:36"><expr pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:36"><name pos:start="173:31" pos:end="173:32">dc</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:36">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <default pos:start="177:9" pos:end="177:16">default:</default>

        <case pos:start="179:9" pos:end="179:24">case <expr pos:start="179:14" pos:end="179:23"><name pos:start="179:14" pos:end="179:23">DISAS_JUMP</name></expr>:</case>

        <case pos:start="181:9" pos:end="181:26">case <expr pos:start="181:14" pos:end="181:25"><name pos:start="181:14" pos:end="181:25">DISAS_UPDATE</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:32"><expr pos:start="183:13" pos:end="183:31"><call pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:27">gen_flush_cc_op</name><argument_list pos:start="183:28" pos:end="183:31">(<argument pos:start="183:29" pos:end="183:30"><expr pos:start="183:29" pos:end="183:30"><name pos:start="183:29" pos:end="183:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="185:13" pos:end="185:79">/* indicate that the hash table must be used to find the next TB */</comment>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><call pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:27">tcg_gen_exit_tb</name><argument_list pos:start="187:28" pos:end="187:30">(<argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><literal type="number" pos:start="187:29" pos:end="187:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:27">case <expr pos:start="191:14" pos:end="191:26"><name pos:start="191:14" pos:end="191:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="193:13" pos:end="193:42">/* nothing more to generate */</comment>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:30"><expr pos:start="201:5" pos:end="201:29"><call pos:start="201:5" pos:end="201:29"><name pos:start="201:5" pos:end="201:14">gen_tb_end</name><argument_list pos:start="201:15" pos:end="201:29">(<argument pos:start="201:16" pos:end="201:17"><expr pos:start="201:16" pos:end="201:17"><name pos:start="201:16" pos:end="201:17">tb</name></expr></argument>, <argument pos:start="201:20" pos:end="201:28"><expr pos:start="201:20" pos:end="201:28"><name pos:start="201:20" pos:end="201:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="208:0"><expr pos:start="203:5" pos:end="203:39"><operator pos:start="203:5" pos:end="203:5">*</operator><name pos:start="203:6" pos:end="203:24"><name pos:start="203:6" pos:end="203:12">tcg_ctx</name><operator pos:start="203:13" pos:end="203:13">.</operator><name pos:start="203:14" pos:end="203:24">gen_opc_ptr</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:39">INDEX_op_end</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="207:1" pos:end="207:18">#<cpp:directive pos:start="207:2" pos:end="207:6">ifdef</cpp:directive> <name pos:start="207:8" pos:end="207:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="209:5" pos:end="222:0"><if pos:start="209:5" pos:end="222:0">if <condition pos:start="209:8" pos:end="209:46">(<expr pos:start="209:9" pos:end="209:45"><call pos:start="209:9" pos:end="209:45"><name pos:start="209:9" pos:end="209:26">qemu_loglevel_mask</name><argument_list pos:start="209:27" pos:end="209:45">(<argument pos:start="209:28" pos:end="209:44"><expr pos:start="209:28" pos:end="209:44"><name pos:start="209:28" pos:end="209:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:48" pos:end="222:0">{<block_content pos:start="211:9" pos:end="217:23">

        <expr_stmt pos:start="211:9" pos:end="211:39"><expr pos:start="211:9" pos:end="211:38"><call pos:start="211:9" pos:end="211:38"><name pos:start="211:9" pos:end="211:16">qemu_log</name><argument_list pos:start="211:17" pos:end="211:38">(<argument pos:start="211:18" pos:end="211:37"><expr pos:start="211:18" pos:end="211:37"><literal type="string" pos:start="211:18" pos:end="211:37">"----------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:54"><expr pos:start="213:9" pos:end="213:53"><call pos:start="213:9" pos:end="213:53"><name pos:start="213:9" pos:end="213:16">qemu_log</name><argument_list pos:start="213:17" pos:end="213:53">(<argument pos:start="213:18" pos:end="213:27"><expr pos:start="213:18" pos:end="213:27"><literal type="string" pos:start="213:18" pos:end="213:27">"IN: %s\n"</literal></expr></argument>, <argument pos:start="213:30" pos:end="213:52"><expr pos:start="213:30" pos:end="213:52"><call pos:start="213:30" pos:end="213:52"><name pos:start="213:30" pos:end="213:42">lookup_symbol</name><argument_list pos:start="213:43" pos:end="213:52">(<argument pos:start="213:44" pos:end="213:51"><expr pos:start="213:44" pos:end="213:51"><name pos:start="213:44" pos:end="213:51">pc_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:62"><expr pos:start="215:9" pos:end="215:61"><call pos:start="215:9" pos:end="215:61"><name pos:start="215:9" pos:end="215:24">log_target_disas</name><argument_list pos:start="215:25" pos:end="215:61">(<argument pos:start="215:26" pos:end="215:28"><expr pos:start="215:26" pos:end="215:28"><name pos:start="215:26" pos:end="215:28">env</name></expr></argument>, <argument pos:start="215:31" pos:end="215:38"><expr pos:start="215:31" pos:end="215:38"><name pos:start="215:31" pos:end="215:38">pc_start</name></expr></argument>, <argument pos:start="215:41" pos:end="215:57"><expr pos:start="215:41" pos:end="215:57"><name pos:start="215:41" pos:end="215:46"><name pos:start="215:41" pos:end="215:42">dc</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:46">pc</name></name> <operator pos:start="215:48" pos:end="215:48">-</operator> <name pos:start="215:50" pos:end="215:57">pc_start</name></expr></argument>, <argument pos:start="215:60" pos:end="215:60"><expr pos:start="215:60" pos:end="215:60"><literal type="number" pos:start="215:60" pos:end="215:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:23"><expr pos:start="217:9" pos:end="217:22"><call pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:16">qemu_log</name><argument_list pos:start="217:17" pos:end="217:22">(<argument pos:start="217:18" pos:end="217:21"><expr pos:start="217:18" pos:end="217:21"><literal type="string" pos:start="217:18" pos:end="217:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="221:1" pos:end="221:6">#<cpp:directive pos:start="221:2" pos:end="221:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="223:5" pos:end="239:5"><if pos:start="223:5" pos:end="233:5">if <condition pos:start="223:8" pos:end="223:18">(<expr pos:start="223:9" pos:end="223:17"><name pos:start="223:9" pos:end="223:17">search_pc</name></expr>)</condition> <block pos:start="223:20" pos:end="233:5">{<block_content pos:start="225:9" pos:end="231:50">

        <expr_stmt pos:start="225:9" pos:end="225:54"><expr pos:start="225:9" pos:end="225:53"><name pos:start="225:9" pos:end="225:9">j</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <name pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:19">tcg_ctx</name><operator pos:start="225:20" pos:end="225:20">.</operator><name pos:start="225:21" pos:end="225:31">gen_opc_ptr</name></name> <operator pos:start="225:33" pos:end="225:33">-</operator> <name pos:start="225:35" pos:end="225:53"><name pos:start="225:35" pos:end="225:41">tcg_ctx</name><operator pos:start="225:42" pos:end="225:42">.</operator><name pos:start="225:43" pos:end="225:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:13"><expr pos:start="227:9" pos:end="227:12"><name pos:start="227:9" pos:end="227:10">lj</name><operator pos:start="227:11" pos:end="227:12">++</operator></expr>;</expr_stmt>

        <while pos:start="229:9" pos:end="231:50">while <condition pos:start="229:15" pos:end="229:23">(<expr pos:start="229:16" pos:end="229:22"><name pos:start="229:16" pos:end="229:17">lj</name> <operator pos:start="229:19" pos:end="229:20">&lt;=</operator> <name pos:start="229:22" pos:end="229:22">j</name></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:50"><block_content pos:start="231:13" pos:end="231:50">

            <expr_stmt pos:start="231:13" pos:end="231:50"><expr pos:start="231:13" pos:end="231:49"><name pos:start="231:13" pos:end="231:45"><name pos:start="231:13" pos:end="231:19">tcg_ctx</name><operator pos:start="231:20" pos:end="231:20">.</operator><name pos:start="231:21" pos:end="231:39">gen_opc_instr_start</name><index pos:start="231:40" pos:end="231:45">[<expr pos:start="231:41" pos:end="231:44"><name pos:start="231:41" pos:end="231:42">lj</name><operator pos:start="231:43" pos:end="231:44">++</operator></expr>]</index></name> <operator pos:start="231:47" pos:end="231:47">=</operator> <literal type="number" pos:start="231:49" pos:end="231:49">0</literal></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></if> <else pos:start="233:7" pos:end="239:5">else <block pos:start="233:12" pos:end="239:5">{<block_content pos:start="235:9" pos:end="237:31">

        <expr_stmt pos:start="235:9" pos:end="235:37"><expr pos:start="235:9" pos:end="235:36"><name pos:start="235:9" pos:end="235:16"><name pos:start="235:9" pos:end="235:10">tb</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:16">size</name></name> <operator pos:start="235:18" pos:end="235:18">=</operator> <name pos:start="235:20" pos:end="235:25"><name pos:start="235:20" pos:end="235:21">dc</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:25">pc</name></name> <operator pos:start="235:27" pos:end="235:27">-</operator> <name pos:start="235:29" pos:end="235:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:31"><expr pos:start="237:9" pos:end="237:30"><name pos:start="237:9" pos:end="237:18"><name pos:start="237:9" pos:end="237:10">tb</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:18">icount</name></name> <operator pos:start="237:20" pos:end="237:20">=</operator> <name pos:start="237:22" pos:end="237:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="243:5" pos:end="243:23">//optimize_flags();</comment>

    <comment type="line" pos:start="245:5" pos:end="245:27">//expand_target_qops();</comment>

</block_content>}</block>
</unit>
