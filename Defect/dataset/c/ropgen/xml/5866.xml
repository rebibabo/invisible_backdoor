<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5866.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">sdp_parse_fmtp_config_h264</name><parameter_list pos:start="1:38" pos:end="7:74">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:54"><decl pos:start="3:39" pos:end="3:54"><type pos:start="3:39" pos:end="3:54"><name pos:start="3:39" pos:end="3:46">AVStream</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">stream</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:63"><decl pos:start="5:39" pos:end="5:63"><type pos:start="5:39" pos:end="5:63"><name pos:start="5:39" pos:end="5:52">PayloadContext</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:63">h264_data</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:54"><decl pos:start="7:39" pos:end="7:54"><type pos:start="7:39" pos:end="7:54"><specifier pos:start="7:39" pos:end="7:43">const</specifier> <name pos:start="7:45" pos:end="7:48">char</name> <modifier pos:start="7:50" pos:end="7:50">*</modifier></type><name pos:start="7:51" pos:end="7:54">attr</name></decl></parameter>, <parameter pos:start="7:57" pos:end="7:73"><decl pos:start="7:57" pos:end="7:73"><type pos:start="7:57" pos:end="7:73"><specifier pos:start="7:57" pos:end="7:61">const</specifier> <name pos:start="7:63" pos:end="7:66">char</name> <modifier pos:start="7:68" pos:end="7:68">*</modifier></type><name pos:start="7:69" pos:end="7:73">value</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="77:1">{<block_content pos:start="11:5" pos:end="75:13">

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVCodecParameters</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">par</name> <init pos:start="11:28" pos:end="11:45">= <expr pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:35">stream</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:45">codecpar</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="73:5"><if pos:start="15:5" pos:end="41:5">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:43"><name pos:start="15:10" pos:end="15:15">strcmp</name><argument_list pos:start="15:16" pos:end="15:43">(<argument pos:start="15:17" pos:end="15:20"><expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">attr</name></expr></argument>, <argument pos:start="15:23" pos:end="15:42"><expr pos:start="15:23" pos:end="15:42"><literal type="string" pos:start="15:23" pos:end="15:42">"packetization-mode"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:46" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:67">

        <expr_stmt pos:start="17:9" pos:end="17:77"><expr pos:start="17:9" pos:end="17:76"><call pos:start="17:9" pos:end="17:76"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:76">(<argument pos:start="17:16" pos:end="17:16"><expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">s</name></expr></argument>, <argument pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="17:33" pos:end="17:62"><expr pos:start="17:33" pos:end="17:62"><literal type="string" pos:start="17:33" pos:end="17:62">"RTP Packetization Mode: %d\n"</literal></expr></argument>, <argument pos:start="17:65" pos:end="17:75"><expr pos:start="17:65" pos:end="17:75"><call pos:start="17:65" pos:end="17:75"><name pos:start="17:65" pos:end="17:68">atoi</name><argument_list pos:start="17:69" pos:end="17:75">(<argument pos:start="17:70" pos:end="17:74"><expr pos:start="17:70" pos:end="17:74"><name pos:start="17:70" pos:end="17:74">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:17">h264_data</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:37">packetization_mode</name></name> <operator pos:start="19:39" pos:end="19:39">=</operator> <call pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:44">atoi</name><argument_list pos:start="19:45" pos:end="19:51">(<argument pos:start="19:46" pos:end="19:50"><expr pos:start="19:46" pos:end="19:50"><name pos:start="19:46" pos:end="19:50">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="21:9" pos:end="33:11">/*

         * Packetization Mode:

         * 0 or not present: Single NAL mode (Only nals from 1-23 are allowed)

         * 1: Non-interleaved Mode: 1-23, 24 (STAP-A), 28 (FU-A) are allowed.

         * 2: Interleaved Mode: 25 (STAP-B), 26 (MTAP16), 27 (MTAP24), 28 (FU-A),

         *                      and 29 (FU-B) are allowed.

         */</comment>

        <if_stmt pos:start="35:9" pos:end="39:67"><if pos:start="35:9" pos:end="39:67">if <condition pos:start="35:12" pos:end="35:46">(<expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:21">h264_data</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:41">packetization_mode</name></name> <operator pos:start="35:43" pos:end="35:43">&gt;</operator> <literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="39:67"><block_content pos:start="37:13" pos:end="39:67">

            <expr_stmt pos:start="37:13" pos:end="39:67"><expr pos:start="37:13" pos:end="39:66"><call pos:start="37:13" pos:end="39:66"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="39:66">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">s</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:65"><expr pos:start="39:20" pos:end="39:65"><literal type="string" pos:start="39:20" pos:end="39:65">"Interleaved RTP mode is not supported yet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="47:5">else if <condition pos:start="41:15" pos:end="41:49">(<expr pos:start="41:16" pos:end="41:48"><operator pos:start="41:16" pos:end="41:16">!</operator><call pos:start="41:17" pos:end="41:48"><name pos:start="41:17" pos:end="41:22">strcmp</name><argument_list pos:start="41:23" pos:end="41:48">(<argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">attr</name></expr></argument>, <argument pos:start="41:30" pos:end="41:47"><expr pos:start="41:30" pos:end="41:47"><literal type="string" pos:start="41:30" pos:end="41:47">"profile-level-id"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:51" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:56">

        <if_stmt pos:start="43:9" pos:end="45:56"><if pos:start="43:9" pos:end="45:56">if <condition pos:start="43:12" pos:end="43:31">(<expr pos:start="43:13" pos:end="43:30"><call pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:18">strlen</name><argument_list pos:start="43:19" pos:end="43:25">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">value</name></expr></argument>)</argument_list></call> <operator pos:start="43:27" pos:end="43:28">==</operator> <literal type="number" pos:start="43:30" pos:end="43:30">6</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:56"><block_content pos:start="45:13" pos:end="45:56">

            <expr_stmt pos:start="45:13" pos:end="45:56"><expr pos:start="45:13" pos:end="45:55"><call pos:start="45:13" pos:end="45:55"><name pos:start="45:13" pos:end="45:34">parse_profile_level_id</name><argument_list pos:start="45:35" pos:end="45:55">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>, <argument pos:start="45:39" pos:end="45:47"><expr pos:start="45:39" pos:end="45:47"><name pos:start="45:39" pos:end="45:47">h264_data</name></expr></argument>, <argument pos:start="45:50" pos:end="45:54"><expr pos:start="45:50" pos:end="45:54"><name pos:start="45:50" pos:end="45:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="73:5">else if <condition pos:start="47:15" pos:end="47:53">(<expr pos:start="47:16" pos:end="47:52"><operator pos:start="47:16" pos:end="47:16">!</operator><call pos:start="47:17" pos:end="47:52"><name pos:start="47:17" pos:end="47:22">strcmp</name><argument_list pos:start="47:23" pos:end="47:52">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">attr</name></expr></argument>, <argument pos:start="47:30" pos:end="47:51"><expr pos:start="47:30" pos:end="47:51"><literal type="string" pos:start="47:30" pos:end="47:51">"sprop-parameter-sets"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:55" pos:end="73:5">{<block_content pos:start="49:9" pos:end="71:19">

        <decl_stmt pos:start="49:9" pos:end="49:16"><decl pos:start="49:9" pos:end="49:15"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:44">(<expr pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:17">value</name><index pos:start="51:18" pos:end="51:36">[<expr pos:start="51:19" pos:end="51:35"><call pos:start="51:19" pos:end="51:31"><name pos:start="51:19" pos:end="51:24">strlen</name><argument_list pos:start="51:25" pos:end="51:31">(<argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:30">value</name></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:33">-</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>]</index></name> <operator pos:start="51:38" pos:end="51:39">==</operator> <literal type="char" pos:start="51:41" pos:end="51:43">','</literal></expr>)</condition> <block pos:start="51:46" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:21">

            <expr_stmt pos:start="53:13" pos:end="53:89"><expr pos:start="53:13" pos:end="53:88"><call pos:start="53:13" pos:end="53:88"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:88">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:36"><expr pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="53:39" pos:end="53:87"><expr pos:start="53:39" pos:end="53:87"><literal type="string" pos:start="53:39" pos:end="53:87">"Missing PPS in sprop-parameter-sets, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:21">return <expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">par</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:27">extradata_size</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><call pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:33">(<argument pos:start="61:18" pos:end="61:32"><expr pos:start="61:18" pos:end="61:32"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:32"><name pos:start="61:19" pos:end="61:21">par</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:32">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:78"><expr pos:start="63:9" pos:end="65:77"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="65:77"><name pos:start="63:15" pos:end="63:48">ff_h264_parse_sprop_parameter_sets</name><argument_list pos:start="63:49" pos:end="65:77">(<argument pos:start="63:50" pos:end="63:50"><expr pos:start="63:50" pos:end="63:50"><name pos:start="63:50" pos:end="63:50">s</name></expr></argument>, <argument pos:start="63:53" pos:end="63:67"><expr pos:start="63:53" pos:end="63:67"><operator pos:start="63:53" pos:end="63:53">&amp;</operator><name pos:start="63:54" pos:end="63:67"><name pos:start="63:54" pos:end="63:56">par</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:67">extradata</name></name></expr></argument>,

                                                 <argument pos:start="65:50" pos:end="65:69"><expr pos:start="65:50" pos:end="65:69"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:69"><name pos:start="65:51" pos:end="65:53">par</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:69">extradata_size</name></name></expr></argument>, <argument pos:start="65:72" pos:end="65:76"><expr pos:start="65:72" pos:end="65:76"><name pos:start="65:72" pos:end="65:76">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="69:52"><expr pos:start="67:9" pos:end="69:51"><call pos:start="67:9" pos:end="69:51"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="69:51">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:33" pos:end="67:66"><expr pos:start="67:33" pos:end="67:66"><literal type="string" pos:start="67:33" pos:end="67:66">"Extradata set to %p (size: %d)\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:29"><expr pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:18">par</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:29">extradata</name></name></expr></argument>, <argument pos:start="69:32" pos:end="69:50"><expr pos:start="69:32" pos:end="69:50"><name pos:start="69:32" pos:end="69:50"><name pos:start="69:32" pos:end="69:34">par</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:50">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
