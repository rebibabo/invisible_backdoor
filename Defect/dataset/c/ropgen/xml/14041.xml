<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14041.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:48">qio_channel_websock_handshake_process</name><parameter_list pos:start="1:49" pos:end="7:62">(<parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><name pos:start="1:50" pos:end="1:66">QIOChannelWebsock</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">ioc</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:59">char</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">line</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:60"><decl pos:start="5:50" pos:end="5:60"><type pos:start="5:50" pos:end="5:60"><name pos:start="5:50" pos:end="5:55">size_t</name></type> <name pos:start="5:57" pos:end="5:60">size</name></decl></parameter>,

                                                 <parameter pos:start="7:50" pos:end="7:61"><decl pos:start="7:50" pos:end="7:61"><type pos:start="7:50" pos:end="7:61"><name pos:start="7:50" pos:end="7:54">Error</name> <modifier pos:start="7:56" pos:end="7:56">*</modifier><modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="107:1">{<block_content pos:start="11:5" pos:end="105:15">

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:16">= <expr pos:start="11:15" pos:end="11:16"><operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:57"><decl pos:start="13:5" pos:end="15:56"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:19">protocols</name> <init pos:start="13:21" pos:end="15:56">= <expr pos:start="13:23" pos:end="15:56"><call pos:start="13:23" pos:end="15:56"><name pos:start="13:23" pos:end="13:57">qio_channel_websock_handshake_entry</name><argument_list pos:start="13:58" pos:end="15:56">(

        <argument pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">line</name></expr></argument>, <argument pos:start="15:15" pos:end="15:18"><expr pos:start="15:15" pos:end="15:18"><name pos:start="15:15" pos:end="15:18">size</name></expr></argument>, <argument pos:start="15:21" pos:end="15:55"><expr pos:start="15:21" pos:end="15:55"><name pos:start="15:21" pos:end="15:55">QIO_CHANNEL_WEBSOCK_HEADER_PROTOCOL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="19:56"><decl pos:start="17:5" pos:end="19:55"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:17">version</name> <init pos:start="17:19" pos:end="19:55">= <expr pos:start="17:21" pos:end="19:55"><call pos:start="17:21" pos:end="19:55"><name pos:start="17:21" pos:end="17:55">qio_channel_websock_handshake_entry</name><argument_list pos:start="17:56" pos:end="19:55">(

        <argument pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">line</name></expr></argument>, <argument pos:start="19:15" pos:end="19:18"><expr pos:start="19:15" pos:end="19:18"><name pos:start="19:15" pos:end="19:18">size</name></expr></argument>, <argument pos:start="19:21" pos:end="19:54"><expr pos:start="19:21" pos:end="19:54"><name pos:start="19:21" pos:end="19:54">QIO_CHANNEL_WEBSOCK_HEADER_VERSION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:52"><decl pos:start="21:5" pos:end="23:51"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:13">key</name> <init pos:start="21:15" pos:end="23:51">= <expr pos:start="21:17" pos:end="23:51"><call pos:start="21:17" pos:end="23:51"><name pos:start="21:17" pos:end="21:51">qio_channel_websock_handshake_entry</name><argument_list pos:start="21:52" pos:end="23:51">(

        <argument pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">line</name></expr></argument>, <argument pos:start="23:15" pos:end="23:18"><expr pos:start="23:15" pos:end="23:18"><name pos:start="23:15" pos:end="23:18">size</name></expr></argument>, <argument pos:start="23:21" pos:end="23:50"><expr pos:start="23:21" pos:end="23:50"><name pos:start="23:21" pos:end="23:50">QIO_CHANNEL_WEBSOCK_HEADER_KEY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:18">protocols</name></expr>)</condition> <block pos:start="27:21" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:21">

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:66">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:65"><expr pos:start="29:26" pos:end="29:65"><literal type="string" pos:start="29:26" pos:end="29:65">"Missing websocket protocol header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:21">goto <name pos:start="31:14" pos:end="31:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">version</name></expr>)</condition> <block pos:start="37:19" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:21">

        <expr_stmt pos:start="39:9" pos:end="39:66"><expr pos:start="39:9" pos:end="39:65"><call pos:start="39:9" pos:end="39:65"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="39:65">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:64"><expr pos:start="39:26" pos:end="39:64"><literal type="string" pos:start="39:26" pos:end="39:64">"Missing websocket version header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:21">goto <name pos:start="41:14" pos:end="41:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:13">(<expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:12">key</name></expr>)</condition> <block pos:start="47:15" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:21">

        <expr_stmt pos:start="49:9" pos:end="49:62"><expr pos:start="49:9" pos:end="49:61"><call pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:18">error_setg</name><argument_list pos:start="49:19" pos:end="49:61">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">errp</name></expr></argument>, <argument pos:start="49:26" pos:end="49:60"><expr pos:start="49:26" pos:end="49:60"><literal type="string" pos:start="49:26" pos:end="49:60">"Missing websocket key header data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:21">goto <name pos:start="51:14" pos:end="51:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:67">(<expr pos:start="57:9" pos:end="57:66"><operator pos:start="57:9" pos:end="57:9">!</operator><call pos:start="57:10" pos:end="57:66"><name pos:start="57:10" pos:end="57:18">g_strrstr</name><argument_list pos:start="57:19" pos:end="57:66">(<argument pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:28">protocols</name></expr></argument>, <argument pos:start="57:31" pos:end="57:65"><expr pos:start="57:31" pos:end="57:65"><name pos:start="57:31" pos:end="57:65">QIO_CHANNEL_WEBSOCK_PROTOCOL_BINARY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:69" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:21">

        <expr_stmt pos:start="59:9" pos:end="61:67"><expr pos:start="59:9" pos:end="61:66"><call pos:start="59:9" pos:end="61:66"><name pos:start="59:9" pos:end="59:18">error_setg</name><argument_list pos:start="59:19" pos:end="61:66">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">errp</name></expr></argument>, <argument pos:start="59:26" pos:end="59:71"><expr pos:start="59:26" pos:end="59:71"><literal type="string" pos:start="59:26" pos:end="59:71">"No '%s' protocol is supported by client '%s'"</literal></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:54"><expr pos:start="61:20" pos:end="61:54"><name pos:start="61:20" pos:end="61:54">QIO_CHANNEL_WEBSOCK_PROTOCOL_BINARY</name></expr></argument>, <argument pos:start="61:57" pos:end="61:65"><expr pos:start="61:57" pos:end="61:65"><name pos:start="61:57" pos:end="61:65">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:21">goto <name pos:start="63:14" pos:end="63:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:69">(<expr pos:start="69:9" pos:end="69:68"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:68"><name pos:start="69:10" pos:end="69:20">g_str_equal</name><argument_list pos:start="69:21" pos:end="69:68">(<argument pos:start="69:22" pos:end="69:28"><expr pos:start="69:22" pos:end="69:28"><name pos:start="69:22" pos:end="69:28">version</name></expr></argument>, <argument pos:start="69:31" pos:end="69:67"><expr pos:start="69:31" pos:end="69:67"><name pos:start="69:31" pos:end="69:67">QIO_CHANNEL_WEBSOCK_SUPPORTED_VERSION</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:71" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:21">

        <expr_stmt pos:start="71:9" pos:end="73:67"><expr pos:start="71:9" pos:end="73:66"><call pos:start="71:9" pos:end="73:66"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="73:66">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">errp</name></expr></argument>, <argument pos:start="71:26" pos:end="71:71"><expr pos:start="71:26" pos:end="71:71"><literal type="string" pos:start="71:26" pos:end="71:71">"Version '%s' is not supported by client '%s'"</literal></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:56"><expr pos:start="73:20" pos:end="73:56"><name pos:start="73:20" pos:end="73:56">QIO_CHANNEL_WEBSOCK_SUPPORTED_VERSION</name></expr></argument>, <argument pos:start="73:59" pos:end="73:65"><expr pos:start="73:59" pos:end="73:65"><name pos:start="73:59" pos:end="73:65">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:21">goto <name pos:start="75:14" pos:end="75:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:58">(<expr pos:start="81:9" pos:end="81:57"><call pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:14">strlen</name><argument_list pos:start="81:15" pos:end="81:19">(<argument pos:start="81:16" pos:end="81:18"><expr pos:start="81:16" pos:end="81:18"><name pos:start="81:16" pos:end="81:18">key</name></expr></argument>)</argument_list></call> <operator pos:start="81:21" pos:end="81:22">!=</operator> <name pos:start="81:24" pos:end="81:57">QIO_CHANNEL_WEBSOCK_CLIENT_KEY_LEN</name></expr>)</condition> <block pos:start="81:60" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:21">

        <expr_stmt pos:start="83:9" pos:end="85:68"><expr pos:start="83:9" pos:end="85:67"><call pos:start="83:9" pos:end="85:67"><name pos:start="83:9" pos:end="83:18">error_setg</name><argument_list pos:start="83:19" pos:end="85:67">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">errp</name></expr></argument>, <argument pos:start="83:26" pos:end="83:68"><expr pos:start="83:26" pos:end="83:68"><literal type="string" pos:start="83:26" pos:end="83:68">"Key length '%zu' was not as expected '%d'"</literal></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:30"><expr pos:start="85:20" pos:end="85:30"><call pos:start="85:20" pos:end="85:30"><name pos:start="85:20" pos:end="85:25">strlen</name><argument_list pos:start="85:26" pos:end="85:30">(<argument pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:29">key</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:33" pos:end="85:66"><expr pos:start="85:33" pos:end="85:66"><name pos:start="85:33" pos:end="85:66">QIO_CHANNEL_WEBSOCK_CLIENT_KEY_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:21">goto <name pos:start="87:14" pos:end="87:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:70"><expr pos:start="93:5" pos:end="93:69"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:69"><name pos:start="93:11" pos:end="93:53">qio_channel_websock_handshake_send_response</name><argument_list pos:start="93:54" pos:end="93:69">(<argument pos:start="93:55" pos:end="93:57"><expr pos:start="93:55" pos:end="93:57"><name pos:start="93:55" pos:end="93:57">ioc</name></expr></argument>, <argument pos:start="93:60" pos:end="93:62"><expr pos:start="93:60" pos:end="93:62"><name pos:start="93:60" pos:end="93:62">key</name></expr></argument>, <argument pos:start="93:65" pos:end="93:68"><expr pos:start="93:65" pos:end="93:68"><name pos:start="93:65" pos:end="93:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



 <label pos:start="97:2" pos:end="97:9"><name pos:start="97:2" pos:end="97:8">cleanup</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:22"><expr pos:start="99:5" pos:end="99:21"><call pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:21">(<argument pos:start="99:12" pos:end="99:20"><expr pos:start="99:12" pos:end="99:20"><name pos:start="99:12" pos:end="99:20">protocols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:20"><expr pos:start="101:5" pos:end="101:19"><call pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:19">(<argument pos:start="101:12" pos:end="101:18"><expr pos:start="101:12" pos:end="101:18"><name pos:start="101:12" pos:end="101:18">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:16"><expr pos:start="103:5" pos:end="103:15"><call pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:15">(<argument pos:start="103:12" pos:end="103:14"><expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
