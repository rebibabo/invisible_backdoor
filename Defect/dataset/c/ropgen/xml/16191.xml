<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16191.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">command_loop</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:72">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">i</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">j</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>, <decl pos:start="5:22" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:25">done</name> <init pos:start="5:27" pos:end="5:29">= <expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr></init></decl>, <decl pos:start="5:32" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:40">fetchable</name> <init pos:start="5:42" pos:end="5:44">= <expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">0</literal></expr></init></decl>, <decl pos:start="5:47" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:47" pos:end="5:54">prompted</name> <init pos:start="5:56" pos:end="5:58">= <expr pos:start="5:58" pos:end="5:58"><literal type="number" pos:start="5:58" pos:end="5:58">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:15">input</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier><modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:12">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19">cmdinfo_t</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">ct</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="63:5">for <control pos:start="15:9" pos:end="15:43">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:38"><expr pos:start="15:17" pos:end="15:37"><operator pos:start="15:17" pos:end="15:17">!</operator><name pos:start="15:18" pos:end="15:21">done</name> <operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator> <name pos:start="15:26" pos:end="15:26">i</name> <operator pos:start="15:28" pos:end="15:28">&lt;</operator> <name pos:start="15:30" pos:end="15:37">ncmdline</name></expr>;</condition> <incr pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:40">i</name><operator pos:start="15:41" pos:end="15:42">++</operator></expr></incr>)</control> <block pos:start="15:45" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:27">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:13">input</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:22">strdup</name><argument_list pos:start="17:23" pos:end="17:34">(<argument pos:start="17:24" pos:end="17:33"><expr pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:30">cmdline</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:18">input</name></expr>)</condition> <block pos:start="19:21" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:20">

            <expr_stmt pos:start="21:13" pos:end="23:49"><expr pos:start="21:13" pos:end="23:48"><call pos:start="21:13" pos:end="23:48"><name pos:start="21:13" pos:end="21:19">fprintf</name><argument_list pos:start="21:20" pos:end="23:48">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">stderr</name></expr></argument>, <argument pos:start="21:29" pos:end="21:65"><expr pos:start="21:29" pos:end="21:65"><call pos:start="21:29" pos:end="21:65"><name pos:start="21:29" pos:end="21:29">_</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:64"><expr pos:start="21:31" pos:end="21:64"><literal type="string" pos:start="21:31" pos:end="21:64">"cannot strdup command '%s': %s\n"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:30"><expr pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:27">cmdline</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:33" pos:end="23:47"><expr pos:start="23:33" pos:end="23:47"><call pos:start="23:33" pos:end="23:47"><name pos:start="23:33" pos:end="23:40">strerror</name><argument_list pos:start="23:41" pos:end="23:47">(<argument pos:start="23:42" pos:end="23:46"><expr pos:start="23:42" pos:end="23:46"><name pos:start="23:42" pos:end="23:46">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:19"><call pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:16">exit</name><argument_list pos:start="25:17" pos:end="25:19">(<argument pos:start="25:18" pos:end="25:18"><expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:9">v</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:21">breakline</name><argument_list pos:start="29:22" pos:end="29:32">(<argument pos:start="29:23" pos:end="29:27"><expr pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:27">input</name></expr></argument>, <argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="59:9"><if pos:start="31:9" pos:end="59:9">if <condition pos:start="31:12" pos:end="31:14">(<expr pos:start="31:13" pos:end="31:13"><name pos:start="31:13" pos:end="31:13">c</name></expr>)</condition> <block pos:start="31:16" pos:end="59:9">{<block_content pos:start="33:13" pos:end="57:13">

            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:14">ct</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:35"><name pos:start="33:18" pos:end="33:29">find_command</name><argument_list pos:start="33:30" pos:end="33:35">(<argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:31">v</name><index pos:start="33:32" pos:end="33:34">[<expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="57:13"><if pos:start="35:13" pos:end="53:13">if <condition pos:start="35:16" pos:end="35:19">(<expr pos:start="35:17" pos:end="35:18"><name pos:start="35:17" pos:end="35:18">ct</name></expr>)</condition> <block pos:start="35:21" pos:end="53:13">{<block_content pos:start="37:17" pos:end="51:17">

                <if_stmt pos:start="37:17" pos:end="51:17"><if pos:start="37:17" pos:end="41:17">if <condition pos:start="37:20" pos:end="37:48">(<expr pos:start="37:21" pos:end="37:47"><name pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:22">ct</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">flags</name></name> <operator pos:start="37:31" pos:end="37:31">&amp;</operator> <name pos:start="37:33" pos:end="37:47">CMD_FLAG_GLOBAL</name></expr>)</condition> <block pos:start="37:50" pos:end="41:17">{<block_content pos:start="39:21" pos:end="39:45">

                    <expr_stmt pos:start="39:21" pos:end="39:45"><expr pos:start="39:21" pos:end="39:44"><name pos:start="39:21" pos:end="39:24">done</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:44"><name pos:start="39:28" pos:end="39:34">command</name><argument_list pos:start="39:35" pos:end="39:44">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">ct</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">c</name></expr></argument>, <argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><name pos:start="39:43" pos:end="39:43">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="41:19" pos:end="51:17">else <block pos:start="41:24" pos:end="51:17">{<block_content pos:start="43:21" pos:end="49:21">

                    <expr_stmt pos:start="43:21" pos:end="43:26"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">j</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>;</expr_stmt>

                    <while pos:start="45:21" pos:end="49:21">while <condition pos:start="45:27" pos:end="45:58">(<expr pos:start="45:28" pos:end="45:57"><operator pos:start="45:28" pos:end="45:28">!</operator><name pos:start="45:29" pos:end="45:32">done</name> <operator pos:start="45:34" pos:end="45:35">&amp;&amp;</operator> <operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:38">j</name> <operator pos:start="45:40" pos:end="45:40">=</operator> <call pos:start="45:42" pos:end="45:56"><name pos:start="45:42" pos:end="45:53">args_command</name><argument_list pos:start="45:54" pos:end="45:56">(<argument pos:start="45:55" pos:end="45:55"><expr pos:start="45:55" pos:end="45:55"><name pos:start="45:55" pos:end="45:55">j</name></expr></argument>)</argument_list></call><operator pos:start="45:57" pos:end="45:57">)</operator></expr>)</condition> <block pos:start="45:60" pos:end="49:21">{<block_content pos:start="47:25" pos:end="47:49">

                        <expr_stmt pos:start="47:25" pos:end="47:49"><expr pos:start="47:25" pos:end="47:48"><name pos:start="47:25" pos:end="47:28">done</name> <operator pos:start="47:30" pos:end="47:30">=</operator> <call pos:start="47:32" pos:end="47:48"><name pos:start="47:32" pos:end="47:38">command</name><argument_list pos:start="47:39" pos:end="47:48">(<argument pos:start="47:40" pos:end="47:41"><expr pos:start="47:40" pos:end="47:41"><name pos:start="47:40" pos:end="47:41">ct</name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><name pos:start="47:44" pos:end="47:44">c</name></expr></argument>, <argument pos:start="47:47" pos:end="47:47"><expr pos:start="47:47" pos:end="47:47"><name pos:start="47:47" pos:end="47:47">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="53:15" pos:end="57:13">else <block pos:start="53:20" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:71">

                <expr_stmt pos:start="55:17" pos:end="55:71"><expr pos:start="55:17" pos:end="55:70"><call pos:start="55:17" pos:end="55:70"><name pos:start="55:17" pos:end="55:23">fprintf</name><argument_list pos:start="55:24" pos:end="55:70">(<argument pos:start="55:25" pos:end="55:30"><expr pos:start="55:25" pos:end="55:30"><name pos:start="55:25" pos:end="55:30">stderr</name></expr></argument>, <argument pos:start="55:33" pos:end="55:63"><expr pos:start="55:33" pos:end="55:63"><call pos:start="55:33" pos:end="55:63"><name pos:start="55:33" pos:end="55:33">_</name><argument_list pos:start="55:34" pos:end="55:63">(<argument pos:start="55:35" pos:end="55:62"><expr pos:start="55:35" pos:end="55:62"><literal type="string" pos:start="55:35" pos:end="55:62">"command \"%s\" not found\n"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:66" pos:end="55:69"><expr pos:start="55:66" pos:end="55:69"><name pos:start="55:66" pos:end="55:69"><name pos:start="55:66" pos:end="55:66">v</name><index pos:start="55:67" pos:end="55:69">[<expr pos:start="55:68" pos:end="55:68"><literal type="number" pos:start="55:68" pos:end="55:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><call pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:16">doneline</name><argument_list pos:start="61:17" pos:end="61:26">(<argument pos:start="61:18" pos:end="61:22"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:22">input</name></expr></argument>, <argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:15">cmdline</name></expr>)</condition> <block pos:start="65:18" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:15">

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><call pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:12">free</name><argument_list pos:start="67:13" pos:end="67:21">(<argument pos:start="67:14" pos:end="67:20"><expr pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:20">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="75:5" pos:end="137:5">while <condition pos:start="75:11" pos:end="75:17">(<expr pos:start="75:12" pos:end="75:16"><operator pos:start="75:12" pos:end="75:12">!</operator><name pos:start="75:13" pos:end="75:16">done</name></expr>)</condition> <block pos:start="75:19" pos:end="137:5">{<block_content pos:start="77:9" pos:end="135:22">

        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="77:22">(<expr pos:start="77:13" pos:end="77:21"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:21">prompted</name></expr>)</condition> <block pos:start="77:24" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:25">

            <expr_stmt pos:start="79:13" pos:end="79:39"><expr pos:start="79:13" pos:end="79:38"><call pos:start="79:13" pos:end="79:38"><name pos:start="79:13" pos:end="79:18">printf</name><argument_list pos:start="79:19" pos:end="79:38">(<argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><literal type="string" pos:start="79:20" pos:end="79:23">"%s"</literal></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><call pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:35">get_prompt</name><argument_list pos:start="79:36" pos:end="79:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:27"><expr pos:start="81:13" pos:end="81:26"><call pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:18">fflush</name><argument_list pos:start="81:19" pos:end="81:26">(<argument pos:start="81:20" pos:end="81:25"><expr pos:start="81:20" pos:end="81:25"><name pos:start="81:20" pos:end="81:25">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="85:54"><expr pos:start="83:13" pos:end="85:53"><call pos:start="83:13" pos:end="85:53"><name pos:start="83:13" pos:end="83:35">qemu_aio_set_fd_handler</name><argument_list pos:start="83:36" pos:end="85:53">(<argument pos:start="83:37" pos:end="83:48"><expr pos:start="83:37" pos:end="83:48"><name pos:start="83:37" pos:end="83:48">STDIN_FILENO</name></expr></argument>, <argument pos:start="83:51" pos:end="83:64"><expr pos:start="83:51" pos:end="83:64"><name pos:start="83:51" pos:end="83:64">prep_fetchline</name></expr></argument>, <argument pos:start="83:67" pos:end="83:70"><expr pos:start="83:67" pos:end="83:70"><name pos:start="83:67" pos:end="83:70">NULL</name></expr></argument>, <argument pos:start="83:73" pos:end="83:76"><expr pos:start="83:73" pos:end="83:76"><name pos:start="83:73" pos:end="83:76">NULL</name></expr></argument>,

                                    <argument pos:start="85:37" pos:end="85:40"><expr pos:start="85:37" pos:end="85:40"><name pos:start="85:37" pos:end="85:40">NULL</name></expr></argument>, <argument pos:start="85:43" pos:end="85:52"><expr pos:start="85:43" pos:end="85:52"><operator pos:start="85:43" pos:end="85:43">&amp;</operator><name pos:start="85:44" pos:end="85:52">fetchable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:25"><expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:20">prompted</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:24"><expr pos:start="93:9" pos:end="93:23"><call pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:21">qemu_aio_wait</name><argument_list pos:start="93:22" pos:end="93:23">()</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:23">(<expr pos:start="97:13" pos:end="97:22"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:22">fetchable</name></expr>)</condition> <block pos:start="97:25" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:21">

            <continue pos:start="99:13" pos:end="99:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:13">input</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <call pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:25">fetchline</name><argument_list pos:start="103:26" pos:end="103:27">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:26">(<expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:17">input</name> <operator pos:start="105:19" pos:end="105:20">==</operator> <name pos:start="105:22" pos:end="105:25">NULL</name></expr>)</condition> <block pos:start="105:28" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:18">

            <break pos:start="107:13" pos:end="107:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:9">v</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <call pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:21">breakline</name><argument_list pos:start="111:22" pos:end="111:32">(<argument pos:start="111:23" pos:end="111:27"><expr pos:start="111:23" pos:end="111:27"><name pos:start="111:23" pos:end="111:27">input</name></expr></argument>, <argument pos:start="111:30" pos:end="111:31"><expr pos:start="111:30" pos:end="111:31"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="127:9"><if pos:start="113:9" pos:end="127:9">if <condition pos:start="113:12" pos:end="113:14">(<expr pos:start="113:13" pos:end="113:13"><name pos:start="113:13" pos:end="113:13">c</name></expr>)</condition> <block pos:start="113:16" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:13">

            <expr_stmt pos:start="115:13" pos:end="115:36"><expr pos:start="115:13" pos:end="115:35"><name pos:start="115:13" pos:end="115:14">ct</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:35"><name pos:start="115:18" pos:end="115:29">find_command</name><argument_list pos:start="115:30" pos:end="115:35">(<argument pos:start="115:31" pos:end="115:34"><expr pos:start="115:31" pos:end="115:34"><name pos:start="115:31" pos:end="115:34"><name pos:start="115:31" pos:end="115:31">v</name><index pos:start="115:32" pos:end="115:34">[<expr pos:start="115:33" pos:end="115:33"><literal type="number" pos:start="115:33" pos:end="115:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="125:13"><if pos:start="117:13" pos:end="121:13">if <condition pos:start="117:16" pos:end="117:19">(<expr pos:start="117:17" pos:end="117:18"><name pos:start="117:17" pos:end="117:18">ct</name></expr>)</condition> <block pos:start="117:21" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:41">

                <expr_stmt pos:start="119:17" pos:end="119:41"><expr pos:start="119:17" pos:end="119:40"><name pos:start="119:17" pos:end="119:20">done</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <call pos:start="119:24" pos:end="119:40"><name pos:start="119:24" pos:end="119:30">command</name><argument_list pos:start="119:31" pos:end="119:40">(<argument pos:start="119:32" pos:end="119:33"><expr pos:start="119:32" pos:end="119:33"><name pos:start="119:32" pos:end="119:33">ct</name></expr></argument>, <argument pos:start="119:36" pos:end="119:36"><expr pos:start="119:36" pos:end="119:36"><name pos:start="119:36" pos:end="119:36">c</name></expr></argument>, <argument pos:start="119:39" pos:end="119:39"><expr pos:start="119:39" pos:end="119:39"><name pos:start="119:39" pos:end="119:39">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="125:13">else <block pos:start="121:20" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:71">

                <expr_stmt pos:start="123:17" pos:end="123:71"><expr pos:start="123:17" pos:end="123:70"><call pos:start="123:17" pos:end="123:70"><name pos:start="123:17" pos:end="123:23">fprintf</name><argument_list pos:start="123:24" pos:end="123:70">(<argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30">stderr</name></expr></argument>, <argument pos:start="123:33" pos:end="123:63"><expr pos:start="123:33" pos:end="123:63"><call pos:start="123:33" pos:end="123:63"><name pos:start="123:33" pos:end="123:33">_</name><argument_list pos:start="123:34" pos:end="123:63">(<argument pos:start="123:35" pos:end="123:62"><expr pos:start="123:35" pos:end="123:62"><literal type="string" pos:start="123:35" pos:end="123:62">"command \"%s\" not found\n"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:66" pos:end="123:69"><expr pos:start="123:66" pos:end="123:69"><name pos:start="123:66" pos:end="123:69"><name pos:start="123:66" pos:end="123:66">v</name><index pos:start="123:67" pos:end="123:69">[<expr pos:start="123:68" pos:end="123:68"><literal type="number" pos:start="123:68" pos:end="123:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:27"><expr pos:start="129:9" pos:end="129:26"><call pos:start="129:9" pos:end="129:26"><name pos:start="129:9" pos:end="129:16">doneline</name><argument_list pos:start="129:17" pos:end="129:26">(<argument pos:start="129:18" pos:end="129:22"><expr pos:start="129:18" pos:end="129:22"><name pos:start="129:18" pos:end="129:22">input</name></expr></argument>, <argument pos:start="129:25" pos:end="129:25"><expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:21"><expr pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:16">prompted</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:22"><expr pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:17">fetchable</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <literal type="number" pos:start="135:21" pos:end="135:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="139:5" pos:end="139:72"><expr pos:start="139:5" pos:end="139:71"><call pos:start="139:5" pos:end="139:71"><name pos:start="139:5" pos:end="139:27">qemu_aio_set_fd_handler</name><argument_list pos:start="139:28" pos:end="139:71">(<argument pos:start="139:29" pos:end="139:40"><expr pos:start="139:29" pos:end="139:40"><name pos:start="139:29" pos:end="139:40">STDIN_FILENO</name></expr></argument>, <argument pos:start="139:43" pos:end="139:46"><expr pos:start="139:43" pos:end="139:46"><name pos:start="139:43" pos:end="139:46">NULL</name></expr></argument>, <argument pos:start="139:49" pos:end="139:52"><expr pos:start="139:49" pos:end="139:52"><name pos:start="139:49" pos:end="139:52">NULL</name></expr></argument>, <argument pos:start="139:55" pos:end="139:58"><expr pos:start="139:55" pos:end="139:58"><name pos:start="139:55" pos:end="139:58">NULL</name></expr></argument>, <argument pos:start="139:61" pos:end="139:64"><expr pos:start="139:61" pos:end="139:64"><name pos:start="139:61" pos:end="139:64">NULL</name></expr></argument>, <argument pos:start="139:67" pos:end="139:70"><expr pos:start="139:67" pos:end="139:70"><name pos:start="139:67" pos:end="139:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
