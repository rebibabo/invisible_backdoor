<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7422.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">ac97_initfn</name> <parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">AC97LinkState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:58">= <expr pos:start="5:24" pos:end="5:58"><call pos:start="5:24" pos:end="5:58"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name> <argument_list pos:start="5:34" pos:end="5:58">(<argument pos:start="5:35" pos:end="5:47"><expr pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:47">AC97LinkState</name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">dev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:57"><expr pos:start="5:55" pos:end="5:57"><name pos:start="5:55" pos:end="5:57">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">c</name> <init pos:start="7:16" pos:end="7:30">= <expr pos:start="7:18" pos:end="7:30"><name pos:start="7:18" pos:end="7:30"><name pos:start="7:18" pos:end="7:18">s</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:23">dev</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:30">config</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:35">/* TODO: no need to override */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">c</name><index pos:start="13:6" pos:end="13:18">[<expr pos:start="13:7" pos:end="13:17"><name pos:start="13:7" pos:end="13:17">PCI_COMMAND</name></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <literal type="number" pos:start="13:22" pos:end="13:25">0x00</literal></expr>;</expr_stmt>      <comment type="block" pos:start="13:33" pos:end="13:63">/* pcicmd pci command rw, ro */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:5">c</name><index pos:start="15:6" pos:end="15:22">[<expr pos:start="15:7" pos:end="15:21"><name pos:start="15:7" pos:end="15:17">PCI_COMMAND</name> <operator pos:start="15:19" pos:end="15:19">+</operator> <literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>]</index></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:29">0x00</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:15">/* TODO: */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:5">c</name><index pos:start="21:6" pos:end="21:17">[<expr pos:start="21:7" pos:end="21:16"><name pos:start="21:7" pos:end="21:16">PCI_STATUS</name></expr>]</index></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:40">PCI_STATUS_FAST_BACK</name></expr>;</expr_stmt>      <comment type="block" pos:start="21:48" pos:end="21:78">/* pcists pci status rwc, ro */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">c</name><index pos:start="23:6" pos:end="23:21">[<expr pos:start="23:7" pos:end="23:20"><name pos:start="23:7" pos:end="23:16">PCI_STATUS</name> <operator pos:start="23:18" pos:end="23:18">+</operator> <literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>]</index></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:48">PCI_STATUS_DEVSEL_MEDIUM</name> <operator pos:start="23:50" pos:end="23:51">&gt;&gt;</operator> <literal type="number" pos:start="23:53" pos:end="23:53">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:5">c</name><index pos:start="27:6" pos:end="27:21">[<expr pos:start="27:7" pos:end="27:20"><name pos:start="27:7" pos:end="27:20">PCI_CLASS_PROG</name></expr>]</index></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:28">0x00</literal></expr>;</expr_stmt>      <comment type="block" pos:start="27:36" pos:end="27:68">/* pi programming interface ro */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:63">/* TODO set when bar is registered. no need to override. */</comment>

    <comment type="block" pos:start="33:5" pos:end="33:51">/* nabmar native audio mixer base address rw */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:5">c</name><index pos:start="35:6" pos:end="35:25">[<expr pos:start="35:7" pos:end="35:24"><name pos:start="35:7" pos:end="35:24">PCI_BASE_ADDRESS_0</name></expr>]</index></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:53">PCI_BASE_ADDRESS_SPACE_IO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:5">c</name><index pos:start="37:6" pos:end="37:29">[<expr pos:start="37:7" pos:end="37:28"><name pos:start="37:7" pos:end="37:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="37:26" pos:end="37:26">+</operator> <literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <literal type="number" pos:start="37:33" pos:end="37:36">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:5">c</name><index pos:start="39:6" pos:end="39:29">[<expr pos:start="39:7" pos:end="39:28"><name pos:start="39:7" pos:end="39:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="39:26" pos:end="39:26">+</operator> <literal type="number" pos:start="39:28" pos:end="39:28">2</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <literal type="number" pos:start="39:33" pos:end="39:36">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:5">c</name><index pos:start="41:6" pos:end="41:29">[<expr pos:start="41:7" pos:end="41:28"><name pos:start="41:7" pos:end="41:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="41:26" pos:end="41:26">+</operator> <literal type="number" pos:start="41:28" pos:end="41:28">3</literal></expr>]</index></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <literal type="number" pos:start="41:33" pos:end="41:36">0x00</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:63">/* TODO set when bar is registered. no need to override. */</comment>

      <comment type="block" pos:start="47:7" pos:end="47:62">/* nabmbar native audio bus mastering base address rw */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:5">c</name><index pos:start="49:6" pos:end="49:29">[<expr pos:start="49:7" pos:end="49:28"><name pos:start="49:7" pos:end="49:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="49:26" pos:end="49:26">+</operator> <literal type="number" pos:start="49:28" pos:end="49:28">4</literal></expr>]</index></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:57">PCI_BASE_ADDRESS_SPACE_IO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:5">c</name><index pos:start="51:6" pos:end="51:29">[<expr pos:start="51:7" pos:end="51:28"><name pos:start="51:7" pos:end="51:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="51:26" pos:end="51:26">+</operator> <literal type="number" pos:start="51:28" pos:end="51:28">5</literal></expr>]</index></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <literal type="number" pos:start="51:33" pos:end="51:36">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:5">c</name><index pos:start="53:6" pos:end="53:29">[<expr pos:start="53:7" pos:end="53:28"><name pos:start="53:7" pos:end="53:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="53:26" pos:end="53:26">+</operator> <literal type="number" pos:start="53:28" pos:end="53:28">6</literal></expr>]</index></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <literal type="number" pos:start="53:33" pos:end="53:36">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:5">c</name><index pos:start="55:6" pos:end="55:29">[<expr pos:start="55:7" pos:end="55:28"><name pos:start="55:7" pos:end="55:24">PCI_BASE_ADDRESS_0</name> <operator pos:start="55:26" pos:end="55:26">+</operator> <literal type="number" pos:start="55:28" pos:end="55:28">7</literal></expr>]</index></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:36">0x00</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:38"><expr pos:start="59:5" pos:end="59:37"><name pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:5">c</name><index pos:start="59:6" pos:end="59:30">[<expr pos:start="59:7" pos:end="59:29"><name pos:start="59:7" pos:end="59:29">PCI_SUBSYSTEM_VENDOR_ID</name></expr>]</index></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <literal type="number" pos:start="59:34" pos:end="59:37">0x86</literal></expr>;</expr_stmt>      <comment type="block" pos:start="59:45" pos:end="59:78">/* svid subsystem vendor id rwo */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:5">c</name><index pos:start="61:6" pos:end="61:34">[<expr pos:start="61:7" pos:end="61:33"><name pos:start="61:7" pos:end="61:29">PCI_SUBSYSTEM_VENDOR_ID</name> <operator pos:start="61:31" pos:end="61:31">+</operator> <literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr>]</index></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <literal type="number" pos:start="61:38" pos:end="61:41">0x80</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:5">c</name><index pos:start="65:6" pos:end="65:23">[<expr pos:start="65:7" pos:end="65:22"><name pos:start="65:7" pos:end="65:22">PCI_SUBSYSTEM_ID</name></expr>]</index></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="number" pos:start="65:27" pos:end="65:30">0x00</literal></expr>;</expr_stmt>      <comment type="block" pos:start="65:38" pos:end="65:63">/* sid subsystem id rwo */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:5">c</name><index pos:start="67:6" pos:end="67:27">[<expr pos:start="67:7" pos:end="67:26"><name pos:start="67:7" pos:end="67:22">PCI_SUBSYSTEM_ID</name> <operator pos:start="67:24" pos:end="67:24">+</operator> <literal type="number" pos:start="67:26" pos:end="67:26">1</literal></expr>]</index></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <literal type="number" pos:start="67:31" pos:end="67:34">0x00</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:5">c</name><index pos:start="71:6" pos:end="71:25">[<expr pos:start="71:7" pos:end="71:24"><name pos:start="71:7" pos:end="71:24">PCI_INTERRUPT_LINE</name></expr>]</index></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:32">0x00</literal></expr>;</expr_stmt>      <comment type="block" pos:start="71:40" pos:end="71:70">/* intr_ln interrupt line rw */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:5">c</name><index pos:start="73:6" pos:end="73:24">[<expr pos:start="73:7" pos:end="73:23"><name pos:start="73:7" pos:end="73:23">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <literal type="number" pos:start="73:28" pos:end="73:31">0x01</literal></expr>;</expr_stmt>      <comment type="block" pos:start="73:39" pos:end="73:68">/* intr_pn interrupt pin ro */</comment>



    <expr_stmt pos:start="77:5" pos:end="77:78"><expr pos:start="77:5" pos:end="77:77"><call pos:start="77:5" pos:end="77:77"><name pos:start="77:5" pos:end="77:25">memory_region_init_io</name> <argument_list pos:start="77:27" pos:end="77:77">(<argument pos:start="77:28" pos:end="77:37"><expr pos:start="77:28" pos:end="77:37"><operator pos:start="77:28" pos:end="77:28">&amp;</operator><name pos:start="77:29" pos:end="77:37"><name pos:start="77:29" pos:end="77:29">s</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:37">io_nam</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:55"><expr pos:start="77:40" pos:end="77:55"><operator pos:start="77:40" pos:end="77:40">&amp;</operator><name pos:start="77:41" pos:end="77:55">ac97_io_nam_ops</name></expr></argument>, <argument pos:start="77:58" pos:end="77:58"><expr pos:start="77:58" pos:end="77:58"><name pos:start="77:58" pos:end="77:58">s</name></expr></argument>, <argument pos:start="77:61" pos:end="77:70"><expr pos:start="77:61" pos:end="77:70"><literal type="string" pos:start="77:61" pos:end="77:70">"ac97-nam"</literal></expr></argument>, <argument pos:start="77:73" pos:end="77:76"><expr pos:start="77:73" pos:end="77:76"><literal type="number" pos:start="77:73" pos:end="77:76">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:80"><expr pos:start="79:5" pos:end="79:79"><call pos:start="79:5" pos:end="79:79"><name pos:start="79:5" pos:end="79:25">memory_region_init_io</name> <argument_list pos:start="79:27" pos:end="79:79">(<argument pos:start="79:28" pos:end="79:38"><expr pos:start="79:28" pos:end="79:38"><operator pos:start="79:28" pos:end="79:28">&amp;</operator><name pos:start="79:29" pos:end="79:38"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:38">io_nabm</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:57"><expr pos:start="79:41" pos:end="79:57"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:57">ac97_io_nabm_ops</name></expr></argument>, <argument pos:start="79:60" pos:end="79:60"><expr pos:start="79:60" pos:end="79:60"><name pos:start="79:60" pos:end="79:60">s</name></expr></argument>, <argument pos:start="79:63" pos:end="79:73"><expr pos:start="79:63" pos:end="79:73"><literal type="string" pos:start="79:63" pos:end="79:73">"ac97-nabm"</literal></expr></argument>, <argument pos:start="79:76" pos:end="79:78"><expr pos:start="79:76" pos:end="79:78"><literal type="number" pos:start="79:76" pos:end="79:78">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:73"><expr pos:start="81:5" pos:end="81:72"><call pos:start="81:5" pos:end="81:72"><name pos:start="81:5" pos:end="81:20">pci_register_bar</name> <argument_list pos:start="81:22" pos:end="81:72">(<argument pos:start="81:23" pos:end="81:29"><expr pos:start="81:23" pos:end="81:29"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:29">dev</name></name></expr></argument>, <argument pos:start="81:32" pos:end="81:32"><expr pos:start="81:32" pos:end="81:32"><literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr></argument>, <argument pos:start="81:35" pos:end="81:59"><expr pos:start="81:35" pos:end="81:59"><name pos:start="81:35" pos:end="81:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="81:62" pos:end="81:71"><expr pos:start="81:62" pos:end="81:71"><operator pos:start="81:62" pos:end="81:62">&amp;</operator><name pos:start="81:63" pos:end="81:71"><name pos:start="81:63" pos:end="81:63">s</name><operator pos:start="81:64" pos:end="81:65">-&gt;</operator><name pos:start="81:66" pos:end="81:71">io_nam</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:74"><expr pos:start="83:5" pos:end="83:73"><call pos:start="83:5" pos:end="83:73"><name pos:start="83:5" pos:end="83:20">pci_register_bar</name> <argument_list pos:start="83:22" pos:end="83:73">(<argument pos:start="83:23" pos:end="83:29"><expr pos:start="83:23" pos:end="83:29"><operator pos:start="83:23" pos:end="83:23">&amp;</operator><name pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:29">dev</name></name></expr></argument>, <argument pos:start="83:32" pos:end="83:32"><expr pos:start="83:32" pos:end="83:32"><literal type="number" pos:start="83:32" pos:end="83:32">1</literal></expr></argument>, <argument pos:start="83:35" pos:end="83:59"><expr pos:start="83:35" pos:end="83:59"><name pos:start="83:35" pos:end="83:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="83:62" pos:end="83:72"><expr pos:start="83:62" pos:end="83:72"><operator pos:start="83:62" pos:end="83:62">&amp;</operator><name pos:start="83:63" pos:end="83:72"><name pos:start="83:63" pos:end="83:63">s</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:72">io_nabm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><call pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:23">qemu_register_reset</name> <argument_list pos:start="85:25" pos:end="85:42">(<argument pos:start="85:26" pos:end="85:38"><expr pos:start="85:26" pos:end="85:38"><name pos:start="85:26" pos:end="85:38">ac97_on_reset</name></expr></argument>, <argument pos:start="85:41" pos:end="85:41"><expr pos:start="85:41" pos:end="85:41"><name pos:start="85:41" pos:end="85:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:41"><expr pos:start="87:5" pos:end="87:40"><call pos:start="87:5" pos:end="87:40"><name pos:start="87:5" pos:end="87:21">AUD_register_card</name> <argument_list pos:start="87:23" pos:end="87:40">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><literal type="string" pos:start="87:24" pos:end="87:29">"ac97"</literal></expr></argument>, <argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:39"><name pos:start="87:33" pos:end="87:33">s</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:39">card</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><call pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:17">ac97_on_reset</name> <argument_list pos:start="89:19" pos:end="89:21">(<argument pos:start="89:20" pos:end="89:20"><expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
