<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15753.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">alac_set_info</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">ALACContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">alac</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:25"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">unsigned</name> <name pos:start="5:20" pos:end="5:23">char</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">ptr</name> <init pos:start="5:30" pos:end="5:53">= <expr pos:start="5:32" pos:end="5:53"><name pos:start="5:32" pos:end="5:53"><name pos:start="5:32" pos:end="5:35">alac</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:42">avctx</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:53">extradata</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">ptr</name> <operator pos:start="9:9" pos:end="9:10">+=</operator> <literal type="number" pos:start="9:12" pos:end="9:12">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="9:15" pos:end="9:24">/* size */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:13"><expr pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">ptr</name> <operator pos:start="11:9" pos:end="11:10">+=</operator> <literal type="number" pos:start="11:12" pos:end="11:12">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="11:15" pos:end="11:24">/* alac */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">ptr</name> <operator pos:start="13:9" pos:end="13:10">+=</operator> <literal type="number" pos:start="13:12" pos:end="13:12">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="13:15" pos:end="13:23">/* 0 ? */</comment>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:34">(<expr pos:start="17:8" pos:end="17:33"><call pos:start="17:8" pos:end="17:19"><name pos:start="17:8" pos:end="17:14">AV_RB32</name><argument_list pos:start="17:15" pos:end="17:19">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="17:21" pos:end="17:22">&gt;=</operator> <name pos:start="17:24" pos:end="17:31">UINT_MAX</name><operator pos:start="17:32" pos:end="17:32">/</operator><literal type="number" pos:start="17:33" pos:end="17:33">4</literal></expr>)</condition><block pos:start="17:35" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:87"><expr pos:start="19:9" pos:end="19:86"><call pos:start="19:9" pos:end="19:86"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:86">(<argument pos:start="19:16" pos:end="19:26"><expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:19">alac</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">avctx</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:40"><expr pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:43" pos:end="19:85"><expr pos:start="19:43" pos:end="19:85"><literal type="string" pos:start="19:43" pos:end="19:85">"setinfo_max_samples_per_frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:27">/* buffer size / 2 ? */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:8">alac</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:39">setinfo_max_samples_per_frame</name></name> <operator pos:start="29:41" pos:end="29:41">=</operator> <call pos:start="29:43" pos:end="29:67"><name pos:start="29:43" pos:end="29:61">bytestream_get_be32</name><argument_list pos:start="29:62" pos:end="29:67">(<argument pos:start="29:63" pos:end="29:66"><expr pos:start="29:63" pos:end="29:66"><operator pos:start="29:63" pos:end="29:63">&amp;</operator><name pos:start="29:64" pos:end="29:66">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:10"><expr pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:7">ptr</name><operator pos:start="31:8" pos:end="31:9">++</operator></expr>;</expr_stmt>                          <comment type="block" pos:start="31:37" pos:end="31:45">/* ??? */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:49"><expr pos:start="33:5" pos:end="33:48"><name pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:8">alac</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:29">setinfo_sample_size</name></name>           <operator pos:start="33:41" pos:end="33:41">=</operator> <operator pos:start="33:43" pos:end="33:43">*</operator><name pos:start="33:44" pos:end="33:46">ptr</name><operator pos:start="33:47" pos:end="33:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:8">alac</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:34">setinfo_rice_historymult</name></name>      <operator pos:start="35:41" pos:end="35:41">=</operator> <operator pos:start="35:43" pos:end="35:43">*</operator><name pos:start="35:44" pos:end="35:46">ptr</name><operator pos:start="35:47" pos:end="35:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:8">alac</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:37">setinfo_rice_initialhistory</name></name>   <operator pos:start="37:41" pos:end="37:41">=</operator> <operator pos:start="37:43" pos:end="37:43">*</operator><name pos:start="37:44" pos:end="37:46">ptr</name><operator pos:start="37:47" pos:end="37:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:8">alac</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:32">setinfo_rice_kmodifier</name></name>        <operator pos:start="39:41" pos:end="39:41">=</operator> <operator pos:start="39:43" pos:end="39:43">*</operator><name pos:start="39:44" pos:end="39:46">ptr</name><operator pos:start="39:47" pos:end="39:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:8">alac</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:21">numchannels</name></name>                   <operator pos:start="41:41" pos:end="41:41">=</operator> <operator pos:start="41:43" pos:end="41:43">*</operator><name pos:start="41:44" pos:end="41:46">ptr</name><operator pos:start="41:47" pos:end="41:48">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:23">bytestream_get_be16</name><argument_list pos:start="43:24" pos:end="43:29">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:28">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="43:37" pos:end="43:45">/* ??? */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:23">bytestream_get_be32</name><argument_list pos:start="45:24" pos:end="45:29">(<argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><operator pos:start="45:25" pos:end="45:25">&amp;</operator><name pos:start="45:26" pos:end="45:28">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="45:37" pos:end="45:62">/* max coded frame size */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><call pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:23">bytestream_get_be32</name><argument_list pos:start="47:24" pos:end="47:29">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><operator pos:start="47:25" pos:end="47:25">&amp;</operator><name pos:start="47:26" pos:end="47:28">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="47:37" pos:end="47:51">/* bitrate ? */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:23">bytestream_get_be32</name><argument_list pos:start="49:24" pos:end="49:29">(<argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:28">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="49:37" pos:end="49:52">/* samplerate */</comment>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
