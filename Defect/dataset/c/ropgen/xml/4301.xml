<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4301.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">oss_run_in</name> <parameter_list pos:start="1:23" pos:end="1:37">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:32">HWVoiceIn</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:24">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OSSVoiceIn</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">oss</name> <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:33">OSSVoiceIn</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator> <name pos:start="5:38" pos:end="5:39">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">hwshift</name> <init pos:start="7:17" pos:end="7:32">= <expr pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:20">hw</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:26">info</name><operator pos:start="7:27" pos:end="7:27">.</operator><name pos:start="7:28" pos:end="7:32">shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">live</name> <init pos:start="11:14" pos:end="11:44">= <expr pos:start="11:16" pos:end="11:44"><call pos:start="11:16" pos:end="11:44"><name pos:start="11:16" pos:end="11:39">audio_pcm_hw_get_live_in</name> <argument_list pos:start="11:41" pos:end="11:44">(<argument pos:start="11:42" pos:end="11:43"><expr pos:start="11:42" pos:end="11:43"><name pos:start="11:42" pos:end="11:43">hw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">dead</name> <init pos:start="13:14" pos:end="13:33">= <expr pos:start="13:16" pos:end="13:33"><name pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:17">hw</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:26">samples</name></name> <operator pos:start="13:28" pos:end="13:28">-</operator> <name pos:start="13:30" pos:end="13:33">live</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:23">read_samples</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr></init></decl>;</decl_stmt>

    <struct pos:start="17:5" pos:end="29:6">struct <block pos:start="17:12" pos:end="23:5">{

        <decl_stmt pos:start="19:9" pos:end="19:16"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">add</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">len</name></decl>;</decl_stmt>

    }</block> <decl pos:start="23:7" pos:end="29:5"><name pos:start="23:7" pos:end="23:13"><name pos:start="23:7" pos:end="23:10">bufs</name><index pos:start="23:11" pos:end="23:13">[<expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">2</literal></expr>]</index></name> <init pos:start="23:15" pos:end="29:5">= <expr pos:start="23:17" pos:end="29:5"><block pos:start="23:17" pos:end="29:5">{

        <expr pos:start="25:9" pos:end="25:23"><block pos:start="25:9" pos:end="25:23">{ <expr pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:12">hw</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">wpos</name></name></expr>, <expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr> }</block></expr>,

        <expr pos:start="27:9" pos:end="27:16"><block pos:start="27:9" pos:end="27:16">{ <expr pos:start="27:11" pos:end="27:11"><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>, <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</struct>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:13">dead</name></expr>)</condition> <block pos:start="33:16" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:38">(<expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:10">hw</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:16">wpos</name></name> <operator pos:start="41:18" pos:end="41:18">+</operator> <name pos:start="41:20" pos:end="41:23">dead</name> <operator pos:start="41:25" pos:end="41:25">&gt;</operator> <name pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:28">hw</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">samples</name></name></expr>)</condition> <block pos:start="41:40" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:67">

        <expr_stmt pos:start="43:9" pos:end="43:58"><expr pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:12">bufs</name><index pos:start="43:13" pos:end="43:15">[<expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>]</index></name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:19">len</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <operator pos:start="43:23" pos:end="43:23">(</operator><name pos:start="43:24" pos:end="43:34"><name pos:start="43:24" pos:end="43:25">hw</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:34">samples</name></name> <operator pos:start="43:36" pos:end="43:36">-</operator> <name pos:start="43:38" pos:end="43:45"><name pos:start="43:38" pos:end="43:39">hw</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:45">wpos</name></name><operator pos:start="43:46" pos:end="43:46">)</operator> <operator pos:start="43:48" pos:end="43:49">&lt;&lt;</operator> <name pos:start="43:51" pos:end="43:57">hwshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:67"><expr pos:start="45:9" pos:end="45:66"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:12">bufs</name><index pos:start="45:13" pos:end="45:15">[<expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr>]</index></name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:19">len</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:27">dead</name> <operator pos:start="45:29" pos:end="45:29">-</operator> <operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:33">hw</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:42">samples</name></name> <operator pos:start="45:44" pos:end="45:44">-</operator> <name pos:start="45:46" pos:end="45:53"><name pos:start="45:46" pos:end="45:47">hw</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:53">wpos</name></name><operator pos:start="45:54" pos:end="45:54">)</operator><operator pos:start="45:55" pos:end="45:55">)</operator> <operator pos:start="45:57" pos:end="45:58">&lt;&lt;</operator> <name pos:start="45:60" pos:end="45:66">hwshift</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="49:5" pos:end="53:5">else <block pos:start="49:10" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:38">

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:12">bufs</name><index pos:start="51:13" pos:end="51:15">[<expr pos:start="51:14" pos:end="51:14"><literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>]</index></name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:19">len</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:26">dead</name> <operator pos:start="51:28" pos:end="51:29">&lt;&lt;</operator> <name pos:start="51:31" pos:end="51:37">hwshift</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>





    <for pos:start="59:5" pos:end="131:5">for <control pos:start="59:9" pos:end="59:27">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:21">2</literal></expr>;</condition> <incr pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><operator pos:start="59:24" pos:end="59:25">++</operator><name pos:start="59:26" pos:end="59:26">i</name></expr></incr>)</control> <block pos:start="59:29" pos:end="131:5">{<block_content pos:start="61:9" pos:end="129:9">

        <decl_stmt pos:start="61:9" pos:end="61:22"><decl pos:start="61:9" pos:end="61:21"><type pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:15">ssize_t</name></type> <name pos:start="61:17" pos:end="61:21">nread</name></decl>;</decl_stmt>



        <if_stmt pos:start="65:9" pos:end="129:9"><if pos:start="65:9" pos:end="129:9">if <condition pos:start="65:12" pos:end="65:24">(<expr pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:16">bufs</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">i</name></expr>]</index></name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:23">len</name></expr>)</condition> <block pos:start="65:26" pos:end="129:9">{<block_content pos:start="67:13" pos:end="127:13">

            <decl_stmt pos:start="67:13" pos:end="67:69"><decl pos:start="67:13" pos:end="67:68"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:16">void</name> <modifier pos:start="67:18" pos:end="67:18">*</modifier></type><name pos:start="67:19" pos:end="67:19">p</name> <init pos:start="67:21" pos:end="67:68">= <expr pos:start="67:23" pos:end="67:68"><call pos:start="67:23" pos:end="67:68"><name pos:start="67:23" pos:end="67:29">advance</name> <argument_list pos:start="67:31" pos:end="67:68">(<argument pos:start="67:32" pos:end="67:43"><expr pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:34">oss</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:43">pcm_buf</name></name></expr></argument>, <argument pos:start="67:46" pos:end="67:67"><expr pos:start="67:46" pos:end="67:67"><name pos:start="67:46" pos:end="67:52"><name pos:start="67:46" pos:end="67:49">bufs</name><index pos:start="67:50" pos:end="67:52">[<expr pos:start="67:51" pos:end="67:51"><name pos:start="67:51" pos:end="67:51">i</name></expr>]</index></name><operator pos:start="67:53" pos:end="67:53">.</operator><name pos:start="67:54" pos:end="67:56">add</name> <operator pos:start="67:58" pos:end="67:59">&lt;&lt;</operator> <name pos:start="67:61" pos:end="67:67">hwshift</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:51"><expr pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:17">nread</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:50"><name pos:start="69:21" pos:end="69:24">read</name> <argument_list pos:start="69:26" pos:end="69:50">(<argument pos:start="69:27" pos:end="69:33"><expr pos:start="69:27" pos:end="69:33"><name pos:start="69:27" pos:end="69:33"><name pos:start="69:27" pos:end="69:29">oss</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:33">fd</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:36"><expr pos:start="69:36" pos:end="69:36"><name pos:start="69:36" pos:end="69:36">p</name></expr></argument>, <argument pos:start="69:39" pos:end="69:49"><expr pos:start="69:39" pos:end="69:49"><name pos:start="69:39" pos:end="69:45"><name pos:start="69:39" pos:end="69:42">bufs</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name><operator pos:start="69:46" pos:end="69:46">.</operator><name pos:start="69:47" pos:end="69:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="91:13"><if pos:start="73:13" pos:end="91:13">if <condition pos:start="73:16" pos:end="73:26">(<expr pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:21">nread</name> <operator pos:start="73:23" pos:end="73:23">&gt;</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr>)</condition> <block pos:start="73:28" pos:end="91:13">{<block_content pos:start="75:17" pos:end="89:43">

                <if_stmt pos:start="75:17" pos:end="83:17"><if pos:start="75:17" pos:end="83:17">if <condition pos:start="75:20" pos:end="75:43">(<expr pos:start="75:21" pos:end="75:42"><name pos:start="75:21" pos:end="75:25">nread</name> <operator pos:start="75:27" pos:end="75:27">&amp;</operator> <name pos:start="75:29" pos:end="75:42"><name pos:start="75:29" pos:end="75:30">hw</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:36">info</name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:42">align</name></name></expr>)</condition> <block pos:start="75:45" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:47">

                    <expr_stmt pos:start="77:21" pos:end="81:47"><expr pos:start="77:21" pos:end="81:46"><call pos:start="77:21" pos:end="81:46"><name pos:start="77:21" pos:end="77:25">dolog</name> <argument_list pos:start="77:27" pos:end="81:46">(<argument pos:start="77:28" pos:end="79:43"><expr pos:start="77:28" pos:end="79:43"><literal type="string" pos:start="77:28" pos:end="77:74">"warning: Misaligned read %zd (requested %d), "</literal>

                           <literal type="string" pos:start="79:28" pos:end="79:43">"alignment %d\n"</literal></expr></argument>, <argument pos:start="79:46" pos:end="79:50"><expr pos:start="79:46" pos:end="79:50"><name pos:start="79:46" pos:end="79:50">nread</name></expr></argument>, <argument pos:start="79:53" pos:end="79:74"><expr pos:start="79:53" pos:end="79:74"><name pos:start="79:53" pos:end="79:59"><name pos:start="79:53" pos:end="79:56">bufs</name><index pos:start="79:57" pos:end="79:59">[<expr pos:start="79:58" pos:end="79:58"><name pos:start="79:58" pos:end="79:58">i</name></expr>]</index></name><operator pos:start="79:60" pos:end="79:60">.</operator><name pos:start="79:61" pos:end="79:63">add</name> <operator pos:start="79:65" pos:end="79:66">&lt;&lt;</operator> <name pos:start="79:68" pos:end="79:74">hwshift</name></expr></argument>,

                           <argument pos:start="81:28" pos:end="81:45"><expr pos:start="81:28" pos:end="81:45"><name pos:start="81:28" pos:end="81:41"><name pos:start="81:28" pos:end="81:29">hw</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:35">info</name><operator pos:start="81:36" pos:end="81:36">.</operator><name pos:start="81:37" pos:end="81:41">align</name></name> <operator pos:start="81:43" pos:end="81:43">+</operator> <literal type="number" pos:start="81:45" pos:end="81:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:49"><expr pos:start="85:17" pos:end="85:48"><name pos:start="85:17" pos:end="85:28">read_samples</name> <operator pos:start="85:30" pos:end="85:31">+=</operator> <name pos:start="85:33" pos:end="85:37">nread</name> <operator pos:start="85:39" pos:end="85:40">&gt;&gt;</operator> <name pos:start="85:42" pos:end="85:48">hwshift</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="89:43"><expr pos:start="87:17" pos:end="89:42"><call pos:start="87:17" pos:end="89:42"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:18">hw</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:24">conv</name></name> <argument_list pos:start="87:26" pos:end="89:42">(<argument pos:start="87:27" pos:end="87:52"><expr pos:start="87:27" pos:end="87:52"><name pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:28">hw</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:38">conv_buf</name></name> <operator pos:start="87:40" pos:end="87:40">+</operator> <name pos:start="87:42" pos:end="87:48"><name pos:start="87:42" pos:end="87:45">bufs</name><index pos:start="87:46" pos:end="87:48">[<expr pos:start="87:47" pos:end="87:47"><name pos:start="87:47" pos:end="87:47">i</name></expr>]</index></name><operator pos:start="87:49" pos:end="87:49">.</operator><name pos:start="87:50" pos:end="87:52">add</name></expr></argument>, <argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><name pos:start="87:55" pos:end="87:55">p</name></expr></argument>, <argument pos:start="87:58" pos:end="87:73"><expr pos:start="87:58" pos:end="87:73"><name pos:start="87:58" pos:end="87:62">nread</name> <operator pos:start="87:64" pos:end="87:65">&gt;&gt;</operator> <name pos:start="87:67" pos:end="87:73">hwshift</name></expr></argument>,

                          <argument pos:start="89:27" pos:end="89:41"><expr pos:start="89:27" pos:end="89:41"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:41">nominal_volume</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="95:13" pos:end="127:13"><if pos:start="95:13" pos:end="127:13">if <condition pos:start="95:16" pos:end="95:36">(<expr pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:20">bufs</name><index pos:start="95:21" pos:end="95:23">[<expr pos:start="95:22" pos:end="95:22"><name pos:start="95:22" pos:end="95:22">i</name></expr>]</index></name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:27">len</name> <operator pos:start="95:29" pos:end="95:29">-</operator> <name pos:start="95:31" pos:end="95:35">nread</name></expr>)</condition> <block pos:start="95:38" pos:end="127:13">{<block_content pos:start="97:17" pos:end="125:22">

                <if_stmt pos:start="97:17" pos:end="123:17"><if pos:start="97:17" pos:end="123:17">if <condition pos:start="97:20" pos:end="97:32">(<expr pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:25">nread</name> <operator pos:start="97:27" pos:end="97:28">==</operator> <operator pos:start="97:30" pos:end="97:30">-</operator><literal type="number" pos:start="97:31" pos:end="97:31">1</literal></expr>)</condition> <block pos:start="97:34" pos:end="123:17">{<block_content pos:start="99:21" pos:end="121:21">

                    <switch pos:start="99:21" pos:end="121:21">switch <condition pos:start="99:28" pos:end="99:34">(<expr pos:start="99:29" pos:end="99:33"><name pos:start="99:29" pos:end="99:33">errno</name></expr>)</condition> <block pos:start="99:36" pos:end="121:21">{<block_content pos:start="101:21" pos:end="119:30">

                    <case pos:start="101:21" pos:end="101:31">case <expr pos:start="101:26" pos:end="101:30"><name pos:start="101:26" pos:end="101:30">EINTR</name></expr>:</case>

                    <case pos:start="103:21" pos:end="103:32">case <expr pos:start="103:26" pos:end="103:31"><name pos:start="103:26" pos:end="103:31">EAGAIN</name></expr>:</case>

                        <break pos:start="105:25" pos:end="105:30">break;</break>

                    <default pos:start="107:21" pos:end="107:28">default:</default>

                        <expr_stmt pos:start="109:25" pos:end="117:30"><expr pos:start="109:25" pos:end="117:29"><call pos:start="109:25" pos:end="117:29"><name pos:start="109:25" pos:end="109:34">oss_logerr</name> <argument_list pos:start="109:36" pos:end="117:29">(

                            <argument pos:start="111:29" pos:end="111:33"><expr pos:start="111:29" pos:end="111:33"><name pos:start="111:29" pos:end="111:33">errno</name></expr></argument>,

                            <argument pos:start="113:29" pos:end="113:72"><expr pos:start="113:29" pos:end="113:72"><literal type="string" pos:start="113:29" pos:end="113:72">"Failed to read %d bytes of audio (to %p)\n"</literal></expr></argument>,

                            <argument pos:start="115:29" pos:end="115:39"><expr pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:35"><name pos:start="115:29" pos:end="115:32">bufs</name><index pos:start="115:33" pos:end="115:35">[<expr pos:start="115:34" pos:end="115:34"><name pos:start="115:34" pos:end="115:34">i</name></expr>]</index></name><operator pos:start="115:36" pos:end="115:36">.</operator><name pos:start="115:37" pos:end="115:39">len</name></expr></argument>, <argument pos:start="115:42" pos:end="115:42"><expr pos:start="115:42" pos:end="115:42"><name pos:start="115:42" pos:end="115:42">p</name></expr></argument>

                            )</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="119:25" pos:end="119:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></if></if_stmt>

                <break pos:start="125:17" pos:end="125:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="135:5" pos:end="135:55"><expr pos:start="135:5" pos:end="135:54"><name pos:start="135:5" pos:end="135:12"><name pos:start="135:5" pos:end="135:6">hw</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:12">wpos</name></name> <operator pos:start="135:14" pos:end="135:14">=</operator> <operator pos:start="135:16" pos:end="135:16">(</operator><name pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:18">hw</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:24">wpos</name></name> <operator pos:start="135:26" pos:end="135:26">+</operator> <name pos:start="135:28" pos:end="135:39">read_samples</name><operator pos:start="135:40" pos:end="135:40">)</operator> <operator pos:start="135:42" pos:end="135:42">%</operator> <name pos:start="135:44" pos:end="135:54"><name pos:start="135:44" pos:end="135:45">hw</name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:54">samples</name></name></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:24">return <expr pos:start="137:12" pos:end="137:23"><name pos:start="137:12" pos:end="137:23">read_samples</name></expr>;</return>

</block_content>}</block></function>
</unit>
