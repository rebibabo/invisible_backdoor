<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3478.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">mov_parse_stsd_audio</name><parameter_list pos:start="1:33" pos:end="3:68">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">MOVContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">AVIOContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pb</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">AVStream</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:45">st</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:63">MOVStreamContext</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:67">sc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="215:1">{<block_content pos:start="7:5" pos:end="213:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:23">bits_per_sample</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:30">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:20">version</name> <init pos:start="9:22" pos:end="9:36">= <expr pos:start="9:24" pos:end="9:36"><call pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:32">avio_rb16</name><argument_list pos:start="9:33" pos:end="9:36">(<argument pos:start="9:34" pos:end="9:35"><expr pos:start="9:34" pos:end="9:35"><name pos:start="9:34" pos:end="9:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:119"><decl pos:start="11:5" pos:end="11:118"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:40">compatible_brands</name> <init pos:start="11:42" pos:end="11:118">= <expr pos:start="11:44" pos:end="11:118"><call pos:start="11:44" pos:end="11:118"><name pos:start="11:44" pos:end="11:54">av_dict_get</name><argument_list pos:start="11:55" pos:end="11:118">(<argument pos:start="11:56" pos:end="11:70"><expr pos:start="11:56" pos:end="11:70"><name pos:start="11:56" pos:end="11:70"><name pos:start="11:56" pos:end="11:56">c</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:60">fc</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:70">metadata</name></name></expr></argument>, <argument pos:start="11:73" pos:end="11:91"><expr pos:start="11:73" pos:end="11:91"><literal type="string" pos:start="11:73" pos:end="11:91">"compatible_brands"</literal></expr></argument>, <argument pos:start="11:94" pos:end="11:97"><expr pos:start="11:94" pos:end="11:97"><name pos:start="11:94" pos:end="11:97">NULL</name></expr></argument>, <argument pos:start="11:100" pos:end="11:117"><expr pos:start="11:100" pos:end="11:117"><name pos:start="11:100" pos:end="11:117">AV_DICT_MATCH_CASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><call pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:13">avio_rb16</name><argument_list pos:start="15:14" pos:end="15:17">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:20" pos:end="15:39">/* revision level */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><call pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13">avio_rb32</name><argument_list pos:start="17:14" pos:end="17:17">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:20" pos:end="17:31">/* vendor */</comment>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:6">st</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">codec</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">channels</name></name>              <operator pos:start="21:38" pos:end="21:38">=</operator> <call pos:start="21:40" pos:end="21:52"><name pos:start="21:40" pos:end="21:48">avio_rb16</name><argument_list pos:start="21:49" pos:end="21:52">(<argument pos:start="21:50" pos:end="21:51"><expr pos:start="21:50" pos:end="21:51"><name pos:start="21:50" pos:end="21:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:55" pos:end="21:73">/* channel count */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">codec</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:36">bits_per_coded_sample</name></name> <operator pos:start="23:38" pos:end="23:38">=</operator> <call pos:start="23:40" pos:end="23:52"><name pos:start="23:40" pos:end="23:48">avio_rb16</name><argument_list pos:start="23:49" pos:end="23:52">(<argument pos:start="23:50" pos:end="23:51"><expr pos:start="23:50" pos:end="23:51"><name pos:start="23:50" pos:end="23:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:55" pos:end="23:71">/* sample size */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:76"><expr pos:start="25:5" pos:end="25:75"><call pos:start="25:5" pos:end="25:75"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="25:75">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:12">c</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">fc</name></name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="25:33" pos:end="25:53"><expr pos:start="25:33" pos:end="25:53"><literal type="string" pos:start="25:33" pos:end="25:53">"audio channels %d\n"</literal></expr></argument>, <argument pos:start="25:56" pos:end="25:74"><expr pos:start="25:56" pos:end="25:74"><name pos:start="25:56" pos:end="25:74"><name pos:start="25:56" pos:end="25:57">st</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:64">codec</name><operator pos:start="25:65" pos:end="25:66">-&gt;</operator><name pos:start="25:67" pos:end="25:74">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:6">sc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:17">audio_cid</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:29">avio_rb16</name><argument_list pos:start="29:30" pos:end="29:33">(<argument pos:start="29:31" pos:end="29:32"><expr pos:start="29:31" pos:end="29:32"><name pos:start="29:31" pos:end="29:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:13">avio_rb16</name><argument_list pos:start="31:14" pos:end="31:17">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:20" pos:end="31:40">/* packet size = 0 */</comment>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:6">st</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:13">codec</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:26">sample_rate</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <operator pos:start="35:30" pos:end="35:30">(</operator><operator pos:start="35:31" pos:end="35:31">(</operator><call pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:40">avio_rb32</name><argument_list pos:start="35:41" pos:end="35:44">(<argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><name pos:start="35:42" pos:end="35:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:46" pos:end="35:47">&gt;&gt;</operator> <literal type="number" pos:start="35:49" pos:end="35:50">16</literal><operator pos:start="35:51" pos:end="35:51">)</operator><operator pos:start="35:52" pos:end="35:52">)</operator></expr>;</expr_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:65">// Read QT version 1 fields. In version 0 these do not exist.</comment>

    <expr_stmt pos:start="41:5" pos:end="41:77"><expr pos:start="41:5" pos:end="41:76"><call pos:start="41:5" pos:end="41:76"><name pos:start="41:5" pos:end="41:10">av_log</name><argument_list pos:start="41:11" pos:end="41:76">(<argument pos:start="41:12" pos:end="41:16"><expr pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:12">c</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">fc</name></name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="41:33" pos:end="41:57"><expr pos:start="41:33" pos:end="41:57"><literal type="string" pos:start="41:33" pos:end="41:57">"version =%d, isom =%d\n"</literal></expr></argument>, <argument pos:start="41:60" pos:end="41:66"><expr pos:start="41:60" pos:end="41:66"><name pos:start="41:60" pos:end="41:66">version</name></expr></argument>, <argument pos:start="41:69" pos:end="41:75"><expr pos:start="41:69" pos:end="41:75"><name pos:start="41:69" pos:end="41:75"><name pos:start="41:69" pos:end="41:69">c</name><operator pos:start="41:70" pos:end="41:71">-&gt;</operator><name pos:start="41:72" pos:end="41:75">isom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="107:5"><if pos:start="43:5" pos:end="107:5">if <condition pos:start="43:8" pos:end="45:72">(<expr pos:start="43:9" pos:end="45:71"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:16"><name pos:start="43:10" pos:end="43:10">c</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:16">isom</name></name> <operator pos:start="43:18" pos:end="43:19">||</operator>

        <operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:26">compatible_brands</name> <operator pos:start="45:28" pos:end="45:29">&amp;&amp;</operator> <call pos:start="45:31" pos:end="45:70"><name pos:start="45:31" pos:end="45:36">strstr</name><argument_list pos:start="45:37" pos:end="45:70">(<argument pos:start="45:38" pos:end="45:61"><expr pos:start="45:38" pos:end="45:61"><name pos:start="45:38" pos:end="45:61"><name pos:start="45:38" pos:end="45:54">compatible_brands</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:61">value</name></name></expr></argument>, <argument pos:start="45:64" pos:end="45:69"><expr pos:start="45:64" pos:end="45:69"><literal type="string" pos:start="45:64" pos:end="45:69">"qt  "</literal></expr></argument>)</argument_list></call><operator pos:start="45:71" pos:end="45:71">)</operator></expr>)</condition> <block pos:start="45:74" pos:end="107:5">{<block_content pos:start="49:9" pos:end="105:9">



        <if_stmt pos:start="49:9" pos:end="87:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="49:25">(<expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:19">version</name> <operator pos:start="49:21" pos:end="49:22">==</operator> <literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>)</condition> <block pos:start="49:27" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:26">

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:14">sc</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:33">samples_per_frame</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <call pos:start="51:37" pos:end="51:49"><name pos:start="51:37" pos:end="51:45">avio_rb32</name><argument_list pos:start="51:46" pos:end="51:49">(<argument pos:start="51:47" pos:end="51:48"><expr pos:start="51:47" pos:end="51:48"><name pos:start="51:47" pos:end="51:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:26"><expr pos:start="53:13" pos:end="53:25"><call pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:21">avio_rb32</name><argument_list pos:start="53:22" pos:end="53:25">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:28" pos:end="53:49">/* bytes per packet */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:48"><expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:14">sc</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:31">bytes_per_frame</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:47"><name pos:start="55:35" pos:end="55:43">avio_rb32</name><argument_list pos:start="55:44" pos:end="55:47">(<argument pos:start="55:45" pos:end="55:46"><expr pos:start="55:45" pos:end="55:46"><name pos:start="55:45" pos:end="55:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><call pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:21">avio_rb32</name><argument_list pos:start="57:22" pos:end="57:25">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:28" pos:end="57:49">/* bytes per sample */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="87:9">else if <condition pos:start="59:19" pos:end="59:32">(<expr pos:start="59:20" pos:end="59:31"><name pos:start="59:20" pos:end="59:26">version</name> <operator pos:start="59:28" pos:end="59:29">==</operator> <literal type="number" pos:start="59:31" pos:end="59:31">2</literal></expr>)</condition> <block pos:start="59:34" pos:end="87:9">{<block_content pos:start="61:13" pos:end="85:52">

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><call pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:21">avio_rb32</name><argument_list pos:start="61:22" pos:end="61:25">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:28" pos:end="61:51">/* sizeof struct only */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:66"><expr pos:start="63:13" pos:end="63:65"><name pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:14">st</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">codec</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:34">sample_rate</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <call pos:start="63:38" pos:end="63:65"><name pos:start="63:38" pos:end="63:50">av_int2double</name><argument_list pos:start="63:51" pos:end="63:65">(<argument pos:start="63:52" pos:end="63:64"><expr pos:start="63:52" pos:end="63:64"><call pos:start="63:52" pos:end="63:64"><name pos:start="63:52" pos:end="63:60">avio_rb64</name><argument_list pos:start="63:61" pos:end="63:64">(<argument pos:start="63:62" pos:end="63:63"><expr pos:start="63:62" pos:end="63:63"><name pos:start="63:62" pos:end="63:63">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:51"><expr pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:14">st</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:21">codec</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:31">channels</name></name>    <operator pos:start="65:36" pos:end="65:36">=</operator> <call pos:start="65:38" pos:end="65:50"><name pos:start="65:38" pos:end="65:46">avio_rb32</name><argument_list pos:start="65:47" pos:end="65:50">(<argument pos:start="65:48" pos:end="65:49"><expr pos:start="65:48" pos:end="65:49"><name pos:start="65:48" pos:end="65:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:21">avio_rb32</name><argument_list pos:start="67:22" pos:end="67:25">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:28" pos:end="67:50">/* always 0x7F000000 */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:61"><expr pos:start="69:13" pos:end="69:60"><name pos:start="69:13" pos:end="69:44"><name pos:start="69:13" pos:end="69:14">st</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">codec</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:44">bits_per_coded_sample</name></name> <operator pos:start="69:46" pos:end="69:46">=</operator> <call pos:start="69:48" pos:end="69:60"><name pos:start="69:48" pos:end="69:56">avio_rb32</name><argument_list pos:start="69:57" pos:end="69:60">(<argument pos:start="69:58" pos:end="69:59"><expr pos:start="69:58" pos:end="69:59"><name pos:start="69:58" pos:end="69:59">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:17">flags</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:29">avio_rb32</name><argument_list pos:start="73:30" pos:end="73:33">(<argument pos:start="73:31" pos:end="73:32"><expr pos:start="73:31" pos:end="73:32"><name pos:start="73:31" pos:end="73:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:36" pos:end="73:66">/* lpcm format specific flag */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:14">sc</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:31">bytes_per_frame</name></name>   <operator pos:start="75:35" pos:end="75:35">=</operator> <call pos:start="75:37" pos:end="75:49"><name pos:start="75:37" pos:end="75:45">avio_rb32</name><argument_list pos:start="75:46" pos:end="75:49">(<argument pos:start="75:47" pos:end="75:48"><expr pos:start="75:47" pos:end="75:48"><name pos:start="75:47" pos:end="75:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:14">sc</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:33">samples_per_frame</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <call pos:start="77:37" pos:end="77:49"><name pos:start="77:37" pos:end="77:45">avio_rb32</name><argument_list pos:start="77:46" pos:end="77:49">(<argument pos:start="77:47" pos:end="77:48"><expr pos:start="77:47" pos:end="77:48"><name pos:start="77:47" pos:end="77:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:52"><if pos:start="79:13" pos:end="85:52">if <condition pos:start="79:16" pos:end="79:63">(<expr pos:start="79:17" pos:end="79:62"><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:18">st</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">codec</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">codec_tag</name></name> <operator pos:start="79:38" pos:end="79:39">==</operator> <call pos:start="79:41" pos:end="79:62"><name pos:start="79:41" pos:end="79:45">MKTAG</name><argument_list pos:start="79:46" pos:end="79:62">(<argument pos:start="79:47" pos:end="79:49"><expr pos:start="79:47" pos:end="79:49"><literal type="char" pos:start="79:47" pos:end="79:49">'l'</literal></expr></argument>,<argument pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><literal type="char" pos:start="79:51" pos:end="79:53">'p'</literal></expr></argument>,<argument pos:start="79:55" pos:end="79:57"><expr pos:start="79:55" pos:end="79:57"><literal type="char" pos:start="79:55" pos:end="79:57">'c'</literal></expr></argument>,<argument pos:start="79:59" pos:end="79:61"><expr pos:start="79:59" pos:end="79:61"><literal type="char" pos:start="79:59" pos:end="79:61">'m'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="85:52"><block_content pos:start="81:17" pos:end="85:52">

                <expr_stmt pos:start="81:17" pos:end="85:52"><expr pos:start="81:17" pos:end="85:51"><name pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">codec</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:35">codec_id</name></name> <operator pos:start="81:37" pos:end="81:37">=</operator>

                    <call pos:start="83:21" pos:end="85:51"><name pos:start="83:21" pos:end="83:44">ff_mov_get_lpcm_codec_id</name><argument_list pos:start="83:45" pos:end="85:51">(<argument pos:start="83:46" pos:end="83:77"><expr pos:start="83:46" pos:end="83:77"><name pos:start="83:46" pos:end="83:77"><name pos:start="83:46" pos:end="83:47">st</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:54">codec</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:77">bits_per_coded_sample</name></name></expr></argument>,

                                             <argument pos:start="85:46" pos:end="85:50"><expr pos:start="85:46" pos:end="85:50"><name pos:start="85:46" pos:end="85:50">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="105:9"><if pos:start="89:9" pos:end="105:9">if <condition pos:start="89:12" pos:end="89:66">(<expr pos:start="89:13" pos:end="89:65"><name pos:start="89:13" pos:end="89:19">version</name> <operator pos:start="89:21" pos:end="89:22">==</operator> <literal type="number" pos:start="89:24" pos:end="89:24">0</literal> <operator pos:start="89:26" pos:end="89:27">||</operator> <operator pos:start="89:29" pos:end="89:29">(</operator><name pos:start="89:30" pos:end="89:36">version</name> <operator pos:start="89:38" pos:end="89:39">==</operator> <literal type="number" pos:start="89:41" pos:end="89:41">1</literal> <operator pos:start="89:43" pos:end="89:44">&amp;&amp;</operator> <name pos:start="89:46" pos:end="89:58"><name pos:start="89:46" pos:end="89:47">sc</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:58">audio_cid</name></name> <operator pos:start="89:60" pos:end="89:61">!=</operator> <operator pos:start="89:63" pos:end="89:63">-</operator><literal type="number" pos:start="89:64" pos:end="89:64">2</literal><operator pos:start="89:65" pos:end="89:65">)</operator></expr>)</condition> <block pos:start="89:68" pos:end="105:9">{<block_content pos:start="93:13" pos:end="103:13">

            <comment type="block" pos:start="91:13" pos:end="91:76">/* can't correctly handle variable sized packet as audio unit */</comment>

            <switch pos:start="93:13" pos:end="103:13">switch <condition pos:start="93:20" pos:end="93:40">(<expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:22">st</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:29">codec</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:39">codec_id</name></name></expr>)</condition> <block pos:start="93:42" pos:end="103:13">{<block_content pos:start="95:13" pos:end="101:22">

            <case pos:start="95:13" pos:end="95:33">case <expr pos:start="95:18" pos:end="95:32"><name pos:start="95:18" pos:end="95:32">AV_CODEC_ID_MP2</name></expr>:</case>

            <case pos:start="97:13" pos:end="97:33">case <expr pos:start="97:18" pos:end="97:32"><name pos:start="97:18" pos:end="97:32">AV_CODEC_ID_MP3</name></expr>:</case>

                <expr_stmt pos:start="99:17" pos:end="99:55"><expr pos:start="99:17" pos:end="99:54"><name pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:18">st</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:32">need_parsing</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:54">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="121:5"><if pos:start="111:5" pos:end="121:5">if <condition pos:start="111:8" pos:end="111:24">(<expr pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:10">sc</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:18">format</name></name> <operator pos:start="111:20" pos:end="111:21">==</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>)</condition> <block pos:start="111:26" pos:end="121:5">{<block_content pos:start="113:9" pos:end="119:75">

        <if_stmt pos:start="113:9" pos:end="119:75"><if pos:start="113:9" pos:end="115:75">if <condition pos:start="113:12" pos:end="113:50">(<expr pos:start="113:13" pos:end="113:49"><name pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:21">codec</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:44">bits_per_coded_sample</name></name> <operator pos:start="113:46" pos:end="113:47">==</operator> <literal type="number" pos:start="113:49" pos:end="113:49">8</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:75"><block_content pos:start="115:13" pos:end="115:75">

            <expr_stmt pos:start="115:13" pos:end="115:75"><expr pos:start="115:13" pos:end="115:74"><name pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:14">st</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:21">codec</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:31">codec_id</name></name> <operator pos:start="115:33" pos:end="115:33">=</operator> <call pos:start="115:35" pos:end="115:74"><name pos:start="115:35" pos:end="115:46">mov_codec_id</name><argument_list pos:start="115:47" pos:end="115:74">(<argument pos:start="115:48" pos:end="115:49"><expr pos:start="115:48" pos:end="115:49"><name pos:start="115:48" pos:end="115:49">st</name></expr></argument>, <argument pos:start="115:52" pos:end="115:73"><expr pos:start="115:52" pos:end="115:73"><call pos:start="115:52" pos:end="115:73"><name pos:start="115:52" pos:end="115:56">MKTAG</name><argument_list pos:start="115:57" pos:end="115:73">(<argument pos:start="115:58" pos:end="115:60"><expr pos:start="115:58" pos:end="115:60"><literal type="char" pos:start="115:58" pos:end="115:60">'r'</literal></expr></argument>,<argument pos:start="115:62" pos:end="115:64"><expr pos:start="115:62" pos:end="115:64"><literal type="char" pos:start="115:62" pos:end="115:64">'a'</literal></expr></argument>,<argument pos:start="115:66" pos:end="115:68"><expr pos:start="115:66" pos:end="115:68"><literal type="char" pos:start="115:66" pos:end="115:68">'w'</literal></expr></argument>,<argument pos:start="115:70" pos:end="115:72"><expr pos:start="115:70" pos:end="115:72"><literal type="char" pos:start="115:70" pos:end="115:72">' '</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="117:9" pos:end="119:75">else if <condition pos:start="117:17" pos:end="117:56">(<expr pos:start="117:18" pos:end="117:55"><name pos:start="117:18" pos:end="117:49"><name pos:start="117:18" pos:end="117:19">st</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">codec</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:49">bits_per_coded_sample</name></name> <operator pos:start="117:51" pos:end="117:52">==</operator> <literal type="number" pos:start="117:54" pos:end="117:55">16</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:75"><block_content pos:start="119:13" pos:end="119:75">

            <expr_stmt pos:start="119:13" pos:end="119:75"><expr pos:start="119:13" pos:end="119:74"><name pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:14">st</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:21">codec</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:31">codec_id</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <call pos:start="119:35" pos:end="119:74"><name pos:start="119:35" pos:end="119:46">mov_codec_id</name><argument_list pos:start="119:47" pos:end="119:74">(<argument pos:start="119:48" pos:end="119:49"><expr pos:start="119:48" pos:end="119:49"><name pos:start="119:48" pos:end="119:49">st</name></expr></argument>, <argument pos:start="119:52" pos:end="119:73"><expr pos:start="119:52" pos:end="119:73"><call pos:start="119:52" pos:end="119:73"><name pos:start="119:52" pos:end="119:56">MKTAG</name><argument_list pos:start="119:57" pos:end="119:73">(<argument pos:start="119:58" pos:end="119:60"><expr pos:start="119:58" pos:end="119:60"><literal type="char" pos:start="119:58" pos:end="119:60">'t'</literal></expr></argument>,<argument pos:start="119:62" pos:end="119:64"><expr pos:start="119:62" pos:end="119:64"><literal type="char" pos:start="119:62" pos:end="119:64">'w'</literal></expr></argument>,<argument pos:start="119:66" pos:end="119:68"><expr pos:start="119:66" pos:end="119:68"><literal type="char" pos:start="119:66" pos:end="119:68">'o'</literal></expr></argument>,<argument pos:start="119:70" pos:end="119:72"><expr pos:start="119:70" pos:end="119:72"><literal type="char" pos:start="119:70" pos:end="119:72">'s'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="125:5" pos:end="201:5">switch <condition pos:start="125:12" pos:end="125:32">(<expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:14">st</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:21">codec</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:31">codec_id</name></name></expr>)</condition> <block pos:start="125:34" pos:end="201:5">{<block_content pos:start="127:5" pos:end="199:14">

    <case pos:start="127:5" pos:end="127:28">case <expr pos:start="127:10" pos:end="127:27"><name pos:start="127:10" pos:end="127:27">AV_CODEC_ID_PCM_S8</name></expr>:</case>

    <case pos:start="129:5" pos:end="129:28">case <expr pos:start="129:10" pos:end="129:27"><name pos:start="129:10" pos:end="129:27">AV_CODEC_ID_PCM_U8</name></expr>:</case>

        <if_stmt pos:start="131:9" pos:end="133:56"><if pos:start="131:9" pos:end="133:56">if <condition pos:start="131:12" pos:end="131:51">(<expr pos:start="131:13" pos:end="131:50"><name pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:14">st</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:21">codec</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:44">bits_per_coded_sample</name></name> <operator pos:start="131:46" pos:end="131:47">==</operator> <literal type="number" pos:start="131:49" pos:end="131:50">16</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:56"><block_content pos:start="133:13" pos:end="133:56">

            <expr_stmt pos:start="133:13" pos:end="133:56"><expr pos:start="133:13" pos:end="133:55"><name pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:14">st</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:21">codec</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:31">codec_id</name></name> <operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:55">AV_CODEC_ID_PCM_S16BE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:31">case <expr pos:start="137:10" pos:end="137:30"><name pos:start="137:10" pos:end="137:30">AV_CODEC_ID_PCM_S16LE</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:31">case <expr pos:start="139:10" pos:end="139:30"><name pos:start="139:10" pos:end="139:30">AV_CODEC_ID_PCM_S16BE</name></expr>:</case>

        <if_stmt pos:start="141:9" pos:end="159:62"><if pos:start="141:9" pos:end="143:53">if <condition pos:start="141:12" pos:end="141:50">(<expr pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:14">st</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:21">codec</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:44">bits_per_coded_sample</name></name> <operator pos:start="141:46" pos:end="141:47">==</operator> <literal type="number" pos:start="141:49" pos:end="141:49">8</literal></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:53"><block_content pos:start="143:13" pos:end="143:53">

            <expr_stmt pos:start="143:13" pos:end="143:53"><expr pos:start="143:13" pos:end="143:52"><name pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:14">st</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">codec</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:31">codec_id</name></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <name pos:start="143:35" pos:end="143:52">AV_CODEC_ID_PCM_S8</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="145:9" pos:end="151:62">else if <condition pos:start="145:17" pos:end="145:56">(<expr pos:start="145:18" pos:end="145:55"><name pos:start="145:18" pos:end="145:49"><name pos:start="145:18" pos:end="145:19">st</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:26">codec</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:49">bits_per_coded_sample</name></name> <operator pos:start="145:51" pos:end="145:52">==</operator> <literal type="number" pos:start="145:54" pos:end="145:55">24</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="151:62"><block_content pos:start="147:13" pos:end="151:62">

            <expr_stmt pos:start="147:13" pos:end="151:62"><expr pos:start="147:13" pos:end="151:61"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:14">st</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:21">codec</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">codec_id</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator>

                <ternary pos:start="149:17" pos:end="151:61"><condition pos:start="149:17" pos:end="149:62"><expr pos:start="149:17" pos:end="149:60"><name pos:start="149:17" pos:end="149:35"><name pos:start="149:17" pos:end="149:18">st</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:25">codec</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:35">codec_id</name></name> <operator pos:start="149:37" pos:end="149:38">==</operator> <name pos:start="149:40" pos:end="149:60">AV_CODEC_ID_PCM_S16BE</name></expr> ?</condition><then pos:start="151:17" pos:end="151:37">

                <expr pos:start="151:17" pos:end="151:37"><name pos:start="151:17" pos:end="151:37">AV_CODEC_ID_PCM_S24BE</name></expr> </then><else pos:start="151:39" pos:end="151:61">: <expr pos:start="151:41" pos:end="151:61"><name pos:start="151:41" pos:end="151:61">AV_CODEC_ID_PCM_S24LE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="153:9" pos:end="159:62">else if <condition pos:start="153:17" pos:end="153:56">(<expr pos:start="153:18" pos:end="153:55"><name pos:start="153:18" pos:end="153:49"><name pos:start="153:18" pos:end="153:19">st</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:26">codec</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:49">bits_per_coded_sample</name></name> <operator pos:start="153:51" pos:end="153:52">==</operator> <literal type="number" pos:start="153:54" pos:end="153:55">32</literal></expr>)</condition><block type="pseudo" pos:start="155:14" pos:end="159:62"><block_content pos:start="155:14" pos:end="159:62">

             <expr_stmt pos:start="155:14" pos:end="159:62"><expr pos:start="155:14" pos:end="159:61"><name pos:start="155:14" pos:end="155:32"><name pos:start="155:14" pos:end="155:15">st</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:22">codec</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:32">codec_id</name></name> <operator pos:start="155:34" pos:end="155:34">=</operator>

                <ternary pos:start="157:17" pos:end="159:61"><condition pos:start="157:17" pos:end="157:62"><expr pos:start="157:17" pos:end="157:60"><name pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:18">st</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:25">codec</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:35">codec_id</name></name> <operator pos:start="157:37" pos:end="157:38">==</operator> <name pos:start="157:40" pos:end="157:60">AV_CODEC_ID_PCM_S16BE</name></expr> ?</condition><then pos:start="159:17" pos:end="159:37">

                <expr pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:37">AV_CODEC_ID_PCM_S32BE</name></expr> </then><else pos:start="159:39" pos:end="159:61">: <expr pos:start="159:41" pos:end="159:61"><name pos:start="159:41" pos:end="159:61">AV_CODEC_ID_PCM_S32LE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <comment type="block" pos:start="163:5" pos:end="163:66">/* set values for old format before stsd version 1 appeared */</comment>

    <case pos:start="165:5" pos:end="165:27">case <expr pos:start="165:10" pos:end="165:26"><name pos:start="165:10" pos:end="165:26">AV_CODEC_ID_MACE3</name></expr>:</case>

        <expr_stmt pos:start="167:9" pos:end="167:34"><expr pos:start="167:9" pos:end="167:33"><name pos:start="167:9" pos:end="167:29"><name pos:start="167:9" pos:end="167:10">sc</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:29">samples_per_frame</name></name> <operator pos:start="167:31" pos:end="167:31">=</operator> <literal type="number" pos:start="167:33" pos:end="167:33">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:56"><expr pos:start="169:9" pos:end="169:55"><name pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:10">sc</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:27">bytes_per_frame</name></name>   <operator pos:start="169:31" pos:end="169:31">=</operator> <literal type="number" pos:start="169:33" pos:end="169:33">2</literal> <operator pos:start="169:35" pos:end="169:35">*</operator> <name pos:start="169:37" pos:end="169:55"><name pos:start="169:37" pos:end="169:38">st</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:45">codec</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:55">channels</name></name></expr>;</expr_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:27">case <expr pos:start="173:10" pos:end="173:26"><name pos:start="173:10" pos:end="173:26">AV_CODEC_ID_MACE6</name></expr>:</case>

        <expr_stmt pos:start="175:9" pos:end="175:34"><expr pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:10">sc</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:29">samples_per_frame</name></name> <operator pos:start="175:31" pos:end="175:31">=</operator> <literal type="number" pos:start="175:33" pos:end="175:33">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:56"><expr pos:start="177:9" pos:end="177:55"><name pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:10">sc</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:27">bytes_per_frame</name></name>   <operator pos:start="177:31" pos:end="177:31">=</operator> <literal type="number" pos:start="177:33" pos:end="177:33">1</literal> <operator pos:start="177:35" pos:end="177:35">*</operator> <name pos:start="177:37" pos:end="177:55"><name pos:start="177:37" pos:end="177:38">st</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:45">codec</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:55">channels</name></name></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:34">case <expr pos:start="181:10" pos:end="181:33"><name pos:start="181:10" pos:end="181:33">AV_CODEC_ID_ADPCM_IMA_QT</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:10">sc</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:29">samples_per_frame</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <literal type="number" pos:start="183:33" pos:end="183:34">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:57"><expr pos:start="185:9" pos:end="185:56"><name pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:10">sc</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:27">bytes_per_frame</name></name>   <operator pos:start="185:31" pos:end="185:31">=</operator> <literal type="number" pos:start="185:33" pos:end="185:34">34</literal> <operator pos:start="185:36" pos:end="185:36">*</operator> <name pos:start="185:38" pos:end="185:56"><name pos:start="185:38" pos:end="185:39">st</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:46">codec</name><operator pos:start="185:47" pos:end="185:48">-&gt;</operator><name pos:start="185:49" pos:end="185:56">channels</name></name></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:25">case <expr pos:start="189:10" pos:end="189:24"><name pos:start="189:10" pos:end="189:24">AV_CODEC_ID_GSM</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:36"><expr pos:start="191:9" pos:end="191:35"><name pos:start="191:9" pos:end="191:29"><name pos:start="191:9" pos:end="191:10">sc</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:29">samples_per_frame</name></name> <operator pos:start="191:31" pos:end="191:31">=</operator> <literal type="number" pos:start="191:33" pos:end="191:35">160</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:35"><expr pos:start="193:9" pos:end="193:34"><name pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:10">sc</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:27">bytes_per_frame</name></name>   <operator pos:start="193:31" pos:end="193:31">=</operator> <literal type="number" pos:start="193:33" pos:end="193:34">33</literal></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <default pos:start="197:5" pos:end="197:12">default:</default>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="205:5" pos:end="205:66"><expr pos:start="205:5" pos:end="205:65"><name pos:start="205:5" pos:end="205:19">bits_per_sample</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:65"><name pos:start="205:23" pos:end="205:44">av_get_bits_per_sample</name><argument_list pos:start="205:45" pos:end="205:65">(<argument pos:start="205:46" pos:end="205:64"><expr pos:start="205:46" pos:end="205:64"><name pos:start="205:46" pos:end="205:64"><name pos:start="205:46" pos:end="205:47">st</name><operator pos:start="205:48" pos:end="205:49">-&gt;</operator><name pos:start="205:50" pos:end="205:54">codec</name><operator pos:start="205:55" pos:end="205:56">-&gt;</operator><name pos:start="205:57" pos:end="205:64">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if <condition pos:start="207:8" pos:end="207:24">(<expr pos:start="207:9" pos:end="207:23"><name pos:start="207:9" pos:end="207:23">bits_per_sample</name></expr>)</condition> <block pos:start="207:26" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:71">

        <expr_stmt pos:start="209:9" pos:end="209:59"><expr pos:start="209:9" pos:end="209:58"><name pos:start="209:9" pos:end="209:40"><name pos:start="209:9" pos:end="209:10">st</name><operator pos:start="209:11" pos:end="209:12">-&gt;</operator><name pos:start="209:13" pos:end="209:17">codec</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:40">bits_per_coded_sample</name></name> <operator pos:start="209:42" pos:end="209:42">=</operator> <name pos:start="209:44" pos:end="209:58">bits_per_sample</name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:71"><expr pos:start="211:9" pos:end="211:70"><name pos:start="211:9" pos:end="211:23"><name pos:start="211:9" pos:end="211:10">sc</name><operator pos:start="211:11" pos:end="211:12">-&gt;</operator><name pos:start="211:13" pos:end="211:23">sample_size</name></name> <operator pos:start="211:25" pos:end="211:25">=</operator> <operator pos:start="211:27" pos:end="211:27">(</operator><name pos:start="211:28" pos:end="211:42">bits_per_sample</name> <operator pos:start="211:44" pos:end="211:45">&gt;&gt;</operator> <literal type="number" pos:start="211:47" pos:end="211:47">3</literal><operator pos:start="211:48" pos:end="211:48">)</operator> <operator pos:start="211:50" pos:end="211:50">*</operator> <name pos:start="211:52" pos:end="211:70"><name pos:start="211:52" pos:end="211:53">st</name><operator pos:start="211:54" pos:end="211:55">-&gt;</operator><name pos:start="211:56" pos:end="211:60">codec</name><operator pos:start="211:61" pos:end="211:62">-&gt;</operator><name pos:start="211:63" pos:end="211:70">channels</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
