<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17462.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:5">m_get</name><argument_list pos:start="1:6" pos:end="1:19">(<argument pos:start="1:7" pos:end="1:18">Slirp *slirp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:9" pos:end="63:17">

	<decl_stmt pos:start="5:9" pos:end="5:32"><decl pos:start="5:9" pos:end="5:31"><type pos:start="5:9" pos:end="5:30"><specifier pos:start="5:9" pos:end="5:16">register</specifier> <name pos:start="5:18" pos:end="5:28"><name pos:start="5:18" pos:end="5:23">struct</name> <name pos:start="5:25" pos:end="5:28">mbuf</name></name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:31">m</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:22"><decl pos:start="7:9" pos:end="7:21"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:17">flags</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:18">DEBUG_CALL</name><argument_list pos:start="11:19" pos:end="11:27">(<argument pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:26"><literal type="string" pos:start="11:20" pos:end="11:26">"m_get"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="15:9" pos:end="35:9"><if pos:start="15:9" pos:end="29:9">if <condition pos:start="15:12" pos:end="15:59">(<expr pos:start="15:13" pos:end="15:58"><name pos:start="15:13" pos:end="15:36"><name pos:start="15:13" pos:end="15:17">slirp</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">m_freelist</name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:36">m_next</name></name> <operator pos:start="15:38" pos:end="15:39">==</operator> <operator pos:start="15:41" pos:end="15:41">&amp;</operator><name pos:start="15:42" pos:end="15:58"><name pos:start="15:42" pos:end="15:46">slirp</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:58">m_freelist</name></name></expr>)</condition> <block pos:start="15:61" pos:end="29:9">{<block_content pos:start="17:17" pos:end="27:33">

		<expr_stmt pos:start="17:17" pos:end="17:55"><expr pos:start="17:17" pos:end="17:54"><name pos:start="17:17" pos:end="17:17">m</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <operator pos:start="17:21" pos:end="17:21">(</operator>struct <name pos:start="17:29" pos:end="17:32">mbuf</name> <operator pos:start="17:34" pos:end="17:34">*</operator><operator pos:start="17:35" pos:end="17:35">)</operator><call pos:start="17:36" pos:end="17:54"><name pos:start="17:36" pos:end="17:41">malloc</name><argument_list pos:start="17:42" pos:end="17:54">(<argument pos:start="17:43" pos:end="17:53"><expr pos:start="17:43" pos:end="17:53"><name pos:start="17:43" pos:end="17:53">SLIRP_MSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="19:17" pos:end="19:46"><if pos:start="19:17" pos:end="19:46">if <condition pos:start="19:20" pos:end="19:30">(<expr pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:21">m</name> <operator pos:start="19:23" pos:end="19:24">==</operator> <name pos:start="19:26" pos:end="19:29">NULL</name></expr>)</condition><block type="pseudo" pos:start="19:32" pos:end="19:46"><block_content pos:start="19:32" pos:end="19:46"> <goto pos:start="19:32" pos:end="19:46">goto <name pos:start="19:37" pos:end="19:45">end_error</name>;</goto></block_content></block></if></if_stmt>

		<expr_stmt pos:start="21:17" pos:end="21:38"><expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:21">slirp</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:35">mbuf_alloced</name></name><operator pos:start="21:36" pos:end="21:37">++</operator></expr>;</expr_stmt>

		<if_stmt pos:start="23:17" pos:end="25:41"><if pos:start="23:17" pos:end="25:41">if <condition pos:start="23:20" pos:end="23:54">(<expr pos:start="23:21" pos:end="23:53"><name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:25">slirp</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:39">mbuf_alloced</name></name> <operator pos:start="23:41" pos:end="23:41">&gt;</operator> <name pos:start="23:43" pos:end="23:53">MBUF_THRESH</name></expr>)</condition><block type="pseudo" pos:start="25:25" pos:end="25:41"><block_content pos:start="25:25" pos:end="25:41">

			<expr_stmt pos:start="25:25" pos:end="25:41"><expr pos:start="25:25" pos:end="25:40"><name pos:start="25:25" pos:end="25:29">flags</name> <operator pos:start="25:31" pos:end="25:31">=</operator> <name pos:start="25:33" pos:end="25:40">M_DOFREE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="27:17" pos:end="27:33"><expr pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:17">m</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:24">slirp</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:32">slirp</name></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="29:11" pos:end="35:9">else <block pos:start="29:16" pos:end="35:9">{<block_content pos:start="31:17" pos:end="33:26">

		<expr_stmt pos:start="31:17" pos:end="31:45"><expr pos:start="31:17" pos:end="31:44"><name pos:start="31:17" pos:end="31:17">m</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:44"><name pos:start="31:21" pos:end="31:25">slirp</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:37">m_freelist</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:44">m_next</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="33:17" pos:end="33:26"><expr pos:start="33:17" pos:end="33:25"><call pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:22">remque</name><argument_list pos:start="33:23" pos:end="33:25">(<argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>



	<comment type="block" pos:start="39:9" pos:end="39:40">/* Insert it in the used list */</comment>

	<expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:14">insque</name><argument_list pos:start="41:15" pos:end="41:36">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">m</name></expr></argument>,<argument pos:start="41:18" pos:end="41:35"><expr pos:start="41:18" pos:end="41:35"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:35"><name pos:start="41:19" pos:end="41:23">slirp</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:35">m_usedlist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">m</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">m_flags</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:27">flags</name> <operator pos:start="43:29" pos:end="43:29">|</operator> <name pos:start="43:31" pos:end="43:40">M_USEDLIST</name><operator pos:start="43:41" pos:end="43:41">)</operator></expr>;</expr_stmt>



	<comment type="block" pos:start="47:9" pos:end="47:27">/* Initialise it */</comment>

	<expr_stmt pos:start="49:9" pos:end="49:55"><expr pos:start="49:9" pos:end="49:54"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">m</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">m_size</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:31">SLIRP_MSIZE</name> <operator pos:start="49:33" pos:end="49:33">-</operator> <sizeof pos:start="49:35" pos:end="49:54">sizeof<argument_list pos:start="49:41" pos:end="49:54">(<argument pos:start="49:42" pos:end="49:53"><expr pos:start="49:42" pos:end="49:53">struct <name pos:start="49:49" pos:end="49:53">m_hdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

	<expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">m</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">m_data</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28"><name pos:start="51:21" pos:end="51:21">m</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:28">m_dat</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">m</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">m_len</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">m</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">m_nextpkt</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">m</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">m_prevpkt</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:27">NULL</name></expr>;</expr_stmt>

<label pos:start="59:1" pos:end="59:10"><name pos:start="59:1" pos:end="59:9">end_error</name>:</label>

	<expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:17">DEBUG_ARG</name><argument_list pos:start="61:18" pos:end="61:38">(<argument pos:start="61:19" pos:end="61:27"><expr pos:start="61:19" pos:end="61:27"><literal type="string" pos:start="61:19" pos:end="61:27">"m = %lx"</literal></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><operator pos:start="61:30" pos:end="61:30">(</operator><name pos:start="61:31" pos:end="61:34">long</name> <operator pos:start="61:36" pos:end="61:36">)</operator><name pos:start="61:37" pos:end="61:37">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">m</name></expr>;</return>

</block_content>}</block>
</unit>
