<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20758.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">virgl_cmd_submit_3d</name><parameter_list pos:start="1:32" pos:end="3:68">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:41">VirtIOGPU</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">g</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:67"><decl pos:start="3:33" pos:end="3:67"><type pos:start="3:33" pos:end="3:67"><name pos:start="3:33" pos:end="3:62"><name pos:start="3:33" pos:end="3:38">struct</name> <name pos:start="3:40" pos:end="3:62">virtio_gpu_ctrl_command</name></name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:67">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:16">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:32">virtio_gpu_cmd_submit</name></name></type> <name pos:start="7:34" pos:end="7:35">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:12">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:23">VIRTIO_GPU_FILL_CMD</name><argument_list pos:start="15:24" pos:end="15:27">(<argument pos:start="15:25" pos:end="15:26"><expr pos:start="15:25" pos:end="15:26"><name pos:start="15:25" pos:end="15:26">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:35">trace_virtio_gpu_cmd_ctx_submit</name><argument_list pos:start="17:36" pos:end="17:59">(<argument pos:start="17:37" pos:end="17:49"><expr pos:start="17:37" pos:end="17:49"><name pos:start="17:37" pos:end="17:49"><name pos:start="17:37" pos:end="17:38">cs</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:42">hdr</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:49">ctx_id</name></name></expr></argument>, <argument pos:start="17:52" pos:end="17:58"><expr pos:start="17:52" pos:end="17:58"><name pos:start="17:52" pos:end="17:58"><name pos:start="17:52" pos:end="17:53">cs</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:7">buf</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:27"><name pos:start="21:11" pos:end="21:18">g_malloc</name><argument_list pos:start="21:19" pos:end="21:27">(<argument pos:start="21:20" pos:end="21:26"><expr pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:21">cs</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:26">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:45"><expr pos:start="23:5" pos:end="25:44"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="25:44"><name pos:start="23:9" pos:end="23:18">iov_to_buf</name><argument_list pos:start="23:19" pos:end="25:44">(<argument pos:start="23:20" pos:end="23:35"><expr pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:22">cmd</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:28">elem</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:35">out_sg</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:54"><expr pos:start="23:38" pos:end="23:54"><name pos:start="23:38" pos:end="23:54"><name pos:start="23:38" pos:end="23:40">cmd</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:46">elem</name><operator pos:start="23:47" pos:end="23:47">.</operator><name pos:start="23:48" pos:end="23:54">out_num</name></name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:29"><expr pos:start="25:20" pos:end="25:29"><sizeof pos:start="25:20" pos:end="25:29">sizeof<argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">cs</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">buf</name></expr></argument>, <argument pos:start="25:37" pos:end="25:43"><expr pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:38">cs</name><operator pos:start="25:39" pos:end="25:39">.</operator><name pos:start="25:40" pos:end="25:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name> <operator pos:start="27:11" pos:end="27:12">!=</operator> <name pos:start="27:14" pos:end="27:20"><name pos:start="27:14" pos:end="27:15">cs</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:20">size</name></name></expr>)</condition> <block pos:start="27:23" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:15">

        <expr_stmt pos:start="29:9" pos:end="31:44"><expr pos:start="29:9" pos:end="31:43"><call pos:start="29:9" pos:end="31:43"><name pos:start="29:9" pos:end="29:21">qemu_log_mask</name><argument_list pos:start="29:22" pos:end="31:43">(<argument pos:start="29:23" pos:end="29:37"><expr pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="29:40" pos:end="29:67"><expr pos:start="29:40" pos:end="29:67"><literal type="string" pos:start="29:40" pos:end="29:67">"%s: size mismatch (%zd/%d)"</literal></expr></argument>,

                      <argument pos:start="31:23" pos:end="31:30"><expr pos:start="31:23" pos:end="31:30"><name pos:start="31:23" pos:end="31:30">__func__</name></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">s</name></expr></argument>, <argument pos:start="31:36" pos:end="31:42"><expr pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:37">cs</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:42">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">cmd</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">error</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:58">VIRTIO_GPU_RESP_ERR_INVALID_PARAMETER</name></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:42">(<expr pos:start="41:9" pos:end="41:41"><call pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:32">virtio_gpu_stats_enabled</name><argument_list pos:start="41:33" pos:end="41:41">(<argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:34">g</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:40">conf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:44" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:37">

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">g</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">stats</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:23">req_3d</name></name><operator pos:start="43:24" pos:end="43:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">g</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">stats</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:25">bytes_3d</name></name> <operator pos:start="45:27" pos:end="45:28">+=</operator> <name pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:31">cs</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:36">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><call pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:29">virgl_renderer_submit_cmd</name><argument_list pos:start="51:30" pos:end="51:62">(<argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:33">buf</name></expr></argument>, <argument pos:start="51:36" pos:end="51:48"><expr pos:start="51:36" pos:end="51:48"><name pos:start="51:36" pos:end="51:48"><name pos:start="51:36" pos:end="51:37">cs</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:41">hdr</name><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:48">ctx_id</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:61"><expr pos:start="51:51" pos:end="51:61"><name pos:start="51:51" pos:end="51:57"><name pos:start="51:51" pos:end="51:52">cs</name><operator pos:start="51:53" pos:end="51:53">.</operator><name pos:start="51:54" pos:end="51:57">size</name></name> <operator pos:start="51:59" pos:end="51:59">/</operator> <literal type="number" pos:start="51:61" pos:end="51:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:16"><expr pos:start="55:5" pos:end="55:15"><call pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:10">g_free</name><argument_list pos:start="55:11" pos:end="55:15">(<argument pos:start="55:12" pos:end="55:14"><expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
