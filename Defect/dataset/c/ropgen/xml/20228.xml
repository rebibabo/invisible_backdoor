<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20228.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">mirror_start</name><parameter_list pos:start="1:18" pos:end="17:45">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">job_id</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:42"><decl pos:start="3:19" pos:end="3:42"><type pos:start="3:19" pos:end="3:42"><name pos:start="3:19" pos:end="3:34">BlockDriverState</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:42">target</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:64"><decl pos:start="3:45" pos:end="3:64"><type pos:start="3:45" pos:end="3:64"><specifier pos:start="3:45" pos:end="3:49">const</specifier> <name pos:start="3:51" pos:end="3:54">char</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:64">replaces</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:31"><decl pos:start="5:19" pos:end="5:31"><type pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:25">int64_t</name></type> <name pos:start="5:27" pos:end="5:31">speed</name></decl></parameter>, <parameter pos:start="5:34" pos:end="5:53"><decl pos:start="5:34" pos:end="5:53"><type pos:start="5:34" pos:end="5:53"><name pos:start="5:34" pos:end="5:41">uint32_t</name></type> <name pos:start="5:43" pos:end="5:53">granularity</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:71"><decl pos:start="5:56" pos:end="5:71"><type pos:start="5:56" pos:end="5:71"><name pos:start="5:56" pos:end="5:62">int64_t</name></type> <name pos:start="5:64" pos:end="5:71">buf_size</name></decl></parameter>,

                  <parameter pos:start="7:19" pos:end="7:37"><decl pos:start="7:19" pos:end="7:37"><type pos:start="7:19" pos:end="7:37"><name pos:start="7:19" pos:end="7:32">MirrorSyncMode</name></type> <name pos:start="7:34" pos:end="7:37">mode</name></decl></parameter>, <parameter pos:start="7:40" pos:end="7:74"><decl pos:start="7:40" pos:end="7:74"><type pos:start="7:40" pos:end="7:74"><name pos:start="7:40" pos:end="7:61">BlockMirrorBackingMode</name></type> <name pos:start="7:63" pos:end="7:74">backing_mode</name></decl></parameter>,

                  <parameter pos:start="9:19" pos:end="9:49"><decl pos:start="9:19" pos:end="9:49"><type pos:start="9:19" pos:end="9:49"><name pos:start="9:19" pos:end="9:33">BlockdevOnError</name></type> <name pos:start="9:35" pos:end="9:49">on_source_error</name></decl></parameter>,

                  <parameter pos:start="11:19" pos:end="11:49"><decl pos:start="11:19" pos:end="11:49"><type pos:start="11:19" pos:end="11:49"><name pos:start="11:19" pos:end="11:33">BlockdevOnError</name></type> <name pos:start="11:35" pos:end="11:49">on_target_error</name></decl></parameter>,

                  <parameter pos:start="13:19" pos:end="13:28"><decl pos:start="13:19" pos:end="13:28"><type pos:start="13:19" pos:end="13:28"><name pos:start="13:19" pos:end="13:22">bool</name></type> <name pos:start="13:24" pos:end="13:28">unmap</name></decl></parameter>,

                  <parameter pos:start="15:19" pos:end="15:41"><decl pos:start="15:19" pos:end="15:41"><type pos:start="15:19" pos:end="15:41"><name pos:start="15:19" pos:end="15:37">BlockCompletionFunc</name> <modifier pos:start="15:39" pos:end="15:39">*</modifier></type><name pos:start="15:40" pos:end="15:41">cb</name></decl></parameter>,

                  <parameter pos:start="17:19" pos:end="17:30"><decl pos:start="17:19" pos:end="17:30"><type pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:22">void</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:30">opaque</name></decl></parameter>, <parameter pos:start="17:33" pos:end="17:44"><decl pos:start="17:33" pos:end="17:44"><type pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:37">Error</name> <modifier pos:start="17:39" pos:end="17:39">*</modifier><modifier pos:start="17:40" pos:end="17:40">*</modifier></type><name pos:start="17:41" pos:end="17:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="19:1" pos:end="47:1">{<block_content pos:start="21:5" pos:end="45:61">

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:21">is_none_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:20">BlockDriverState</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:26">base</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:12">mode</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:44">MIRROR_SYNC_MODE_INCREMENTAL</name></expr>)</condition> <block pos:start="27:47" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:65"><call pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:65">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:64"><expr pos:start="29:26" pos:end="29:64"><literal type="string" pos:start="29:26" pos:end="29:64">"Sync mode 'incremental' not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:16">is_none_mode</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:23">mode</name> <operator pos:start="35:25" pos:end="35:26">==</operator> <name pos:start="35:28" pos:end="35:48">MIRROR_SYNC_MODE_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:64"><expr pos:start="37:5" pos:end="37:63"><name pos:start="37:5" pos:end="37:8">base</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <ternary pos:start="37:12" pos:end="37:63"><condition pos:start="37:12" pos:end="37:41"><expr pos:start="37:12" pos:end="37:39"><name pos:start="37:12" pos:end="37:15">mode</name> <operator pos:start="37:17" pos:end="37:18">==</operator> <name pos:start="37:20" pos:end="37:39">MIRROR_SYNC_MODE_TOP</name></expr> ?</condition><then pos:start="37:43" pos:end="37:56"> <expr pos:start="37:43" pos:end="37:56"><call pos:start="37:43" pos:end="37:56"><name pos:start="37:43" pos:end="37:52">backing_bs</name><argument_list pos:start="37:53" pos:end="37:56">(<argument pos:start="37:54" pos:end="37:55"><expr pos:start="37:54" pos:end="37:55"><name pos:start="37:54" pos:end="37:55">bs</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="37:58" pos:end="37:63">: <expr pos:start="37:60" pos:end="37:63"><name pos:start="37:60" pos:end="37:63">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="45:61"><expr pos:start="39:5" pos:end="45:60"><call pos:start="39:5" pos:end="45:60"><name pos:start="39:5" pos:end="39:20">mirror_start_job</name><argument_list pos:start="39:21" pos:end="45:60">(<argument pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:27">job_id</name></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><name pos:start="39:30" pos:end="39:31">bs</name></expr></argument>, <argument pos:start="39:34" pos:end="39:39"><expr pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:39">target</name></expr></argument>, <argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:49">replaces</name></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:26">speed</name></expr></argument>, <argument pos:start="41:29" pos:end="41:39"><expr pos:start="41:29" pos:end="41:39"><name pos:start="41:29" pos:end="41:39">granularity</name></expr></argument>, <argument pos:start="41:42" pos:end="41:49"><expr pos:start="41:42" pos:end="41:49"><name pos:start="41:42" pos:end="41:49">buf_size</name></expr></argument>, <argument pos:start="41:52" pos:end="41:63"><expr pos:start="41:52" pos:end="41:63"><name pos:start="41:52" pos:end="41:63">backing_mode</name></expr></argument>,

                     <argument pos:start="43:22" pos:end="43:36"><expr pos:start="43:22" pos:end="43:36"><name pos:start="43:22" pos:end="43:36">on_source_error</name></expr></argument>, <argument pos:start="43:39" pos:end="43:53"><expr pos:start="43:39" pos:end="43:53"><name pos:start="43:39" pos:end="43:53">on_target_error</name></expr></argument>, <argument pos:start="43:56" pos:end="43:60"><expr pos:start="43:56" pos:end="43:60"><name pos:start="43:56" pos:end="43:60">unmap</name></expr></argument>, <argument pos:start="43:63" pos:end="43:64"><expr pos:start="43:63" pos:end="43:64"><name pos:start="43:63" pos:end="43:64">cb</name></expr></argument>, <argument pos:start="43:67" pos:end="43:72"><expr pos:start="43:67" pos:end="43:72"><name pos:start="43:67" pos:end="43:72">opaque</name></expr></argument>, <argument pos:start="43:75" pos:end="43:78"><expr pos:start="43:75" pos:end="43:78"><name pos:start="43:75" pos:end="43:78">errp</name></expr></argument>,

                     <argument pos:start="45:22" pos:end="45:39"><expr pos:start="45:22" pos:end="45:39"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:39">mirror_job_driver</name></expr></argument>, <argument pos:start="45:42" pos:end="45:53"><expr pos:start="45:42" pos:end="45:53"><name pos:start="45:42" pos:end="45:53">is_none_mode</name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><name pos:start="45:56" pos:end="45:59">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
