<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8008.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">do_snapshot_blkdev</name><parameter_list pos:start="1:23" pos:end="1:76">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">Monitor</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">mon</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">qdict</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:75"><decl pos:start="1:58" pos:end="1:75"><type pos:start="1:58" pos:end="1:75"><name pos:start="1:58" pos:end="1:64">QObject</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:15">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:22">device</name> <init pos:start="5:24" pos:end="5:55">= <expr pos:start="5:26" pos:end="5:55"><call pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:38">qdict_get_str</name><argument_list pos:start="5:39" pos:end="5:55">(<argument pos:start="5:40" pos:end="5:44"><expr pos:start="5:40" pos:end="5:44"><name pos:start="5:40" pos:end="5:44">qdict</name></expr></argument>, <argument pos:start="5:47" pos:end="5:54"><expr pos:start="5:47" pos:end="5:54"><literal type="string" pos:start="5:47" pos:end="5:54">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">filename</name> <init pos:start="7:26" pos:end="7:68">= <expr pos:start="7:28" pos:end="7:68"><call pos:start="7:28" pos:end="7:68"><name pos:start="7:28" pos:end="7:44">qdict_get_try_str</name><argument_list pos:start="7:45" pos:end="7:68">(<argument pos:start="7:46" pos:end="7:50"><expr pos:start="7:46" pos:end="7:50"><name pos:start="7:46" pos:end="7:50">qdict</name></expr></argument>, <argument pos:start="7:53" pos:end="7:67"><expr pos:start="7:53" pos:end="7:67"><literal type="string" pos:start="7:53" pos:end="7:67">"snapshot-file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">format</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:42">qdict_get_try_str</name><argument_list pos:start="9:43" pos:end="9:59">(<argument pos:start="9:44" pos:end="9:48"><expr pos:start="9:44" pos:end="9:48"><name pos:start="9:44" pos:end="9:48">qdict</name></expr></argument>, <argument pos:start="9:51" pos:end="9:58"><expr pos:start="9:51" pos:end="9:58"><literal type="string" pos:start="9:51" pos:end="9:58">"format"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">BlockDriver</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">drv</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:30">old_drv</name></decl>, <decl pos:start="13:33" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:33" pos:end="13:33">*</modifier></type><name pos:start="13:34" pos:end="13:42">proto_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:21">old_filename</name><index pos:start="19:22" pos:end="19:27">[<expr pos:start="19:23" pos:end="19:26"><literal type="number" pos:start="19:23" pos:end="19:26">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:17">filename</name></expr>)</condition> <block pos:start="23:20" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:17">

        <expr_stmt pos:start="25:9" pos:end="25:63"><expr pos:start="25:9" pos:end="25:62"><call pos:start="25:9" pos:end="25:62"><name pos:start="25:9" pos:end="25:21">qerror_report</name><argument_list pos:start="25:22" pos:end="25:62">(<argument pos:start="25:23" pos:end="25:44"><expr pos:start="25:23" pos:end="25:44"><name pos:start="25:23" pos:end="25:44">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="25:47" pos:end="25:61"><expr pos:start="25:47" pos:end="25:61"><literal type="string" pos:start="25:47" pos:end="25:61">"snapshot-file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">-</operator><literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:6">bs</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:18">bdrv_find</name><argument_list pos:start="35:19" pos:end="35:26">(<argument pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:25"><name pos:start="35:20" pos:end="35:25">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">bs</name></expr>)</condition> <block pos:start="37:14" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:17">

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:21">qerror_report</name><argument_list pos:start="39:22" pos:end="39:52">(<argument pos:start="39:23" pos:end="39:43"><expr pos:start="39:23" pos:end="39:43"><name pos:start="39:23" pos:end="39:43">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="39:46" pos:end="39:51"><expr pos:start="39:46" pos:end="39:51"><name pos:start="39:46" pos:end="39:51">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:17"><expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:62"><expr pos:start="49:5" pos:end="49:61"><call pos:start="49:5" pos:end="49:61"><name pos:start="49:5" pos:end="49:11">pstrcpy</name><argument_list pos:start="49:12" pos:end="49:61">(<argument pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:24">old_filename</name></expr></argument>, <argument pos:start="49:27" pos:end="49:46"><expr pos:start="49:27" pos:end="49:46"><sizeof pos:start="49:27" pos:end="49:46">sizeof<argument_list pos:start="49:33" pos:end="49:46">(<argument pos:start="49:34" pos:end="49:45"><expr pos:start="49:34" pos:end="49:45"><name pos:start="49:34" pos:end="49:45">old_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:49" pos:end="49:60"><expr pos:start="49:49" pos:end="49:60"><name pos:start="49:49" pos:end="49:60"><name pos:start="49:49" pos:end="49:50">bs</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:60">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:11">old_drv</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:21"><name pos:start="53:15" pos:end="53:16">bs</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">drv</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:9">flags</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:14">bs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:26">open_flags</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:15">format</name></expr>)</condition> <block pos:start="59:18" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:25">

        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:14">format</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="string" pos:start="61:18" pos:end="61:24">"qcow2"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:7">drv</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:34"><name pos:start="67:11" pos:end="67:26">bdrv_find_format</name><argument_list pos:start="67:27" pos:end="67:34">(<argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:33">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:13">(<expr pos:start="69:9" pos:end="69:12"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:12">drv</name></expr>)</condition> <block pos:start="69:15" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:17">

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:21">qerror_report</name><argument_list pos:start="71:22" pos:end="71:56">(<argument pos:start="71:23" pos:end="71:47"><expr pos:start="71:23" pos:end="71:47"><name pos:start="71:23" pos:end="71:47">QERR_INVALID_BLOCK_FORMAT</name></expr></argument>, <argument pos:start="71:50" pos:end="71:55"><expr pos:start="71:50" pos:end="71:55"><name pos:start="71:50" pos:end="71:55">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:17"><expr pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><literal type="number" pos:start="73:16" pos:end="73:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:13">proto_drv</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:44"><name pos:start="81:17" pos:end="81:34">bdrv_find_protocol</name><argument_list pos:start="81:35" pos:end="81:44">(<argument pos:start="81:36" pos:end="81:43"><expr pos:start="81:36" pos:end="81:43"><name pos:start="81:36" pos:end="81:43">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:18">proto_drv</name></expr>)</condition> <block pos:start="83:21" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:17">

        <expr_stmt pos:start="85:9" pos:end="85:57"><expr pos:start="85:9" pos:end="85:56"><call pos:start="85:9" pos:end="85:56"><name pos:start="85:9" pos:end="85:21">qerror_report</name><argument_list pos:start="85:22" pos:end="85:56">(<argument pos:start="85:23" pos:end="85:47"><expr pos:start="85:23" pos:end="85:47"><name pos:start="85:23" pos:end="85:47">QERR_INVALID_BLOCK_FORMAT</name></expr></argument>, <argument pos:start="85:50" pos:end="85:55"><expr pos:start="85:50" pos:end="85:55"><name pos:start="85:50" pos:end="85:55">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:17"><expr pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <operator pos:start="87:15" pos:end="87:15">-</operator><literal type="number" pos:start="87:16" pos:end="87:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:17">goto <name pos:start="89:14" pos:end="89:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="97:65"><expr pos:start="95:5" pos:end="97:64"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="97:64"><name pos:start="95:11" pos:end="95:25">bdrv_img_create</name><argument_list pos:start="95:26" pos:end="97:64">(<argument pos:start="95:27" pos:end="95:34"><expr pos:start="95:27" pos:end="95:34"><name pos:start="95:27" pos:end="95:34">filename</name></expr></argument>, <argument pos:start="95:37" pos:end="95:42"><expr pos:start="95:37" pos:end="95:42"><name pos:start="95:37" pos:end="95:42">format</name></expr></argument>, <argument pos:start="95:45" pos:end="95:56"><expr pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:46">bs</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:56">filename</name></name></expr></argument>,

                          <argument pos:start="97:27" pos:end="97:46"><expr pos:start="97:27" pos:end="97:46"><name pos:start="97:27" pos:end="97:46"><name pos:start="97:27" pos:end="97:28">bs</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:33">drv</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:46">format_name</name></name></expr></argument>, <argument pos:start="97:49" pos:end="97:52"><expr pos:start="97:49" pos:end="97:52"><name pos:start="97:49" pos:end="97:52">NULL</name></expr></argument>, <argument pos:start="97:55" pos:end="97:56"><expr pos:start="97:55" pos:end="97:56"><operator pos:start="97:55" pos:end="97:55">-</operator><literal type="number" pos:start="97:56" pos:end="97:56">1</literal></expr></argument>, <argument pos:start="97:59" pos:end="97:63"><expr pos:start="97:59" pos:end="97:63"><name pos:start="97:59" pos:end="97:63">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:12">(<expr pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">ret</name></expr>)</condition> <block pos:start="99:14" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:17">

        <goto pos:start="101:9" pos:end="101:17">goto <name pos:start="101:14" pos:end="101:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:18">qemu_aio_flush</name><argument_list pos:start="107:19" pos:end="107:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:19"><expr pos:start="109:5" pos:end="109:18"><call pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:14">bdrv_flush</name><argument_list pos:start="109:15" pos:end="109:18">(<argument pos:start="109:16" pos:end="109:17"><expr pos:start="109:16" pos:end="109:17"><name pos:start="109:16" pos:end="109:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:19"><expr pos:start="113:5" pos:end="113:18"><call pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:14">bdrv_close</name><argument_list pos:start="113:15" pos:end="113:18">(<argument pos:start="113:16" pos:end="113:17"><expr pos:start="113:16" pos:end="113:17"><name pos:start="113:16" pos:end="113:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="115:45"><name pos:start="115:11" pos:end="115:19">bdrv_open</name><argument_list pos:start="115:20" pos:end="115:45">(<argument pos:start="115:21" pos:end="115:22"><expr pos:start="115:21" pos:end="115:22"><name pos:start="115:21" pos:end="115:22">bs</name></expr></argument>, <argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:32">filename</name></expr></argument>, <argument pos:start="115:35" pos:end="115:39"><expr pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:39">flags</name></expr></argument>, <argument pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:44">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="117:5" pos:end="125:7">/*

     * If reopening the image file we just created fails, fall back

     * and try to re-open the original image. If that fails too, we

     * are in serious trouble.

     */</comment>

    <if_stmt pos:start="127:5" pos:end="141:5"><if pos:start="127:5" pos:end="141:5">if <condition pos:start="127:8" pos:end="127:17">(<expr pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:14">!=</operator> <literal type="number" pos:start="127:16" pos:end="127:16">0</literal></expr>)</condition> <block pos:start="127:19" pos:end="141:5">{<block_content pos:start="129:9" pos:end="139:9">

        <expr_stmt pos:start="129:9" pos:end="129:58"><expr pos:start="129:9" pos:end="129:57"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <call pos:start="129:15" pos:end="129:57"><name pos:start="129:15" pos:end="129:23">bdrv_open</name><argument_list pos:start="129:24" pos:end="129:57">(<argument pos:start="129:25" pos:end="129:26"><expr pos:start="129:25" pos:end="129:26"><name pos:start="129:25" pos:end="129:26">bs</name></expr></argument>, <argument pos:start="129:29" pos:end="129:40"><expr pos:start="129:29" pos:end="129:40"><name pos:start="129:29" pos:end="129:40">old_filename</name></expr></argument>, <argument pos:start="129:43" pos:end="129:47"><expr pos:start="129:43" pos:end="129:47"><name pos:start="129:43" pos:end="129:47">flags</name></expr></argument>, <argument pos:start="129:50" pos:end="129:56"><expr pos:start="129:50" pos:end="129:56"><name pos:start="129:50" pos:end="129:56">old_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="139:9"><if pos:start="131:9" pos:end="135:9">if <condition pos:start="131:12" pos:end="131:21">(<expr pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:18">!=</operator> <literal type="number" pos:start="131:20" pos:end="131:20">0</literal></expr>)</condition> <block pos:start="131:23" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:63">

            <expr_stmt pos:start="133:13" pos:end="133:63"><expr pos:start="133:13" pos:end="133:62"><call pos:start="133:13" pos:end="133:62"><name pos:start="133:13" pos:end="133:25">qerror_report</name><argument_list pos:start="133:26" pos:end="133:62">(<argument pos:start="133:27" pos:end="133:47"><expr pos:start="133:27" pos:end="133:47"><name pos:start="133:27" pos:end="133:47">QERR_OPEN_FILE_FAILED</name></expr></argument>, <argument pos:start="133:50" pos:end="133:61"><expr pos:start="133:50" pos:end="133:61"><name pos:start="133:50" pos:end="133:61">old_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="139:9">else <block pos:start="135:16" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:59">

            <expr_stmt pos:start="137:13" pos:end="137:59"><expr pos:start="137:13" pos:end="137:58"><call pos:start="137:13" pos:end="137:58"><name pos:start="137:13" pos:end="137:25">qerror_report</name><argument_list pos:start="137:26" pos:end="137:58">(<argument pos:start="137:27" pos:end="137:47"><expr pos:start="137:27" pos:end="137:47"><name pos:start="137:27" pos:end="137:47">QERR_OPEN_FILE_FAILED</name></expr></argument>, <argument pos:start="137:50" pos:end="137:57"><expr pos:start="137:50" pos:end="137:57"><name pos:start="137:50" pos:end="137:57">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="143:1" pos:end="143:4"><name pos:start="143:1" pos:end="143:3">out</name>:</label>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:12">(<expr pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:11">ret</name></expr>)</condition> <block pos:start="145:14" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:17">

        <expr_stmt pos:start="147:9" pos:end="147:17"><expr pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <operator pos:start="147:15" pos:end="147:15">-</operator><literal type="number" pos:start="147:16" pos:end="147:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="153:5" pos:end="153:15">return <expr pos:start="153:12" pos:end="153:14"><name pos:start="153:12" pos:end="153:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
