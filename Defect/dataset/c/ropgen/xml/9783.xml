<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9783.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:12">do_icbi</name> <parameter_list pos:start="1:14" pos:end="1:19">(<parameter pos:start="1:15" pos:end="1:18"><decl pos:start="1:15" pos:end="1:18"><type pos:start="1:15" pos:end="1:18"><name pos:start="1:15" pos:end="1:18">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:56">

    <decl_stmt pos:start="5:5" pos:end="18:0"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">tmp</name></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="15:7">/* Invalidate one cache line :

     * PowerPC specification says this is to be treated like a load

     * (not a fetch) by the MMU. To be sure it will be so,

     * do the load "by hand".

     */</comment>

<cpp:if pos:start="17:1" pos:end="17:25">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:25">(<argument pos:start="17:13" pos:end="17:24"><expr pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="19:5" pos:end="24:0"><if pos:start="19:5" pos:end="24:0">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">msr_sf</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="24:0"><block_content pos:start="21:9" pos:end="24:0">

        <expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:10">T0</name> <operator pos:start="21:12" pos:end="21:13">&amp;=</operator> <literal type="number" pos:start="21:15" pos:end="21:27">0xFFFFFFFFULL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:7">tmp</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:24"><name pos:start="25:11" pos:end="25:20">ldl_kernel</name><argument_list pos:start="25:21" pos:end="25:24">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">T0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:6">T0</name> <operator pos:start="27:8" pos:end="27:9">&amp;=</operator> <operator pos:start="27:11" pos:end="27:11">~</operator><operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:28">ICACHE_LINE_SIZE</name> <operator pos:start="27:30" pos:end="27:30">-</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal><operator pos:start="27:33" pos:end="27:33">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:28">tb_invalidate_page_range</name><argument_list pos:start="29:29" pos:end="29:55">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">T0</name></expr></argument>, <argument pos:start="29:34" pos:end="29:54"><expr pos:start="29:34" pos:end="29:54"><name pos:start="29:34" pos:end="29:35">T0</name> <operator pos:start="29:37" pos:end="29:37">+</operator> <name pos:start="29:39" pos:end="29:54">ICACHE_LINE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
