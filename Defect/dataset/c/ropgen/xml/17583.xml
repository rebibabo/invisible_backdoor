<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17583.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:25">bdrv_qiov_is_aligned</name><parameter_list pos:start="1:26" pos:end="1:67">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:60">QEMUIOVector</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:16">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:20">alignment</name> <init pos:start="7:22" pos:end="7:45">= <expr pos:start="7:24" pos:end="7:45"><call pos:start="7:24" pos:end="7:45"><name pos:start="7:24" pos:end="7:41">bdrv_opt_mem_align</name><argument_list pos:start="7:42" pos:end="7:45">(<argument pos:start="7:43" pos:end="7:44"><expr pos:start="7:43" pos:end="7:44"><name pos:start="7:43" pos:end="7:44">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="25:5">for <control pos:start="11:9" pos:end="11:36">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:31"><expr pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:30"><name pos:start="11:21" pos:end="11:24">qiov</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">niov</name></name></expr>;</condition> <incr pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:33">i</name><operator pos:start="11:34" pos:end="11:35">++</operator></expr></incr>)</control> <block pos:start="11:38" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:9">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:58">(<expr pos:start="13:13" pos:end="13:57"><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:22">uintptr_t</name><operator pos:start="13:23" pos:end="13:23">)</operator> <name pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:28">qiov</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">iov</name><index pos:start="13:34" pos:end="13:36">[<expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">i</name></expr>]</index></name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:45">iov_base</name> <operator pos:start="13:47" pos:end="13:47">%</operator> <name pos:start="13:49" pos:end="13:57">alignment</name></expr>)</condition> <block pos:start="13:60" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:25">

            <return pos:start="15:13" pos:end="15:25">return <expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:45">(<expr pos:start="19:13" pos:end="19:44"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:16">qiov</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:21">iov</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">i</name></expr>]</index></name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:32">iov_len</name> <operator pos:start="19:34" pos:end="19:34">%</operator> <name pos:start="19:36" pos:end="19:44">alignment</name></expr>)</condition> <block pos:start="19:47" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:25">

            <return pos:start="21:13" pos:end="21:25">return <expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="29:5" pos:end="29:16">return <expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
