<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4184.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">net_init_tap</name><parameter_list pos:start="1:17" pos:end="3:52">(<parameter pos:start="1:18" pos:end="1:45"><decl pos:start="1:18" pos:end="1:45"><type pos:start="1:18" pos:end="1:45"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:39">NetClientOptions</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">opts</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">name</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:37"><decl pos:start="3:18" pos:end="3:37"><type pos:start="3:18" pos:end="3:37"><name pos:start="3:18" pos:end="3:31">NetClientState</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">peer</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:44">Error</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier><modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:13">

    <comment type="block" pos:start="7:5" pos:end="7:48">/* FIXME error_setg(errp, ...) on failure */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:28"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:26">NetdevTapOptions</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">tap</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><call pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:53">(<argument pos:start="13:12" pos:end="13:52"><expr pos:start="13:12" pos:end="13:52"><name pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:15">opts</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">kind</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:52">NET_CLIENT_OPTIONS_KIND_TAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">tap</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:19"><name pos:start="15:11" pos:end="15:14">opts</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:19">tap</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:12">tap</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:24">has_ifname</name></name></expr>)</condition> <block pos:start="19:27" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="21:46">(<argument pos:start="21:22" pos:end="21:45"><expr pos:start="21:22" pos:end="21:45"><literal type="string" pos:start="21:22" pos:end="21:45">"tap: no interface name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:61">(<expr pos:start="29:9" pos:end="29:60"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:22">tap_win32_init</name><argument_list pos:start="29:23" pos:end="29:54">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">peer</name></expr></argument>, <argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><literal type="string" pos:start="29:30" pos:end="29:34">"tap"</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">name</name></expr></argument>, <argument pos:start="29:43" pos:end="29:53"><expr pos:start="29:43" pos:end="29:53"><name pos:start="29:43" pos:end="29:53"><name pos:start="29:43" pos:end="29:45">tap</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:53">ifname</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:56" pos:end="29:57">==</operator> <operator pos:start="29:59" pos:end="29:59">-</operator><literal type="number" pos:start="29:60" pos:end="29:60">1</literal></expr>)</condition> <block pos:start="29:63" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
