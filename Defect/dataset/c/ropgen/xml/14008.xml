<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14008.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_sync</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:14">l</name> <init pos:start="5:16" pos:end="5:40">= <expr pos:start="5:18" pos:end="5:40"><operator pos:start="5:18" pos:end="5:18">(</operator><name pos:start="5:19" pos:end="5:29"><name pos:start="5:19" pos:end="5:21">ctx</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:29">opcode</name></name> <operator pos:start="5:31" pos:end="5:32">&gt;&gt;</operator> <literal type="number" pos:start="5:34" pos:end="5:35">21</literal><operator pos:start="5:36" pos:end="5:36">)</operator> <operator pos:start="5:38" pos:end="5:38">&amp;</operator> <literal type="number" pos:start="5:40" pos:end="5:40">3</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="23:7">/*

     * We may need to check for a pending TLB flush.

     *

     * We do this on ptesync (l == 2) on ppc64 and any sync pn ppc32.

     *

     * Additionally, this can only happen in kernel mode however so

     * check MSR_PR as well.

     */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:64">(<expr pos:start="25:9" pos:end="25:63"><operator pos:start="25:9" pos:end="25:9">(</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:11">l</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <literal type="number" pos:start="25:16" pos:end="25:16">2</literal><operator pos:start="25:17" pos:end="25:17">)</operator> <operator pos:start="25:19" pos:end="25:20">||</operator> <operator pos:start="25:22" pos:end="25:22">!</operator><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:26">ctx</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:39">insns_flags</name></name> <operator pos:start="25:41" pos:end="25:41">&amp;</operator> <name pos:start="25:43" pos:end="25:49">PPC_64B</name><operator pos:start="25:50" pos:end="25:50">)</operator><operator pos:start="25:51" pos:end="25:51">)</operator> <operator pos:start="25:53" pos:end="25:54">&amp;&amp;</operator> <operator pos:start="25:56" pos:end="25:56">!</operator><name pos:start="25:57" pos:end="25:63"><name pos:start="25:57" pos:end="25:59">ctx</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:63">pr</name></name></expr>)</condition> <block pos:start="25:66" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:33">

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:27">gen_check_tlb_flush</name><argument_list pos:start="27:28" pos:end="27:32">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
