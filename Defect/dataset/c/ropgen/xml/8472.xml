<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8472.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_pci_device_plugged</name><parameter_list pos:start="1:38" pos:end="1:53">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:67">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:41">= <expr pos:start="5:29" pos:end="5:41"><call pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:38">VIRTIO_PCI</name><argument_list pos:start="5:39" pos:end="5:41">(<argument pos:start="5:40" pos:end="5:40"><expr pos:start="5:40" pos:end="5:40"><name pos:start="5:40" pos:end="5:40">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">bus</name> <init pos:start="7:25" pos:end="7:37">= <expr pos:start="7:27" pos:end="7:37"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:32">proxy</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:37">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:59"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">VirtIODevice</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">vdev</name> <init pos:start="13:24" pos:end="13:59">= <expr pos:start="13:26" pos:end="13:59"><call pos:start="13:26" pos:end="13:59"><name pos:start="13:26" pos:end="13:46">virtio_bus_get_device</name><argument_list pos:start="13:47" pos:end="13:59">(<argument pos:start="13:48" pos:end="13:58"><expr pos:start="13:48" pos:end="13:58"><operator pos:start="13:48" pos:end="13:48">&amp;</operator><name pos:start="13:49" pos:end="13:58"><name pos:start="13:49" pos:end="13:53">proxy</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:10">config</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:34"><name pos:start="17:14" pos:end="17:18">proxy</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:27">pci_dev</name><operator pos:start="17:28" pos:end="17:28">.</operator><name pos:start="17:29" pos:end="17:34">config</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:13">proxy</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">class_code</name></name></expr>)</condition> <block pos:start="19:28" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:56">

        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:28">pci_config_set_class</name><argument_list pos:start="21:29" pos:end="21:55">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">config</name></expr></argument>, <argument pos:start="21:38" pos:end="21:54"><expr pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:42">proxy</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:54">class_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:55"><expr pos:start="25:5" pos:end="27:54"><call pos:start="25:5" pos:end="27:54"><name pos:start="25:5" pos:end="25:16">pci_set_word</name><argument_list pos:start="25:17" pos:end="27:54">(<argument pos:start="25:18" pos:end="25:49"><expr pos:start="25:18" pos:end="25:49"><name pos:start="25:18" pos:end="25:23">config</name> <operator pos:start="25:25" pos:end="25:25">+</operator> <name pos:start="25:27" pos:end="25:49">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:53"><expr pos:start="27:18" pos:end="27:53"><call pos:start="27:18" pos:end="27:53"><name pos:start="27:18" pos:end="27:29">pci_get_word</name><argument_list pos:start="27:30" pos:end="27:53">(<argument pos:start="27:31" pos:end="27:52"><expr pos:start="27:31" pos:end="27:52"><name pos:start="27:31" pos:end="27:36">config</name> <operator pos:start="27:38" pos:end="27:38">+</operator> <name pos:start="27:40" pos:end="27:52">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:73"><expr pos:start="29:5" pos:end="29:72"><call pos:start="29:5" pos:end="29:72"><name pos:start="29:5" pos:end="29:16">pci_set_word</name><argument_list pos:start="29:17" pos:end="29:72">(<argument pos:start="29:18" pos:end="29:42"><expr pos:start="29:18" pos:end="29:42"><name pos:start="29:18" pos:end="29:23">config</name> <operator pos:start="29:25" pos:end="29:25">+</operator> <name pos:start="29:27" pos:end="29:42">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="29:45" pos:end="29:71"><expr pos:start="29:45" pos:end="29:71"><call pos:start="29:45" pos:end="29:71"><name pos:start="29:45" pos:end="29:66">virtio_bus_get_vdev_id</name><argument_list pos:start="29:67" pos:end="29:71">(<argument pos:start="29:68" pos:end="29:70"><expr pos:start="29:68" pos:end="29:70"><name pos:start="29:68" pos:end="29:70">bus</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:10">config</name><index pos:start="31:11" pos:end="31:29">[<expr pos:start="31:12" pos:end="31:28"><name pos:start="31:12" pos:end="31:28">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="37:69">(<expr pos:start="35:9" pos:end="37:68"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">proxy</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">nvectors</name></name> <operator pos:start="35:25" pos:end="35:26">&amp;&amp;</operator>

        <call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:31">msix_init_exclusive_bar</name><argument_list pos:start="37:32" pos:end="37:68">(<argument pos:start="37:33" pos:end="37:47"><expr pos:start="37:33" pos:end="37:47"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:38">proxy</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:47">pci_dev</name></name></expr></argument>, <argument pos:start="37:50" pos:end="37:64"><expr pos:start="37:50" pos:end="37:64"><name pos:start="37:50" pos:end="37:64"><name pos:start="37:50" pos:end="37:54">proxy</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:64">nvectors</name></name></expr></argument>, <argument pos:start="37:67" pos:end="37:67"><expr pos:start="37:67" pos:end="37:67"><literal type="number" pos:start="37:67" pos:end="37:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:71" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:28">

        <expr_stmt pos:start="39:9" pos:end="41:38"><expr pos:start="39:9" pos:end="41:37"><call pos:start="39:9" pos:end="41:37"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="41:37">(<argument pos:start="39:22" pos:end="39:62"><expr pos:start="39:22" pos:end="39:62"><literal type="string" pos:start="39:22" pos:end="39:55">"unable to init msix vectors to %"</literal> <name pos:start="39:57" pos:end="39:62">PRIu32</name></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:36"><expr pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:26">proxy</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:36">nvectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:13">proxy</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">nvectors</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:9">proxy</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:18">pci_dev</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:31">config_write</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:53">virtio_write_config</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:47"><expr pos:start="53:5" pos:end="55:46"><name pos:start="53:5" pos:end="53:8">size</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:50"><name pos:start="53:12" pos:end="53:33">VIRTIO_PCI_REGION_SIZE</name><argument_list pos:start="53:34" pos:end="53:50">(<argument pos:start="53:35" pos:end="53:49"><expr pos:start="53:35" pos:end="53:49"><operator pos:start="53:35" pos:end="53:35">&amp;</operator><name pos:start="53:36" pos:end="53:49"><name pos:start="53:36" pos:end="53:40">proxy</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:49">pci_dev</name></name></expr></argument>)</argument_list></call>

         <operator pos:start="55:10" pos:end="55:10">+</operator> <call pos:start="55:12" pos:end="55:46"><name pos:start="55:12" pos:end="55:41">virtio_bus_get_vdev_config_len</name><argument_list pos:start="55:42" pos:end="55:46">(<argument pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:45">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:26">(<expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:14">&amp;</operator> <operator pos:start="57:16" pos:end="57:16">(</operator><name pos:start="57:17" pos:end="57:20">size</name> <operator pos:start="57:22" pos:end="57:22">-</operator> <literal type="number" pos:start="57:24" pos:end="57:24">1</literal><operator pos:start="57:25" pos:end="57:25">)</operator></expr>)</condition> <block pos:start="57:28" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:35">

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:12">size</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <literal type="number" pos:start="59:16" pos:end="59:16">1</literal> <operator pos:start="59:18" pos:end="59:19">&lt;&lt;</operator> <call pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:28">qemu_fls</name><argument_list pos:start="59:29" pos:end="59:34">(<argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><name pos:start="59:30" pos:end="59:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="67:53"><expr pos:start="65:5" pos:end="67:52"><call pos:start="65:5" pos:end="67:52"><name pos:start="65:5" pos:end="65:25">memory_region_init_io</name><argument_list pos:start="65:26" pos:end="67:52">(<argument pos:start="65:27" pos:end="65:37"><expr pos:start="65:27" pos:end="65:37"><operator pos:start="65:27" pos:end="65:27">&amp;</operator><name pos:start="65:28" pos:end="65:37"><name pos:start="65:28" pos:end="65:32">proxy</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:37">bar</name></name></expr></argument>, <argument pos:start="65:40" pos:end="65:52"><expr pos:start="65:40" pos:end="65:52"><call pos:start="65:40" pos:end="65:52"><name pos:start="65:40" pos:end="65:45">OBJECT</name><argument_list pos:start="65:46" pos:end="65:52">(<argument pos:start="65:47" pos:end="65:51"><expr pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:51">proxy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:55" pos:end="65:76"><expr pos:start="65:55" pos:end="65:76"><operator pos:start="65:55" pos:end="65:55">&amp;</operator><name pos:start="65:56" pos:end="65:76">virtio_pci_config_ops</name></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">proxy</name></expr></argument>, <argument pos:start="67:34" pos:end="67:45"><expr pos:start="67:34" pos:end="67:45"><literal type="string" pos:start="67:34" pos:end="67:45">"virtio-pci"</literal></expr></argument>, <argument pos:start="67:48" pos:end="67:51"><expr pos:start="67:48" pos:end="67:51"><name pos:start="67:48" pos:end="67:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:34"><expr pos:start="69:5" pos:end="71:33"><call pos:start="69:5" pos:end="71:33"><name pos:start="69:5" pos:end="69:20">pci_register_bar</name><argument_list pos:start="69:21" pos:end="71:33">(<argument pos:start="69:22" pos:end="69:36"><expr pos:start="69:22" pos:end="69:36"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:27">proxy</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:36">pci_dev</name></name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">0</literal></expr></argument>, <argument pos:start="69:42" pos:end="69:66"><expr pos:start="69:42" pos:end="69:66"><name pos:start="69:42" pos:end="69:66">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:32"><expr pos:start="71:22" pos:end="71:32"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:32"><name pos:start="71:23" pos:end="71:27">proxy</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:32">bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:35">(<expr pos:start="75:9" pos:end="75:34"><operator pos:start="75:9" pos:end="75:9">!</operator><call pos:start="75:10" pos:end="75:34"><name pos:start="75:10" pos:end="75:32">kvm_has_many_ioeventfds</name><argument_list pos:start="75:33" pos:end="75:34">()</argument_list></call></expr>)</condition> <block pos:start="75:37" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:55">

        <expr_stmt pos:start="77:9" pos:end="77:55"><expr pos:start="77:9" pos:end="77:54"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:13">proxy</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:20">flags</name></name> <operator pos:start="77:22" pos:end="77:23">&amp;=</operator> <operator pos:start="77:25" pos:end="77:25">~</operator><name pos:start="77:26" pos:end="77:54">VIRTIO_PCI_FLAG_USE_IOEVENTFD</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:67"><expr pos:start="83:5" pos:end="83:66"><call pos:start="83:5" pos:end="83:66"><name pos:start="83:5" pos:end="83:22">virtio_add_feature</name><argument_list pos:start="83:23" pos:end="83:66">(<argument pos:start="83:24" pos:end="83:43"><expr pos:start="83:24" pos:end="83:43"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:43"><name pos:start="83:25" pos:end="83:28">vdev</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:43">host_features</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:65"><expr pos:start="83:46" pos:end="83:65"><name pos:start="83:46" pos:end="83:65">VIRTIO_F_BAD_FEATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
