<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4086.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_channel_idx</name><parameter_list pos:start="1:27" pos:end="1:71">(<parameter pos:start="1:28" pos:end="1:37"><decl pos:start="1:28" pos:end="1:37"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier><modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">map</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">ch</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">char</name></type> <name pos:start="1:54" pos:end="1:58">delim</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">max_ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="30:1">{<block_content pos:start="5:5" pos:end="28:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">next</name> <init pos:start="5:16" pos:end="5:35">= <expr pos:start="5:18" pos:end="5:35"><call pos:start="5:18" pos:end="5:35"><name pos:start="5:18" pos:end="5:22">split</name><argument_list pos:start="5:23" pos:end="5:35">(<argument pos:start="5:24" pos:end="5:27"><expr pos:start="5:24" pos:end="5:27"><operator pos:start="5:24" pos:end="5:24">*</operator><name pos:start="5:25" pos:end="5:27">map</name></expr></argument>, <argument pos:start="5:30" pos:end="5:34"><expr pos:start="5:30" pos:end="5:34"><name pos:start="5:30" pos:end="5:34">delim</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="16:23"><if pos:start="11:5" pos:end="16:23">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">next</name> <operator pos:start="11:15" pos:end="11:16">&amp;&amp;</operator> <name pos:start="11:18" pos:end="11:22">delim</name> <operator pos:start="11:24" pos:end="11:25">==</operator> <literal type="char" pos:start="11:27" pos:end="11:29">'-'</literal></expr>)</condition><block type="pseudo" pos:start="16:5" pos:end="16:23"><block_content pos:start="16:5" pos:end="16:23">




    <expr_stmt pos:start="16:5" pos:end="16:23"><expr pos:start="16:5" pos:end="16:22"><name pos:start="16:5" pos:end="16:7">len</name> <operator pos:start="16:9" pos:end="16:9">=</operator> <call pos:start="16:11" pos:end="16:22"><name pos:start="16:11" pos:end="16:16">strlen</name><argument_list pos:start="16:17" pos:end="16:22">(<argument pos:start="16:18" pos:end="16:21"><expr pos:start="16:18" pos:end="16:21"><operator pos:start="16:18" pos:end="16:18">*</operator><name pos:start="16:19" pos:end="16:21">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="18:5" pos:end="18:33"><expr pos:start="18:5" pos:end="18:32"><call pos:start="18:5" pos:end="18:32"><name pos:start="18:5" pos:end="18:10">sscanf</name><argument_list pos:start="18:11" pos:end="18:32">(<argument pos:start="18:12" pos:end="18:15"><expr pos:start="18:12" pos:end="18:15"><operator pos:start="18:12" pos:end="18:12">*</operator><name pos:start="18:13" pos:end="18:15">map</name></expr></argument>, <argument pos:start="18:18" pos:end="18:23"><expr pos:start="18:18" pos:end="18:23"><literal type="string" pos:start="18:18" pos:end="18:23">"%d%n"</literal></expr></argument>, <argument pos:start="18:26" pos:end="18:27"><expr pos:start="18:26" pos:end="18:27"><name pos:start="18:26" pos:end="18:27">ch</name></expr></argument>, <argument pos:start="18:30" pos:end="18:31"><expr pos:start="18:30" pos:end="18:31"><operator pos:start="18:30" pos:end="18:30">&amp;</operator><name pos:start="18:31" pos:end="18:31">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="20:5" pos:end="26:16"><if pos:start="20:5" pos:end="26:16">if <condition pos:start="20:8" pos:end="20:17">(<expr pos:start="20:9" pos:end="20:16"><name pos:start="20:9" pos:end="20:9">n</name> <operator pos:start="20:11" pos:end="20:12">!=</operator> <name pos:start="20:14" pos:end="20:16">len</name></expr>)</condition><block type="pseudo" pos:start="23:5" pos:end="26:16"><block_content pos:start="23:5" pos:end="26:16">


    <if_stmt pos:start="23:5" pos:end="26:16"><if pos:start="23:5" pos:end="26:16">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:11">ch</name> <argument_list type="generic" pos:start="23:13" pos:end="23:24">&lt; <argument pos:start="23:15" pos:end="23:22"><expr pos:start="23:15" pos:end="23:22"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal> <operator pos:start="23:17" pos:end="23:18">||</operator> <operator pos:start="23:20" pos:end="23:20">*</operator><name pos:start="23:21" pos:end="23:22">ch</name></expr></argument> &gt;</argument_list></name> <name pos:start="23:26" pos:end="23:31">max_ch</name></expr>)</condition><block type="pseudo" pos:start="26:5" pos:end="26:16"><block_content pos:start="26:5" pos:end="26:16">


    <expr_stmt pos:start="26:5" pos:end="26:16"><expr pos:start="26:5" pos:end="26:15"><operator pos:start="26:5" pos:end="26:5">*</operator><name pos:start="26:6" pos:end="26:8">map</name> <operator pos:start="26:10" pos:end="26:10">=</operator> <name pos:start="26:12" pos:end="26:15">next</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
