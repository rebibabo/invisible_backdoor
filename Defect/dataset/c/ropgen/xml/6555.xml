<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6555.c" pos:tabs="8"><function pos:start="1:1" pos:end="599:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_h264_decode_seq_parameter_set</name><parameter_list pos:start="1:37" pos:end="3:78">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:50">GetBitContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">gb</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:70">AVCodecContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">avctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:54"><decl pos:start="3:38" pos:end="3:54"><type pos:start="3:38" pos:end="3:54"><name pos:start="3:38" pos:end="3:50">H264ParamSets</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">ps</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:77"><decl pos:start="3:57" pos:end="3:77"><type pos:start="3:57" pos:end="3:77"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:77">ignore_truncation</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="599:1">{<block_content pos:start="7:5" pos:end="597:31">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVBufferRef</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:24">sps_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">profile_idc</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">level_idc</name></decl>, <decl pos:start="9:33" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:52">constraint_set_flags</name> <init pos:start="9:54" pos:end="9:56">= <expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">sps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:36">log2_max_frame_num_minus4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">SPS</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:11">sps_buf</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:30">av_buffer_allocz</name><argument_list pos:start="19:31" pos:end="19:44">(<argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><sizeof pos:start="19:32" pos:end="19:43">sizeof<argument_list pos:start="19:38" pos:end="19:43">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><operator pos:start="19:39" pos:end="19:39">*</operator><name pos:start="19:40" pos:end="19:42">sps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:16">sps_buf</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:7">sps</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">(</operator><name pos:start="25:12" pos:end="25:14">SPS</name><operator pos:start="25:15" pos:end="25:15">*</operator><operator pos:start="25:16" pos:end="25:16">)</operator><name pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:23">sps_buf</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">sps</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">data_size</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:23">gb</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:35">buffer_end</name></name> <operator pos:start="29:37" pos:end="29:37">-</operator> <name pos:start="29:39" pos:end="29:48"><name pos:start="29:39" pos:end="29:40">gb</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:48">buffer</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:43">(<expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:11">sps</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:22">data_size</name></name> <operator pos:start="31:24" pos:end="31:24">&gt;</operator> <sizeof pos:start="31:26" pos:end="31:42">sizeof<argument_list pos:start="31:32" pos:end="31:42">(<argument pos:start="31:33" pos:end="31:41"><expr pos:start="31:33" pos:end="31:41"><name pos:start="31:33" pos:end="31:41"><name pos:start="31:33" pos:end="31:35">sps</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="31:45" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:43">

        <expr_stmt pos:start="33:9" pos:end="33:75"><expr pos:start="33:9" pos:end="33:74"><call pos:start="33:9" pos:end="33:74"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:74">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:36"><expr pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="33:39" pos:end="33:73"><expr pos:start="33:39" pos:end="33:73"><literal type="string" pos:start="33:39" pos:end="33:73">"Truncating likely oversized SPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:11">sps</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">data_size</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <sizeof pos:start="35:26" pos:end="35:42">sizeof<argument_list pos:start="35:32" pos:end="35:42">(<argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:35">sps</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:41">data</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><call pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:10">memcpy</name><argument_list pos:start="39:11" pos:end="39:49">(<argument pos:start="39:12" pos:end="39:20"><expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:14">sps</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">data</name></name></expr></argument>, <argument pos:start="39:23" pos:end="39:32"><expr pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:24">gb</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:32">buffer</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:48"><expr pos:start="39:35" pos:end="39:48"><name pos:start="39:35" pos:end="39:48"><name pos:start="39:35" pos:end="39:37">sps</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:48">data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:15">profile_idc</name>           <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:43"><name pos:start="43:29" pos:end="43:36">get_bits</name><argument_list pos:start="43:37" pos:end="43:43">(<argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">gb</name></expr></argument>, <argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:24">constraint_set_flags</name> <operator pos:start="45:26" pos:end="45:27">|=</operator> <call pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:37">get_bits1</name><argument_list pos:start="45:38" pos:end="45:41">(<argument pos:start="45:39" pos:end="45:40"><expr pos:start="45:39" pos:end="45:40"><name pos:start="45:39" pos:end="45:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="45:43" pos:end="45:44">&lt;&lt;</operator> <literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="45:51" pos:end="45:73">// constraint_set0_flag</comment>

    <expr_stmt pos:start="47:5" pos:end="47:47"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:24">constraint_set_flags</name> <operator pos:start="47:26" pos:end="47:27">|=</operator> <call pos:start="47:29" pos:end="47:41"><name pos:start="47:29" pos:end="47:37">get_bits1</name><argument_list pos:start="47:38" pos:end="47:41">(<argument pos:start="47:39" pos:end="47:40"><expr pos:start="47:39" pos:end="47:40"><name pos:start="47:39" pos:end="47:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="47:43" pos:end="47:44">&lt;&lt;</operator> <literal type="number" pos:start="47:46" pos:end="47:46">1</literal></expr>;</expr_stmt>   <comment type="line" pos:start="47:51" pos:end="47:73">// constraint_set1_flag</comment>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:24">constraint_set_flags</name> <operator pos:start="49:26" pos:end="49:27">|=</operator> <call pos:start="49:29" pos:end="49:41"><name pos:start="49:29" pos:end="49:37">get_bits1</name><argument_list pos:start="49:38" pos:end="49:41">(<argument pos:start="49:39" pos:end="49:40"><expr pos:start="49:39" pos:end="49:40"><name pos:start="49:39" pos:end="49:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="49:43" pos:end="49:44">&lt;&lt;</operator> <literal type="number" pos:start="49:46" pos:end="49:46">2</literal></expr>;</expr_stmt>   <comment type="line" pos:start="49:51" pos:end="49:73">// constraint_set2_flag</comment>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:24">constraint_set_flags</name> <operator pos:start="51:26" pos:end="51:27">|=</operator> <call pos:start="51:29" pos:end="51:41"><name pos:start="51:29" pos:end="51:37">get_bits1</name><argument_list pos:start="51:38" pos:end="51:41">(<argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:44">&lt;&lt;</operator> <literal type="number" pos:start="51:46" pos:end="51:46">3</literal></expr>;</expr_stmt>   <comment type="line" pos:start="51:51" pos:end="51:73">// constraint_set3_flag</comment>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:24">constraint_set_flags</name> <operator pos:start="53:26" pos:end="53:27">|=</operator> <call pos:start="53:29" pos:end="53:41"><name pos:start="53:29" pos:end="53:37">get_bits1</name><argument_list pos:start="53:38" pos:end="53:41">(<argument pos:start="53:39" pos:end="53:40"><expr pos:start="53:39" pos:end="53:40"><name pos:start="53:39" pos:end="53:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="53:43" pos:end="53:44">&lt;&lt;</operator> <literal type="number" pos:start="53:46" pos:end="53:46">4</literal></expr>;</expr_stmt>   <comment type="line" pos:start="53:51" pos:end="53:73">// constraint_set4_flag</comment>

    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:24">constraint_set_flags</name> <operator pos:start="55:26" pos:end="55:27">|=</operator> <call pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:37">get_bits1</name><argument_list pos:start="55:38" pos:end="55:41">(<argument pos:start="55:39" pos:end="55:40"><expr pos:start="55:39" pos:end="55:40"><name pos:start="55:39" pos:end="55:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="55:43" pos:end="55:44">&lt;&lt;</operator> <literal type="number" pos:start="55:46" pos:end="55:46">5</literal></expr>;</expr_stmt>   <comment type="line" pos:start="55:51" pos:end="55:73">// constraint_set5_flag</comment>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:13">skip_bits</name><argument_list pos:start="57:14" pos:end="57:20">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">gb</name></expr></argument>, <argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="line" pos:start="57:51" pos:end="57:72">// reserved_zero_2bits</comment>

    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:13">level_idc</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:24">get_bits</name><argument_list pos:start="59:25" pos:end="59:31">(<argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">gb</name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:10">sps_id</name>    <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:32">get_ue_golomb_31</name><argument_list pos:start="61:33" pos:end="61:36">(<argument pos:start="61:34" pos:end="61:35"><expr pos:start="61:34" pos:end="61:35"><name pos:start="61:34" pos:end="61:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:32">(<expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:14">sps_id</name> <operator pos:start="65:16" pos:end="65:17">&gt;=</operator> <name pos:start="65:19" pos:end="65:31">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="65:34" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:72"><expr pos:start="67:9" pos:end="67:71"><call pos:start="67:9" pos:end="67:71"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:71">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:62"><expr pos:start="67:37" pos:end="67:62"><literal type="string" pos:start="67:37" pos:end="67:62">"sps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="67:65" pos:end="67:70"><expr pos:start="67:65" pos:end="67:70"><name pos:start="67:65" pos:end="67:70">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:7">sps</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:15">sps_id</name></name>               <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:38">sps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:7">sps</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:27">time_offset_length</name></name>   <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:34">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:7">sps</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:20">profile_idc</name></name>          <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:43">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:7">sps</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:29">constraint_set_flags</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:52">constraint_set_flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:7">sps</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:18">level_idc</name></name>            <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:41">level_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:7">sps</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:19">full_range</name></name>           <operator pos:start="85:31" pos:end="85:31">=</operator> <operator pos:start="85:33" pos:end="85:33">-</operator><literal type="number" pos:start="85:34" pos:end="85:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:67"><expr pos:start="89:5" pos:end="89:66"><call pos:start="89:5" pos:end="89:66"><name pos:start="89:5" pos:end="89:10">memset</name><argument_list pos:start="89:11" pos:end="89:66">(<argument pos:start="89:12" pos:end="89:31"><expr pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:14">sps</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:31">scaling_matrix4</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><literal type="number" pos:start="89:34" pos:end="89:35">16</literal></expr></argument>, <argument pos:start="89:38" pos:end="89:65"><expr pos:start="89:38" pos:end="89:65"><sizeof pos:start="89:38" pos:end="89:65">sizeof<argument_list pos:start="89:44" pos:end="89:65">(<argument pos:start="89:45" pos:end="89:64"><expr pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:47">sps</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:64">scaling_matrix4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:67"><expr pos:start="91:5" pos:end="91:66"><call pos:start="91:5" pos:end="91:66"><name pos:start="91:5" pos:end="91:10">memset</name><argument_list pos:start="91:11" pos:end="91:66">(<argument pos:start="91:12" pos:end="91:31"><expr pos:start="91:12" pos:end="91:31"><name pos:start="91:12" pos:end="91:31"><name pos:start="91:12" pos:end="91:14">sps</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:31">scaling_matrix8</name></name></expr></argument>, <argument pos:start="91:34" pos:end="91:35"><expr pos:start="91:34" pos:end="91:35"><literal type="number" pos:start="91:34" pos:end="91:35">16</literal></expr></argument>, <argument pos:start="91:38" pos:end="91:65"><expr pos:start="91:38" pos:end="91:65"><sizeof pos:start="91:38" pos:end="91:65">sizeof<argument_list pos:start="91:44" pos:end="91:65">(<argument pos:start="91:45" pos:end="91:64"><expr pos:start="91:45" pos:end="91:64"><name pos:start="91:45" pos:end="91:64"><name pos:start="91:45" pos:end="91:47">sps</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:64">scaling_matrix8</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:7">sps</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:31">scaling_matrix_present</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:7">sps</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:19">colorspace</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <literal type="number" pos:start="95:23" pos:end="95:23">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="95:26" pos:end="95:48">//AVCOL_SPC_UNSPECIFIED</comment>



    <if_stmt pos:start="99:5" pos:end="185:5"><if pos:start="99:5" pos:end="177:5">if <condition pos:start="99:8" pos:end="119:32">(<expr pos:start="99:9" pos:end="119:31"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:11">sps</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:24">profile_idc</name></name> <operator pos:start="99:26" pos:end="99:27">==</operator> <literal type="number" pos:start="99:29" pos:end="99:31">100</literal> <operator pos:start="99:33" pos:end="99:34">||</operator>  <comment type="line" pos:start="99:37" pos:end="99:51">// High profile</comment>

        <name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:11">sps</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:24">profile_idc</name></name> <operator pos:start="101:26" pos:end="101:27">==</operator> <literal type="number" pos:start="101:29" pos:end="101:31">110</literal> <operator pos:start="101:33" pos:end="101:34">||</operator>  <comment type="line" pos:start="101:37" pos:end="101:53">// High10 profile</comment>

        <name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:11">sps</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:24">profile_idc</name></name> <operator pos:start="103:26" pos:end="103:27">==</operator> <literal type="number" pos:start="103:29" pos:end="103:31">122</literal> <operator pos:start="103:33" pos:end="103:34">||</operator>  <comment type="line" pos:start="103:37" pos:end="103:54">// High422 profile</comment>

        <name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:11">sps</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:24">profile_idc</name></name> <operator pos:start="105:26" pos:end="105:27">==</operator> <literal type="number" pos:start="105:29" pos:end="105:31">244</literal> <operator pos:start="105:33" pos:end="105:34">||</operator>  <comment type="line" pos:start="105:37" pos:end="105:65">// High444 Predictive profile</comment>

        <name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:11">sps</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:24">profile_idc</name></name> <operator pos:start="107:26" pos:end="107:27">==</operator>  <literal type="number" pos:start="107:30" pos:end="107:31">44</literal> <operator pos:start="107:33" pos:end="107:34">||</operator>  <comment type="line" pos:start="107:37" pos:end="107:55">// Cavlc444 profile</comment>

        <name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:11">sps</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:24">profile_idc</name></name> <operator pos:start="109:26" pos:end="109:27">==</operator>  <literal type="number" pos:start="109:30" pos:end="109:31">83</literal> <operator pos:start="109:33" pos:end="109:34">||</operator>  <comment type="line" pos:start="109:37" pos:end="109:78">// Scalable Constrained High profile (SVC)</comment>

        <name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:11">sps</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:24">profile_idc</name></name> <operator pos:start="111:26" pos:end="111:27">==</operator>  <literal type="number" pos:start="111:30" pos:end="111:31">86</literal> <operator pos:start="111:33" pos:end="111:34">||</operator>  <comment type="line" pos:start="111:37" pos:end="111:72">// Scalable High Intra profile (SVC)</comment>

        <name pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:11">sps</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:24">profile_idc</name></name> <operator pos:start="113:26" pos:end="113:27">==</operator> <literal type="number" pos:start="113:29" pos:end="113:31">118</literal> <operator pos:start="113:33" pos:end="113:34">||</operator>  <comment type="line" pos:start="113:37" pos:end="113:64">// Stereo High profile (MVC)</comment>

        <name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:11">sps</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:24">profile_idc</name></name> <operator pos:start="115:26" pos:end="115:27">==</operator> <literal type="number" pos:start="115:29" pos:end="115:31">128</literal> <operator pos:start="115:33" pos:end="115:34">||</operator>  <comment type="line" pos:start="115:37" pos:end="115:67">// Multiview High profile (MVC)</comment>

        <name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:11">sps</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:24">profile_idc</name></name> <operator pos:start="117:26" pos:end="117:27">==</operator> <literal type="number" pos:start="117:29" pos:end="117:31">138</literal> <operator pos:start="117:33" pos:end="117:34">||</operator>  <comment type="line" pos:start="117:37" pos:end="117:74">// Multiview Depth High profile (MVCD)</comment>

        <name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:11">sps</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:24">profile_idc</name></name> <operator pos:start="119:26" pos:end="119:27">==</operator> <literal type="number" pos:start="119:29" pos:end="119:31">144</literal></expr>)</condition> <block pos:start="119:34" pos:end="177:5">{<block_content pos:start="121:9" pos:end="175:76">  <comment type="line" pos:start="119:37" pos:end="119:58">// old High444 profile</comment>

        <expr_stmt pos:start="121:9" pos:end="121:54"><expr pos:start="121:9" pos:end="121:53"><name pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:30">chroma_format_idc</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <call pos:start="121:34" pos:end="121:53"><name pos:start="121:34" pos:end="121:49">get_ue_golomb_31</name><argument_list pos:start="121:50" pos:end="121:53">(<argument pos:start="121:51" pos:end="121:52"><expr pos:start="121:51" pos:end="121:52"><name pos:start="121:51" pos:end="121:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="143:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:40">(<expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:15">sps</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:34">chroma_format_idc</name></name> <operator pos:start="123:36" pos:end="123:36">&gt;</operator> <literal type="number" pos:start="123:38" pos:end="123:39">3U</literal></expr>)</condition> <block pos:start="123:42" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:22">

            <expr_stmt pos:start="125:13" pos:end="127:58"><expr pos:start="125:13" pos:end="127:57"><call pos:start="125:13" pos:end="127:57"><name pos:start="125:13" pos:end="125:33">avpriv_request_sample</name><argument_list pos:start="125:34" pos:end="127:57">(<argument pos:start="125:35" pos:end="125:39"><expr pos:start="125:35" pos:end="125:39"><name pos:start="125:35" pos:end="125:39">avctx</name></expr></argument>, <argument pos:start="125:42" pos:end="125:63"><expr pos:start="125:42" pos:end="125:63"><literal type="string" pos:start="125:42" pos:end="125:63">"chroma_format_idc %u"</literal></expr></argument>,

                                  <argument pos:start="127:35" pos:end="127:56"><expr pos:start="127:35" pos:end="127:56"><name pos:start="127:35" pos:end="127:56"><name pos:start="127:35" pos:end="127:37">sps</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:56">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:22">goto <name pos:start="129:18" pos:end="129:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="143:9">else if <condition pos:start="131:19" pos:end="131:47">(<expr pos:start="131:20" pos:end="131:46"><name pos:start="131:20" pos:end="131:41"><name pos:start="131:20" pos:end="131:22">sps</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:41">chroma_format_idc</name></name> <operator pos:start="131:43" pos:end="131:44">==</operator> <literal type="number" pos:start="131:46" pos:end="131:46">3</literal></expr>)</condition> <block pos:start="131:49" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:13">

            <expr_stmt pos:start="133:13" pos:end="133:63"><expr pos:start="133:13" pos:end="133:62"><name pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:15">sps</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:46">residual_color_transform_flag</name></name> <operator pos:start="133:48" pos:end="133:48">=</operator> <call pos:start="133:50" pos:end="133:62"><name pos:start="133:50" pos:end="133:58">get_bits1</name><argument_list pos:start="133:59" pos:end="133:62">(<argument pos:start="133:60" pos:end="133:61"><expr pos:start="133:60" pos:end="133:61"><name pos:start="133:60" pos:end="133:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="141:13"><if pos:start="135:13" pos:end="141:13">if <condition pos:start="135:16" pos:end="135:51">(<expr pos:start="135:17" pos:end="135:50"><name pos:start="135:17" pos:end="135:50"><name pos:start="135:17" pos:end="135:19">sps</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:50">residual_color_transform_flag</name></name></expr>)</condition> <block pos:start="135:53" pos:end="141:13">{<block_content pos:start="137:17" pos:end="139:26">

                <expr_stmt pos:start="137:17" pos:end="137:89"><expr pos:start="137:17" pos:end="137:88"><call pos:start="137:17" pos:end="137:88"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:88">(<argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28">avctx</name></expr></argument>, <argument pos:start="137:31" pos:end="137:42"><expr pos:start="137:31" pos:end="137:42"><name pos:start="137:31" pos:end="137:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:45" pos:end="137:87"><expr pos:start="137:45" pos:end="137:87"><literal type="string" pos:start="137:45" pos:end="137:87">"separate color planes are not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="139:17" pos:end="139:26">goto <name pos:start="139:22" pos:end="139:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:54"><expr pos:start="145:9" pos:end="145:53"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:11">sps</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:27">bit_depth_luma</name></name>   <operator pos:start="145:31" pos:end="145:31">=</operator> <call pos:start="145:33" pos:end="145:49"><name pos:start="145:33" pos:end="145:45">get_ue_golomb</name><argument_list pos:start="145:46" pos:end="145:49">(<argument pos:start="145:47" pos:end="145:48"><expr pos:start="145:47" pos:end="145:48"><name pos:start="145:47" pos:end="145:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="145:51" pos:end="145:51">+</operator> <literal type="number" pos:start="145:53" pos:end="145:53">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:54"><expr pos:start="147:9" pos:end="147:53"><name pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:11">sps</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:29">bit_depth_chroma</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="147:49"><name pos:start="147:33" pos:end="147:45">get_ue_golomb</name><argument_list pos:start="147:46" pos:end="147:49">(<argument pos:start="147:47" pos:end="147:48"><expr pos:start="147:47" pos:end="147:48"><name pos:start="147:47" pos:end="147:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="147:51" pos:end="147:51">+</operator> <literal type="number" pos:start="147:53" pos:end="147:53">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:57">(<expr pos:start="149:13" pos:end="149:56"><name pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:15">sps</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:33">bit_depth_chroma</name></name> <operator pos:start="149:35" pos:end="149:36">!=</operator> <name pos:start="149:38" pos:end="149:56"><name pos:start="149:38" pos:end="149:40">sps</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:56">bit_depth_luma</name></name></expr>)</condition> <block pos:start="149:59" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:22">

            <expr_stmt pos:start="151:13" pos:end="153:73"><expr pos:start="151:13" pos:end="153:72"><call pos:start="151:13" pos:end="153:72"><name pos:start="151:13" pos:end="151:33">avpriv_request_sample</name><argument_list pos:start="151:34" pos:end="153:72">(<argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">avctx</name></expr></argument>,

                                  <argument pos:start="153:35" pos:end="153:71"><expr pos:start="153:35" pos:end="153:71"><literal type="string" pos:start="153:35" pos:end="153:71">"Different chroma and luma bit depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:22">goto <name pos:start="155:18" pos:end="155:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="169:9"><if pos:start="159:9" pos:end="169:9">if <condition pos:start="159:12" pos:end="161:68">(<expr pos:start="159:13" pos:end="161:67"><name pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:15">sps</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:31">bit_depth_luma</name></name>   <operator pos:start="159:35" pos:end="159:35">&lt;</operator> <literal type="number" pos:start="159:37" pos:end="159:37">8</literal> <operator pos:start="159:39" pos:end="159:40">||</operator> <name pos:start="159:42" pos:end="159:60"><name pos:start="159:42" pos:end="159:44">sps</name><operator pos:start="159:45" pos:end="159:46">-&gt;</operator><name pos:start="159:47" pos:end="159:60">bit_depth_luma</name></name>   <operator pos:start="159:64" pos:end="159:64">&gt;</operator> <literal type="number" pos:start="159:66" pos:end="159:67">14</literal> <operator pos:start="159:69" pos:end="159:70">||</operator>

            <name pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:15">sps</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:33">bit_depth_chroma</name></name> <operator pos:start="161:35" pos:end="161:35">&lt;</operator> <literal type="number" pos:start="161:37" pos:end="161:37">8</literal> <operator pos:start="161:39" pos:end="161:40">||</operator> <name pos:start="161:42" pos:end="161:62"><name pos:start="161:42" pos:end="161:44">sps</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:62">bit_depth_chroma</name></name> <operator pos:start="161:64" pos:end="161:64">&gt;</operator> <literal type="number" pos:start="161:66" pos:end="161:67">14</literal></expr>)</condition> <block pos:start="161:70" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:22">

            <expr_stmt pos:start="163:13" pos:end="165:63"><expr pos:start="163:13" pos:end="165:62"><call pos:start="163:13" pos:end="165:62"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="165:62">(<argument pos:start="163:20" pos:end="163:24"><expr pos:start="163:20" pos:end="163:24"><name pos:start="163:20" pos:end="163:24">avctx</name></expr></argument>, <argument pos:start="163:27" pos:end="163:38"><expr pos:start="163:27" pos:end="163:38"><name pos:start="163:27" pos:end="163:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:41" pos:end="163:76"><expr pos:start="163:41" pos:end="163:76"><literal type="string" pos:start="163:41" pos:end="163:76">"illegal bit depth value (%d, %d)\n"</literal></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:38"><expr pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:22">sps</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:38">bit_depth_luma</name></name></expr></argument>, <argument pos:start="165:41" pos:end="165:61"><expr pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:43">sps</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:61">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:22">goto <name pos:start="167:18" pos:end="167:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:46"><expr pos:start="171:9" pos:end="171:45"><name pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:11">sps</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:29">transform_bypass</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <call pos:start="171:33" pos:end="171:45"><name pos:start="171:33" pos:end="171:41">get_bits1</name><argument_list pos:start="171:42" pos:end="171:45">(<argument pos:start="171:43" pos:end="171:44"><expr pos:start="171:43" pos:end="171:44"><name pos:start="171:43" pos:end="171:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="175:76"><expr pos:start="173:9" pos:end="175:75"><name pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:11">sps</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:35">scaling_matrix_present</name></name> <operator pos:start="173:37" pos:end="173:38">|=</operator> <call pos:start="173:40" pos:end="175:75"><name pos:start="173:40" pos:end="173:62">decode_scaling_matrices</name><argument_list pos:start="173:63" pos:end="175:75">(<argument pos:start="173:64" pos:end="173:65"><expr pos:start="173:64" pos:end="173:65"><name pos:start="173:64" pos:end="173:65">gb</name></expr></argument>, <argument pos:start="173:68" pos:end="173:70"><expr pos:start="173:68" pos:end="173:70"><name pos:start="173:68" pos:end="173:70">sps</name></expr></argument>, <argument pos:start="173:73" pos:end="173:76"><expr pos:start="173:73" pos:end="173:76"><name pos:start="173:73" pos:end="173:76">NULL</name></expr></argument>, <argument pos:start="173:79" pos:end="173:79"><expr pos:start="173:79" pos:end="173:79"><literal type="number" pos:start="173:79" pos:end="173:79">1</literal></expr></argument>,

                                <argument pos:start="175:33" pos:end="175:52"><expr pos:start="175:33" pos:end="175:52"><name pos:start="175:33" pos:end="175:52"><name pos:start="175:33" pos:end="175:35">sps</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:52">scaling_matrix4</name></name></expr></argument>, <argument pos:start="175:55" pos:end="175:74"><expr pos:start="175:55" pos:end="175:74"><name pos:start="175:55" pos:end="175:74"><name pos:start="175:55" pos:end="175:57">sps</name><operator pos:start="175:58" pos:end="175:59">-&gt;</operator><name pos:start="175:60" pos:end="175:74">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="185:5">else <block pos:start="177:12" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:35">

        <expr_stmt pos:start="179:9" pos:end="179:35"><expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:11">sps</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:30">chroma_format_idc</name></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:35"><expr pos:start="181:9" pos:end="181:34"><name pos:start="181:9" pos:end="181:27"><name pos:start="181:9" pos:end="181:11">sps</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:27">bit_depth_luma</name></name>    <operator pos:start="181:32" pos:end="181:32">=</operator> <literal type="number" pos:start="181:34" pos:end="181:34">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:11">sps</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:29">bit_depth_chroma</name></name>  <operator pos:start="183:32" pos:end="183:32">=</operator> <literal type="number" pos:start="183:34" pos:end="183:34">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:50"><expr pos:start="189:5" pos:end="189:49"><name pos:start="189:5" pos:end="189:29">log2_max_frame_num_minus4</name> <operator pos:start="189:31" pos:end="189:31">=</operator> <call pos:start="189:33" pos:end="189:49"><name pos:start="189:33" pos:end="189:45">get_ue_golomb</name><argument_list pos:start="189:46" pos:end="189:49">(<argument pos:start="189:47" pos:end="189:48"><expr pos:start="189:47" pos:end="189:48"><name pos:start="189:47" pos:end="189:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="203:5">if <condition pos:start="191:8" pos:end="193:63">(<expr pos:start="191:9" pos:end="193:62"><name pos:start="191:9" pos:end="193:35"><name pos:start="191:9" pos:end="191:33">log2_max_frame_num_minus4</name> <argument_list type="generic" pos:start="191:35" pos:end="193:35">&lt; <argument pos:start="191:37" pos:end="193:33"><expr pos:start="191:37" pos:end="193:33"><name pos:start="191:37" pos:end="191:58">MIN_LOG2_MAX_FRAME_NUM</name> <operator pos:start="191:60" pos:end="191:60">-</operator> <literal type="number" pos:start="191:62" pos:end="191:62">4</literal> <operator pos:start="191:64" pos:end="191:65">||</operator>

        <name pos:start="193:9" pos:end="193:33">log2_max_frame_num_minus4</name></expr></argument> &gt;</argument_list></name> <name pos:start="193:37" pos:end="193:58">MAX_LOG2_MAX_FRAME_NUM</name> <operator pos:start="193:60" pos:end="193:60">-</operator> <literal type="number" pos:start="193:62" pos:end="193:62">4</literal></expr>)</condition> <block pos:start="193:65" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:18">

        <expr_stmt pos:start="195:9" pos:end="199:42"><expr pos:start="195:9" pos:end="199:41"><call pos:start="195:9" pos:end="199:41"><name pos:start="195:9" pos:end="195:14">av_log</name><argument_list pos:start="195:15" pos:end="199:41">(<argument pos:start="195:16" pos:end="195:20"><expr pos:start="195:16" pos:end="195:20"><name pos:start="195:16" pos:end="195:20">avctx</name></expr></argument>, <argument pos:start="195:23" pos:end="195:34"><expr pos:start="195:23" pos:end="195:34"><name pos:start="195:23" pos:end="195:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="197:16" pos:end="197:68"><expr pos:start="197:16" pos:end="197:68"><literal type="string" pos:start="197:16" pos:end="197:68">"log2_max_frame_num_minus4 out of range (0-12): %d\n"</literal></expr></argument>,

               <argument pos:start="199:16" pos:end="199:40"><expr pos:start="199:16" pos:end="199:40"><name pos:start="199:16" pos:end="199:40">log2_max_frame_num_minus4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="201:9" pos:end="201:18">goto <name pos:start="201:14" pos:end="201:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:60"><expr pos:start="205:5" pos:end="205:59"><name pos:start="205:5" pos:end="205:27"><name pos:start="205:5" pos:end="205:7">sps</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:27">log2_max_frame_num</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <name pos:start="205:31" pos:end="205:55">log2_max_frame_num_minus4</name> <operator pos:start="205:57" pos:end="205:57">+</operator> <literal type="number" pos:start="205:59" pos:end="205:59">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:41"><expr pos:start="209:5" pos:end="209:40"><name pos:start="209:5" pos:end="209:17"><name pos:start="209:5" pos:end="209:7">sps</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:17">poc_type</name></name> <operator pos:start="209:19" pos:end="209:19">=</operator> <call pos:start="209:21" pos:end="209:40"><name pos:start="209:21" pos:end="209:36">get_ue_golomb_31</name><argument_list pos:start="209:37" pos:end="209:40">(<argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="213:5" pos:end="263:5"><if pos:start="213:5" pos:end="227:5">if <condition pos:start="213:8" pos:end="213:27">(<expr pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:11">sps</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:21">poc_type</name></name> <operator pos:start="213:23" pos:end="213:24">==</operator> <literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr>)</condition> <block pos:start="213:29" pos:end="227:5">{<block_content pos:start="215:9" pos:end="225:38"> <comment type="line" pos:start="213:31" pos:end="213:46">// FIXME #define</comment>

        <decl_stmt pos:start="215:9" pos:end="215:39"><decl pos:start="215:9" pos:end="215:38"><type pos:start="215:9" pos:end="215:16"><name pos:start="215:9" pos:end="215:16">unsigned</name></type> <name pos:start="215:18" pos:end="215:18">t</name> <init pos:start="215:20" pos:end="215:38">= <expr pos:start="215:22" pos:end="215:38"><call pos:start="215:22" pos:end="215:38"><name pos:start="215:22" pos:end="215:34">get_ue_golomb</name><argument_list pos:start="215:35" pos:end="215:38">(<argument pos:start="215:36" pos:end="215:37"><expr pos:start="215:36" pos:end="215:37"><name pos:start="215:36" pos:end="215:37">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="217:9" pos:end="223:9"><if pos:start="217:9" pos:end="223:9">if <condition pos:start="217:12" pos:end="217:17">(<expr pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:13">t</name><operator pos:start="217:14" pos:end="217:14">&gt;</operator><literal type="number" pos:start="217:15" pos:end="217:16">12</literal></expr>)</condition> <block pos:start="217:19" pos:end="223:9">{<block_content pos:start="219:13" pos:end="221:22">

            <expr_stmt pos:start="219:13" pos:end="219:86"><expr pos:start="219:13" pos:end="219:85"><call pos:start="219:13" pos:end="219:85"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="219:85">(<argument pos:start="219:20" pos:end="219:24"><expr pos:start="219:20" pos:end="219:24"><name pos:start="219:20" pos:end="219:24">avctx</name></expr></argument>, <argument pos:start="219:27" pos:end="219:38"><expr pos:start="219:27" pos:end="219:38"><name pos:start="219:27" pos:end="219:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:41" pos:end="219:81"><expr pos:start="219:41" pos:end="219:81"><literal type="string" pos:start="219:41" pos:end="219:81">"log2_max_poc_lsb (%d) is out of range\n"</literal></expr></argument>, <argument pos:start="219:84" pos:end="219:84"><expr pos:start="219:84" pos:end="219:84"><name pos:start="219:84" pos:end="219:84">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="221:13" pos:end="221:22">goto <name pos:start="221:18" pos:end="221:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:38"><expr pos:start="225:9" pos:end="225:37"><name pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:11">sps</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:29">log2_max_poc_lsb</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:33">t</name> <operator pos:start="225:35" pos:end="225:35">+</operator> <literal type="number" pos:start="225:37" pos:end="225:37">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="257:5">else if <condition pos:start="227:15" pos:end="227:34">(<expr pos:start="227:16" pos:end="227:33"><name pos:start="227:16" pos:end="227:28"><name pos:start="227:16" pos:end="227:18">sps</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:28">poc_type</name></name> <operator pos:start="227:30" pos:end="227:31">==</operator> <literal type="number" pos:start="227:33" pos:end="227:33">1</literal></expr>)</condition> <block pos:start="227:36" pos:end="257:5">{<block_content pos:start="229:9" pos:end="255:61"> <comment type="line" pos:start="227:38" pos:end="227:53">// FIXME #define</comment>

        <expr_stmt pos:start="229:9" pos:end="229:62"><expr pos:start="229:9" pos:end="229:61"><name pos:start="229:9" pos:end="229:45"><name pos:start="229:9" pos:end="229:11">sps</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:45">delta_pic_order_always_zero_flag</name></name> <operator pos:start="229:47" pos:end="229:47">=</operator> <call pos:start="229:49" pos:end="229:61"><name pos:start="229:49" pos:end="229:57">get_bits1</name><argument_list pos:start="229:58" pos:end="229:61">(<argument pos:start="229:59" pos:end="229:60"><expr pos:start="229:59" pos:end="229:60"><name pos:start="229:59" pos:end="229:60">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:66"><expr pos:start="231:9" pos:end="231:65"><name pos:start="231:9" pos:end="231:35"><name pos:start="231:9" pos:end="231:11">sps</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:35">offset_for_non_ref_pic</name></name>           <operator pos:start="231:47" pos:end="231:47">=</operator> <call pos:start="231:49" pos:end="231:65"><name pos:start="231:49" pos:end="231:61">get_se_golomb</name><argument_list pos:start="231:62" pos:end="231:65">(<argument pos:start="231:63" pos:end="231:64"><expr pos:start="231:63" pos:end="231:64"><name pos:start="231:63" pos:end="231:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:66"><expr pos:start="233:9" pos:end="233:65"><name pos:start="233:9" pos:end="233:43"><name pos:start="233:9" pos:end="233:11">sps</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:43">offset_for_top_to_bottom_field</name></name>   <operator pos:start="233:47" pos:end="233:47">=</operator> <call pos:start="233:49" pos:end="233:65"><name pos:start="233:49" pos:end="233:61">get_se_golomb</name><argument_list pos:start="233:62" pos:end="233:65">(<argument pos:start="233:63" pos:end="233:64"><expr pos:start="233:63" pos:end="233:64"><name pos:start="233:63" pos:end="233:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:66"><expr pos:start="235:9" pos:end="235:65"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:11">sps</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:29">poc_cycle_length</name></name>                 <operator pos:start="235:47" pos:end="235:47">=</operator> <call pos:start="235:49" pos:end="235:65"><name pos:start="235:49" pos:end="235:61">get_ue_golomb</name><argument_list pos:start="235:62" pos:end="235:65">(<argument pos:start="235:63" pos:end="235:64"><expr pos:start="235:63" pos:end="235:64"><name pos:start="235:63" pos:end="235:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="239:9" pos:end="249:9"><if pos:start="239:9" pos:end="249:9">if <condition pos:start="239:12" pos:end="241:54">(<expr pos:start="239:13" pos:end="241:53"><operator pos:start="239:13" pos:end="239:13">(</operator><name pos:start="239:14" pos:end="239:21">unsigned</name><operator pos:start="239:22" pos:end="239:22">)</operator><name pos:start="239:23" pos:end="239:43"><name pos:start="239:23" pos:end="239:25">sps</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:43">poc_cycle_length</name></name> <operator pos:start="239:45" pos:end="239:46">&gt;=</operator>

            <call pos:start="241:13" pos:end="241:53"><name pos:start="241:13" pos:end="241:26">FF_ARRAY_ELEMS</name><argument_list pos:start="241:27" pos:end="241:53">(<argument pos:start="241:28" pos:end="241:52"><expr pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:30">sps</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:52">offset_for_ref_frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="241:56" pos:end="249:9">{<block_content pos:start="243:13" pos:end="247:22">

            <expr_stmt pos:start="243:13" pos:end="245:76"><expr pos:start="243:13" pos:end="245:75"><call pos:start="243:13" pos:end="245:75"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="245:75">(<argument pos:start="243:20" pos:end="243:24"><expr pos:start="243:20" pos:end="243:24"><name pos:start="243:20" pos:end="243:24">avctx</name></expr></argument>, <argument pos:start="243:27" pos:end="243:38"><expr pos:start="243:27" pos:end="243:38"><name pos:start="243:27" pos:end="243:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="245:20" pos:end="245:51"><expr pos:start="245:20" pos:end="245:51"><literal type="string" pos:start="245:20" pos:end="245:51">"poc_cycle_length overflow %d\n"</literal></expr></argument>, <argument pos:start="245:54" pos:end="245:74"><expr pos:start="245:54" pos:end="245:74"><name pos:start="245:54" pos:end="245:74"><name pos:start="245:54" pos:end="245:56">sps</name><operator pos:start="245:57" pos:end="245:58">-&gt;</operator><name pos:start="245:59" pos:end="245:74">poc_cycle_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="247:13" pos:end="247:22">goto <name pos:start="247:18" pos:end="247:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="253:9" pos:end="255:61">for <control pos:start="253:13" pos:end="253:51">(<init pos:start="253:14" pos:end="253:19"><expr pos:start="253:14" pos:end="253:18"><name pos:start="253:14" pos:end="253:14">i</name> <operator pos:start="253:16" pos:end="253:16">=</operator> <literal type="number" pos:start="253:18" pos:end="253:18">0</literal></expr>;</init> <condition pos:start="253:21" pos:end="253:46"><expr pos:start="253:21" pos:end="253:45"><name pos:start="253:21" pos:end="253:21">i</name> <operator pos:start="253:23" pos:end="253:23">&lt;</operator> <name pos:start="253:25" pos:end="253:45"><name pos:start="253:25" pos:end="253:27">sps</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:45">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="253:48" pos:end="253:50"><expr pos:start="253:48" pos:end="253:50"><name pos:start="253:48" pos:end="253:48">i</name><operator pos:start="253:49" pos:end="253:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="255:13" pos:end="255:61"><block_content pos:start="255:13" pos:end="255:61">

            <expr_stmt pos:start="255:13" pos:end="255:61"><expr pos:start="255:13" pos:end="255:60"><name pos:start="255:13" pos:end="255:40"><name pos:start="255:13" pos:end="255:15">sps</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:37">offset_for_ref_frame</name><index pos:start="255:38" pos:end="255:40">[<expr pos:start="255:39" pos:end="255:39"><name pos:start="255:39" pos:end="255:39">i</name></expr>]</index></name> <operator pos:start="255:42" pos:end="255:42">=</operator> <call pos:start="255:44" pos:end="255:60"><name pos:start="255:44" pos:end="255:56">get_se_golomb</name><argument_list pos:start="255:57" pos:end="255:60">(<argument pos:start="255:58" pos:end="255:59"><expr pos:start="255:58" pos:end="255:59"><name pos:start="255:58" pos:end="255:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="257:7" pos:end="263:5">else if <condition pos:start="257:15" pos:end="257:34">(<expr pos:start="257:16" pos:end="257:33"><name pos:start="257:16" pos:end="257:28"><name pos:start="257:16" pos:end="257:18">sps</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:28">poc_type</name></name> <operator pos:start="257:30" pos:end="257:31">!=</operator> <literal type="number" pos:start="257:33" pos:end="257:33">2</literal></expr>)</condition> <block pos:start="257:36" pos:end="263:5">{<block_content pos:start="259:9" pos:end="261:18">

        <expr_stmt pos:start="259:9" pos:end="259:76"><expr pos:start="259:9" pos:end="259:75"><call pos:start="259:9" pos:end="259:75"><name pos:start="259:9" pos:end="259:14">av_log</name><argument_list pos:start="259:15" pos:end="259:75">(<argument pos:start="259:16" pos:end="259:20"><expr pos:start="259:16" pos:end="259:20"><name pos:start="259:16" pos:end="259:20">avctx</name></expr></argument>, <argument pos:start="259:23" pos:end="259:34"><expr pos:start="259:23" pos:end="259:34"><name pos:start="259:23" pos:end="259:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:37" pos:end="259:59"><expr pos:start="259:37" pos:end="259:59"><literal type="string" pos:start="259:37" pos:end="259:59">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="259:62" pos:end="259:74"><expr pos:start="259:62" pos:end="259:74"><name pos:start="259:62" pos:end="259:74"><name pos:start="259:62" pos:end="259:64">sps</name><operator pos:start="259:65" pos:end="259:66">-&gt;</operator><name pos:start="259:67" pos:end="259:74">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="261:9" pos:end="261:18">goto <name pos:start="261:14" pos:end="261:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:48"><expr pos:start="267:5" pos:end="267:47"><name pos:start="267:5" pos:end="267:24"><name pos:start="267:5" pos:end="267:7">sps</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:24">ref_frame_count</name></name> <operator pos:start="267:26" pos:end="267:26">=</operator> <call pos:start="267:28" pos:end="267:47"><name pos:start="267:28" pos:end="267:43">get_ue_golomb_31</name><argument_list pos:start="267:44" pos:end="267:47">(<argument pos:start="267:45" pos:end="267:46"><expr pos:start="267:45" pos:end="267:46"><name pos:start="267:45" pos:end="267:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="269:5" pos:end="271:62"><if pos:start="269:5" pos:end="271:62">if <condition pos:start="269:8" pos:end="269:54">(<expr pos:start="269:9" pos:end="269:53"><name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:13">avctx</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:24">codec_tag</name></name> <operator pos:start="269:26" pos:end="269:27">==</operator> <call pos:start="269:29" pos:end="269:53"><name pos:start="269:29" pos:end="269:33">MKTAG</name><argument_list pos:start="269:34" pos:end="269:53">(<argument pos:start="269:35" pos:end="269:37"><expr pos:start="269:35" pos:end="269:37"><literal type="char" pos:start="269:35" pos:end="269:37">'S'</literal></expr></argument>, <argument pos:start="269:40" pos:end="269:42"><expr pos:start="269:40" pos:end="269:42"><literal type="char" pos:start="269:40" pos:end="269:42">'M'</literal></expr></argument>, <argument pos:start="269:45" pos:end="269:47"><expr pos:start="269:45" pos:end="269:47"><literal type="char" pos:start="269:45" pos:end="269:47">'V'</literal></expr></argument>, <argument pos:start="269:50" pos:end="269:52"><expr pos:start="269:50" pos:end="269:52"><literal type="char" pos:start="269:50" pos:end="269:52">'2'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:62"><block_content pos:start="271:9" pos:end="271:62">

        <expr_stmt pos:start="271:9" pos:end="271:62"><expr pos:start="271:9" pos:end="271:61"><name pos:start="271:9" pos:end="271:28"><name pos:start="271:9" pos:end="271:11">sps</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:28">ref_frame_count</name></name> <operator pos:start="271:30" pos:end="271:30">=</operator> <call pos:start="271:32" pos:end="271:61"><name pos:start="271:32" pos:end="271:36">FFMAX</name><argument_list pos:start="271:37" pos:end="271:61">(<argument pos:start="271:38" pos:end="271:38"><expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">2</literal></expr></argument>, <argument pos:start="271:41" pos:end="271:60"><expr pos:start="271:41" pos:end="271:60"><name pos:start="271:41" pos:end="271:60"><name pos:start="271:41" pos:end="271:43">sps</name><operator pos:start="271:44" pos:end="271:45">-&gt;</operator><name pos:start="271:46" pos:end="271:60">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="273:5" pos:end="281:5"><if pos:start="273:5" pos:end="281:5">if <condition pos:start="273:8" pos:end="273:53">(<expr pos:start="273:9" pos:end="273:52"><name pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:11">sps</name><operator pos:start="273:12" pos:end="273:13">-&gt;</operator><name pos:start="273:14" pos:end="273:28">ref_frame_count</name></name> <operator pos:start="273:30" pos:end="273:30">&gt;</operator> <name pos:start="273:32" pos:end="273:52">MAX_DELAYED_PIC_COUNT</name></expr>)</condition> <block pos:start="273:55" pos:end="281:5">{<block_content pos:start="275:9" pos:end="279:18">

        <expr_stmt pos:start="275:9" pos:end="277:71"><expr pos:start="275:9" pos:end="277:70"><call pos:start="275:9" pos:end="277:70"><name pos:start="275:9" pos:end="275:14">av_log</name><argument_list pos:start="275:15" pos:end="277:70">(<argument pos:start="275:16" pos:end="275:20"><expr pos:start="275:16" pos:end="275:20"><name pos:start="275:16" pos:end="275:20">avctx</name></expr></argument>, <argument pos:start="275:23" pos:end="275:34"><expr pos:start="275:23" pos:end="275:34"><name pos:start="275:23" pos:end="275:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="277:16" pos:end="277:47"><expr pos:start="277:16" pos:end="277:47"><literal type="string" pos:start="277:16" pos:end="277:47">"too many reference frames %d\n"</literal></expr></argument>, <argument pos:start="277:50" pos:end="277:69"><expr pos:start="277:50" pos:end="277:69"><name pos:start="277:50" pos:end="277:69"><name pos:start="277:50" pos:end="277:52">sps</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:69">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="279:9" pos:end="279:18">goto <name pos:start="279:14" pos:end="279:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:56"><expr pos:start="283:5" pos:end="283:55"><name pos:start="283:5" pos:end="283:39"><name pos:start="283:5" pos:end="283:7">sps</name><operator pos:start="283:8" pos:end="283:9">-&gt;</operator><name pos:start="283:10" pos:end="283:39">gaps_in_frame_num_allowed_flag</name></name> <operator pos:start="283:41" pos:end="283:41">=</operator> <call pos:start="283:43" pos:end="283:55"><name pos:start="283:43" pos:end="283:51">get_bits1</name><argument_list pos:start="283:52" pos:end="283:55">(<argument pos:start="283:53" pos:end="283:54"><expr pos:start="283:53" pos:end="283:54"><name pos:start="283:53" pos:end="283:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:64"><expr pos:start="285:5" pos:end="285:63"><name pos:start="285:5" pos:end="285:17"><name pos:start="285:5" pos:end="285:7">sps</name><operator pos:start="285:8" pos:end="285:9">-&gt;</operator><name pos:start="285:10" pos:end="285:17">mb_width</name></name>                       <operator pos:start="285:41" pos:end="285:41">=</operator> <call pos:start="285:43" pos:end="285:59"><name pos:start="285:43" pos:end="285:55">get_ue_golomb</name><argument_list pos:start="285:56" pos:end="285:59">(<argument pos:start="285:57" pos:end="285:58"><expr pos:start="285:57" pos:end="285:58"><name pos:start="285:57" pos:end="285:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="285:61" pos:end="285:61">+</operator> <literal type="number" pos:start="285:63" pos:end="285:63">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:64"><expr pos:start="287:5" pos:end="287:63"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:7">sps</name><operator pos:start="287:8" pos:end="287:9">-&gt;</operator><name pos:start="287:10" pos:end="287:18">mb_height</name></name>                      <operator pos:start="287:41" pos:end="287:41">=</operator> <call pos:start="287:43" pos:end="287:59"><name pos:start="287:43" pos:end="287:55">get_ue_golomb</name><argument_list pos:start="287:56" pos:end="287:59">(<argument pos:start="287:57" pos:end="287:58"><expr pos:start="287:57" pos:end="287:58"><name pos:start="287:57" pos:end="287:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="287:61" pos:end="287:61">+</operator> <literal type="number" pos:start="287:63" pos:end="287:63">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:45"><expr pos:start="291:5" pos:end="291:44"><name pos:start="291:5" pos:end="291:28"><name pos:start="291:5" pos:end="291:7">sps</name><operator pos:start="291:8" pos:end="291:9">-&gt;</operator><name pos:start="291:10" pos:end="291:28">frame_mbs_only_flag</name></name> <operator pos:start="291:30" pos:end="291:30">=</operator> <call pos:start="291:32" pos:end="291:44"><name pos:start="291:32" pos:end="291:40">get_bits1</name><argument_list pos:start="291:41" pos:end="291:44">(<argument pos:start="291:42" pos:end="291:43"><expr pos:start="291:42" pos:end="291:43"><name pos:start="291:42" pos:end="291:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="295:5" pos:end="301:5"><if pos:start="295:5" pos:end="301:5">if <condition pos:start="295:8" pos:end="295:38">(<expr pos:start="295:9" pos:end="295:37"><name pos:start="295:9" pos:end="295:22"><name pos:start="295:9" pos:end="295:11">sps</name><operator pos:start="295:12" pos:end="295:13">-&gt;</operator><name pos:start="295:14" pos:end="295:22">mb_height</name></name> <operator pos:start="295:24" pos:end="295:25">&gt;=</operator> <name pos:start="295:27" pos:end="295:33">INT_MAX</name> <operator pos:start="295:35" pos:end="295:35">/</operator> <literal type="number" pos:start="295:37" pos:end="295:37">2</literal></expr>)</condition> <block pos:start="295:40" pos:end="301:5">{<block_content pos:start="297:9" pos:end="299:18">

        <expr_stmt pos:start="297:9" pos:end="297:57"><expr pos:start="297:9" pos:end="297:56"><call pos:start="297:9" pos:end="297:56"><name pos:start="297:9" pos:end="297:14">av_log</name><argument_list pos:start="297:15" pos:end="297:56">(<argument pos:start="297:16" pos:end="297:20"><expr pos:start="297:16" pos:end="297:20"><name pos:start="297:16" pos:end="297:20">avctx</name></expr></argument>, <argument pos:start="297:23" pos:end="297:34"><expr pos:start="297:23" pos:end="297:34"><name pos:start="297:23" pos:end="297:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="297:37" pos:end="297:55"><expr pos:start="297:37" pos:end="297:55"><literal type="string" pos:start="297:37" pos:end="297:55">"height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="299:9" pos:end="299:18">goto <name pos:start="299:14" pos:end="299:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:51"><expr pos:start="303:5" pos:end="303:50"><name pos:start="303:5" pos:end="303:18"><name pos:start="303:5" pos:end="303:7">sps</name><operator pos:start="303:8" pos:end="303:9">-&gt;</operator><name pos:start="303:10" pos:end="303:18">mb_height</name></name> <operator pos:start="303:20" pos:end="303:21">*=</operator> <literal type="number" pos:start="303:23" pos:end="303:25">2</literal> <operator pos:start="303:25" pos:end="303:25">-</operator> <name pos:start="303:27" pos:end="303:50"><name pos:start="303:27" pos:end="303:29">sps</name><operator pos:start="303:30" pos:end="303:31">-&gt;</operator><name pos:start="303:32" pos:end="303:50">frame_mbs_only_flag</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="307:5" pos:end="313:24"><if pos:start="307:5" pos:end="309:36">if <condition pos:start="307:8" pos:end="307:34">(<expr pos:start="307:9" pos:end="307:33"><operator pos:start="307:9" pos:end="307:9">!</operator><name pos:start="307:10" pos:end="307:33"><name pos:start="307:10" pos:end="307:12">sps</name><operator pos:start="307:13" pos:end="307:14">-&gt;</operator><name pos:start="307:15" pos:end="307:33">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="309:9" pos:end="309:36"><block_content pos:start="309:9" pos:end="309:36">

        <expr_stmt pos:start="309:9" pos:end="309:36"><expr pos:start="309:9" pos:end="309:35"><name pos:start="309:9" pos:end="309:19"><name pos:start="309:9" pos:end="309:11">sps</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:19">mb_aff</name></name> <operator pos:start="309:21" pos:end="309:21">=</operator> <call pos:start="309:23" pos:end="309:35"><name pos:start="309:23" pos:end="309:31">get_bits1</name><argument_list pos:start="309:32" pos:end="309:35">(<argument pos:start="309:33" pos:end="309:34"><expr pos:start="309:33" pos:end="309:34"><name pos:start="309:33" pos:end="309:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="311:5" pos:end="313:24">else<block type="pseudo" pos:start="313:9" pos:end="313:24"><block_content pos:start="313:9" pos:end="313:24">

        <expr_stmt pos:start="313:9" pos:end="313:24"><expr pos:start="313:9" pos:end="313:23"><name pos:start="313:9" pos:end="313:19"><name pos:start="313:9" pos:end="313:11">sps</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:19">mb_aff</name></name> <operator pos:start="313:21" pos:end="313:21">=</operator> <literal type="number" pos:start="313:23" pos:end="313:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="317:5" pos:end="329:5"><if pos:start="317:5" pos:end="329:5">if <condition pos:start="317:8" pos:end="323:59">(<expr pos:start="317:9" pos:end="323:58"><operator pos:start="317:9" pos:end="317:9">(</operator><name pos:start="317:10" pos:end="317:17">unsigned</name><operator pos:start="317:18" pos:end="317:18">)</operator><name pos:start="317:19" pos:end="317:31"><name pos:start="317:19" pos:end="317:21">sps</name><operator pos:start="317:22" pos:end="317:23">-&gt;</operator><name pos:start="317:24" pos:end="317:31">mb_width</name></name>  <operator pos:start="317:34" pos:end="317:35">&gt;=</operator> <name pos:start="317:37" pos:end="317:43">INT_MAX</name> <operator pos:start="317:45" pos:end="317:45">/</operator> <literal type="number" pos:start="317:47" pos:end="317:48">16</literal> <operator pos:start="317:50" pos:end="317:51">||</operator>

        <operator pos:start="319:9" pos:end="319:9">(</operator><name pos:start="319:10" pos:end="319:17">unsigned</name><operator pos:start="319:18" pos:end="319:18">)</operator><name pos:start="319:19" pos:end="319:32"><name pos:start="319:19" pos:end="319:21">sps</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:32">mb_height</name></name> <operator pos:start="319:34" pos:end="319:35">&gt;=</operator> <name pos:start="319:37" pos:end="319:43">INT_MAX</name> <operator pos:start="319:45" pos:end="319:45">/</operator> <literal type="number" pos:start="319:47" pos:end="319:48">16</literal> <operator pos:start="319:50" pos:end="319:51">||</operator>

        <call pos:start="321:9" pos:end="323:58"><name pos:start="321:9" pos:end="321:27">av_image_check_size</name><argument_list pos:start="321:28" pos:end="323:58">(<argument pos:start="321:29" pos:end="321:46"><expr pos:start="321:29" pos:end="321:46"><literal type="number" pos:start="321:29" pos:end="321:30">16</literal> <operator pos:start="321:32" pos:end="321:32">*</operator> <name pos:start="321:34" pos:end="321:46"><name pos:start="321:34" pos:end="321:36">sps</name><operator pos:start="321:37" pos:end="321:38">-&gt;</operator><name pos:start="321:39" pos:end="321:46">mb_width</name></name></expr></argument>,

                            <argument pos:start="323:29" pos:end="323:47"><expr pos:start="323:29" pos:end="323:47"><literal type="number" pos:start="323:29" pos:end="323:30">16</literal> <operator pos:start="323:32" pos:end="323:32">*</operator> <name pos:start="323:34" pos:end="323:47"><name pos:start="323:34" pos:end="323:36">sps</name><operator pos:start="323:37" pos:end="323:38">-&gt;</operator><name pos:start="323:39" pos:end="323:47">mb_height</name></name></expr></argument>, <argument pos:start="323:50" pos:end="323:50"><expr pos:start="323:50" pos:end="323:50"><literal type="number" pos:start="323:50" pos:end="323:50">0</literal></expr></argument>, <argument pos:start="323:53" pos:end="323:57"><expr pos:start="323:53" pos:end="323:57"><name pos:start="323:53" pos:end="323:57">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="323:61" pos:end="329:5">{<block_content pos:start="325:9" pos:end="327:18">

        <expr_stmt pos:start="325:9" pos:end="325:66"><expr pos:start="325:9" pos:end="325:65"><call pos:start="325:9" pos:end="325:65"><name pos:start="325:9" pos:end="325:14">av_log</name><argument_list pos:start="325:15" pos:end="325:65">(<argument pos:start="325:16" pos:end="325:20"><expr pos:start="325:16" pos:end="325:20"><name pos:start="325:16" pos:end="325:20">avctx</name></expr></argument>, <argument pos:start="325:23" pos:end="325:34"><expr pos:start="325:23" pos:end="325:34"><name pos:start="325:23" pos:end="325:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="325:37" pos:end="325:64"><expr pos:start="325:37" pos:end="325:64"><literal type="string" pos:start="325:37" pos:end="325:64">"mb_width/height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="327:9" pos:end="327:18">goto <name pos:start="327:14" pos:end="327:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="333:5" pos:end="338:0"><expr pos:start="333:5" pos:end="333:50"><name pos:start="333:5" pos:end="333:34"><name pos:start="333:5" pos:end="333:7">sps</name><operator pos:start="333:8" pos:end="333:9">-&gt;</operator><name pos:start="333:10" pos:end="333:34">direct_8x8_inference_flag</name></name> <operator pos:start="333:36" pos:end="333:36">=</operator> <call pos:start="333:38" pos:end="333:50"><name pos:start="333:38" pos:end="333:46">get_bits1</name><argument_list pos:start="333:47" pos:end="333:50">(<argument pos:start="333:48" pos:end="333:49"><expr pos:start="333:48" pos:end="333:49"><name pos:start="333:48" pos:end="333:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="337:1" pos:end="337:23">#<cpp:directive pos:start="337:2" pos:end="337:7">ifndef</cpp:directive> <name pos:start="337:9" pos:end="337:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="339:5" pos:end="346:0"><if pos:start="339:5" pos:end="346:0">if <condition pos:start="339:8" pos:end="339:20">(<expr pos:start="339:9" pos:end="339:19"><name pos:start="339:9" pos:end="339:19"><name pos:start="339:9" pos:end="339:11">sps</name><operator pos:start="339:12" pos:end="339:13">-&gt;</operator><name pos:start="339:14" pos:end="339:19">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="341:9" pos:end="346:0"><block_content pos:start="341:9" pos:end="346:0">

        <expr_stmt pos:start="341:9" pos:end="346:0"><expr pos:start="341:9" pos:end="343:74"><call pos:start="341:9" pos:end="343:74"><name pos:start="341:9" pos:end="341:14">av_log</name><argument_list pos:start="341:15" pos:end="343:74">(<argument pos:start="341:16" pos:end="341:20"><expr pos:start="341:16" pos:end="341:20"><name pos:start="341:16" pos:end="341:20">avctx</name></expr></argument>, <argument pos:start="341:23" pos:end="341:34"><expr pos:start="341:23" pos:end="341:34"><name pos:start="341:23" pos:end="341:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="343:16" pos:end="343:73"><expr pos:start="343:16" pos:end="343:73"><literal type="string" pos:start="343:16" pos:end="343:73">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="345:1" pos:end="345:6">#<cpp:directive pos:start="345:2" pos:end="345:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="347:5" pos:end="347:30"><expr pos:start="347:5" pos:end="347:29"><name pos:start="347:5" pos:end="347:13"><name pos:start="347:5" pos:end="347:7">sps</name><operator pos:start="347:8" pos:end="347:9">-&gt;</operator><name pos:start="347:10" pos:end="347:13">crop</name></name> <operator pos:start="347:15" pos:end="347:15">=</operator> <call pos:start="347:17" pos:end="347:29"><name pos:start="347:17" pos:end="347:25">get_bits1</name><argument_list pos:start="347:26" pos:end="347:29">(<argument pos:start="347:27" pos:end="347:28"><expr pos:start="347:27" pos:end="347:28"><name pos:start="347:27" pos:end="347:28">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="349:5" pos:end="459:5"><if pos:start="349:5" pos:end="447:5">if <condition pos:start="349:8" pos:end="349:18">(<expr pos:start="349:9" pos:end="349:17"><name pos:start="349:9" pos:end="349:17"><name pos:start="349:9" pos:end="349:11">sps</name><operator pos:start="349:12" pos:end="349:13">-&gt;</operator><name pos:start="349:14" pos:end="349:17">crop</name></name></expr>)</condition> <block pos:start="349:20" pos:end="447:5">{<block_content pos:start="351:9" pos:end="445:9">

        <decl_stmt pos:start="351:9" pos:end="351:53"><decl pos:start="351:9" pos:end="351:52"><type pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:16">unsigned</name> <name pos:start="351:18" pos:end="351:20">int</name></type> <name pos:start="351:22" pos:end="351:30">crop_left</name>   <init pos:start="351:34" pos:end="351:52">= <expr pos:start="351:36" pos:end="351:52"><call pos:start="351:36" pos:end="351:52"><name pos:start="351:36" pos:end="351:48">get_ue_golomb</name><argument_list pos:start="351:49" pos:end="351:52">(<argument pos:start="351:50" pos:end="351:51"><expr pos:start="351:50" pos:end="351:51"><name pos:start="351:50" pos:end="351:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="353:9" pos:end="353:53"><decl pos:start="353:9" pos:end="353:52"><type pos:start="353:9" pos:end="353:20"><name pos:start="353:9" pos:end="353:16">unsigned</name> <name pos:start="353:18" pos:end="353:20">int</name></type> <name pos:start="353:22" pos:end="353:31">crop_right</name>  <init pos:start="353:34" pos:end="353:52">= <expr pos:start="353:36" pos:end="353:52"><call pos:start="353:36" pos:end="353:52"><name pos:start="353:36" pos:end="353:48">get_ue_golomb</name><argument_list pos:start="353:49" pos:end="353:52">(<argument pos:start="353:50" pos:end="353:51"><expr pos:start="353:50" pos:end="353:51"><name pos:start="353:50" pos:end="353:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="355:9" pos:end="355:53"><decl pos:start="355:9" pos:end="355:52"><type pos:start="355:9" pos:end="355:20"><name pos:start="355:9" pos:end="355:16">unsigned</name> <name pos:start="355:18" pos:end="355:20">int</name></type> <name pos:start="355:22" pos:end="355:29">crop_top</name>    <init pos:start="355:34" pos:end="355:52">= <expr pos:start="355:36" pos:end="355:52"><call pos:start="355:36" pos:end="355:52"><name pos:start="355:36" pos:end="355:48">get_ue_golomb</name><argument_list pos:start="355:49" pos:end="355:52">(<argument pos:start="355:50" pos:end="355:51"><expr pos:start="355:50" pos:end="355:51"><name pos:start="355:50" pos:end="355:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="357:9" pos:end="357:53"><decl pos:start="357:9" pos:end="357:52"><type pos:start="357:9" pos:end="357:20"><name pos:start="357:9" pos:end="357:16">unsigned</name> <name pos:start="357:18" pos:end="357:20">int</name></type> <name pos:start="357:22" pos:end="357:32">crop_bottom</name> <init pos:start="357:34" pos:end="357:52">= <expr pos:start="357:36" pos:end="357:52"><call pos:start="357:36" pos:end="357:52"><name pos:start="357:36" pos:end="357:48">get_ue_golomb</name><argument_list pos:start="357:49" pos:end="357:52">(<argument pos:start="357:50" pos:end="357:51"><expr pos:start="357:50" pos:end="357:51"><name pos:start="357:50" pos:end="357:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="359:9" pos:end="359:40"><decl pos:start="359:9" pos:end="359:39"><type pos:start="359:9" pos:end="359:11"><name pos:start="359:9" pos:end="359:11">int</name></type> <name pos:start="359:13" pos:end="359:17">width</name>  <init pos:start="359:20" pos:end="359:39">= <expr pos:start="359:22" pos:end="359:39"><literal type="number" pos:start="359:22" pos:end="359:23">16</literal> <operator pos:start="359:25" pos:end="359:25">*</operator> <name pos:start="359:27" pos:end="359:39"><name pos:start="359:27" pos:end="359:29">sps</name><operator pos:start="359:30" pos:end="359:31">-&gt;</operator><name pos:start="359:32" pos:end="359:39">mb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="361:9" pos:end="361:41"><decl pos:start="361:9" pos:end="361:40"><type pos:start="361:9" pos:end="361:11"><name pos:start="361:9" pos:end="361:11">int</name></type> <name pos:start="361:13" pos:end="361:18">height</name> <init pos:start="361:20" pos:end="361:40">= <expr pos:start="361:22" pos:end="361:40"><literal type="number" pos:start="361:22" pos:end="361:23">16</literal> <operator pos:start="361:25" pos:end="361:25">*</operator> <name pos:start="361:27" pos:end="361:40"><name pos:start="361:27" pos:end="361:29">sps</name><operator pos:start="361:30" pos:end="361:31">-&gt;</operator><name pos:start="361:32" pos:end="361:40">mb_height</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="365:9" pos:end="445:9"><if pos:start="365:9" pos:end="383:9">if <condition pos:start="365:12" pos:end="365:55">(<expr pos:start="365:13" pos:end="365:54"><name pos:start="365:13" pos:end="365:25"><name pos:start="365:13" pos:end="365:17">avctx</name><operator pos:start="365:18" pos:end="365:19">-&gt;</operator><name pos:start="365:20" pos:end="365:25">flags2</name></name> <operator pos:start="365:27" pos:end="365:27">&amp;</operator> <name pos:start="365:29" pos:end="365:54">AV_CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="365:57" pos:end="383:9">{<block_content pos:start="367:13" pos:end="381:33">

            <expr_stmt pos:start="367:13" pos:end="371:65"><expr pos:start="367:13" pos:end="371:64"><call pos:start="367:13" pos:end="371:64"><name pos:start="367:13" pos:end="367:18">av_log</name><argument_list pos:start="367:19" pos:end="371:64">(<argument pos:start="367:20" pos:end="367:24"><expr pos:start="367:20" pos:end="367:24"><name pos:start="367:20" pos:end="367:24">avctx</name></expr></argument>, <argument pos:start="367:27" pos:end="367:38"><expr pos:start="367:27" pos:end="367:38"><name pos:start="367:27" pos:end="367:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="367:41" pos:end="369:77"><expr pos:start="367:41" pos:end="369:77"><literal type="string" pos:start="367:41" pos:end="367:76">"discarding sps cropping, original "</literal>

                                           <literal type="string" pos:start="369:44" pos:end="369:77">"values are l:%d r:%d t:%d b:%d\n"</literal></expr></argument>,

                   <argument pos:start="371:20" pos:end="371:28"><expr pos:start="371:20" pos:end="371:28"><name pos:start="371:20" pos:end="371:28">crop_left</name></expr></argument>, <argument pos:start="371:31" pos:end="371:40"><expr pos:start="371:31" pos:end="371:40"><name pos:start="371:31" pos:end="371:40">crop_right</name></expr></argument>, <argument pos:start="371:43" pos:end="371:50"><expr pos:start="371:43" pos:end="371:50"><name pos:start="371:43" pos:end="371:50">crop_top</name></expr></argument>, <argument pos:start="371:53" pos:end="371:63"><expr pos:start="371:53" pos:end="371:63"><name pos:start="371:53" pos:end="371:63">crop_bottom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="375:13" pos:end="381:33"><expr pos:start="375:13" pos:end="381:32"><name pos:start="375:13" pos:end="375:26"><name pos:start="375:13" pos:end="375:15">sps</name><operator pos:start="375:16" pos:end="375:17">-&gt;</operator><name pos:start="375:18" pos:end="375:26">crop_left</name></name>   <operator pos:start="375:30" pos:end="375:30">=</operator>

            <name pos:start="377:13" pos:end="377:27"><name pos:start="377:13" pos:end="377:15">sps</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:27">crop_right</name></name>  <operator pos:start="377:30" pos:end="377:30">=</operator>

            <name pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:15">sps</name><operator pos:start="379:16" pos:end="379:17">-&gt;</operator><name pos:start="379:18" pos:end="379:25">crop_top</name></name>    <operator pos:start="379:30" pos:end="379:30">=</operator>

            <name pos:start="381:13" pos:end="381:28"><name pos:start="381:13" pos:end="381:15">sps</name><operator pos:start="381:16" pos:end="381:17">-&gt;</operator><name pos:start="381:18" pos:end="381:28">crop_bottom</name></name> <operator pos:start="381:30" pos:end="381:30">=</operator> <literal type="number" pos:start="381:32" pos:end="381:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="383:11" pos:end="445:9">else <block pos:start="383:16" pos:end="445:9">{<block_content pos:start="385:13" pos:end="443:52">

            <decl_stmt pos:start="385:13" pos:end="385:63"><decl pos:start="385:13" pos:end="385:62"><type pos:start="385:13" pos:end="385:15"><name pos:start="385:13" pos:end="385:15">int</name></type> <name pos:start="385:17" pos:end="385:20">vsub</name>   <init pos:start="385:24" pos:end="385:62">= <expr pos:start="385:26" pos:end="385:62"><ternary pos:start="385:26" pos:end="385:62"><condition pos:start="385:26" pos:end="385:56"><expr pos:start="385:26" pos:end="385:54"><operator pos:start="385:26" pos:end="385:26">(</operator><name pos:start="385:27" pos:end="385:48"><name pos:start="385:27" pos:end="385:29">sps</name><operator pos:start="385:30" pos:end="385:31">-&gt;</operator><name pos:start="385:32" pos:end="385:48">chroma_format_idc</name></name> <operator pos:start="385:50" pos:end="385:51">==</operator> <literal type="number" pos:start="385:53" pos:end="385:53">1</literal><operator pos:start="385:54" pos:end="385:54">)</operator></expr> ?</condition><then pos:start="385:58" pos:end="385:58"> <expr pos:start="385:58" pos:end="385:58"><literal type="number" pos:start="385:58" pos:end="385:58">1</literal></expr> </then><else pos:start="385:60" pos:end="385:62">: <expr pos:start="385:62" pos:end="385:62"><literal type="number" pos:start="385:62" pos:end="385:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="387:13" pos:end="389:63"><decl pos:start="387:13" pos:end="389:62"><type pos:start="387:13" pos:end="387:15"><name pos:start="387:13" pos:end="387:15">int</name></type> <name pos:start="387:17" pos:end="387:20">hsub</name>   <init pos:start="387:24" pos:end="389:62">= <expr pos:start="387:26" pos:end="389:62"><ternary pos:start="387:26" pos:end="389:62"><condition pos:start="387:26" pos:end="389:56"><expr pos:start="387:26" pos:end="389:54"><operator pos:start="387:26" pos:end="387:26">(</operator><name pos:start="387:27" pos:end="387:48"><name pos:start="387:27" pos:end="387:29">sps</name><operator pos:start="387:30" pos:end="387:31">-&gt;</operator><name pos:start="387:32" pos:end="387:48">chroma_format_idc</name></name> <operator pos:start="387:50" pos:end="387:51">==</operator> <literal type="number" pos:start="387:53" pos:end="387:53">1</literal> <operator pos:start="387:55" pos:end="387:56">||</operator>

                          <name pos:start="389:27" pos:end="389:48"><name pos:start="389:27" pos:end="389:29">sps</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:48">chroma_format_idc</name></name> <operator pos:start="389:50" pos:end="389:51">==</operator> <literal type="number" pos:start="389:53" pos:end="389:53">2</literal><operator pos:start="389:54" pos:end="389:54">)</operator></expr> ?</condition><then pos:start="389:58" pos:end="389:58"> <expr pos:start="389:58" pos:end="389:58"><literal type="number" pos:start="389:58" pos:end="389:58">1</literal></expr> </then><else pos:start="389:60" pos:end="389:62">: <expr pos:start="389:62" pos:end="389:62"><literal type="number" pos:start="389:62" pos:end="389:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="391:13" pos:end="391:35"><decl pos:start="391:13" pos:end="391:34"><type pos:start="391:13" pos:end="391:15"><name pos:start="391:13" pos:end="391:15">int</name></type> <name pos:start="391:17" pos:end="391:22">step_x</name> <init pos:start="391:24" pos:end="391:34">= <expr pos:start="391:26" pos:end="391:34"><literal type="number" pos:start="391:26" pos:end="391:26">1</literal> <operator pos:start="391:28" pos:end="391:29">&lt;&lt;</operator> <name pos:start="391:31" pos:end="391:34">hsub</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="393:13" pos:end="393:64"><decl pos:start="393:13" pos:end="393:63"><type pos:start="393:13" pos:end="393:15"><name pos:start="393:13" pos:end="393:15">int</name></type> <name pos:start="393:17" pos:end="393:22">step_y</name> <init pos:start="393:24" pos:end="393:63">= <expr pos:start="393:26" pos:end="393:63"><operator pos:start="393:26" pos:end="393:26">(</operator><literal type="number" pos:start="393:27" pos:end="393:29">2</literal> <operator pos:start="393:29" pos:end="393:29">-</operator> <name pos:start="393:31" pos:end="393:54"><name pos:start="393:31" pos:end="393:33">sps</name><operator pos:start="393:34" pos:end="393:35">-&gt;</operator><name pos:start="393:36" pos:end="393:54">frame_mbs_only_flag</name></name><operator pos:start="393:55" pos:end="393:55">)</operator> <operator pos:start="393:57" pos:end="393:58">&lt;&lt;</operator> <name pos:start="393:60" pos:end="393:63">vsub</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="397:13" pos:end="411:13"><if pos:start="397:13" pos:end="411:13">if <condition pos:start="397:16" pos:end="399:58">(<expr pos:start="397:17" pos:end="399:57"><name pos:start="397:17" pos:end="397:25">crop_left</name> <operator pos:start="397:27" pos:end="397:27">&amp;</operator> <operator pos:start="397:29" pos:end="397:29">(</operator><literal type="number" pos:start="397:30" pos:end="397:33">0x1F</literal> <operator pos:start="397:35" pos:end="397:36">&gt;&gt;</operator> <operator pos:start="397:38" pos:end="397:38">(</operator><name pos:start="397:39" pos:end="397:57"><name pos:start="397:39" pos:end="397:41">sps</name><operator pos:start="397:42" pos:end="397:43">-&gt;</operator><name pos:start="397:44" pos:end="397:57">bit_depth_luma</name></name> <operator pos:start="397:59" pos:end="397:59">&gt;</operator> <literal type="number" pos:start="397:61" pos:end="397:61">8</literal><operator pos:start="397:62" pos:end="397:62">)</operator><operator pos:start="397:63" pos:end="397:63">)</operator> <operator pos:start="397:65" pos:end="397:66">&amp;&amp;</operator>

                <operator pos:start="399:17" pos:end="399:17">!</operator><operator pos:start="399:18" pos:end="399:18">(</operator><name pos:start="399:19" pos:end="399:30"><name pos:start="399:19" pos:end="399:23">avctx</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:30">flags</name></name> <operator pos:start="399:32" pos:end="399:32">&amp;</operator> <name pos:start="399:34" pos:end="399:56">AV_CODEC_FLAG_UNALIGNED</name><operator pos:start="399:57" pos:end="399:57">)</operator></expr>)</condition> <block pos:start="399:60" pos:end="411:13">{<block_content pos:start="401:17" pos:end="409:34">

                <expr_stmt pos:start="401:17" pos:end="401:66"><expr pos:start="401:17" pos:end="401:65"><name pos:start="401:17" pos:end="401:25">crop_left</name> <operator pos:start="401:27" pos:end="401:28">&amp;=</operator> <operator pos:start="401:30" pos:end="401:30">~</operator><operator pos:start="401:31" pos:end="401:31">(</operator><literal type="number" pos:start="401:32" pos:end="401:35">0x1F</literal> <operator pos:start="401:37" pos:end="401:38">&gt;&gt;</operator> <operator pos:start="401:40" pos:end="401:40">(</operator><name pos:start="401:41" pos:end="401:59"><name pos:start="401:41" pos:end="401:43">sps</name><operator pos:start="401:44" pos:end="401:45">-&gt;</operator><name pos:start="401:46" pos:end="401:59">bit_depth_luma</name></name> <operator pos:start="401:61" pos:end="401:61">&gt;</operator> <literal type="number" pos:start="401:63" pos:end="401:63">8</literal><operator pos:start="401:64" pos:end="401:64">)</operator><operator pos:start="401:65" pos:end="401:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="409:34"><expr pos:start="403:17" pos:end="409:33"><call pos:start="403:17" pos:end="409:33"><name pos:start="403:17" pos:end="403:22">av_log</name><argument_list pos:start="403:23" pos:end="409:33">(<argument pos:start="403:24" pos:end="403:28"><expr pos:start="403:24" pos:end="403:28"><name pos:start="403:24" pos:end="403:28">avctx</name></expr></argument>, <argument pos:start="403:31" pos:end="403:44"><expr pos:start="403:31" pos:end="403:44"><name pos:start="403:31" pos:end="403:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="405:24" pos:end="407:64"><expr pos:start="405:24" pos:end="407:64"><literal type="string" pos:start="405:24" pos:end="405:54">"Reducing left cropping to %d "</literal>

                       <literal type="string" pos:start="407:24" pos:end="407:64">"chroma samples to preserve alignment.\n"</literal></expr></argument>,

                       <argument pos:start="409:24" pos:end="409:32"><expr pos:start="409:24" pos:end="409:32"><name pos:start="409:24" pos:end="409:32">crop_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="415:13" pos:end="433:13"><if pos:start="415:13" pos:end="433:13">if <condition pos:start="415:16" pos:end="427:13">(<expr pos:start="415:17" pos:end="425:60"><name pos:start="415:17" pos:end="415:25">crop_left</name>  <operator pos:start="415:28" pos:end="415:28">&gt;</operator> <operator pos:start="415:30" pos:end="415:30">(</operator><name pos:start="415:31" pos:end="415:38">unsigned</name><operator pos:start="415:39" pos:end="415:39">)</operator><name pos:start="415:40" pos:end="415:46">INT_MAX</name> <operator pos:start="415:48" pos:end="415:48">/</operator> <literal type="number" pos:start="415:50" pos:end="415:50">4</literal> <operator pos:start="415:52" pos:end="415:52">/</operator> <name pos:start="415:54" pos:end="415:59">step_x</name> <operator pos:start="415:61" pos:end="415:62">||</operator>

                <name pos:start="417:17" pos:end="417:26">crop_right</name> <operator pos:start="417:28" pos:end="417:28">&gt;</operator> <operator pos:start="417:30" pos:end="417:30">(</operator><name pos:start="417:31" pos:end="417:38">unsigned</name><operator pos:start="417:39" pos:end="417:39">)</operator><name pos:start="417:40" pos:end="417:46">INT_MAX</name> <operator pos:start="417:48" pos:end="417:48">/</operator> <literal type="number" pos:start="417:50" pos:end="417:50">4</literal> <operator pos:start="417:52" pos:end="417:52">/</operator> <name pos:start="417:54" pos:end="417:59">step_x</name> <operator pos:start="417:61" pos:end="417:62">||</operator>

                <name pos:start="419:17" pos:end="419:24">crop_top</name>   <operator pos:start="419:28" pos:end="419:28">&gt;</operator> <operator pos:start="419:30" pos:end="419:30">(</operator><name pos:start="419:31" pos:end="419:38">unsigned</name><operator pos:start="419:39" pos:end="419:39">)</operator><name pos:start="419:40" pos:end="419:46">INT_MAX</name> <operator pos:start="419:48" pos:end="419:48">/</operator> <literal type="number" pos:start="419:50" pos:end="419:50">4</literal> <operator pos:start="419:52" pos:end="419:52">/</operator> <name pos:start="419:54" pos:end="419:59">step_y</name> <operator pos:start="419:61" pos:end="419:62">||</operator>

                <name pos:start="421:17" pos:end="421:27">crop_bottom</name><operator pos:start="421:28" pos:end="421:28">&gt;</operator> <operator pos:start="421:30" pos:end="421:30">(</operator><name pos:start="421:31" pos:end="421:38">unsigned</name><operator pos:start="421:39" pos:end="421:39">)</operator><name pos:start="421:40" pos:end="421:46">INT_MAX</name> <operator pos:start="421:48" pos:end="421:48">/</operator> <literal type="number" pos:start="421:50" pos:end="421:50">4</literal> <operator pos:start="421:52" pos:end="421:52">/</operator> <name pos:start="421:54" pos:end="421:59">step_y</name> <operator pos:start="421:61" pos:end="421:62">||</operator>

                <operator pos:start="423:17" pos:end="423:17">(</operator><name pos:start="423:18" pos:end="423:26">crop_left</name> <operator pos:start="423:28" pos:end="423:28">+</operator> <name pos:start="423:30" pos:end="423:39">crop_right</name> <operator pos:start="423:41" pos:end="423:41">)</operator> <operator pos:start="423:43" pos:end="423:43">*</operator> <name pos:start="423:45" pos:end="423:50">step_x</name> <operator pos:start="423:52" pos:end="423:53">&gt;=</operator> <name pos:start="423:55" pos:end="423:59">width</name> <operator pos:start="423:61" pos:end="423:62">||</operator>

                <operator pos:start="425:17" pos:end="425:17">(</operator><name pos:start="425:18" pos:end="425:25">crop_top</name>  <operator pos:start="425:28" pos:end="425:28">+</operator> <name pos:start="425:30" pos:end="425:40">crop_bottom</name><operator pos:start="425:41" pos:end="425:41">)</operator> <operator pos:start="425:43" pos:end="425:43">*</operator> <name pos:start="425:45" pos:end="425:50">step_y</name> <operator pos:start="425:52" pos:end="425:53">&gt;=</operator> <name pos:start="425:55" pos:end="425:60">height</name></expr>

            )</condition> <block pos:start="427:15" pos:end="433:13">{<block_content pos:start="429:17" pos:end="431:26">

                <expr_stmt pos:start="429:17" pos:end="429:150"><expr pos:start="429:17" pos:end="429:149"><call pos:start="429:17" pos:end="429:149"><name pos:start="429:17" pos:end="429:22">av_log</name><argument_list pos:start="429:23" pos:end="429:149">(<argument pos:start="429:24" pos:end="429:28"><expr pos:start="429:24" pos:end="429:28"><name pos:start="429:24" pos:end="429:28">avctx</name></expr></argument>, <argument pos:start="429:31" pos:end="429:42"><expr pos:start="429:31" pos:end="429:42"><name pos:start="429:31" pos:end="429:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="429:45" pos:end="429:87"><expr pos:start="429:45" pos:end="429:87"><literal type="string" pos:start="429:45" pos:end="429:87">"crop values invalid %d %d %d %d / %d %d\n"</literal></expr></argument>, <argument pos:start="429:90" pos:end="429:98"><expr pos:start="429:90" pos:end="429:98"><name pos:start="429:90" pos:end="429:98">crop_left</name></expr></argument>, <argument pos:start="429:101" pos:end="429:110"><expr pos:start="429:101" pos:end="429:110"><name pos:start="429:101" pos:end="429:110">crop_right</name></expr></argument>, <argument pos:start="429:113" pos:end="429:120"><expr pos:start="429:113" pos:end="429:120"><name pos:start="429:113" pos:end="429:120">crop_top</name></expr></argument>, <argument pos:start="429:123" pos:end="429:133"><expr pos:start="429:123" pos:end="429:133"><name pos:start="429:123" pos:end="429:133">crop_bottom</name></expr></argument>, <argument pos:start="429:136" pos:end="429:140"><expr pos:start="429:136" pos:end="429:140"><name pos:start="429:136" pos:end="429:140">width</name></expr></argument>, <argument pos:start="429:143" pos:end="429:148"><expr pos:start="429:143" pos:end="429:148"><name pos:start="429:143" pos:end="429:148">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="431:17" pos:end="431:26">goto <name pos:start="431:22" pos:end="431:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="437:13" pos:end="437:52"><expr pos:start="437:13" pos:end="437:51"><name pos:start="437:13" pos:end="437:26"><name pos:start="437:13" pos:end="437:15">sps</name><operator pos:start="437:16" pos:end="437:17">-&gt;</operator><name pos:start="437:18" pos:end="437:26">crop_left</name></name>   <operator pos:start="437:30" pos:end="437:30">=</operator> <name pos:start="437:32" pos:end="437:40">crop_left</name>   <operator pos:start="437:44" pos:end="437:44">*</operator> <name pos:start="437:46" pos:end="437:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:52"><expr pos:start="439:13" pos:end="439:51"><name pos:start="439:13" pos:end="439:27"><name pos:start="439:13" pos:end="439:15">sps</name><operator pos:start="439:16" pos:end="439:17">-&gt;</operator><name pos:start="439:18" pos:end="439:27">crop_right</name></name>  <operator pos:start="439:30" pos:end="439:30">=</operator> <name pos:start="439:32" pos:end="439:41">crop_right</name>  <operator pos:start="439:44" pos:end="439:44">*</operator> <name pos:start="439:46" pos:end="439:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:52"><expr pos:start="441:13" pos:end="441:51"><name pos:start="441:13" pos:end="441:25"><name pos:start="441:13" pos:end="441:15">sps</name><operator pos:start="441:16" pos:end="441:17">-&gt;</operator><name pos:start="441:18" pos:end="441:25">crop_top</name></name>    <operator pos:start="441:30" pos:end="441:30">=</operator> <name pos:start="441:32" pos:end="441:39">crop_top</name>    <operator pos:start="441:44" pos:end="441:44">*</operator> <name pos:start="441:46" pos:end="441:51">step_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:52"><expr pos:start="443:13" pos:end="443:51"><name pos:start="443:13" pos:end="443:28"><name pos:start="443:13" pos:end="443:15">sps</name><operator pos:start="443:16" pos:end="443:17">-&gt;</operator><name pos:start="443:18" pos:end="443:28">crop_bottom</name></name> <operator pos:start="443:30" pos:end="443:30">=</operator> <name pos:start="443:32" pos:end="443:42">crop_bottom</name> <operator pos:start="443:44" pos:end="443:44">*</operator> <name pos:start="443:46" pos:end="443:51">step_y</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="447:7" pos:end="459:5">else <block pos:start="447:12" pos:end="459:5">{<block_content pos:start="449:9" pos:end="457:29">

        <expr_stmt pos:start="449:9" pos:end="457:29"><expr pos:start="449:9" pos:end="457:28"><name pos:start="449:9" pos:end="449:22"><name pos:start="449:9" pos:end="449:11">sps</name><operator pos:start="449:12" pos:end="449:13">-&gt;</operator><name pos:start="449:14" pos:end="449:22">crop_left</name></name>   <operator pos:start="449:26" pos:end="449:26">=</operator>

        <name pos:start="451:9" pos:end="451:23"><name pos:start="451:9" pos:end="451:11">sps</name><operator pos:start="451:12" pos:end="451:13">-&gt;</operator><name pos:start="451:14" pos:end="451:23">crop_right</name></name>  <operator pos:start="451:26" pos:end="451:26">=</operator>

        <name pos:start="453:9" pos:end="453:21"><name pos:start="453:9" pos:end="453:11">sps</name><operator pos:start="453:12" pos:end="453:13">-&gt;</operator><name pos:start="453:14" pos:end="453:21">crop_top</name></name>    <operator pos:start="453:26" pos:end="453:26">=</operator>

        <name pos:start="455:9" pos:end="455:24"><name pos:start="455:9" pos:end="455:11">sps</name><operator pos:start="455:12" pos:end="455:13">-&gt;</operator><name pos:start="455:14" pos:end="455:24">crop_bottom</name></name> <operator pos:start="455:26" pos:end="455:26">=</operator>

        <name pos:start="457:9" pos:end="457:17"><name pos:start="457:9" pos:end="457:11">sps</name><operator pos:start="457:12" pos:end="457:13">-&gt;</operator><name pos:start="457:14" pos:end="457:17">crop</name></name>        <operator pos:start="457:26" pos:end="457:26">=</operator> <literal type="number" pos:start="457:28" pos:end="457:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="463:5" pos:end="463:53"><expr pos:start="463:5" pos:end="463:52"><name pos:start="463:5" pos:end="463:36"><name pos:start="463:5" pos:end="463:7">sps</name><operator pos:start="463:8" pos:end="463:9">-&gt;</operator><name pos:start="463:10" pos:end="463:36">vui_parameters_present_flag</name></name> <operator pos:start="463:38" pos:end="463:38">=</operator> <call pos:start="463:40" pos:end="463:52"><name pos:start="463:40" pos:end="463:48">get_bits1</name><argument_list pos:start="463:49" pos:end="463:52">(<argument pos:start="463:50" pos:end="463:51"><expr pos:start="463:50" pos:end="463:51"><name pos:start="463:50" pos:end="463:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="465:5" pos:end="473:5"><if pos:start="465:5" pos:end="473:5">if <condition pos:start="465:8" pos:end="465:41">(<expr pos:start="465:9" pos:end="465:40"><name pos:start="465:9" pos:end="465:40"><name pos:start="465:9" pos:end="465:11">sps</name><operator pos:start="465:12" pos:end="465:13">-&gt;</operator><name pos:start="465:14" pos:end="465:40">vui_parameters_present_flag</name></name></expr>)</condition> <block pos:start="465:43" pos:end="473:5">{<block_content pos:start="467:9" pos:end="471:22">

        <decl_stmt pos:start="467:9" pos:end="467:56"><decl pos:start="467:9" pos:end="467:55"><type pos:start="467:9" pos:end="467:11"><name pos:start="467:9" pos:end="467:11">int</name></type> <name pos:start="467:13" pos:end="467:15">ret</name> <init pos:start="467:17" pos:end="467:55">= <expr pos:start="467:19" pos:end="467:55"><call pos:start="467:19" pos:end="467:55"><name pos:start="467:19" pos:end="467:39">decode_vui_parameters</name><argument_list pos:start="467:40" pos:end="467:55">(<argument pos:start="467:41" pos:end="467:42"><expr pos:start="467:41" pos:end="467:42"><name pos:start="467:41" pos:end="467:42">gb</name></expr></argument>, <argument pos:start="467:45" pos:end="467:49"><expr pos:start="467:45" pos:end="467:49"><name pos:start="467:45" pos:end="467:49">avctx</name></expr></argument>, <argument pos:start="467:52" pos:end="467:54"><expr pos:start="467:52" pos:end="467:54"><name pos:start="467:52" pos:end="467:54">sps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="469:9" pos:end="471:22"><if pos:start="469:9" pos:end="471:22">if <condition pos:start="469:12" pos:end="469:20">(<expr pos:start="469:13" pos:end="469:19"><name pos:start="469:13" pos:end="469:15">ret</name> <operator pos:start="469:17" pos:end="469:17">&lt;</operator> <literal type="number" pos:start="469:19" pos:end="469:19">0</literal></expr>)</condition><block type="pseudo" pos:start="471:13" pos:end="471:22"><block_content pos:start="471:13" pos:end="471:22">

            <goto pos:start="471:13" pos:end="471:22">goto <name pos:start="471:18" pos:end="471:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="477:5" pos:end="487:5"><if pos:start="477:5" pos:end="487:5">if <condition pos:start="477:8" pos:end="477:30">(<expr pos:start="477:9" pos:end="477:29"><call pos:start="477:9" pos:end="477:25"><name pos:start="477:9" pos:end="477:21">get_bits_left</name><argument_list pos:start="477:22" pos:end="477:25">(<argument pos:start="477:23" pos:end="477:24"><expr pos:start="477:23" pos:end="477:24"><name pos:start="477:23" pos:end="477:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="477:27" pos:end="477:27">&lt;</operator> <literal type="number" pos:start="477:29" pos:end="477:29">0</literal></expr>)</condition> <block pos:start="477:32" pos:end="487:5">{<block_content pos:start="479:9" pos:end="485:22">

        <expr_stmt pos:start="479:9" pos:end="481:113"><expr pos:start="479:9" pos:end="481:112"><call pos:start="479:9" pos:end="481:112"><name pos:start="479:9" pos:end="479:14">av_log</name><argument_list pos:start="479:15" pos:end="481:112">(<argument pos:start="479:16" pos:end="479:20"><expr pos:start="479:16" pos:end="479:20"><name pos:start="479:16" pos:end="479:20">avctx</name></expr></argument>, <argument pos:start="479:23" pos:end="479:71"><expr pos:start="479:23" pos:end="479:71"><ternary pos:start="479:23" pos:end="479:71"><condition pos:start="479:23" pos:end="479:41"><expr pos:start="479:23" pos:end="479:39"><name pos:start="479:23" pos:end="479:39">ignore_truncation</name></expr> ?</condition><then pos:start="479:43" pos:end="479:56"> <expr pos:start="479:43" pos:end="479:56"><name pos:start="479:43" pos:end="479:56">AV_LOG_WARNING</name></expr> </then><else pos:start="479:58" pos:end="479:71">: <expr pos:start="479:60" pos:end="479:71"><name pos:start="479:60" pos:end="479:71">AV_LOG_ERROR</name></expr></else></ternary></expr></argument>,

               <argument pos:start="481:16" pos:end="481:41"><expr pos:start="481:16" pos:end="481:41"><literal type="string" pos:start="481:16" pos:end="481:41">"Overread %s by %d bits\n"</literal></expr></argument>, <argument pos:start="481:44" pos:end="481:91"><expr pos:start="481:44" pos:end="481:91"><ternary pos:start="481:44" pos:end="481:91"><condition pos:start="481:44" pos:end="481:77"><expr pos:start="481:44" pos:end="481:75"><name pos:start="481:44" pos:end="481:75"><name pos:start="481:44" pos:end="481:46">sps</name><operator pos:start="481:47" pos:end="481:48">-&gt;</operator><name pos:start="481:49" pos:end="481:75">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="481:79" pos:end="481:83"> <expr pos:start="481:79" pos:end="481:83"><literal type="string" pos:start="481:79" pos:end="481:83">"VUI"</literal></expr> </then><else pos:start="481:85" pos:end="481:91">: <expr pos:start="481:87" pos:end="481:91"><literal type="string" pos:start="481:87" pos:end="481:91">"SPS"</literal></expr></else></ternary></expr></argument>, <argument pos:start="481:94" pos:end="481:111"><expr pos:start="481:94" pos:end="481:111"><operator pos:start="481:94" pos:end="481:94">-</operator><call pos:start="481:95" pos:end="481:111"><name pos:start="481:95" pos:end="481:107">get_bits_left</name><argument_list pos:start="481:108" pos:end="481:111">(<argument pos:start="481:109" pos:end="481:110"><expr pos:start="481:109" pos:end="481:110"><name pos:start="481:109" pos:end="481:110">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="483:9" pos:end="485:22"><if pos:start="483:9" pos:end="485:22">if <condition pos:start="483:12" pos:end="483:31">(<expr pos:start="483:13" pos:end="483:30"><operator pos:start="483:13" pos:end="483:13">!</operator><name pos:start="483:14" pos:end="483:30">ignore_truncation</name></expr>)</condition><block type="pseudo" pos:start="485:13" pos:end="485:22"><block_content pos:start="485:13" pos:end="485:22">

            <goto pos:start="485:13" pos:end="485:22">goto <name pos:start="485:18" pos:end="485:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="491:5" pos:end="493:15">/* if the maximum delay is not stored in the SPS, derive it based on the

     * level */</comment>

    <if_stmt pos:start="495:5" pos:end="515:5"><if pos:start="495:5" pos:end="515:5">if <condition pos:start="495:8" pos:end="497:87">(<expr pos:start="495:9" pos:end="497:86"><operator pos:start="495:9" pos:end="495:9">!</operator><name pos:start="495:10" pos:end="495:40"><name pos:start="495:10" pos:end="495:12">sps</name><operator pos:start="495:13" pos:end="495:14">-&gt;</operator><name pos:start="495:15" pos:end="495:40">bitstream_restriction_flag</name></name> <operator pos:start="495:42" pos:end="495:43">&amp;&amp;</operator>

        <operator pos:start="497:9" pos:end="497:9">(</operator><name pos:start="497:10" pos:end="497:29"><name pos:start="497:10" pos:end="497:12">sps</name><operator pos:start="497:13" pos:end="497:14">-&gt;</operator><name pos:start="497:15" pos:end="497:29">ref_frame_count</name></name> <operator pos:start="497:31" pos:end="497:32">||</operator> <name pos:start="497:34" pos:end="497:61"><name pos:start="497:34" pos:end="497:38">avctx</name><operator pos:start="497:39" pos:end="497:40">-&gt;</operator><name pos:start="497:41" pos:end="497:61">strict_std_compliance</name></name> <operator pos:start="497:63" pos:end="497:64">&gt;=</operator> <name pos:start="497:66" pos:end="497:85">FF_COMPLIANCE_STRICT</name><operator pos:start="497:86" pos:end="497:86">)</operator></expr>)</condition> <block pos:start="497:89" pos:end="515:5">{<block_content pos:start="499:9" pos:end="513:9">

        <expr_stmt pos:start="499:9" pos:end="499:60"><expr pos:start="499:9" pos:end="499:59"><name pos:start="499:9" pos:end="499:31"><name pos:start="499:9" pos:end="499:11">sps</name><operator pos:start="499:12" pos:end="499:13">-&gt;</operator><name pos:start="499:14" pos:end="499:31">num_reorder_frames</name></name> <operator pos:start="499:33" pos:end="499:33">=</operator> <name pos:start="499:35" pos:end="499:55">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="499:57" pos:end="499:57">-</operator> <literal type="number" pos:start="499:59" pos:end="499:59">1</literal></expr>;</expr_stmt>

        <for pos:start="501:9" pos:end="513:9">for <control pos:start="501:13" pos:end="501:63">(<init pos:start="501:14" pos:end="501:19"><expr pos:start="501:14" pos:end="501:18"><name pos:start="501:14" pos:end="501:14">i</name> <operator pos:start="501:16" pos:end="501:16">=</operator> <literal type="number" pos:start="501:18" pos:end="501:18">0</literal></expr>;</init> <condition pos:start="501:21" pos:end="501:58"><expr pos:start="501:21" pos:end="501:57"><name pos:start="501:21" pos:end="501:21">i</name> <operator pos:start="501:23" pos:end="501:23">&lt;</operator> <call pos:start="501:25" pos:end="501:57"><name pos:start="501:25" pos:end="501:38">FF_ARRAY_ELEMS</name><argument_list pos:start="501:39" pos:end="501:57">(<argument pos:start="501:40" pos:end="501:56"><expr pos:start="501:40" pos:end="501:56"><name pos:start="501:40" pos:end="501:56">level_max_dpb_mbs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="501:60" pos:end="501:62"><expr pos:start="501:60" pos:end="501:62"><name pos:start="501:60" pos:end="501:60">i</name><operator pos:start="501:61" pos:end="501:62">++</operator></expr></incr>)</control> <block pos:start="501:65" pos:end="513:9">{<block_content pos:start="503:13" pos:end="511:13">

            <if_stmt pos:start="503:13" pos:end="511:13"><if pos:start="503:13" pos:end="511:13">if <condition pos:start="503:16" pos:end="503:58">(<expr pos:start="503:17" pos:end="503:57"><name pos:start="503:17" pos:end="503:39"><name pos:start="503:17" pos:end="503:33">level_max_dpb_mbs</name><index pos:start="503:34" pos:end="503:36">[<expr pos:start="503:35" pos:end="503:35"><name pos:start="503:35" pos:end="503:35">i</name></expr>]</index><index pos:start="503:37" pos:end="503:39">[<expr pos:start="503:38" pos:end="503:38"><literal type="number" pos:start="503:38" pos:end="503:38">0</literal></expr>]</index></name> <operator pos:start="503:41" pos:end="503:42">==</operator> <name pos:start="503:44" pos:end="503:57"><name pos:start="503:44" pos:end="503:46">sps</name><operator pos:start="503:47" pos:end="503:48">-&gt;</operator><name pos:start="503:49" pos:end="503:57">level_idc</name></name></expr>)</condition> <block pos:start="503:60" pos:end="511:13">{<block_content pos:start="505:17" pos:end="509:22">

                <expr_stmt pos:start="505:17" pos:end="507:73"><expr pos:start="505:17" pos:end="507:72"><name pos:start="505:17" pos:end="505:39"><name pos:start="505:17" pos:end="505:19">sps</name><operator pos:start="505:20" pos:end="505:21">-&gt;</operator><name pos:start="505:22" pos:end="505:39">num_reorder_frames</name></name> <operator pos:start="505:41" pos:end="505:41">=</operator> <call pos:start="505:43" pos:end="507:72"><name pos:start="505:43" pos:end="505:47">FFMIN</name><argument_list pos:start="505:48" pos:end="507:72">(<argument pos:start="505:49" pos:end="505:106"><expr pos:start="505:49" pos:end="505:106"><name pos:start="505:49" pos:end="505:71"><name pos:start="505:49" pos:end="505:65">level_max_dpb_mbs</name><index pos:start="505:66" pos:end="505:68">[<expr pos:start="505:67" pos:end="505:67"><name pos:start="505:67" pos:end="505:67">i</name></expr>]</index><index pos:start="505:69" pos:end="505:71">[<expr pos:start="505:70" pos:end="505:70"><literal type="number" pos:start="505:70" pos:end="505:70">1</literal></expr>]</index></name> <operator pos:start="505:73" pos:end="505:73">/</operator> <operator pos:start="505:75" pos:end="505:75">(</operator><name pos:start="505:76" pos:end="505:88"><name pos:start="505:76" pos:end="505:78">sps</name><operator pos:start="505:79" pos:end="505:80">-&gt;</operator><name pos:start="505:81" pos:end="505:88">mb_width</name></name> <operator pos:start="505:90" pos:end="505:90">*</operator> <name pos:start="505:92" pos:end="505:105"><name pos:start="505:92" pos:end="505:94">sps</name><operator pos:start="505:95" pos:end="505:96">-&gt;</operator><name pos:start="505:97" pos:end="505:105">mb_height</name></name><operator pos:start="505:106" pos:end="505:106">)</operator></expr></argument>,

                                                <argument pos:start="507:49" pos:end="507:71"><expr pos:start="507:49" pos:end="507:71"><name pos:start="507:49" pos:end="507:71"><name pos:start="507:49" pos:end="507:51">sps</name><operator pos:start="507:52" pos:end="507:53">-&gt;</operator><name pos:start="507:54" pos:end="507:71">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="509:17" pos:end="509:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="519:5" pos:end="521:25"><if pos:start="519:5" pos:end="521:25">if <condition pos:start="519:8" pos:end="519:22">(<expr pos:start="519:9" pos:end="519:21"><operator pos:start="519:9" pos:end="519:9">!</operator><name pos:start="519:10" pos:end="519:21"><name pos:start="519:10" pos:end="519:12">sps</name><operator pos:start="519:13" pos:end="519:14">-&gt;</operator><name pos:start="519:15" pos:end="519:17">sar</name><operator pos:start="519:18" pos:end="519:18">.</operator><name pos:start="519:19" pos:end="519:21">den</name></name></expr>)</condition><block type="pseudo" pos:start="521:9" pos:end="521:25"><block_content pos:start="521:9" pos:end="521:25">

        <expr_stmt pos:start="521:9" pos:end="521:25"><expr pos:start="521:9" pos:end="521:24"><name pos:start="521:9" pos:end="521:20"><name pos:start="521:9" pos:end="521:11">sps</name><operator pos:start="521:12" pos:end="521:13">-&gt;</operator><name pos:start="521:14" pos:end="521:16">sar</name><operator pos:start="521:17" pos:end="521:17">.</operator><name pos:start="521:18" pos:end="521:20">den</name></name> <operator pos:start="521:22" pos:end="521:22">=</operator> <literal type="number" pos:start="521:24" pos:end="521:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="525:5" pos:end="563:5"><if pos:start="525:5" pos:end="563:5">if <condition pos:start="525:8" pos:end="525:42">(<expr pos:start="525:9" pos:end="525:41"><name pos:start="525:9" pos:end="525:20"><name pos:start="525:9" pos:end="525:13">avctx</name><operator pos:start="525:14" pos:end="525:15">-&gt;</operator><name pos:start="525:16" pos:end="525:20">debug</name></name> <operator pos:start="525:22" pos:end="525:22">&amp;</operator> <name pos:start="525:24" pos:end="525:41">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="525:44" pos:end="563:5">{<block_content pos:start="527:9" pos:end="561:17">

        <decl_stmt pos:start="527:9" pos:end="527:70"><decl pos:start="527:9" pos:end="527:69"><type pos:start="527:9" pos:end="527:25"><specifier pos:start="527:9" pos:end="527:14">static</specifier> <specifier pos:start="527:16" pos:end="527:20">const</specifier> <name pos:start="527:22" pos:end="527:25">char</name></type> <name pos:start="527:27" pos:end="527:35"><name pos:start="527:27" pos:end="527:29">csp</name><index pos:start="527:30" pos:end="527:32">[<expr pos:start="527:31" pos:end="527:31"><literal type="number" pos:start="527:31" pos:end="527:31">4</literal></expr>]</index><index pos:start="527:33" pos:end="527:35">[<expr pos:start="527:34" pos:end="527:34"><literal type="number" pos:start="527:34" pos:end="527:34">5</literal></expr>]</index></name> <init pos:start="527:37" pos:end="527:69">= <expr pos:start="527:39" pos:end="527:69"><block pos:start="527:39" pos:end="527:69">{ <expr pos:start="527:41" pos:end="527:46"><literal type="string" pos:start="527:41" pos:end="527:46">"Gray"</literal></expr>, <expr pos:start="527:49" pos:end="527:53"><literal type="string" pos:start="527:49" pos:end="527:53">"420"</literal></expr>, <expr pos:start="527:56" pos:end="527:60"><literal type="string" pos:start="527:56" pos:end="527:60">"422"</literal></expr>, <expr pos:start="527:63" pos:end="527:67"><literal type="string" pos:start="527:63" pos:end="527:67">"444"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="529:9" pos:end="561:17"><expr pos:start="529:9" pos:end="561:16"><call pos:start="529:9" pos:end="561:16"><name pos:start="529:9" pos:end="529:14">av_log</name><argument_list pos:start="529:15" pos:end="561:16">(<argument pos:start="529:16" pos:end="529:20"><expr pos:start="529:16" pos:end="529:20"><name pos:start="529:16" pos:end="529:20">avctx</name></expr></argument>, <argument pos:start="529:23" pos:end="529:34"><expr pos:start="529:23" pos:end="529:34"><name pos:start="529:23" pos:end="529:34">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="531:16" pos:end="531:119"><expr pos:start="531:16" pos:end="531:119"><literal type="string" pos:start="531:16" pos:end="531:88">"sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %"</literal><name pos:start="531:89" pos:end="531:94">PRId32</name><literal type="string" pos:start="531:95" pos:end="531:98">"/%"</literal><name pos:start="531:99" pos:end="531:104">PRId32</name><literal type="string" pos:start="531:105" pos:end="531:119">" b%d reo:%d\n"</literal></expr></argument>,

               <argument pos:start="533:16" pos:end="533:21"><expr pos:start="533:16" pos:end="533:21"><name pos:start="533:16" pos:end="533:21">sps_id</name></expr></argument>, <argument pos:start="533:24" pos:end="533:39"><expr pos:start="533:24" pos:end="533:39"><name pos:start="533:24" pos:end="533:39"><name pos:start="533:24" pos:end="533:26">sps</name><operator pos:start="533:27" pos:end="533:28">-&gt;</operator><name pos:start="533:29" pos:end="533:39">profile_idc</name></name></expr></argument>, <argument pos:start="533:42" pos:end="533:55"><expr pos:start="533:42" pos:end="533:55"><name pos:start="533:42" pos:end="533:55"><name pos:start="533:42" pos:end="533:44">sps</name><operator pos:start="533:45" pos:end="533:46">-&gt;</operator><name pos:start="533:47" pos:end="533:55">level_idc</name></name></expr></argument>,

               <argument pos:start="535:16" pos:end="535:28"><expr pos:start="535:16" pos:end="535:28"><name pos:start="535:16" pos:end="535:28"><name pos:start="535:16" pos:end="535:18">sps</name><operator pos:start="535:19" pos:end="535:20">-&gt;</operator><name pos:start="535:21" pos:end="535:28">poc_type</name></name></expr></argument>,

               <argument pos:start="537:16" pos:end="537:35"><expr pos:start="537:16" pos:end="537:35"><name pos:start="537:16" pos:end="537:35"><name pos:start="537:16" pos:end="537:18">sps</name><operator pos:start="537:19" pos:end="537:20">-&gt;</operator><name pos:start="537:21" pos:end="537:35">ref_frame_count</name></name></expr></argument>,

               <argument pos:start="539:16" pos:end="539:28"><expr pos:start="539:16" pos:end="539:28"><name pos:start="539:16" pos:end="539:28"><name pos:start="539:16" pos:end="539:18">sps</name><operator pos:start="539:19" pos:end="539:20">-&gt;</operator><name pos:start="539:21" pos:end="539:28">mb_width</name></name></expr></argument>, <argument pos:start="539:31" pos:end="539:44"><expr pos:start="539:31" pos:end="539:44"><name pos:start="539:31" pos:end="539:44"><name pos:start="539:31" pos:end="539:33">sps</name><operator pos:start="539:34" pos:end="539:35">-&gt;</operator><name pos:start="539:36" pos:end="539:44">mb_height</name></name></expr></argument>,

               <argument pos:start="541:16" pos:end="541:86"><expr pos:start="541:16" pos:end="541:86"><ternary pos:start="541:16" pos:end="541:86"><condition pos:start="541:16" pos:end="541:41"><expr pos:start="541:16" pos:end="541:39"><name pos:start="541:16" pos:end="541:39"><name pos:start="541:16" pos:end="541:18">sps</name><operator pos:start="541:19" pos:end="541:20">-&gt;</operator><name pos:start="541:21" pos:end="541:39">frame_mbs_only_flag</name></name></expr> ?</condition><then pos:start="541:43" pos:end="541:47"> <expr pos:start="541:43" pos:end="541:47"><literal type="string" pos:start="541:43" pos:end="541:47">"FRM"</literal></expr> </then><else pos:start="541:49" pos:end="541:86">: <expr pos:start="541:51" pos:end="541:86"><operator pos:start="541:51" pos:end="541:51">(</operator><ternary pos:start="541:52" pos:end="541:85"><condition pos:start="541:52" pos:end="541:64"><expr pos:start="541:52" pos:end="541:62"><name pos:start="541:52" pos:end="541:62"><name pos:start="541:52" pos:end="541:54">sps</name><operator pos:start="541:55" pos:end="541:56">-&gt;</operator><name pos:start="541:57" pos:end="541:62">mb_aff</name></name></expr> ?</condition><then pos:start="541:66" pos:end="541:73"> <expr pos:start="541:66" pos:end="541:73"><literal type="string" pos:start="541:66" pos:end="541:73">"MB-AFF"</literal></expr> </then><else pos:start="541:75" pos:end="541:85">: <expr pos:start="541:77" pos:end="541:85"><literal type="string" pos:start="541:77" pos:end="541:85">"PIC-AFF"</literal></expr></else></ternary><operator pos:start="541:86" pos:end="541:86">)</operator></expr></else></ternary></expr></argument>,

               <argument pos:start="543:16" pos:end="543:58"><expr pos:start="543:16" pos:end="543:58"><ternary pos:start="543:16" pos:end="543:58"><condition pos:start="543:16" pos:end="543:47"><expr pos:start="543:16" pos:end="543:45"><name pos:start="543:16" pos:end="543:45"><name pos:start="543:16" pos:end="543:18">sps</name><operator pos:start="543:19" pos:end="543:20">-&gt;</operator><name pos:start="543:21" pos:end="543:45">direct_8x8_inference_flag</name></name></expr> ?</condition><then pos:start="543:49" pos:end="543:53"> <expr pos:start="543:49" pos:end="543:53"><literal type="string" pos:start="543:49" pos:end="543:53">"8B8"</literal></expr> </then><else pos:start="543:55" pos:end="543:58">: <expr pos:start="543:57" pos:end="543:58"><literal type="string" pos:start="543:57" pos:end="543:58">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="545:16" pos:end="545:29"><expr pos:start="545:16" pos:end="545:29"><name pos:start="545:16" pos:end="545:29"><name pos:start="545:16" pos:end="545:18">sps</name><operator pos:start="545:19" pos:end="545:20">-&gt;</operator><name pos:start="545:21" pos:end="545:29">crop_left</name></name></expr></argument>, <argument pos:start="545:32" pos:end="545:46"><expr pos:start="545:32" pos:end="545:46"><name pos:start="545:32" pos:end="545:46"><name pos:start="545:32" pos:end="545:34">sps</name><operator pos:start="545:35" pos:end="545:36">-&gt;</operator><name pos:start="545:37" pos:end="545:46">crop_right</name></name></expr></argument>,

               <argument pos:start="547:16" pos:end="547:28"><expr pos:start="547:16" pos:end="547:28"><name pos:start="547:16" pos:end="547:28"><name pos:start="547:16" pos:end="547:18">sps</name><operator pos:start="547:19" pos:end="547:20">-&gt;</operator><name pos:start="547:21" pos:end="547:28">crop_top</name></name></expr></argument>, <argument pos:start="547:31" pos:end="547:46"><expr pos:start="547:31" pos:end="547:46"><name pos:start="547:31" pos:end="547:46"><name pos:start="547:31" pos:end="547:33">sps</name><operator pos:start="547:34" pos:end="547:35">-&gt;</operator><name pos:start="547:36" pos:end="547:46">crop_bottom</name></name></expr></argument>,

               <argument pos:start="549:16" pos:end="549:60"><expr pos:start="549:16" pos:end="549:60"><ternary pos:start="549:16" pos:end="549:60"><condition pos:start="549:16" pos:end="549:49"><expr pos:start="549:16" pos:end="549:47"><name pos:start="549:16" pos:end="549:47"><name pos:start="549:16" pos:end="549:18">sps</name><operator pos:start="549:19" pos:end="549:20">-&gt;</operator><name pos:start="549:21" pos:end="549:47">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="549:51" pos:end="549:55"> <expr pos:start="549:51" pos:end="549:55"><literal type="string" pos:start="549:51" pos:end="549:55">"VUI"</literal></expr> </then><else pos:start="549:57" pos:end="549:60">: <expr pos:start="549:59" pos:end="549:60"><literal type="string" pos:start="549:59" pos:end="549:60">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="551:16" pos:end="551:42"><expr pos:start="551:16" pos:end="551:42"><name pos:start="551:16" pos:end="551:42"><name pos:start="551:16" pos:end="551:18">csp</name><index pos:start="551:19" pos:end="551:42">[<expr pos:start="551:20" pos:end="551:41"><name pos:start="551:20" pos:end="551:41"><name pos:start="551:20" pos:end="551:22">sps</name><operator pos:start="551:23" pos:end="551:24">-&gt;</operator><name pos:start="551:25" pos:end="551:41">chroma_format_idc</name></name></expr>]</index></name></expr></argument>,

               <argument pos:start="553:16" pos:end="553:73"><expr pos:start="553:16" pos:end="553:73"><ternary pos:start="553:16" pos:end="553:73"><condition pos:start="553:16" pos:end="553:46"><expr pos:start="553:16" pos:end="553:44"><name pos:start="553:16" pos:end="553:44"><name pos:start="553:16" pos:end="553:18">sps</name><operator pos:start="553:19" pos:end="553:20">-&gt;</operator><name pos:start="553:21" pos:end="553:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="553:48" pos:end="553:69"> <expr pos:start="553:48" pos:end="553:69"><name pos:start="553:48" pos:end="553:69"><name pos:start="553:48" pos:end="553:50">sps</name><operator pos:start="553:51" pos:end="553:52">-&gt;</operator><name pos:start="553:53" pos:end="553:69">num_units_in_tick</name></name></expr> </then><else pos:start="553:71" pos:end="553:73">: <expr pos:start="553:73" pos:end="553:73"><literal type="number" pos:start="553:73" pos:end="553:73">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="555:16" pos:end="555:66"><expr pos:start="555:16" pos:end="555:66"><ternary pos:start="555:16" pos:end="555:66"><condition pos:start="555:16" pos:end="555:46"><expr pos:start="555:16" pos:end="555:44"><name pos:start="555:16" pos:end="555:44"><name pos:start="555:16" pos:end="555:18">sps</name><operator pos:start="555:19" pos:end="555:20">-&gt;</operator><name pos:start="555:21" pos:end="555:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="555:48" pos:end="555:62"> <expr pos:start="555:48" pos:end="555:62"><name pos:start="555:48" pos:end="555:62"><name pos:start="555:48" pos:end="555:50">sps</name><operator pos:start="555:51" pos:end="555:52">-&gt;</operator><name pos:start="555:53" pos:end="555:62">time_scale</name></name></expr> </then><else pos:start="555:64" pos:end="555:66">: <expr pos:start="555:66" pos:end="555:66"><literal type="number" pos:start="555:66" pos:end="555:66">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="557:16" pos:end="557:34"><expr pos:start="557:16" pos:end="557:34"><name pos:start="557:16" pos:end="557:34"><name pos:start="557:16" pos:end="557:18">sps</name><operator pos:start="557:19" pos:end="557:20">-&gt;</operator><name pos:start="557:21" pos:end="557:34">bit_depth_luma</name></name></expr></argument>,

               <argument pos:start="559:16" pos:end="559:77"><expr pos:start="559:16" pos:end="559:77"><ternary pos:start="559:16" pos:end="559:77"><condition pos:start="559:16" pos:end="559:48"><expr pos:start="559:16" pos:end="559:46"><name pos:start="559:16" pos:end="559:46"><name pos:start="559:16" pos:end="559:18">sps</name><operator pos:start="559:19" pos:end="559:20">-&gt;</operator><name pos:start="559:21" pos:end="559:46">bitstream_restriction_flag</name></name></expr> ?</condition><then pos:start="559:50" pos:end="559:72"> <expr pos:start="559:50" pos:end="559:72"><name pos:start="559:50" pos:end="559:72"><name pos:start="559:50" pos:end="559:52">sps</name><operator pos:start="559:53" pos:end="559:54">-&gt;</operator><name pos:start="559:55" pos:end="559:72">num_reorder_frames</name></name></expr> </then><else pos:start="559:74" pos:end="559:77">: <expr pos:start="559:76" pos:end="559:77"><operator pos:start="559:76" pos:end="559:76">-</operator><literal type="number" pos:start="559:77" pos:end="559:77">1</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="567:5" pos:end="571:52">/* check if this is a repeat of an already parsed SPS, then keep the

     * original one.

     * otherwise drop all PPSes that depend on it */</comment>

    <if_stmt pos:start="573:5" pos:end="585:5"><if pos:start="573:5" pos:end="579:5">if <condition pos:start="573:8" pos:end="575:74">(<expr pos:start="573:9" pos:end="575:73"><name pos:start="573:9" pos:end="573:28"><name pos:start="573:9" pos:end="573:10">ps</name><operator pos:start="573:11" pos:end="573:12">-&gt;</operator><name pos:start="573:13" pos:end="573:20">sps_list</name><index pos:start="573:21" pos:end="573:28">[<expr pos:start="573:22" pos:end="573:27"><name pos:start="573:22" pos:end="573:27">sps_id</name></expr>]</index></name> <operator pos:start="573:30" pos:end="573:31">&amp;&amp;</operator>

        <operator pos:start="575:9" pos:end="575:9">!</operator><call pos:start="575:10" pos:end="575:73"><name pos:start="575:10" pos:end="575:15">memcmp</name><argument_list pos:start="575:16" pos:end="575:73">(<argument pos:start="575:17" pos:end="575:42"><expr pos:start="575:17" pos:end="575:42"><name pos:start="575:17" pos:end="575:36"><name pos:start="575:17" pos:end="575:18">ps</name><operator pos:start="575:19" pos:end="575:20">-&gt;</operator><name pos:start="575:21" pos:end="575:28">sps_list</name><index pos:start="575:29" pos:end="575:36">[<expr pos:start="575:30" pos:end="575:35"><name pos:start="575:30" pos:end="575:35">sps_id</name></expr>]</index></name><operator pos:start="575:37" pos:end="575:38">-&gt;</operator><name pos:start="575:39" pos:end="575:42">data</name></expr></argument>, <argument pos:start="575:45" pos:end="575:57"><expr pos:start="575:45" pos:end="575:57"><name pos:start="575:45" pos:end="575:57"><name pos:start="575:45" pos:end="575:51">sps_buf</name><operator pos:start="575:52" pos:end="575:53">-&gt;</operator><name pos:start="575:54" pos:end="575:57">data</name></name></expr></argument>, <argument pos:start="575:60" pos:end="575:72"><expr pos:start="575:60" pos:end="575:72"><name pos:start="575:60" pos:end="575:72"><name pos:start="575:60" pos:end="575:66">sps_buf</name><operator pos:start="575:67" pos:end="575:68">-&gt;</operator><name pos:start="575:69" pos:end="575:72">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="575:76" pos:end="579:5">{<block_content pos:start="577:9" pos:end="577:34">

        <expr_stmt pos:start="577:9" pos:end="577:34"><expr pos:start="577:9" pos:end="577:33"><call pos:start="577:9" pos:end="577:33"><name pos:start="577:9" pos:end="577:23">av_buffer_unref</name><argument_list pos:start="577:24" pos:end="577:33">(<argument pos:start="577:25" pos:end="577:32"><expr pos:start="577:25" pos:end="577:32"><operator pos:start="577:25" pos:end="577:25">&amp;</operator><name pos:start="577:26" pos:end="577:32">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="579:7" pos:end="585:5">else <block pos:start="579:12" pos:end="585:5">{<block_content pos:start="581:9" pos:end="583:39">

        <expr_stmt pos:start="581:9" pos:end="581:31"><expr pos:start="581:9" pos:end="581:30"><call pos:start="581:9" pos:end="581:30"><name pos:start="581:9" pos:end="581:18">remove_sps</name><argument_list pos:start="581:19" pos:end="581:30">(<argument pos:start="581:20" pos:end="581:21"><expr pos:start="581:20" pos:end="581:21"><name pos:start="581:20" pos:end="581:21">ps</name></expr></argument>, <argument pos:start="581:24" pos:end="581:29"><expr pos:start="581:24" pos:end="581:29"><name pos:start="581:24" pos:end="581:29">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="583:9" pos:end="583:39"><expr pos:start="583:9" pos:end="583:38"><name pos:start="583:9" pos:end="583:28"><name pos:start="583:9" pos:end="583:10">ps</name><operator pos:start="583:11" pos:end="583:12">-&gt;</operator><name pos:start="583:13" pos:end="583:20">sps_list</name><index pos:start="583:21" pos:end="583:28">[<expr pos:start="583:22" pos:end="583:27"><name pos:start="583:22" pos:end="583:27">sps_id</name></expr>]</index></name> <operator pos:start="583:30" pos:end="583:30">=</operator> <name pos:start="583:32" pos:end="583:38">sps_buf</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="589:5" pos:end="589:13">return <expr pos:start="589:12" pos:end="589:12"><literal type="number" pos:start="589:12" pos:end="589:12">0</literal></expr>;</return>



<label pos:start="593:1" pos:end="593:5"><name pos:start="593:1" pos:end="593:4">fail</name>:</label>

    <expr_stmt pos:start="595:5" pos:end="595:30"><expr pos:start="595:5" pos:end="595:29"><call pos:start="595:5" pos:end="595:29"><name pos:start="595:5" pos:end="595:19">av_buffer_unref</name><argument_list pos:start="595:20" pos:end="595:29">(<argument pos:start="595:21" pos:end="595:28"><expr pos:start="595:21" pos:end="595:28"><operator pos:start="595:21" pos:end="595:21">&amp;</operator><name pos:start="595:22" pos:end="595:28">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="597:5" pos:end="597:31">return <expr pos:start="597:12" pos:end="597:30"><name pos:start="597:12" pos:end="597:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
