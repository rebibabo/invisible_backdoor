<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14072.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">helper_rsm</name><parameter_list pos:start="1:16" pos:end="1:33">(<parameter pos:start="1:17" pos:end="1:32"><decl pos:start="1:17" pos:end="1:32"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:27">CPUX86State</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">env</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="111:1">{<block_content pos:start="3:5" pos:end="110:61">
    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:10">X86CPU</name> <modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:15">cpu</name> <init pos:start="3:17" pos:end="3:38">= <expr pos:start="3:19" pos:end="3:38"><call pos:start="3:19" pos:end="3:38"><name pos:start="3:19" pos:end="3:33">x86_env_get_cpu</name><argument_list pos:start="3:34" pos:end="3:38">(<argument pos:start="3:35" pos:end="3:37"><expr pos:start="3:35" pos:end="3:37"><name pos:start="3:35" pos:end="3:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:27"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">CPUState</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:16">cs</name> <init pos:start="4:18" pos:end="4:27">= <expr pos:start="4:20" pos:end="4:27"><call pos:start="4:20" pos:end="4:27"><name pos:start="4:20" pos:end="4:22">CPU</name><argument_list pos:start="4:23" pos:end="4:27">(<argument pos:start="4:24" pos:end="4:26"><expr pos:start="4:24" pos:end="4:26"><name pos:start="4:24" pos:end="4:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:25">sm_state</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>, <decl pos:start="6:12" pos:end="6:17"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:12" pos:end="6:17">offset</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="10:0"><expr pos:start="8:5" pos:end="8:35"><name pos:start="8:5" pos:end="8:12">sm_state</name> <operator pos:start="8:14" pos:end="8:14">=</operator> <name pos:start="8:16" pos:end="8:26"><name pos:start="8:16" pos:end="8:18">env</name><operator pos:start="8:19" pos:end="8:20">-&gt;</operator><name pos:start="8:21" pos:end="8:26">smbase</name></name> <operator pos:start="8:28" pos:end="8:28">+</operator> <literal type="number" pos:start="8:30" pos:end="8:35">0x8000</literal></expr>;</expr_stmt>
<cpp:ifdef pos:start="9:1" pos:end="9:20">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:20">TARGET_X86_64</name></cpp:ifdef>
    <expr_stmt pos:start="10:5" pos:end="10:60"><expr pos:start="10:5" pos:end="10:59"><call pos:start="10:5" pos:end="10:59"><name pos:start="10:5" pos:end="10:17">cpu_load_efer</name><argument_list pos:start="10:18" pos:end="10:59">(<argument pos:start="10:19" pos:end="10:21"><expr pos:start="10:19" pos:end="10:21"><name pos:start="10:19" pos:end="10:21">env</name></expr></argument>, <argument pos:start="10:24" pos:end="10:58"><expr pos:start="10:24" pos:end="10:58"><call pos:start="10:24" pos:end="10:58"><name pos:start="10:24" pos:end="10:35">x86_ldq_phys</name><argument_list pos:start="10:36" pos:end="10:58">(<argument pos:start="10:37" pos:end="10:38"><expr pos:start="10:37" pos:end="10:38"><name pos:start="10:37" pos:end="10:38">cs</name></expr></argument>, <argument pos:start="10:41" pos:end="10:57"><expr pos:start="10:41" pos:end="10:57"><name pos:start="10:41" pos:end="10:48">sm_state</name> <operator pos:start="10:50" pos:end="10:50">+</operator> <literal type="number" pos:start="10:52" pos:end="10:57">0x7ed0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">gdt</name><operator pos:start="11:13" pos:end="11:13">.</operator><name pos:start="11:14" pos:end="11:17">base</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <call pos:start="11:21" pos:end="11:55"><name pos:start="11:21" pos:end="11:32">x86_ldq_phys</name><argument_list pos:start="11:33" pos:end="11:55">(<argument pos:start="11:34" pos:end="11:35"><expr pos:start="11:34" pos:end="11:35"><name pos:start="11:34" pos:end="11:35">cs</name></expr></argument>, <argument pos:start="11:38" pos:end="11:54"><expr pos:start="11:38" pos:end="11:54"><name pos:start="11:38" pos:end="11:45">sm_state</name> <operator pos:start="11:47" pos:end="11:47">+</operator> <literal type="number" pos:start="11:49" pos:end="11:54">0x7e68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:57"><expr pos:start="12:5" pos:end="12:56"><name pos:start="12:5" pos:end="12:18"><name pos:start="12:5" pos:end="12:7">env</name><operator pos:start="12:8" pos:end="12:9">-&gt;</operator><name pos:start="12:10" pos:end="12:12">gdt</name><operator pos:start="12:13" pos:end="12:13">.</operator><name pos:start="12:14" pos:end="12:18">limit</name></name> <operator pos:start="12:20" pos:end="12:20">=</operator> <call pos:start="12:22" pos:end="12:56"><name pos:start="12:22" pos:end="12:33">x86_ldl_phys</name><argument_list pos:start="12:34" pos:end="12:56">(<argument pos:start="12:35" pos:end="12:36"><expr pos:start="12:35" pos:end="12:36"><name pos:start="12:35" pos:end="12:36">cs</name></expr></argument>, <argument pos:start="12:39" pos:end="12:55"><expr pos:start="12:39" pos:end="12:55"><name pos:start="12:39" pos:end="12:46">sm_state</name> <operator pos:start="12:48" pos:end="12:48">+</operator> <literal type="number" pos:start="12:50" pos:end="12:55">0x7e64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">ldt</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:21">selector</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <call pos:start="13:25" pos:end="13:60"><name pos:start="13:25" pos:end="13:37">x86_lduw_phys</name><argument_list pos:start="13:38" pos:end="13:60">(<argument pos:start="13:39" pos:end="13:40"><expr pos:start="13:39" pos:end="13:40"><name pos:start="13:39" pos:end="13:40">cs</name></expr></argument>, <argument pos:start="13:43" pos:end="13:59"><expr pos:start="13:43" pos:end="13:59"><name pos:start="13:43" pos:end="13:50">sm_state</name> <operator pos:start="13:52" pos:end="13:52">+</operator> <literal type="number" pos:start="13:54" pos:end="13:59">0x7e70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:56"><expr pos:start="14:5" pos:end="14:55"><name pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:7">env</name><operator pos:start="14:8" pos:end="14:9">-&gt;</operator><name pos:start="14:10" pos:end="14:12">ldt</name><operator pos:start="14:13" pos:end="14:13">.</operator><name pos:start="14:14" pos:end="14:17">base</name></name> <operator pos:start="14:19" pos:end="14:19">=</operator> <call pos:start="14:21" pos:end="14:55"><name pos:start="14:21" pos:end="14:32">x86_ldq_phys</name><argument_list pos:start="14:33" pos:end="14:55">(<argument pos:start="14:34" pos:end="14:35"><expr pos:start="14:34" pos:end="14:35"><name pos:start="14:34" pos:end="14:35">cs</name></expr></argument>, <argument pos:start="14:38" pos:end="14:54"><expr pos:start="14:38" pos:end="14:54"><name pos:start="14:38" pos:end="14:45">sm_state</name> <operator pos:start="14:47" pos:end="14:47">+</operator> <literal type="number" pos:start="14:49" pos:end="14:54">0x7e78</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">ldt</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:18">limit</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:56"><name pos:start="15:22" pos:end="15:33">x86_ldl_phys</name><argument_list pos:start="15:34" pos:end="15:56">(<argument pos:start="15:35" pos:end="15:36"><expr pos:start="15:35" pos:end="15:36"><name pos:start="15:35" pos:end="15:36">cs</name></expr></argument>, <argument pos:start="15:39" pos:end="15:55"><expr pos:start="15:39" pos:end="15:55"><name pos:start="15:39" pos:end="15:46">sm_state</name> <operator pos:start="15:48" pos:end="15:48">+</operator> <literal type="number" pos:start="15:50" pos:end="15:55">0x7e74</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:74"><expr pos:start="16:5" pos:end="16:73"><name pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:7">env</name><operator pos:start="16:8" pos:end="16:9">-&gt;</operator><name pos:start="16:10" pos:end="16:12">ldt</name><operator pos:start="16:13" pos:end="16:13">.</operator><name pos:start="16:14" pos:end="16:18">flags</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <operator pos:start="16:22" pos:end="16:22">(</operator><call pos:start="16:23" pos:end="16:58"><name pos:start="16:23" pos:end="16:35">x86_lduw_phys</name><argument_list pos:start="16:36" pos:end="16:58">(<argument pos:start="16:37" pos:end="16:38"><expr pos:start="16:37" pos:end="16:38"><name pos:start="16:37" pos:end="16:38">cs</name></expr></argument>, <argument pos:start="16:41" pos:end="16:57"><expr pos:start="16:41" pos:end="16:57"><name pos:start="16:41" pos:end="16:48">sm_state</name> <operator pos:start="16:50" pos:end="16:50">+</operator> <literal type="number" pos:start="16:52" pos:end="16:57">0x7e72</literal></expr></argument>)</argument_list></call> <operator pos:start="16:60" pos:end="16:60">&amp;</operator> <literal type="number" pos:start="16:62" pos:end="16:67">0xf0ff</literal><operator pos:start="16:68" pos:end="16:68">)</operator> <operator pos:start="16:70" pos:end="16:71">&lt;&lt;</operator> <literal type="number" pos:start="16:73" pos:end="16:73">8</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">idt</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:17">base</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:55"><name pos:start="17:21" pos:end="17:32">x86_ldq_phys</name><argument_list pos:start="17:33" pos:end="17:55">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">cs</name></expr></argument>, <argument pos:start="17:38" pos:end="17:54"><expr pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:45">sm_state</name> <operator pos:start="17:47" pos:end="17:47">+</operator> <literal type="number" pos:start="17:49" pos:end="17:54">0x7e88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:57"><expr pos:start="18:5" pos:end="18:56"><name pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:7">env</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:12">idt</name><operator pos:start="18:13" pos:end="18:13">.</operator><name pos:start="18:14" pos:end="18:18">limit</name></name> <operator pos:start="18:20" pos:end="18:20">=</operator> <call pos:start="18:22" pos:end="18:56"><name pos:start="18:22" pos:end="18:33">x86_ldl_phys</name><argument_list pos:start="18:34" pos:end="18:56">(<argument pos:start="18:35" pos:end="18:36"><expr pos:start="18:35" pos:end="18:36"><name pos:start="18:35" pos:end="18:36">cs</name></expr></argument>, <argument pos:start="18:39" pos:end="18:55"><expr pos:start="18:39" pos:end="18:55"><name pos:start="18:39" pos:end="18:46">sm_state</name> <operator pos:start="18:48" pos:end="18:48">+</operator> <literal type="number" pos:start="18:50" pos:end="18:55">0x7e84</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:11">tr</name><operator pos:start="19:12" pos:end="19:12">.</operator><name pos:start="19:13" pos:end="19:20">selector</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <call pos:start="19:24" pos:end="19:59"><name pos:start="19:24" pos:end="19:36">x86_lduw_phys</name><argument_list pos:start="19:37" pos:end="19:59">(<argument pos:start="19:38" pos:end="19:39"><expr pos:start="19:38" pos:end="19:39"><name pos:start="19:38" pos:end="19:39">cs</name></expr></argument>, <argument pos:start="19:42" pos:end="19:58"><expr pos:start="19:42" pos:end="19:58"><name pos:start="19:42" pos:end="19:49">sm_state</name> <operator pos:start="19:51" pos:end="19:51">+</operator> <literal type="number" pos:start="19:53" pos:end="19:58">0x7e90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:55"><expr pos:start="20:5" pos:end="20:54"><name pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:7">env</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:11">tr</name><operator pos:start="20:12" pos:end="20:12">.</operator><name pos:start="20:13" pos:end="20:16">base</name></name> <operator pos:start="20:18" pos:end="20:18">=</operator> <call pos:start="20:20" pos:end="20:54"><name pos:start="20:20" pos:end="20:31">x86_ldq_phys</name><argument_list pos:start="20:32" pos:end="20:54">(<argument pos:start="20:33" pos:end="20:34"><expr pos:start="20:33" pos:end="20:34"><name pos:start="20:33" pos:end="20:34">cs</name></expr></argument>, <argument pos:start="20:37" pos:end="20:53"><expr pos:start="20:37" pos:end="20:53"><name pos:start="20:37" pos:end="20:44">sm_state</name> <operator pos:start="20:46" pos:end="20:46">+</operator> <literal type="number" pos:start="20:48" pos:end="20:53">0x7e98</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:7">env</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:11">tr</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:17">limit</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:55"><name pos:start="21:21" pos:end="21:32">x86_ldl_phys</name><argument_list pos:start="21:33" pos:end="21:55">(<argument pos:start="21:34" pos:end="21:35"><expr pos:start="21:34" pos:end="21:35"><name pos:start="21:34" pos:end="21:35">cs</name></expr></argument>, <argument pos:start="21:38" pos:end="21:54"><expr pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:45">sm_state</name> <operator pos:start="21:47" pos:end="21:47">+</operator> <literal type="number" pos:start="21:49" pos:end="21:54">0x7e94</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:73"><expr pos:start="22:5" pos:end="22:72"><name pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:7">env</name><operator pos:start="22:8" pos:end="22:9">-&gt;</operator><name pos:start="22:10" pos:end="22:11">tr</name><operator pos:start="22:12" pos:end="22:12">.</operator><name pos:start="22:13" pos:end="22:17">flags</name></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <operator pos:start="22:21" pos:end="22:21">(</operator><call pos:start="22:22" pos:end="22:57"><name pos:start="22:22" pos:end="22:34">x86_lduw_phys</name><argument_list pos:start="22:35" pos:end="22:57">(<argument pos:start="22:36" pos:end="22:37"><expr pos:start="22:36" pos:end="22:37"><name pos:start="22:36" pos:end="22:37">cs</name></expr></argument>, <argument pos:start="22:40" pos:end="22:56"><expr pos:start="22:40" pos:end="22:56"><name pos:start="22:40" pos:end="22:47">sm_state</name> <operator pos:start="22:49" pos:end="22:49">+</operator> <literal type="number" pos:start="22:51" pos:end="22:56">0x7e92</literal></expr></argument>)</argument_list></call> <operator pos:start="22:59" pos:end="22:59">&amp;</operator> <literal type="number" pos:start="22:61" pos:end="22:66">0xf0ff</literal><operator pos:start="22:67" pos:end="22:67">)</operator> <operator pos:start="22:69" pos:end="22:70">&lt;&lt;</operator> <literal type="number" pos:start="22:72" pos:end="22:72">8</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:59"><expr pos:start="23:5" pos:end="23:58"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">regs</name><index pos:start="23:14" pos:end="23:20">[<expr pos:start="23:15" pos:end="23:19"><name pos:start="23:15" pos:end="23:19">R_EAX</name></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:58"><name pos:start="23:24" pos:end="23:35">x86_ldq_phys</name><argument_list pos:start="23:36" pos:end="23:58">(<argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><name pos:start="23:37" pos:end="23:38">cs</name></expr></argument>, <argument pos:start="23:41" pos:end="23:57"><expr pos:start="23:41" pos:end="23:57"><name pos:start="23:41" pos:end="23:48">sm_state</name> <operator pos:start="23:50" pos:end="23:50">+</operator> <literal type="number" pos:start="23:52" pos:end="23:57">0x7ff8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:59"><expr pos:start="24:5" pos:end="24:58"><name pos:start="24:5" pos:end="24:20"><name pos:start="24:5" pos:end="24:7">env</name><operator pos:start="24:8" pos:end="24:9">-&gt;</operator><name pos:start="24:10" pos:end="24:13">regs</name><index pos:start="24:14" pos:end="24:20">[<expr pos:start="24:15" pos:end="24:19"><name pos:start="24:15" pos:end="24:19">R_ECX</name></expr>]</index></name> <operator pos:start="24:22" pos:end="24:22">=</operator> <call pos:start="24:24" pos:end="24:58"><name pos:start="24:24" pos:end="24:35">x86_ldq_phys</name><argument_list pos:start="24:36" pos:end="24:58">(<argument pos:start="24:37" pos:end="24:38"><expr pos:start="24:37" pos:end="24:38"><name pos:start="24:37" pos:end="24:38">cs</name></expr></argument>, <argument pos:start="24:41" pos:end="24:57"><expr pos:start="24:41" pos:end="24:57"><name pos:start="24:41" pos:end="24:48">sm_state</name> <operator pos:start="24:50" pos:end="24:50">+</operator> <literal type="number" pos:start="24:52" pos:end="24:57">0x7ff0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">regs</name><index pos:start="25:14" pos:end="25:20">[<expr pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:19">R_EDX</name></expr>]</index></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:58"><name pos:start="25:24" pos:end="25:35">x86_ldq_phys</name><argument_list pos:start="25:36" pos:end="25:58">(<argument pos:start="25:37" pos:end="25:38"><expr pos:start="25:37" pos:end="25:38"><name pos:start="25:37" pos:end="25:38">cs</name></expr></argument>, <argument pos:start="25:41" pos:end="25:57"><expr pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:48">sm_state</name> <operator pos:start="25:50" pos:end="25:50">+</operator> <literal type="number" pos:start="25:52" pos:end="25:57">0x7fe8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:59"><expr pos:start="26:5" pos:end="26:58"><name pos:start="26:5" pos:end="26:20"><name pos:start="26:5" pos:end="26:7">env</name><operator pos:start="26:8" pos:end="26:9">-&gt;</operator><name pos:start="26:10" pos:end="26:13">regs</name><index pos:start="26:14" pos:end="26:20">[<expr pos:start="26:15" pos:end="26:19"><name pos:start="26:15" pos:end="26:19">R_EBX</name></expr>]</index></name> <operator pos:start="26:22" pos:end="26:22">=</operator> <call pos:start="26:24" pos:end="26:58"><name pos:start="26:24" pos:end="26:35">x86_ldq_phys</name><argument_list pos:start="26:36" pos:end="26:58">(<argument pos:start="26:37" pos:end="26:38"><expr pos:start="26:37" pos:end="26:38"><name pos:start="26:37" pos:end="26:38">cs</name></expr></argument>, <argument pos:start="26:41" pos:end="26:57"><expr pos:start="26:41" pos:end="26:57"><name pos:start="26:41" pos:end="26:48">sm_state</name> <operator pos:start="26:50" pos:end="26:50">+</operator> <literal type="number" pos:start="26:52" pos:end="26:57">0x7fe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">regs</name><index pos:start="27:14" pos:end="27:20">[<expr pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:19">R_ESP</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:58"><name pos:start="27:24" pos:end="27:35">x86_ldq_phys</name><argument_list pos:start="27:36" pos:end="27:58">(<argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><name pos:start="27:37" pos:end="27:38">cs</name></expr></argument>, <argument pos:start="27:41" pos:end="27:57"><expr pos:start="27:41" pos:end="27:57"><name pos:start="27:41" pos:end="27:48">sm_state</name> <operator pos:start="27:50" pos:end="27:50">+</operator> <literal type="number" pos:start="27:52" pos:end="27:57">0x7fd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:59"><expr pos:start="28:5" pos:end="28:58"><name pos:start="28:5" pos:end="28:20"><name pos:start="28:5" pos:end="28:7">env</name><operator pos:start="28:8" pos:end="28:9">-&gt;</operator><name pos:start="28:10" pos:end="28:13">regs</name><index pos:start="28:14" pos:end="28:20">[<expr pos:start="28:15" pos:end="28:19"><name pos:start="28:15" pos:end="28:19">R_EBP</name></expr>]</index></name> <operator pos:start="28:22" pos:end="28:22">=</operator> <call pos:start="28:24" pos:end="28:58"><name pos:start="28:24" pos:end="28:35">x86_ldq_phys</name><argument_list pos:start="28:36" pos:end="28:58">(<argument pos:start="28:37" pos:end="28:38"><expr pos:start="28:37" pos:end="28:38"><name pos:start="28:37" pos:end="28:38">cs</name></expr></argument>, <argument pos:start="28:41" pos:end="28:57"><expr pos:start="28:41" pos:end="28:57"><name pos:start="28:41" pos:end="28:48">sm_state</name> <operator pos:start="28:50" pos:end="28:50">+</operator> <literal type="number" pos:start="28:52" pos:end="28:57">0x7fd0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">regs</name><index pos:start="29:14" pos:end="29:20">[<expr pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:19">R_ESI</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:58"><name pos:start="29:24" pos:end="29:35">x86_ldq_phys</name><argument_list pos:start="29:36" pos:end="29:58">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">cs</name></expr></argument>, <argument pos:start="29:41" pos:end="29:57"><expr pos:start="29:41" pos:end="29:57"><name pos:start="29:41" pos:end="29:48">sm_state</name> <operator pos:start="29:50" pos:end="29:50">+</operator> <literal type="number" pos:start="29:52" pos:end="29:57">0x7fc8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:59"><expr pos:start="30:5" pos:end="30:58"><name pos:start="30:5" pos:end="30:20"><name pos:start="30:5" pos:end="30:7">env</name><operator pos:start="30:8" pos:end="30:9">-&gt;</operator><name pos:start="30:10" pos:end="30:13">regs</name><index pos:start="30:14" pos:end="30:20">[<expr pos:start="30:15" pos:end="30:19"><name pos:start="30:15" pos:end="30:19">R_EDI</name></expr>]</index></name> <operator pos:start="30:22" pos:end="30:22">=</operator> <call pos:start="30:24" pos:end="30:58"><name pos:start="30:24" pos:end="30:35">x86_ldq_phys</name><argument_list pos:start="30:36" pos:end="30:58">(<argument pos:start="30:37" pos:end="30:38"><expr pos:start="30:37" pos:end="30:38"><name pos:start="30:37" pos:end="30:38">cs</name></expr></argument>, <argument pos:start="30:41" pos:end="30:57"><expr pos:start="30:41" pos:end="30:57"><name pos:start="30:41" pos:end="30:48">sm_state</name> <operator pos:start="30:50" pos:end="30:50">+</operator> <literal type="number" pos:start="30:52" pos:end="30:57">0x7fc0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="31:5" pos:end="33:5">for <control pos:start="31:9" pos:end="31:28">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">8</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:22">16</literal></expr>;</condition> <incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control> <block pos:start="31:30" pos:end="33:5">{<block_content pos:start="32:9" pos:end="32:67">
        <expr_stmt pos:start="32:9" pos:end="32:67"><expr pos:start="32:9" pos:end="32:66"><name pos:start="32:9" pos:end="32:20"><name pos:start="32:9" pos:end="32:11">env</name><operator pos:start="32:12" pos:end="32:13">-&gt;</operator><name pos:start="32:14" pos:end="32:17">regs</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><name pos:start="32:19" pos:end="32:19">i</name></expr>]</index></name> <operator pos:start="32:22" pos:end="32:22">=</operator> <call pos:start="32:24" pos:end="32:66"><name pos:start="32:24" pos:end="32:35">x86_ldq_phys</name><argument_list pos:start="32:36" pos:end="32:66">(<argument pos:start="32:37" pos:end="32:38"><expr pos:start="32:37" pos:end="32:38"><name pos:start="32:37" pos:end="32:38">cs</name></expr></argument>, <argument pos:start="32:41" pos:end="32:65"><expr pos:start="32:41" pos:end="32:65"><name pos:start="32:41" pos:end="32:48">sm_state</name> <operator pos:start="32:50" pos:end="32:50">+</operator> <literal type="number" pos:start="32:52" pos:end="32:59">0x7ff8</literal> <operator pos:start="32:59" pos:end="32:59">-</operator> <name pos:start="32:61" pos:end="32:61">i</name> <operator pos:start="32:63" pos:end="32:63">*</operator> <literal type="number" pos:start="32:65" pos:end="32:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="34:5" pos:end="34:51"><expr pos:start="34:5" pos:end="34:50"><name pos:start="34:5" pos:end="34:12"><name pos:start="34:5" pos:end="34:7">env</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:12">eip</name></name> <operator pos:start="34:14" pos:end="34:14">=</operator> <call pos:start="34:16" pos:end="34:50"><name pos:start="34:16" pos:end="34:27">x86_ldq_phys</name><argument_list pos:start="34:28" pos:end="34:50">(<argument pos:start="34:29" pos:end="34:30"><expr pos:start="34:29" pos:end="34:30"><name pos:start="34:29" pos:end="34:30">cs</name></expr></argument>, <argument pos:start="34:33" pos:end="34:49"><expr pos:start="34:33" pos:end="34:49"><name pos:start="34:33" pos:end="34:40">sm_state</name> <operator pos:start="34:42" pos:end="34:42">+</operator> <literal type="number" pos:start="34:44" pos:end="34:49">0x7f78</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="36:74"><expr pos:start="35:5" pos:end="36:73"><call pos:start="35:5" pos:end="36:73"><name pos:start="35:5" pos:end="35:19">cpu_load_eflags</name><argument_list pos:start="35:20" pos:end="36:73">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">env</name></expr></argument>, <argument pos:start="35:26" pos:end="35:60"><expr pos:start="35:26" pos:end="35:60"><call pos:start="35:26" pos:end="35:60"><name pos:start="35:26" pos:end="35:37">x86_ldl_phys</name><argument_list pos:start="35:38" pos:end="35:60">(<argument pos:start="35:39" pos:end="35:40"><expr pos:start="35:39" pos:end="35:40"><name pos:start="35:39" pos:end="35:40">cs</name></expr></argument>, <argument pos:start="35:43" pos:end="35:59"><expr pos:start="35:43" pos:end="35:59"><name pos:start="35:43" pos:end="35:50">sm_state</name> <operator pos:start="35:52" pos:end="35:52">+</operator> <literal type="number" pos:start="35:54" pos:end="35:59">0x7f70</literal></expr></argument>)</argument_list></call></expr></argument>,
                    <argument pos:start="36:21" pos:end="36:72"><expr pos:start="36:21" pos:end="36:72"><operator pos:start="36:21" pos:end="36:21">~</operator><operator pos:start="36:22" pos:end="36:22">(</operator><name pos:start="36:23" pos:end="36:26">CC_O</name> <operator pos:start="36:28" pos:end="36:28">|</operator> <name pos:start="36:30" pos:end="36:33">CC_S</name> <operator pos:start="36:35" pos:end="36:35">|</operator> <name pos:start="36:37" pos:end="36:40">CC_Z</name> <operator pos:start="36:42" pos:end="36:42">|</operator> <name pos:start="36:44" pos:end="36:47">CC_A</name> <operator pos:start="36:49" pos:end="36:49">|</operator> <name pos:start="36:51" pos:end="36:54">CC_P</name> <operator pos:start="36:56" pos:end="36:56">|</operator> <name pos:start="36:58" pos:end="36:61">CC_C</name> <operator pos:start="36:63" pos:end="36:63">|</operator> <name pos:start="36:65" pos:end="36:71">DF_MASK</name><operator pos:start="36:72" pos:end="36:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:11">dr</name><index pos:start="37:12" pos:end="37:14">[<expr pos:start="37:13" pos:end="37:13"><literal type="number" pos:start="37:13" pos:end="37:13">6</literal></expr>]</index></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:52"><name pos:start="37:18" pos:end="37:29">x86_ldl_phys</name><argument_list pos:start="37:30" pos:end="37:52">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><name pos:start="37:31" pos:end="37:32">cs</name></expr></argument>, <argument pos:start="37:35" pos:end="37:51"><expr pos:start="37:35" pos:end="37:51"><name pos:start="37:35" pos:end="37:42">sm_state</name> <operator pos:start="37:44" pos:end="37:44">+</operator> <literal type="number" pos:start="37:46" pos:end="37:51">0x7f68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:53"><expr pos:start="38:5" pos:end="38:52"><name pos:start="38:5" pos:end="38:14"><name pos:start="38:5" pos:end="38:7">env</name><operator pos:start="38:8" pos:end="38:9">-&gt;</operator><name pos:start="38:10" pos:end="38:11">dr</name><index pos:start="38:12" pos:end="38:14">[<expr pos:start="38:13" pos:end="38:13"><literal type="number" pos:start="38:13" pos:end="38:13">7</literal></expr>]</index></name> <operator pos:start="38:16" pos:end="38:16">=</operator> <call pos:start="38:18" pos:end="38:52"><name pos:start="38:18" pos:end="38:29">x86_ldl_phys</name><argument_list pos:start="38:30" pos:end="38:52">(<argument pos:start="38:31" pos:end="38:32"><expr pos:start="38:31" pos:end="38:32"><name pos:start="38:31" pos:end="38:32">cs</name></expr></argument>, <argument pos:start="38:35" pos:end="38:51"><expr pos:start="38:35" pos:end="38:51"><name pos:start="38:35" pos:end="38:42">sm_state</name> <operator pos:start="38:44" pos:end="38:44">+</operator> <literal type="number" pos:start="38:46" pos:end="38:51">0x7f60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:65"><expr pos:start="39:5" pos:end="39:64"><call pos:start="39:5" pos:end="39:64"><name pos:start="39:5" pos:end="39:22">cpu_x86_update_cr4</name><argument_list pos:start="39:23" pos:end="39:64">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">env</name></expr></argument>, <argument pos:start="39:29" pos:end="39:63"><expr pos:start="39:29" pos:end="39:63"><call pos:start="39:29" pos:end="39:63"><name pos:start="39:29" pos:end="39:40">x86_ldl_phys</name><argument_list pos:start="39:41" pos:end="39:63">(<argument pos:start="39:42" pos:end="39:43"><expr pos:start="39:42" pos:end="39:43"><name pos:start="39:42" pos:end="39:43">cs</name></expr></argument>, <argument pos:start="39:46" pos:end="39:62"><expr pos:start="39:46" pos:end="39:62"><name pos:start="39:46" pos:end="39:53">sm_state</name> <operator pos:start="39:55" pos:end="39:55">+</operator> <literal type="number" pos:start="39:57" pos:end="39:62">0x7f48</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:65"><expr pos:start="40:5" pos:end="40:64"><call pos:start="40:5" pos:end="40:64"><name pos:start="40:5" pos:end="40:22">cpu_x86_update_cr3</name><argument_list pos:start="40:23" pos:end="40:64">(<argument pos:start="40:24" pos:end="40:26"><expr pos:start="40:24" pos:end="40:26"><name pos:start="40:24" pos:end="40:26">env</name></expr></argument>, <argument pos:start="40:29" pos:end="40:63"><expr pos:start="40:29" pos:end="40:63"><call pos:start="40:29" pos:end="40:63"><name pos:start="40:29" pos:end="40:40">x86_ldq_phys</name><argument_list pos:start="40:41" pos:end="40:63">(<argument pos:start="40:42" pos:end="40:43"><expr pos:start="40:42" pos:end="40:43"><name pos:start="40:42" pos:end="40:43">cs</name></expr></argument>, <argument pos:start="40:46" pos:end="40:62"><expr pos:start="40:46" pos:end="40:62"><name pos:start="40:46" pos:end="40:53">sm_state</name> <operator pos:start="40:55" pos:end="40:55">+</operator> <literal type="number" pos:start="40:57" pos:end="40:62">0x7f50</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><call pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:22">cpu_x86_update_cr0</name><argument_list pos:start="41:23" pos:end="41:64">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">env</name></expr></argument>, <argument pos:start="41:29" pos:end="41:63"><expr pos:start="41:29" pos:end="41:63"><call pos:start="41:29" pos:end="41:63"><name pos:start="41:29" pos:end="41:40">x86_ldl_phys</name><argument_list pos:start="41:41" pos:end="41:63">(<argument pos:start="41:42" pos:end="41:43"><expr pos:start="41:42" pos:end="41:43"><name pos:start="41:42" pos:end="41:43">cs</name></expr></argument>, <argument pos:start="41:46" pos:end="41:62"><expr pos:start="41:46" pos:end="41:62"><name pos:start="41:46" pos:end="41:53">sm_state</name> <operator pos:start="41:55" pos:end="41:55">+</operator> <literal type="number" pos:start="41:57" pos:end="41:62">0x7f58</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="42:5" pos:end="50:5">for <control pos:start="42:9" pos:end="42:27">(<init pos:start="42:10" pos:end="42:15"><expr pos:start="42:10" pos:end="42:14"><name pos:start="42:10" pos:end="42:10">i</name> <operator pos:start="42:12" pos:end="42:12">=</operator> <literal type="number" pos:start="42:14" pos:end="42:14">0</literal></expr>;</init> <condition pos:start="42:17" pos:end="42:22"><expr pos:start="42:17" pos:end="42:21"><name pos:start="42:17" pos:end="42:17">i</name> <operator pos:start="42:19" pos:end="42:19">&lt;</operator> <literal type="number" pos:start="42:21" pos:end="42:21">6</literal></expr>;</condition> <incr pos:start="42:24" pos:end="42:26"><expr pos:start="42:24" pos:end="42:26"><name pos:start="42:24" pos:end="42:24">i</name><operator pos:start="42:25" pos:end="42:26">++</operator></expr></incr>)</control> <block pos:start="42:29" pos:end="50:5">{<block_content pos:start="43:9" pos:end="49:46">
        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:14">offset</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:25">0x7e00</literal> <operator pos:start="43:25" pos:end="43:25">+</operator> <name pos:start="43:27" pos:end="43:27">i</name> <operator pos:start="43:29" pos:end="43:29">*</operator> <literal type="number" pos:start="43:31" pos:end="43:32">16</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="49:46"><expr pos:start="44:9" pos:end="49:45"><call pos:start="44:9" pos:end="49:45"><name pos:start="44:9" pos:end="44:30">cpu_x86_load_seg_cache</name><argument_list pos:start="44:31" pos:end="49:45">(<argument pos:start="44:32" pos:end="44:34"><expr pos:start="44:32" pos:end="44:34"><name pos:start="44:32" pos:end="44:34">env</name></expr></argument>, <argument pos:start="44:37" pos:end="44:37"><expr pos:start="44:37" pos:end="44:37"><name pos:start="44:37" pos:end="44:37">i</name></expr></argument>,
                               <argument pos:start="45:32" pos:end="45:67"><expr pos:start="45:32" pos:end="45:67"><call pos:start="45:32" pos:end="45:67"><name pos:start="45:32" pos:end="45:44">x86_lduw_phys</name><argument_list pos:start="45:45" pos:end="45:67">(<argument pos:start="45:46" pos:end="45:47"><expr pos:start="45:46" pos:end="45:47"><name pos:start="45:46" pos:end="45:47">cs</name></expr></argument>, <argument pos:start="45:50" pos:end="45:66"><expr pos:start="45:50" pos:end="45:66"><name pos:start="45:50" pos:end="45:57">sm_state</name> <operator pos:start="45:59" pos:end="45:59">+</operator> <name pos:start="45:61" pos:end="45:66">offset</name></expr></argument>)</argument_list></call></expr></argument>,
                               <argument pos:start="46:32" pos:end="46:70"><expr pos:start="46:32" pos:end="46:70"><call pos:start="46:32" pos:end="46:70"><name pos:start="46:32" pos:end="46:43">x86_ldq_phys</name><argument_list pos:start="46:44" pos:end="46:70">(<argument pos:start="46:45" pos:end="46:46"><expr pos:start="46:45" pos:end="46:46"><name pos:start="46:45" pos:end="46:46">cs</name></expr></argument>, <argument pos:start="46:49" pos:end="46:69"><expr pos:start="46:49" pos:end="46:69"><name pos:start="46:49" pos:end="46:56">sm_state</name> <operator pos:start="46:58" pos:end="46:58">+</operator> <name pos:start="46:60" pos:end="46:65">offset</name> <operator pos:start="46:67" pos:end="46:67">+</operator> <literal type="number" pos:start="46:69" pos:end="46:69">8</literal></expr></argument>)</argument_list></call></expr></argument>,
                               <argument pos:start="47:32" pos:end="47:70"><expr pos:start="47:32" pos:end="47:70"><call pos:start="47:32" pos:end="47:70"><name pos:start="47:32" pos:end="47:43">x86_ldl_phys</name><argument_list pos:start="47:44" pos:end="47:70">(<argument pos:start="47:45" pos:end="47:46"><expr pos:start="47:45" pos:end="47:46"><name pos:start="47:45" pos:end="47:46">cs</name></expr></argument>, <argument pos:start="47:49" pos:end="47:69"><expr pos:start="47:49" pos:end="47:69"><name pos:start="47:49" pos:end="47:56">sm_state</name> <operator pos:start="47:58" pos:end="47:58">+</operator> <name pos:start="47:60" pos:end="47:65">offset</name> <operator pos:start="47:67" pos:end="47:67">+</operator> <literal type="number" pos:start="47:69" pos:end="47:69">4</literal></expr></argument>)</argument_list></call></expr></argument>,
                               <argument pos:start="48:32" pos:end="49:44"><expr pos:start="48:32" pos:end="49:44"><operator pos:start="48:32" pos:end="48:32">(</operator><call pos:start="48:33" pos:end="48:72"><name pos:start="48:33" pos:end="48:45">x86_lduw_phys</name><argument_list pos:start="48:46" pos:end="48:72">(<argument pos:start="48:47" pos:end="48:48"><expr pos:start="48:47" pos:end="48:48"><name pos:start="48:47" pos:end="48:48">cs</name></expr></argument>, <argument pos:start="48:51" pos:end="48:71"><expr pos:start="48:51" pos:end="48:71"><name pos:start="48:51" pos:end="48:58">sm_state</name> <operator pos:start="48:60" pos:end="48:60">+</operator> <name pos:start="48:62" pos:end="48:67">offset</name> <operator pos:start="48:69" pos:end="48:69">+</operator> <literal type="number" pos:start="48:71" pos:end="48:71">2</literal></expr></argument>)</argument_list></call> <operator pos:start="48:74" pos:end="48:74">&amp;</operator>
                                <literal type="number" pos:start="49:33" pos:end="49:38">0xf0ff</literal><operator pos:start="49:39" pos:end="49:39">)</operator> <operator pos:start="49:41" pos:end="49:42">&lt;&lt;</operator> <literal type="number" pos:start="49:44" pos:end="49:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:7">val</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:45"><name pos:start="51:11" pos:end="51:22">x86_ldl_phys</name><argument_list pos:start="51:23" pos:end="51:45">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">cs</name></expr></argument>, <argument pos:start="51:28" pos:end="51:44"><expr pos:start="51:28" pos:end="51:44"><name pos:start="51:28" pos:end="51:35">sm_state</name> <operator pos:start="51:37" pos:end="51:37">+</operator> <literal type="number" pos:start="51:39" pos:end="51:44">0x7efc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:48" pos:end="51:64">/* revision ID */</comment>
    <if_stmt pos:start="52:5" pos:end="56:0"><if pos:start="52:5" pos:end="56:0">if <condition pos:start="52:8" pos:end="52:22">(<expr pos:start="52:9" pos:end="52:21"><name pos:start="52:9" pos:end="52:11">val</name> <operator pos:start="52:13" pos:end="52:13">&amp;</operator> <literal type="number" pos:start="52:15" pos:end="52:21">0x20000</literal></expr>)</condition> <block pos:start="52:24" pos:end="56:0">{<block_content pos:start="53:9" pos:end="53:58">
        <expr_stmt pos:start="53:9" pos:end="53:58"><expr pos:start="53:9" pos:end="53:57"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">env</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">smbase</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:57"><name pos:start="53:23" pos:end="53:34">x86_ldl_phys</name><argument_list pos:start="53:35" pos:end="53:57">(<argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">cs</name></expr></argument>, <argument pos:start="53:40" pos:end="53:56"><expr pos:start="53:40" pos:end="53:56"><name pos:start="53:40" pos:end="53:47">sm_state</name> <operator pos:start="53:49" pos:end="53:49">+</operator> <literal type="number" pos:start="53:51" pos:end="53:56">0x7f00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:else pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:5">else</cpp:directive></cpp:else>
    <expr_stmt pos:start="56:5" pos:end="56:65"><expr pos:start="56:5" pos:end="56:64"><call pos:start="56:5" pos:end="56:64"><name pos:start="56:5" pos:end="56:22">cpu_x86_update_cr0</name><argument_list pos:start="56:23" pos:end="56:64">(<argument pos:start="56:24" pos:end="56:26"><expr pos:start="56:24" pos:end="56:26"><name pos:start="56:24" pos:end="56:26">env</name></expr></argument>, <argument pos:start="56:29" pos:end="56:63"><expr pos:start="56:29" pos:end="56:63"><call pos:start="56:29" pos:end="56:63"><name pos:start="56:29" pos:end="56:40">x86_ldl_phys</name><argument_list pos:start="56:41" pos:end="56:63">(<argument pos:start="56:42" pos:end="56:43"><expr pos:start="56:42" pos:end="56:43"><name pos:start="56:42" pos:end="56:43">cs</name></expr></argument>, <argument pos:start="56:46" pos:end="56:62"><expr pos:start="56:46" pos:end="56:62"><name pos:start="56:46" pos:end="56:53">sm_state</name> <operator pos:start="56:55" pos:end="56:55">+</operator> <literal type="number" pos:start="56:57" pos:end="56:62">0x7ffc</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="57:5" pos:end="57:65"><expr pos:start="57:5" pos:end="57:64"><call pos:start="57:5" pos:end="57:64"><name pos:start="57:5" pos:end="57:22">cpu_x86_update_cr3</name><argument_list pos:start="57:23" pos:end="57:64">(<argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">env</name></expr></argument>, <argument pos:start="57:29" pos:end="57:63"><expr pos:start="57:29" pos:end="57:63"><call pos:start="57:29" pos:end="57:63"><name pos:start="57:29" pos:end="57:40">x86_ldl_phys</name><argument_list pos:start="57:41" pos:end="57:63">(<argument pos:start="57:42" pos:end="57:43"><expr pos:start="57:42" pos:end="57:43"><name pos:start="57:42" pos:end="57:43">cs</name></expr></argument>, <argument pos:start="57:46" pos:end="57:62"><expr pos:start="57:46" pos:end="57:62"><name pos:start="57:46" pos:end="57:53">sm_state</name> <operator pos:start="57:55" pos:end="57:55">+</operator> <literal type="number" pos:start="57:57" pos:end="57:62">0x7ff8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="59:74"><expr pos:start="58:5" pos:end="59:73"><call pos:start="58:5" pos:end="59:73"><name pos:start="58:5" pos:end="58:19">cpu_load_eflags</name><argument_list pos:start="58:20" pos:end="59:73">(<argument pos:start="58:21" pos:end="58:23"><expr pos:start="58:21" pos:end="58:23"><name pos:start="58:21" pos:end="58:23">env</name></expr></argument>, <argument pos:start="58:26" pos:end="58:60"><expr pos:start="58:26" pos:end="58:60"><call pos:start="58:26" pos:end="58:60"><name pos:start="58:26" pos:end="58:37">x86_ldl_phys</name><argument_list pos:start="58:38" pos:end="58:60">(<argument pos:start="58:39" pos:end="58:40"><expr pos:start="58:39" pos:end="58:40"><name pos:start="58:39" pos:end="58:40">cs</name></expr></argument>, <argument pos:start="58:43" pos:end="58:59"><expr pos:start="58:43" pos:end="58:59"><name pos:start="58:43" pos:end="58:50">sm_state</name> <operator pos:start="58:52" pos:end="58:52">+</operator> <literal type="number" pos:start="58:54" pos:end="58:59">0x7ff4</literal></expr></argument>)</argument_list></call></expr></argument>,
                    <argument pos:start="59:21" pos:end="59:72"><expr pos:start="59:21" pos:end="59:72"><operator pos:start="59:21" pos:end="59:21">~</operator><operator pos:start="59:22" pos:end="59:22">(</operator><name pos:start="59:23" pos:end="59:26">CC_O</name> <operator pos:start="59:28" pos:end="59:28">|</operator> <name pos:start="59:30" pos:end="59:33">CC_S</name> <operator pos:start="59:35" pos:end="59:35">|</operator> <name pos:start="59:37" pos:end="59:40">CC_Z</name> <operator pos:start="59:42" pos:end="59:42">|</operator> <name pos:start="59:44" pos:end="59:47">CC_A</name> <operator pos:start="59:49" pos:end="59:49">|</operator> <name pos:start="59:51" pos:end="59:54">CC_P</name> <operator pos:start="59:56" pos:end="59:56">|</operator> <name pos:start="59:58" pos:end="59:61">CC_C</name> <operator pos:start="59:63" pos:end="59:63">|</operator> <name pos:start="59:65" pos:end="59:71">DF_MASK</name><operator pos:start="59:72" pos:end="59:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:51"><expr pos:start="60:5" pos:end="60:50"><name pos:start="60:5" pos:end="60:12"><name pos:start="60:5" pos:end="60:7">env</name><operator pos:start="60:8" pos:end="60:9">-&gt;</operator><name pos:start="60:10" pos:end="60:12">eip</name></name> <operator pos:start="60:14" pos:end="60:14">=</operator> <call pos:start="60:16" pos:end="60:50"><name pos:start="60:16" pos:end="60:27">x86_ldl_phys</name><argument_list pos:start="60:28" pos:end="60:50">(<argument pos:start="60:29" pos:end="60:30"><expr pos:start="60:29" pos:end="60:30"><name pos:start="60:29" pos:end="60:30">cs</name></expr></argument>, <argument pos:start="60:33" pos:end="60:49"><expr pos:start="60:33" pos:end="60:49"><name pos:start="60:33" pos:end="60:40">sm_state</name> <operator pos:start="60:42" pos:end="60:42">+</operator> <literal type="number" pos:start="60:44" pos:end="60:49">0x7ff0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">env</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:13">regs</name><index pos:start="61:14" pos:end="61:20">[<expr pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:19">R_EDI</name></expr>]</index></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:58"><name pos:start="61:24" pos:end="61:35">x86_ldl_phys</name><argument_list pos:start="61:36" pos:end="61:58">(<argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><name pos:start="61:37" pos:end="61:38">cs</name></expr></argument>, <argument pos:start="61:41" pos:end="61:57"><expr pos:start="61:41" pos:end="61:57"><name pos:start="61:41" pos:end="61:48">sm_state</name> <operator pos:start="61:50" pos:end="61:50">+</operator> <literal type="number" pos:start="61:52" pos:end="61:57">0x7fec</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="62:5" pos:end="62:59"><expr pos:start="62:5" pos:end="62:58"><name pos:start="62:5" pos:end="62:20"><name pos:start="62:5" pos:end="62:7">env</name><operator pos:start="62:8" pos:end="62:9">-&gt;</operator><name pos:start="62:10" pos:end="62:13">regs</name><index pos:start="62:14" pos:end="62:20">[<expr pos:start="62:15" pos:end="62:19"><name pos:start="62:15" pos:end="62:19">R_ESI</name></expr>]</index></name> <operator pos:start="62:22" pos:end="62:22">=</operator> <call pos:start="62:24" pos:end="62:58"><name pos:start="62:24" pos:end="62:35">x86_ldl_phys</name><argument_list pos:start="62:36" pos:end="62:58">(<argument pos:start="62:37" pos:end="62:38"><expr pos:start="62:37" pos:end="62:38"><name pos:start="62:37" pos:end="62:38">cs</name></expr></argument>, <argument pos:start="62:41" pos:end="62:57"><expr pos:start="62:41" pos:end="62:57"><name pos:start="62:41" pos:end="62:48">sm_state</name> <operator pos:start="62:50" pos:end="62:50">+</operator> <literal type="number" pos:start="62:52" pos:end="62:57">0x7fe8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:59"><expr pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">regs</name><index pos:start="63:14" pos:end="63:20">[<expr pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:19">R_EBP</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <call pos:start="63:24" pos:end="63:58"><name pos:start="63:24" pos:end="63:35">x86_ldl_phys</name><argument_list pos:start="63:36" pos:end="63:58">(<argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><name pos:start="63:37" pos:end="63:38">cs</name></expr></argument>, <argument pos:start="63:41" pos:end="63:57"><expr pos:start="63:41" pos:end="63:57"><name pos:start="63:41" pos:end="63:48">sm_state</name> <operator pos:start="63:50" pos:end="63:50">+</operator> <literal type="number" pos:start="63:52" pos:end="63:57">0x7fe4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:59"><expr pos:start="64:5" pos:end="64:58"><name pos:start="64:5" pos:end="64:20"><name pos:start="64:5" pos:end="64:7">env</name><operator pos:start="64:8" pos:end="64:9">-&gt;</operator><name pos:start="64:10" pos:end="64:13">regs</name><index pos:start="64:14" pos:end="64:20">[<expr pos:start="64:15" pos:end="64:19"><name pos:start="64:15" pos:end="64:19">R_ESP</name></expr>]</index></name> <operator pos:start="64:22" pos:end="64:22">=</operator> <call pos:start="64:24" pos:end="64:58"><name pos:start="64:24" pos:end="64:35">x86_ldl_phys</name><argument_list pos:start="64:36" pos:end="64:58">(<argument pos:start="64:37" pos:end="64:38"><expr pos:start="64:37" pos:end="64:38"><name pos:start="64:37" pos:end="64:38">cs</name></expr></argument>, <argument pos:start="64:41" pos:end="64:57"><expr pos:start="64:41" pos:end="64:57"><name pos:start="64:41" pos:end="64:48">sm_state</name> <operator pos:start="64:50" pos:end="64:50">+</operator> <literal type="number" pos:start="64:52" pos:end="64:57">0x7fe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:59"><expr pos:start="65:5" pos:end="65:58"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:13">regs</name><index pos:start="65:14" pos:end="65:20">[<expr pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:19">R_EBX</name></expr>]</index></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:58"><name pos:start="65:24" pos:end="65:35">x86_ldl_phys</name><argument_list pos:start="65:36" pos:end="65:58">(<argument pos:start="65:37" pos:end="65:38"><expr pos:start="65:37" pos:end="65:38"><name pos:start="65:37" pos:end="65:38">cs</name></expr></argument>, <argument pos:start="65:41" pos:end="65:57"><expr pos:start="65:41" pos:end="65:57"><name pos:start="65:41" pos:end="65:48">sm_state</name> <operator pos:start="65:50" pos:end="65:50">+</operator> <literal type="number" pos:start="65:52" pos:end="65:57">0x7fdc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="66:5" pos:end="66:59"><expr pos:start="66:5" pos:end="66:58"><name pos:start="66:5" pos:end="66:20"><name pos:start="66:5" pos:end="66:7">env</name><operator pos:start="66:8" pos:end="66:9">-&gt;</operator><name pos:start="66:10" pos:end="66:13">regs</name><index pos:start="66:14" pos:end="66:20">[<expr pos:start="66:15" pos:end="66:19"><name pos:start="66:15" pos:end="66:19">R_EDX</name></expr>]</index></name> <operator pos:start="66:22" pos:end="66:22">=</operator> <call pos:start="66:24" pos:end="66:58"><name pos:start="66:24" pos:end="66:35">x86_ldl_phys</name><argument_list pos:start="66:36" pos:end="66:58">(<argument pos:start="66:37" pos:end="66:38"><expr pos:start="66:37" pos:end="66:38"><name pos:start="66:37" pos:end="66:38">cs</name></expr></argument>, <argument pos:start="66:41" pos:end="66:57"><expr pos:start="66:41" pos:end="66:57"><name pos:start="66:41" pos:end="66:48">sm_state</name> <operator pos:start="66:50" pos:end="66:50">+</operator> <literal type="number" pos:start="66:52" pos:end="66:57">0x7fd8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="67:5" pos:end="67:59"><expr pos:start="67:5" pos:end="67:58"><name pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:13">regs</name><index pos:start="67:14" pos:end="67:20">[<expr pos:start="67:15" pos:end="67:19"><name pos:start="67:15" pos:end="67:19">R_ECX</name></expr>]</index></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <call pos:start="67:24" pos:end="67:58"><name pos:start="67:24" pos:end="67:35">x86_ldl_phys</name><argument_list pos:start="67:36" pos:end="67:58">(<argument pos:start="67:37" pos:end="67:38"><expr pos:start="67:37" pos:end="67:38"><name pos:start="67:37" pos:end="67:38">cs</name></expr></argument>, <argument pos:start="67:41" pos:end="67:57"><expr pos:start="67:41" pos:end="67:57"><name pos:start="67:41" pos:end="67:48">sm_state</name> <operator pos:start="67:50" pos:end="67:50">+</operator> <literal type="number" pos:start="67:52" pos:end="67:57">0x7fd4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="68:5" pos:end="68:59"><expr pos:start="68:5" pos:end="68:58"><name pos:start="68:5" pos:end="68:20"><name pos:start="68:5" pos:end="68:7">env</name><operator pos:start="68:8" pos:end="68:9">-&gt;</operator><name pos:start="68:10" pos:end="68:13">regs</name><index pos:start="68:14" pos:end="68:20">[<expr pos:start="68:15" pos:end="68:19"><name pos:start="68:15" pos:end="68:19">R_EAX</name></expr>]</index></name> <operator pos:start="68:22" pos:end="68:22">=</operator> <call pos:start="68:24" pos:end="68:58"><name pos:start="68:24" pos:end="68:35">x86_ldl_phys</name><argument_list pos:start="68:36" pos:end="68:58">(<argument pos:start="68:37" pos:end="68:38"><expr pos:start="68:37" pos:end="68:38"><name pos:start="68:37" pos:end="68:38">cs</name></expr></argument>, <argument pos:start="68:41" pos:end="68:57"><expr pos:start="68:41" pos:end="68:57"><name pos:start="68:41" pos:end="68:48">sm_state</name> <operator pos:start="68:50" pos:end="68:50">+</operator> <literal type="number" pos:start="68:52" pos:end="68:57">0x7fd0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="69:5" pos:end="69:53"><expr pos:start="69:5" pos:end="69:52"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:11">dr</name><index pos:start="69:12" pos:end="69:14">[<expr pos:start="69:13" pos:end="69:13"><literal type="number" pos:start="69:13" pos:end="69:13">6</literal></expr>]</index></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:52"><name pos:start="69:18" pos:end="69:29">x86_ldl_phys</name><argument_list pos:start="69:30" pos:end="69:52">(<argument pos:start="69:31" pos:end="69:32"><expr pos:start="69:31" pos:end="69:32"><name pos:start="69:31" pos:end="69:32">cs</name></expr></argument>, <argument pos:start="69:35" pos:end="69:51"><expr pos:start="69:35" pos:end="69:51"><name pos:start="69:35" pos:end="69:42">sm_state</name> <operator pos:start="69:44" pos:end="69:44">+</operator> <literal type="number" pos:start="69:46" pos:end="69:51">0x7fcc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="70:5" pos:end="70:53"><expr pos:start="70:5" pos:end="70:52"><name pos:start="70:5" pos:end="70:14"><name pos:start="70:5" pos:end="70:7">env</name><operator pos:start="70:8" pos:end="70:9">-&gt;</operator><name pos:start="70:10" pos:end="70:11">dr</name><index pos:start="70:12" pos:end="70:14">[<expr pos:start="70:13" pos:end="70:13"><literal type="number" pos:start="70:13" pos:end="70:13">7</literal></expr>]</index></name> <operator pos:start="70:16" pos:end="70:16">=</operator> <call pos:start="70:18" pos:end="70:52"><name pos:start="70:18" pos:end="70:29">x86_ldl_phys</name><argument_list pos:start="70:30" pos:end="70:52">(<argument pos:start="70:31" pos:end="70:32"><expr pos:start="70:31" pos:end="70:32"><name pos:start="70:31" pos:end="70:32">cs</name></expr></argument>, <argument pos:start="70:35" pos:end="70:51"><expr pos:start="70:35" pos:end="70:51"><name pos:start="70:35" pos:end="70:42">sm_state</name> <operator pos:start="70:44" pos:end="70:44">+</operator> <literal type="number" pos:start="70:46" pos:end="70:51">0x7fc8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="71:5" pos:end="71:68"><expr pos:start="71:5" pos:end="71:67"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:11">tr</name><operator pos:start="71:12" pos:end="71:12">.</operator><name pos:start="71:13" pos:end="71:20">selector</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:58"><name pos:start="71:24" pos:end="71:35">x86_ldl_phys</name><argument_list pos:start="71:36" pos:end="71:58">(<argument pos:start="71:37" pos:end="71:38"><expr pos:start="71:37" pos:end="71:38"><name pos:start="71:37" pos:end="71:38">cs</name></expr></argument>, <argument pos:start="71:41" pos:end="71:57"><expr pos:start="71:41" pos:end="71:57"><name pos:start="71:41" pos:end="71:48">sm_state</name> <operator pos:start="71:50" pos:end="71:50">+</operator> <literal type="number" pos:start="71:52" pos:end="71:57">0x7fc4</literal></expr></argument>)</argument_list></call> <operator pos:start="71:60" pos:end="71:60">&amp;</operator> <literal type="number" pos:start="71:62" pos:end="71:67">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="72:55"><expr pos:start="72:5" pos:end="72:54"><name pos:start="72:5" pos:end="72:16"><name pos:start="72:5" pos:end="72:7">env</name><operator pos:start="72:8" pos:end="72:9">-&gt;</operator><name pos:start="72:10" pos:end="72:11">tr</name><operator pos:start="72:12" pos:end="72:12">.</operator><name pos:start="72:13" pos:end="72:16">base</name></name> <operator pos:start="72:18" pos:end="72:18">=</operator> <call pos:start="72:20" pos:end="72:54"><name pos:start="72:20" pos:end="72:31">x86_ldl_phys</name><argument_list pos:start="72:32" pos:end="72:54">(<argument pos:start="72:33" pos:end="72:34"><expr pos:start="72:33" pos:end="72:34"><name pos:start="72:33" pos:end="72:34">cs</name></expr></argument>, <argument pos:start="72:37" pos:end="72:53"><expr pos:start="72:37" pos:end="72:53"><name pos:start="72:37" pos:end="72:44">sm_state</name> <operator pos:start="72:46" pos:end="72:46">+</operator> <literal type="number" pos:start="72:48" pos:end="72:53">0x7f64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="73:5" pos:end="73:56"><expr pos:start="73:5" pos:end="73:55"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:11">tr</name><operator pos:start="73:12" pos:end="73:12">.</operator><name pos:start="73:13" pos:end="73:17">limit</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <call pos:start="73:21" pos:end="73:55"><name pos:start="73:21" pos:end="73:32">x86_ldl_phys</name><argument_list pos:start="73:33" pos:end="73:55">(<argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><name pos:start="73:34" pos:end="73:35">cs</name></expr></argument>, <argument pos:start="73:38" pos:end="73:54"><expr pos:start="73:38" pos:end="73:54"><name pos:start="73:38" pos:end="73:45">sm_state</name> <operator pos:start="73:47" pos:end="73:47">+</operator> <literal type="number" pos:start="73:49" pos:end="73:54">0x7f60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:72"><expr pos:start="74:5" pos:end="74:71"><name pos:start="74:5" pos:end="74:17"><name pos:start="74:5" pos:end="74:7">env</name><operator pos:start="74:8" pos:end="74:9">-&gt;</operator><name pos:start="74:10" pos:end="74:11">tr</name><operator pos:start="74:12" pos:end="74:12">.</operator><name pos:start="74:13" pos:end="74:17">flags</name></name> <operator pos:start="74:19" pos:end="74:19">=</operator> <operator pos:start="74:21" pos:end="74:21">(</operator><call pos:start="74:22" pos:end="74:56"><name pos:start="74:22" pos:end="74:33">x86_ldl_phys</name><argument_list pos:start="74:34" pos:end="74:56">(<argument pos:start="74:35" pos:end="74:36"><expr pos:start="74:35" pos:end="74:36"><name pos:start="74:35" pos:end="74:36">cs</name></expr></argument>, <argument pos:start="74:39" pos:end="74:55"><expr pos:start="74:39" pos:end="74:55"><name pos:start="74:39" pos:end="74:46">sm_state</name> <operator pos:start="74:48" pos:end="74:48">+</operator> <literal type="number" pos:start="74:50" pos:end="74:55">0x7f5c</literal></expr></argument>)</argument_list></call> <operator pos:start="74:58" pos:end="74:58">&amp;</operator> <literal type="number" pos:start="74:60" pos:end="74:65">0xf0ff</literal><operator pos:start="74:66" pos:end="74:66">)</operator> <operator pos:start="74:68" pos:end="74:69">&lt;&lt;</operator> <literal type="number" pos:start="74:71" pos:end="74:71">8</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="75:5" pos:end="75:69"><expr pos:start="75:5" pos:end="75:68"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:7">env</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">ldt</name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:21">selector</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:59"><name pos:start="75:25" pos:end="75:36">x86_ldl_phys</name><argument_list pos:start="75:37" pos:end="75:59">(<argument pos:start="75:38" pos:end="75:39"><expr pos:start="75:38" pos:end="75:39"><name pos:start="75:38" pos:end="75:39">cs</name></expr></argument>, <argument pos:start="75:42" pos:end="75:58"><expr pos:start="75:42" pos:end="75:58"><name pos:start="75:42" pos:end="75:49">sm_state</name> <operator pos:start="75:51" pos:end="75:51">+</operator> <literal type="number" pos:start="75:53" pos:end="75:58">0x7fc0</literal></expr></argument>)</argument_list></call> <operator pos:start="75:61" pos:end="75:61">&amp;</operator> <literal type="number" pos:start="75:63" pos:end="75:68">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="76:5" pos:end="76:56"><expr pos:start="76:5" pos:end="76:55"><name pos:start="76:5" pos:end="76:17"><name pos:start="76:5" pos:end="76:7">env</name><operator pos:start="76:8" pos:end="76:9">-&gt;</operator><name pos:start="76:10" pos:end="76:12">ldt</name><operator pos:start="76:13" pos:end="76:13">.</operator><name pos:start="76:14" pos:end="76:17">base</name></name> <operator pos:start="76:19" pos:end="76:19">=</operator> <call pos:start="76:21" pos:end="76:55"><name pos:start="76:21" pos:end="76:32">x86_ldl_phys</name><argument_list pos:start="76:33" pos:end="76:55">(<argument pos:start="76:34" pos:end="76:35"><expr pos:start="76:34" pos:end="76:35"><name pos:start="76:34" pos:end="76:35">cs</name></expr></argument>, <argument pos:start="76:38" pos:end="76:54"><expr pos:start="76:38" pos:end="76:54"><name pos:start="76:38" pos:end="76:45">sm_state</name> <operator pos:start="76:47" pos:end="76:47">+</operator> <literal type="number" pos:start="76:49" pos:end="76:54">0x7f80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:57"><expr pos:start="77:5" pos:end="77:56"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:12">ldt</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:18">limit</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:56"><name pos:start="77:22" pos:end="77:33">x86_ldl_phys</name><argument_list pos:start="77:34" pos:end="77:56">(<argument pos:start="77:35" pos:end="77:36"><expr pos:start="77:35" pos:end="77:36"><name pos:start="77:35" pos:end="77:36">cs</name></expr></argument>, <argument pos:start="77:39" pos:end="77:55"><expr pos:start="77:39" pos:end="77:55"><name pos:start="77:39" pos:end="77:46">sm_state</name> <operator pos:start="77:48" pos:end="77:48">+</operator> <literal type="number" pos:start="77:50" pos:end="77:55">0x7f7c</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="78:5" pos:end="78:73"><expr pos:start="78:5" pos:end="78:72"><name pos:start="78:5" pos:end="78:18"><name pos:start="78:5" pos:end="78:7">env</name><operator pos:start="78:8" pos:end="78:9">-&gt;</operator><name pos:start="78:10" pos:end="78:12">ldt</name><operator pos:start="78:13" pos:end="78:13">.</operator><name pos:start="78:14" pos:end="78:18">flags</name></name> <operator pos:start="78:20" pos:end="78:20">=</operator> <operator pos:start="78:22" pos:end="78:22">(</operator><call pos:start="78:23" pos:end="78:57"><name pos:start="78:23" pos:end="78:34">x86_ldl_phys</name><argument_list pos:start="78:35" pos:end="78:57">(<argument pos:start="78:36" pos:end="78:37"><expr pos:start="78:36" pos:end="78:37"><name pos:start="78:36" pos:end="78:37">cs</name></expr></argument>, <argument pos:start="78:40" pos:end="78:56"><expr pos:start="78:40" pos:end="78:56"><name pos:start="78:40" pos:end="78:47">sm_state</name> <operator pos:start="78:49" pos:end="78:49">+</operator> <literal type="number" pos:start="78:51" pos:end="78:56">0x7f78</literal></expr></argument>)</argument_list></call> <operator pos:start="78:59" pos:end="78:59">&amp;</operator> <literal type="number" pos:start="78:61" pos:end="78:66">0xf0ff</literal><operator pos:start="78:67" pos:end="78:67">)</operator> <operator pos:start="78:69" pos:end="78:70">&lt;&lt;</operator> <literal type="number" pos:start="78:72" pos:end="78:72">8</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:56"><expr pos:start="79:5" pos:end="79:55"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:7">env</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:12">gdt</name><operator pos:start="79:13" pos:end="79:13">.</operator><name pos:start="79:14" pos:end="79:17">base</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <call pos:start="79:21" pos:end="79:55"><name pos:start="79:21" pos:end="79:32">x86_ldl_phys</name><argument_list pos:start="79:33" pos:end="79:55">(<argument pos:start="79:34" pos:end="79:35"><expr pos:start="79:34" pos:end="79:35"><name pos:start="79:34" pos:end="79:35">cs</name></expr></argument>, <argument pos:start="79:38" pos:end="79:54"><expr pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:45">sm_state</name> <operator pos:start="79:47" pos:end="79:47">+</operator> <literal type="number" pos:start="79:49" pos:end="79:54">0x7f74</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="80:5" pos:end="80:57"><expr pos:start="80:5" pos:end="80:56"><name pos:start="80:5" pos:end="80:18"><name pos:start="80:5" pos:end="80:7">env</name><operator pos:start="80:8" pos:end="80:9">-&gt;</operator><name pos:start="80:10" pos:end="80:12">gdt</name><operator pos:start="80:13" pos:end="80:13">.</operator><name pos:start="80:14" pos:end="80:18">limit</name></name> <operator pos:start="80:20" pos:end="80:20">=</operator> <call pos:start="80:22" pos:end="80:56"><name pos:start="80:22" pos:end="80:33">x86_ldl_phys</name><argument_list pos:start="80:34" pos:end="80:56">(<argument pos:start="80:35" pos:end="80:36"><expr pos:start="80:35" pos:end="80:36"><name pos:start="80:35" pos:end="80:36">cs</name></expr></argument>, <argument pos:start="80:39" pos:end="80:55"><expr pos:start="80:39" pos:end="80:55"><name pos:start="80:39" pos:end="80:46">sm_state</name> <operator pos:start="80:48" pos:end="80:48">+</operator> <literal type="number" pos:start="80:50" pos:end="80:55">0x7f70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="81:5" pos:end="81:56"><expr pos:start="81:5" pos:end="81:55"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:7">env</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:12">idt</name><operator pos:start="81:13" pos:end="81:13">.</operator><name pos:start="81:14" pos:end="81:17">base</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="81:55"><name pos:start="81:21" pos:end="81:32">x86_ldl_phys</name><argument_list pos:start="81:33" pos:end="81:55">(<argument pos:start="81:34" pos:end="81:35"><expr pos:start="81:34" pos:end="81:35"><name pos:start="81:34" pos:end="81:35">cs</name></expr></argument>, <argument pos:start="81:38" pos:end="81:54"><expr pos:start="81:38" pos:end="81:54"><name pos:start="81:38" pos:end="81:45">sm_state</name> <operator pos:start="81:47" pos:end="81:47">+</operator> <literal type="number" pos:start="81:49" pos:end="81:54">0x7f58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="82:5" pos:end="82:57"><expr pos:start="82:5" pos:end="82:56"><name pos:start="82:5" pos:end="82:18"><name pos:start="82:5" pos:end="82:7">env</name><operator pos:start="82:8" pos:end="82:9">-&gt;</operator><name pos:start="82:10" pos:end="82:12">idt</name><operator pos:start="82:13" pos:end="82:13">.</operator><name pos:start="82:14" pos:end="82:18">limit</name></name> <operator pos:start="82:20" pos:end="82:20">=</operator> <call pos:start="82:22" pos:end="82:56"><name pos:start="82:22" pos:end="82:33">x86_ldl_phys</name><argument_list pos:start="82:34" pos:end="82:56">(<argument pos:start="82:35" pos:end="82:36"><expr pos:start="82:35" pos:end="82:36"><name pos:start="82:35" pos:end="82:36">cs</name></expr></argument>, <argument pos:start="82:39" pos:end="82:55"><expr pos:start="82:39" pos:end="82:55"><name pos:start="82:39" pos:end="82:46">sm_state</name> <operator pos:start="82:48" pos:end="82:48">+</operator> <literal type="number" pos:start="82:50" pos:end="82:55">0x7f54</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="83:5" pos:end="96:5">for <control pos:start="83:9" pos:end="83:27">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:22"><expr pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <literal type="number" pos:start="83:21" pos:end="83:21">6</literal></expr>;</condition> <incr pos:start="83:24" pos:end="83:26"><expr pos:start="83:24" pos:end="83:26"><name pos:start="83:24" pos:end="83:24">i</name><operator pos:start="83:25" pos:end="83:26">++</operator></expr></incr>)</control> <block pos:start="83:29" pos:end="96:5">{<block_content pos:start="84:9" pos:end="95:76">
        <if_stmt pos:start="84:9" pos:end="88:9"><if pos:start="84:9" pos:end="86:9">if <condition pos:start="84:12" pos:end="84:18">(<expr pos:start="84:13" pos:end="84:17"><name pos:start="84:13" pos:end="84:13">i</name> <operator pos:start="84:15" pos:end="84:15">&lt;</operator> <literal type="number" pos:start="84:17" pos:end="84:17">3</literal></expr>)</condition> <block pos:start="84:20" pos:end="86:9">{<block_content pos:start="85:13" pos:end="85:37">
            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:18">offset</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:29">0x7f84</literal> <operator pos:start="85:29" pos:end="85:29">+</operator> <name pos:start="85:31" pos:end="85:31">i</name> <operator pos:start="85:33" pos:end="85:33">*</operator> <literal type="number" pos:start="85:35" pos:end="85:36">12</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="86:11" pos:end="88:9">else <block pos:start="86:16" pos:end="88:9">{<block_content pos:start="87:13" pos:end="87:43">
            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:18">offset</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:29">0x7f2c</literal> <operator pos:start="87:29" pos:end="87:29">+</operator> <operator pos:start="87:31" pos:end="87:31">(</operator><name pos:start="87:32" pos:end="87:32">i</name> <operator pos:start="87:34" pos:end="87:34">-</operator> <literal type="number" pos:start="87:36" pos:end="87:36">3</literal><operator pos:start="87:37" pos:end="87:37">)</operator> <operator pos:start="87:39" pos:end="87:39">*</operator> <literal type="number" pos:start="87:41" pos:end="87:42">12</literal></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="89:9" pos:end="95:76"><expr pos:start="89:9" pos:end="95:75"><call pos:start="89:9" pos:end="95:75"><name pos:start="89:9" pos:end="89:30">cpu_x86_load_seg_cache</name><argument_list pos:start="89:31" pos:end="95:75">(<argument pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">env</name></expr></argument>, <argument pos:start="89:37" pos:end="89:37"><expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">i</name></expr></argument>,
                               <argument pos:start="90:32" pos:end="91:75"><expr pos:start="90:32" pos:end="91:75"><call pos:start="90:32" pos:end="91:66"><name pos:start="90:32" pos:end="90:43">x86_ldl_phys</name><argument_list pos:start="90:44" pos:end="91:66">(<argument pos:start="90:45" pos:end="90:46"><expr pos:start="90:45" pos:end="90:46"><name pos:start="90:45" pos:end="90:46">cs</name></expr></argument>,
                                        <argument pos:start="91:41" pos:end="91:65"><expr pos:start="91:41" pos:end="91:65"><name pos:start="91:41" pos:end="91:48">sm_state</name> <operator pos:start="91:50" pos:end="91:50">+</operator> <literal type="number" pos:start="91:52" pos:end="91:59">0x7fa8</literal> <operator pos:start="91:59" pos:end="91:59">+</operator> <name pos:start="91:61" pos:end="91:61">i</name> <operator pos:start="91:63" pos:end="91:63">*</operator> <literal type="number" pos:start="91:65" pos:end="91:65">4</literal></expr></argument>)</argument_list></call> <operator pos:start="91:68" pos:end="91:68">&amp;</operator> <literal type="number" pos:start="91:70" pos:end="91:75">0xffff</literal></expr></argument>,
                               <argument pos:start="92:32" pos:end="92:70"><expr pos:start="92:32" pos:end="92:70"><call pos:start="92:32" pos:end="92:70"><name pos:start="92:32" pos:end="92:43">x86_ldl_phys</name><argument_list pos:start="92:44" pos:end="92:70">(<argument pos:start="92:45" pos:end="92:46"><expr pos:start="92:45" pos:end="92:46"><name pos:start="92:45" pos:end="92:46">cs</name></expr></argument>, <argument pos:start="92:49" pos:end="92:69"><expr pos:start="92:49" pos:end="92:69"><name pos:start="92:49" pos:end="92:56">sm_state</name> <operator pos:start="92:58" pos:end="92:58">+</operator> <name pos:start="92:60" pos:end="92:65">offset</name> <operator pos:start="92:67" pos:end="92:67">+</operator> <literal type="number" pos:start="92:69" pos:end="92:69">8</literal></expr></argument>)</argument_list></call></expr></argument>,
                               <argument pos:start="93:32" pos:end="93:70"><expr pos:start="93:32" pos:end="93:70"><call pos:start="93:32" pos:end="93:70"><name pos:start="93:32" pos:end="93:43">x86_ldl_phys</name><argument_list pos:start="93:44" pos:end="93:70">(<argument pos:start="93:45" pos:end="93:46"><expr pos:start="93:45" pos:end="93:46"><name pos:start="93:45" pos:end="93:46">cs</name></expr></argument>, <argument pos:start="93:49" pos:end="93:69"><expr pos:start="93:49" pos:end="93:69"><name pos:start="93:49" pos:end="93:56">sm_state</name> <operator pos:start="93:58" pos:end="93:58">+</operator> <name pos:start="93:60" pos:end="93:65">offset</name> <operator pos:start="93:67" pos:end="93:67">+</operator> <literal type="number" pos:start="93:69" pos:end="93:69">4</literal></expr></argument>)</argument_list></call></expr></argument>,
                               <argument pos:start="94:32" pos:end="95:74"><expr pos:start="94:32" pos:end="95:74"><operator pos:start="94:32" pos:end="94:32">(</operator><call pos:start="94:33" pos:end="95:59"><name pos:start="94:33" pos:end="94:44">x86_ldl_phys</name><argument_list pos:start="94:45" pos:end="95:59">(<argument pos:start="94:46" pos:end="94:47"><expr pos:start="94:46" pos:end="94:47"><name pos:start="94:46" pos:end="94:47">cs</name></expr></argument>,
                                         <argument pos:start="95:42" pos:end="95:58"><expr pos:start="95:42" pos:end="95:58"><name pos:start="95:42" pos:end="95:49">sm_state</name> <operator pos:start="95:51" pos:end="95:51">+</operator> <name pos:start="95:53" pos:end="95:58">offset</name></expr></argument>)</argument_list></call> <operator pos:start="95:61" pos:end="95:61">&amp;</operator> <literal type="number" pos:start="95:63" pos:end="95:68">0xf0ff</literal><operator pos:start="95:69" pos:end="95:69">)</operator> <operator pos:start="95:71" pos:end="95:72">&lt;&lt;</operator> <literal type="number" pos:start="95:74" pos:end="95:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="97:5" pos:end="97:65"><expr pos:start="97:5" pos:end="97:64"><call pos:start="97:5" pos:end="97:64"><name pos:start="97:5" pos:end="97:22">cpu_x86_update_cr4</name><argument_list pos:start="97:23" pos:end="97:64">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">env</name></expr></argument>, <argument pos:start="97:29" pos:end="97:63"><expr pos:start="97:29" pos:end="97:63"><call pos:start="97:29" pos:end="97:63"><name pos:start="97:29" pos:end="97:40">x86_ldl_phys</name><argument_list pos:start="97:41" pos:end="97:63">(<argument pos:start="97:42" pos:end="97:43"><expr pos:start="97:42" pos:end="97:43"><name pos:start="97:42" pos:end="97:43">cs</name></expr></argument>, <argument pos:start="97:46" pos:end="97:62"><expr pos:start="97:46" pos:end="97:62"><name pos:start="97:46" pos:end="97:53">sm_state</name> <operator pos:start="97:55" pos:end="97:55">+</operator> <literal type="number" pos:start="97:57" pos:end="97:62">0x7f14</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="98:5" pos:end="98:46"><expr pos:start="98:5" pos:end="98:45"><name pos:start="98:5" pos:end="98:7">val</name> <operator pos:start="98:9" pos:end="98:9">=</operator> <call pos:start="98:11" pos:end="98:45"><name pos:start="98:11" pos:end="98:22">x86_ldl_phys</name><argument_list pos:start="98:23" pos:end="98:45">(<argument pos:start="98:24" pos:end="98:25"><expr pos:start="98:24" pos:end="98:25"><name pos:start="98:24" pos:end="98:25">cs</name></expr></argument>, <argument pos:start="98:28" pos:end="98:44"><expr pos:start="98:28" pos:end="98:44"><name pos:start="98:28" pos:end="98:35">sm_state</name> <operator pos:start="98:37" pos:end="98:37">+</operator> <literal type="number" pos:start="98:39" pos:end="98:44">0x7efc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="98:48" pos:end="98:64">/* revision ID */</comment>
    <if_stmt pos:start="99:5" pos:end="103:0"><if pos:start="99:5" pos:end="103:0">if <condition pos:start="99:8" pos:end="99:22">(<expr pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">val</name> <operator pos:start="99:13" pos:end="99:13">&amp;</operator> <literal type="number" pos:start="99:15" pos:end="99:21">0x20000</literal></expr>)</condition> <block pos:start="99:24" pos:end="103:0">{<block_content pos:start="100:9" pos:end="100:58">
        <expr_stmt pos:start="100:9" pos:end="100:58"><expr pos:start="100:9" pos:end="100:57"><name pos:start="100:9" pos:end="100:19"><name pos:start="100:9" pos:end="100:11">env</name><operator pos:start="100:12" pos:end="100:13">-&gt;</operator><name pos:start="100:14" pos:end="100:19">smbase</name></name> <operator pos:start="100:21" pos:end="100:21">=</operator> <call pos:start="100:23" pos:end="100:57"><name pos:start="100:23" pos:end="100:34">x86_ldl_phys</name><argument_list pos:start="100:35" pos:end="100:57">(<argument pos:start="100:36" pos:end="100:37"><expr pos:start="100:36" pos:end="100:37"><name pos:start="100:36" pos:end="100:37">cs</name></expr></argument>, <argument pos:start="100:40" pos:end="100:56"><expr pos:start="100:40" pos:end="100:56"><name pos:start="100:40" pos:end="100:47">sm_state</name> <operator pos:start="100:49" pos:end="100:49">+</operator> <literal type="number" pos:start="100:51" pos:end="100:56">0x7ef8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:endif pos:start="102:1" pos:end="102:6">#<cpp:directive pos:start="102:2" pos:end="102:6">endif</cpp:directive></cpp:endif>
    <if_stmt pos:start="103:5" pos:end="105:5"><if pos:start="103:5" pos:end="105:5">if <condition pos:start="103:8" pos:end="103:54">(<expr pos:start="103:9" pos:end="103:53"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:21"><name pos:start="103:10" pos:end="103:12">env</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:21">hflags2</name></name> <operator pos:start="103:23" pos:end="103:23">&amp;</operator> <name pos:start="103:25" pos:end="103:47">HF2_SMM_INSIDE_NMI_MASK</name><operator pos:start="103:48" pos:end="103:48">)</operator> <operator pos:start="103:50" pos:end="103:51">==</operator> <literal type="number" pos:start="103:53" pos:end="103:53">0</literal></expr>)</condition> <block pos:start="103:56" pos:end="105:5">{<block_content pos:start="104:9" pos:end="104:38">
        <expr_stmt pos:start="104:9" pos:end="104:38"><expr pos:start="104:9" pos:end="104:37"><name pos:start="104:9" pos:end="104:20"><name pos:start="104:9" pos:end="104:11">env</name><operator pos:start="104:12" pos:end="104:13">-&gt;</operator><name pos:start="104:14" pos:end="104:20">hflags2</name></name> <operator pos:start="104:22" pos:end="104:23">&amp;=</operator> <operator pos:start="104:25" pos:end="104:25">~</operator><name pos:start="104:26" pos:end="104:37">HF2_NMI_MASK</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="106:5" pos:end="106:45"><expr pos:start="106:5" pos:end="106:44"><name pos:start="106:5" pos:end="106:16"><name pos:start="106:5" pos:end="106:7">env</name><operator pos:start="106:8" pos:end="106:9">-&gt;</operator><name pos:start="106:10" pos:end="106:16">hflags2</name></name> <operator pos:start="106:18" pos:end="106:19">&amp;=</operator> <operator pos:start="106:21" pos:end="106:21">~</operator><name pos:start="106:22" pos:end="106:44">HF2_SMM_INSIDE_NMI_MASK</name></expr>;</expr_stmt>
    <expr_stmt pos:start="107:5" pos:end="107:32"><expr pos:start="107:5" pos:end="107:31"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:15">hflags</name></name> <operator pos:start="107:17" pos:end="107:18">&amp;=</operator> <operator pos:start="107:20" pos:end="107:20">~</operator><name pos:start="107:21" pos:end="107:31">HF_SMM_MASK</name></expr>;</expr_stmt>
    <expr_stmt pos:start="108:5" pos:end="108:24"><expr pos:start="108:5" pos:end="108:23"><call pos:start="108:5" pos:end="108:23"><name pos:start="108:5" pos:end="108:18">cpu_smm_update</name><argument_list pos:start="108:19" pos:end="108:23">(<argument pos:start="108:20" pos:end="108:22"><expr pos:start="108:20" pos:end="108:22"><name pos:start="108:20" pos:end="108:22">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="109:5" pos:end="109:51"><expr pos:start="109:5" pos:end="109:50"><call pos:start="109:5" pos:end="109:50"><name pos:start="109:5" pos:end="109:17">qemu_log_mask</name><argument_list pos:start="109:18" pos:end="109:50">(<argument pos:start="109:19" pos:end="109:29"><expr pos:start="109:19" pos:end="109:29"><name pos:start="109:19" pos:end="109:29">CPU_LOG_INT</name></expr></argument>, <argument pos:start="109:32" pos:end="109:49"><expr pos:start="109:32" pos:end="109:49"><literal type="string" pos:start="109:32" pos:end="109:49">"SMM: after RSM\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="110:5" pos:end="110:61"><expr pos:start="110:5" pos:end="110:60"><call pos:start="110:5" pos:end="110:60"><name pos:start="110:5" pos:end="110:22">log_cpu_state_mask</name><argument_list pos:start="110:23" pos:end="110:60">(<argument pos:start="110:24" pos:end="110:34"><expr pos:start="110:24" pos:end="110:34"><name pos:start="110:24" pos:end="110:34">CPU_LOG_INT</name></expr></argument>, <argument pos:start="110:37" pos:end="110:44"><expr pos:start="110:37" pos:end="110:44"><call pos:start="110:37" pos:end="110:44"><name pos:start="110:37" pos:end="110:39">CPU</name><argument_list pos:start="110:40" pos:end="110:44">(<argument pos:start="110:41" pos:end="110:43"><expr pos:start="110:41" pos:end="110:43"><name pos:start="110:41" pos:end="110:43">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="110:47" pos:end="110:59"><expr pos:start="110:47" pos:end="110:59"><name pos:start="110:47" pos:end="110:59">CPU_DUMP_CCOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
