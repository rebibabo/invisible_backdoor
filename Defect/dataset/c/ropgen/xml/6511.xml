<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6511.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mov_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVIndexEntry</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:24">sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:7">mov</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:11">fc</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:15">s</name></expr>;</expr_stmt>

 <label pos:start="17:2" pos:end="17:7"><name pos:start="17:2" pos:end="17:6">retry</name>:</label>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:10">sample</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:41"><name pos:start="19:14" pos:end="19:33">mov_find_next_sample</name><argument_list pos:start="19:34" pos:end="19:41">(<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">s</name></expr></argument>, <argument pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:40">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="43:5"><if pos:start="21:5" pos:end="43:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:15">sample</name></expr>)</condition> <block pos:start="21:18" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:19">

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">mov</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">found_mdat</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:31"><if pos:start="25:9" pos:end="27:31">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:32"><name pos:start="25:14" pos:end="25:16">mov</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:32">next_root_atom</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:31"><block_content pos:start="27:13" pos:end="27:31">

            <return pos:start="27:13" pos:end="27:31">return <expr pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:56"><expr pos:start="29:9" pos:end="29:55"><call pos:start="29:9" pos:end="29:55"><name pos:start="29:9" pos:end="29:17">avio_seek</name><argument_list pos:start="29:18" pos:end="29:55">(<argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:23">pb</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:44"><expr pos:start="29:26" pos:end="29:44"><name pos:start="29:26" pos:end="29:44"><name pos:start="29:26" pos:end="29:28">mov</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:44">next_root_atom</name></name></expr></argument>, <argument pos:start="29:47" pos:end="29:54"><expr pos:start="29:47" pos:end="29:54"><name pos:start="29:47" pos:end="29:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">mov</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:27">next_root_atom</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:31"><if pos:start="33:9" pos:end="37:31">if <condition pos:start="33:12" pos:end="35:29">(<expr pos:start="33:13" pos:end="35:28"><macro pos:start="33:13" pos:end="33:81"><name pos:start="33:13" pos:end="33:28">mov_read_default</name><argument_list pos:start="33:29" pos:end="33:81">(<argument pos:start="33:30" pos:end="33:32">mov</argument>, <argument pos:start="33:35" pos:end="33:39">s-&gt;pb</argument>, <argument pos:start="33:42" pos:end="33:67">(MOVAtom){ AV_RL32(<literal type="string" pos:start="33:61" pos:end="33:66">"root"</literal>)</argument>, <argument pos:start="33:70" pos:end="33:80">INT64_MAX }</argument>)</argument_list></macro> <operator pos:start="33:83" pos:end="33:83">&lt;</operator> <literal type="number" pos:start="33:85" pos:end="33:85">0</literal> <operator pos:start="33:87" pos:end="33:88">||</operator>

            <call pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:21">avio_feof</name><argument_list pos:start="35:22" pos:end="35:28">(<argument pos:start="35:23" pos:end="35:27"><expr pos:start="35:23" pos:end="35:27"><name pos:start="35:23" pos:end="35:27"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:27">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:31"><block_content pos:start="37:13" pos:end="37:31">

            <return pos:start="37:13" pos:end="37:31">return <expr pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:90"><expr pos:start="39:9" pos:end="39:89"><call pos:start="39:9" pos:end="39:89"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:89">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="39:33" pos:end="39:70"><expr pos:start="39:33" pos:end="39:70"><literal type="string" pos:start="39:33" pos:end="39:60">"read fragments, offset 0x%"</literal><name pos:start="39:61" pos:end="39:66">PRIx64</name><literal type="string" pos:start="39:67" pos:end="39:70">"\n"</literal></expr></argument>, <argument pos:start="39:73" pos:end="39:88"><expr pos:start="39:73" pos:end="39:88"><call pos:start="39:73" pos:end="39:88"><name pos:start="39:73" pos:end="39:81">avio_tell</name><argument_list pos:start="39:82" pos:end="39:88">(<argument pos:start="39:83" pos:end="39:87"><expr pos:start="39:83" pos:end="39:87"><name pos:start="39:83" pos:end="39:87"><name pos:start="39:83" pos:end="39:83">s</name><operator pos:start="39:84" pos:end="39:85">-&gt;</operator><name pos:start="39:86" pos:end="39:87">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:19">goto <name pos:start="41:14" pos:end="41:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:6">sc</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:11">st</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">priv_data</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:76">/* must be done just before reading, to avoid infinite loop on sample */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:6">sc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:22">current_sample</name></name><operator pos:start="49:23" pos:end="49:24">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">mov</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:27">next_root_atom</name></name></expr>)</condition> <block pos:start="53:30" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:80">

        <expr_stmt pos:start="55:9" pos:end="55:62"><expr pos:start="55:9" pos:end="55:61"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:14">sample</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:19">pos</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:61"><name pos:start="55:23" pos:end="55:27">FFMIN</name><argument_list pos:start="55:28" pos:end="55:61">(<argument pos:start="55:29" pos:end="55:39"><expr pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:34">sample</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:39">pos</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:60"><expr pos:start="55:42" pos:end="55:60"><name pos:start="55:42" pos:end="55:60"><name pos:start="55:42" pos:end="55:44">mov</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:60">next_root_atom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:80"><expr pos:start="57:9" pos:end="57:79"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:14">sample</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">size</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:79"><name pos:start="57:24" pos:end="57:28">FFMIN</name><argument_list pos:start="57:29" pos:end="57:79">(<argument pos:start="57:30" pos:end="57:41"><expr pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:35">sample</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">size</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:78"><expr pos:start="57:44" pos:end="57:78"><operator pos:start="57:44" pos:end="57:44">(</operator><name pos:start="57:45" pos:end="57:63"><name pos:start="57:45" pos:end="57:47">mov</name><operator pos:start="57:48" pos:end="57:49">-&gt;</operator><name pos:start="57:50" pos:end="57:63">next_root_atom</name></name> <operator pos:start="57:65" pos:end="57:65">-</operator> <name pos:start="57:67" pos:end="57:77"><name pos:start="57:67" pos:end="57:72">sample</name><operator pos:start="57:73" pos:end="57:74">-&gt;</operator><name pos:start="57:75" pos:end="57:77">pos</name></name><operator pos:start="57:78" pos:end="57:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="123:5"><if pos:start="63:5" pos:end="123:5">if <condition pos:start="63:8" pos:end="63:37">(<expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:19">discard</name></name> <operator pos:start="63:21" pos:end="63:22">!=</operator> <name pos:start="63:24" pos:end="63:36">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="63:39" pos:end="123:5">{<block_content pos:start="65:9" pos:end="122:0">

        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="73:9">if <condition pos:start="65:12" pos:end="65:68">(<expr pos:start="65:13" pos:end="65:67"><call pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:21">avio_seek</name><argument_list pos:start="65:22" pos:end="65:52">(<argument pos:start="65:23" pos:end="65:28"><expr pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:24">sc</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:28">pb</name></name></expr></argument>, <argument pos:start="65:31" pos:end="65:41"><expr pos:start="65:31" pos:end="65:41"><name pos:start="65:31" pos:end="65:41"><name pos:start="65:31" pos:end="65:36">sample</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:41">pos</name></name></expr></argument>, <argument pos:start="65:44" pos:end="65:51"><expr pos:start="65:44" pos:end="65:51"><name pos:start="65:44" pos:end="65:51">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="65:54" pos:end="65:55">!=</operator> <name pos:start="65:57" pos:end="65:67"><name pos:start="65:57" pos:end="65:62">sample</name><operator pos:start="65:63" pos:end="65:64">-&gt;</operator><name pos:start="65:65" pos:end="65:67">pos</name></name></expr>)</condition> <block pos:start="65:70" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:39">

            <expr_stmt pos:start="67:13" pos:end="69:45"><expr pos:start="67:13" pos:end="69:44"><call pos:start="67:13" pos:end="69:44"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="69:44">(<argument pos:start="67:20" pos:end="67:26"><expr pos:start="67:20" pos:end="67:26"><name pos:start="67:20" pos:end="67:26"><name pos:start="67:20" pos:end="67:22">mov</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:26">fc</name></name></expr></argument>, <argument pos:start="67:29" pos:end="67:40"><expr pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:43" pos:end="67:89"><expr pos:start="67:43" pos:end="67:89"><literal type="string" pos:start="67:43" pos:end="67:65">"stream %d, offset 0x%"</literal><name pos:start="67:66" pos:end="67:71">PRIx64</name><literal type="string" pos:start="67:72" pos:end="67:89">": partial file\n"</literal></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:30"><expr pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:21">sc</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:30">ffindex</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:43"><expr pos:start="69:33" pos:end="69:43"><name pos:start="69:33" pos:end="69:43"><name pos:start="69:33" pos:end="69:38">sample</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:43">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:39">return <expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:54"><name pos:start="75:15" pos:end="75:27">av_get_packet</name><argument_list pos:start="75:28" pos:end="75:54">(<argument pos:start="75:29" pos:end="75:34"><expr pos:start="75:29" pos:end="75:34"><name pos:start="75:29" pos:end="75:34"><name pos:start="75:29" pos:end="75:30">sc</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:34">pb</name></name></expr></argument>, <argument pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:39">pkt</name></expr></argument>, <argument pos:start="75:42" pos:end="75:53"><expr pos:start="75:42" pos:end="75:53"><name pos:start="75:42" pos:end="75:53"><name pos:start="75:42" pos:end="75:47">sample</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:23"><if pos:start="77:9" pos:end="79:23">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:23"><block_content pos:start="79:13" pos:end="79:23">

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="104:0"><if pos:start="81:9" pos:end="104:0">if <condition pos:start="81:12" pos:end="81:28">(<expr pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:14">sc</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:27">has_palette</name></name></expr>)</condition> <block pos:start="81:30" pos:end="104:0">{<block_content pos:start="83:13" pos:end="99:13">

            <decl_stmt pos:start="83:13" pos:end="83:25"><decl pos:start="83:13" pos:end="83:24"><type pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:19">uint8_t</name> <modifier pos:start="83:21" pos:end="83:21">*</modifier></type><name pos:start="83:22" pos:end="83:24">pal</name></decl>;</decl_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:84"><expr pos:start="87:13" pos:end="87:83"><name pos:start="87:13" pos:end="87:15">pal</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:83"><name pos:start="87:19" pos:end="87:41">av_packet_new_side_data</name><argument_list pos:start="87:42" pos:end="87:83">(<argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:45">pkt</name></expr></argument>, <argument pos:start="87:48" pos:end="87:66"><expr pos:start="87:48" pos:end="87:66"><name pos:start="87:48" pos:end="87:66">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="87:69" pos:end="87:82"><expr pos:start="87:69" pos:end="87:82"><name pos:start="87:69" pos:end="87:82">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="99:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:21">(<expr pos:start="89:17" pos:end="89:20"><operator pos:start="89:17" pos:end="89:17">!</operator><name pos:start="89:18" pos:end="89:20">pal</name></expr>)</condition> <block pos:start="89:23" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:83">

                <expr_stmt pos:start="91:17" pos:end="91:83"><expr pos:start="91:17" pos:end="91:82"><call pos:start="91:17" pos:end="91:82"><name pos:start="91:17" pos:end="91:22">av_log</name><argument_list pos:start="91:23" pos:end="91:82">(<argument pos:start="91:24" pos:end="91:30"><expr pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:26">mov</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:30">fc</name></name></expr></argument>, <argument pos:start="91:33" pos:end="91:44"><expr pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:47" pos:end="91:81"><expr pos:start="91:47" pos:end="91:81"><literal type="string" pos:start="91:47" pos:end="91:81">"Cannot append palette to packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="99:13">else <block pos:start="93:20" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:36">

                <expr_stmt pos:start="95:17" pos:end="95:57"><expr pos:start="95:17" pos:end="95:56"><call pos:start="95:17" pos:end="95:56"><name pos:start="95:17" pos:end="95:22">memcpy</name><argument_list pos:start="95:23" pos:end="95:56">(<argument pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">pal</name></expr></argument>, <argument pos:start="95:29" pos:end="95:39"><expr pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:30">sc</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:39">palette</name></name></expr></argument>, <argument pos:start="95:42" pos:end="95:55"><expr pos:start="95:42" pos:end="95:55"><name pos:start="95:42" pos:end="95:55">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:36"><expr pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:18">sc</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:31">has_palette</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="103:1" pos:end="103:21">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:21">CONFIG_DV_DEMUXER</name></expr></cpp:if>

        <if_stmt pos:start="105:9" pos:end="122:0"><if pos:start="105:9" pos:end="122:0">if <condition pos:start="105:12" pos:end="105:52">(<expr pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:15">mov</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:25">dv_demux</name></name> <operator pos:start="105:27" pos:end="105:28">&amp;&amp;</operator> <name pos:start="105:30" pos:end="105:51"><name pos:start="105:30" pos:end="105:31">sc</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:51">dv_audio_container</name></name></expr>)</condition> <block pos:start="105:54" pos:end="122:0">{<block_content pos:start="107:13" pos:end="117:27">

            <expr_stmt pos:start="107:13" pos:end="107:89"><expr pos:start="107:13" pos:end="107:88"><call pos:start="107:13" pos:end="107:88"><name pos:start="107:13" pos:end="107:36">avpriv_dv_produce_packet</name><argument_list pos:start="107:37" pos:end="107:88">(<argument pos:start="107:38" pos:end="107:50"><expr pos:start="107:38" pos:end="107:50"><name pos:start="107:38" pos:end="107:50"><name pos:start="107:38" pos:end="107:40">mov</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:50">dv_demux</name></name></expr></argument>, <argument pos:start="107:53" pos:end="107:55"><expr pos:start="107:53" pos:end="107:55"><name pos:start="107:53" pos:end="107:55">pkt</name></expr></argument>, <argument pos:start="107:58" pos:end="107:66"><expr pos:start="107:58" pos:end="107:66"><name pos:start="107:58" pos:end="107:66"><name pos:start="107:58" pos:end="107:60">pkt</name><operator pos:start="107:61" pos:end="107:62">-&gt;</operator><name pos:start="107:63" pos:end="107:66">data</name></name></expr></argument>, <argument pos:start="107:69" pos:end="107:77"><expr pos:start="107:69" pos:end="107:77"><name pos:start="107:69" pos:end="107:77"><name pos:start="107:69" pos:end="107:71">pkt</name><operator pos:start="107:72" pos:end="107:73">-&gt;</operator><name pos:start="107:74" pos:end="107:77">size</name></name></expr></argument>, <argument pos:start="107:80" pos:end="107:87"><expr pos:start="107:80" pos:end="107:87"><name pos:start="107:80" pos:end="107:87"><name pos:start="107:80" pos:end="107:82">pkt</name><operator pos:start="107:83" pos:end="107:84">-&gt;</operator><name pos:start="107:85" pos:end="107:87">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:33"><expr pos:start="109:13" pos:end="109:32"><call pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:20">av_freep</name><argument_list pos:start="109:21" pos:end="109:32">(<argument pos:start="109:22" pos:end="109:31"><expr pos:start="109:22" pos:end="109:31"><operator pos:start="109:22" pos:end="109:22">&amp;</operator><name pos:start="109:23" pos:end="109:31"><name pos:start="109:23" pos:end="109:25">pkt</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:31">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:21"><name pos:start="111:13" pos:end="111:15">pkt</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:21">size</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <literal type="number" pos:start="111:25" pos:end="111:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:59"><expr pos:start="113:13" pos:end="113:58"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:58"><name pos:start="113:19" pos:end="113:38">avpriv_dv_get_packet</name><argument_list pos:start="113:39" pos:end="113:58">(<argument pos:start="113:40" pos:end="113:52"><expr pos:start="113:40" pos:end="113:52"><name pos:start="113:40" pos:end="113:52"><name pos:start="113:40" pos:end="113:42">mov</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:52">dv_demux</name></name></expr></argument>, <argument pos:start="113:55" pos:end="113:57"><expr pos:start="113:55" pos:end="113:57"><name pos:start="113:55" pos:end="113:57">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:27"><if pos:start="115:13" pos:end="117:27">if <condition pos:start="115:16" pos:end="115:24">(<expr pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">&lt;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:27"><block_content pos:start="117:17" pos:end="117:27">

                <return pos:start="117:17" pos:end="117:27">return <expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:7">pkt</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:21">stream_index</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:35"><name pos:start="127:25" pos:end="127:26">sc</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:35">ffindex</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:33"><expr pos:start="129:5" pos:end="129:32"><name pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:7">pkt</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:12">dts</name></name> <operator pos:start="129:14" pos:end="129:14">=</operator> <name pos:start="129:16" pos:end="129:32"><name pos:start="129:16" pos:end="129:21">sample</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:32">timestamp</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="163:5"><if pos:start="131:5" pos:end="153:5">if <condition pos:start="131:8" pos:end="131:57">(<expr pos:start="131:9" pos:end="131:56"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:10">sc</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:21">ctts_data</name></name> <operator pos:start="131:23" pos:end="131:24">&amp;&amp;</operator> <name pos:start="131:26" pos:end="131:39"><name pos:start="131:26" pos:end="131:27">sc</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:39">ctts_index</name></name> <operator pos:start="131:41" pos:end="131:41">&lt;</operator> <name pos:start="131:43" pos:end="131:56"><name pos:start="131:43" pos:end="131:44">sc</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:56">ctts_count</name></name></expr>)</condition> <block pos:start="131:59" pos:end="153:5">{<block_content pos:start="133:9" pos:end="151:38">

        <expr_stmt pos:start="133:9" pos:end="133:85"><expr pos:start="133:9" pos:end="133:84"><name pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:11">pkt</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:16">pts</name></name> <operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:22">pkt</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:27">dts</name></name> <operator pos:start="133:29" pos:end="133:29">+</operator> <name pos:start="133:31" pos:end="133:43"><name pos:start="133:31" pos:end="133:32">sc</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:43">dts_shift</name></name> <operator pos:start="133:45" pos:end="133:45">+</operator> <name pos:start="133:47" pos:end="133:75"><name pos:start="133:47" pos:end="133:48">sc</name><operator pos:start="133:49" pos:end="133:50">-&gt;</operator><name pos:start="133:51" pos:end="133:59">ctts_data</name><index pos:start="133:60" pos:end="133:75">[<expr pos:start="133:61" pos:end="133:74"><name pos:start="133:61" pos:end="133:74"><name pos:start="133:61" pos:end="133:62">sc</name><operator pos:start="133:63" pos:end="133:64">-&gt;</operator><name pos:start="133:65" pos:end="133:74">ctts_index</name></name></expr>]</index></name><operator pos:start="133:76" pos:end="133:76">.</operator><name pos:start="133:77" pos:end="133:84">duration</name></expr>;</expr_stmt>

        <comment type="block" pos:start="135:9" pos:end="135:33">/* update ctts context */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:26"><expr pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:10">sc</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:23">ctts_sample</name></name><operator pos:start="137:24" pos:end="137:25">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="147:9"><if pos:start="139:9" pos:end="147:9">if <condition pos:start="139:12" pos:end="141:67">(<expr pos:start="139:13" pos:end="141:66"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:14">sc</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:26">ctts_index</name></name> <operator pos:start="139:28" pos:end="139:28">&lt;</operator> <name pos:start="139:30" pos:end="139:43"><name pos:start="139:30" pos:end="139:31">sc</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:43">ctts_count</name></name> <operator pos:start="139:45" pos:end="139:46">&amp;&amp;</operator>

            <name pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:14">sc</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:25">ctts_data</name><index pos:start="141:26" pos:end="141:41">[<expr pos:start="141:27" pos:end="141:40"><name pos:start="141:27" pos:end="141:40"><name pos:start="141:27" pos:end="141:28">sc</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:40">ctts_index</name></name></expr>]</index></name><operator pos:start="141:42" pos:end="141:42">.</operator><name pos:start="141:43" pos:end="141:47">count</name> <operator pos:start="141:49" pos:end="141:50">==</operator> <name pos:start="141:52" pos:end="141:66"><name pos:start="141:52" pos:end="141:53">sc</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:66">ctts_sample</name></name></expr>)</condition> <block pos:start="141:69" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:32">

            <expr_stmt pos:start="143:13" pos:end="143:29"><expr pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:14">sc</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:26">ctts_index</name></name><operator pos:start="143:27" pos:end="143:28">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:32"><expr pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:14">sc</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:27">ctts_sample</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="151:38"><if pos:start="149:9" pos:end="151:38">if <condition pos:start="149:12" pos:end="149:26">(<expr pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:14">sc</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:25">wrong_dts</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:38"><block_content pos:start="151:13" pos:end="151:38">

            <expr_stmt pos:start="151:13" pos:end="151:38"><expr pos:start="151:13" pos:end="151:37"><name pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">pkt</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:20">dts</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:37">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="163:5">else <block pos:start="153:12" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:28">

        <decl_stmt pos:start="155:9" pos:end="157:75"><decl pos:start="155:9" pos:end="157:74"><type pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:15">int64_t</name></type> <name pos:start="155:17" pos:end="155:24">next_dts</name> <init pos:start="155:26" pos:end="157:74">= <expr pos:start="155:28" pos:end="157:74"><ternary pos:start="155:28" pos:end="157:74"><condition pos:start="155:28" pos:end="155:72"><expr pos:start="155:28" pos:end="155:70"><operator pos:start="155:28" pos:end="155:28">(</operator><name pos:start="155:29" pos:end="155:46"><name pos:start="155:29" pos:end="155:30">sc</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:46">current_sample</name></name> <operator pos:start="155:48" pos:end="155:48">&lt;</operator> <name pos:start="155:50" pos:end="155:69"><name pos:start="155:50" pos:end="155:51">st</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:69">nb_index_entries</name></name><operator pos:start="155:70" pos:end="155:70">)</operator></expr> ?</condition><then pos:start="157:13" pos:end="157:59">

            <expr pos:start="157:13" pos:end="157:59"><name pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:14">st</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:29">index_entries</name><index pos:start="157:30" pos:end="157:49">[<expr pos:start="157:31" pos:end="157:48"><name pos:start="157:31" pos:end="157:48"><name pos:start="157:31" pos:end="157:32">sc</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:48">current_sample</name></name></expr>]</index></name><operator pos:start="157:50" pos:end="157:50">.</operator><name pos:start="157:51" pos:end="157:59">timestamp</name></expr> </then><else pos:start="157:61" pos:end="157:74">: <expr pos:start="157:63" pos:end="157:74"><name pos:start="157:63" pos:end="157:74"><name pos:start="157:63" pos:end="157:64">st</name><operator pos:start="157:65" pos:end="157:66">-&gt;</operator><name pos:start="157:67" pos:end="157:74">duration</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:44"><expr pos:start="159:9" pos:end="159:43"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:11">pkt</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:21">duration</name></name> <operator pos:start="159:23" pos:end="159:23">=</operator> <name pos:start="159:25" pos:end="159:32">next_dts</name> <operator pos:start="159:34" pos:end="159:34">-</operator> <name pos:start="159:36" pos:end="159:43"><name pos:start="159:36" pos:end="159:38">pkt</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:43">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:28"><expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:11">pkt</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:16">pts</name></name> <operator pos:start="161:18" pos:end="161:18">=</operator> <name pos:start="161:20" pos:end="161:27"><name pos:start="161:20" pos:end="161:22">pkt</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:27">dts</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="165:5" pos:end="167:19"><if pos:start="165:5" pos:end="167:19">if <condition pos:start="165:8" pos:end="165:37">(<expr pos:start="165:9" pos:end="165:36"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:10">st</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:19">discard</name></name> <operator pos:start="165:21" pos:end="165:22">==</operator> <name pos:start="165:24" pos:end="165:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:19"><block_content pos:start="167:9" pos:end="167:19">

        <goto pos:start="167:9" pos:end="167:19">goto <name pos:start="167:14" pos:end="167:18">retry</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:73"><expr pos:start="169:5" pos:end="169:72"><name pos:start="169:5" pos:end="169:14"><name pos:start="169:5" pos:end="169:7">pkt</name><operator pos:start="169:8" pos:end="169:9">-&gt;</operator><name pos:start="169:10" pos:end="169:14">flags</name></name> <operator pos:start="169:16" pos:end="169:17">|=</operator> <ternary pos:start="169:19" pos:end="169:72"><condition pos:start="169:19" pos:end="169:52"><expr pos:start="169:19" pos:end="169:50"><name pos:start="169:19" pos:end="169:31"><name pos:start="169:19" pos:end="169:24">sample</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:31">flags</name></name> <operator pos:start="169:33" pos:end="169:33">&amp;</operator> <name pos:start="169:35" pos:end="169:50">AVINDEX_KEYFRAME</name></expr> ?</condition><then pos:start="169:54" pos:end="169:68"> <expr pos:start="169:54" pos:end="169:68"><name pos:start="169:54" pos:end="169:68">AV_PKT_FLAG_KEY</name></expr> </then><else pos:start="169:70" pos:end="169:72">: <expr pos:start="169:72" pos:end="169:72"><literal type="number" pos:start="169:72" pos:end="169:72">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:27"><expr pos:start="171:5" pos:end="171:26"><name pos:start="171:5" pos:end="171:12"><name pos:start="171:5" pos:end="171:7">pkt</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:12">pos</name></name> <operator pos:start="171:14" pos:end="171:14">=</operator> <name pos:start="171:16" pos:end="171:26"><name pos:start="171:16" pos:end="171:21">sample</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:26">pos</name></name></expr>;</expr_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
