<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23547.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">vnc_client_write</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:26">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:19">vnc_lock_output</name><argument_list pos:start="9:20" pos:end="9:23">(<argument pos:start="9:21" pos:end="9:22"><expr pos:start="9:21" pos:end="9:22"><name pos:start="9:21" pos:end="9:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="19:13">(<expr pos:start="11:9" pos:end="18:0"><name pos:start="11:9" pos:end="14:0"><name pos:start="11:9" pos:end="11:10">vs</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:18">output</name><operator pos:start="11:19" pos:end="11:19">.</operator><name pos:start="11:20" pos:end="14:0">offset</name></name>

<cpp:ifdef pos:start="13:1" pos:end="13:20">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:20">CONFIG_VNC_WS</name></cpp:ifdef>

            <operator pos:start="15:13" pos:end="15:14">||</operator> <name pos:start="15:16" pos:end="18:0"><name pos:start="15:16" pos:end="15:17">vs</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:28">ws_output</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="18:0">offset</name></name></expr>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

            )</condition> <block pos:start="19:15" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:40">

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:31">vnc_client_write_locked</name><argument_list pos:start="21:32" pos:end="21:39">(<argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="27:5">else if <condition pos:start="23:15" pos:end="23:31">(<expr pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:17">vs</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">csock</name></name> <operator pos:start="23:26" pos:end="23:27">!=</operator> <operator pos:start="23:29" pos:end="23:29">-</operator><literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr>)</condition> <block pos:start="23:33" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:66">

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:27">qemu_set_fd_handler</name><argument_list pos:start="25:28" pos:end="25:65">(<argument pos:start="25:29" pos:end="25:37"><expr pos:start="25:29" pos:end="25:37"><name pos:start="25:29" pos:end="25:37"><name pos:start="25:29" pos:end="25:30">vs</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:37">csock</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:54"><expr pos:start="25:40" pos:end="25:54"><name pos:start="25:40" pos:end="25:54">vnc_client_read</name></expr></argument>, <argument pos:start="25:57" pos:end="25:60"><expr pos:start="25:57" pos:end="25:60"><name pos:start="25:57" pos:end="25:60">NULL</name></expr></argument>, <argument pos:start="25:63" pos:end="25:64"><expr pos:start="25:63" pos:end="25:64"><name pos:start="25:63" pos:end="25:64">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:21">vnc_unlock_output</name><argument_list pos:start="29:22" pos:end="29:25">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
