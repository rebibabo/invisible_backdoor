<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18286.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">xenstore_record_dm_state</name><parameter_list pos:start="1:37" pos:end="1:77">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:53">xs_handle</name></name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">xs</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:76"><decl pos:start="1:60" pos:end="1:76"><type pos:start="1:60" pos:end="1:76"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">state</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:13">path</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">50</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:19">(<expr pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:10">xs</name> <operator pos:start="9:12" pos:end="9:13">==</operator> <name pos:start="9:15" pos:end="9:18">NULL</name></expr>)</condition> <block pos:start="9:21" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:16">

        <expr_stmt pos:start="11:9" pos:end="11:65"><expr pos:start="11:9" pos:end="11:64"><call pos:start="11:9" pos:end="11:64"><name pos:start="11:9" pos:end="11:15">fprintf</name><argument_list pos:start="11:16" pos:end="11:64">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">stderr</name></expr></argument>, <argument pos:start="11:25" pos:end="11:63"><expr pos:start="11:25" pos:end="11:63"><literal type="string" pos:start="11:25" pos:end="11:63">"xenstore connection not initialized\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><call pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">exit</name><argument_list pos:start="13:13" pos:end="13:15">(<argument pos:start="13:14" pos:end="13:14"><expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:86"><expr pos:start="19:5" pos:end="19:85"><call pos:start="19:5" pos:end="19:85"><name pos:start="19:5" pos:end="19:12">snprintf</name><argument_list pos:start="19:13" pos:end="19:85">(<argument pos:start="19:14" pos:end="19:17"><expr pos:start="19:14" pos:end="19:17"><name pos:start="19:14" pos:end="19:17">path</name></expr></argument>, <argument pos:start="19:20" pos:end="19:32"><expr pos:start="19:20" pos:end="19:32"><sizeof pos:start="19:20" pos:end="19:32">sizeof <argument_list pos:start="19:27" pos:end="19:32">(<argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:35" pos:end="19:73"><expr pos:start="19:35" pos:end="19:73"><literal type="string" pos:start="19:35" pos:end="19:73">"/local/domain/0/device-model/%u/state"</literal></expr></argument>, <argument pos:start="19:76" pos:end="19:84"><expr pos:start="19:76" pos:end="19:84"><name pos:start="19:76" pos:end="19:84">xen_domid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:60">(<expr pos:start="21:9" pos:end="21:59"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:59"><name pos:start="21:10" pos:end="21:17">xs_write</name><argument_list pos:start="21:18" pos:end="21:59">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">xs</name></expr></argument>, <argument pos:start="21:23" pos:end="21:30"><expr pos:start="21:23" pos:end="21:30"><name pos:start="21:23" pos:end="21:30">XBT_NULL</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">path</name></expr></argument>, <argument pos:start="21:39" pos:end="21:43"><expr pos:start="21:39" pos:end="21:43"><name pos:start="21:39" pos:end="21:43">state</name></expr></argument>, <argument pos:start="21:46" pos:end="21:58"><expr pos:start="21:46" pos:end="21:58"><call pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:51">strlen</name><argument_list pos:start="21:52" pos:end="21:58">(<argument pos:start="21:53" pos:end="21:57"><expr pos:start="21:53" pos:end="21:57"><name pos:start="21:53" pos:end="21:57">state</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:62" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:16">

        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><call pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="23:53">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:52"><expr pos:start="23:25" pos:end="23:52"><literal type="string" pos:start="23:25" pos:end="23:52">"error recording dm state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:15">(<argument pos:start="25:14" pos:end="25:14"><expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
