<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8749.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">gtod_load</name><parameter_list pos:start="1:14" pos:end="1:56">(<parameter pos:start="1:15" pos:end="1:25"><decl pos:start="1:15" pos:end="1:25"><type pos:start="1:15" pos:end="1:25"><name pos:start="1:15" pos:end="1:22">QEMUFile</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:25">f</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:55">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:20">tod_low</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20">tod_high</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:57">(<expr pos:start="13:9" pos:end="13:56"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:21">qemu_get_byte</name><argument_list pos:start="13:22" pos:end="13:24">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">f</name></expr></argument>)</argument_list></call> <operator pos:start="13:26" pos:end="13:27">==</operator> <name pos:start="13:29" pos:end="13:56">S390_TOD_CLOCK_VALUE_MISSING</name></expr>)</condition> <block pos:start="13:59" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:17">

        <expr_stmt pos:start="15:9" pos:end="17:54"><expr pos:start="15:9" pos:end="17:53"><call pos:start="15:9" pos:end="17:53"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="17:53">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="17:52"><expr pos:start="15:25" pos:end="17:52"><literal type="string" pos:start="15:25" pos:end="15:76">"WARNING: Guest clock was not migrated. This could "</literal>

                        <literal type="string" pos:start="17:25" pos:end="17:52">"cause the guest to hang.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:12">tod_high</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:28">qemu_get_byte</name><argument_list pos:start="25:29" pos:end="25:31">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:11">tod_low</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:27">qemu_get_be64</name><argument_list pos:start="27:28" pos:end="27:30">(<argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:5">r</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:22">s390_set_clock</name><argument_list pos:start="31:23" pos:end="31:43">(<argument pos:start="31:24" pos:end="31:32"><expr pos:start="31:24" pos:end="31:32"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:32">tod_high</name></expr></argument>, <argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:42">tod_low</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:10">(<expr pos:start="33:9" pos:end="33:9"><name pos:start="33:9" pos:end="33:9">r</name></expr>)</condition> <block pos:start="33:12" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:51">

        <expr_stmt pos:start="35:9" pos:end="39:51"><expr pos:start="35:9" pos:end="39:50"><call pos:start="35:9" pos:end="39:50"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="39:50">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="39:46"><expr pos:start="35:25" pos:end="39:46"><literal type="string" pos:start="35:25" pos:end="35:68">"WARNING: Unable to set guest clock value. "</literal>

                        <literal type="string" pos:start="37:25" pos:end="37:77">"s390_get_clock returned error %d. This could cause "</literal>

                        <literal type="string" pos:start="39:25" pos:end="39:46">"the guest to hang.\n"</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
