<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23940.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">read_table</name><parameter_list pos:start="1:22" pos:end="5:64">(<parameter pos:start="1:23" pos:end="1:44"><decl pos:start="1:23" pos:end="1:44"><type pos:start="1:23" pos:end="1:44"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:54">AVStream</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">st</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="5:63"><function_decl pos:start="3:24" pos:end="5:63"><type pos:start="3:24" pos:end="3:26"><name pos:start="3:24" pos:end="3:26">int</name></type> (<modifier pos:start="3:29" pos:end="3:29">*</modifier><name pos:start="3:30" pos:end="3:34">parse</name>)<parameter_list pos:start="3:36" pos:end="5:63">(<parameter pos:start="3:37" pos:end="3:58"><decl pos:start="3:37" pos:end="3:58"><type pos:start="3:37" pos:end="3:58"><name pos:start="3:37" pos:end="3:51">AVFormatContext</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:58">avctx</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:68">AVStream</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:72">st</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:52"><decl pos:start="5:37" pos:end="5:52"><type pos:start="5:37" pos:end="5:52"><specifier pos:start="5:37" pos:end="5:41">const</specifier> <name pos:start="5:43" pos:end="5:46">char</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:52">name</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:62"><decl pos:start="5:55" pos:end="5:62"><type pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:62">size</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">count</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:16">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:31">= <expr pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:27">avctx</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><call pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:13">avio_skip</name><argument_list pos:start="13:14" pos:end="13:20">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">pb</name></expr></argument>, <argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:9">count</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:21">avio_rb32</name><argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:13">avio_skip</name><argument_list pos:start="17:14" pos:end="17:20">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>, <argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="47:5">for <control pos:start="19:9" pos:end="19:31">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:25">count</name></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">i</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr>)</control> <block pos:start="19:33" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:9">

        <decl_stmt pos:start="21:9" pos:end="21:22"><decl pos:start="21:9" pos:end="21:21"><type pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">char</name></type> <name pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:17">name</name><index pos:start="21:18" pos:end="21:21">[<expr pos:start="21:19" pos:end="21:20"><literal type="number" pos:start="21:19" pos:end="21:20">17</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:17"><decl pos:start="23:9" pos:end="23:16"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:16">size</name></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:17">avio_read</name><argument_list pos:start="25:18" pos:end="25:31">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>, <argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">name</name></expr></argument>, <argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><literal type="number" pos:start="25:29" pos:end="25:30">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:12">name</name><index pos:start="27:13" pos:end="27:30">[<expr pos:start="27:14" pos:end="27:29"><sizeof pos:start="27:14" pos:end="27:25">sizeof<argument_list pos:start="27:20" pos:end="27:25">(<argument pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:24">name</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:27" pos:end="27:27">-</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>]</index></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:24">avio_rb32</name><argument_list pos:start="29:25" pos:end="29:28">(<argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><name pos:start="29:26" pos:end="29:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:16">size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:39">

            <expr_stmt pos:start="33:13" pos:end="33:76"><expr pos:start="33:13" pos:end="33:75"><call pos:start="33:13" pos:end="33:75"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:75">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">avctx</name></expr></argument>, <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:41" pos:end="33:68"><expr pos:start="33:41" pos:end="33:68"><literal type="string" pos:start="33:41" pos:end="33:68">"entry size %d is invalid\n"</literal></expr></argument>, <argument pos:start="33:71" pos:end="33:74"><expr pos:start="33:71" pos:end="33:74"><name pos:start="33:71" pos:end="33:74">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:39">return <expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:45">(<expr pos:start="39:13" pos:end="39:44"><call pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:17">parse</name><argument_list pos:start="39:18" pos:end="39:40">(<argument pos:start="39:19" pos:end="39:23"><expr pos:start="39:19" pos:end="39:23"><name pos:start="39:19" pos:end="39:23">avctx</name></expr></argument>, <argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">st</name></expr></argument>, <argument pos:start="39:30" pos:end="39:33"><expr pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:33">name</name></expr></argument>, <argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">size</name></expr></argument>)</argument_list></call> <operator pos:start="39:42" pos:end="39:42">&lt;</operator> <literal type="number" pos:start="39:44" pos:end="39:44">0</literal></expr>)</condition> <block pos:start="39:47" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:32">

            <expr_stmt pos:start="41:13" pos:end="41:62"><expr pos:start="41:13" pos:end="41:61"><call pos:start="41:13" pos:end="41:61"><name pos:start="41:13" pos:end="41:33">avpriv_request_sample</name><argument_list pos:start="41:34" pos:end="41:61">(<argument pos:start="41:35" pos:end="41:39"><expr pos:start="41:35" pos:end="41:39"><name pos:start="41:35" pos:end="41:39">avctx</name></expr></argument>, <argument pos:start="41:42" pos:end="41:54"><expr pos:start="41:42" pos:end="41:54"><literal type="string" pos:start="41:42" pos:end="41:54">"Variable %s"</literal></expr></argument>, <argument pos:start="41:57" pos:end="41:60"><expr pos:start="41:57" pos:end="41:60"><name pos:start="41:57" pos:end="41:60">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:21">avio_skip</name><argument_list pos:start="43:22" pos:end="43:31">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>, <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
