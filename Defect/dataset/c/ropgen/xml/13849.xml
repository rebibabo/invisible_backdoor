<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13849.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">gxf_read_index</name><parameter_list pos:start="1:27" pos:end="1:59">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:58">pkt_len</name></decl></parameter>)</parameter_list> <block pos:start="1:61" pos:end="53:1">{<block_content pos:start="3:5" pos:end="51:27">

    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">AVIOContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:19">pb</name> <init pos:start="3:21" pos:end="3:27">= <expr pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:20">s</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:29">streams</name><index pos:start="5:30" pos:end="5:32">[<expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:27">fields_per_map</name> <init pos:start="7:29" pos:end="7:43">= <expr pos:start="7:31" pos:end="7:43"><call pos:start="7:31" pos:end="7:43"><name pos:start="7:31" pos:end="7:39">avio_rl32</name><argument_list pos:start="7:40" pos:end="7:43">(<argument pos:start="7:41" pos:end="7:42"><expr pos:start="7:41" pos:end="7:42"><name pos:start="7:41" pos:end="7:42">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">map_cnt</name> <init pos:start="9:22" pos:end="9:36">= <expr pos:start="9:24" pos:end="9:36"><call pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:32">avio_rl32</name><argument_list pos:start="9:33" pos:end="9:36">(<argument pos:start="9:34" pos:end="9:35"><expr pos:start="9:34" pos:end="9:35"><name pos:start="9:34" pos:end="9:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:11">pkt_len</name> <operator pos:start="13:13" pos:end="13:14">-=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">flags</name></name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <name pos:start="15:20" pos:end="15:36">AVFMT_FLAG_IGNIDX</name></expr>)</condition> <block pos:start="15:39" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><call pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:17">avio_skip</name><argument_list pos:start="17:18" pos:end="17:30">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">pb</name></expr></argument>, <argument pos:start="17:23" pos:end="17:29"><expr pos:start="17:23" pos:end="17:29"><name pos:start="17:23" pos:end="17:29">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:15">map_cnt</name> <operator pos:start="23:17" pos:end="23:17">&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:22">1000</literal></expr>)</condition> <block pos:start="23:25" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:23">

        <expr_stmt pos:start="25:9" pos:end="25:86"><expr pos:start="25:9" pos:end="25:85"><call pos:start="25:9" pos:end="25:85"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:85">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:33" pos:end="25:66"><expr pos:start="25:33" pos:end="25:66"><literal type="string" pos:start="25:33" pos:end="25:66">"too many index entries %u (%x)\n"</literal></expr></argument>, <argument pos:start="25:69" pos:end="25:75"><expr pos:start="25:69" pos:end="25:75"><name pos:start="25:69" pos:end="25:75">map_cnt</name></expr></argument>, <argument pos:start="25:78" pos:end="25:84"><expr pos:start="25:78" pos:end="25:84"><name pos:start="25:78" pos:end="25:84">map_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:15">map_cnt</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:22">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:15">pkt_len</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">4</literal> <operator pos:start="31:21" pos:end="31:21">*</operator> <name pos:start="31:23" pos:end="31:29">map_cnt</name></expr>)</condition> <block pos:start="31:32" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:15">

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><call pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:57">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:56"><expr pos:start="33:33" pos:end="33:56"><literal type="string" pos:start="33:33" pos:end="33:56">"invalid index length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:30">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:29"><expr pos:start="35:23" pos:end="35:29"><name pos:start="35:23" pos:end="35:29">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:11">pkt_len</name> <operator pos:start="41:13" pos:end="41:14">-=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">4</literal> <operator pos:start="41:18" pos:end="41:18">*</operator> <name pos:start="41:20" pos:end="41:26">map_cnt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:22">av_add_index_entry</name><argument_list pos:start="43:23" pos:end="43:41">(<argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">st</name></expr></argument>, <argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="49:70">for <control pos:start="45:9" pos:end="45:33">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:27">map_cnt</name></expr>;</condition> <incr pos:start="45:30" pos:end="45:32"><expr pos:start="45:30" pos:end="45:32"><name pos:start="45:30" pos:end="45:30">i</name><operator pos:start="45:31" pos:end="45:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="49:70"><block_content pos:start="47:9" pos:end="49:70">

        <expr_stmt pos:start="47:9" pos:end="49:70"><expr pos:start="47:9" pos:end="49:69"><call pos:start="47:9" pos:end="49:69"><name pos:start="47:9" pos:end="47:26">av_add_index_entry</name><argument_list pos:start="47:27" pos:end="49:69">(<argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">st</name></expr></argument>, <argument pos:start="47:32" pos:end="47:61"><expr pos:start="47:32" pos:end="47:61"><operator pos:start="47:32" pos:end="47:32">(</operator><name pos:start="47:33" pos:end="47:40">uint64_t</name><operator pos:start="47:41" pos:end="47:41">)</operator><call pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:50">avio_rl32</name><argument_list pos:start="47:51" pos:end="47:54">(<argument pos:start="47:52" pos:end="47:53"><expr pos:start="47:52" pos:end="47:53"><name pos:start="47:52" pos:end="47:53">pb</name></expr></argument>)</argument_list></call> <operator pos:start="47:56" pos:end="47:56">*</operator> <literal type="number" pos:start="47:58" pos:end="47:61">1024</literal></expr></argument>,

                           <argument pos:start="49:28" pos:end="49:59"><expr pos:start="49:28" pos:end="49:59"><name pos:start="49:28" pos:end="49:28">i</name> <operator pos:start="49:30" pos:end="49:30">*</operator> <operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:40">uint64_t</name><operator pos:start="49:41" pos:end="49:41">)</operator><name pos:start="49:42" pos:end="49:55">fields_per_map</name> <operator pos:start="49:57" pos:end="49:57">+</operator> <literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:62"><expr pos:start="49:62" pos:end="49:62"><literal type="number" pos:start="49:62" pos:end="49:62">0</literal></expr></argument>, <argument pos:start="49:65" pos:end="49:65"><expr pos:start="49:65" pos:end="49:65"><literal type="number" pos:start="49:65" pos:end="49:65">0</literal></expr></argument>, <argument pos:start="49:68" pos:end="49:68"><expr pos:start="49:68" pos:end="49:68"><literal type="number" pos:start="49:68" pos:end="49:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><call pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:13">avio_skip</name><argument_list pos:start="51:14" pos:end="51:26">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">pb</name></expr></argument>, <argument pos:start="51:19" pos:end="51:25"><expr pos:start="51:19" pos:end="51:25"><name pos:start="51:19" pos:end="51:25">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
