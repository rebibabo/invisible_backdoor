<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14847.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:32">gen_evmwumiaa</name><parameter_list pos:start="1:33" pos:end="1:51">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:45">DisasContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:27">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i64</name></type> <name pos:start="5:14" pos:end="5:16">acc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i64</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:16">unlikely</name><argument_list pos:start="11:17" pos:end="11:35">(<argument pos:start="11:18" pos:end="11:34"><expr pos:start="11:18" pos:end="11:34"><operator pos:start="11:18" pos:end="11:18">!</operator><name pos:start="11:19" pos:end="11:34"><name pos:start="11:19" pos:end="11:21">ctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:34">spe_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:38" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><call pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:21">gen_exception</name><argument_list pos:start="13:22" pos:end="13:44">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">ctx</name></expr></argument>, <argument pos:start="13:28" pos:end="13:43"><expr pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:43">POWERPC_EXCP_APU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><call pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:15">gen_evmwumi</name><argument_list pos:start="21:16" pos:end="21:20">(<argument pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="21:33" pos:end="21:51">/* rD := rA * rB */</comment>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:7">acc</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:28"><name pos:start="25:11" pos:end="25:26">tcg_temp_new_i64</name><argument_list pos:start="25:27" pos:end="25:28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:7">tmp</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:28"><name pos:start="27:11" pos:end="27:26">tcg_temp_new_i64</name><argument_list pos:start="27:27" pos:end="27:28">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:19">/* tmp := rD */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><call pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:18">gen_load_gpr64</name><argument_list pos:start="33:19" pos:end="33:40">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">tmp</name></expr></argument>, <argument pos:start="33:25" pos:end="33:39"><expr pos:start="33:25" pos:end="33:39"><call pos:start="33:25" pos:end="33:39"><name pos:start="33:25" pos:end="33:26">rD</name><argument_list pos:start="33:27" pos:end="33:39">(<argument pos:start="33:28" pos:end="33:38"><expr pos:start="33:28" pos:end="33:38"><name pos:start="33:28" pos:end="33:38"><name pos:start="33:28" pos:end="33:30">ctx</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:38">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:18">/* Load acc */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><call pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:18">tcg_gen_ld_i64</name><argument_list pos:start="39:19" pos:end="39:61">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">acc</name></expr></argument>, <argument pos:start="39:25" pos:end="39:31"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:31">cpu_env</name></expr></argument>, <argument pos:start="39:34" pos:end="39:60"><expr pos:start="39:34" pos:end="39:60"><call pos:start="39:34" pos:end="39:60"><name pos:start="39:34" pos:end="39:41">offsetof</name><argument_list pos:start="39:42" pos:end="39:60">(<argument pos:start="39:43" pos:end="39:50"><expr pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:50">CPUState</name></expr></argument>, <argument pos:start="39:53" pos:end="39:59"><expr pos:start="39:53" pos:end="39:59"><name pos:start="39:53" pos:end="39:59">spe_acc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:26">/* acc := tmp + acc */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:19">tcg_gen_add_i64</name><argument_list pos:start="45:20" pos:end="45:34">(<argument pos:start="45:21" pos:end="45:23"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:23">acc</name></expr></argument>, <argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">acc</name></expr></argument>, <argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:19">/* Store acc */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><call pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:18">tcg_gen_st_i64</name><argument_list pos:start="51:19" pos:end="51:61">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">acc</name></expr></argument>, <argument pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:31">cpu_env</name></expr></argument>, <argument pos:start="51:34" pos:end="51:60"><expr pos:start="51:34" pos:end="51:60"><call pos:start="51:34" pos:end="51:60"><name pos:start="51:34" pos:end="51:41">offsetof</name><argument_list pos:start="51:42" pos:end="51:60">(<argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><name pos:start="51:43" pos:end="51:50">CPUState</name></expr></argument>, <argument pos:start="51:53" pos:end="51:59"><expr pos:start="51:53" pos:end="51:59"><name pos:start="51:53" pos:end="51:59">spe_acc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:19">/* rD := acc */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><call pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:19">gen_store_gpr64</name><argument_list pos:start="57:20" pos:end="57:41">(<argument pos:start="57:21" pos:end="57:35"><expr pos:start="57:21" pos:end="57:35"><call pos:start="57:21" pos:end="57:35"><name pos:start="57:21" pos:end="57:22">rD</name><argument_list pos:start="57:23" pos:end="57:35">(<argument pos:start="57:24" pos:end="57:34"><expr pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:26">ctx</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:34">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:38" pos:end="57:40"><expr pos:start="57:38" pos:end="57:40"><name pos:start="57:38" pos:end="57:40">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:21">tcg_temp_free_i64</name><argument_list pos:start="61:22" pos:end="61:26">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:21">tcg_temp_free_i64</name><argument_list pos:start="63:22" pos:end="63:26">(<argument pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
