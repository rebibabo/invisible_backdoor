<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4605.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">superio_ioport_writeb</name><parameter_list pos:start="1:34" pos:end="3:48">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:59"><decl pos:start="1:49" pos:end="1:59"><type pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:54">hwaddr</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:69">uint64_t</name></type> <name pos:start="1:71" pos:end="1:74">data</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">unsigned</name></type> <name pos:start="3:44" pos:end="3:47">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:5">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">can_write</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">SuperIOConfig</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:31">superio_conf</name> <init pos:start="9:33" pos:end="9:40">= <expr pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:40">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:75"><expr pos:start="13:5" pos:end="13:74"><call pos:start="13:5" pos:end="13:74"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:74">(<argument pos:start="13:13" pos:end="13:61"><expr pos:start="13:13" pos:end="13:61"><literal type="string" pos:start="13:13" pos:end="13:61">"superio_ioport_writeb  address 0x%x  val 0x%x\n"</literal></expr></argument>, <argument pos:start="13:64" pos:end="13:67"><expr pos:start="13:64" pos:end="13:67"><name pos:start="13:64" pos:end="13:67">addr</name></expr></argument>, <argument pos:start="13:70" pos:end="13:73"><expr pos:start="13:70" pos:end="13:73"><name pos:start="13:70" pos:end="13:73">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="91:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <literal type="number" pos:start="15:17" pos:end="15:21">0x3f0</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:42">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:20">superio_conf</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:27">index</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:34">data</name> <operator pos:start="17:36" pos:end="17:36">&amp;</operator> <literal type="number" pos:start="17:38" pos:end="17:41">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="91:5">else <block pos:start="19:12" pos:end="91:5">{<block_content pos:start="23:9" pos:end="89:64">

        <comment type="block" pos:start="21:9" pos:end="21:19">/* 0x3f1 */</comment>

        <switch pos:start="23:9" pos:end="87:9">switch <condition pos:start="23:16" pos:end="23:36">(<expr pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:28">superio_conf</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:35">index</name></name></expr>)</condition> <block pos:start="23:38" pos:end="87:9">{<block_content pos:start="25:9" pos:end="85:13">

        <case pos:start="25:9" pos:end="25:27">case <expr pos:start="25:14" pos:end="25:26"><literal type="number" pos:start="25:14" pos:end="25:17">0x00</literal> <operator pos:start="25:19" pos:end="25:21">...</operator> <literal type="number" pos:start="25:23" pos:end="25:26">0xdf</literal></expr>:</case>

        <case pos:start="27:9" pos:end="27:18">case <expr pos:start="27:14" pos:end="27:17"><literal type="number" pos:start="27:14" pos:end="27:17">0xe4</literal></expr>:</case>

        <case pos:start="29:9" pos:end="29:18">case <expr pos:start="29:14" pos:end="29:17"><literal type="number" pos:start="29:14" pos:end="29:17">0xe5</literal></expr>:</case>

        <case pos:start="31:9" pos:end="31:27">case <expr pos:start="31:14" pos:end="31:26"><literal type="number" pos:start="31:14" pos:end="31:17">0xe9</literal> <operator pos:start="31:19" pos:end="31:21">...</operator> <literal type="number" pos:start="31:23" pos:end="31:26">0xed</literal></expr>:</case>

        <case pos:start="33:9" pos:end="33:18">case <expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0xf3</literal></expr>:</case>

        <case pos:start="35:9" pos:end="35:18">case <expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0xf5</literal></expr>:</case>

        <case pos:start="37:9" pos:end="37:18">case <expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0xf7</literal></expr>:</case>

        <case pos:start="39:9" pos:end="39:27">case <expr pos:start="39:14" pos:end="39:26"><literal type="number" pos:start="39:14" pos:end="39:17">0xf9</literal> <operator pos:start="39:19" pos:end="39:21">...</operator> <literal type="number" pos:start="39:23" pos:end="39:26">0xfb</literal></expr>:</case>

        <case pos:start="41:9" pos:end="41:27">case <expr pos:start="41:14" pos:end="41:26"><literal type="number" pos:start="41:14" pos:end="41:17">0xfd</literal> <operator pos:start="41:19" pos:end="41:21">...</operator> <literal type="number" pos:start="41:23" pos:end="41:26">0xff</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:21">can_write</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <default pos:start="47:9" pos:end="47:16">default:</default>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:21">can_write</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="85:13"><if pos:start="53:13" pos:end="85:13">if <condition pos:start="53:16" pos:end="53:26">(<expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:25">can_write</name></expr>)</condition> <block pos:start="53:28" pos:end="85:13">{<block_content pos:start="55:17" pos:end="83:17">

                <switch pos:start="55:17" pos:end="83:17">switch <condition pos:start="55:24" pos:end="55:44">(<expr pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:36">superio_conf</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:43">index</name></name></expr>)</condition> <block pos:start="55:46" pos:end="83:17">{<block_content pos:start="57:17" pos:end="81:76">

                <case pos:start="57:17" pos:end="57:26">case <expr pos:start="57:22" pos:end="57:25"><literal type="number" pos:start="57:22" pos:end="57:25">0xe7</literal></expr>:</case>

                    <if_stmt pos:start="59:21" pos:end="63:21"><if pos:start="59:21" pos:end="63:21">if <condition pos:start="59:24" pos:end="59:46">(<expr pos:start="59:25" pos:end="59:45"><operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:29">data</name> <operator pos:start="59:31" pos:end="59:31">&amp;</operator> <literal type="number" pos:start="59:33" pos:end="59:36">0xff</literal><operator pos:start="59:37" pos:end="59:37">)</operator> <operator pos:start="59:39" pos:end="59:40">!=</operator> <literal type="number" pos:start="59:42" pos:end="59:45">0xfe</literal></expr>)</condition> <block pos:start="59:48" pos:end="63:21">{<block_content pos:start="61:25" pos:end="61:72">

                        <expr_stmt pos:start="61:25" pos:end="61:72"><expr pos:start="61:25" pos:end="61:71"><call pos:start="61:25" pos:end="61:71"><name pos:start="61:25" pos:end="61:31">DPRINTF</name><argument_list pos:start="61:32" pos:end="61:71">(<argument pos:start="61:33" pos:end="61:70"><expr pos:start="61:33" pos:end="61:70"><literal type="string" pos:start="61:33" pos:end="61:70">"chage uart 1 base. unsupported yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="65:21" pos:end="65:26">break;</break>

                <case pos:start="67:17" pos:end="67:26">case <expr pos:start="67:22" pos:end="67:25"><literal type="number" pos:start="67:22" pos:end="67:25">0xe8</literal></expr>:</case>

                    <if_stmt pos:start="69:21" pos:end="73:21"><if pos:start="69:21" pos:end="73:21">if <condition pos:start="69:24" pos:end="69:46">(<expr pos:start="69:25" pos:end="69:45"><operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:29">data</name> <operator pos:start="69:31" pos:end="69:31">&amp;</operator> <literal type="number" pos:start="69:33" pos:end="69:36">0xff</literal><operator pos:start="69:37" pos:end="69:37">)</operator> <operator pos:start="69:39" pos:end="69:40">!=</operator> <literal type="number" pos:start="69:42" pos:end="69:45">0xbe</literal></expr>)</condition> <block pos:start="69:48" pos:end="73:21">{<block_content pos:start="71:25" pos:end="71:72">

                        <expr_stmt pos:start="71:25" pos:end="71:72"><expr pos:start="71:25" pos:end="71:71"><call pos:start="71:25" pos:end="71:71"><name pos:start="71:25" pos:end="71:31">DPRINTF</name><argument_list pos:start="71:32" pos:end="71:71">(<argument pos:start="71:33" pos:end="71:70"><expr pos:start="71:33" pos:end="71:70"><literal type="string" pos:start="71:33" pos:end="71:70">"chage uart 2 base. unsupported yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="75:21" pos:end="75:26">break;</break>



                <default pos:start="79:17" pos:end="79:24">default:</default>

                    <expr_stmt pos:start="81:21" pos:end="81:76"><expr pos:start="81:21" pos:end="81:75"><name pos:start="81:21" pos:end="81:61"><name pos:start="81:21" pos:end="81:32">superio_conf</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:40">config</name><index pos:start="81:41" pos:end="81:61">[<expr pos:start="81:42" pos:end="81:60"><name pos:start="81:42" pos:end="81:60"><name pos:start="81:42" pos:end="81:53">superio_conf</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:60">index</name></name></expr>]</index></name> <operator pos:start="81:63" pos:end="81:63">=</operator> <name pos:start="81:65" pos:end="81:68">data</name> <operator pos:start="81:70" pos:end="81:70">&amp;</operator> <literal type="number" pos:start="81:72" pos:end="81:75">0xff</literal></expr>;</expr_stmt>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="89:9" pos:end="89:64"><expr pos:start="89:9" pos:end="89:63"><name pos:start="89:9" pos:end="89:49"><name pos:start="89:9" pos:end="89:20">superio_conf</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:28">config</name><index pos:start="89:29" pos:end="89:49">[<expr pos:start="89:30" pos:end="89:48"><name pos:start="89:30" pos:end="89:48"><name pos:start="89:30" pos:end="89:41">superio_conf</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:48">index</name></name></expr>]</index></name> <operator pos:start="89:51" pos:end="89:51">=</operator> <name pos:start="89:53" pos:end="89:56">data</name> <operator pos:start="89:58" pos:end="89:58">&amp;</operator> <literal type="number" pos:start="89:60" pos:end="89:63">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
