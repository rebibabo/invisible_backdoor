<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4887.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:38">bdrv_co_do_rw</name><parameter_list pos:start="1:39" pos:end="1:52">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:45"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:30">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">BlockAIOCBCoroutine</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">acb</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">acb</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">common</name><operator pos:start="7:39" pos:end="7:39">.</operator><name pos:start="7:40" pos:end="7:41">bs</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:12">acb</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:22">is_write</name></name></expr>)</condition> <block pos:start="11:25" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:64">

        <expr_stmt pos:start="13:9" pos:end="15:64"><expr pos:start="13:9" pos:end="15:63"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:11">acb</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">req</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:22">error</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <call pos:start="13:26" pos:end="15:63"><name pos:start="13:26" pos:end="13:41">bdrv_co_do_readv</name><argument_list pos:start="13:42" pos:end="15:63">(<argument pos:start="13:43" pos:end="13:44"><expr pos:start="13:43" pos:end="13:44"><name pos:start="13:43" pos:end="13:44">bs</name></expr></argument>, <argument pos:start="13:47" pos:end="13:61"><expr pos:start="13:47" pos:end="13:61"><name pos:start="13:47" pos:end="13:61"><name pos:start="13:47" pos:end="13:49">acb</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:54">req</name><operator pos:start="13:55" pos:end="13:55">.</operator><name pos:start="13:56" pos:end="13:61">sector</name></name></expr></argument>,

            <argument pos:start="15:13" pos:end="15:31"><expr pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:15">acb</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:20">req</name><operator pos:start="15:21" pos:end="15:21">.</operator><name pos:start="15:22" pos:end="15:31">nb_sectors</name></name></expr></argument>, <argument pos:start="15:34" pos:end="15:46"><expr pos:start="15:34" pos:end="15:46"><name pos:start="15:34" pos:end="15:46"><name pos:start="15:34" pos:end="15:36">acb</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:41">req</name><operator pos:start="15:42" pos:end="15:42">.</operator><name pos:start="15:43" pos:end="15:46">qiov</name></name></expr></argument>, <argument pos:start="15:49" pos:end="15:62"><expr pos:start="15:49" pos:end="15:62"><name pos:start="15:49" pos:end="15:62"><name pos:start="15:49" pos:end="15:51">acb</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:56">req</name><operator pos:start="15:57" pos:end="15:57">.</operator><name pos:start="15:58" pos:end="15:62">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="23:5">else <block pos:start="17:12" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:64">

        <expr_stmt pos:start="19:9" pos:end="21:64"><expr pos:start="19:9" pos:end="21:63"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:11">acb</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">req</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:22">error</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="21:63"><name pos:start="19:26" pos:end="19:42">bdrv_co_do_writev</name><argument_list pos:start="19:43" pos:end="21:63">(<argument pos:start="19:44" pos:end="19:45"><expr pos:start="19:44" pos:end="19:45"><name pos:start="19:44" pos:end="19:45">bs</name></expr></argument>, <argument pos:start="19:48" pos:end="19:62"><expr pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:50">acb</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:55">req</name><operator pos:start="19:56" pos:end="19:56">.</operator><name pos:start="19:57" pos:end="19:62">sector</name></name></expr></argument>,

            <argument pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:15">acb</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">req</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:31">nb_sectors</name></name></expr></argument>, <argument pos:start="21:34" pos:end="21:46"><expr pos:start="21:34" pos:end="21:46"><name pos:start="21:34" pos:end="21:46"><name pos:start="21:34" pos:end="21:36">acb</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">req</name><operator pos:start="21:42" pos:end="21:42">.</operator><name pos:start="21:43" pos:end="21:46">qiov</name></name></expr></argument>, <argument pos:start="21:49" pos:end="21:62"><expr pos:start="21:49" pos:end="21:62"><name pos:start="21:49" pos:end="21:62"><name pos:start="21:49" pos:end="21:51">acb</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:56">req</name><operator pos:start="21:57" pos:end="21:57">.</operator><name pos:start="21:58" pos:end="21:62">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:71"><expr pos:start="27:5" pos:end="27:70"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:11">bh</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:70"><name pos:start="27:15" pos:end="27:24">aio_bh_new</name><argument_list pos:start="27:25" pos:end="27:70">(<argument pos:start="27:26" pos:end="27:49"><expr pos:start="27:26" pos:end="27:49"><call pos:start="27:26" pos:end="27:49"><name pos:start="27:26" pos:end="27:45">bdrv_get_aio_context</name><argument_list pos:start="27:46" pos:end="27:49">(<argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:52" pos:end="27:64"><expr pos:start="27:52" pos:end="27:64"><name pos:start="27:52" pos:end="27:64">bdrv_co_em_bh</name></expr></argument>, <argument pos:start="27:67" pos:end="27:69"><expr pos:start="27:67" pos:end="27:69"><name pos:start="27:67" pos:end="27:69">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:20">qemu_bh_schedule</name><argument_list pos:start="29:21" pos:end="29:29">(<argument pos:start="29:22" pos:end="29:28"><expr pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:24">acb</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:28">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
