<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16480.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">dec_div</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:42">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">u</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:5">u</name> <operator pos:start="9:7" pos:end="9:7">=</operator> <name pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:10">dc</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:15">imm</name></name> <operator pos:start="9:17" pos:end="9:17">&amp;</operator> <literal type="number" pos:start="9:19" pos:end="9:19">2</literal></expr>;</expr_stmt> 

    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><call pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:11">LOG_DIS</name><argument_list pos:start="11:12" pos:end="11:20">(<argument pos:start="11:13" pos:end="11:19"><expr pos:start="11:13" pos:end="11:19"><literal type="string" pos:start="11:13" pos:end="11:19">"div\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="17:59">(<expr pos:start="15:9" pos:end="17:58"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:30"><name pos:start="15:11" pos:end="15:12">dc</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">env</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:22">pvr</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">regs</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">2</literal></expr>]</index></name> <operator pos:start="15:32" pos:end="15:32">&amp;</operator> <name pos:start="15:34" pos:end="15:57">PVR2_ILL_OPCODE_EXC_MASK</name><operator pos:start="15:58" pos:end="15:58">)</operator>

          <operator pos:start="17:11" pos:end="17:12">&amp;&amp;</operator> <operator pos:start="17:14" pos:end="17:14">!</operator><operator pos:start="17:15" pos:end="17:15">(</operator><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:18">dc</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:23">env</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:28">pvr</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:33">regs</name><index pos:start="17:34" pos:end="17:36">[<expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>]</index></name> <operator pos:start="17:38" pos:end="17:38">&amp;</operator> <name pos:start="17:40" pos:end="17:56">PVR0_USE_DIV_MASK</name><operator pos:start="17:57" pos:end="17:57">)</operator><operator pos:start="17:58" pos:end="17:58">)</operator></expr>)</condition> <block pos:start="17:61" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:48">

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><call pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:23">tcg_gen_movi_tl</name><argument_list pos:start="19:24" pos:end="19:58">(<argument pos:start="19:25" pos:end="19:38"><expr pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:30">cpu_SR</name><index pos:start="19:31" pos:end="19:38">[<expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37">SR_ESR</name></expr>]</index></name></expr></argument>, <argument pos:start="19:41" pos:end="19:57"><expr pos:start="19:41" pos:end="19:57"><name pos:start="19:41" pos:end="19:57">ESR_EC_ILLEGAL_OP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><call pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:29">t_gen_raise_exception</name><argument_list pos:start="21:30" pos:end="21:47">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">dc</name></expr></argument>, <argument pos:start="21:35" pos:end="21:46"><expr pos:start="21:35" pos:end="21:46"><name pos:start="21:35" pos:end="21:46">EXCP_HW_EXCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:75"><if pos:start="27:5" pos:end="29:75">if <condition pos:start="27:8" pos:end="27:10">(<expr pos:start="27:9" pos:end="27:9"><name pos:start="27:9" pos:end="27:9">u</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:75"><block_content pos:start="29:9" pos:end="29:75">

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:23">gen_helper_divu</name><argument_list pos:start="29:24" pos:end="29:74">(<argument pos:start="29:25" pos:end="29:37"><expr pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:29">cpu_R</name><index pos:start="29:30" pos:end="29:37">[<expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:32">dc</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:36">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="29:40" pos:end="29:58"><expr pos:start="29:40" pos:end="29:58"><operator pos:start="29:40" pos:end="29:40">*</operator><operator pos:start="29:41" pos:end="29:41">(</operator><call pos:start="29:42" pos:end="29:57"><name pos:start="29:42" pos:end="29:53">dec_alu_op_b</name><argument_list pos:start="29:54" pos:end="29:57">(<argument pos:start="29:55" pos:end="29:56"><expr pos:start="29:55" pos:end="29:56"><name pos:start="29:55" pos:end="29:56">dc</name></expr></argument>)</argument_list></call><operator pos:start="29:58" pos:end="29:58">)</operator></expr></argument>, <argument pos:start="29:61" pos:end="29:73"><expr pos:start="29:61" pos:end="29:73"><name pos:start="29:61" pos:end="29:73"><name pos:start="29:61" pos:end="29:65">cpu_R</name><index pos:start="29:66" pos:end="29:73">[<expr pos:start="29:67" pos:end="29:72"><name pos:start="29:67" pos:end="29:72"><name pos:start="29:67" pos:end="29:68">dc</name><operator pos:start="29:69" pos:end="29:70">-&gt;</operator><name pos:start="29:71" pos:end="29:72">ra</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:75">else<block type="pseudo" pos:start="33:9" pos:end="33:75"><block_content pos:start="33:9" pos:end="33:75">

        <expr_stmt pos:start="33:9" pos:end="33:75"><expr pos:start="33:9" pos:end="33:74"><call pos:start="33:9" pos:end="33:74"><name pos:start="33:9" pos:end="33:23">gen_helper_divs</name><argument_list pos:start="33:24" pos:end="33:74">(<argument pos:start="33:25" pos:end="33:37"><expr pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:29">cpu_R</name><index pos:start="33:30" pos:end="33:37">[<expr pos:start="33:31" pos:end="33:36"><name pos:start="33:31" pos:end="33:36"><name pos:start="33:31" pos:end="33:32">dc</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:36">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="33:40" pos:end="33:58"><expr pos:start="33:40" pos:end="33:58"><operator pos:start="33:40" pos:end="33:40">*</operator><operator pos:start="33:41" pos:end="33:41">(</operator><call pos:start="33:42" pos:end="33:57"><name pos:start="33:42" pos:end="33:53">dec_alu_op_b</name><argument_list pos:start="33:54" pos:end="33:57">(<argument pos:start="33:55" pos:end="33:56"><expr pos:start="33:55" pos:end="33:56"><name pos:start="33:55" pos:end="33:56">dc</name></expr></argument>)</argument_list></call><operator pos:start="33:58" pos:end="33:58">)</operator></expr></argument>, <argument pos:start="33:61" pos:end="33:73"><expr pos:start="33:61" pos:end="33:73"><name pos:start="33:61" pos:end="33:73"><name pos:start="33:61" pos:end="33:65">cpu_R</name><index pos:start="33:66" pos:end="33:73">[<expr pos:start="33:67" pos:end="33:72"><name pos:start="33:67" pos:end="33:72"><name pos:start="33:67" pos:end="33:68">dc</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:72">ra</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:42"><if pos:start="35:5" pos:end="37:42">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:15"><name pos:start="35:10" pos:end="35:11">dc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:15">rd</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:42"><block_content pos:start="37:9" pos:end="37:42">

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><call pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:23">tcg_gen_movi_tl</name><argument_list pos:start="37:24" pos:end="37:41">(<argument pos:start="37:25" pos:end="37:37"><expr pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:29">cpu_R</name><index pos:start="37:30" pos:end="37:37">[<expr pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:32">dc</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:36">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><literal type="number" pos:start="37:40" pos:end="37:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
