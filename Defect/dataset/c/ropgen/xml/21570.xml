<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21570.c" pos:tabs="8"><function pos:start="1:1" pos:end="138:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int32_t</name></type> <name pos:start="1:16" pos:end="1:36">scsi_disk_dma_command</name><parameter_list pos:start="1:37" pos:end="1:68">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:48">SCSIRequest</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">req</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="138:1">{<block_content pos:start="5:5" pos:end="136:5">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:53">= <expr pos:start="5:22" pos:end="5:53"><call pos:start="5:22" pos:end="5:53"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:53">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42">SCSIDiskReq</name></expr></argument>, <argument pos:start="5:45" pos:end="5:47"><expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">req</name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:63">= <expr pos:start="7:24" pos:end="7:63"><call pos:start="7:24" pos:end="7:63"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:63">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:62"><expr pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:57">req</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:62">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:15">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:19">command</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:11">command</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:17">buf</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="24:5"><if pos:start="19:5" pos:end="24:5">if <condition pos:start="19:8" pos:end="19:59">(<expr pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">tray_open</name></name> <operator pos:start="19:22" pos:end="19:23">||</operator> <operator pos:start="19:25" pos:end="19:25">!</operator><call pos:start="19:26" pos:end="19:58"><name pos:start="19:26" pos:end="19:41">bdrv_is_inserted</name><argument_list pos:start="19:42" pos:end="19:58">(<argument pos:start="19:43" pos:end="19:57"><expr pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:43">s</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:49">qdev</name><operator pos:start="19:50" pos:end="19:50">.</operator><name pos:start="19:51" pos:end="19:54">conf</name><operator pos:start="19:55" pos:end="19:55">.</operator><name pos:start="19:56" pos:end="19:57">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:61" pos:end="24:5">{<block_content pos:start="21:9" pos:end="21:55">

        <expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><call pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:28">scsi_check_condition</name><argument_list pos:start="21:29" pos:end="21:54">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">r</name></expr></argument>, <argument pos:start="21:33" pos:end="21:53"><expr pos:start="21:33" pos:end="21:53"><call pos:start="21:33" pos:end="21:53"><name pos:start="21:33" pos:end="21:42">SENSE_CODE</name><argument_list pos:start="21:43" pos:end="21:53">(<argument pos:start="21:44" pos:end="21:52"><expr pos:start="21:44" pos:end="21:52"><name pos:start="21:44" pos:end="21:52">NO_MEDIUM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <switch pos:start="28:5" pos:end="118:5">switch <condition pos:start="28:12" pos:end="28:20">(<expr pos:start="28:13" pos:end="28:19"><name pos:start="28:13" pos:end="28:19">command</name></expr>)</condition> <block pos:start="28:22" pos:end="118:5">{<block_content pos:start="30:5" pos:end="115:62">

    <case pos:start="30:5" pos:end="30:16">case <expr pos:start="30:10" pos:end="30:15"><name pos:start="30:10" pos:end="30:15">READ_6</name></expr>:</case>

    <case pos:start="32:5" pos:end="32:17">case <expr pos:start="32:10" pos:end="32:16"><name pos:start="32:10" pos:end="32:16">READ_10</name></expr>:</case>

    <case pos:start="34:5" pos:end="34:17">case <expr pos:start="34:10" pos:end="34:16"><name pos:start="34:10" pos:end="34:16">READ_12</name></expr>:</case>

    <case pos:start="36:5" pos:end="36:17">case <expr pos:start="36:10" pos:end="36:16"><name pos:start="36:10" pos:end="36:16">READ_16</name></expr>:</case>

        <expr_stmt pos:start="38:9" pos:end="38:50"><expr pos:start="38:9" pos:end="38:49"><name pos:start="38:9" pos:end="38:11">len</name> <operator pos:start="38:13" pos:end="38:13">=</operator> <name pos:start="38:15" pos:end="38:29"><name pos:start="38:15" pos:end="38:15">r</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:20">req</name><operator pos:start="38:21" pos:end="38:21">.</operator><name pos:start="38:22" pos:end="38:24">cmd</name><operator pos:start="38:25" pos:end="38:25">.</operator><name pos:start="38:26" pos:end="38:29">xfer</name></name> <operator pos:start="38:31" pos:end="38:31">/</operator> <name pos:start="38:33" pos:end="38:49"><name pos:start="38:33" pos:end="38:33">s</name><operator pos:start="38:34" pos:end="38:35">-&gt;</operator><name pos:start="38:36" pos:end="38:39">qdev</name><operator pos:start="38:40" pos:end="38:40">.</operator><name pos:start="38:41" pos:end="38:49">blocksize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="40:9" pos:end="40:78"><expr pos:start="40:9" pos:end="40:77"><call pos:start="40:9" pos:end="40:77"><name pos:start="40:9" pos:end="40:15">DPRINTF</name><argument_list pos:start="40:16" pos:end="40:77">(<argument pos:start="40:17" pos:end="40:55"><expr pos:start="40:17" pos:end="40:55"><literal type="string" pos:start="40:17" pos:end="40:32">"Read (sector %"</literal> <name pos:start="40:34" pos:end="40:39">PRId64</name> <literal type="string" pos:start="40:41" pos:end="40:55">", count %d)\n"</literal></expr></argument>, <argument pos:start="40:58" pos:end="40:71"><expr pos:start="40:58" pos:end="40:71"><name pos:start="40:58" pos:end="40:71"><name pos:start="40:58" pos:end="40:58">r</name><operator pos:start="40:59" pos:end="40:60">-&gt;</operator><name pos:start="40:61" pos:end="40:63">req</name><operator pos:start="40:64" pos:end="40:64">.</operator><name pos:start="40:65" pos:end="40:67">cmd</name><operator pos:start="40:68" pos:end="40:68">.</operator><name pos:start="40:69" pos:end="40:71">lba</name></name></expr></argument>, <argument pos:start="40:74" pos:end="40:76"><expr pos:start="40:74" pos:end="40:76"><name pos:start="40:74" pos:end="40:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="42:9" pos:end="46:9"><if pos:start="42:9" pos:end="46:9">if <condition pos:start="42:12" pos:end="42:37">(<expr pos:start="42:13" pos:end="42:36"><name pos:start="42:13" pos:end="42:29"><name pos:start="42:13" pos:end="42:13">r</name><operator pos:start="42:14" pos:end="42:15">-&gt;</operator><name pos:start="42:16" pos:end="42:18">req</name><operator pos:start="42:19" pos:end="42:19">.</operator><name pos:start="42:20" pos:end="42:22">cmd</name><operator pos:start="42:23" pos:end="42:23">.</operator><name pos:start="42:24" pos:end="42:26">buf</name><index pos:start="42:27" pos:end="42:29">[<expr pos:start="42:28" pos:end="42:28"><literal type="number" pos:start="42:28" pos:end="42:28">1</literal></expr>]</index></name> <operator pos:start="42:31" pos:end="42:31">&amp;</operator> <literal type="number" pos:start="42:33" pos:end="42:36">0xe0</literal></expr>)</condition> <block pos:start="42:39" pos:end="46:9">{<block_content pos:start="44:13" pos:end="44:33">

            <goto pos:start="44:13" pos:end="44:33">goto <name pos:start="44:18" pos:end="44:32">illegal_request</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="48:9" pos:end="52:9"><if pos:start="48:9" pos:end="52:9">if <condition pos:start="48:12" pos:end="48:45">(<expr pos:start="48:13" pos:end="48:44"><name pos:start="48:13" pos:end="48:26"><name pos:start="48:13" pos:end="48:13">r</name><operator pos:start="48:14" pos:end="48:15">-&gt;</operator><name pos:start="48:16" pos:end="48:18">req</name><operator pos:start="48:19" pos:end="48:19">.</operator><name pos:start="48:20" pos:end="48:22">cmd</name><operator pos:start="48:23" pos:end="48:23">.</operator><name pos:start="48:24" pos:end="48:26">lba</name></name> <operator pos:start="48:28" pos:end="48:28">&gt;</operator> <name pos:start="48:30" pos:end="48:44"><name pos:start="48:30" pos:end="48:30">s</name><operator pos:start="48:31" pos:end="48:32">-&gt;</operator><name pos:start="48:33" pos:end="48:36">qdev</name><operator pos:start="48:37" pos:end="48:37">.</operator><name pos:start="48:38" pos:end="48:44">max_lba</name></name></expr>)</condition> <block pos:start="48:47" pos:end="52:9">{<block_content pos:start="50:13" pos:end="50:29">

            <goto pos:start="50:13" pos:end="50:29">goto <name pos:start="50:18" pos:end="50:28">illegal_lba</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:63"><expr pos:start="54:9" pos:end="54:62"><name pos:start="54:9" pos:end="54:17"><name pos:start="54:9" pos:end="54:9">r</name><operator pos:start="54:10" pos:end="54:11">-&gt;</operator><name pos:start="54:12" pos:end="54:17">sector</name></name> <operator pos:start="54:19" pos:end="54:19">=</operator> <name pos:start="54:21" pos:end="54:34"><name pos:start="54:21" pos:end="54:21">r</name><operator pos:start="54:22" pos:end="54:23">-&gt;</operator><name pos:start="54:24" pos:end="54:26">req</name><operator pos:start="54:27" pos:end="54:27">.</operator><name pos:start="54:28" pos:end="54:30">cmd</name><operator pos:start="54:31" pos:end="54:31">.</operator><name pos:start="54:32" pos:end="54:34">lba</name></name> <operator pos:start="54:36" pos:end="54:36">*</operator> <operator pos:start="54:38" pos:end="54:38">(</operator><name pos:start="54:39" pos:end="54:55"><name pos:start="54:39" pos:end="54:39">s</name><operator pos:start="54:40" pos:end="54:41">-&gt;</operator><name pos:start="54:42" pos:end="54:45">qdev</name><operator pos:start="54:46" pos:end="54:46">.</operator><name pos:start="54:47" pos:end="54:55">blocksize</name></name> <operator pos:start="54:57" pos:end="54:57">/</operator> <literal type="number" pos:start="54:59" pos:end="54:61">512</literal><operator pos:start="54:62" pos:end="54:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="56:9" pos:end="56:58"><expr pos:start="56:9" pos:end="56:57"><name pos:start="56:9" pos:end="56:23"><name pos:start="56:9" pos:end="56:9">r</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:23">sector_count</name></name> <operator pos:start="56:25" pos:end="56:25">=</operator> <name pos:start="56:27" pos:end="56:29">len</name> <operator pos:start="56:31" pos:end="56:31">*</operator> <operator pos:start="56:33" pos:end="56:33">(</operator><name pos:start="56:34" pos:end="56:50"><name pos:start="56:34" pos:end="56:34">s</name><operator pos:start="56:35" pos:end="56:36">-&gt;</operator><name pos:start="56:37" pos:end="56:40">qdev</name><operator pos:start="56:41" pos:end="56:41">.</operator><name pos:start="56:42" pos:end="56:50">blocksize</name></name> <operator pos:start="56:52" pos:end="56:52">/</operator> <literal type="number" pos:start="56:54" pos:end="56:56">512</literal><operator pos:start="56:57" pos:end="56:57">)</operator></expr>;</expr_stmt>

        <break pos:start="58:9" pos:end="58:14">break;</break>

    <case pos:start="60:5" pos:end="60:19">case <expr pos:start="60:10" pos:end="60:18"><name pos:start="60:10" pos:end="60:18">VERIFY_10</name></expr>:</case>

    <case pos:start="62:5" pos:end="62:19">case <expr pos:start="62:10" pos:end="62:18"><name pos:start="62:10" pos:end="62:18">VERIFY_12</name></expr>:</case>

    <case pos:start="64:5" pos:end="64:19">case <expr pos:start="64:10" pos:end="64:18"><name pos:start="64:10" pos:end="64:18">VERIFY_16</name></expr>:</case>

    <case pos:start="66:5" pos:end="66:17">case <expr pos:start="66:10" pos:end="66:16"><name pos:start="66:10" pos:end="66:16">WRITE_6</name></expr>:</case>

    <case pos:start="68:5" pos:end="68:18">case <expr pos:start="68:10" pos:end="68:17"><name pos:start="68:10" pos:end="68:17">WRITE_10</name></expr>:</case>

    <case pos:start="70:5" pos:end="70:18">case <expr pos:start="70:10" pos:end="70:17"><name pos:start="70:10" pos:end="70:17">WRITE_12</name></expr>:</case>

    <case pos:start="72:5" pos:end="72:18">case <expr pos:start="72:10" pos:end="72:17"><name pos:start="72:10" pos:end="72:17">WRITE_16</name></expr>:</case>

    <case pos:start="74:5" pos:end="74:25">case <expr pos:start="74:10" pos:end="74:24"><name pos:start="74:10" pos:end="74:24">WRITE_VERIFY_10</name></expr>:</case>

    <case pos:start="76:5" pos:end="76:25">case <expr pos:start="76:10" pos:end="76:24"><name pos:start="76:10" pos:end="76:24">WRITE_VERIFY_12</name></expr>:</case>

    <case pos:start="78:5" pos:end="78:25">case <expr pos:start="78:10" pos:end="78:24"><name pos:start="78:10" pos:end="78:24">WRITE_VERIFY_16</name></expr>:</case>

        <expr_stmt pos:start="80:9" pos:end="80:50"><expr pos:start="80:9" pos:end="80:49"><name pos:start="80:9" pos:end="80:11">len</name> <operator pos:start="80:13" pos:end="80:13">=</operator> <name pos:start="80:15" pos:end="80:29"><name pos:start="80:15" pos:end="80:15">r</name><operator pos:start="80:16" pos:end="80:17">-&gt;</operator><name pos:start="80:18" pos:end="80:20">req</name><operator pos:start="80:21" pos:end="80:21">.</operator><name pos:start="80:22" pos:end="80:24">cmd</name><operator pos:start="80:25" pos:end="80:25">.</operator><name pos:start="80:26" pos:end="80:29">xfer</name></name> <operator pos:start="80:31" pos:end="80:31">/</operator> <name pos:start="80:33" pos:end="80:49"><name pos:start="80:33" pos:end="80:33">s</name><operator pos:start="80:34" pos:end="80:35">-&gt;</operator><name pos:start="80:36" pos:end="80:39">qdev</name><operator pos:start="80:40" pos:end="80:40">.</operator><name pos:start="80:41" pos:end="80:49">blocksize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="82:9" pos:end="86:37"><expr pos:start="82:9" pos:end="86:36"><call pos:start="82:9" pos:end="86:36"><name pos:start="82:9" pos:end="82:15">DPRINTF</name><argument_list pos:start="82:16" pos:end="86:36">(<argument pos:start="82:17" pos:end="82:58"><expr pos:start="82:17" pos:end="82:58"><literal type="string" pos:start="82:17" pos:end="82:35">"Write %s(sector %"</literal> <name pos:start="82:37" pos:end="82:42">PRId64</name> <literal type="string" pos:start="82:44" pos:end="82:58">", count %d)\n"</literal></expr></argument>,

                <argument pos:start="84:17" pos:end="84:59"><expr pos:start="84:17" pos:end="84:59"><ternary pos:start="84:17" pos:end="84:59"><condition pos:start="84:17" pos:end="84:40"><expr pos:start="84:17" pos:end="84:38"><operator pos:start="84:17" pos:end="84:17">(</operator><name pos:start="84:18" pos:end="84:24">command</name> <operator pos:start="84:26" pos:end="84:26">&amp;</operator> <literal type="number" pos:start="84:28" pos:end="84:30">0xe</literal><operator pos:start="84:31" pos:end="84:31">)</operator> <operator pos:start="84:33" pos:end="84:34">==</operator> <literal type="number" pos:start="84:36" pos:end="84:38">0xe</literal></expr> ?</condition><then pos:start="84:42" pos:end="84:54"> <expr pos:start="84:42" pos:end="84:54"><literal type="string" pos:start="84:42" pos:end="84:54">"And Verify "</literal></expr> </then><else pos:start="84:56" pos:end="84:59">: <expr pos:start="84:58" pos:end="84:59"><literal type="string" pos:start="84:58" pos:end="84:59">""</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="86:17" pos:end="86:30"><expr pos:start="86:17" pos:end="86:30"><name pos:start="86:17" pos:end="86:30"><name pos:start="86:17" pos:end="86:17">r</name><operator pos:start="86:18" pos:end="86:19">-&gt;</operator><name pos:start="86:20" pos:end="86:22">req</name><operator pos:start="86:23" pos:end="86:23">.</operator><name pos:start="86:24" pos:end="86:26">cmd</name><operator pos:start="86:27" pos:end="86:27">.</operator><name pos:start="86:28" pos:end="86:30">lba</name></name></expr></argument>, <argument pos:start="86:33" pos:end="86:35"><expr pos:start="86:33" pos:end="86:35"><name pos:start="86:33" pos:end="86:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="88:9" pos:end="92:9"><if pos:start="88:9" pos:end="92:9">if <condition pos:start="88:12" pos:end="88:37">(<expr pos:start="88:13" pos:end="88:36"><name pos:start="88:13" pos:end="88:29"><name pos:start="88:13" pos:end="88:13">r</name><operator pos:start="88:14" pos:end="88:15">-&gt;</operator><name pos:start="88:16" pos:end="88:18">req</name><operator pos:start="88:19" pos:end="88:19">.</operator><name pos:start="88:20" pos:end="88:22">cmd</name><operator pos:start="88:23" pos:end="88:23">.</operator><name pos:start="88:24" pos:end="88:26">buf</name><index pos:start="88:27" pos:end="88:29">[<expr pos:start="88:28" pos:end="88:28"><literal type="number" pos:start="88:28" pos:end="88:28">1</literal></expr>]</index></name> <operator pos:start="88:31" pos:end="88:31">&amp;</operator> <literal type="number" pos:start="88:33" pos:end="88:36">0xe0</literal></expr>)</condition> <block pos:start="88:39" pos:end="92:9">{<block_content pos:start="90:13" pos:end="90:33">

            <goto pos:start="90:13" pos:end="90:33">goto <name pos:start="90:18" pos:end="90:32">illegal_request</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="94:9" pos:end="98:9"><if pos:start="94:9" pos:end="98:9">if <condition pos:start="94:12" pos:end="94:45">(<expr pos:start="94:13" pos:end="94:44"><name pos:start="94:13" pos:end="94:26"><name pos:start="94:13" pos:end="94:13">r</name><operator pos:start="94:14" pos:end="94:15">-&gt;</operator><name pos:start="94:16" pos:end="94:18">req</name><operator pos:start="94:19" pos:end="94:19">.</operator><name pos:start="94:20" pos:end="94:22">cmd</name><operator pos:start="94:23" pos:end="94:23">.</operator><name pos:start="94:24" pos:end="94:26">lba</name></name> <operator pos:start="94:28" pos:end="94:28">&gt;</operator> <name pos:start="94:30" pos:end="94:44"><name pos:start="94:30" pos:end="94:30">s</name><operator pos:start="94:31" pos:end="94:32">-&gt;</operator><name pos:start="94:33" pos:end="94:36">qdev</name><operator pos:start="94:37" pos:end="94:37">.</operator><name pos:start="94:38" pos:end="94:44">max_lba</name></name></expr>)</condition> <block pos:start="94:47" pos:end="98:9">{<block_content pos:start="96:13" pos:end="96:29">

            <goto pos:start="96:13" pos:end="96:29">goto <name pos:start="96:18" pos:end="96:28">illegal_lba</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="100:9" pos:end="100:63"><expr pos:start="100:9" pos:end="100:62"><name pos:start="100:9" pos:end="100:17"><name pos:start="100:9" pos:end="100:9">r</name><operator pos:start="100:10" pos:end="100:11">-&gt;</operator><name pos:start="100:12" pos:end="100:17">sector</name></name> <operator pos:start="100:19" pos:end="100:19">=</operator> <name pos:start="100:21" pos:end="100:34"><name pos:start="100:21" pos:end="100:21">r</name><operator pos:start="100:22" pos:end="100:23">-&gt;</operator><name pos:start="100:24" pos:end="100:26">req</name><operator pos:start="100:27" pos:end="100:27">.</operator><name pos:start="100:28" pos:end="100:30">cmd</name><operator pos:start="100:31" pos:end="100:31">.</operator><name pos:start="100:32" pos:end="100:34">lba</name></name> <operator pos:start="100:36" pos:end="100:36">*</operator> <operator pos:start="100:38" pos:end="100:38">(</operator><name pos:start="100:39" pos:end="100:55"><name pos:start="100:39" pos:end="100:39">s</name><operator pos:start="100:40" pos:end="100:41">-&gt;</operator><name pos:start="100:42" pos:end="100:45">qdev</name><operator pos:start="100:46" pos:end="100:46">.</operator><name pos:start="100:47" pos:end="100:55">blocksize</name></name> <operator pos:start="100:57" pos:end="100:57">/</operator> <literal type="number" pos:start="100:59" pos:end="100:61">512</literal><operator pos:start="100:62" pos:end="100:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:58"><expr pos:start="102:9" pos:end="102:57"><name pos:start="102:9" pos:end="102:23"><name pos:start="102:9" pos:end="102:9">r</name><operator pos:start="102:10" pos:end="102:11">-&gt;</operator><name pos:start="102:12" pos:end="102:23">sector_count</name></name> <operator pos:start="102:25" pos:end="102:25">=</operator> <name pos:start="102:27" pos:end="102:29">len</name> <operator pos:start="102:31" pos:end="102:31">*</operator> <operator pos:start="102:33" pos:end="102:33">(</operator><name pos:start="102:34" pos:end="102:50"><name pos:start="102:34" pos:end="102:34">s</name><operator pos:start="102:35" pos:end="102:36">-&gt;</operator><name pos:start="102:37" pos:end="102:40">qdev</name><operator pos:start="102:41" pos:end="102:41">.</operator><name pos:start="102:42" pos:end="102:50">blocksize</name></name> <operator pos:start="102:52" pos:end="102:52">/</operator> <literal type="number" pos:start="102:54" pos:end="102:56">512</literal><operator pos:start="102:57" pos:end="102:57">)</operator></expr>;</expr_stmt>

        <break pos:start="104:9" pos:end="104:14">break;</break>

    <default pos:start="106:5" pos:end="106:12">default:</default>

        <expr_stmt pos:start="108:9" pos:end="108:16"><expr pos:start="108:9" pos:end="108:15"><call pos:start="108:9" pos:end="108:15"><name pos:start="108:9" pos:end="108:13">abort</name><argument_list pos:start="108:14" pos:end="108:15">()</argument_list></call></expr>;</expr_stmt>




    <label pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:15">illegal_lba</name>:</label>

        <expr_stmt pos:start="115:9" pos:end="115:62"><expr pos:start="115:9" pos:end="115:61"><call pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:28">scsi_check_condition</name><argument_list pos:start="115:29" pos:end="115:61">(<argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><name pos:start="115:30" pos:end="115:30">r</name></expr></argument>, <argument pos:start="115:33" pos:end="115:60"><expr pos:start="115:33" pos:end="115:60"><call pos:start="115:33" pos:end="115:60"><name pos:start="115:33" pos:end="115:42">SENSE_CODE</name><argument_list pos:start="115:43" pos:end="115:60">(<argument pos:start="115:44" pos:end="115:59"><expr pos:start="115:44" pos:end="115:59"><name pos:start="115:44" pos:end="115:59">LBA_OUT_OF_RANGE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></switch>

    <if_stmt pos:start="120:5" pos:end="124:5"><if pos:start="120:5" pos:end="124:5">if <condition pos:start="120:8" pos:end="120:29">(<expr pos:start="120:9" pos:end="120:28"><name pos:start="120:9" pos:end="120:23"><name pos:start="120:9" pos:end="120:9">r</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:23">sector_count</name></name> <operator pos:start="120:25" pos:end="120:26">==</operator> <literal type="number" pos:start="120:28" pos:end="120:28">0</literal></expr>)</condition> <block pos:start="120:31" pos:end="124:5">{<block_content pos:start="122:9" pos:end="122:41">

        <expr_stmt pos:start="122:9" pos:end="122:41"><expr pos:start="122:9" pos:end="122:40"><call pos:start="122:9" pos:end="122:40"><name pos:start="122:9" pos:end="122:25">scsi_req_complete</name><argument_list pos:start="122:26" pos:end="122:40">(<argument pos:start="122:27" pos:end="122:33"><expr pos:start="122:27" pos:end="122:33"><operator pos:start="122:27" pos:end="122:27">&amp;</operator><name pos:start="122:28" pos:end="122:33"><name pos:start="122:28" pos:end="122:28">r</name><operator pos:start="122:29" pos:end="122:30">-&gt;</operator><name pos:start="122:31" pos:end="122:33">req</name></name></expr></argument>, <argument pos:start="122:36" pos:end="122:39"><expr pos:start="122:36" pos:end="122:39"><name pos:start="122:36" pos:end="122:39">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="126:5" pos:end="126:32"><expr pos:start="126:5" pos:end="126:31"><call pos:start="126:5" pos:end="126:31"><name pos:start="126:5" pos:end="126:10">assert</name><argument_list pos:start="126:11" pos:end="126:31">(<argument pos:start="126:12" pos:end="126:30"><expr pos:start="126:12" pos:end="126:30"><name pos:start="126:12" pos:end="126:25"><name pos:start="126:12" pos:end="126:12">r</name><operator pos:start="126:13" pos:end="126:14">-&gt;</operator><name pos:start="126:15" pos:end="126:17">iov</name><operator pos:start="126:18" pos:end="126:18">.</operator><name pos:start="126:19" pos:end="126:25">iov_len</name></name> <operator pos:start="126:27" pos:end="126:28">==</operator> <literal type="number" pos:start="126:30" pos:end="126:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="128:5" pos:end="136:5"><if pos:start="128:5" pos:end="132:5">if <condition pos:start="128:8" pos:end="128:44">(<expr pos:start="128:9" pos:end="128:43"><name pos:start="128:9" pos:end="128:23"><name pos:start="128:9" pos:end="128:9">r</name><operator pos:start="128:10" pos:end="128:11">-&gt;</operator><name pos:start="128:12" pos:end="128:14">req</name><operator pos:start="128:15" pos:end="128:15">.</operator><name pos:start="128:16" pos:end="128:18">cmd</name><operator pos:start="128:19" pos:end="128:19">.</operator><name pos:start="128:20" pos:end="128:23">mode</name></name> <operator pos:start="128:25" pos:end="128:26">==</operator> <name pos:start="128:28" pos:end="128:43">SCSI_XFER_TO_DEV</name></expr>)</condition> <block pos:start="128:46" pos:end="132:5">{<block_content pos:start="130:9" pos:end="130:38">

        <return pos:start="130:9" pos:end="130:38">return <expr pos:start="130:16" pos:end="130:37"><operator pos:start="130:16" pos:end="130:16">-</operator><name pos:start="130:17" pos:end="130:31"><name pos:start="130:17" pos:end="130:17">r</name><operator pos:start="130:18" pos:end="130:19">-&gt;</operator><name pos:start="130:20" pos:end="130:31">sector_count</name></name> <operator pos:start="130:33" pos:end="130:33">*</operator> <literal type="number" pos:start="130:35" pos:end="130:37">512</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="132:7" pos:end="136:5">else <block pos:start="132:12" pos:end="136:5">{<block_content pos:start="134:9" pos:end="134:37">

        <return pos:start="134:9" pos:end="134:37">return <expr pos:start="134:16" pos:end="134:36"><name pos:start="134:16" pos:end="134:30"><name pos:start="134:16" pos:end="134:16">r</name><operator pos:start="134:17" pos:end="134:18">-&gt;</operator><name pos:start="134:19" pos:end="134:30">sector_count</name></name> <operator pos:start="134:32" pos:end="134:32">*</operator> <literal type="number" pos:start="134:34" pos:end="134:36">512</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
