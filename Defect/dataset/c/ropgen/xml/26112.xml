<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26112.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_reget_buffer</name><parameter_list pos:start="1:20" pos:end="1:58">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><call pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:14">av_assert0</name><argument_list pos:start="11:15" pos:end="11:55">(<argument pos:start="11:16" pos:end="11:54"><expr pos:start="11:16" pos:end="11:54"><name pos:start="11:16" pos:end="11:32"><name pos:start="11:16" pos:end="11:20">avctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:32">codec_type</name></name> <operator pos:start="11:34" pos:end="11:35">==</operator> <name pos:start="11:37" pos:end="11:54">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:67"><if pos:start="15:5" pos:end="17:67">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:23"><name pos:start="15:10" pos:end="15:14">frame</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">data</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:67"><block_content pos:start="17:9" pos:end="17:67">

        <return pos:start="17:9" pos:end="17:67">return <expr pos:start="17:16" pos:end="17:66"><call pos:start="17:16" pos:end="17:66"><name pos:start="17:16" pos:end="17:28">ff_get_buffer</name><argument_list pos:start="17:29" pos:end="17:66">(<argument pos:start="17:30" pos:end="17:34"><expr pos:start="17:30" pos:end="17:34"><name pos:start="17:30" pos:end="17:34">avctx</name></expr></argument>, <argument pos:start="17:37" pos:end="17:41"><expr pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:41">frame</name></expr></argument>, <argument pos:start="17:44" pos:end="17:65"><expr pos:start="17:44" pos:end="17:65"><name pos:start="17:44" pos:end="17:65">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:28">av_frame_is_writable</name><argument_list pos:start="21:29" pos:end="21:35">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:38" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:17">

        <expr_stmt pos:start="23:9" pos:end="23:91"><expr pos:start="23:9" pos:end="23:90"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">frame</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">pkt_pts</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <ternary pos:start="23:26" pos:end="23:90"><condition pos:start="23:26" pos:end="23:47"><expr pos:start="23:26" pos:end="23:45"><name pos:start="23:26" pos:end="23:45"><name pos:start="23:26" pos:end="23:30">avctx</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:40">internal</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:45">pkt</name></name></expr> ?</condition><then pos:start="23:49" pos:end="23:73"> <expr pos:start="23:49" pos:end="23:73"><name pos:start="23:49" pos:end="23:73"><name pos:start="23:49" pos:end="23:53">avctx</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:63">internal</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:68">pkt</name><operator pos:start="23:69" pos:end="23:70">-&gt;</operator><name pos:start="23:71" pos:end="23:73">pts</name></name></expr> </then><else pos:start="23:75" pos:end="23:90">: <expr pos:start="23:77" pos:end="23:90"><name pos:start="23:77" pos:end="23:90">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:13">frame</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:31">reordered_opaque</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <name pos:start="25:35" pos:end="25:57"><name pos:start="25:35" pos:end="25:39">avctx</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:57">reordered_opaque</name></name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:7">tmp</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:26"><name pos:start="33:11" pos:end="33:24">av_frame_alloc</name><argument_list pos:start="33:25" pos:end="33:26">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:21">av_frame_move_ref</name><argument_list pos:start="41:22" pos:end="41:33">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">tmp</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:61"><name pos:start="45:11" pos:end="45:23">ff_get_buffer</name><argument_list pos:start="45:24" pos:end="45:61">(<argument pos:start="45:25" pos:end="45:29"><expr pos:start="45:25" pos:end="45:29"><name pos:start="45:25" pos:end="45:29">avctx</name></expr></argument>, <argument pos:start="45:32" pos:end="45:36"><expr pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:36">frame</name></expr></argument>, <argument pos:start="45:39" pos:end="45:60"><expr pos:start="45:39" pos:end="45:60"><name pos:start="45:39" pos:end="45:60">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:19">

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:21">av_frame_free</name><argument_list pos:start="49:22" pos:end="49:27">(<argument pos:start="49:23" pos:end="49:26"><expr pos:start="49:23" pos:end="49:26"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:26">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:17">av_frame_copy</name><argument_list pos:start="57:18" pos:end="57:29">(<argument pos:start="57:19" pos:end="57:23"><expr pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:23">frame</name></expr></argument>, <argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:17">av_frame_free</name><argument_list pos:start="59:18" pos:end="59:23">(<argument pos:start="59:19" pos:end="59:22"><expr pos:start="59:19" pos:end="59:22"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:22">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
