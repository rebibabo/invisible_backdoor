<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18579.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">copy_bits</name><parameter_list pos:start="1:22" pos:end="5:51">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:35">PutBitContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">pb</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:41"><decl pos:start="3:23" pos:end="3:41"><type pos:start="3:23" pos:end="3:41"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">data</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:51"><decl pos:start="3:44" pos:end="3:51"><type pos:start="3:44" pos:end="3:51"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:39"><decl pos:start="5:23" pos:end="5:39"><type pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:35">GetBitContext</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:39">gb</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:50"><decl pos:start="5:42" pos:end="5:50"><type pos:start="5:42" pos:end="5:50"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:50">nbits</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="30:1">{<block_content pos:start="9:5" pos:end="28:58">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">rmn_bytes</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">rmn_bits</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:12">rmn_bits</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:24">rmn_bytes</name> <operator pos:start="13:26" pos:end="13:26">=</operator> <call pos:start="13:28" pos:end="13:44"><name pos:start="13:28" pos:end="13:40">get_bits_left</name><argument_list pos:start="13:41" pos:end="13:44">(<argument pos:start="13:42" pos:end="13:43"><expr pos:start="13:42" pos:end="13:43"><name pos:start="13:42" pos:end="13:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="20:18"><if pos:start="15:5" pos:end="20:18">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:16">rmn_bits</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:24">nbits</name></expr>)</condition><block type="pseudo" pos:start="20:5" pos:end="20:18"><block_content pos:start="20:5" pos:end="20:18">




    <expr_stmt pos:start="20:5" pos:end="20:18"><expr pos:start="20:5" pos:end="20:17"><name pos:start="20:5" pos:end="20:12">rmn_bits</name> <operator pos:start="20:14" pos:end="20:15">&amp;=</operator> <literal type="number" pos:start="20:17" pos:end="20:17">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <expr_stmt pos:start="20:20" pos:end="20:35"><expr pos:start="20:20" pos:end="20:34"><name pos:start="20:20" pos:end="20:28">rmn_bytes</name> <operator pos:start="20:30" pos:end="20:32">&gt;&gt;=</operator> <literal type="number" pos:start="20:34" pos:end="20:34">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="22:5" pos:end="24:55"><if pos:start="22:5" pos:end="24:55">if <condition pos:start="22:8" pos:end="22:48">(<expr pos:start="22:9" pos:end="22:47"><operator pos:start="22:9" pos:end="22:9">(</operator><name pos:start="22:10" pos:end="22:17">rmn_bits</name> <operator pos:start="22:19" pos:end="22:19">=</operator> <call pos:start="22:21" pos:end="22:42"><name pos:start="22:21" pos:end="22:25">FFMIN</name><argument_list pos:start="22:26" pos:end="22:42">(<argument pos:start="22:27" pos:end="22:34"><expr pos:start="22:27" pos:end="22:34"><name pos:start="22:27" pos:end="22:34">rmn_bits</name></expr></argument>, <argument pos:start="22:37" pos:end="22:41"><expr pos:start="22:37" pos:end="22:41"><name pos:start="22:37" pos:end="22:41">nbits</name></expr></argument>)</argument_list></call><operator pos:start="22:43" pos:end="22:43">)</operator> <operator pos:start="22:45" pos:end="22:45">&gt;</operator> <literal type="number" pos:start="22:47" pos:end="22:47">0</literal></expr>)</condition><block type="pseudo" pos:start="24:9" pos:end="24:55"><block_content pos:start="24:9" pos:end="24:55">

        <expr_stmt pos:start="24:9" pos:end="24:55"><expr pos:start="24:9" pos:end="24:54"><call pos:start="24:9" pos:end="24:54"><name pos:start="24:9" pos:end="24:16">put_bits</name><argument_list pos:start="24:17" pos:end="24:54">(<argument pos:start="24:18" pos:end="24:19"><expr pos:start="24:18" pos:end="24:19"><name pos:start="24:18" pos:end="24:19">pb</name></expr></argument>, <argument pos:start="24:22" pos:end="24:29"><expr pos:start="24:22" pos:end="24:29"><name pos:start="24:22" pos:end="24:29">rmn_bits</name></expr></argument>, <argument pos:start="24:32" pos:end="24:53"><expr pos:start="24:32" pos:end="24:53"><call pos:start="24:32" pos:end="24:53"><name pos:start="24:32" pos:end="24:39">get_bits</name><argument_list pos:start="24:40" pos:end="24:53">(<argument pos:start="24:41" pos:end="24:42"><expr pos:start="24:41" pos:end="24:42"><name pos:start="24:41" pos:end="24:42">gb</name></expr></argument>, <argument pos:start="24:45" pos:end="24:52"><expr pos:start="24:45" pos:end="24:52"><name pos:start="24:45" pos:end="24:52">rmn_bits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="26:5" pos:end="28:58"><expr pos:start="26:5" pos:end="28:57"><call pos:start="26:5" pos:end="28:57"><name pos:start="26:5" pos:end="26:16">ff_copy_bits</name><argument_list pos:start="26:17" pos:end="28:57">(<argument pos:start="26:18" pos:end="26:19"><expr pos:start="26:18" pos:end="26:19"><name pos:start="26:18" pos:end="26:19">pb</name></expr></argument>, <argument pos:start="26:22" pos:end="26:44"><expr pos:start="26:22" pos:end="26:44"><name pos:start="26:22" pos:end="26:25">data</name> <operator pos:start="26:27" pos:end="26:27">+</operator> <name pos:start="26:29" pos:end="26:32">size</name> <operator pos:start="26:34" pos:end="26:34">-</operator> <name pos:start="26:36" pos:end="26:44">rmn_bytes</name></expr></argument>,

                 <argument pos:start="28:18" pos:end="28:56"><expr pos:start="28:18" pos:end="28:56"><call pos:start="28:18" pos:end="28:56"><name pos:start="28:18" pos:end="28:22">FFMIN</name><argument_list pos:start="28:23" pos:end="28:56">(<argument pos:start="28:24" pos:end="28:39"><expr pos:start="28:24" pos:end="28:39"><name pos:start="28:24" pos:end="28:28">nbits</name> <operator pos:start="28:30" pos:end="28:30">-</operator> <name pos:start="28:32" pos:end="28:39">rmn_bits</name></expr></argument>, <argument pos:start="28:42" pos:end="28:55"><expr pos:start="28:42" pos:end="28:55"><name pos:start="28:42" pos:end="28:50">rmn_bytes</name> <operator pos:start="28:52" pos:end="28:53">&lt;&lt;</operator> <literal type="number" pos:start="28:55" pos:end="28:55">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
