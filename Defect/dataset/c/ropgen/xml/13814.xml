<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13814.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">qemu_aio_flush</name><parameter_list pos:start="1:20" pos:end="1:25">(<parameter pos:start="1:21" pos:end="1:24"><decl pos:start="1:21" pos:end="1:24"><type pos:start="1:21" pos:end="1:24"><name pos:start="1:21" pos:end="1:24">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:40">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AioHandler</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">node</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="39:40">do <block pos:start="11:8" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</expr_stmt>



	<comment type="block" pos:start="17:9" pos:end="23:11">/*

	 * If there are pending emulated aio start them now so flush

	 * will be able to return 1.

	 */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:21">qemu_aio_wait</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>



        <macro pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:21">QLIST_FOREACH</name><argument_list pos:start="29:22" pos:end="29:48">(<argument pos:start="29:23" pos:end="29:26">node</argument>, <argument pos:start="29:29" pos:end="29:41">&amp;aio_handlers</argument>, <argument pos:start="29:44" pos:end="29:47">node</argument>)</argument_list></macro> <block pos:start="29:50" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:13">

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:31">(<expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:20">node</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:30">io_flush</name></name></expr>)</condition> <block pos:start="31:33" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:52">

                <expr_stmt pos:start="33:17" pos:end="33:52"><expr pos:start="33:17" pos:end="33:51"><name pos:start="33:17" pos:end="33:19">ret</name> <operator pos:start="33:21" pos:end="33:22">|=</operator> <call pos:start="33:24" pos:end="33:51"><name pos:start="33:24" pos:end="33:37"><name pos:start="33:24" pos:end="33:27">node</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:37">io_flush</name></name><argument_list pos:start="33:38" pos:end="33:51">(<argument pos:start="33:39" pos:end="33:50"><expr pos:start="33:39" pos:end="33:50"><name pos:start="33:39" pos:end="33:50"><name pos:start="33:39" pos:end="33:42">node</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:50">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block> while <condition pos:start="39:13" pos:end="39:39">(<expr pos:start="39:14" pos:end="39:38"><call pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:25">qemu_bh_poll</name><argument_list pos:start="39:26" pos:end="39:27">()</argument_list></call> <operator pos:start="39:29" pos:end="39:30">||</operator> <name pos:start="39:32" pos:end="39:34">ret</name> <operator pos:start="39:36" pos:end="39:36">&gt;</operator> <literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr>)</condition>;</do>

</block_content>}</block></function>
</unit>
