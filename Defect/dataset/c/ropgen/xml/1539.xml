<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1539.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">ini_print_object_header</name><parameter_list pos:start="1:36" pos:end="1:53">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:48"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:34">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PrintElement</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">el</name> <init pos:start="7:22" pos:end="7:50">= <expr pos:start="7:24" pos:end="7:50"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:27">octx</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:34">prefix</name></name> <operator pos:start="7:36" pos:end="7:36">+</operator> <name pos:start="7:38" pos:end="7:47"><name pos:start="7:38" pos:end="7:41">octx</name><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:47">level</name></name> <operator pos:start="7:49" pos:end="7:49">-</operator><literal type="number" pos:start="7:50" pos:end="7:50">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:37"><if pos:start="11:5" pos:end="13:37">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:10">el</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:20">nb_elems</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:37"><block_content pos:start="13:9" pos:end="13:37">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><call pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:19">avio_printf</name><argument_list pos:start="13:20" pos:end="13:36">(<argument pos:start="13:21" pos:end="13:29"><expr pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:29">probe_out</name></expr></argument>, <argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><literal type="string" pos:start="13:32" pos:end="13:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><call pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:15">avio_printf</name><argument_list pos:start="17:16" pos:end="17:31">(<argument pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:25">probe_out</name></expr></argument>, <argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><literal type="string" pos:start="17:28" pos:end="17:30">"["</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:36">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:24">octx</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:30">level</name></name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:60">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:10">el</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:17">octx</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:24">prefix</name></name> <operator pos:start="23:26" pos:end="23:26">+</operator> <name pos:start="23:28" pos:end="23:28">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:19">avio_printf</name><argument_list pos:start="25:20" pos:end="25:47">(<argument pos:start="25:21" pos:end="25:29"><expr pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:29">probe_out</name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><literal type="string" pos:start="25:32" pos:end="25:36">"%s."</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:46"><expr pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:40">el</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:46">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:60"><if pos:start="27:9" pos:end="29:60">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:14">el</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">index</name></name> <operator pos:start="27:23" pos:end="27:24">&gt;=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:60"><block_content pos:start="29:13" pos:end="29:60">

            <expr_stmt pos:start="29:13" pos:end="29:60"><expr pos:start="29:13" pos:end="29:59"><call pos:start="29:13" pos:end="29:59"><name pos:start="29:13" pos:end="29:23">avio_printf</name><argument_list pos:start="29:24" pos:end="29:59">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:33">probe_out</name></expr></argument>, <argument pos:start="29:36" pos:end="29:47"><expr pos:start="29:36" pos:end="29:47"><literal type="string" pos:start="29:36" pos:end="29:38">"%"</literal><name pos:start="29:39" pos:end="29:44">PRId64</name><literal type="string" pos:start="29:45" pos:end="29:47">"."</literal></expr></argument>, <argument pos:start="29:50" pos:end="29:58"><expr pos:start="29:50" pos:end="29:58"><name pos:start="29:50" pos:end="29:58"><name pos:start="29:50" pos:end="29:51">el</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:58">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:15">avio_printf</name><argument_list pos:start="35:16" pos:end="35:38">(<argument pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:25">probe_out</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><literal type="string" pos:start="35:28" pos:end="35:31">"%s"</literal></expr></argument>, <argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:59"><if pos:start="37:5" pos:end="39:59">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:10">el</name> <operator pos:start="37:12" pos:end="37:13">&amp;&amp;</operator> <name pos:start="37:15" pos:end="37:22"><name pos:start="37:15" pos:end="37:16">el</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">type</name></name> <operator pos:start="37:24" pos:end="37:25">==</operator> <name pos:start="37:27" pos:end="37:31">ARRAY</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:59"><block_content pos:start="39:9" pos:end="39:59">

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><call pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:19">avio_printf</name><argument_list pos:start="39:20" pos:end="39:58">(<argument pos:start="39:21" pos:end="39:29"><expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:29">probe_out</name></expr></argument>, <argument pos:start="39:32" pos:end="39:43"><expr pos:start="39:32" pos:end="39:43"><literal type="string" pos:start="39:32" pos:end="39:35">".%"</literal><name pos:start="39:36" pos:end="39:41">PRId64</name><literal type="string" pos:start="39:42" pos:end="39:43">""</literal></expr></argument>, <argument pos:start="39:46" pos:end="39:57"><expr pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:47">el</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:57">nb_elems</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:15">avio_printf</name><argument_list pos:start="41:16" pos:end="41:33">(<argument pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:25">probe_out</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><literal type="string" pos:start="41:28" pos:end="41:32">"]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
