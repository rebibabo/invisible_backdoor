<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15453.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">do_syscall</name><parameter_list pos:start="1:22" pos:end="3:51">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:30">CPUState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:50"><decl pos:start="3:23" pos:end="3:50"><type pos:start="3:23" pos:end="3:50"><name pos:start="3:23" pos:end="3:44"><name pos:start="3:23" pos:end="3:28">struct</name> <name pos:start="3:30" pos:end="3:44">kqemu_cpu_state</name></name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">kenv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">selector</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:12">selector</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:19">env</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:25">star</name></name> <operator pos:start="11:27" pos:end="11:28">&gt;&gt;</operator> <literal type="number" pos:start="11:30" pos:end="11:31">32</literal><operator pos:start="11:32" pos:end="11:32">)</operator> <operator pos:start="11:34" pos:end="11:34">&amp;</operator> <literal type="number" pos:start="11:36" pos:end="11:41">0xffff</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:20">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="15:5" pos:end="99:5"><if pos:start="15:5" pos:end="63:5">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">env</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">hflags</name></name> <operator pos:start="15:21" pos:end="15:21">&amp;</operator> <name pos:start="15:23" pos:end="15:33">HF_LMA_MASK</name></expr>)</condition> <block pos:start="15:36" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:34">

        <decl_stmt pos:start="17:9" pos:end="17:19"><decl pos:start="17:9" pos:end="17:18"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:18">code64</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">regs</name><index pos:start="21:18" pos:end="21:24">[<expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:23">R_ECX</name></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:31">kenv</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:41">next_eip</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">regs</name><index pos:start="23:18" pos:end="23:21">[<expr pos:start="23:19" pos:end="23:20"><literal type="number" pos:start="23:19" pos:end="23:20">11</literal></expr>]</index></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:27">env</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">eflags</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:14">code64</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:28"><name pos:start="27:18" pos:end="27:20">env</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:28">hflags</name></name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <name pos:start="27:32" pos:end="27:43">HF_CS64_MASK</name></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:23">cpu_x86_set_cpl</name><argument_list pos:start="31:24" pos:end="31:31">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">env</name></expr></argument>, <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="41:87"><expr pos:start="33:9" pos:end="41:86"><call pos:start="33:9" pos:end="41:86"><name pos:start="33:9" pos:end="33:30">cpu_x86_load_seg_cache</name><argument_list pos:start="33:31" pos:end="41:86">(<argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">env</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">R_CS</name></expr></argument>, <argument pos:start="33:43" pos:end="33:59"><expr pos:start="33:43" pos:end="33:59"><name pos:start="33:43" pos:end="33:50">selector</name> <operator pos:start="33:52" pos:end="33:52">&amp;</operator> <literal type="number" pos:start="33:54" pos:end="33:59">0xfffc</literal></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr></argument>, <argument pos:start="35:35" pos:end="35:44"><expr pos:start="35:35" pos:end="35:44"><literal type="number" pos:start="35:35" pos:end="35:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="37:32" pos:end="41:85"><expr pos:start="37:32" pos:end="41:85"><name pos:start="37:32" pos:end="37:42">DESC_G_MASK</name> <operator pos:start="37:44" pos:end="37:44">|</operator> <name pos:start="37:46" pos:end="37:56">DESC_P_MASK</name> <operator pos:start="37:58" pos:end="37:58">|</operator>

                               <name pos:start="39:32" pos:end="39:42">DESC_S_MASK</name> <operator pos:start="39:44" pos:end="39:44">|</operator>

                               <name pos:start="41:32" pos:end="41:43">DESC_CS_MASK</name> <operator pos:start="41:45" pos:end="41:45">|</operator> <name pos:start="41:47" pos:end="41:57">DESC_R_MASK</name> <operator pos:start="41:59" pos:end="41:59">|</operator> <name pos:start="41:61" pos:end="41:71">DESC_A_MASK</name> <operator pos:start="41:73" pos:end="41:73">|</operator> <name pos:start="41:75" pos:end="41:85">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="51:58"><expr pos:start="43:9" pos:end="51:57"><call pos:start="43:9" pos:end="51:57"><name pos:start="43:9" pos:end="43:30">cpu_x86_load_seg_cache</name><argument_list pos:start="43:31" pos:end="51:57">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">env</name></expr></argument>, <argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">R_SS</name></expr></argument>, <argument pos:start="43:43" pos:end="43:65"><expr pos:start="43:43" pos:end="43:65"><operator pos:start="43:43" pos:end="43:43">(</operator><name pos:start="43:44" pos:end="43:51">selector</name> <operator pos:start="43:53" pos:end="43:53">+</operator> <literal type="number" pos:start="43:55" pos:end="43:55">8</literal><operator pos:start="43:56" pos:end="43:56">)</operator> <operator pos:start="43:58" pos:end="43:58">&amp;</operator> <literal type="number" pos:start="43:60" pos:end="43:65">0xfffc</literal></expr></argument>,

                               <argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:44"><expr pos:start="45:35" pos:end="45:44"><literal type="number" pos:start="45:35" pos:end="45:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="47:32" pos:end="51:56"><expr pos:start="47:32" pos:end="51:56"><name pos:start="47:32" pos:end="47:42">DESC_G_MASK</name> <operator pos:start="47:44" pos:end="47:44">|</operator> <name pos:start="47:46" pos:end="47:56">DESC_B_MASK</name> <operator pos:start="47:58" pos:end="47:58">|</operator> <name pos:start="47:60" pos:end="47:70">DESC_P_MASK</name> <operator pos:start="47:72" pos:end="47:72">|</operator>

                               <name pos:start="49:32" pos:end="49:42">DESC_S_MASK</name> <operator pos:start="49:44" pos:end="49:44">|</operator>

                               <name pos:start="51:32" pos:end="51:42">DESC_W_MASK</name> <operator pos:start="51:44" pos:end="51:44">|</operator> <name pos:start="51:46" pos:end="51:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">env</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:19">eflags</name></name> <operator pos:start="53:21" pos:end="53:22">&amp;=</operator> <operator pos:start="53:24" pos:end="53:24">~</operator><name pos:start="53:25" pos:end="53:34"><name pos:start="53:25" pos:end="53:27">env</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:34">fmask</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:34"><if pos:start="55:9" pos:end="57:34">if <condition pos:start="55:12" pos:end="55:19">(<expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">code64</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:34"><block_content pos:start="57:13" pos:end="57:34">

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">env</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:20">eip</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:26">env</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:33">lstar</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="61:34">else<block type="pseudo" pos:start="61:13" pos:end="61:34"><block_content pos:start="61:13" pos:end="61:34">

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">eip</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:26">env</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:33">cstar</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="99:5">else

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

    <block pos:start="67:5" pos:end="99:5">{<block_content pos:start="69:9" pos:end="97:39">

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">env</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:17">regs</name><index pos:start="69:18" pos:end="69:24">[<expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:23">R_ECX</name></expr>]</index></name> <operator pos:start="69:26" pos:end="69:26">=</operator> <operator pos:start="69:28" pos:end="69:28">(</operator><name pos:start="69:29" pos:end="69:36">uint32_t</name><operator pos:start="69:37" pos:end="69:37">)</operator><name pos:start="69:38" pos:end="69:51"><name pos:start="69:38" pos:end="69:41">kenv</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:51">next_eip</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><call pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:23">cpu_x86_set_cpl</name><argument_list pos:start="73:24" pos:end="73:31">(<argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">env</name></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="83:73"><expr pos:start="75:9" pos:end="83:72"><call pos:start="75:9" pos:end="83:72"><name pos:start="75:9" pos:end="75:30">cpu_x86_load_seg_cache</name><argument_list pos:start="75:31" pos:end="83:72">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">env</name></expr></argument>, <argument pos:start="75:37" pos:end="75:40"><expr pos:start="75:37" pos:end="75:40"><name pos:start="75:37" pos:end="75:40">R_CS</name></expr></argument>, <argument pos:start="75:43" pos:end="75:59"><expr pos:start="75:43" pos:end="75:59"><name pos:start="75:43" pos:end="75:50">selector</name> <operator pos:start="75:52" pos:end="75:52">&amp;</operator> <literal type="number" pos:start="75:54" pos:end="75:59">0xfffc</literal></expr></argument>,

                           <argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr></argument>, <argument pos:start="77:31" pos:end="77:40"><expr pos:start="77:31" pos:end="77:40"><literal type="number" pos:start="77:31" pos:end="77:40">0xffffffff</literal></expr></argument>,

                               <argument pos:start="79:32" pos:end="83:71"><expr pos:start="79:32" pos:end="83:71"><name pos:start="79:32" pos:end="79:42">DESC_G_MASK</name> <operator pos:start="79:44" pos:end="79:44">|</operator> <name pos:start="79:46" pos:end="79:56">DESC_B_MASK</name> <operator pos:start="79:58" pos:end="79:58">|</operator> <name pos:start="79:60" pos:end="79:70">DESC_P_MASK</name> <operator pos:start="79:72" pos:end="79:72">|</operator>

                               <name pos:start="81:32" pos:end="81:42">DESC_S_MASK</name> <operator pos:start="81:44" pos:end="81:44">|</operator>

                               <name pos:start="83:32" pos:end="83:43">DESC_CS_MASK</name> <operator pos:start="83:45" pos:end="83:45">|</operator> <name pos:start="83:47" pos:end="83:57">DESC_R_MASK</name> <operator pos:start="83:59" pos:end="83:59">|</operator> <name pos:start="83:61" pos:end="83:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="93:58"><expr pos:start="85:9" pos:end="93:57"><call pos:start="85:9" pos:end="93:57"><name pos:start="85:9" pos:end="85:30">cpu_x86_load_seg_cache</name><argument_list pos:start="85:31" pos:end="93:57">(<argument pos:start="85:32" pos:end="85:34"><expr pos:start="85:32" pos:end="85:34"><name pos:start="85:32" pos:end="85:34">env</name></expr></argument>, <argument pos:start="85:37" pos:end="85:40"><expr pos:start="85:37" pos:end="85:40"><name pos:start="85:37" pos:end="85:40">R_SS</name></expr></argument>, <argument pos:start="85:43" pos:end="85:65"><expr pos:start="85:43" pos:end="85:65"><operator pos:start="85:43" pos:end="85:43">(</operator><name pos:start="85:44" pos:end="85:51">selector</name> <operator pos:start="85:53" pos:end="85:53">+</operator> <literal type="number" pos:start="85:55" pos:end="85:55">8</literal><operator pos:start="85:56" pos:end="85:56">)</operator> <operator pos:start="85:58" pos:end="85:58">&amp;</operator> <literal type="number" pos:start="85:60" pos:end="85:65">0xfffc</literal></expr></argument>,

                               <argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><literal type="number" pos:start="87:32" pos:end="87:32">0</literal></expr></argument>, <argument pos:start="87:35" pos:end="87:44"><expr pos:start="87:35" pos:end="87:44"><literal type="number" pos:start="87:35" pos:end="87:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="89:32" pos:end="93:56"><expr pos:start="89:32" pos:end="93:56"><name pos:start="89:32" pos:end="89:42">DESC_G_MASK</name> <operator pos:start="89:44" pos:end="89:44">|</operator> <name pos:start="89:46" pos:end="89:56">DESC_B_MASK</name> <operator pos:start="89:58" pos:end="89:58">|</operator> <name pos:start="89:60" pos:end="89:70">DESC_P_MASK</name> <operator pos:start="89:72" pos:end="89:72">|</operator>

                               <name pos:start="91:32" pos:end="91:42">DESC_S_MASK</name> <operator pos:start="91:44" pos:end="91:44">|</operator>

                               <name pos:start="93:32" pos:end="93:42">DESC_W_MASK</name> <operator pos:start="93:44" pos:end="93:44">|</operator> <name pos:start="93:46" pos:end="93:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:11">env</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:19">eflags</name></name> <operator pos:start="95:21" pos:end="95:22">&amp;=</operator> <operator pos:start="95:24" pos:end="95:24">~</operator><operator pos:start="95:25" pos:end="95:25">(</operator><name pos:start="95:26" pos:end="95:32">IF_MASK</name> <operator pos:start="95:34" pos:end="95:34">|</operator> <name pos:start="95:36" pos:end="95:42">RF_MASK</name> <operator pos:start="95:44" pos:end="95:44">|</operator> <name pos:start="95:46" pos:end="95:52">VM_MASK</name><operator pos:start="95:53" pos:end="95:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:16">eip</name></name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">(</operator><name pos:start="97:21" pos:end="97:28">uint32_t</name><operator pos:start="97:29" pos:end="97:29">)</operator><name pos:start="97:30" pos:end="97:38"><name pos:start="97:30" pos:end="97:32">env</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:38">star</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
