<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8423.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">generate_codebook</name><parameter_list pos:start="1:30" pos:end="5:51">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:40">RoqContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">enc</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:58">RoqTempdata</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">tempdata</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:41">points</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">inputCount</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:76"><decl pos:start="3:60" pos:end="3:76"><type pos:start="3:60" pos:end="3:76"><name pos:start="3:60" pos:end="3:67">roq_cell</name> <modifier pos:start="3:69" pos:end="3:69">*</modifier></type><name pos:start="3:70" pos:end="3:76">results</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:38"><decl pos:start="5:31" pos:end="5:38"><type pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:38">size</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:50"><decl pos:start="5:41" pos:end="5:50"><type pos:start="5:41" pos:end="5:50"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:50">cbsize</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:22">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">c_size</name> <init pos:start="11:16" pos:end="11:28">= <expr pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:21">size</name><operator pos:start="11:22" pos:end="11:22">*</operator><name pos:start="11:23" pos:end="11:26">size</name><operator pos:start="11:27" pos:end="11:27">/</operator><literal type="number" pos:start="11:28" pos:end="11:28">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:12">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:59"><decl pos:start="15:5" pos:end="15:58"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:17">codebook</name> <init pos:start="15:19" pos:end="15:58">= <expr pos:start="15:21" pos:end="15:58"><call pos:start="15:21" pos:end="15:58"><name pos:start="15:21" pos:end="15:29">av_malloc</name><argument_list pos:start="15:30" pos:end="15:58">(<argument pos:start="15:31" pos:end="15:57"><expr pos:start="15:31" pos:end="15:57"><literal type="number" pos:start="15:31" pos:end="15:31">6</literal><operator pos:start="15:32" pos:end="15:32">*</operator><name pos:start="15:33" pos:end="15:38">c_size</name><operator pos:start="15:39" pos:end="15:39">*</operator><name pos:start="15:40" pos:end="15:45">cbsize</name><operator pos:start="15:46" pos:end="15:46">*</operator><sizeof pos:start="15:47" pos:end="15:57">sizeof<argument_list pos:start="15:53" pos:end="15:57">(<argument pos:start="15:54" pos:end="15:56"><expr pos:start="15:54" pos:end="15:56"><name pos:start="15:54" pos:end="15:56">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">int</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:19">closest_cb</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:43"><if pos:start="21:5" pos:end="23:64">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <literal type="number" pos:start="21:17" pos:end="21:17">4</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:64"><block_content pos:start="23:9" pos:end="23:64">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:18">closest_cb</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:63"><name pos:start="23:22" pos:end="23:30">av_malloc</name><argument_list pos:start="23:31" pos:end="23:63">(<argument pos:start="23:32" pos:end="23:62"><expr pos:start="23:32" pos:end="23:62"><literal type="number" pos:start="23:32" pos:end="23:32">6</literal><operator pos:start="23:33" pos:end="23:33">*</operator><name pos:start="23:34" pos:end="23:39">c_size</name><operator pos:start="23:40" pos:end="23:40">*</operator><name pos:start="23:41" pos:end="23:50">inputCount</name><operator pos:start="23:51" pos:end="23:51">*</operator><sizeof pos:start="23:52" pos:end="23:62">sizeof<argument_list pos:start="23:58" pos:end="23:62">(<argument pos:start="23:59" pos:end="23:61"><expr pos:start="23:59" pos:end="23:61"><name pos:start="23:59" pos:end="23:61">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:43">else<block type="pseudo" pos:start="27:9" pos:end="27:43"><block_content pos:start="27:9" pos:end="27:43">

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:18">closest_cb</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:42"><name pos:start="27:22" pos:end="27:29">tempdata</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:42">closest_cb2</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:95"><expr pos:start="31:5" pos:end="31:94"><call pos:start="31:5" pos:end="31:94"><name pos:start="31:5" pos:end="31:16">ff_init_elbg</name><argument_list pos:start="31:17" pos:end="31:94">(<argument pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:23"><name pos:start="31:18" pos:end="31:23">points</name></expr></argument>, <argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><literal type="number" pos:start="31:26" pos:end="31:26">6</literal><operator pos:start="31:27" pos:end="31:27">*</operator><name pos:start="31:28" pos:end="31:33">c_size</name></expr></argument>, <argument pos:start="31:36" pos:end="31:45"><expr pos:start="31:36" pos:end="31:45"><name pos:start="31:36" pos:end="31:45">inputCount</name></expr></argument>, <argument pos:start="31:48" pos:end="31:55"><expr pos:start="31:48" pos:end="31:55"><name pos:start="31:48" pos:end="31:55">codebook</name></expr></argument>, <argument pos:start="31:58" pos:end="31:63"><expr pos:start="31:58" pos:end="31:63"><name pos:start="31:58" pos:end="31:63">cbsize</name></expr></argument>, <argument pos:start="31:66" pos:end="31:66"><expr pos:start="31:66" pos:end="31:66"><literal type="number" pos:start="31:66" pos:end="31:66">1</literal></expr></argument>, <argument pos:start="31:69" pos:end="31:78"><expr pos:start="31:69" pos:end="31:78"><name pos:start="31:69" pos:end="31:78">closest_cb</name></expr></argument>, <argument pos:start="31:81" pos:end="31:93"><expr pos:start="31:81" pos:end="31:93"><operator pos:start="31:81" pos:end="31:81">&amp;</operator><name pos:start="31:82" pos:end="31:93"><name pos:start="31:82" pos:end="31:84">enc</name><operator pos:start="31:85" pos:end="31:86">-&gt;</operator><name pos:start="31:87" pos:end="31:93">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:93"><expr pos:start="33:5" pos:end="33:92"><call pos:start="33:5" pos:end="33:92"><name pos:start="33:5" pos:end="33:14">ff_do_elbg</name><argument_list pos:start="33:15" pos:end="33:92">(<argument pos:start="33:16" pos:end="33:21"><expr pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:21">points</name></expr></argument>, <argument pos:start="33:24" pos:end="33:31"><expr pos:start="33:24" pos:end="33:31"><literal type="number" pos:start="33:24" pos:end="33:24">6</literal><operator pos:start="33:25" pos:end="33:25">*</operator><name pos:start="33:26" pos:end="33:31">c_size</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43">inputCount</name></expr></argument>, <argument pos:start="33:46" pos:end="33:53"><expr pos:start="33:46" pos:end="33:53"><name pos:start="33:46" pos:end="33:53">codebook</name></expr></argument>, <argument pos:start="33:56" pos:end="33:61"><expr pos:start="33:56" pos:end="33:61"><name pos:start="33:56" pos:end="33:61">cbsize</name></expr></argument>, <argument pos:start="33:64" pos:end="33:64"><expr pos:start="33:64" pos:end="33:64"><literal type="number" pos:start="33:64" pos:end="33:64">1</literal></expr></argument>, <argument pos:start="33:67" pos:end="33:76"><expr pos:start="33:67" pos:end="33:76"><name pos:start="33:67" pos:end="33:76">closest_cb</name></expr></argument>, <argument pos:start="33:79" pos:end="33:91"><expr pos:start="33:79" pos:end="33:91"><operator pos:start="33:79" pos:end="33:79">&amp;</operator><name pos:start="33:80" pos:end="33:91"><name pos:start="33:80" pos:end="33:82">enc</name><operator pos:start="33:83" pos:end="33:84">-&gt;</operator><name pos:start="33:85" pos:end="33:91">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:28"><if pos:start="37:5" pos:end="39:28">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:15">==</operator> <literal type="number" pos:start="37:17" pos:end="37:17">4</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:28"><block_content pos:start="39:9" pos:end="39:28">

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:15">av_free</name><argument_list pos:start="39:16" pos:end="39:27">(<argument pos:start="39:17" pos:end="39:26"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:26">closest_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">buf</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <name pos:start="43:11" pos:end="43:18">codebook</name></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="61:9">for <control pos:start="45:9" pos:end="45:28">(<init pos:start="45:10" pos:end="45:13"><expr pos:start="45:10" pos:end="45:12"><name pos:start="45:10" pos:end="45:10">i</name><operator pos:start="45:11" pos:end="45:11">=</operator><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</init> <condition pos:start="45:15" pos:end="45:23"><expr pos:start="45:15" pos:end="45:22"><name pos:start="45:15" pos:end="45:15">i</name><operator pos:start="45:16" pos:end="45:16">&lt;</operator><name pos:start="45:17" pos:end="45:22">cbsize</name></expr>;</condition> <incr pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:25">i</name><operator pos:start="45:26" pos:end="45:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="61:9"><block_content pos:start="47:9" pos:end="61:9">

        <for pos:start="47:9" pos:end="61:9">for <control pos:start="47:13" pos:end="47:32">(<init pos:start="47:14" pos:end="47:17"><expr pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:14">k</name><operator pos:start="47:15" pos:end="47:15">=</operator><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</init> <condition pos:start="47:19" pos:end="47:27"><expr pos:start="47:19" pos:end="47:26"><name pos:start="47:19" pos:end="47:19">k</name><operator pos:start="47:20" pos:end="47:20">&lt;</operator><name pos:start="47:21" pos:end="47:26">c_size</name></expr>;</condition> <incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:29">k</name><operator pos:start="47:30" pos:end="47:31">++</operator></expr></incr>)</control> <block pos:start="47:34" pos:end="61:9">{<block_content pos:start="49:13" pos:end="59:22">

            <for pos:start="49:13" pos:end="51:39">for<control pos:start="49:16" pos:end="49:30">(<init pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:17">j</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</init> <condition pos:start="49:22" pos:end="49:25"><expr pos:start="49:22" pos:end="49:24"><name pos:start="49:22" pos:end="49:22">j</name><operator pos:start="49:23" pos:end="49:23">&lt;</operator><literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr>;</condition> <incr pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">j</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:17" pos:end="51:39"><block_content pos:start="51:17" pos:end="51:39">

                <expr_stmt pos:start="51:17" pos:end="51:39"><expr pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:23">results</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:26">y</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">j</name></expr>]</index></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <operator pos:start="51:33" pos:end="51:33">*</operator><name pos:start="51:34" pos:end="51:36">buf</name><operator pos:start="51:37" pos:end="51:38">++</operator></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="55:13" pos:end="55:65"><expr pos:start="55:13" pos:end="55:64"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:19">results</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:22">u</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator>    <operator pos:start="55:29" pos:end="55:29">(</operator><operator pos:start="55:30" pos:end="55:30">*</operator><name pos:start="55:31" pos:end="55:33">buf</name><operator pos:start="55:34" pos:end="55:35">++</operator> <operator pos:start="55:37" pos:end="55:37">+</operator> <name pos:start="55:39" pos:end="55:49">CHROMA_BIAS</name><operator pos:start="55:50" pos:end="55:50">/</operator><literal type="number" pos:start="55:51" pos:end="55:51">2</literal><operator pos:start="55:52" pos:end="55:52">)</operator><operator pos:start="55:53" pos:end="55:53">/</operator><name pos:start="55:54" pos:end="55:64">CHROMA_BIAS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:65"><expr pos:start="57:13" pos:end="57:64"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:19">results</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:22">v</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator>    <operator pos:start="57:29" pos:end="57:29">(</operator><operator pos:start="57:30" pos:end="57:30">*</operator><name pos:start="57:31" pos:end="57:33">buf</name><operator pos:start="57:34" pos:end="57:35">++</operator> <operator pos:start="57:37" pos:end="57:37">+</operator> <name pos:start="57:39" pos:end="57:49">CHROMA_BIAS</name><operator pos:start="57:50" pos:end="57:50">/</operator><literal type="number" pos:start="57:51" pos:end="57:51">2</literal><operator pos:start="57:52" pos:end="57:52">)</operator><operator pos:start="57:53" pos:end="57:53">/</operator><name pos:start="57:54" pos:end="57:64">CHROMA_BIAS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:19">results</name><operator pos:start="59:20" pos:end="59:21">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></for>



    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><call pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:11">av_free</name><argument_list pos:start="65:12" pos:end="65:21">(<argument pos:start="65:13" pos:end="65:20"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:20">codebook</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
