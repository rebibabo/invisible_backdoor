<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3036.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:35">dec10_quick_imm</name><parameter_list pos:start="1:36" pos:end="1:53">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:48">DisasContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="249:1">{<block_content pos:start="5:5" pos:end="247:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">imm</name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:18" pos:end="5:21">simm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">op</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:23">/* sign extend.  */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:7">imm</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:12">dc</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:16">ir</name></name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <operator pos:start="13:20" pos:end="13:20">(</operator><operator pos:start="13:21" pos:end="13:21">(</operator><literal type="number" pos:start="13:22" pos:end="13:22">1</literal> <operator pos:start="13:24" pos:end="13:25">&lt;&lt;</operator> <literal type="number" pos:start="13:27" pos:end="13:27">6</literal><operator pos:start="13:28" pos:end="13:28">)</operator> <operator pos:start="13:30" pos:end="13:30">-</operator> <literal type="number" pos:start="13:32" pos:end="13:32">1</literal><operator pos:start="13:33" pos:end="13:33">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:8">simm</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:18">int8_t</name><operator pos:start="15:19" pos:end="15:19">)</operator> <operator pos:start="15:21" pos:end="15:21">(</operator><name pos:start="15:22" pos:end="15:24">imm</name> <operator pos:start="15:26" pos:end="15:27">&lt;&lt;</operator> <literal type="number" pos:start="15:29" pos:end="15:29">2</literal><operator pos:start="15:30" pos:end="15:30">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:8">simm</name> <operator pos:start="17:10" pos:end="17:12">&gt;&gt;=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="245:5">switch <condition pos:start="19:12" pos:end="19:23">(<expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:14">dc</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">opcode</name></name></expr>)</condition> <block pos:start="19:25" pos:end="245:5">{<block_content pos:start="21:9" pos:end="243:18">

        <case pos:start="21:9" pos:end="21:34">case <expr pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:33">CRISV10_QIMM_BDAP_R0</name></expr>:</case>

        <case pos:start="23:9" pos:end="23:34">case <expr pos:start="23:14" pos:end="23:33"><name pos:start="23:14" pos:end="23:33">CRISV10_QIMM_BDAP_R1</name></expr>:</case>

        <case pos:start="25:9" pos:end="25:34">case <expr pos:start="25:14" pos:end="25:33"><name pos:start="25:14" pos:end="25:33">CRISV10_QIMM_BDAP_R2</name></expr>:</case>

        <case pos:start="27:9" pos:end="27:34">case <expr pos:start="27:14" pos:end="27:33"><name pos:start="27:14" pos:end="27:33">CRISV10_QIMM_BDAP_R3</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:16">simm</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:26">int8_t</name><operator pos:start="29:27" pos:end="29:27">)</operator><name pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:29">dc</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:33">ir</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:53"><expr pos:start="31:13" pos:end="31:52"><call pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:19">LOG_DIS</name><argument_list pos:start="31:20" pos:end="31:52">(<argument pos:start="31:21" pos:end="31:36"><expr pos:start="31:21" pos:end="31:36"><literal type="string" pos:start="31:21" pos:end="31:36">"bdap %d $r%d\n"</literal></expr></argument>, <argument pos:start="31:39" pos:end="31:42"><expr pos:start="31:39" pos:end="31:42"><name pos:start="31:39" pos:end="31:42">simm</name></expr></argument>, <argument pos:start="31:45" pos:end="31:51"><expr pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:46">dc</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:51">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="35:69"><expr pos:start="33:13" pos:end="35:68"><call pos:start="33:13" pos:end="35:68"><name pos:start="33:13" pos:end="33:19">LOG_DIS</name><argument_list pos:start="33:20" pos:end="35:68">(<argument pos:start="33:21" pos:end="33:57"><expr pos:start="33:21" pos:end="33:57"><literal type="string" pos:start="33:21" pos:end="33:57">"pc=%x mode=%x quickimm %d r%d r%d\n"</literal></expr></argument>,

                     <argument pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:27"><name pos:start="35:22" pos:end="35:27"><name pos:start="35:22" pos:end="35:23">dc</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:27">pc</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:37"><expr pos:start="35:30" pos:end="35:37"><name pos:start="35:30" pos:end="35:37"><name pos:start="35:30" pos:end="35:31">dc</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:37">mode</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:41">dc</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:49">opcode</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:58"><expr pos:start="35:52" pos:end="35:58"><name pos:start="35:52" pos:end="35:58"><name pos:start="35:52" pos:end="35:53">dc</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:58">src</name></name></expr></argument>, <argument pos:start="35:61" pos:end="35:67"><expr pos:start="35:61" pos:end="35:67"><name pos:start="35:61" pos:end="35:67"><name pos:start="35:61" pos:end="35:62">dc</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:67">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:32"><expr pos:start="37:13" pos:end="37:31"><call pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:27">cris_set_prefix</name><argument_list pos:start="37:28" pos:end="37:31">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><name pos:start="37:29" pos:end="37:30">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:30">(<expr pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:18">dc</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:23">dst</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <literal type="number" pos:start="39:28" pos:end="39:29">15</literal></expr>)</condition> <block pos:start="39:32" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:70">

                <expr_stmt pos:start="41:17" pos:end="41:70"><expr pos:start="41:17" pos:end="41:69"><call pos:start="41:17" pos:end="41:69"><name pos:start="41:17" pos:end="41:31">tcg_gen_movi_tl</name><argument_list pos:start="41:32" pos:end="41:69">(<argument pos:start="41:33" pos:end="41:49"><expr pos:start="41:33" pos:end="41:49"><name pos:start="41:33" pos:end="41:49"><name pos:start="41:33" pos:end="41:38">cpu_PR</name><index pos:start="41:39" pos:end="41:49">[<expr pos:start="41:40" pos:end="41:48"><name pos:start="41:40" pos:end="41:48">PR_PREFIX</name></expr>]</index></name></expr></argument>, <argument pos:start="41:52" pos:end="41:68"><expr pos:start="41:52" pos:end="41:68"><name pos:start="41:52" pos:end="41:57"><name pos:start="41:52" pos:end="41:53">dc</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:57">pc</name></name> <operator pos:start="41:59" pos:end="41:59">+</operator> <literal type="number" pos:start="41:61" pos:end="41:63">2</literal> <operator pos:start="41:63" pos:end="41:63">+</operator> <name pos:start="41:65" pos:end="41:68">simm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:73">

                <expr_stmt pos:start="45:17" pos:end="45:73"><expr pos:start="45:17" pos:end="45:72"><call pos:start="45:17" pos:end="45:72"><name pos:start="45:17" pos:end="45:31">tcg_gen_addi_tl</name><argument_list pos:start="45:32" pos:end="45:72">(<argument pos:start="45:33" pos:end="45:49"><expr pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:38">cpu_PR</name><index pos:start="45:39" pos:end="45:49">[<expr pos:start="45:40" pos:end="45:48"><name pos:start="45:40" pos:end="45:48">PR_PREFIX</name></expr>]</index></name></expr></argument>, <argument pos:start="45:52" pos:end="45:65"><expr pos:start="45:52" pos:end="45:65"><name pos:start="45:52" pos:end="45:65"><name pos:start="45:52" pos:end="45:56">cpu_R</name><index pos:start="45:57" pos:end="45:65">[<expr pos:start="45:58" pos:end="45:64"><name pos:start="45:58" pos:end="45:64"><name pos:start="45:58" pos:end="45:59">dc</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:64">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="45:68" pos:end="45:71"><expr pos:start="45:68" pos:end="45:71"><name pos:start="45:68" pos:end="45:71">simm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>



        <case pos:start="53:9" pos:end="53:32">case <expr pos:start="53:14" pos:end="53:31"><name pos:start="53:14" pos:end="53:31">CRISV10_QIMM_MOVEQ</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><call pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:19">LOG_DIS</name><argument_list pos:start="55:20" pos:end="55:54">(<argument pos:start="55:21" pos:end="55:38"><expr pos:start="55:21" pos:end="55:38"><literal type="string" pos:start="55:21" pos:end="55:38">"moveq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">simm</name></expr></argument>, <argument pos:start="55:47" pos:end="55:53"><expr pos:start="55:47" pos:end="55:53"><name pos:start="55:47" pos:end="55:53"><name pos:start="55:47" pos:end="55:48">dc</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:53">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><call pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:24">cris_cc_mask</name><argument_list pos:start="59:25" pos:end="59:42">(<argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">dc</name></expr></argument>, <argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="63:60"><expr pos:start="61:13" pos:end="63:59"><call pos:start="61:13" pos:end="63:59"><name pos:start="61:13" pos:end="61:20">cris_alu</name><argument_list pos:start="61:21" pos:end="63:59">(<argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">dc</name></expr></argument>, <argument pos:start="61:26" pos:end="61:35"><expr pos:start="61:26" pos:end="61:35"><name pos:start="61:26" pos:end="61:35">CC_OP_MOVE</name></expr></argument>, <argument pos:start="61:38" pos:end="61:51"><expr pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:42">cpu_R</name><index pos:start="61:43" pos:end="61:51">[<expr pos:start="61:44" pos:end="61:50"><name pos:start="61:44" pos:end="61:50"><name pos:start="61:44" pos:end="61:45">dc</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:50">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="63:22" pos:end="63:35"><expr pos:start="63:22" pos:end="63:35"><name pos:start="63:22" pos:end="63:35"><name pos:start="63:22" pos:end="63:26">cpu_R</name><index pos:start="63:27" pos:end="63:35">[<expr pos:start="63:28" pos:end="63:34"><name pos:start="63:28" pos:end="63:34"><name pos:start="63:28" pos:end="63:29">dc</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="63:38" pos:end="63:55"><expr pos:start="63:38" pos:end="63:55"><call pos:start="63:38" pos:end="63:55"><name pos:start="63:38" pos:end="63:49">tcg_const_tl</name><argument_list pos:start="63:50" pos:end="63:55">(<argument pos:start="63:51" pos:end="63:54"><expr pos:start="63:51" pos:end="63:54"><name pos:start="63:51" pos:end="63:54">simm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:58" pos:end="63:58"><expr pos:start="63:58" pos:end="63:58"><literal type="number" pos:start="63:58" pos:end="63:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:31">case <expr pos:start="67:14" pos:end="67:30"><name pos:start="67:14" pos:end="67:30">CRISV10_QIMM_CMPQ</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:54"><expr pos:start="69:13" pos:end="69:53"><call pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:19">LOG_DIS</name><argument_list pos:start="69:20" pos:end="69:53">(<argument pos:start="69:21" pos:end="69:37"><expr pos:start="69:21" pos:end="69:37"><literal type="string" pos:start="69:21" pos:end="69:37">"cmpq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="69:40" pos:end="69:43"><expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">simm</name></expr></argument>, <argument pos:start="69:46" pos:end="69:52"><expr pos:start="69:46" pos:end="69:52"><name pos:start="69:46" pos:end="69:52"><name pos:start="69:46" pos:end="69:47">dc</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:52">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><call pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:24">cris_cc_mask</name><argument_list pos:start="73:25" pos:end="73:42">(<argument pos:start="73:26" pos:end="73:27"><expr pos:start="73:26" pos:end="73:27"><name pos:start="73:26" pos:end="73:27">dc</name></expr></argument>, <argument pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:41"><name pos:start="73:30" pos:end="73:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="77:60"><expr pos:start="75:13" pos:end="77:59"><call pos:start="75:13" pos:end="77:59"><name pos:start="75:13" pos:end="75:20">cris_alu</name><argument_list pos:start="75:21" pos:end="77:59">(<argument pos:start="75:22" pos:end="75:23"><expr pos:start="75:22" pos:end="75:23"><name pos:start="75:22" pos:end="75:23">dc</name></expr></argument>, <argument pos:start="75:26" pos:end="75:34"><expr pos:start="75:26" pos:end="75:34"><name pos:start="75:26" pos:end="75:34">CC_OP_CMP</name></expr></argument>, <argument pos:start="75:37" pos:end="75:50"><expr pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:41">cpu_R</name><index pos:start="75:42" pos:end="75:50">[<expr pos:start="75:43" pos:end="75:49"><name pos:start="75:43" pos:end="75:49"><name pos:start="75:43" pos:end="75:44">dc</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:49">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="77:22" pos:end="77:35"><expr pos:start="77:22" pos:end="77:35"><name pos:start="77:22" pos:end="77:35"><name pos:start="77:22" pos:end="77:26">cpu_R</name><index pos:start="77:27" pos:end="77:35">[<expr pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:29">dc</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="77:38" pos:end="77:55"><expr pos:start="77:38" pos:end="77:55"><call pos:start="77:38" pos:end="77:55"><name pos:start="77:38" pos:end="77:49">tcg_const_tl</name><argument_list pos:start="77:50" pos:end="77:55">(<argument pos:start="77:51" pos:end="77:54"><expr pos:start="77:51" pos:end="77:54"><name pos:start="77:51" pos:end="77:54">simm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:58" pos:end="77:58"><expr pos:start="77:58" pos:end="77:58"><literal type="number" pos:start="77:58" pos:end="77:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:31">case <expr pos:start="81:14" pos:end="81:30"><name pos:start="81:14" pos:end="81:30">CRISV10_QIMM_ADDQ</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:53"><expr pos:start="83:13" pos:end="83:52"><call pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:19">LOG_DIS</name><argument_list pos:start="83:20" pos:end="83:52">(<argument pos:start="83:21" pos:end="83:37"><expr pos:start="83:21" pos:end="83:37"><literal type="string" pos:start="83:21" pos:end="83:37">"addq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="83:40" pos:end="83:42"><expr pos:start="83:40" pos:end="83:42"><name pos:start="83:40" pos:end="83:42">imm</name></expr></argument>, <argument pos:start="83:45" pos:end="83:51"><expr pos:start="83:45" pos:end="83:51"><name pos:start="83:45" pos:end="83:51"><name pos:start="83:45" pos:end="83:46">dc</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:51">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><call pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:24">cris_cc_mask</name><argument_list pos:start="87:25" pos:end="87:42">(<argument pos:start="87:26" pos:end="87:27"><expr pos:start="87:26" pos:end="87:27"><name pos:start="87:26" pos:end="87:27">dc</name></expr></argument>, <argument pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="91:59"><expr pos:start="89:13" pos:end="91:58"><call pos:start="89:13" pos:end="91:58"><name pos:start="89:13" pos:end="89:20">cris_alu</name><argument_list pos:start="89:21" pos:end="91:58">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">dc</name></expr></argument>, <argument pos:start="89:26" pos:end="89:34"><expr pos:start="89:26" pos:end="89:34"><name pos:start="89:26" pos:end="89:34">CC_OP_ADD</name></expr></argument>, <argument pos:start="89:37" pos:end="89:50"><expr pos:start="89:37" pos:end="89:50"><name pos:start="89:37" pos:end="89:50"><name pos:start="89:37" pos:end="89:41">cpu_R</name><index pos:start="89:42" pos:end="89:50">[<expr pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:44">dc</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:49">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="91:22" pos:end="91:35"><expr pos:start="91:22" pos:end="91:35"><name pos:start="91:22" pos:end="91:35"><name pos:start="91:22" pos:end="91:26">cpu_R</name><index pos:start="91:27" pos:end="91:35">[<expr pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:29">dc</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="91:38" pos:end="91:54"><expr pos:start="91:38" pos:end="91:54"><call pos:start="91:38" pos:end="91:54"><name pos:start="91:38" pos:end="91:49">tcg_const_tl</name><argument_list pos:start="91:50" pos:end="91:54">(<argument pos:start="91:51" pos:end="91:53"><expr pos:start="91:51" pos:end="91:53"><name pos:start="91:51" pos:end="91:53">imm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:57" pos:end="91:57"><expr pos:start="91:57" pos:end="91:57"><literal type="number" pos:start="91:57" pos:end="91:57">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:31">case <expr pos:start="95:14" pos:end="95:30"><name pos:start="95:14" pos:end="95:30">CRISV10_QIMM_ANDQ</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><call pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:19">LOG_DIS</name><argument_list pos:start="97:20" pos:end="97:53">(<argument pos:start="97:21" pos:end="97:37"><expr pos:start="97:21" pos:end="97:37"><literal type="string" pos:start="97:21" pos:end="97:37">"andq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="97:40" pos:end="97:43"><expr pos:start="97:40" pos:end="97:43"><name pos:start="97:40" pos:end="97:43">simm</name></expr></argument>, <argument pos:start="97:46" pos:end="97:52"><expr pos:start="97:46" pos:end="97:52"><name pos:start="97:46" pos:end="97:52"><name pos:start="97:46" pos:end="97:47">dc</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:52">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><call pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:24">cris_cc_mask</name><argument_list pos:start="101:25" pos:end="101:42">(<argument pos:start="101:26" pos:end="101:27"><expr pos:start="101:26" pos:end="101:27"><name pos:start="101:26" pos:end="101:27">dc</name></expr></argument>, <argument pos:start="101:30" pos:end="101:41"><expr pos:start="101:30" pos:end="101:41"><name pos:start="101:30" pos:end="101:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="105:60"><expr pos:start="103:13" pos:end="105:59"><call pos:start="103:13" pos:end="105:59"><name pos:start="103:13" pos:end="103:20">cris_alu</name><argument_list pos:start="103:21" pos:end="105:59">(<argument pos:start="103:22" pos:end="103:23"><expr pos:start="103:22" pos:end="103:23"><name pos:start="103:22" pos:end="103:23">dc</name></expr></argument>, <argument pos:start="103:26" pos:end="103:34"><expr pos:start="103:26" pos:end="103:34"><name pos:start="103:26" pos:end="103:34">CC_OP_AND</name></expr></argument>, <argument pos:start="103:37" pos:end="103:50"><expr pos:start="103:37" pos:end="103:50"><name pos:start="103:37" pos:end="103:50"><name pos:start="103:37" pos:end="103:41">cpu_R</name><index pos:start="103:42" pos:end="103:50">[<expr pos:start="103:43" pos:end="103:49"><name pos:start="103:43" pos:end="103:49"><name pos:start="103:43" pos:end="103:44">dc</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:49">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:35"><expr pos:start="105:22" pos:end="105:35"><name pos:start="105:22" pos:end="105:35"><name pos:start="105:22" pos:end="105:26">cpu_R</name><index pos:start="105:27" pos:end="105:35">[<expr pos:start="105:28" pos:end="105:34"><name pos:start="105:28" pos:end="105:34"><name pos:start="105:28" pos:end="105:29">dc</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="105:38" pos:end="105:55"><expr pos:start="105:38" pos:end="105:55"><call pos:start="105:38" pos:end="105:55"><name pos:start="105:38" pos:end="105:49">tcg_const_tl</name><argument_list pos:start="105:50" pos:end="105:55">(<argument pos:start="105:51" pos:end="105:54"><expr pos:start="105:51" pos:end="105:54"><name pos:start="105:51" pos:end="105:54">simm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:58" pos:end="105:58"><expr pos:start="105:58" pos:end="105:58"><literal type="number" pos:start="105:58" pos:end="105:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:31">case <expr pos:start="109:14" pos:end="109:30"><name pos:start="109:14" pos:end="109:30">CRISV10_QIMM_ASHQ</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:54"><expr pos:start="111:13" pos:end="111:53"><call pos:start="111:13" pos:end="111:53"><name pos:start="111:13" pos:end="111:19">LOG_DIS</name><argument_list pos:start="111:20" pos:end="111:53">(<argument pos:start="111:21" pos:end="111:37"><expr pos:start="111:21" pos:end="111:37"><literal type="string" pos:start="111:21" pos:end="111:37">"ashq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="111:40" pos:end="111:43"><expr pos:start="111:40" pos:end="111:43"><name pos:start="111:40" pos:end="111:43">simm</name></expr></argument>, <argument pos:start="111:46" pos:end="111:52"><expr pos:start="111:46" pos:end="111:52"><name pos:start="111:46" pos:end="111:52"><name pos:start="111:46" pos:end="111:47">dc</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:52">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:43"><expr pos:start="115:13" pos:end="115:42"><call pos:start="115:13" pos:end="115:42"><name pos:start="115:13" pos:end="115:24">cris_cc_mask</name><argument_list pos:start="115:25" pos:end="115:42">(<argument pos:start="115:26" pos:end="115:27"><expr pos:start="115:26" pos:end="115:27"><name pos:start="115:26" pos:end="115:27">dc</name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:32"><expr pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:14">op</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <name pos:start="117:18" pos:end="117:20">imm</name> <operator pos:start="117:22" pos:end="117:22">&amp;</operator> <operator pos:start="117:24" pos:end="117:24">(</operator><literal type="number" pos:start="117:25" pos:end="117:25">1</literal> <operator pos:start="117:27" pos:end="117:28">&lt;&lt;</operator> <literal type="number" pos:start="117:30" pos:end="117:30">5</literal><operator pos:start="117:31" pos:end="117:31">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:24"><expr pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:15">imm</name> <operator pos:start="119:17" pos:end="119:18">&amp;=</operator> <literal type="number" pos:start="119:20" pos:end="119:23">0x1f</literal></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="137:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:19">(<expr pos:start="121:17" pos:end="121:18"><name pos:start="121:17" pos:end="121:18">op</name></expr>)</condition> <block pos:start="121:21" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:64">

                <expr_stmt pos:start="123:17" pos:end="125:64"><expr pos:start="123:17" pos:end="125:63"><call pos:start="123:17" pos:end="125:63"><name pos:start="123:17" pos:end="123:24">cris_alu</name><argument_list pos:start="123:25" pos:end="125:63">(<argument pos:start="123:26" pos:end="123:27"><expr pos:start="123:26" pos:end="123:27"><name pos:start="123:26" pos:end="123:27">dc</name></expr></argument>, <argument pos:start="123:30" pos:end="123:38"><expr pos:start="123:30" pos:end="123:38"><name pos:start="123:30" pos:end="123:38">CC_OP_ASR</name></expr></argument>, <argument pos:start="123:41" pos:end="123:54"><expr pos:start="123:41" pos:end="123:54"><name pos:start="123:41" pos:end="123:54"><name pos:start="123:41" pos:end="123:45">cpu_R</name><index pos:start="123:46" pos:end="123:54">[<expr pos:start="123:47" pos:end="123:53"><name pos:start="123:47" pos:end="123:53"><name pos:start="123:47" pos:end="123:48">dc</name><operator pos:start="123:49" pos:end="123:50">-&gt;</operator><name pos:start="123:51" pos:end="123:53">dst</name></name></expr>]</index></name></expr></argument>,

                          <argument pos:start="125:27" pos:end="125:40"><expr pos:start="125:27" pos:end="125:40"><name pos:start="125:27" pos:end="125:40"><name pos:start="125:27" pos:end="125:31">cpu_R</name><index pos:start="125:32" pos:end="125:40">[<expr pos:start="125:33" pos:end="125:39"><name pos:start="125:33" pos:end="125:39"><name pos:start="125:33" pos:end="125:34">dc</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:39">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="125:43" pos:end="125:59"><expr pos:start="125:43" pos:end="125:59"><call pos:start="125:43" pos:end="125:59"><name pos:start="125:43" pos:end="125:54">tcg_const_tl</name><argument_list pos:start="125:55" pos:end="125:59">(<argument pos:start="125:56" pos:end="125:58"><expr pos:start="125:56" pos:end="125:58"><name pos:start="125:56" pos:end="125:58">imm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:62" pos:end="125:62"><expr pos:start="125:62" pos:end="125:62"><literal type="number" pos:start="125:62" pos:end="125:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="127:15" pos:end="137:13">else <block pos:start="127:20" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:62">

                <comment type="block" pos:start="129:17" pos:end="129:26">/* BTST */</comment>

                <expr_stmt pos:start="131:17" pos:end="131:54"><expr pos:start="131:17" pos:end="131:53"><call pos:start="131:17" pos:end="131:53"><name pos:start="131:17" pos:end="131:33">cris_update_cc_op</name><argument_list pos:start="131:34" pos:end="131:53">(<argument pos:start="131:35" pos:end="131:36"><expr pos:start="131:35" pos:end="131:36"><name pos:start="131:35" pos:end="131:36">dc</name></expr></argument>, <argument pos:start="131:39" pos:end="131:49"><expr pos:start="131:39" pos:end="131:49"><name pos:start="131:39" pos:end="131:49">CC_OP_FLAGS</name></expr></argument>, <argument pos:start="131:52" pos:end="131:52"><expr pos:start="131:52" pos:end="131:52"><literal type="number" pos:start="131:52" pos:end="131:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="135:62"><expr pos:start="133:17" pos:end="135:61"><call pos:start="133:17" pos:end="135:61"><name pos:start="133:17" pos:end="133:31">gen_helper_btst</name><argument_list pos:start="133:32" pos:end="135:61">(<argument pos:start="133:33" pos:end="133:46"><expr pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:38">cpu_PR</name><index pos:start="133:39" pos:end="133:46">[<expr pos:start="133:40" pos:end="133:45"><name pos:start="133:40" pos:end="133:45">PR_CCS</name></expr>]</index></name></expr></argument>, <argument pos:start="133:49" pos:end="133:62"><expr pos:start="133:49" pos:end="133:62"><name pos:start="133:49" pos:end="133:62"><name pos:start="133:49" pos:end="133:53">cpu_R</name><index pos:start="133:54" pos:end="133:62">[<expr pos:start="133:55" pos:end="133:61"><name pos:start="133:55" pos:end="133:61"><name pos:start="133:55" pos:end="133:56">dc</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:61">dst</name></name></expr>]</index></name></expr></argument>,

                           <argument pos:start="135:28" pos:end="135:44"><expr pos:start="135:28" pos:end="135:44"><call pos:start="135:28" pos:end="135:44"><name pos:start="135:28" pos:end="135:39">tcg_const_tl</name><argument_list pos:start="135:40" pos:end="135:44">(<argument pos:start="135:41" pos:end="135:43"><expr pos:start="135:41" pos:end="135:43"><name pos:start="135:41" pos:end="135:43">imm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:47" pos:end="135:60"><expr pos:start="135:47" pos:end="135:60"><name pos:start="135:47" pos:end="135:60"><name pos:start="135:47" pos:end="135:52">cpu_PR</name><index pos:start="135:53" pos:end="135:60">[<expr pos:start="135:54" pos:end="135:59"><name pos:start="135:54" pos:end="135:59">PR_CCS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:31">case <expr pos:start="141:14" pos:end="141:30"><name pos:start="141:14" pos:end="141:30">CRISV10_QIMM_LSHQ</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:54"><expr pos:start="143:13" pos:end="143:53"><call pos:start="143:13" pos:end="143:53"><name pos:start="143:13" pos:end="143:19">LOG_DIS</name><argument_list pos:start="143:20" pos:end="143:53">(<argument pos:start="143:21" pos:end="143:37"><expr pos:start="143:21" pos:end="143:37"><literal type="string" pos:start="143:21" pos:end="143:37">"lshq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="143:40" pos:end="143:43"><expr pos:start="143:40" pos:end="143:43"><name pos:start="143:40" pos:end="143:43">simm</name></expr></argument>, <argument pos:start="143:46" pos:end="143:52"><expr pos:start="143:46" pos:end="143:52"><name pos:start="143:46" pos:end="143:52"><name pos:start="143:46" pos:end="143:47">dc</name><operator pos:start="143:48" pos:end="143:49">-&gt;</operator><name pos:start="143:50" pos:end="143:52">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:27"><expr pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:14">op</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:26">CC_OP_LSL</name></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="153:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:31">(<expr pos:start="149:17" pos:end="149:30"><name pos:start="149:17" pos:end="149:19">imm</name> <operator pos:start="149:21" pos:end="149:21">&amp;</operator> <operator pos:start="149:23" pos:end="149:23">(</operator><literal type="number" pos:start="149:24" pos:end="149:24">1</literal> <operator pos:start="149:26" pos:end="149:27">&lt;&lt;</operator> <literal type="number" pos:start="149:29" pos:end="149:29">5</literal><operator pos:start="149:30" pos:end="149:30">)</operator></expr>)</condition> <block pos:start="149:33" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:31">

                <expr_stmt pos:start="151:17" pos:end="151:31"><expr pos:start="151:17" pos:end="151:30"><name pos:start="151:17" pos:end="151:18">op</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <name pos:start="151:22" pos:end="151:30">CC_OP_LSR</name></expr>;</expr_stmt> 

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:24"><expr pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:15">imm</name> <operator pos:start="155:17" pos:end="155:18">&amp;=</operator> <literal type="number" pos:start="155:20" pos:end="155:23">0x1f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><call pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:24">cris_cc_mask</name><argument_list pos:start="157:25" pos:end="157:42">(<argument pos:start="157:26" pos:end="157:27"><expr pos:start="157:26" pos:end="157:27"><name pos:start="157:26" pos:end="157:27">dc</name></expr></argument>, <argument pos:start="157:30" pos:end="157:41"><expr pos:start="157:30" pos:end="157:41"><name pos:start="157:30" pos:end="157:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="161:59"><expr pos:start="159:13" pos:end="161:58"><call pos:start="159:13" pos:end="161:58"><name pos:start="159:13" pos:end="159:20">cris_alu</name><argument_list pos:start="159:21" pos:end="161:58">(<argument pos:start="159:22" pos:end="159:23"><expr pos:start="159:22" pos:end="159:23"><name pos:start="159:22" pos:end="159:23">dc</name></expr></argument>, <argument pos:start="159:26" pos:end="159:27"><expr pos:start="159:26" pos:end="159:27"><name pos:start="159:26" pos:end="159:27">op</name></expr></argument>, <argument pos:start="159:30" pos:end="159:43"><expr pos:start="159:30" pos:end="159:43"><name pos:start="159:30" pos:end="159:43"><name pos:start="159:30" pos:end="159:34">cpu_R</name><index pos:start="159:35" pos:end="159:43">[<expr pos:start="159:36" pos:end="159:42"><name pos:start="159:36" pos:end="159:42"><name pos:start="159:36" pos:end="159:37">dc</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:42">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="161:22" pos:end="161:35"><expr pos:start="161:22" pos:end="161:35"><name pos:start="161:22" pos:end="161:35"><name pos:start="161:22" pos:end="161:26">cpu_R</name><index pos:start="161:27" pos:end="161:35">[<expr pos:start="161:28" pos:end="161:34"><name pos:start="161:28" pos:end="161:34"><name pos:start="161:28" pos:end="161:29">dc</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="161:38" pos:end="161:54"><expr pos:start="161:38" pos:end="161:54"><call pos:start="161:38" pos:end="161:54"><name pos:start="161:38" pos:end="161:49">tcg_const_tl</name><argument_list pos:start="161:50" pos:end="161:54">(<argument pos:start="161:51" pos:end="161:53"><expr pos:start="161:51" pos:end="161:53"><name pos:start="161:51" pos:end="161:53">imm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:57" pos:end="161:57"><expr pos:start="161:57" pos:end="161:57"><literal type="number" pos:start="161:57" pos:end="161:57">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:31">case <expr pos:start="165:14" pos:end="165:30"><name pos:start="165:14" pos:end="165:30">CRISV10_QIMM_SUBQ</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:53"><expr pos:start="167:13" pos:end="167:52"><call pos:start="167:13" pos:end="167:52"><name pos:start="167:13" pos:end="167:19">LOG_DIS</name><argument_list pos:start="167:20" pos:end="167:52">(<argument pos:start="167:21" pos:end="167:37"><expr pos:start="167:21" pos:end="167:37"><literal type="string" pos:start="167:21" pos:end="167:37">"subq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="167:40" pos:end="167:42"><expr pos:start="167:40" pos:end="167:42"><name pos:start="167:40" pos:end="167:42">imm</name></expr></argument>, <argument pos:start="167:45" pos:end="167:51"><expr pos:start="167:45" pos:end="167:51"><name pos:start="167:45" pos:end="167:51"><name pos:start="167:45" pos:end="167:46">dc</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:51">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="171:13" pos:end="171:43"><expr pos:start="171:13" pos:end="171:42"><call pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:24">cris_cc_mask</name><argument_list pos:start="171:25" pos:end="171:42">(<argument pos:start="171:26" pos:end="171:27"><expr pos:start="171:26" pos:end="171:27"><name pos:start="171:26" pos:end="171:27">dc</name></expr></argument>, <argument pos:start="171:30" pos:end="171:41"><expr pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="175:59"><expr pos:start="173:13" pos:end="175:58"><call pos:start="173:13" pos:end="175:58"><name pos:start="173:13" pos:end="173:20">cris_alu</name><argument_list pos:start="173:21" pos:end="175:58">(<argument pos:start="173:22" pos:end="173:23"><expr pos:start="173:22" pos:end="173:23"><name pos:start="173:22" pos:end="173:23">dc</name></expr></argument>, <argument pos:start="173:26" pos:end="173:34"><expr pos:start="173:26" pos:end="173:34"><name pos:start="173:26" pos:end="173:34">CC_OP_SUB</name></expr></argument>, <argument pos:start="173:37" pos:end="173:50"><expr pos:start="173:37" pos:end="173:50"><name pos:start="173:37" pos:end="173:50"><name pos:start="173:37" pos:end="173:41">cpu_R</name><index pos:start="173:42" pos:end="173:50">[<expr pos:start="173:43" pos:end="173:49"><name pos:start="173:43" pos:end="173:49"><name pos:start="173:43" pos:end="173:44">dc</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:49">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="175:22" pos:end="175:35"><expr pos:start="175:22" pos:end="175:35"><name pos:start="175:22" pos:end="175:35"><name pos:start="175:22" pos:end="175:26">cpu_R</name><index pos:start="175:27" pos:end="175:35">[<expr pos:start="175:28" pos:end="175:34"><name pos:start="175:28" pos:end="175:34"><name pos:start="175:28" pos:end="175:29">dc</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="175:38" pos:end="175:54"><expr pos:start="175:38" pos:end="175:54"><call pos:start="175:38" pos:end="175:54"><name pos:start="175:38" pos:end="175:49">tcg_const_tl</name><argument_list pos:start="175:50" pos:end="175:54">(<argument pos:start="175:51" pos:end="175:53"><expr pos:start="175:51" pos:end="175:53"><name pos:start="175:51" pos:end="175:53">imm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:57" pos:end="175:57"><expr pos:start="175:57" pos:end="175:57"><literal type="number" pos:start="175:57" pos:end="175:57">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        <case pos:start="179:9" pos:end="179:30">case <expr pos:start="179:14" pos:end="179:29"><name pos:start="179:14" pos:end="179:29">CRISV10_QIMM_ORQ</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:54"><expr pos:start="181:13" pos:end="181:53"><call pos:start="181:13" pos:end="181:53"><name pos:start="181:13" pos:end="181:19">LOG_DIS</name><argument_list pos:start="181:20" pos:end="181:53">(<argument pos:start="181:21" pos:end="181:37"><expr pos:start="181:21" pos:end="181:37"><literal type="string" pos:start="181:21" pos:end="181:37">"andq %d, $r%d\n"</literal></expr></argument>, <argument pos:start="181:40" pos:end="181:43"><expr pos:start="181:40" pos:end="181:43"><name pos:start="181:40" pos:end="181:43">simm</name></expr></argument>, <argument pos:start="181:46" pos:end="181:52"><expr pos:start="181:46" pos:end="181:52"><name pos:start="181:46" pos:end="181:52"><name pos:start="181:46" pos:end="181:47">dc</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:52">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="185:13" pos:end="185:43"><expr pos:start="185:13" pos:end="185:42"><call pos:start="185:13" pos:end="185:42"><name pos:start="185:13" pos:end="185:24">cris_cc_mask</name><argument_list pos:start="185:25" pos:end="185:42">(<argument pos:start="185:26" pos:end="185:27"><expr pos:start="185:26" pos:end="185:27"><name pos:start="185:26" pos:end="185:27">dc</name></expr></argument>, <argument pos:start="185:30" pos:end="185:41"><expr pos:start="185:30" pos:end="185:41"><name pos:start="185:30" pos:end="185:41">CC_MASK_NZVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="189:60"><expr pos:start="187:13" pos:end="189:59"><call pos:start="187:13" pos:end="189:59"><name pos:start="187:13" pos:end="187:20">cris_alu</name><argument_list pos:start="187:21" pos:end="189:59">(<argument pos:start="187:22" pos:end="187:23"><expr pos:start="187:22" pos:end="187:23"><name pos:start="187:22" pos:end="187:23">dc</name></expr></argument>, <argument pos:start="187:26" pos:end="187:33"><expr pos:start="187:26" pos:end="187:33"><name pos:start="187:26" pos:end="187:33">CC_OP_OR</name></expr></argument>, <argument pos:start="187:36" pos:end="187:49"><expr pos:start="187:36" pos:end="187:49"><name pos:start="187:36" pos:end="187:49"><name pos:start="187:36" pos:end="187:40">cpu_R</name><index pos:start="187:41" pos:end="187:49">[<expr pos:start="187:42" pos:end="187:48"><name pos:start="187:42" pos:end="187:48"><name pos:start="187:42" pos:end="187:43">dc</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:48">dst</name></name></expr>]</index></name></expr></argument>,

                     <argument pos:start="189:22" pos:end="189:35"><expr pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:26">cpu_R</name><index pos:start="189:27" pos:end="189:35">[<expr pos:start="189:28" pos:end="189:34"><name pos:start="189:28" pos:end="189:34"><name pos:start="189:28" pos:end="189:29">dc</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:34">dst</name></name></expr>]</index></name></expr></argument>, <argument pos:start="189:38" pos:end="189:55"><expr pos:start="189:38" pos:end="189:55"><call pos:start="189:38" pos:end="189:55"><name pos:start="189:38" pos:end="189:49">tcg_const_tl</name><argument_list pos:start="189:50" pos:end="189:55">(<argument pos:start="189:51" pos:end="189:54"><expr pos:start="189:51" pos:end="189:54"><name pos:start="189:51" pos:end="189:54">simm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:58" pos:end="189:58"><expr pos:start="189:58" pos:end="189:58"><literal type="number" pos:start="189:58" pos:end="189:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="191:13" pos:end="191:18">break;</break>



        <case pos:start="195:9" pos:end="195:33">case <expr pos:start="195:14" pos:end="195:32"><name pos:start="195:14" pos:end="195:32">CRISV10_QIMM_BCC_R0</name></expr>:</case>

            <if_stmt pos:start="197:13" pos:end="201:13"><if pos:start="197:13" pos:end="201:13">if <condition pos:start="197:16" pos:end="197:24">(<expr pos:start="197:17" pos:end="197:23"><operator pos:start="197:17" pos:end="197:17">!</operator><name pos:start="197:18" pos:end="197:23"><name pos:start="197:18" pos:end="197:19">dc</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:23">ir</name></name></expr>)</condition> <block pos:start="197:26" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:52">

                <expr_stmt pos:start="199:17" pos:end="199:52"><expr pos:start="199:17" pos:end="199:51"><call pos:start="199:17" pos:end="199:51"><name pos:start="199:17" pos:end="199:25">cpu_abort</name><argument_list pos:start="199:26" pos:end="199:51">(<argument pos:start="199:27" pos:end="199:33"><expr pos:start="199:27" pos:end="199:33"><name pos:start="199:27" pos:end="199:33"><name pos:start="199:27" pos:end="199:28">dc</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:33">env</name></name></expr></argument>, <argument pos:start="199:36" pos:end="199:50"><expr pos:start="199:36" pos:end="199:50"><literal type="string" pos:start="199:36" pos:end="199:50">"opcode zero\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        <case pos:start="203:9" pos:end="203:33">case <expr pos:start="203:14" pos:end="203:32"><name pos:start="203:14" pos:end="203:32">CRISV10_QIMM_BCC_R1</name></expr>:</case>

        <case pos:start="205:9" pos:end="205:33">case <expr pos:start="205:14" pos:end="205:32"><name pos:start="205:14" pos:end="205:32">CRISV10_QIMM_BCC_R2</name></expr>:</case>

        <case pos:start="207:9" pos:end="207:33">case <expr pos:start="207:14" pos:end="207:32"><name pos:start="207:14" pos:end="207:32">CRISV10_QIMM_BCC_R3</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:32"><expr pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:15">imm</name> <operator pos:start="209:17" pos:end="209:17">=</operator> <name pos:start="209:19" pos:end="209:24"><name pos:start="209:19" pos:end="209:20">dc</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:24">ir</name></name> <operator pos:start="209:26" pos:end="209:26">&amp;</operator> <literal type="number" pos:start="209:28" pos:end="209:31">0xff</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="211:13" pos:end="211:39">/* bit 0 is a sign bit.  */</comment>

            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:24">(<expr pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:19">imm</name> <operator pos:start="213:21" pos:end="213:21">&amp;</operator> <literal type="number" pos:start="213:23" pos:end="213:23">1</literal></expr>)</condition> <block pos:start="213:26" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:26">

                <expr_stmt pos:start="215:17" pos:end="215:34"><expr pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:19">imm</name> <operator pos:start="215:21" pos:end="215:22">|=</operator> <literal type="number" pos:start="215:24" pos:end="215:33">0xffffff00</literal></expr>;</expr_stmt>   <comment type="block" pos:start="215:38" pos:end="215:56">/* sign extend.  */</comment>

                <expr_stmt pos:start="217:17" pos:end="217:26"><expr pos:start="217:17" pos:end="217:25"><name pos:start="217:17" pos:end="217:19">imm</name> <operator pos:start="217:21" pos:end="217:22">&amp;=</operator> <operator pos:start="217:24" pos:end="217:24">~</operator><literal type="number" pos:start="217:25" pos:end="217:25">1</literal></expr>;</expr_stmt>           <comment type="block" pos:start="217:38" pos:end="217:68">/* get rid of the sign bit.  */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:21"><expr pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:15">imm</name> <operator pos:start="221:17" pos:end="221:18">+=</operator> <literal type="number" pos:start="221:20" pos:end="221:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:56"><expr pos:start="223:13" pos:end="223:55"><call pos:start="223:13" pos:end="223:55"><name pos:start="223:13" pos:end="223:19">LOG_DIS</name><argument_list pos:start="223:20" pos:end="223:55">(<argument pos:start="223:21" pos:end="223:30"><expr pos:start="223:21" pos:end="223:30"><literal type="string" pos:start="223:21" pos:end="223:30">"b%s %d\n"</literal></expr></argument>, <argument pos:start="223:33" pos:end="223:49"><expr pos:start="223:33" pos:end="223:49"><call pos:start="223:33" pos:end="223:49"><name pos:start="223:33" pos:end="223:39">cc_name</name><argument_list pos:start="223:40" pos:end="223:49">(<argument pos:start="223:41" pos:end="223:48"><expr pos:start="223:41" pos:end="223:48"><name pos:start="223:41" pos:end="223:48"><name pos:start="223:41" pos:end="223:42">dc</name><operator pos:start="223:43" pos:end="223:44">-&gt;</operator><name pos:start="223:45" pos:end="223:48">cond</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="223:52" pos:end="223:54"><expr pos:start="223:52" pos:end="223:54"><name pos:start="223:52" pos:end="223:54">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="227:13" pos:end="227:32"><expr pos:start="227:13" pos:end="227:31"><call pos:start="227:13" pos:end="227:31"><name pos:start="227:13" pos:end="227:24">cris_cc_mask</name><argument_list pos:start="227:25" pos:end="227:31">(<argument pos:start="227:26" pos:end="227:27"><expr pos:start="227:26" pos:end="227:27"><name pos:start="227:26" pos:end="227:27">dc</name></expr></argument>, <argument pos:start="227:30" pos:end="227:30"><expr pos:start="227:30" pos:end="227:30"><literal type="number" pos:start="227:30" pos:end="227:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:54"><expr pos:start="229:13" pos:end="229:53"><call pos:start="229:13" pos:end="229:53"><name pos:start="229:13" pos:end="229:34">cris_prepare_cc_branch</name><argument_list pos:start="229:35" pos:end="229:53">(<argument pos:start="229:36" pos:end="229:37"><expr pos:start="229:36" pos:end="229:37"><name pos:start="229:36" pos:end="229:37">dc</name></expr></argument>, <argument pos:start="229:40" pos:end="229:42"><expr pos:start="229:40" pos:end="229:42"><name pos:start="229:40" pos:end="229:42">imm</name></expr></argument>, <argument pos:start="229:45" pos:end="229:52"><expr pos:start="229:45" pos:end="229:52"><name pos:start="229:45" pos:end="229:52"><name pos:start="229:45" pos:end="229:46">dc</name><operator pos:start="229:47" pos:end="229:48">-&gt;</operator><name pos:start="229:49" pos:end="229:52">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

            <break pos:start="231:13" pos:end="231:18">break;</break>



        <default pos:start="235:9" pos:end="235:16">default:</default>

            <expr_stmt pos:start="237:13" pos:end="239:69"><expr pos:start="237:13" pos:end="239:68"><call pos:start="237:13" pos:end="239:68"><name pos:start="237:13" pos:end="237:19">LOG_DIS</name><argument_list pos:start="237:20" pos:end="239:68">(<argument pos:start="237:21" pos:end="237:57"><expr pos:start="237:21" pos:end="237:57"><literal type="string" pos:start="237:21" pos:end="237:57">"pc=%x mode=%x quickimm %d r%d r%d\n"</literal></expr></argument>,

                     <argument pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:27"><name pos:start="239:22" pos:end="239:27"><name pos:start="239:22" pos:end="239:23">dc</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:27">pc</name></name></expr></argument>, <argument pos:start="239:30" pos:end="239:37"><expr pos:start="239:30" pos:end="239:37"><name pos:start="239:30" pos:end="239:37"><name pos:start="239:30" pos:end="239:31">dc</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:37">mode</name></name></expr></argument>, <argument pos:start="239:40" pos:end="239:49"><expr pos:start="239:40" pos:end="239:49"><name pos:start="239:40" pos:end="239:49"><name pos:start="239:40" pos:end="239:41">dc</name><operator pos:start="239:42" pos:end="239:43">-&gt;</operator><name pos:start="239:44" pos:end="239:49">opcode</name></name></expr></argument>, <argument pos:start="239:52" pos:end="239:58"><expr pos:start="239:52" pos:end="239:58"><name pos:start="239:52" pos:end="239:58"><name pos:start="239:52" pos:end="239:53">dc</name><operator pos:start="239:54" pos:end="239:55">-&gt;</operator><name pos:start="239:56" pos:end="239:58">src</name></name></expr></argument>, <argument pos:start="239:61" pos:end="239:67"><expr pos:start="239:61" pos:end="239:67"><name pos:start="239:61" pos:end="239:67"><name pos:start="239:61" pos:end="239:62">dc</name><operator pos:start="239:63" pos:end="239:64">-&gt;</operator><name pos:start="239:65" pos:end="239:67">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:55"><expr pos:start="241:13" pos:end="241:54"><call pos:start="241:13" pos:end="241:54"><name pos:start="241:13" pos:end="241:21">cpu_abort</name><argument_list pos:start="241:22" pos:end="241:54">(<argument pos:start="241:23" pos:end="241:29"><expr pos:start="241:23" pos:end="241:29"><name pos:start="241:23" pos:end="241:29"><name pos:start="241:23" pos:end="241:24">dc</name><operator pos:start="241:25" pos:end="241:26">-&gt;</operator><name pos:start="241:27" pos:end="241:29">env</name></name></expr></argument>, <argument pos:start="241:32" pos:end="241:53"><expr pos:start="241:32" pos:end="241:53"><literal type="string" pos:start="241:32" pos:end="241:53">"Unhandled quickimm\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

    </block_content>}</block></switch>

    <return pos:start="247:5" pos:end="247:13">return <expr pos:start="247:12" pos:end="247:12"><literal type="number" pos:start="247:12" pos:end="247:12">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
