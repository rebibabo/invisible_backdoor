<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10245.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">rtas_ibm_get_system_parameter</name><parameter_list pos:start="1:42" pos:end="9:75">(<parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:52">PowerPCCPU</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">cpu</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:66"><decl pos:start="3:43" pos:end="3:66"><type pos:start="3:43" pos:end="3:66"><name pos:start="3:43" pos:end="3:59">sPAPRMachineState</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">spapr</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:56"><decl pos:start="5:43" pos:end="5:56"><type pos:start="5:43" pos:end="5:56"><name pos:start="5:43" pos:end="5:50">uint32_t</name></type> <name pos:start="5:52" pos:end="5:56">token</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:72"><decl pos:start="5:59" pos:end="5:72"><type pos:start="5:59" pos:end="5:72"><name pos:start="5:59" pos:end="5:66">uint32_t</name></type> <name pos:start="5:68" pos:end="5:72">nargs</name></decl></parameter>,

                                          <parameter pos:start="7:43" pos:end="7:59"><decl pos:start="7:43" pos:end="7:59"><type pos:start="7:43" pos:end="7:59"><name pos:start="7:43" pos:end="7:54">target_ulong</name></type> <name pos:start="7:56" pos:end="7:59">args</name></decl></parameter>,

                                          <parameter pos:start="9:43" pos:end="9:55"><decl pos:start="9:43" pos:end="9:55"><type pos:start="9:43" pos:end="9:55"><name pos:start="9:43" pos:end="9:50">uint32_t</name></type> <name pos:start="9:52" pos:end="9:55">nret</name></decl></parameter>, <parameter pos:start="9:58" pos:end="9:74"><decl pos:start="9:58" pos:end="9:74"><type pos:start="9:58" pos:end="9:74"><name pos:start="9:58" pos:end="9:69">target_ulong</name></type> <name pos:start="9:71" pos:end="9:74">rets</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="79:1">{<block_content pos:start="13:5" pos:end="77:26">

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:26">parameter</name> <init pos:start="13:28" pos:end="13:45">= <expr pos:start="13:30" pos:end="13:45"><call pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:36">rtas_ld</name><argument_list pos:start="13:37" pos:end="13:45">(<argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">args</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:23">buffer</name> <init pos:start="15:25" pos:end="15:42">= <expr pos:start="15:27" pos:end="15:42"><call pos:start="15:27" pos:end="15:42"><name pos:start="15:27" pos:end="15:33">rtas_ld</name><argument_list pos:start="15:34" pos:end="15:42">(<argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">args</name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:23">length</name> <init pos:start="17:25" pos:end="17:42">= <expr pos:start="17:27" pos:end="17:42"><call pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:33">rtas_ld</name><argument_list pos:start="17:34" pos:end="17:42">(<argument pos:start="17:35" pos:end="17:38"><expr pos:start="17:35" pos:end="17:38"><name pos:start="17:35" pos:end="17:38">args</name></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:20">ret</name></decl>;</decl_stmt>



    <switch pos:start="23:5" pos:end="73:5">switch <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:21">parameter</name></expr>)</condition> <block pos:start="23:24" pos:end="73:5">{<block_content pos:start="25:5" pos:end="71:37">

    <case pos:start="25:5" pos:end="25:45">case <expr pos:start="25:10" pos:end="25:44"><name pos:start="25:10" pos:end="25:44">RTAS_SYSPARM_SPLPAR_CHARACTERISTICS</name></expr>:</case> <block pos:start="25:47" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:14">

        <decl_stmt pos:start="27:9" pos:end="41:52"><decl pos:start="27:9" pos:end="41:51"><type pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">char</name> <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:23">param_val</name> <init pos:start="27:25" pos:end="41:51">= <expr pos:start="27:27" pos:end="41:51"><call pos:start="27:27" pos:end="41:51"><name pos:start="27:27" pos:end="27:41">g_strdup_printf</name><argument_list pos:start="27:42" pos:end="41:51">(<argument pos:start="27:43" pos:end="33:59"><expr pos:start="27:43" pos:end="33:59"><literal type="string" pos:start="27:43" pos:end="27:57">"MaxEntCap=%d,"</literal>

                                          <literal type="string" pos:start="29:43" pos:end="29:56">"DesMem=%llu,"</literal>

                                          <literal type="string" pos:start="31:43" pos:end="31:56">"DesProcs=%d,"</literal>

                                          <literal type="string" pos:start="33:43" pos:end="33:59">"MaxPlatProcs=%d"</literal></expr></argument>,

                                          <argument pos:start="35:43" pos:end="35:50"><expr pos:start="35:43" pos:end="35:50"><name pos:start="35:43" pos:end="35:50">max_cpus</name></expr></argument>,

                                          <argument pos:start="37:43" pos:end="37:76"><expr pos:start="37:43" pos:end="37:76"><name pos:start="37:43" pos:end="37:67"><name pos:start="37:43" pos:end="37:57">current_machine</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:67">ram_size</name></name> <operator pos:start="37:69" pos:end="37:69">/</operator> <name pos:start="37:71" pos:end="37:76">M_BYTE</name></expr></argument>,

                                          <argument pos:start="39:43" pos:end="39:50"><expr pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:50">smp_cpus</name></expr></argument>,

                                          <argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50">max_cpus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:75"><expr pos:start="43:9" pos:end="43:74"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:74"><name pos:start="43:15" pos:end="43:24">sysparm_st</name><argument_list pos:start="43:25" pos:end="43:74">(<argument pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:31"><name pos:start="43:26" pos:end="43:31">buffer</name></expr></argument>, <argument pos:start="43:34" pos:end="43:39"><expr pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:39">length</name></expr></argument>, <argument pos:start="43:42" pos:end="43:50"><expr pos:start="43:42" pos:end="43:50"><name pos:start="43:42" pos:end="43:50">param_val</name></expr></argument>, <argument pos:start="43:53" pos:end="43:73"><expr pos:start="43:53" pos:end="43:73"><call pos:start="43:53" pos:end="43:69"><name pos:start="43:53" pos:end="43:58">strlen</name><argument_list pos:start="43:59" pos:end="43:69">(<argument pos:start="43:60" pos:end="43:68"><expr pos:start="43:60" pos:end="43:68"><name pos:start="43:60" pos:end="43:68">param_val</name></expr></argument>)</argument_list></call> <operator pos:start="43:71" pos:end="43:71">+</operator> <literal type="number" pos:start="43:73" pos:end="43:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:14">g_free</name><argument_list pos:start="45:15" pos:end="45:25">(<argument pos:start="45:16" pos:end="45:24"><expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:24">param_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block>

    <case pos:start="51:5" pos:end="51:43">case <expr pos:start="51:10" pos:end="51:42"><name pos:start="51:10" pos:end="51:42">RTAS_SYSPARM_DIAGNOSTICS_RUN_MODE</name></expr>:</case> <block pos:start="51:45" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:14">

        <decl_stmt pos:start="53:9" pos:end="53:58"><decl pos:start="53:9" pos:end="53:57"><type pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:15">uint8_t</name></type> <name pos:start="53:17" pos:end="53:25">param_val</name> <init pos:start="53:27" pos:end="53:57">= <expr pos:start="53:29" pos:end="53:57"><name pos:start="53:29" pos:end="53:57">DIAGNOSTICS_RUN_MODE_DISABLED</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:72"><expr pos:start="57:9" pos:end="57:71"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:71"><name pos:start="57:15" pos:end="57:24">sysparm_st</name><argument_list pos:start="57:25" pos:end="57:71">(<argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:31">buffer</name></expr></argument>, <argument pos:start="57:34" pos:end="57:39"><expr pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:39">length</name></expr></argument>, <argument pos:start="57:42" pos:end="57:51"><expr pos:start="57:42" pos:end="57:51"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:51">param_val</name></expr></argument>, <argument pos:start="57:54" pos:end="57:70"><expr pos:start="57:54" pos:end="57:70"><sizeof pos:start="57:54" pos:end="57:70">sizeof<argument_list pos:start="57:60" pos:end="57:70">(<argument pos:start="57:61" pos:end="57:69"><expr pos:start="57:61" pos:end="57:69"><name pos:start="57:61" pos:end="57:69">param_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block>

    <case pos:start="63:5" pos:end="63:27">case <expr pos:start="63:10" pos:end="63:26"><name pos:start="63:10" pos:end="63:26">RTAS_SYSPARM_UUID</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:78"><expr pos:start="65:9" pos:end="65:77"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:77"><name pos:start="65:15" pos:end="65:24">sysparm_st</name><argument_list pos:start="65:25" pos:end="65:77">(<argument pos:start="65:26" pos:end="65:31"><expr pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:31">buffer</name></expr></argument>, <argument pos:start="65:34" pos:end="65:39"><expr pos:start="65:34" pos:end="65:39"><name pos:start="65:34" pos:end="65:39">length</name></expr></argument>, <argument pos:start="65:42" pos:end="65:50"><expr pos:start="65:42" pos:end="65:50"><name pos:start="65:42" pos:end="65:50">qemu_uuid</name></expr></argument>, <argument pos:start="65:53" pos:end="65:76"><expr pos:start="65:53" pos:end="65:76"><operator pos:start="65:53" pos:end="65:53">(</operator><ternary pos:start="65:54" pos:end="65:75"><condition pos:start="65:54" pos:end="65:68"><expr pos:start="65:54" pos:end="65:66"><name pos:start="65:54" pos:end="65:66">qemu_uuid_set</name></expr> ?</condition><then pos:start="65:70" pos:end="65:71"> <expr pos:start="65:70" pos:end="65:71"><literal type="number" pos:start="65:70" pos:end="65:71">16</literal></expr> </then><else pos:start="65:73" pos:end="65:75">: <expr pos:start="65:75" pos:end="65:75"><literal type="number" pos:start="65:75" pos:end="65:75">0</literal></expr></else></ternary><operator pos:start="65:76" pos:end="65:76">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:36">RTAS_OUT_NOT_SUPPORTED</name></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><call pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:11">rtas_st</name><argument_list pos:start="77:12" pos:end="77:25">(<argument pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:16">rets</name></expr></argument>, <argument pos:start="77:19" pos:end="77:19"><expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr></argument>, <argument pos:start="77:22" pos:end="77:24"><expr pos:start="77:22" pos:end="77:24"><name pos:start="77:22" pos:end="77:24">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
