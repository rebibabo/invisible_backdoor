<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2362.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:31">ivshmem_recv_msg</name><parameter_list pos:start="1:32" pos:end="1:72">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:44">IVShmemState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pfd</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">Error</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:10"><expr pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:5">n</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <literal type="number" pos:start="11:9" pos:end="11:9">0</literal></expr>;</expr_stmt>

    <do pos:start="13:5" pos:end="35:30">do <block pos:start="13:8" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:17">

        <expr_stmt pos:start="15:9" pos:end="17:52"><expr pos:start="15:9" pos:end="17:51"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="17:51"><name pos:start="15:15" pos:end="15:34">qemu_chr_fe_read_all</name><argument_list pos:start="15:35" pos:end="17:51">(<argument pos:start="15:36" pos:end="15:49"><expr pos:start="15:36" pos:end="15:49"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:49"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:49">server_chr</name></name></expr></argument>, <argument pos:start="15:52" pos:end="15:70"><expr pos:start="15:52" pos:end="15:70"><operator pos:start="15:52" pos:end="15:52">(</operator><name pos:start="15:53" pos:end="15:59">uint8_t</name> <operator pos:start="15:61" pos:end="15:61">*</operator><operator pos:start="15:62" pos:end="15:62">)</operator><operator pos:start="15:63" pos:end="15:63">&amp;</operator><name pos:start="15:64" pos:end="15:66">msg</name> <operator pos:start="15:68" pos:end="15:68">+</operator> <name pos:start="15:70" pos:end="15:70">n</name></expr></argument>,

                                   <argument pos:start="17:36" pos:end="17:50"><expr pos:start="17:36" pos:end="17:50"><sizeof pos:start="17:36" pos:end="17:46">sizeof<argument_list pos:start="17:42" pos:end="17:46">(<argument pos:start="17:43" pos:end="17:45"><expr pos:start="17:43" pos:end="17:45"><name pos:start="17:43" pos:end="17:45">msg</name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:48" pos:end="17:48">-</operator> <name pos:start="17:50" pos:end="17:50">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="31:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="31:9">{<block_content pos:start="21:13" pos:end="29:29">

            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="25:13">if <condition pos:start="21:16" pos:end="21:30">(<expr pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:19">ret</name> <operator pos:start="21:21" pos:end="21:22">==</operator> <operator pos:start="21:24" pos:end="21:24">-</operator><name pos:start="21:25" pos:end="21:29">EINTR</name></expr>)</condition> <block pos:start="21:32" pos:end="25:13">{<block_content pos:start="23:17" pos:end="23:25">

                <continue pos:start="23:17" pos:end="23:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:68"><expr pos:start="27:13" pos:end="27:67"><call pos:start="27:13" pos:end="27:67"><name pos:start="27:13" pos:end="27:28">error_setg_errno</name><argument_list pos:start="27:29" pos:end="27:67">(<argument pos:start="27:30" pos:end="27:33"><expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:33">errp</name></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><operator pos:start="27:36" pos:end="27:36">-</operator><name pos:start="27:37" pos:end="27:39">ret</name></expr></argument>, <argument pos:start="27:42" pos:end="27:66"><expr pos:start="27:42" pos:end="27:66"><literal type="string" pos:start="27:42" pos:end="27:66">"read from server failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:29">return <expr pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:28">INT64_MIN</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:9">n</name> <operator pos:start="33:11" pos:end="33:12">+=</operator> <name pos:start="33:14" pos:end="33:16">ret</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="35:13" pos:end="35:29">(<expr pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:14">n</name> <operator pos:start="35:16" pos:end="35:16">&lt;</operator> <sizeof pos:start="35:18" pos:end="35:28">sizeof<argument_list pos:start="35:24" pos:end="35:28">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">msg</name></expr></argument>)</argument_list></sizeof></expr>)</condition>;</do>



    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:8">pfd</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:48"><name pos:start="39:12" pos:end="39:32">qemu_chr_fe_get_msgfd</name><argument_list pos:start="39:33" pos:end="39:48">(<argument pos:start="39:34" pos:end="39:47"><expr pos:start="39:34" pos:end="39:47"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:47"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:47">server_chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">msg</name></expr>;</return>

</block_content>}</block></function>
</unit>
