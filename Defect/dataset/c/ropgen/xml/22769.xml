<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22769.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ehci_state_executing</name><parameter_list pos:start="1:32" pos:end="1:56">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:41">EHCIQueue</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">q</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:17">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">again</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">reload</name></decl>, <decl pos:start="7:17" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:22">nakcnt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><call pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:25">ehci_execute_complete</name><argument_list pos:start="11:26" pos:end="11:28">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:9">q</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:21">usb_status</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:38">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="13:41" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <goto pos:start="15:9" pos:end="15:17">goto <name pos:start="15:14" pos:end="15:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">q</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">usb_status</name></name> <operator pos:start="19:23" pos:end="19:24">==</operator> <name pos:start="19:26" pos:end="19:40">USB_RET_PROCERR</name></expr>)</condition> <block pos:start="19:43" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:13">again</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">-</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:13">// 4.10.3</comment>

    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:14">async</name></expr>)</condition> <block pos:start="31:17" pos:end="43:5">{<block_content pos:start="33:9" pos:end="37:60">

        <decl_stmt pos:start="33:9" pos:end="33:64"><decl pos:start="33:9" pos:end="33:63"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:23">transactCtr</name> <init pos:start="33:25" pos:end="33:63">= <expr pos:start="33:27" pos:end="33:63"><call pos:start="33:27" pos:end="33:63"><name pos:start="33:27" pos:end="33:35">get_field</name><argument_list pos:start="33:36" pos:end="33:63">(<argument pos:start="33:37" pos:end="33:47"><expr pos:start="33:37" pos:end="33:47"><name pos:start="33:37" pos:end="33:47"><name pos:start="33:37" pos:end="33:37">q</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">qh</name><operator pos:start="33:42" pos:end="33:42">.</operator><name pos:start="33:43" pos:end="33:47">epcap</name></name></expr></argument>, <argument pos:start="33:50" pos:end="33:62"><expr pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:62">QH_EPCAP_MULT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:19">transactCtr</name><operator pos:start="35:20" pos:end="35:21">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:60"><expr pos:start="37:9" pos:end="37:59"><call pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:17">set_field</name><argument_list pos:start="37:18" pos:end="37:59">(<argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:20">q</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">qh</name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:30">epcap</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:43"><expr pos:start="37:33" pos:end="37:43"><name pos:start="37:33" pos:end="37:43">transactCtr</name></expr></argument>, <argument pos:start="37:46" pos:end="37:58"><expr pos:start="37:46" pos:end="37:58"><name pos:start="37:46" pos:end="37:58">QH_EPCAP_MULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="39:9" pos:end="39:77">// 4.10.3, bottom of page 82, should exit this state when transaction</comment>

        <comment type="line" pos:start="41:9" pos:end="41:34">// counter decrements to 0</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:10">reload</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:50"><name pos:start="47:14" pos:end="47:22">get_field</name><argument_list pos:start="47:23" pos:end="47:50">(<argument pos:start="47:24" pos:end="47:35"><expr pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:24">q</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">qh</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:35">epchar</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">QH_EPCHAR_RL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:14">reload</name></expr>)</condition> <block pos:start="49:17" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:65">

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:14">nakcnt</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:64"><name pos:start="51:18" pos:end="51:26">get_field</name><argument_list pos:start="51:27" pos:end="51:64">(<argument pos:start="51:28" pos:end="51:44"><expr pos:start="51:28" pos:end="51:44"><name pos:start="51:28" pos:end="51:44"><name pos:start="51:28" pos:end="51:28">q</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">qh</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:44">altnext_qtd</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:63"><expr pos:start="51:47" pos:end="51:63"><name pos:start="51:47" pos:end="51:63">QH_ALTNEXT_NAKCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:41">(<expr pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:13">q</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">usb_status</name></name> <operator pos:start="53:27" pos:end="53:28">==</operator> <name pos:start="53:30" pos:end="53:40">USB_RET_NAK</name></expr>)</condition> <block pos:start="53:43" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:13">

            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:23">(<expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">nakcnt</name></expr>)</condition> <block pos:start="55:25" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:25">

                <expr_stmt pos:start="57:17" pos:end="57:25"><expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:22">nakcnt</name><operator pos:start="57:23" pos:end="57:24">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:28">

            <expr_stmt pos:start="63:13" pos:end="63:28"><expr pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:18">nakcnt</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:27">reload</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:17">set_field</name><argument_list pos:start="67:18" pos:end="67:64">(<argument pos:start="67:19" pos:end="67:36"><expr pos:start="67:19" pos:end="67:36"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:36"><name pos:start="67:20" pos:end="67:20">q</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:24">qh</name><operator pos:start="67:25" pos:end="67:25">.</operator><name pos:start="67:26" pos:end="67:36">altnext_qtd</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:44"><expr pos:start="67:39" pos:end="67:44"><name pos:start="67:39" pos:end="67:44">nakcnt</name></expr></argument>, <argument pos:start="67:47" pos:end="67:63"><expr pos:start="67:47" pos:end="67:63"><name pos:start="67:47" pos:end="67:63">QH_ALTNEXT_NAKCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:16">/* 4.10.5 */</comment>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:75">(<expr pos:start="75:9" pos:end="75:74"><operator pos:start="75:9" pos:end="75:9">(</operator><name pos:start="75:10" pos:end="75:22"><name pos:start="75:10" pos:end="75:10">q</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:22">usb_status</name></name> <operator pos:start="75:24" pos:end="75:25">==</operator> <name pos:start="75:27" pos:end="75:37">USB_RET_NAK</name><operator pos:start="75:38" pos:end="75:38">)</operator> <operator pos:start="75:40" pos:end="75:41">||</operator> <operator pos:start="75:43" pos:end="75:43">(</operator><name pos:start="75:44" pos:end="75:54"><name pos:start="75:44" pos:end="75:44">q</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:48">qh</name><operator pos:start="75:49" pos:end="75:49">.</operator><name pos:start="75:50" pos:end="75:54">token</name></name> <operator pos:start="75:56" pos:end="75:56">&amp;</operator> <name pos:start="75:58" pos:end="75:73">QTD_TOKEN_ACTIVE</name><operator pos:start="75:74" pos:end="75:74">)</operator></expr>)</condition> <block pos:start="75:77" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:57">

        <expr_stmt pos:start="77:9" pos:end="77:57"><expr pos:start="77:9" pos:end="77:56"><call pos:start="77:9" pos:end="77:56"><name pos:start="77:9" pos:end="77:22">ehci_set_state</name><argument_list pos:start="77:23" pos:end="77:56">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:24">q</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:30">ehci</name></name></expr></argument>, <argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">async</name></expr></argument>, <argument pos:start="77:40" pos:end="77:55"><expr pos:start="77:40" pos:end="77:55"><name pos:start="77:40" pos:end="77:55">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="83:5">else <block pos:start="79:12" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:54">

        <expr_stmt pos:start="81:9" pos:end="81:54"><expr pos:start="81:9" pos:end="81:53"><call pos:start="81:9" pos:end="81:53"><name pos:start="81:9" pos:end="81:22">ehci_set_state</name><argument_list pos:start="81:23" pos:end="81:53">(<argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:24">q</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:30">ehci</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:37"><expr pos:start="81:33" pos:end="81:37"><name pos:start="81:33" pos:end="81:37">async</name></expr></argument>, <argument pos:start="81:40" pos:end="81:52"><expr pos:start="81:40" pos:end="81:52"><name pos:start="81:40" pos:end="81:52">EST_WRITEBACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:14"><expr pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:9">again</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">1</literal></expr>;</expr_stmt>



<label pos:start="91:1" pos:end="91:4"><name pos:start="91:1" pos:end="91:3">out</name>:</label>

    <expr_stmt pos:start="93:5" pos:end="93:21"><expr pos:start="93:5" pos:end="93:20"><call pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:17">ehci_flush_qh</name><argument_list pos:start="93:18" pos:end="93:20">(<argument pos:start="93:19" pos:end="93:19"><expr pos:start="93:19" pos:end="93:19"><name pos:start="93:19" pos:end="93:19">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:17">return <expr pos:start="95:12" pos:end="95:16"><name pos:start="95:12" pos:end="95:16">again</name></expr>;</return>

</block_content>}</block></function>
</unit>
