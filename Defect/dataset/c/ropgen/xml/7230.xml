<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7230.c" pos:tabs="8"><function pos:start="1:1" pos:end="679:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">blizzard_reg_write</name><parameter_list pos:start="1:31" pos:end="1:73">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:52">uint8_t</name></type> <name pos:start="1:54" pos:end="1:56">reg</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:66">uint16_t</name></type> <name pos:start="1:68" pos:end="1:72">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="679:1">{<block_content pos:start="5:5" pos:end="677:5">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BlizzardState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:47">= <expr pos:start="5:24" pos:end="5:47"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:37">BlizzardState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator> <name pos:start="5:42" pos:end="5:47">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="677:5">switch <condition pos:start="9:12" pos:end="9:16">(<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">reg</name></expr>)</condition> <block pos:start="9:18" pos:end="677:5">{<block_content pos:start="11:5" pos:end="675:14">

    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><literal type="number" pos:start="11:10" pos:end="11:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="11:17" pos:end="11:35">/* PLL M-Divider */</comment>

        <expr_stmt pos:start="13:9" pos:end="13:36"><expr pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">pll</name></name> <operator pos:start="13:16" pos:end="13:16">=</operator> <operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:23">value</name> <operator pos:start="13:25" pos:end="13:25">&amp;</operator> <literal type="number" pos:start="13:27" pos:end="13:30">0x3f</literal><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:33">+</operator> <literal type="number" pos:start="13:35" pos:end="13:35">1</literal></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:14">case <expr pos:start="17:10" pos:end="17:13"><literal type="number" pos:start="17:10" pos:end="17:13">0x06</literal></expr>:</case>	<comment type="block" pos:start="17:17" pos:end="17:44">/* PLL Lock Range Control */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">pll_range</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:28">value</name> <operator pos:start="19:30" pos:end="19:30">&amp;</operator> <literal type="number" pos:start="19:32" pos:end="19:32">3</literal></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:50">/* PLL Lock Synthesis Control 0 */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">pll_ctrl</name></name> <operator pos:start="25:21" pos:end="25:22">&amp;=</operator> <literal type="number" pos:start="25:24" pos:end="25:28">0xf00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">pll_ctrl</name></name> <operator pos:start="27:21" pos:end="27:22">|=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:29">value</name> <operator pos:start="27:31" pos:end="27:32">&lt;&lt;</operator> <literal type="number" pos:start="27:34" pos:end="27:34">0</literal><operator pos:start="27:35" pos:end="27:35">)</operator> <operator pos:start="27:37" pos:end="27:37">&amp;</operator> <literal type="number" pos:start="27:39" pos:end="27:43">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x0a</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:50">/* PLL Lock Synthesis Control 1 */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">pll_ctrl</name></name> <operator pos:start="33:21" pos:end="33:22">&amp;=</operator> <literal type="number" pos:start="33:24" pos:end="33:28">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">pll_ctrl</name></name> <operator pos:start="35:21" pos:end="35:22">|=</operator> <operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:29">value</name> <operator pos:start="35:31" pos:end="35:32">&lt;&lt;</operator> <literal type="number" pos:start="35:34" pos:end="35:34">8</literal><operator pos:start="35:35" pos:end="35:35">)</operator> <operator pos:start="35:37" pos:end="35:37">&amp;</operator> <literal type="number" pos:start="35:39" pos:end="35:43">0xf00</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:40">/* PLL Mode Control 0 */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:19">pll_mode</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:27">value</name> <operator pos:start="41:29" pos:end="41:29">&amp;</operator> <literal type="number" pos:start="41:31" pos:end="41:34">0x77</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:45"><if pos:start="43:9" pos:end="47:45">if <condition pos:start="43:12" pos:end="43:49">(<expr pos:start="43:13" pos:end="43:48"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:18">value</name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <literal type="number" pos:start="43:22" pos:end="43:22">3</literal><operator pos:start="43:23" pos:end="43:23">)</operator> <operator pos:start="43:25" pos:end="43:26">==</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal> <operator pos:start="43:30" pos:end="43:31">||</operator> <operator pos:start="43:33" pos:end="43:33">(</operator><name pos:start="43:34" pos:end="43:38">value</name> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <literal type="number" pos:start="43:42" pos:end="43:42">3</literal><operator pos:start="43:43" pos:end="43:43">)</operator> <operator pos:start="43:45" pos:end="43:46">==</operator> <literal type="number" pos:start="43:48" pos:end="43:48">3</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="47:45"><block_content pos:start="45:13" pos:end="47:45">

            <expr_stmt pos:start="45:13" pos:end="47:45"><expr pos:start="45:13" pos:end="47:44"><call pos:start="45:13" pos:end="47:44"><name pos:start="45:13" pos:end="45:19">fprintf</name><argument_list pos:start="45:20" pos:end="47:44">(<argument pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:26"><name pos:start="45:21" pos:end="45:26">stderr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:63"><expr pos:start="45:29" pos:end="45:63"><literal type="string" pos:start="45:29" pos:end="45:63">"%s: wrong PLL Control bits (%i)\n"</literal></expr></argument>,

                    <argument pos:start="47:21" pos:end="47:32"><expr pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:32">__FUNCTION__</name></expr></argument>, <argument pos:start="47:35" pos:end="47:43"><expr pos:start="47:35" pos:end="47:43"><name pos:start="47:35" pos:end="47:39">value</name> <operator pos:start="47:41" pos:end="47:41">&amp;</operator> <literal type="number" pos:start="47:43" pos:end="47:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x0e</literal></expr>:</case>	<comment type="block" pos:start="53:17" pos:end="53:41">/* Clock-Source Select */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">clksel</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:25">value</name> <operator pos:start="55:27" pos:end="55:27">&amp;</operator> <literal type="number" pos:start="55:29" pos:end="55:32">0xff</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>



    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="61:17" pos:end="61:48">/* Memory Controller Activate */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">memenable</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:28">value</name> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:32">1</literal></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="67:17" pos:end="67:58">/* Memory Controller Bank 0 Status Flag */</comment>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="73:17" pos:end="73:53">/* Auto-Refresh Interval Setting 0 */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">memrefresh</name></name> <operator pos:start="75:23" pos:end="75:24">&amp;=</operator> <literal type="number" pos:start="75:26" pos:end="75:30">0xf00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">memrefresh</name></name> <operator pos:start="77:23" pos:end="77:24">|=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><name pos:start="77:27" pos:end="77:31">value</name> <operator pos:start="77:33" pos:end="77:34">&lt;&lt;</operator> <literal type="number" pos:start="77:36" pos:end="77:36">0</literal><operator pos:start="77:37" pos:end="77:37">)</operator> <operator pos:start="77:39" pos:end="77:39">&amp;</operator> <literal type="number" pos:start="77:41" pos:end="77:45">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x1a</literal></expr>:</case>	<comment type="block" pos:start="81:17" pos:end="81:53">/* Auto-Refresh Interval Setting 1 */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">memrefresh</name></name> <operator pos:start="83:23" pos:end="83:24">&amp;=</operator> <literal type="number" pos:start="83:26" pos:end="83:30">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:46"><expr pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">memrefresh</name></name> <operator pos:start="85:23" pos:end="85:24">|=</operator> <operator pos:start="85:26" pos:end="85:26">(</operator><name pos:start="85:27" pos:end="85:31">value</name> <operator pos:start="85:33" pos:end="85:34">&lt;&lt;</operator> <literal type="number" pos:start="85:36" pos:end="85:36">8</literal><operator pos:start="85:37" pos:end="85:37">)</operator> <operator pos:start="85:39" pos:end="85:39">&amp;</operator> <literal type="number" pos:start="85:41" pos:end="85:45">0xf00</literal></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <case pos:start="91:5" pos:end="91:14">case <expr pos:start="91:10" pos:end="91:13"><literal type="number" pos:start="91:10" pos:end="91:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="91:17" pos:end="91:54">/* Power-On Sequence Timing Control */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">timing</name><index pos:start="93:18" pos:end="93:20">[<expr pos:start="93:19" pos:end="93:19"><literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>]</index></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:28">value</name> <operator pos:start="93:30" pos:end="93:30">&amp;</operator> <literal type="number" pos:start="93:32" pos:end="93:35">0x7f</literal></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x1e</literal></expr>:</case>	<comment type="block" pos:start="97:17" pos:end="97:38">/* Timing Control 0 */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:36"><expr pos:start="99:9" pos:end="99:35"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">timing</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">1</literal></expr>]</index></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:28">value</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <literal type="number" pos:start="99:32" pos:end="99:35">0x17</literal></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:14">case <expr pos:start="103:10" pos:end="103:13"><literal type="number" pos:start="103:10" pos:end="103:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="103:17" pos:end="103:38">/* Timing Control 1 */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">timing</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">2</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:28">value</name> <operator pos:start="105:30" pos:end="105:30">&amp;</operator> <literal type="number" pos:start="105:32" pos:end="105:35">0x35</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="111:17" pos:end="111:50">/* Arbitration Priority Control */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:32"><expr pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:19">priority</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:27">value</name> <operator pos:start="113:29" pos:end="113:29">&amp;</operator> <literal type="number" pos:start="113:31" pos:end="113:31">1</literal></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="119:17" pos:end="119:45">/* LCD Panel Configuration */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:37"><expr pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:21">lcd_config</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:29">value</name> <operator pos:start="121:31" pos:end="121:31">&amp;</operator> <literal type="number" pos:start="121:33" pos:end="121:36">0xff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="125:76"><if pos:start="123:9" pos:end="125:76">if <condition pos:start="123:12" pos:end="123:29">(<expr pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:17">value</name> <operator pos:start="123:19" pos:end="123:19">&amp;</operator> <operator pos:start="123:21" pos:end="123:21">(</operator><literal type="number" pos:start="123:22" pos:end="123:22">1</literal> <operator pos:start="123:24" pos:end="123:25">&lt;&lt;</operator> <literal type="number" pos:start="123:27" pos:end="123:27">7</literal><operator pos:start="123:28" pos:end="123:28">)</operator></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:76"><block_content pos:start="125:13" pos:end="125:76">

            <expr_stmt pos:start="125:13" pos:end="125:76"><expr pos:start="125:13" pos:end="125:75"><call pos:start="125:13" pos:end="125:75"><name pos:start="125:13" pos:end="125:19">fprintf</name><argument_list pos:start="125:20" pos:end="125:75">(<argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26">stderr</name></expr></argument>, <argument pos:start="125:29" pos:end="125:60"><expr pos:start="125:29" pos:end="125:60"><literal type="string" pos:start="125:29" pos:end="125:60">"%s: data swap not supported!\n"</literal></expr></argument>, <argument pos:start="125:63" pos:end="125:74"><expr pos:start="125:63" pos:end="125:74"><name pos:start="125:63" pos:end="125:74">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <case pos:start="131:5" pos:end="131:14">case <expr pos:start="131:10" pos:end="131:13"><literal type="number" pos:start="131:10" pos:end="131:13">0x2a</literal></expr>:</case>	<comment type="block" pos:start="131:17" pos:end="131:50">/* LCD Horizontal Display Width */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:26"><expr pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:12"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:12">x</name></name> <operator pos:start="133:14" pos:end="133:14">=</operator> <name pos:start="133:16" pos:end="133:20">value</name> <operator pos:start="133:22" pos:end="133:23">&lt;&lt;</operator> <literal type="number" pos:start="133:25" pos:end="133:25">3</literal></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:14">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="137:17" pos:end="137:55">/* LCD Horizontal Non-display Period */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:31"><expr pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:15">hndp</name></name> <operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:23">value</name> <operator pos:start="139:25" pos:end="139:25">&amp;</operator> <literal type="number" pos:start="139:27" pos:end="139:30">0xff</literal></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:14">case <expr pos:start="143:10" pos:end="143:13"><literal type="number" pos:start="143:10" pos:end="143:13">0x2e</literal></expr>:</case>	<comment type="block" pos:start="143:17" pos:end="143:51">/* LCD Vertical Display Height 0 */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:22"><expr pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:12"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:12">y</name></name> <operator pos:start="145:14" pos:end="145:15">&amp;=</operator> <literal type="number" pos:start="145:17" pos:end="145:21">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:37"><expr pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:12"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:12">y</name></name> <operator pos:start="147:14" pos:end="147:15">|=</operator> <operator pos:start="147:17" pos:end="147:17">(</operator><name pos:start="147:18" pos:end="147:22">value</name> <operator pos:start="147:24" pos:end="147:25">&lt;&lt;</operator> <literal type="number" pos:start="147:27" pos:end="147:27">0</literal><operator pos:start="147:28" pos:end="147:28">)</operator> <operator pos:start="147:30" pos:end="147:30">&amp;</operator> <literal type="number" pos:start="147:32" pos:end="147:36">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:14">case <expr pos:start="151:10" pos:end="151:13"><literal type="number" pos:start="151:10" pos:end="151:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="151:17" pos:end="151:51">/* LCD Vertical Display Height 1 */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:22"><expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:12"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:12">y</name></name> <operator pos:start="153:14" pos:end="153:15">&amp;=</operator> <literal type="number" pos:start="153:17" pos:end="153:21">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:37"><expr pos:start="155:9" pos:end="155:36"><name pos:start="155:9" pos:end="155:12"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:12">y</name></name> <operator pos:start="155:14" pos:end="155:15">|=</operator> <operator pos:start="155:17" pos:end="155:17">(</operator><name pos:start="155:18" pos:end="155:22">value</name> <operator pos:start="155:24" pos:end="155:25">&lt;&lt;</operator> <literal type="number" pos:start="155:27" pos:end="155:27">8</literal><operator pos:start="155:28" pos:end="155:28">)</operator> <operator pos:start="155:30" pos:end="155:30">&amp;</operator> <literal type="number" pos:start="155:32" pos:end="155:36">0x300</literal></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:14">case <expr pos:start="159:10" pos:end="159:13"><literal type="number" pos:start="159:10" pos:end="159:13">0x32</literal></expr>:</case>	<comment type="block" pos:start="159:17" pos:end="159:53">/* LCD Vertical Non-display Period */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:31"><expr pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:15">vndp</name></name> <operator pos:start="161:17" pos:end="161:17">=</operator> <name pos:start="161:19" pos:end="161:23">value</name> <operator pos:start="161:25" pos:end="161:25">&amp;</operator> <literal type="number" pos:start="161:27" pos:end="161:30">0xff</literal></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    <case pos:start="165:5" pos:end="165:14">case <expr pos:start="165:10" pos:end="165:13"><literal type="number" pos:start="165:10" pos:end="165:13">0x34</literal></expr>:</case>	<comment type="block" pos:start="165:17" pos:end="165:40">/* LCD HS Pulse-width */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:32"><expr pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:16"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:16">hsync</name></name> <operator pos:start="167:18" pos:end="167:18">=</operator> <name pos:start="167:20" pos:end="167:24">value</name> <operator pos:start="167:26" pos:end="167:26">&amp;</operator> <literal type="number" pos:start="167:28" pos:end="167:31">0xff</literal></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:14">case <expr pos:start="171:10" pos:end="171:13"><literal type="number" pos:start="171:10" pos:end="171:13">0x36</literal></expr>:</case>	<comment type="block" pos:start="171:17" pos:end="171:49">/* LCD HS Pulse Start Position */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:32"><expr pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:16">skipx</name></name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:24">value</name> <operator pos:start="173:26" pos:end="173:26">&amp;</operator> <literal type="number" pos:start="173:28" pos:end="173:31">0xff</literal></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:14">case <expr pos:start="177:10" pos:end="177:13"><literal type="number" pos:start="177:10" pos:end="177:13">0x38</literal></expr>:</case>	<comment type="block" pos:start="177:17" pos:end="177:40">/* LCD VS Pulse-width */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:32"><expr pos:start="179:9" pos:end="179:31"><name pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:16">vsync</name></name> <operator pos:start="179:18" pos:end="179:18">=</operator> <name pos:start="179:20" pos:end="179:24">value</name> <operator pos:start="179:26" pos:end="179:26">&amp;</operator> <literal type="number" pos:start="179:28" pos:end="179:31">0xbf</literal></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:14">case <expr pos:start="183:10" pos:end="183:13"><literal type="number" pos:start="183:10" pos:end="183:13">0x3a</literal></expr>:</case>	<comment type="block" pos:start="183:17" pos:end="183:49">/* LCD VS Pulse Start Position */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:32"><expr pos:start="185:9" pos:end="185:31"><name pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:16">skipy</name></name> <operator pos:start="185:18" pos:end="185:18">=</operator> <name pos:start="185:20" pos:end="185:24">value</name> <operator pos:start="185:26" pos:end="185:26">&amp;</operator> <literal type="number" pos:start="185:28" pos:end="185:31">0xff</literal></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>



    <case pos:start="191:5" pos:end="191:14">case <expr pos:start="191:10" pos:end="191:13"><literal type="number" pos:start="191:10" pos:end="191:13">0x3c</literal></expr>:</case>	<comment type="block" pos:start="191:17" pos:end="191:35">/* PCLK Polarity */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:31"><expr pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:15">pclk</name></name> <operator pos:start="193:17" pos:end="193:17">=</operator> <name pos:start="193:19" pos:end="193:23">value</name> <operator pos:start="193:25" pos:end="193:25">&amp;</operator> <literal type="number" pos:start="193:27" pos:end="193:30">0x82</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="195:9" pos:end="195:69">/* Affects calculation of s-&gt;hndp, s-&gt;hsync and s-&gt;skipx.  */</comment>

        <break pos:start="197:9" pos:end="197:14">break;</break>



    <case pos:start="201:5" pos:end="201:14">case <expr pos:start="201:10" pos:end="201:13"><literal type="number" pos:start="201:10" pos:end="201:13">0x3e</literal></expr>:</case>	<comment type="block" pos:start="201:17" pos:end="201:73">/* High-speed Serial Interface Tx Configuration Port 0 */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:34"><expr pos:start="203:9" pos:end="203:33"><name pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:22">hssi_config</name><index pos:start="203:23" pos:end="203:25">[<expr pos:start="203:24" pos:end="203:24"><literal type="number" pos:start="203:24" pos:end="203:24">0</literal></expr>]</index></name> <operator pos:start="203:27" pos:end="203:27">=</operator> <name pos:start="203:29" pos:end="203:33">value</name></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <case pos:start="207:5" pos:end="207:14">case <expr pos:start="207:10" pos:end="207:13"><literal type="number" pos:start="207:10" pos:end="207:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="207:17" pos:end="207:73">/* High-speed Serial Interface Tx Configuration Port 1 */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:34"><expr pos:start="209:9" pos:end="209:33"><name pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:22">hssi_config</name><index pos:start="209:23" pos:end="209:25">[<expr pos:start="209:24" pos:end="209:24"><literal type="number" pos:start="209:24" pos:end="209:24">1</literal></expr>]</index></name> <operator pos:start="209:27" pos:end="209:27">=</operator> <name pos:start="209:29" pos:end="209:33">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="215:42"><if pos:start="211:9" pos:end="215:42">if <condition pos:start="211:12" pos:end="211:36">(<expr pos:start="211:13" pos:end="211:35"><operator pos:start="211:13" pos:end="211:13">(</operator><operator pos:start="211:14" pos:end="211:14">(</operator><name pos:start="211:15" pos:end="211:19">value</name> <operator pos:start="211:21" pos:end="211:22">&gt;&gt;</operator> <literal type="number" pos:start="211:24" pos:end="211:24">4</literal><operator pos:start="211:25" pos:end="211:25">)</operator> <operator pos:start="211:27" pos:end="211:27">&amp;</operator> <literal type="number" pos:start="211:29" pos:end="211:29">3</literal><operator pos:start="211:30" pos:end="211:30">)</operator> <operator pos:start="211:32" pos:end="211:33">==</operator> <literal type="number" pos:start="211:35" pos:end="211:35">3</literal></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="215:42"><block_content pos:start="213:13" pos:end="215:42">

            <expr_stmt pos:start="213:13" pos:end="215:42"><expr pos:start="213:13" pos:end="215:41"><call pos:start="213:13" pos:end="215:41"><name pos:start="213:13" pos:end="213:19">fprintf</name><argument_list pos:start="213:20" pos:end="215:41">(<argument pos:start="213:21" pos:end="213:26"><expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:26">stderr</name></expr></argument>, <argument pos:start="213:29" pos:end="213:67"><expr pos:start="213:29" pos:end="213:67"><literal type="string" pos:start="213:29" pos:end="213:67">"%s: Illegal active-data-links value\n"</literal></expr></argument>,

                            <argument pos:start="215:29" pos:end="215:40"><expr pos:start="215:29" pos:end="215:40"><name pos:start="215:29" pos:end="215:40">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="217:9" pos:end="217:14">break;</break>

    <case pos:start="219:5" pos:end="219:14">case <expr pos:start="219:10" pos:end="219:13"><literal type="number" pos:start="219:10" pos:end="219:13">0x42</literal></expr>:</case>	<comment type="block" pos:start="219:17" pos:end="219:57">/* High-speed Serial Interface Tx Mode */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:41"><expr pos:start="221:9" pos:end="221:40"><name pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:22">hssi_config</name><index pos:start="221:23" pos:end="221:25">[<expr pos:start="221:24" pos:end="221:24"><literal type="number" pos:start="221:24" pos:end="221:24">2</literal></expr>]</index></name> <operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:33">value</name> <operator pos:start="221:35" pos:end="221:35">&amp;</operator> <literal type="number" pos:start="221:37" pos:end="221:40">0xbd</literal></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>



    <case pos:start="227:5" pos:end="227:14">case <expr pos:start="227:10" pos:end="227:13"><literal type="number" pos:start="227:10" pos:end="227:13">0x44</literal></expr>:</case>	<comment type="block" pos:start="227:17" pos:end="227:46">/* TV Display Configuration */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:36"><expr pos:start="229:9" pos:end="229:35"><name pos:start="229:9" pos:end="229:20"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:20">tv_config</name></name> <operator pos:start="229:22" pos:end="229:22">=</operator> <name pos:start="229:24" pos:end="229:28">value</name> <operator pos:start="229:30" pos:end="229:30">&amp;</operator> <literal type="number" pos:start="229:32" pos:end="229:35">0xfe</literal></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:23">case <expr pos:start="233:10" pos:end="233:22"><literal type="number" pos:start="233:10" pos:end="233:13">0x46</literal> <operator pos:start="233:15" pos:end="233:17">...</operator> <literal type="number" pos:start="233:19" pos:end="233:22">0x4c</literal></expr>:</case>	<comment type="block" pos:start="233:25" pos:end="233:71">/* TV Vertical Blanking Interval Data bits 0 */</comment>

        <expr_stmt pos:start="235:9" pos:end="235:48"><expr pos:start="235:9" pos:end="235:47"><name pos:start="235:9" pos:end="235:39"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">tv_timing</name><index pos:start="235:21" pos:end="235:39">[<expr pos:start="235:22" pos:end="235:38"><operator pos:start="235:22" pos:end="235:22">(</operator><name pos:start="235:23" pos:end="235:25">reg</name> <operator pos:start="235:27" pos:end="235:27">-</operator> <literal type="number" pos:start="235:29" pos:end="235:32">0x46</literal><operator pos:start="235:33" pos:end="235:33">)</operator> <operator pos:start="235:35" pos:end="235:36">&gt;&gt;</operator> <literal type="number" pos:start="235:38" pos:end="235:38">1</literal></expr>]</index></name> <operator pos:start="235:41" pos:end="235:41">=</operator> <name pos:start="235:43" pos:end="235:47">value</name></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:14">case <expr pos:start="239:10" pos:end="239:13"><literal type="number" pos:start="239:10" pos:end="239:13">0x4e</literal></expr>:</case>	<comment type="block" pos:start="239:17" pos:end="239:64">/* VBI: Closed Caption / XDS Control / Status */</comment>

        <expr_stmt pos:start="241:9" pos:end="241:23"><expr pos:start="241:9" pos:end="241:22"><name pos:start="241:9" pos:end="241:14"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:14">vbi</name></name> <operator pos:start="241:16" pos:end="241:16">=</operator> <name pos:start="241:18" pos:end="241:22">value</name></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:14">case <expr pos:start="245:10" pos:end="245:13"><literal type="number" pos:start="245:10" pos:end="245:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="245:17" pos:end="245:50">/* TV Horizontal Start Position */</comment>

        <expr_stmt pos:start="247:9" pos:end="247:24"><expr pos:start="247:9" pos:end="247:23"><name pos:start="247:9" pos:end="247:15"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:15">tv_x</name></name> <operator pos:start="247:17" pos:end="247:17">=</operator> <name pos:start="247:19" pos:end="247:23">value</name></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    <case pos:start="251:5" pos:end="251:14">case <expr pos:start="251:10" pos:end="251:13"><literal type="number" pos:start="251:10" pos:end="251:13">0x52</literal></expr>:</case>	<comment type="block" pos:start="251:17" pos:end="251:48">/* TV Vertical Start Position */</comment>

        <expr_stmt pos:start="253:9" pos:end="253:31"><expr pos:start="253:9" pos:end="253:30"><name pos:start="253:9" pos:end="253:15"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:15">tv_y</name></name> <operator pos:start="253:17" pos:end="253:17">=</operator> <name pos:start="253:19" pos:end="253:23">value</name> <operator pos:start="253:25" pos:end="253:25">&amp;</operator> <literal type="number" pos:start="253:27" pos:end="253:30">0x7f</literal></expr>;</expr_stmt>

        <break pos:start="255:9" pos:end="255:14">break;</break>

    <case pos:start="257:5" pos:end="257:14">case <expr pos:start="257:10" pos:end="257:13"><literal type="number" pos:start="257:10" pos:end="257:13">0x54</literal></expr>:</case>	<comment type="block" pos:start="257:17" pos:end="257:45">/* TV Test Pattern Setting */</comment>

        <expr_stmt pos:start="259:9" pos:end="259:27"><expr pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:18"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:18">tv_test</name></name> <operator pos:start="259:20" pos:end="259:20">=</operator> <name pos:start="259:22" pos:end="259:26">value</name></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>

    <case pos:start="263:5" pos:end="263:14">case <expr pos:start="263:10" pos:end="263:13"><literal type="number" pos:start="263:10" pos:end="263:13">0x56</literal></expr>:</case>	<comment type="block" pos:start="263:17" pos:end="263:39">/* TV Filter Setting */</comment>

        <expr_stmt pos:start="265:9" pos:end="265:43"><expr pos:start="265:9" pos:end="265:42"><name pos:start="265:9" pos:end="265:27"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:27">tv_filter_config</name></name> <operator pos:start="265:29" pos:end="265:29">=</operator> <name pos:start="265:31" pos:end="265:35">value</name> <operator pos:start="265:37" pos:end="265:37">&amp;</operator> <literal type="number" pos:start="265:39" pos:end="265:42">0xbf</literal></expr>;</expr_stmt>

        <break pos:start="267:9" pos:end="267:14">break;</break>

    <case pos:start="269:5" pos:end="269:14">case <expr pos:start="269:10" pos:end="269:13"><literal type="number" pos:start="269:10" pos:end="269:13">0x58</literal></expr>:</case>	<comment type="block" pos:start="269:17" pos:end="269:49">/* TV Filter Coefficient Index */</comment>

        <expr_stmt pos:start="271:9" pos:end="271:40"><expr pos:start="271:9" pos:end="271:39"><name pos:start="271:9" pos:end="271:24"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:24">tv_filter_idx</name></name> <operator pos:start="271:26" pos:end="271:26">=</operator> <name pos:start="271:28" pos:end="271:32">value</name> <operator pos:start="271:34" pos:end="271:34">&amp;</operator> <literal type="number" pos:start="271:36" pos:end="271:39">0x1f</literal></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <case pos:start="275:5" pos:end="275:14">case <expr pos:start="275:10" pos:end="275:13"><literal type="number" pos:start="275:10" pos:end="275:13">0x5a</literal></expr>:</case>	<comment type="block" pos:start="275:17" pos:end="275:48">/* TV Filter Coefficient Data */</comment>

        <if_stmt pos:start="277:9" pos:end="279:60"><if pos:start="277:9" pos:end="279:60">if <condition pos:start="277:12" pos:end="277:36">(<expr pos:start="277:13" pos:end="277:35"><name pos:start="277:13" pos:end="277:28"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:28">tv_filter_idx</name></name> <operator pos:start="277:30" pos:end="277:30">&lt;</operator> <literal type="number" pos:start="277:32" pos:end="277:35">0x20</literal></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:60"><block_content pos:start="279:13" pos:end="279:60">

            <expr_stmt pos:start="279:13" pos:end="279:60"><expr pos:start="279:13" pos:end="279:59"><name pos:start="279:13" pos:end="279:51"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:30">tv_filter_coeff</name><index pos:start="279:31" pos:end="279:51">[<expr pos:start="279:32" pos:end="279:50"><name pos:start="279:32" pos:end="279:47"><name pos:start="279:32" pos:end="279:32">s</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:47">tv_filter_idx</name></name> <operator pos:start="279:49" pos:end="279:50">++</operator></expr>]</index></name> <operator pos:start="279:53" pos:end="279:53">=</operator> <name pos:start="279:55" pos:end="279:59">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="281:9" pos:end="281:14">break;</break>



    <case pos:start="285:5" pos:end="285:14">case <expr pos:start="285:10" pos:end="285:13"><literal type="number" pos:start="285:10" pos:end="285:13">0x60</literal></expr>:</case>	<comment type="block" pos:start="285:17" pos:end="285:52">/* Input YUV/RGB Translate Mode 0 */</comment>

        <expr_stmt pos:start="287:9" pos:end="287:33"><expr pos:start="287:9" pos:end="287:32"><name pos:start="287:9" pos:end="287:17"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:14">yrc</name><index pos:start="287:15" pos:end="287:17">[<expr pos:start="287:16" pos:end="287:16"><literal type="number" pos:start="287:16" pos:end="287:16">0</literal></expr>]</index></name> <operator pos:start="287:19" pos:end="287:19">=</operator> <name pos:start="287:21" pos:end="287:25">value</name> <operator pos:start="287:27" pos:end="287:27">&amp;</operator> <literal type="number" pos:start="287:29" pos:end="287:32">0xb0</literal></expr>;</expr_stmt>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    <case pos:start="291:5" pos:end="291:14">case <expr pos:start="291:10" pos:end="291:13"><literal type="number" pos:start="291:10" pos:end="291:13">0x62</literal></expr>:</case>	<comment type="block" pos:start="291:17" pos:end="291:52">/* Input YUV/RGB Translate Mode 1 */</comment>

        <expr_stmt pos:start="293:9" pos:end="293:33"><expr pos:start="293:9" pos:end="293:32"><name pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:14">yrc</name><index pos:start="293:15" pos:end="293:17">[<expr pos:start="293:16" pos:end="293:16"><literal type="number" pos:start="293:16" pos:end="293:16">1</literal></expr>]</index></name> <operator pos:start="293:19" pos:end="293:19">=</operator> <name pos:start="293:21" pos:end="293:25">value</name> <operator pos:start="293:27" pos:end="293:27">&amp;</operator> <literal type="number" pos:start="293:29" pos:end="293:32">0x30</literal></expr>;</expr_stmt>

        <break pos:start="295:9" pos:end="295:14">break;</break>

    <case pos:start="297:5" pos:end="297:14">case <expr pos:start="297:10" pos:end="297:13"><literal type="number" pos:start="297:10" pos:end="297:13">0x64</literal></expr>:</case>	<comment type="block" pos:start="297:17" pos:end="297:32">/* U Data Fix */</comment>

        <expr_stmt pos:start="299:9" pos:end="299:28"><expr pos:start="299:9" pos:end="299:27"><name pos:start="299:9" pos:end="299:12"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:12">u</name></name> <operator pos:start="299:14" pos:end="299:14">=</operator> <name pos:start="299:16" pos:end="299:20">value</name> <operator pos:start="299:22" pos:end="299:22">&amp;</operator> <literal type="number" pos:start="299:24" pos:end="299:27">0xff</literal></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="301:14">break;</break>

    <case pos:start="303:5" pos:end="303:14">case <expr pos:start="303:10" pos:end="303:13"><literal type="number" pos:start="303:10" pos:end="303:13">0x66</literal></expr>:</case>	<comment type="block" pos:start="303:17" pos:end="303:32">/* V Data Fix */</comment>

        <expr_stmt pos:start="305:9" pos:end="305:28"><expr pos:start="305:9" pos:end="305:27"><name pos:start="305:9" pos:end="305:12"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:12">v</name></name> <operator pos:start="305:14" pos:end="305:14">=</operator> <name pos:start="305:16" pos:end="305:20">value</name> <operator pos:start="305:22" pos:end="305:22">&amp;</operator> <literal type="number" pos:start="305:24" pos:end="305:27">0xff</literal></expr>;</expr_stmt>

        <break pos:start="307:9" pos:end="307:14">break;</break>



    <case pos:start="311:5" pos:end="311:14">case <expr pos:start="311:10" pos:end="311:13"><literal type="number" pos:start="311:10" pos:end="311:13">0x68</literal></expr>:</case>	<comment type="block" pos:start="311:17" pos:end="311:34">/* Display Mode */</comment>

        <if_stmt pos:start="313:9" pos:end="315:30"><if pos:start="313:9" pos:end="315:30">if <condition pos:start="313:12" pos:end="313:34">(<expr pos:start="313:13" pos:end="313:33"><operator pos:start="313:13" pos:end="313:13">(</operator><name pos:start="313:14" pos:end="313:20"><name pos:start="313:14" pos:end="313:14">s</name><operator pos:start="313:15" pos:end="313:16">-&gt;</operator><name pos:start="313:17" pos:end="313:20">mode</name></name> <operator pos:start="313:22" pos:end="313:22">^</operator> <name pos:start="313:24" pos:end="313:28">value</name><operator pos:start="313:29" pos:end="313:29">)</operator> <operator pos:start="313:31" pos:end="313:31">&amp;</operator> <literal type="number" pos:start="313:33" pos:end="313:33">3</literal></expr>)</condition><block type="pseudo" pos:start="315:13" pos:end="315:30"><block_content pos:start="315:13" pos:end="315:30">

            <expr_stmt pos:start="315:13" pos:end="315:30"><expr pos:start="315:13" pos:end="315:29"><name pos:start="315:13" pos:end="315:25"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:25">invalidate</name></name> <operator pos:start="315:27" pos:end="315:27">=</operator> <literal type="number" pos:start="315:29" pos:end="315:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:31"><expr pos:start="317:9" pos:end="317:30"><name pos:start="317:9" pos:end="317:15"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:15">mode</name></name> <operator pos:start="317:17" pos:end="317:17">=</operator> <name pos:start="317:19" pos:end="317:23">value</name> <operator pos:start="317:25" pos:end="317:25">&amp;</operator> <literal type="number" pos:start="317:27" pos:end="317:30">0xb7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:30"><expr pos:start="319:9" pos:end="319:29"><name pos:start="319:9" pos:end="319:17"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:17">enable</name></name> <operator pos:start="319:19" pos:end="319:19">=</operator> <name pos:start="319:21" pos:end="319:25">value</name> <operator pos:start="319:27" pos:end="319:27">&amp;</operator> <literal type="number" pos:start="319:29" pos:end="319:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:36"><expr pos:start="321:9" pos:end="321:35"><name pos:start="321:9" pos:end="321:16"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:16">blank</name></name> <operator pos:start="321:18" pos:end="321:18">=</operator> <operator pos:start="321:20" pos:end="321:20">(</operator><name pos:start="321:21" pos:end="321:25">value</name> <operator pos:start="321:27" pos:end="321:28">&gt;&gt;</operator> <literal type="number" pos:start="321:30" pos:end="321:30">1</literal><operator pos:start="321:31" pos:end="321:31">)</operator> <operator pos:start="321:33" pos:end="321:33">&amp;</operator> <literal type="number" pos:start="321:35" pos:end="321:35">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="323:9" pos:end="325:79"><if pos:start="323:9" pos:end="325:79">if <condition pos:start="323:12" pos:end="323:29">(<expr pos:start="323:13" pos:end="323:28"><name pos:start="323:13" pos:end="323:17">value</name> <operator pos:start="323:19" pos:end="323:19">&amp;</operator> <operator pos:start="323:21" pos:end="323:21">(</operator><literal type="number" pos:start="323:22" pos:end="323:22">1</literal> <operator pos:start="323:24" pos:end="323:25">&lt;&lt;</operator> <literal type="number" pos:start="323:27" pos:end="323:27">4</literal><operator pos:start="323:28" pos:end="323:28">)</operator></expr>)</condition><block type="pseudo" pos:start="325:13" pos:end="325:79"><block_content pos:start="325:13" pos:end="325:79">

            <expr_stmt pos:start="325:13" pos:end="325:79"><expr pos:start="325:13" pos:end="325:78"><call pos:start="325:13" pos:end="325:78"><name pos:start="325:13" pos:end="325:19">fprintf</name><argument_list pos:start="325:20" pos:end="325:78">(<argument pos:start="325:21" pos:end="325:26"><expr pos:start="325:21" pos:end="325:26"><name pos:start="325:21" pos:end="325:26">stderr</name></expr></argument>, <argument pos:start="325:29" pos:end="325:63"><expr pos:start="325:29" pos:end="325:63"><literal type="string" pos:start="325:29" pos:end="325:63">"%s: Macrovision enable attempt!\n"</literal></expr></argument>, <argument pos:start="325:66" pos:end="325:77"><expr pos:start="325:66" pos:end="325:77"><name pos:start="325:66" pos:end="325:77">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="327:9" pos:end="327:14">break;</break>



    <case pos:start="331:5" pos:end="331:14">case <expr pos:start="331:10" pos:end="331:13"><literal type="number" pos:start="331:10" pos:end="331:13">0x6a</literal></expr>:</case>	<comment type="block" pos:start="331:17" pos:end="331:37">/* Special Effects */</comment>

        <expr_stmt pos:start="333:9" pos:end="333:33"><expr pos:start="333:9" pos:end="333:32"><name pos:start="333:9" pos:end="333:17"><name pos:start="333:9" pos:end="333:9">s</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:17">effect</name></name> <operator pos:start="333:19" pos:end="333:19">=</operator> <name pos:start="333:21" pos:end="333:25">value</name> <operator pos:start="333:27" pos:end="333:27">&amp;</operator> <literal type="number" pos:start="333:29" pos:end="333:32">0xfb</literal></expr>;</expr_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>



    <case pos:start="339:5" pos:end="339:14">case <expr pos:start="339:10" pos:end="339:13"><literal type="number" pos:start="339:10" pos:end="339:13">0x6c</literal></expr>:</case>	<comment type="block" pos:start="339:17" pos:end="339:53">/* Input Window X Start Position 0 */</comment>

        <expr_stmt pos:start="341:9" pos:end="341:26"><expr pos:start="341:9" pos:end="341:25"><name pos:start="341:9" pos:end="341:16"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:13">ix</name><index pos:start="341:14" pos:end="341:16">[<expr pos:start="341:15" pos:end="341:15"><literal type="number" pos:start="341:15" pos:end="341:15">0</literal></expr>]</index></name> <operator pos:start="341:18" pos:end="341:19">&amp;=</operator> <literal type="number" pos:start="341:21" pos:end="341:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:41"><expr pos:start="343:9" pos:end="343:40"><name pos:start="343:9" pos:end="343:16"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:13">ix</name><index pos:start="343:14" pos:end="343:16">[<expr pos:start="343:15" pos:end="343:15"><literal type="number" pos:start="343:15" pos:end="343:15">0</literal></expr>]</index></name> <operator pos:start="343:18" pos:end="343:19">|=</operator> <operator pos:start="343:21" pos:end="343:21">(</operator><name pos:start="343:22" pos:end="343:26">value</name> <operator pos:start="343:28" pos:end="343:29">&lt;&lt;</operator> <literal type="number" pos:start="343:31" pos:end="343:31">0</literal><operator pos:start="343:32" pos:end="343:32">)</operator> <operator pos:start="343:34" pos:end="343:34">&amp;</operator> <literal type="number" pos:start="343:36" pos:end="343:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="345:9" pos:end="345:14">break;</break>

    <case pos:start="347:5" pos:end="347:14">case <expr pos:start="347:10" pos:end="347:13"><literal type="number" pos:start="347:10" pos:end="347:13">0x6e</literal></expr>:</case>	<comment type="block" pos:start="347:17" pos:end="347:53">/* Input Window X Start Position 1 */</comment>

        <expr_stmt pos:start="349:9" pos:end="349:26"><expr pos:start="349:9" pos:end="349:25"><name pos:start="349:9" pos:end="349:16"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:13">ix</name><index pos:start="349:14" pos:end="349:16">[<expr pos:start="349:15" pos:end="349:15"><literal type="number" pos:start="349:15" pos:end="349:15">0</literal></expr>]</index></name> <operator pos:start="349:18" pos:end="349:19">&amp;=</operator> <literal type="number" pos:start="349:21" pos:end="349:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:41"><expr pos:start="351:9" pos:end="351:40"><name pos:start="351:9" pos:end="351:16"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:13">ix</name><index pos:start="351:14" pos:end="351:16">[<expr pos:start="351:15" pos:end="351:15"><literal type="number" pos:start="351:15" pos:end="351:15">0</literal></expr>]</index></name> <operator pos:start="351:18" pos:end="351:19">|=</operator> <operator pos:start="351:21" pos:end="351:21">(</operator><name pos:start="351:22" pos:end="351:26">value</name> <operator pos:start="351:28" pos:end="351:29">&lt;&lt;</operator> <literal type="number" pos:start="351:31" pos:end="351:31">8</literal><operator pos:start="351:32" pos:end="351:32">)</operator> <operator pos:start="351:34" pos:end="351:34">&amp;</operator> <literal type="number" pos:start="351:36" pos:end="351:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="353:9" pos:end="353:14">break;</break>

    <case pos:start="355:5" pos:end="355:14">case <expr pos:start="355:10" pos:end="355:13"><literal type="number" pos:start="355:10" pos:end="355:13">0x70</literal></expr>:</case>	<comment type="block" pos:start="355:17" pos:end="355:53">/* Input Window Y Start Position 0 */</comment>

        <expr_stmt pos:start="357:9" pos:end="357:26"><expr pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:16"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:13">iy</name><index pos:start="357:14" pos:end="357:16">[<expr pos:start="357:15" pos:end="357:15"><literal type="number" pos:start="357:15" pos:end="357:15">0</literal></expr>]</index></name> <operator pos:start="357:18" pos:end="357:19">&amp;=</operator> <literal type="number" pos:start="357:21" pos:end="357:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:41"><expr pos:start="359:9" pos:end="359:40"><name pos:start="359:9" pos:end="359:16"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:13">iy</name><index pos:start="359:14" pos:end="359:16">[<expr pos:start="359:15" pos:end="359:15"><literal type="number" pos:start="359:15" pos:end="359:15">0</literal></expr>]</index></name> <operator pos:start="359:18" pos:end="359:19">|=</operator> <operator pos:start="359:21" pos:end="359:21">(</operator><name pos:start="359:22" pos:end="359:26">value</name> <operator pos:start="359:28" pos:end="359:29">&lt;&lt;</operator> <literal type="number" pos:start="359:31" pos:end="359:31">0</literal><operator pos:start="359:32" pos:end="359:32">)</operator> <operator pos:start="359:34" pos:end="359:34">&amp;</operator> <literal type="number" pos:start="359:36" pos:end="359:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>

    <case pos:start="363:5" pos:end="363:14">case <expr pos:start="363:10" pos:end="363:13"><literal type="number" pos:start="363:10" pos:end="363:13">0x72</literal></expr>:</case>	<comment type="block" pos:start="363:17" pos:end="363:53">/* Input Window Y Start Position 1 */</comment>

        <expr_stmt pos:start="365:9" pos:end="365:26"><expr pos:start="365:9" pos:end="365:25"><name pos:start="365:9" pos:end="365:16"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:13">iy</name><index pos:start="365:14" pos:end="365:16">[<expr pos:start="365:15" pos:end="365:15"><literal type="number" pos:start="365:15" pos:end="365:15">0</literal></expr>]</index></name> <operator pos:start="365:18" pos:end="365:19">&amp;=</operator> <literal type="number" pos:start="365:21" pos:end="365:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:41"><expr pos:start="367:9" pos:end="367:40"><name pos:start="367:9" pos:end="367:16"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:13">iy</name><index pos:start="367:14" pos:end="367:16">[<expr pos:start="367:15" pos:end="367:15"><literal type="number" pos:start="367:15" pos:end="367:15">0</literal></expr>]</index></name> <operator pos:start="367:18" pos:end="367:19">|=</operator> <operator pos:start="367:21" pos:end="367:21">(</operator><name pos:start="367:22" pos:end="367:26">value</name> <operator pos:start="367:28" pos:end="367:29">&lt;&lt;</operator> <literal type="number" pos:start="367:31" pos:end="367:31">8</literal><operator pos:start="367:32" pos:end="367:32">)</operator> <operator pos:start="367:34" pos:end="367:34">&amp;</operator> <literal type="number" pos:start="367:36" pos:end="367:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="369:9" pos:end="369:14">break;</break>

    <case pos:start="371:5" pos:end="371:14">case <expr pos:start="371:10" pos:end="371:13"><literal type="number" pos:start="371:10" pos:end="371:13">0x74</literal></expr>:</case>	<comment type="block" pos:start="371:17" pos:end="371:51">/* Input Window X End Position 0 */</comment>

        <expr_stmt pos:start="373:9" pos:end="373:26"><expr pos:start="373:9" pos:end="373:25"><name pos:start="373:9" pos:end="373:16"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:13">ix</name><index pos:start="373:14" pos:end="373:16">[<expr pos:start="373:15" pos:end="373:15"><literal type="number" pos:start="373:15" pos:end="373:15">1</literal></expr>]</index></name> <operator pos:start="373:18" pos:end="373:19">&amp;=</operator> <literal type="number" pos:start="373:21" pos:end="373:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:41"><expr pos:start="375:9" pos:end="375:40"><name pos:start="375:9" pos:end="375:16"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:13">ix</name><index pos:start="375:14" pos:end="375:16">[<expr pos:start="375:15" pos:end="375:15"><literal type="number" pos:start="375:15" pos:end="375:15">1</literal></expr>]</index></name> <operator pos:start="375:18" pos:end="375:19">|=</operator> <operator pos:start="375:21" pos:end="375:21">(</operator><name pos:start="375:22" pos:end="375:26">value</name> <operator pos:start="375:28" pos:end="375:29">&lt;&lt;</operator> <literal type="number" pos:start="375:31" pos:end="375:31">0</literal><operator pos:start="375:32" pos:end="375:32">)</operator> <operator pos:start="375:34" pos:end="375:34">&amp;</operator> <literal type="number" pos:start="375:36" pos:end="375:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="377:9" pos:end="377:14">break;</break>

    <case pos:start="379:5" pos:end="379:14">case <expr pos:start="379:10" pos:end="379:13"><literal type="number" pos:start="379:10" pos:end="379:13">0x76</literal></expr>:</case>	<comment type="block" pos:start="379:17" pos:end="379:51">/* Input Window X End Position 1 */</comment>

        <expr_stmt pos:start="381:9" pos:end="381:26"><expr pos:start="381:9" pos:end="381:25"><name pos:start="381:9" pos:end="381:16"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:13">ix</name><index pos:start="381:14" pos:end="381:16">[<expr pos:start="381:15" pos:end="381:15"><literal type="number" pos:start="381:15" pos:end="381:15">1</literal></expr>]</index></name> <operator pos:start="381:18" pos:end="381:19">&amp;=</operator> <literal type="number" pos:start="381:21" pos:end="381:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:41"><expr pos:start="383:9" pos:end="383:40"><name pos:start="383:9" pos:end="383:16"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:13">ix</name><index pos:start="383:14" pos:end="383:16">[<expr pos:start="383:15" pos:end="383:15"><literal type="number" pos:start="383:15" pos:end="383:15">1</literal></expr>]</index></name> <operator pos:start="383:18" pos:end="383:19">|=</operator> <operator pos:start="383:21" pos:end="383:21">(</operator><name pos:start="383:22" pos:end="383:26">value</name> <operator pos:start="383:28" pos:end="383:29">&lt;&lt;</operator> <literal type="number" pos:start="383:31" pos:end="383:31">8</literal><operator pos:start="383:32" pos:end="383:32">)</operator> <operator pos:start="383:34" pos:end="383:34">&amp;</operator> <literal type="number" pos:start="383:36" pos:end="383:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="385:9" pos:end="385:14">break;</break>

    <case pos:start="387:5" pos:end="387:14">case <expr pos:start="387:10" pos:end="387:13"><literal type="number" pos:start="387:10" pos:end="387:13">0x78</literal></expr>:</case>	<comment type="block" pos:start="387:17" pos:end="387:51">/* Input Window Y End Position 0 */</comment>

        <expr_stmt pos:start="389:9" pos:end="389:26"><expr pos:start="389:9" pos:end="389:25"><name pos:start="389:9" pos:end="389:16"><name pos:start="389:9" pos:end="389:9">s</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:13">iy</name><index pos:start="389:14" pos:end="389:16">[<expr pos:start="389:15" pos:end="389:15"><literal type="number" pos:start="389:15" pos:end="389:15">1</literal></expr>]</index></name> <operator pos:start="389:18" pos:end="389:19">&amp;=</operator> <literal type="number" pos:start="389:21" pos:end="389:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:41"><expr pos:start="391:9" pos:end="391:40"><name pos:start="391:9" pos:end="391:16"><name pos:start="391:9" pos:end="391:9">s</name><operator pos:start="391:10" pos:end="391:11">-&gt;</operator><name pos:start="391:12" pos:end="391:13">iy</name><index pos:start="391:14" pos:end="391:16">[<expr pos:start="391:15" pos:end="391:15"><literal type="number" pos:start="391:15" pos:end="391:15">1</literal></expr>]</index></name> <operator pos:start="391:18" pos:end="391:19">|=</operator> <operator pos:start="391:21" pos:end="391:21">(</operator><name pos:start="391:22" pos:end="391:26">value</name> <operator pos:start="391:28" pos:end="391:29">&lt;&lt;</operator> <literal type="number" pos:start="391:31" pos:end="391:31">0</literal><operator pos:start="391:32" pos:end="391:32">)</operator> <operator pos:start="391:34" pos:end="391:34">&amp;</operator> <literal type="number" pos:start="391:36" pos:end="391:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="393:9" pos:end="393:14">break;</break>

    <case pos:start="395:5" pos:end="395:14">case <expr pos:start="395:10" pos:end="395:13"><literal type="number" pos:start="395:10" pos:end="395:13">0x7a</literal></expr>:</case>	<comment type="block" pos:start="395:17" pos:end="395:51">/* Input Window Y End Position 1 */</comment>

        <expr_stmt pos:start="397:9" pos:end="397:26"><expr pos:start="397:9" pos:end="397:25"><name pos:start="397:9" pos:end="397:16"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:13">iy</name><index pos:start="397:14" pos:end="397:16">[<expr pos:start="397:15" pos:end="397:15"><literal type="number" pos:start="397:15" pos:end="397:15">1</literal></expr>]</index></name> <operator pos:start="397:18" pos:end="397:19">&amp;=</operator> <literal type="number" pos:start="397:21" pos:end="397:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:41"><expr pos:start="399:9" pos:end="399:40"><name pos:start="399:9" pos:end="399:16"><name pos:start="399:9" pos:end="399:9">s</name><operator pos:start="399:10" pos:end="399:11">-&gt;</operator><name pos:start="399:12" pos:end="399:13">iy</name><index pos:start="399:14" pos:end="399:16">[<expr pos:start="399:15" pos:end="399:15"><literal type="number" pos:start="399:15" pos:end="399:15">1</literal></expr>]</index></name> <operator pos:start="399:18" pos:end="399:19">|=</operator> <operator pos:start="399:21" pos:end="399:21">(</operator><name pos:start="399:22" pos:end="399:26">value</name> <operator pos:start="399:28" pos:end="399:29">&lt;&lt;</operator> <literal type="number" pos:start="399:31" pos:end="399:31">8</literal><operator pos:start="399:32" pos:end="399:32">)</operator> <operator pos:start="399:34" pos:end="399:34">&amp;</operator> <literal type="number" pos:start="399:36" pos:end="399:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="401:9" pos:end="401:14">break;</break>

    <case pos:start="403:5" pos:end="403:14">case <expr pos:start="403:10" pos:end="403:13"><literal type="number" pos:start="403:10" pos:end="403:13">0x7c</literal></expr>:</case>	<comment type="block" pos:start="403:17" pos:end="403:54">/* Output Window X Start Position 0 */</comment>

        <expr_stmt pos:start="405:9" pos:end="405:26"><expr pos:start="405:9" pos:end="405:25"><name pos:start="405:9" pos:end="405:16"><name pos:start="405:9" pos:end="405:9">s</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:13">ox</name><index pos:start="405:14" pos:end="405:16">[<expr pos:start="405:15" pos:end="405:15"><literal type="number" pos:start="405:15" pos:end="405:15">0</literal></expr>]</index></name> <operator pos:start="405:18" pos:end="405:19">&amp;=</operator> <literal type="number" pos:start="405:21" pos:end="405:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:41"><expr pos:start="407:9" pos:end="407:40"><name pos:start="407:9" pos:end="407:16"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:13">ox</name><index pos:start="407:14" pos:end="407:16">[<expr pos:start="407:15" pos:end="407:15"><literal type="number" pos:start="407:15" pos:end="407:15">0</literal></expr>]</index></name> <operator pos:start="407:18" pos:end="407:19">|=</operator> <operator pos:start="407:21" pos:end="407:21">(</operator><name pos:start="407:22" pos:end="407:26">value</name> <operator pos:start="407:28" pos:end="407:29">&lt;&lt;</operator> <literal type="number" pos:start="407:31" pos:end="407:31">0</literal><operator pos:start="407:32" pos:end="407:32">)</operator> <operator pos:start="407:34" pos:end="407:34">&amp;</operator> <literal type="number" pos:start="407:36" pos:end="407:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="409:9" pos:end="409:14">break;</break>

    <case pos:start="411:5" pos:end="411:14">case <expr pos:start="411:10" pos:end="411:13"><literal type="number" pos:start="411:10" pos:end="411:13">0x7e</literal></expr>:</case>	<comment type="block" pos:start="411:17" pos:end="411:54">/* Output Window X Start Position 1 */</comment>

        <expr_stmt pos:start="413:9" pos:end="413:26"><expr pos:start="413:9" pos:end="413:25"><name pos:start="413:9" pos:end="413:16"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:13">ox</name><index pos:start="413:14" pos:end="413:16">[<expr pos:start="413:15" pos:end="413:15"><literal type="number" pos:start="413:15" pos:end="413:15">0</literal></expr>]</index></name> <operator pos:start="413:18" pos:end="413:19">&amp;=</operator> <literal type="number" pos:start="413:21" pos:end="413:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:41"><expr pos:start="415:9" pos:end="415:40"><name pos:start="415:9" pos:end="415:16"><name pos:start="415:9" pos:end="415:9">s</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:13">ox</name><index pos:start="415:14" pos:end="415:16">[<expr pos:start="415:15" pos:end="415:15"><literal type="number" pos:start="415:15" pos:end="415:15">0</literal></expr>]</index></name> <operator pos:start="415:18" pos:end="415:19">|=</operator> <operator pos:start="415:21" pos:end="415:21">(</operator><name pos:start="415:22" pos:end="415:26">value</name> <operator pos:start="415:28" pos:end="415:29">&lt;&lt;</operator> <literal type="number" pos:start="415:31" pos:end="415:31">8</literal><operator pos:start="415:32" pos:end="415:32">)</operator> <operator pos:start="415:34" pos:end="415:34">&amp;</operator> <literal type="number" pos:start="415:36" pos:end="415:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="417:9" pos:end="417:14">break;</break>

    <case pos:start="419:5" pos:end="419:14">case <expr pos:start="419:10" pos:end="419:13"><literal type="number" pos:start="419:10" pos:end="419:13">0x80</literal></expr>:</case>	<comment type="block" pos:start="419:17" pos:end="419:54">/* Output Window Y Start Position 0 */</comment>

        <expr_stmt pos:start="421:9" pos:end="421:26"><expr pos:start="421:9" pos:end="421:25"><name pos:start="421:9" pos:end="421:16"><name pos:start="421:9" pos:end="421:9">s</name><operator pos:start="421:10" pos:end="421:11">-&gt;</operator><name pos:start="421:12" pos:end="421:13">oy</name><index pos:start="421:14" pos:end="421:16">[<expr pos:start="421:15" pos:end="421:15"><literal type="number" pos:start="421:15" pos:end="421:15">0</literal></expr>]</index></name> <operator pos:start="421:18" pos:end="421:19">&amp;=</operator> <literal type="number" pos:start="421:21" pos:end="421:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:41"><expr pos:start="423:9" pos:end="423:40"><name pos:start="423:9" pos:end="423:16"><name pos:start="423:9" pos:end="423:9">s</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:13">oy</name><index pos:start="423:14" pos:end="423:16">[<expr pos:start="423:15" pos:end="423:15"><literal type="number" pos:start="423:15" pos:end="423:15">0</literal></expr>]</index></name> <operator pos:start="423:18" pos:end="423:19">|=</operator> <operator pos:start="423:21" pos:end="423:21">(</operator><name pos:start="423:22" pos:end="423:26">value</name> <operator pos:start="423:28" pos:end="423:29">&lt;&lt;</operator> <literal type="number" pos:start="423:31" pos:end="423:31">0</literal><operator pos:start="423:32" pos:end="423:32">)</operator> <operator pos:start="423:34" pos:end="423:34">&amp;</operator> <literal type="number" pos:start="423:36" pos:end="423:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="425:9" pos:end="425:14">break;</break>

    <case pos:start="427:5" pos:end="427:14">case <expr pos:start="427:10" pos:end="427:13"><literal type="number" pos:start="427:10" pos:end="427:13">0x82</literal></expr>:</case>	<comment type="block" pos:start="427:17" pos:end="427:54">/* Output Window Y Start Position 1 */</comment>

        <expr_stmt pos:start="429:9" pos:end="429:26"><expr pos:start="429:9" pos:end="429:25"><name pos:start="429:9" pos:end="429:16"><name pos:start="429:9" pos:end="429:9">s</name><operator pos:start="429:10" pos:end="429:11">-&gt;</operator><name pos:start="429:12" pos:end="429:13">oy</name><index pos:start="429:14" pos:end="429:16">[<expr pos:start="429:15" pos:end="429:15"><literal type="number" pos:start="429:15" pos:end="429:15">0</literal></expr>]</index></name> <operator pos:start="429:18" pos:end="429:19">&amp;=</operator> <literal type="number" pos:start="429:21" pos:end="429:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:41"><expr pos:start="431:9" pos:end="431:40"><name pos:start="431:9" pos:end="431:16"><name pos:start="431:9" pos:end="431:9">s</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:13">oy</name><index pos:start="431:14" pos:end="431:16">[<expr pos:start="431:15" pos:end="431:15"><literal type="number" pos:start="431:15" pos:end="431:15">0</literal></expr>]</index></name> <operator pos:start="431:18" pos:end="431:19">|=</operator> <operator pos:start="431:21" pos:end="431:21">(</operator><name pos:start="431:22" pos:end="431:26">value</name> <operator pos:start="431:28" pos:end="431:29">&lt;&lt;</operator> <literal type="number" pos:start="431:31" pos:end="431:31">8</literal><operator pos:start="431:32" pos:end="431:32">)</operator> <operator pos:start="431:34" pos:end="431:34">&amp;</operator> <literal type="number" pos:start="431:36" pos:end="431:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="433:9" pos:end="433:14">break;</break>

    <case pos:start="435:5" pos:end="435:14">case <expr pos:start="435:10" pos:end="435:13"><literal type="number" pos:start="435:10" pos:end="435:13">0x84</literal></expr>:</case>	<comment type="block" pos:start="435:17" pos:end="435:52">/* Output Window X End Position 0 */</comment>

        <expr_stmt pos:start="437:9" pos:end="437:26"><expr pos:start="437:9" pos:end="437:25"><name pos:start="437:9" pos:end="437:16"><name pos:start="437:9" pos:end="437:9">s</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:13">ox</name><index pos:start="437:14" pos:end="437:16">[<expr pos:start="437:15" pos:end="437:15"><literal type="number" pos:start="437:15" pos:end="437:15">1</literal></expr>]</index></name> <operator pos:start="437:18" pos:end="437:19">&amp;=</operator> <literal type="number" pos:start="437:21" pos:end="437:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:41"><expr pos:start="439:9" pos:end="439:40"><name pos:start="439:9" pos:end="439:16"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:13">ox</name><index pos:start="439:14" pos:end="439:16">[<expr pos:start="439:15" pos:end="439:15"><literal type="number" pos:start="439:15" pos:end="439:15">1</literal></expr>]</index></name> <operator pos:start="439:18" pos:end="439:19">|=</operator> <operator pos:start="439:21" pos:end="439:21">(</operator><name pos:start="439:22" pos:end="439:26">value</name> <operator pos:start="439:28" pos:end="439:29">&lt;&lt;</operator> <literal type="number" pos:start="439:31" pos:end="439:31">0</literal><operator pos:start="439:32" pos:end="439:32">)</operator> <operator pos:start="439:34" pos:end="439:34">&amp;</operator> <literal type="number" pos:start="439:36" pos:end="439:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="441:9" pos:end="441:14">break;</break>

    <case pos:start="443:5" pos:end="443:14">case <expr pos:start="443:10" pos:end="443:13"><literal type="number" pos:start="443:10" pos:end="443:13">0x86</literal></expr>:</case>	<comment type="block" pos:start="443:17" pos:end="443:52">/* Output Window X End Position 1 */</comment>

        <expr_stmt pos:start="445:9" pos:end="445:26"><expr pos:start="445:9" pos:end="445:25"><name pos:start="445:9" pos:end="445:16"><name pos:start="445:9" pos:end="445:9">s</name><operator pos:start="445:10" pos:end="445:11">-&gt;</operator><name pos:start="445:12" pos:end="445:13">ox</name><index pos:start="445:14" pos:end="445:16">[<expr pos:start="445:15" pos:end="445:15"><literal type="number" pos:start="445:15" pos:end="445:15">1</literal></expr>]</index></name> <operator pos:start="445:18" pos:end="445:19">&amp;=</operator> <literal type="number" pos:start="445:21" pos:end="445:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:41"><expr pos:start="447:9" pos:end="447:40"><name pos:start="447:9" pos:end="447:16"><name pos:start="447:9" pos:end="447:9">s</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:13">ox</name><index pos:start="447:14" pos:end="447:16">[<expr pos:start="447:15" pos:end="447:15"><literal type="number" pos:start="447:15" pos:end="447:15">1</literal></expr>]</index></name> <operator pos:start="447:18" pos:end="447:19">|=</operator> <operator pos:start="447:21" pos:end="447:21">(</operator><name pos:start="447:22" pos:end="447:26">value</name> <operator pos:start="447:28" pos:end="447:29">&lt;&lt;</operator> <literal type="number" pos:start="447:31" pos:end="447:31">8</literal><operator pos:start="447:32" pos:end="447:32">)</operator> <operator pos:start="447:34" pos:end="447:34">&amp;</operator> <literal type="number" pos:start="447:36" pos:end="447:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="449:9" pos:end="449:14">break;</break>

    <case pos:start="451:5" pos:end="451:14">case <expr pos:start="451:10" pos:end="451:13"><literal type="number" pos:start="451:10" pos:end="451:13">0x88</literal></expr>:</case>	<comment type="block" pos:start="451:17" pos:end="451:52">/* Output Window Y End Position 0 */</comment>

        <expr_stmt pos:start="453:9" pos:end="453:26"><expr pos:start="453:9" pos:end="453:25"><name pos:start="453:9" pos:end="453:16"><name pos:start="453:9" pos:end="453:9">s</name><operator pos:start="453:10" pos:end="453:11">-&gt;</operator><name pos:start="453:12" pos:end="453:13">oy</name><index pos:start="453:14" pos:end="453:16">[<expr pos:start="453:15" pos:end="453:15"><literal type="number" pos:start="453:15" pos:end="453:15">1</literal></expr>]</index></name> <operator pos:start="453:18" pos:end="453:19">&amp;=</operator> <literal type="number" pos:start="453:21" pos:end="453:25">0x300</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:41"><expr pos:start="455:9" pos:end="455:40"><name pos:start="455:9" pos:end="455:16"><name pos:start="455:9" pos:end="455:9">s</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:13">oy</name><index pos:start="455:14" pos:end="455:16">[<expr pos:start="455:15" pos:end="455:15"><literal type="number" pos:start="455:15" pos:end="455:15">1</literal></expr>]</index></name> <operator pos:start="455:18" pos:end="455:19">|=</operator> <operator pos:start="455:21" pos:end="455:21">(</operator><name pos:start="455:22" pos:end="455:26">value</name> <operator pos:start="455:28" pos:end="455:29">&lt;&lt;</operator> <literal type="number" pos:start="455:31" pos:end="455:31">0</literal><operator pos:start="455:32" pos:end="455:32">)</operator> <operator pos:start="455:34" pos:end="455:34">&amp;</operator> <literal type="number" pos:start="455:36" pos:end="455:40">0x0ff</literal></expr>;</expr_stmt>

        <break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:14">case <expr pos:start="459:10" pos:end="459:13"><literal type="number" pos:start="459:10" pos:end="459:13">0x8a</literal></expr>:</case>	<comment type="block" pos:start="459:17" pos:end="459:52">/* Output Window Y End Position 1 */</comment>

        <expr_stmt pos:start="461:9" pos:end="461:26"><expr pos:start="461:9" pos:end="461:25"><name pos:start="461:9" pos:end="461:16"><name pos:start="461:9" pos:end="461:9">s</name><operator pos:start="461:10" pos:end="461:11">-&gt;</operator><name pos:start="461:12" pos:end="461:13">oy</name><index pos:start="461:14" pos:end="461:16">[<expr pos:start="461:15" pos:end="461:15"><literal type="number" pos:start="461:15" pos:end="461:15">1</literal></expr>]</index></name> <operator pos:start="461:18" pos:end="461:19">&amp;=</operator> <literal type="number" pos:start="461:21" pos:end="461:25">0x0ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:41"><expr pos:start="463:9" pos:end="463:40"><name pos:start="463:9" pos:end="463:16"><name pos:start="463:9" pos:end="463:9">s</name><operator pos:start="463:10" pos:end="463:11">-&gt;</operator><name pos:start="463:12" pos:end="463:13">oy</name><index pos:start="463:14" pos:end="463:16">[<expr pos:start="463:15" pos:end="463:15"><literal type="number" pos:start="463:15" pos:end="463:15">1</literal></expr>]</index></name> <operator pos:start="463:18" pos:end="463:19">|=</operator> <operator pos:start="463:21" pos:end="463:21">(</operator><name pos:start="463:22" pos:end="463:26">value</name> <operator pos:start="463:28" pos:end="463:29">&lt;&lt;</operator> <literal type="number" pos:start="463:31" pos:end="463:31">8</literal><operator pos:start="463:32" pos:end="463:32">)</operator> <operator pos:start="463:34" pos:end="463:34">&amp;</operator> <literal type="number" pos:start="463:36" pos:end="463:40">0x300</literal></expr>;</expr_stmt>

        <break pos:start="465:9" pos:end="465:14">break;</break>



    <case pos:start="469:5" pos:end="469:14">case <expr pos:start="469:10" pos:end="469:13"><literal type="number" pos:start="469:10" pos:end="469:13">0x8c</literal></expr>:</case>	<comment type="block" pos:start="469:17" pos:end="469:39">/* Input Data Format */</comment>

        <expr_stmt pos:start="471:9" pos:end="471:33"><expr pos:start="471:9" pos:end="471:32"><name pos:start="471:9" pos:end="471:18"><name pos:start="471:9" pos:end="471:9">s</name><operator pos:start="471:10" pos:end="471:11">-&gt;</operator><name pos:start="471:12" pos:end="471:18">iformat</name></name> <operator pos:start="471:20" pos:end="471:20">=</operator> <name pos:start="471:22" pos:end="471:26">value</name> <operator pos:start="471:28" pos:end="471:28">&amp;</operator> <literal type="number" pos:start="471:30" pos:end="471:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:50"><expr pos:start="473:9" pos:end="473:49"><name pos:start="473:9" pos:end="473:14"><name pos:start="473:9" pos:end="473:9">s</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:14">bpp</name></name> <operator pos:start="473:16" pos:end="473:16">=</operator> <name pos:start="473:18" pos:end="473:49"><name pos:start="473:18" pos:end="473:37">blizzard_iformat_bpp</name><index pos:start="473:38" pos:end="473:49">[<expr pos:start="473:39" pos:end="473:48"><name pos:start="473:39" pos:end="473:48"><name pos:start="473:39" pos:end="473:39">s</name><operator pos:start="473:40" pos:end="473:41">-&gt;</operator><name pos:start="473:42" pos:end="473:48">iformat</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="475:9" pos:end="479:54"><if pos:start="475:9" pos:end="479:54">if <condition pos:start="475:12" pos:end="475:20">(<expr pos:start="475:13" pos:end="475:19"><operator pos:start="475:13" pos:end="475:13">!</operator><name pos:start="475:14" pos:end="475:19"><name pos:start="475:14" pos:end="475:14">s</name><operator pos:start="475:15" pos:end="475:16">-&gt;</operator><name pos:start="475:17" pos:end="475:19">bpp</name></name></expr>)</condition><block type="pseudo" pos:start="477:13" pos:end="479:54"><block_content pos:start="477:13" pos:end="479:54">

            <expr_stmt pos:start="477:13" pos:end="479:54"><expr pos:start="477:13" pos:end="479:53"><call pos:start="477:13" pos:end="479:53"><name pos:start="477:13" pos:end="477:19">fprintf</name><argument_list pos:start="477:20" pos:end="479:53">(<argument pos:start="477:21" pos:end="477:26"><expr pos:start="477:21" pos:end="477:26"><name pos:start="477:21" pos:end="477:26">stderr</name></expr></argument>, <argument pos:start="477:29" pos:end="477:74"><expr pos:start="477:29" pos:end="477:74"><literal type="string" pos:start="477:29" pos:end="477:74">"%s: Illegal or unsupported input format %x\n"</literal></expr></argument>,

                            <argument pos:start="479:29" pos:end="479:40"><expr pos:start="479:29" pos:end="479:40"><name pos:start="479:29" pos:end="479:40">__FUNCTION__</name></expr></argument>, <argument pos:start="479:43" pos:end="479:52"><expr pos:start="479:43" pos:end="479:52"><name pos:start="479:43" pos:end="479:52"><name pos:start="479:43" pos:end="479:43">s</name><operator pos:start="479:44" pos:end="479:45">-&gt;</operator><name pos:start="479:46" pos:end="479:52">iformat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="481:9" pos:end="481:14">break;</break>

    <case pos:start="483:5" pos:end="483:14">case <expr pos:start="483:10" pos:end="483:13"><literal type="number" pos:start="483:10" pos:end="483:13">0x8e</literal></expr>:</case>	<comment type="block" pos:start="483:17" pos:end="483:40">/* Data Source Select */</comment>

        <expr_stmt pos:start="485:9" pos:end="485:30"><expr pos:start="485:9" pos:end="485:29"><name pos:start="485:9" pos:end="485:17"><name pos:start="485:9" pos:end="485:9">s</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:17">source</name></name> <operator pos:start="485:19" pos:end="485:19">=</operator> <name pos:start="485:21" pos:end="485:25">value</name> <operator pos:start="485:27" pos:end="485:27">&amp;</operator> <literal type="number" pos:start="485:29" pos:end="485:29">7</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="487:9" pos:end="487:68">/* Currently all windows will be "destructive overlays".  */</comment>

        <if_stmt pos:start="489:9" pos:end="503:42"><if pos:start="489:9" pos:end="503:42">if <condition pos:start="489:12" pos:end="499:77">(<expr pos:start="489:13" pos:end="499:76"><operator pos:start="489:13" pos:end="489:13">(</operator><operator pos:start="489:14" pos:end="489:14">!</operator><operator pos:start="489:15" pos:end="489:15">(</operator><name pos:start="489:16" pos:end="489:24"><name pos:start="489:16" pos:end="489:16">s</name><operator pos:start="489:17" pos:end="489:18">-&gt;</operator><name pos:start="489:19" pos:end="489:24">effect</name></name> <operator pos:start="489:26" pos:end="489:26">&amp;</operator> <operator pos:start="489:28" pos:end="489:28">(</operator><literal type="number" pos:start="489:29" pos:end="489:29">1</literal> <operator pos:start="489:31" pos:end="489:32">&lt;&lt;</operator> <literal type="number" pos:start="489:34" pos:end="489:34">3</literal><operator pos:start="489:35" pos:end="489:35">)</operator><operator pos:start="489:36" pos:end="489:36">)</operator> <operator pos:start="489:38" pos:end="489:39">&amp;&amp;</operator> <operator pos:start="489:41" pos:end="489:41">(</operator><name pos:start="489:42" pos:end="489:49"><name pos:start="489:42" pos:end="489:42">s</name><operator pos:start="489:43" pos:end="489:44">-&gt;</operator><name pos:start="489:45" pos:end="489:46">ix</name><index pos:start="489:47" pos:end="489:49">[<expr pos:start="489:48" pos:end="489:48"><literal type="number" pos:start="489:48" pos:end="489:48">0</literal></expr>]</index></name> <operator pos:start="489:51" pos:end="489:52">!=</operator> <name pos:start="489:54" pos:end="489:61"><name pos:start="489:54" pos:end="489:54">s</name><operator pos:start="489:55" pos:end="489:56">-&gt;</operator><name pos:start="489:57" pos:end="489:58">ox</name><index pos:start="489:59" pos:end="489:61">[<expr pos:start="489:60" pos:end="489:60"><literal type="number" pos:start="489:60" pos:end="489:60">0</literal></expr>]</index></name> <operator pos:start="489:63" pos:end="489:64">||</operator>

                                        <name pos:start="491:41" pos:end="491:48"><name pos:start="491:41" pos:end="491:41">s</name><operator pos:start="491:42" pos:end="491:43">-&gt;</operator><name pos:start="491:44" pos:end="491:45">iy</name><index pos:start="491:46" pos:end="491:48">[<expr pos:start="491:47" pos:end="491:47"><literal type="number" pos:start="491:47" pos:end="491:47">0</literal></expr>]</index></name> <operator pos:start="491:50" pos:end="491:51">!=</operator> <name pos:start="491:53" pos:end="491:60"><name pos:start="491:53" pos:end="491:53">s</name><operator pos:start="491:54" pos:end="491:55">-&gt;</operator><name pos:start="491:56" pos:end="491:57">oy</name><index pos:start="491:58" pos:end="491:60">[<expr pos:start="491:59" pos:end="491:59"><literal type="number" pos:start="491:59" pos:end="491:59">0</literal></expr>]</index></name> <operator pos:start="491:62" pos:end="491:63">||</operator>

                                        <name pos:start="493:41" pos:end="493:48"><name pos:start="493:41" pos:end="493:41">s</name><operator pos:start="493:42" pos:end="493:43">-&gt;</operator><name pos:start="493:44" pos:end="493:45">ix</name><index pos:start="493:46" pos:end="493:48">[<expr pos:start="493:47" pos:end="493:47"><literal type="number" pos:start="493:47" pos:end="493:47">1</literal></expr>]</index></name> <operator pos:start="493:50" pos:end="493:51">!=</operator> <name pos:start="493:53" pos:end="493:60"><name pos:start="493:53" pos:end="493:53">s</name><operator pos:start="493:54" pos:end="493:55">-&gt;</operator><name pos:start="493:56" pos:end="493:57">ox</name><index pos:start="493:58" pos:end="493:60">[<expr pos:start="493:59" pos:end="493:59"><literal type="number" pos:start="493:59" pos:end="493:59">1</literal></expr>]</index></name> <operator pos:start="493:62" pos:end="493:63">||</operator>

                                        <name pos:start="495:41" pos:end="495:48"><name pos:start="495:41" pos:end="495:41">s</name><operator pos:start="495:42" pos:end="495:43">-&gt;</operator><name pos:start="495:44" pos:end="495:45">iy</name><index pos:start="495:46" pos:end="495:48">[<expr pos:start="495:47" pos:end="495:47"><literal type="number" pos:start="495:47" pos:end="495:47">1</literal></expr>]</index></name> <operator pos:start="495:50" pos:end="495:51">!=</operator> <name pos:start="495:53" pos:end="495:60"><name pos:start="495:53" pos:end="495:53">s</name><operator pos:start="495:54" pos:end="495:55">-&gt;</operator><name pos:start="495:56" pos:end="495:57">oy</name><index pos:start="495:58" pos:end="495:60">[<expr pos:start="495:59" pos:end="495:59"><literal type="number" pos:start="495:59" pos:end="495:59">1</literal></expr>]</index></name><operator pos:start="495:61" pos:end="495:61">)</operator><operator pos:start="495:62" pos:end="495:62">)</operator> <operator pos:start="495:64" pos:end="495:65">||</operator>

                        <operator pos:start="497:25" pos:end="497:25">!</operator><operator pos:start="497:26" pos:end="497:26">(</operator><operator pos:start="497:27" pos:end="497:27">(</operator><name pos:start="497:28" pos:end="497:35"><name pos:start="497:28" pos:end="497:28">s</name><operator pos:start="497:29" pos:end="497:30">-&gt;</operator><name pos:start="497:31" pos:end="497:32">ix</name><index pos:start="497:33" pos:end="497:35">[<expr pos:start="497:34" pos:end="497:34"><literal type="number" pos:start="497:34" pos:end="497:34">1</literal></expr>]</index></name> <operator pos:start="497:37" pos:end="497:37">-</operator> <name pos:start="497:39" pos:end="497:46"><name pos:start="497:39" pos:end="497:39">s</name><operator pos:start="497:40" pos:end="497:41">-&gt;</operator><name pos:start="497:42" pos:end="497:43">ix</name><index pos:start="497:44" pos:end="497:46">[<expr pos:start="497:45" pos:end="497:45"><literal type="number" pos:start="497:45" pos:end="497:45">0</literal></expr>]</index></name><operator pos:start="497:47" pos:end="497:47">)</operator> <operator pos:start="497:49" pos:end="497:49">&amp;</operator> <operator pos:start="497:51" pos:end="497:51">(</operator><name pos:start="497:52" pos:end="497:59"><name pos:start="497:52" pos:end="497:52">s</name><operator pos:start="497:53" pos:end="497:54">-&gt;</operator><name pos:start="497:55" pos:end="497:56">iy</name><index pos:start="497:57" pos:end="497:59">[<expr pos:start="497:58" pos:end="497:58"><literal type="number" pos:start="497:58" pos:end="497:58">1</literal></expr>]</index></name> <operator pos:start="497:61" pos:end="497:61">-</operator> <name pos:start="497:63" pos:end="497:70"><name pos:start="497:63" pos:end="497:63">s</name><operator pos:start="497:64" pos:end="497:65">-&gt;</operator><name pos:start="497:66" pos:end="497:67">iy</name><index pos:start="497:68" pos:end="497:70">[<expr pos:start="497:69" pos:end="497:69"><literal type="number" pos:start="497:69" pos:end="497:69">0</literal></expr>]</index></name><operator pos:start="497:71" pos:end="497:71">)</operator> <operator pos:start="497:73" pos:end="497:73">&amp;</operator>

                          <operator pos:start="499:27" pos:end="499:27">(</operator><name pos:start="499:28" pos:end="499:35"><name pos:start="499:28" pos:end="499:28">s</name><operator pos:start="499:29" pos:end="499:30">-&gt;</operator><name pos:start="499:31" pos:end="499:32">ox</name><index pos:start="499:33" pos:end="499:35">[<expr pos:start="499:34" pos:end="499:34"><literal type="number" pos:start="499:34" pos:end="499:34">1</literal></expr>]</index></name> <operator pos:start="499:37" pos:end="499:37">-</operator> <name pos:start="499:39" pos:end="499:46"><name pos:start="499:39" pos:end="499:39">s</name><operator pos:start="499:40" pos:end="499:41">-&gt;</operator><name pos:start="499:42" pos:end="499:43">ox</name><index pos:start="499:44" pos:end="499:46">[<expr pos:start="499:45" pos:end="499:45"><literal type="number" pos:start="499:45" pos:end="499:45">0</literal></expr>]</index></name><operator pos:start="499:47" pos:end="499:47">)</operator> <operator pos:start="499:49" pos:end="499:49">&amp;</operator> <operator pos:start="499:51" pos:end="499:51">(</operator><name pos:start="499:52" pos:end="499:59"><name pos:start="499:52" pos:end="499:52">s</name><operator pos:start="499:53" pos:end="499:54">-&gt;</operator><name pos:start="499:55" pos:end="499:56">oy</name><index pos:start="499:57" pos:end="499:59">[<expr pos:start="499:58" pos:end="499:58"><literal type="number" pos:start="499:58" pos:end="499:58">1</literal></expr>]</index></name> <operator pos:start="499:61" pos:end="499:61">-</operator> <name pos:start="499:63" pos:end="499:70"><name pos:start="499:63" pos:end="499:63">s</name><operator pos:start="499:64" pos:end="499:65">-&gt;</operator><name pos:start="499:66" pos:end="499:67">oy</name><index pos:start="499:68" pos:end="499:70">[<expr pos:start="499:69" pos:end="499:69"><literal type="number" pos:start="499:69" pos:end="499:69">0</literal></expr>]</index></name><operator pos:start="499:71" pos:end="499:71">)</operator> <operator pos:start="499:73" pos:end="499:73">&amp;</operator> <literal type="number" pos:start="499:75" pos:end="499:75">1</literal><operator pos:start="499:76" pos:end="499:76">)</operator></expr>)</condition><block type="pseudo" pos:start="501:13" pos:end="503:42"><block_content pos:start="501:13" pos:end="503:42">

            <expr_stmt pos:start="501:13" pos:end="503:42"><expr pos:start="501:13" pos:end="503:41"><call pos:start="501:13" pos:end="503:41"><name pos:start="501:13" pos:end="501:19">fprintf</name><argument_list pos:start="501:20" pos:end="503:41">(<argument pos:start="501:21" pos:end="501:26"><expr pos:start="501:21" pos:end="501:26"><name pos:start="501:21" pos:end="501:26">stderr</name></expr></argument>, <argument pos:start="501:29" pos:end="501:73"><expr pos:start="501:29" pos:end="501:73"><literal type="string" pos:start="501:29" pos:end="501:73">"%s: Illegal input/output window positions\n"</literal></expr></argument>,

                            <argument pos:start="503:29" pos:end="503:40"><expr pos:start="503:29" pos:end="503:40"><name pos:start="503:29" pos:end="503:40">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="507:9" pos:end="507:35"><expr pos:start="507:9" pos:end="507:34"><call pos:start="507:9" pos:end="507:34"><name pos:start="507:9" pos:end="507:31">blizzard_transfer_setup</name><argument_list pos:start="507:32" pos:end="507:34">(<argument pos:start="507:33" pos:end="507:33"><expr pos:start="507:33" pos:end="507:33"><name pos:start="507:33" pos:end="507:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="509:9" pos:end="509:14">break;</break>



    <case pos:start="513:5" pos:end="513:14">case <expr pos:start="513:10" pos:end="513:13"><literal type="number" pos:start="513:10" pos:end="513:13">0x90</literal></expr>:</case>	<comment type="block" pos:start="513:17" pos:end="513:46">/* Display Memory Data Port */</comment>

        <if_stmt pos:start="515:9" pos:end="517:18"><if pos:start="515:9" pos:end="517:18">if <condition pos:start="515:12" pos:end="515:56">(<expr pos:start="515:13" pos:end="515:55"><operator pos:start="515:13" pos:end="515:13">!</operator><name pos:start="515:14" pos:end="515:24"><name pos:start="515:14" pos:end="515:14">s</name><operator pos:start="515:15" pos:end="515:16">-&gt;</operator><name pos:start="515:17" pos:end="515:20">data</name><operator pos:start="515:21" pos:end="515:21">.</operator><name pos:start="515:22" pos:end="515:24">len</name></name> <operator pos:start="515:26" pos:end="515:27">&amp;&amp;</operator> <operator pos:start="515:29" pos:end="515:29">!</operator><call pos:start="515:30" pos:end="515:55"><name pos:start="515:30" pos:end="515:52">blizzard_transfer_setup</name><argument_list pos:start="515:53" pos:end="515:55">(<argument pos:start="515:54" pos:end="515:54"><expr pos:start="515:54" pos:end="515:54"><name pos:start="515:54" pos:end="515:54">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="517:13" pos:end="517:18"><block_content pos:start="517:13" pos:end="517:18">

            <break pos:start="517:13" pos:end="517:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="521:9" pos:end="521:32"><expr pos:start="521:9" pos:end="521:31"><operator pos:start="521:9" pos:end="521:9">*</operator><name pos:start="521:10" pos:end="521:20"><name pos:start="521:10" pos:end="521:10">s</name><operator pos:start="521:11" pos:end="521:12">-&gt;</operator><name pos:start="521:13" pos:end="521:16">data</name><operator pos:start="521:17" pos:end="521:17">.</operator><name pos:start="521:18" pos:end="521:20">ptr</name></name> <operator pos:start="521:22" pos:end="521:23">++</operator> <operator pos:start="521:25" pos:end="521:25">=</operator> <name pos:start="521:27" pos:end="521:31">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="523:9" pos:end="525:31"><if pos:start="523:9" pos:end="525:31">if <condition pos:start="523:12" pos:end="523:32">(<expr pos:start="523:13" pos:end="523:31"><operator pos:start="523:13" pos:end="523:14">--</operator> <name pos:start="523:16" pos:end="523:26"><name pos:start="523:16" pos:end="523:16">s</name><operator pos:start="523:17" pos:end="523:18">-&gt;</operator><name pos:start="523:19" pos:end="523:22">data</name><operator pos:start="523:23" pos:end="523:23">.</operator><name pos:start="523:24" pos:end="523:26">len</name></name> <operator pos:start="523:28" pos:end="523:29">==</operator> <literal type="number" pos:start="523:31" pos:end="523:31">0</literal></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:31"><block_content pos:start="525:13" pos:end="525:31">

            <expr_stmt pos:start="525:13" pos:end="525:31"><expr pos:start="525:13" pos:end="525:30"><call pos:start="525:13" pos:end="525:30"><name pos:start="525:13" pos:end="525:27">blizzard_window</name><argument_list pos:start="525:28" pos:end="525:30">(<argument pos:start="525:29" pos:end="525:29"><expr pos:start="525:29" pos:end="525:29"><name pos:start="525:29" pos:end="525:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="527:9" pos:end="527:14">break;</break>



    <case pos:start="531:5" pos:end="531:14">case <expr pos:start="531:10" pos:end="531:13"><literal type="number" pos:start="531:10" pos:end="531:13">0xa8</literal></expr>:</case>	<comment type="block" pos:start="531:17" pos:end="531:36">/* Border Color 0 */</comment>

        <expr_stmt pos:start="533:9" pos:end="533:28"><expr pos:start="533:9" pos:end="533:27"><name pos:start="533:9" pos:end="533:19"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:19">border_r</name></name> <operator pos:start="533:21" pos:end="533:21">=</operator> <name pos:start="533:23" pos:end="533:27">value</name></expr>;</expr_stmt>

        <break pos:start="535:9" pos:end="535:14">break;</break>

    <case pos:start="537:5" pos:end="537:14">case <expr pos:start="537:10" pos:end="537:13"><literal type="number" pos:start="537:10" pos:end="537:13">0xaa</literal></expr>:</case>	<comment type="block" pos:start="537:17" pos:end="537:36">/* Border Color 1 */</comment>

        <expr_stmt pos:start="539:9" pos:end="539:28"><expr pos:start="539:9" pos:end="539:27"><name pos:start="539:9" pos:end="539:19"><name pos:start="539:9" pos:end="539:9">s</name><operator pos:start="539:10" pos:end="539:11">-&gt;</operator><name pos:start="539:12" pos:end="539:19">border_g</name></name> <operator pos:start="539:21" pos:end="539:21">=</operator> <name pos:start="539:23" pos:end="539:27">value</name></expr>;</expr_stmt>

        <break pos:start="541:9" pos:end="541:14">break;</break>

    <case pos:start="543:5" pos:end="543:14">case <expr pos:start="543:10" pos:end="543:13"><literal type="number" pos:start="543:10" pos:end="543:13">0xac</literal></expr>:</case>	<comment type="block" pos:start="543:17" pos:end="543:36">/* Border Color 2 */</comment>

        <expr_stmt pos:start="545:9" pos:end="545:28"><expr pos:start="545:9" pos:end="545:27"><name pos:start="545:9" pos:end="545:19"><name pos:start="545:9" pos:end="545:9">s</name><operator pos:start="545:10" pos:end="545:11">-&gt;</operator><name pos:start="545:12" pos:end="545:19">border_b</name></name> <operator pos:start="545:21" pos:end="545:21">=</operator> <name pos:start="545:23" pos:end="545:27">value</name></expr>;</expr_stmt>

        <break pos:start="547:9" pos:end="547:14">break;</break>



    <case pos:start="551:5" pos:end="551:14">case <expr pos:start="551:10" pos:end="551:13"><literal type="number" pos:start="551:10" pos:end="551:13">0xb4</literal></expr>:</case>	<comment type="block" pos:start="551:17" pos:end="551:45">/* Gamma Correction Enable */</comment>

        <expr_stmt pos:start="553:9" pos:end="553:39"><expr pos:start="553:9" pos:end="553:38"><name pos:start="553:9" pos:end="553:23"><name pos:start="553:9" pos:end="553:9">s</name><operator pos:start="553:10" pos:end="553:11">-&gt;</operator><name pos:start="553:12" pos:end="553:23">gamma_config</name></name> <operator pos:start="553:25" pos:end="553:25">=</operator> <name pos:start="553:27" pos:end="553:31">value</name> <operator pos:start="553:33" pos:end="553:33">&amp;</operator> <literal type="number" pos:start="553:35" pos:end="553:38">0x87</literal></expr>;</expr_stmt>

        <break pos:start="555:9" pos:end="555:14">break;</break>

    <case pos:start="557:5" pos:end="557:14">case <expr pos:start="557:10" pos:end="557:13"><literal type="number" pos:start="557:10" pos:end="557:13">0xb6</literal></expr>:</case>	<comment type="block" pos:start="557:17" pos:end="557:50">/* Gamma Correction Table Index */</comment>

        <expr_stmt pos:start="559:9" pos:end="559:29"><expr pos:start="559:9" pos:end="559:28"><name pos:start="559:9" pos:end="559:20"><name pos:start="559:9" pos:end="559:9">s</name><operator pos:start="559:10" pos:end="559:11">-&gt;</operator><name pos:start="559:12" pos:end="559:20">gamma_idx</name></name> <operator pos:start="559:22" pos:end="559:22">=</operator> <name pos:start="559:24" pos:end="559:28">value</name></expr>;</expr_stmt>

        <break pos:start="561:9" pos:end="561:14">break;</break>

    <case pos:start="563:5" pos:end="563:14">case <expr pos:start="563:10" pos:end="563:13"><literal type="number" pos:start="563:10" pos:end="563:13">0xb8</literal></expr>:</case>	<comment type="block" pos:start="563:17" pos:end="563:49">/* Gamma Correction Table Data */</comment>

        <expr_stmt pos:start="565:9" pos:end="565:46"><expr pos:start="565:9" pos:end="565:45"><name pos:start="565:9" pos:end="565:37"><name pos:start="565:9" pos:end="565:9">s</name><operator pos:start="565:10" pos:end="565:11">-&gt;</operator><name pos:start="565:12" pos:end="565:20">gamma_lut</name><index pos:start="565:21" pos:end="565:37">[<expr pos:start="565:22" pos:end="565:36"><name pos:start="565:22" pos:end="565:33"><name pos:start="565:22" pos:end="565:22">s</name><operator pos:start="565:23" pos:end="565:24">-&gt;</operator><name pos:start="565:25" pos:end="565:33">gamma_idx</name></name> <operator pos:start="565:35" pos:end="565:36">++</operator></expr>]</index></name> <operator pos:start="565:39" pos:end="565:39">=</operator> <name pos:start="565:41" pos:end="565:45">value</name></expr>;</expr_stmt>

        <break pos:start="567:9" pos:end="567:14">break;</break>



    <case pos:start="571:5" pos:end="571:14">case <expr pos:start="571:10" pos:end="571:13"><literal type="number" pos:start="571:10" pos:end="571:13">0xba</literal></expr>:</case>	<comment type="block" pos:start="571:17" pos:end="571:39">/* 3x3 Matrix Enable */</comment>

        <expr_stmt pos:start="573:9" pos:end="573:34"><expr pos:start="573:9" pos:end="573:33"><name pos:start="573:9" pos:end="573:21"><name pos:start="573:9" pos:end="573:9">s</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:21">matrix_ena</name></name> <operator pos:start="573:23" pos:end="573:23">=</operator> <name pos:start="573:25" pos:end="573:29">value</name> <operator pos:start="573:31" pos:end="573:31">&amp;</operator> <literal type="number" pos:start="573:33" pos:end="573:33">1</literal></expr>;</expr_stmt>

        <break pos:start="575:9" pos:end="575:14">break;</break>

    <case pos:start="577:5" pos:end="577:23">case <expr pos:start="577:10" pos:end="577:22"><literal type="number" pos:start="577:10" pos:end="577:13">0xbc</literal> <operator pos:start="577:15" pos:end="577:17">...</operator> <literal type="number" pos:start="577:19" pos:end="577:22">0xde</literal></expr>:</case>	<comment type="block" pos:start="577:25" pos:end="577:51">/* Coefficient Registers */</comment>

        <expr_stmt pos:start="579:9" pos:end="579:79"><expr pos:start="579:9" pos:end="579:78"><name pos:start="579:9" pos:end="579:42"><name pos:start="579:9" pos:end="579:9">s</name><operator pos:start="579:10" pos:end="579:11">-&gt;</operator><name pos:start="579:12" pos:end="579:23">matrix_coeff</name><index pos:start="579:24" pos:end="579:42">[<expr pos:start="579:25" pos:end="579:41"><operator pos:start="579:25" pos:end="579:25">(</operator><name pos:start="579:26" pos:end="579:28">reg</name> <operator pos:start="579:30" pos:end="579:30">-</operator> <literal type="number" pos:start="579:32" pos:end="579:35">0xbc</literal><operator pos:start="579:36" pos:end="579:36">)</operator> <operator pos:start="579:38" pos:end="579:39">&gt;&gt;</operator> <literal type="number" pos:start="579:41" pos:end="579:41">1</literal></expr>]</index></name> <operator pos:start="579:44" pos:end="579:44">=</operator> <name pos:start="579:46" pos:end="579:50">value</name> <operator pos:start="579:52" pos:end="579:52">&amp;</operator> <operator pos:start="579:54" pos:end="579:54">(</operator><ternary pos:start="579:55" pos:end="579:77"><condition pos:start="579:55" pos:end="579:65"><expr pos:start="579:55" pos:end="579:63"><operator pos:start="579:55" pos:end="579:55">(</operator><name pos:start="579:56" pos:end="579:58">reg</name> <operator pos:start="579:60" pos:end="579:60">&amp;</operator> <literal type="number" pos:start="579:62" pos:end="579:62">2</literal><operator pos:start="579:63" pos:end="579:63">)</operator></expr> ?</condition><then pos:start="579:67" pos:end="579:70"> <expr pos:start="579:67" pos:end="579:70"><literal type="number" pos:start="579:67" pos:end="579:70">0x80</literal></expr> </then><else pos:start="579:72" pos:end="579:77">: <expr pos:start="579:74" pos:end="579:77"><literal type="number" pos:start="579:74" pos:end="579:77">0xff</literal></expr></else></ternary><operator pos:start="579:78" pos:end="579:78">)</operator></expr>;</expr_stmt>

        <break pos:start="581:9" pos:end="581:14">break;</break>

    <case pos:start="583:5" pos:end="583:14">case <expr pos:start="583:10" pos:end="583:13"><literal type="number" pos:start="583:10" pos:end="583:13">0xe0</literal></expr>:</case>	<comment type="block" pos:start="583:17" pos:end="583:43">/* 3x3 Matrix Red Offset */</comment>

        <expr_stmt pos:start="585:9" pos:end="585:28"><expr pos:start="585:9" pos:end="585:27"><name pos:start="585:9" pos:end="585:19"><name pos:start="585:9" pos:end="585:9">s</name><operator pos:start="585:10" pos:end="585:11">-&gt;</operator><name pos:start="585:12" pos:end="585:19">matrix_r</name></name> <operator pos:start="585:21" pos:end="585:21">=</operator> <name pos:start="585:23" pos:end="585:27">value</name></expr>;</expr_stmt>

        <break pos:start="587:9" pos:end="587:14">break;</break>

    <case pos:start="589:5" pos:end="589:14">case <expr pos:start="589:10" pos:end="589:13"><literal type="number" pos:start="589:10" pos:end="589:13">0xe2</literal></expr>:</case>	<comment type="block" pos:start="589:17" pos:end="589:45">/* 3x3 Matrix Green Offset */</comment>

        <expr_stmt pos:start="591:9" pos:end="591:28"><expr pos:start="591:9" pos:end="591:27"><name pos:start="591:9" pos:end="591:19"><name pos:start="591:9" pos:end="591:9">s</name><operator pos:start="591:10" pos:end="591:11">-&gt;</operator><name pos:start="591:12" pos:end="591:19">matrix_g</name></name> <operator pos:start="591:21" pos:end="591:21">=</operator> <name pos:start="591:23" pos:end="591:27">value</name></expr>;</expr_stmt>

        <break pos:start="593:9" pos:end="593:14">break;</break>

    <case pos:start="595:5" pos:end="595:14">case <expr pos:start="595:10" pos:end="595:13"><literal type="number" pos:start="595:10" pos:end="595:13">0xe4</literal></expr>:</case>	<comment type="block" pos:start="595:17" pos:end="595:44">/* 3x3 Matrix Blue Offset */</comment>

        <expr_stmt pos:start="597:9" pos:end="597:28"><expr pos:start="597:9" pos:end="597:27"><name pos:start="597:9" pos:end="597:19"><name pos:start="597:9" pos:end="597:9">s</name><operator pos:start="597:10" pos:end="597:11">-&gt;</operator><name pos:start="597:12" pos:end="597:19">matrix_b</name></name> <operator pos:start="597:21" pos:end="597:21">=</operator> <name pos:start="597:23" pos:end="597:27">value</name></expr>;</expr_stmt>

        <break pos:start="599:9" pos:end="599:14">break;</break>



    <case pos:start="603:5" pos:end="603:14">case <expr pos:start="603:10" pos:end="603:13"><literal type="number" pos:start="603:10" pos:end="603:13">0xe6</literal></expr>:</case>	<comment type="block" pos:start="603:17" pos:end="603:32">/* Power-save */</comment>

        <expr_stmt pos:start="605:9" pos:end="605:29"><expr pos:start="605:9" pos:end="605:28"><name pos:start="605:9" pos:end="605:13"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:13">pm</name></name> <operator pos:start="605:15" pos:end="605:15">=</operator> <name pos:start="605:17" pos:end="605:21">value</name> <operator pos:start="605:23" pos:end="605:23">&amp;</operator> <literal type="number" pos:start="605:25" pos:end="605:28">0x83</literal></expr>;</expr_stmt>

        <if_stmt pos:start="607:9" pos:end="611:60"><if pos:start="607:9" pos:end="611:60">if <condition pos:start="607:12" pos:end="607:32">(<expr pos:start="607:13" pos:end="607:31"><name pos:start="607:13" pos:end="607:17">value</name> <operator pos:start="607:19" pos:end="607:19">&amp;</operator> <name pos:start="607:21" pos:end="607:27"><name pos:start="607:21" pos:end="607:21">s</name><operator pos:start="607:22" pos:end="607:23">-&gt;</operator><name pos:start="607:24" pos:end="607:27">mode</name></name> <operator pos:start="607:29" pos:end="607:29">&amp;</operator> <literal type="number" pos:start="607:31" pos:end="607:31">1</literal></expr>)</condition><block type="pseudo" pos:start="609:13" pos:end="611:60"><block_content pos:start="609:13" pos:end="611:60">

            <expr_stmt pos:start="609:13" pos:end="611:60"><expr pos:start="609:13" pos:end="611:59"><call pos:start="609:13" pos:end="611:59"><name pos:start="609:13" pos:end="609:19">fprintf</name><argument_list pos:start="609:20" pos:end="611:59">(<argument pos:start="609:21" pos:end="609:26"><expr pos:start="609:21" pos:end="609:26"><name pos:start="609:21" pos:end="609:26">stderr</name></expr></argument>, <argument pos:start="609:29" pos:end="611:44"><expr pos:start="609:29" pos:end="611:44"><literal type="string" pos:start="609:29" pos:end="609:79">"%s: The display must be disabled before entering "</literal>

                            <literal type="string" pos:start="611:29" pos:end="611:44">"Standby Mode\n"</literal></expr></argument>, <argument pos:start="611:47" pos:end="611:58"><expr pos:start="611:47" pos:end="611:58"><name pos:start="611:47" pos:end="611:58">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="613:9" pos:end="613:14">break;</break>

    <case pos:start="615:5" pos:end="615:14">case <expr pos:start="615:10" pos:end="615:13"><literal type="number" pos:start="615:10" pos:end="615:13">0xe8</literal></expr>:</case>	<comment type="block" pos:start="615:17" pos:end="615:57">/* Non-display Period Control / Status */</comment>

        <expr_stmt pos:start="617:9" pos:end="617:33"><expr pos:start="617:9" pos:end="617:32"><name pos:start="617:9" pos:end="617:17"><name pos:start="617:9" pos:end="617:9">s</name><operator pos:start="617:10" pos:end="617:11">-&gt;</operator><name pos:start="617:12" pos:end="617:17">status</name></name> <operator pos:start="617:19" pos:end="617:19">=</operator> <name pos:start="617:21" pos:end="617:25">value</name> <operator pos:start="617:27" pos:end="617:27">&amp;</operator> <literal type="number" pos:start="617:29" pos:end="617:32">0x1b</literal></expr>;</expr_stmt>

        <break pos:start="619:9" pos:end="619:14">break;</break>

    <case pos:start="621:5" pos:end="621:14">case <expr pos:start="621:10" pos:end="621:13"><literal type="number" pos:start="621:10" pos:end="621:13">0xea</literal></expr>:</case>	<comment type="block" pos:start="621:17" pos:end="621:43">/* RGB Interface Control */</comment>

        <expr_stmt pos:start="623:9" pos:end="623:38"><expr pos:start="623:9" pos:end="623:37"><name pos:start="623:9" pos:end="623:22"><name pos:start="623:9" pos:end="623:9">s</name><operator pos:start="623:10" pos:end="623:11">-&gt;</operator><name pos:start="623:12" pos:end="623:22">rgbgpio_dir</name></name> <operator pos:start="623:24" pos:end="623:24">=</operator> <name pos:start="623:26" pos:end="623:30">value</name> <operator pos:start="623:32" pos:end="623:32">&amp;</operator> <literal type="number" pos:start="623:34" pos:end="623:37">0x8f</literal></expr>;</expr_stmt>

        <break pos:start="625:9" pos:end="625:14">break;</break>

    <case pos:start="627:5" pos:end="627:14">case <expr pos:start="627:10" pos:end="627:13"><literal type="number" pos:start="627:10" pos:end="627:13">0xec</literal></expr>:</case>	<comment type="block" pos:start="627:17" pos:end="627:42">/* RGB Interface Status */</comment>

        <expr_stmt pos:start="629:9" pos:end="629:34"><expr pos:start="629:9" pos:end="629:33"><name pos:start="629:9" pos:end="629:18"><name pos:start="629:9" pos:end="629:9">s</name><operator pos:start="629:10" pos:end="629:11">-&gt;</operator><name pos:start="629:12" pos:end="629:18">rgbgpio</name></name> <operator pos:start="629:20" pos:end="629:20">=</operator> <name pos:start="629:22" pos:end="629:26">value</name> <operator pos:start="629:28" pos:end="629:28">&amp;</operator> <literal type="number" pos:start="629:30" pos:end="629:33">0xcf</literal></expr>;</expr_stmt>

        <break pos:start="631:9" pos:end="631:14">break;</break>

    <case pos:start="633:5" pos:end="633:14">case <expr pos:start="633:10" pos:end="633:13"><literal type="number" pos:start="633:10" pos:end="633:13">0xee</literal></expr>:</case>	<comment type="block" pos:start="633:17" pos:end="633:59">/* General-purpose IO Pins Configuration */</comment>

        <expr_stmt pos:start="635:9" pos:end="635:28"><expr pos:start="635:9" pos:end="635:27"><name pos:start="635:9" pos:end="635:19"><name pos:start="635:9" pos:end="635:9">s</name><operator pos:start="635:10" pos:end="635:11">-&gt;</operator><name pos:start="635:12" pos:end="635:19">gpio_dir</name></name> <operator pos:start="635:21" pos:end="635:21">=</operator> <name pos:start="635:23" pos:end="635:27">value</name></expr>;</expr_stmt>

        <break pos:start="637:9" pos:end="637:14">break;</break>

    <case pos:start="639:5" pos:end="639:14">case <expr pos:start="639:10" pos:end="639:13"><literal type="number" pos:start="639:10" pos:end="639:13">0xf0</literal></expr>:</case>	<comment type="block" pos:start="639:17" pos:end="639:62">/* General-purpose IO Pins Status / Control */</comment>

        <expr_stmt pos:start="641:9" pos:end="641:24"><expr pos:start="641:9" pos:end="641:23"><name pos:start="641:9" pos:end="641:15"><name pos:start="641:9" pos:end="641:9">s</name><operator pos:start="641:10" pos:end="641:11">-&gt;</operator><name pos:start="641:12" pos:end="641:15">gpio</name></name> <operator pos:start="641:17" pos:end="641:17">=</operator> <name pos:start="641:19" pos:end="641:23">value</name></expr>;</expr_stmt>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:14">case <expr pos:start="645:10" pos:end="645:13"><literal type="number" pos:start="645:10" pos:end="645:13">0xf2</literal></expr>:</case>	<comment type="block" pos:start="645:17" pos:end="645:58">/* GPIO Positive Edge Interrupt Trigger */</comment>

        <expr_stmt pos:start="647:9" pos:end="647:32"><expr pos:start="647:9" pos:end="647:31"><name pos:start="647:9" pos:end="647:23"><name pos:start="647:9" pos:end="647:9">s</name><operator pos:start="647:10" pos:end="647:11">-&gt;</operator><name pos:start="647:12" pos:end="647:20">gpio_edge</name><index pos:start="647:21" pos:end="647:23">[<expr pos:start="647:22" pos:end="647:22"><literal type="number" pos:start="647:22" pos:end="647:22">0</literal></expr>]</index></name> <operator pos:start="647:25" pos:end="647:25">=</operator> <name pos:start="647:27" pos:end="647:31">value</name></expr>;</expr_stmt>

        <break pos:start="649:9" pos:end="649:14">break;</break>

    <case pos:start="651:5" pos:end="651:14">case <expr pos:start="651:10" pos:end="651:13"><literal type="number" pos:start="651:10" pos:end="651:13">0xf4</literal></expr>:</case>	<comment type="block" pos:start="651:17" pos:end="651:58">/* GPIO Negative Edge Interrupt Trigger */</comment>

        <expr_stmt pos:start="653:9" pos:end="653:32"><expr pos:start="653:9" pos:end="653:31"><name pos:start="653:9" pos:end="653:23"><name pos:start="653:9" pos:end="653:9">s</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:20">gpio_edge</name><index pos:start="653:21" pos:end="653:23">[<expr pos:start="653:22" pos:end="653:22"><literal type="number" pos:start="653:22" pos:end="653:22">1</literal></expr>]</index></name> <operator pos:start="653:25" pos:end="653:25">=</operator> <name pos:start="653:27" pos:end="653:31">value</name></expr>;</expr_stmt>

        <break pos:start="655:9" pos:end="655:14">break;</break>

    <case pos:start="657:5" pos:end="657:14">case <expr pos:start="657:10" pos:end="657:13"><literal type="number" pos:start="657:10" pos:end="657:13">0xf6</literal></expr>:</case>	<comment type="block" pos:start="657:17" pos:end="657:43">/* GPIO Interrupt Status */</comment>

        <expr_stmt pos:start="659:9" pos:end="659:29"><expr pos:start="659:9" pos:end="659:28"><name pos:start="659:9" pos:end="659:19"><name pos:start="659:9" pos:end="659:9">s</name><operator pos:start="659:10" pos:end="659:11">-&gt;</operator><name pos:start="659:12" pos:end="659:19">gpio_irq</name></name> <operator pos:start="659:21" pos:end="659:22">&amp;=</operator> <name pos:start="659:24" pos:end="659:28">value</name></expr>;</expr_stmt>

        <break pos:start="661:9" pos:end="661:14">break;</break>

    <case pos:start="663:5" pos:end="663:14">case <expr pos:start="663:10" pos:end="663:13"><literal type="number" pos:start="663:10" pos:end="663:13">0xf8</literal></expr>:</case>	<comment type="block" pos:start="663:17" pos:end="663:44">/* GPIO Pull-down Control */</comment>

        <expr_stmt pos:start="665:9" pos:end="665:30"><expr pos:start="665:9" pos:end="665:29"><name pos:start="665:9" pos:end="665:21"><name pos:start="665:9" pos:end="665:9">s</name><operator pos:start="665:10" pos:end="665:11">-&gt;</operator><name pos:start="665:12" pos:end="665:21">gpio_pdown</name></name> <operator pos:start="665:23" pos:end="665:23">=</operator> <name pos:start="665:25" pos:end="665:29">value</name></expr>;</expr_stmt>

        <break pos:start="667:9" pos:end="667:14">break;</break>



    <default pos:start="671:5" pos:end="671:12">default:</default>

        <expr_stmt pos:start="673:9" pos:end="673:74"><expr pos:start="673:9" pos:end="673:73"><call pos:start="673:9" pos:end="673:73"><name pos:start="673:9" pos:end="673:15">fprintf</name><argument_list pos:start="673:16" pos:end="673:73">(<argument pos:start="673:17" pos:end="673:22"><expr pos:start="673:17" pos:end="673:22"><name pos:start="673:17" pos:end="673:22">stderr</name></expr></argument>, <argument pos:start="673:25" pos:end="673:53"><expr pos:start="673:25" pos:end="673:53"><literal type="string" pos:start="673:25" pos:end="673:53">"%s: unknown register %02x\n"</literal></expr></argument>, <argument pos:start="673:56" pos:end="673:67"><expr pos:start="673:56" pos:end="673:67"><name pos:start="673:56" pos:end="673:67">__FUNCTION__</name></expr></argument>, <argument pos:start="673:70" pos:end="673:72"><expr pos:start="673:70" pos:end="673:72"><name pos:start="673:70" pos:end="673:72">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="675:9" pos:end="675:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
