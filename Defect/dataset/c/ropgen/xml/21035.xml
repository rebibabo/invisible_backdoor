<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21035.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:14"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">vdadec_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="52:14">{<block_content pos:start="3:5" pos:end="52:14">
    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:21">VDADecoderContext</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:26">ctx</name> <init pos:start="3:28" pos:end="3:45">= <expr pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:34">avctx</name><operator pos:start="3:35" pos:end="3:36">-&gt;</operator><name pos:start="3:37" pos:end="3:45">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:48"><decl pos:start="4:5" pos:end="4:47"><type pos:start="4:5" pos:end="4:24"><name pos:start="4:5" pos:end="4:22"><name pos:start="4:5" pos:end="4:10">struct</name> <name pos:start="4:12" pos:end="4:22">vda_context</name></name> <modifier pos:start="4:24" pos:end="4:24">*</modifier></type><name pos:start="4:25" pos:end="4:31">vda_ctx</name> <init pos:start="4:33" pos:end="4:47">= <expr pos:start="4:35" pos:end="4:47"><operator pos:start="4:35" pos:end="4:35">&amp;</operator><name pos:start="4:36" pos:end="4:47"><name pos:start="4:36" pos:end="4:38">ctx</name><operator pos:start="4:39" pos:end="4:40">-&gt;</operator><name pos:start="4:41" pos:end="4:47">vda_ctx</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">OSStatus</name></type> <name pos:start="5:14" pos:end="5:19">status</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:7">ctx</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:25">h264_initialized</name></name> <operator pos:start="7:27" pos:end="7:27">=</operator> <literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:32">/* init pix_fmts of codec */</comment>
    <if_stmt pos:start="9:5" pos:end="52:14"><if pos:start="9:5" pos:end="52:14">if <condition pos:start="9:8" pos:end="9:38">(<expr pos:start="9:9" pos:end="9:37"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:37"><name pos:start="9:10" pos:end="9:28">ff_h264_vda_decoder</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:37">pix_fmts</name></name></expr>)</condition> <block pos:start="9:40" pos:end="52:14">{<block_content pos:start="10:9" pos:end="52:14">
        <if_stmt pos:start="10:9" pos:end="13:55"><if pos:start="10:9" pos:end="11:66">if <condition pos:start="10:12" pos:end="10:80">(<expr pos:start="10:13" pos:end="10:79"><name pos:start="10:13" pos:end="10:42">kCFCoreFoundationVersionNumber</name> <operator pos:start="10:44" pos:end="10:44">&lt;</operator> <name pos:start="10:46" pos:end="10:79">kCFCoreFoundationVersionNumber10_7</name></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:66"><block_content pos:start="11:13" pos:end="11:66">
            <expr_stmt pos:start="11:13" pos:end="11:66"><expr pos:start="11:13" pos:end="11:65"><name pos:start="11:13" pos:end="11:40"><name pos:start="11:13" pos:end="11:31">ff_h264_vda_decoder</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:40">pix_fmts</name></name> <operator pos:start="11:42" pos:end="11:42">=</operator> <name pos:start="11:44" pos:end="11:65">vda_pixfmts_prior_10_7</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="12:9" pos:end="13:55">else<block type="pseudo" pos:start="13:13" pos:end="13:55"><block_content pos:start="13:13" pos:end="13:55">
            <expr_stmt pos:start="13:13" pos:end="13:55"><expr pos:start="13:13" pos:end="13:54"><name pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:31">ff_h264_vda_decoder</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:40">pix_fmts</name></name> <operator pos:start="13:42" pos:end="13:42">=</operator> <name pos:start="13:44" pos:end="13:54">vda_pixfmts</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="block" pos:start="14:5" pos:end="14:18">/* init vda */</comment>
    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:50">(<argument pos:start="15:12" pos:end="15:18"><expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:18">vda_ctx</name></expr></argument>, <argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></argument>, <argument pos:start="15:24" pos:end="15:49"><expr pos:start="15:24" pos:end="15:49"><sizeof pos:start="15:24" pos:end="15:49">sizeof<argument_list pos:start="15:30" pos:end="15:49">(<argument pos:start="15:31" pos:end="15:48"><expr pos:start="15:31" pos:end="15:48">struct <name pos:start="15:38" pos:end="15:48">vda_context</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:34"><expr pos:start="16:5" pos:end="16:33"><name pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:11">vda_ctx</name><operator pos:start="16:12" pos:end="16:13">-&gt;</operator><name pos:start="16:14" pos:end="16:18">width</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <name pos:start="16:22" pos:end="16:33"><name pos:start="16:22" pos:end="16:26">avctx</name><operator pos:start="16:27" pos:end="16:28">-&gt;</operator><name pos:start="16:29" pos:end="16:33">width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:11">vda_ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">height</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:27">avctx</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:35">height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:29"><expr pos:start="18:5" pos:end="18:28"><name pos:start="18:5" pos:end="18:19"><name pos:start="18:5" pos:end="18:11">vda_ctx</name><operator pos:start="18:12" pos:end="18:13">-&gt;</operator><name pos:start="18:14" pos:end="18:19">format</name></name> <operator pos:start="18:21" pos:end="18:21">=</operator> <literal type="char" pos:start="18:23" pos:end="18:28">'avc1'</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:11">vda_ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:30">use_sync_decoding</name></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:32"><expr pos:start="20:5" pos:end="20:31"><name pos:start="20:5" pos:end="20:27"><name pos:start="20:5" pos:end="20:11">vda_ctx</name><operator pos:start="20:12" pos:end="20:13">-&gt;</operator><name pos:start="20:14" pos:end="20:27">use_ref_buffer</name></name> <operator pos:start="20:29" pos:end="20:29">=</operator> <literal type="number" pos:start="20:31" pos:end="20:31">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:16">pix_fmt</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:67"><name pos:start="21:20" pos:end="21:36"><name pos:start="21:20" pos:end="21:24">avctx</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">get_format</name></name><argument_list pos:start="21:37" pos:end="21:67">(<argument pos:start="21:38" pos:end="21:42"><expr pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:42">avctx</name></expr></argument>, <argument pos:start="21:45" pos:end="21:66"><expr pos:start="21:45" pos:end="21:66"><name pos:start="21:45" pos:end="21:66"><name pos:start="21:45" pos:end="21:49">avctx</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:56">codec</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:66">pix_fmts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <switch pos:start="22:5" pos:end="52:14">switch <condition pos:start="22:12" pos:end="22:25">(<expr pos:start="22:13" pos:end="22:24"><name pos:start="22:13" pos:end="22:24"><name pos:start="22:13" pos:end="22:15">ctx</name><operator pos:start="22:16" pos:end="22:17">-&gt;</operator><name pos:start="22:18" pos:end="22:24">pix_fmt</name></name></expr>)</condition> <block pos:start="22:27" pos:end="52:14">{<block_content pos:start="23:5" pos:end="52:14">
    <case pos:start="23:5" pos:end="23:28">case <expr pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:27">AV_PIX_FMT_UYVY422</name></expr>:</case>
        <expr_stmt pos:start="24:9" pos:end="24:42"><expr pos:start="24:9" pos:end="24:41"><name pos:start="24:9" pos:end="24:32"><name pos:start="24:9" pos:end="24:15">vda_ctx</name><operator pos:start="24:16" pos:end="24:17">-&gt;</operator><name pos:start="24:18" pos:end="24:32">cv_pix_fmt_type</name></name> <operator pos:start="24:34" pos:end="24:34">=</operator> <literal type="char" pos:start="24:36" pos:end="24:41">'2vuy'</literal></expr>;</expr_stmt>
        <break pos:start="25:9" pos:end="25:14">break;</break>
    <case pos:start="26:5" pos:end="26:28">case <expr pos:start="26:10" pos:end="26:27"><name pos:start="26:10" pos:end="26:27">AV_PIX_FMT_YUYV422</name></expr>:</case>
        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:15">vda_ctx</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:32">cv_pix_fmt_type</name></name> <operator pos:start="27:34" pos:end="27:34">=</operator> <literal type="char" pos:start="27:36" pos:end="27:41">'yuvs'</literal></expr>;</expr_stmt>
        <break pos:start="28:9" pos:end="28:14">break;</break>
    <case pos:start="29:5" pos:end="29:25">case <expr pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:24">AV_PIX_FMT_NV12</name></expr>:</case>
        <expr_stmt pos:start="30:9" pos:end="30:42"><expr pos:start="30:9" pos:end="30:41"><name pos:start="30:9" pos:end="30:32"><name pos:start="30:9" pos:end="30:15">vda_ctx</name><operator pos:start="30:16" pos:end="30:17">-&gt;</operator><name pos:start="30:18" pos:end="30:32">cv_pix_fmt_type</name></name> <operator pos:start="30:34" pos:end="30:34">=</operator> <literal type="char" pos:start="30:36" pos:end="30:41">'420v'</literal></expr>;</expr_stmt>
        <break pos:start="31:9" pos:end="31:14">break;</break>
    <case pos:start="32:5" pos:end="32:28">case <expr pos:start="32:10" pos:end="32:27"><name pos:start="32:10" pos:end="32:27">AV_PIX_FMT_YUV420P</name></expr>:</case>
        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:15">vda_ctx</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:32">cv_pix_fmt_type</name></name> <operator pos:start="33:34" pos:end="33:34">=</operator> <literal type="char" pos:start="33:36" pos:end="33:41">'y420'</literal></expr>;</expr_stmt>
        <break pos:start="34:9" pos:end="34:14">break;</break>
    <default pos:start="35:5" pos:end="35:12">default:</default>
        <expr_stmt pos:start="36:9" pos:end="36:86"><expr pos:start="36:9" pos:end="36:85"><call pos:start="36:9" pos:end="36:85"><name pos:start="36:9" pos:end="36:14">av_log</name><argument_list pos:start="36:15" pos:end="36:85">(<argument pos:start="36:16" pos:end="36:20"><expr pos:start="36:16" pos:end="36:20"><name pos:start="36:16" pos:end="36:20">avctx</name></expr></argument>, <argument pos:start="36:23" pos:end="36:34"><expr pos:start="36:23" pos:end="36:34"><name pos:start="36:23" pos:end="36:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="36:37" pos:end="36:68"><expr pos:start="36:37" pos:end="36:68"><literal type="string" pos:start="36:37" pos:end="36:68">"Unsupported pixel format: %d\n"</literal></expr></argument>, <argument pos:start="36:71" pos:end="36:84"><expr pos:start="36:71" pos:end="36:84"><name pos:start="36:71" pos:end="36:84"><name pos:start="36:71" pos:end="36:75">avctx</name><operator pos:start="36:76" pos:end="36:77">-&gt;</operator><name pos:start="36:78" pos:end="36:84">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="38:76"><expr pos:start="37:5" pos:end="38:75"><name pos:start="37:5" pos:end="37:10">status</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="38:75"><name pos:start="37:14" pos:end="37:34">ff_vda_create_decoder</name><argument_list pos:start="37:35" pos:end="38:75">(<argument pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><name pos:start="37:36" pos:end="37:42">vda_ctx</name></expr></argument>,
                                   <argument pos:start="38:36" pos:end="38:51"><expr pos:start="38:36" pos:end="38:51"><name pos:start="38:36" pos:end="38:51"><name pos:start="38:36" pos:end="38:40">avctx</name><operator pos:start="38:41" pos:end="38:42">-&gt;</operator><name pos:start="38:43" pos:end="38:51">extradata</name></name></expr></argument>, <argument pos:start="38:54" pos:end="38:74"><expr pos:start="38:54" pos:end="38:74"><name pos:start="38:54" pos:end="38:74"><name pos:start="38:54" pos:end="38:58">avctx</name><operator pos:start="38:59" pos:end="38:60">-&gt;</operator><name pos:start="38:61" pos:end="38:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="39:5" pos:end="52:14"><if pos:start="39:5" pos:end="52:14">if <condition pos:start="39:8" pos:end="39:35">(<expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:14">status</name> <operator pos:start="39:16" pos:end="39:17">!=</operator> <name pos:start="39:19" pos:end="39:34">kVDADecoderNoErr</name></expr>)</condition> <block pos:start="39:37" pos:end="52:14">{<block_content pos:start="40:9" pos:end="52:14">
        <expr_stmt pos:start="40:9" pos:end="41:61"><expr pos:start="40:9" pos:end="41:60"><call pos:start="40:9" pos:end="41:60"><name pos:start="40:9" pos:end="40:14">av_log</name><argument_list pos:start="40:15" pos:end="41:60">(<argument pos:start="40:16" pos:end="40:20"><expr pos:start="40:16" pos:end="40:20"><name pos:start="40:16" pos:end="40:20">avctx</name></expr></argument>, <argument pos:start="40:23" pos:end="40:34"><expr pos:start="40:23" pos:end="40:34"><name pos:start="40:23" pos:end="40:34">AV_LOG_ERROR</name></expr></argument>,
                <argument pos:start="41:17" pos:end="41:51"><expr pos:start="41:17" pos:end="41:51"><literal type="string" pos:start="41:17" pos:end="41:51">"Failed to init VDA decoder: %d.\n"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:59"><expr pos:start="41:54" pos:end="41:59"><name pos:start="41:54" pos:end="41:59">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="42:5" pos:end="42:28">/* init H.264 decoder */</comment>
    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><call pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:15">set_context</name><argument_list pos:start="43:16" pos:end="43:22">(<argument pos:start="43:17" pos:end="43:21"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:38"><expr pos:start="44:5" pos:end="44:37"><name pos:start="44:5" pos:end="44:7">ret</name> <operator pos:start="44:9" pos:end="44:9">=</operator> <call pos:start="44:11" pos:end="44:37"><name pos:start="44:11" pos:end="44:30"><name pos:start="44:11" pos:end="44:25">ff_h264_decoder</name><operator pos:start="44:26" pos:end="44:26">.</operator><name pos:start="44:27" pos:end="44:30">init</name></name><argument_list pos:start="44:31" pos:end="44:37">(<argument pos:start="44:32" pos:end="44:36"><expr pos:start="44:32" pos:end="44:36"><name pos:start="44:32" pos:end="44:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:19">restore_context</name><argument_list pos:start="45:20" pos:end="45:26">(<argument pos:start="45:21" pos:end="45:25"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:25">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="46:5" pos:end="52:14"><if pos:start="46:5" pos:end="52:14">if <condition pos:start="46:8" pos:end="46:16">(<expr pos:start="46:9" pos:end="46:15"><name pos:start="46:9" pos:end="46:11">ret</name> <operator pos:start="46:13" pos:end="46:13">&lt;</operator> <literal type="number" pos:start="46:15" pos:end="46:15">0</literal></expr>)</condition> <block pos:start="46:18" pos:end="52:14">{<block_content pos:start="47:9" pos:end="52:14">
        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:70">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:69"><expr pos:start="47:37" pos:end="47:69"><literal type="string" pos:start="47:37" pos:end="47:69">"Failed to open H.264 decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:30"><expr pos:start="48:5" pos:end="48:29"><name pos:start="48:5" pos:end="48:25"><name pos:start="48:5" pos:end="48:7">ctx</name><operator pos:start="48:8" pos:end="48:9">-&gt;</operator><name pos:start="48:10" pos:end="48:25">h264_initialized</name></name> <operator pos:start="48:27" pos:end="48:27">=</operator> <literal type="number" pos:start="48:29" pos:end="48:29">1</literal></expr>;</expr_stmt>
    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>
<label pos:start="50:1" pos:end="50:7"><name pos:start="50:1" pos:end="50:6">failed</name>:</label>
    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><call pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:16">vdadec_close</name><argument_list pos:start="51:17" pos:end="51:23">(<argument pos:start="51:18" pos:end="51:22"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:22">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="52:5" pos:end="52:14">return <expr pos:start="52:12" pos:end="52:13"><operator pos:start="52:12" pos:end="52:12">-</operator><literal type="number" pos:start="52:13" pos:end="52:13">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></function></unit>
