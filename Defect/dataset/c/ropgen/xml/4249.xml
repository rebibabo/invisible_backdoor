<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4249.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">init_output_stream_streamcopy</name><parameter_list pos:start="1:41" pos:end="1:59">(<parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:53">OutputStream</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OutputFile</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">of</name> <init pos:start="5:20" pos:end="5:50">= <expr pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:50"><name pos:start="5:22" pos:end="5:33">output_files</name><index pos:start="5:34" pos:end="5:50">[<expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:37">ost</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:49">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">InputStream</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">ist</name> <init pos:start="7:22" pos:end="7:44">= <expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">get_input_stream</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">ost</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVCodecParameters</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:30">par_dst</name> <init pos:start="9:32" pos:end="9:50">= <expr pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:36">ost</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:40">st</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:50">codecpar</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVCodecParameters</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:30">par_src</name> <init pos:start="11:32" pos:end="11:45">= <expr pos:start="11:34" pos:end="11:45"><name pos:start="11:34" pos:end="11:45"><name pos:start="11:34" pos:end="11:36">ost</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:45">ref_par</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:18">sar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:22">codec_tag</name> <init pos:start="17:24" pos:end="17:43">= <expr pos:start="17:26" pos:end="17:43"><name pos:start="17:26" pos:end="17:43"><name pos:start="17:26" pos:end="17:32">par_dst</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">codec_tag</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:14">av_assert0</name><argument_list pos:start="21:15" pos:end="21:35">(<argument pos:start="21:16" pos:end="21:34"><expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:18">ist</name> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">!</operator><name pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:26">ost</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:67"><expr pos:start="25:5" pos:end="25:66"><call pos:start="25:5" pos:end="25:66"><name pos:start="25:5" pos:end="25:33">avcodec_parameters_to_context</name><argument_list pos:start="25:34" pos:end="25:66">(<argument pos:start="25:35" pos:end="25:46"><expr pos:start="25:35" pos:end="25:46"><name pos:start="25:35" pos:end="25:46"><name pos:start="25:35" pos:end="25:37">ost</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:46">enc_ctx</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:65"><expr pos:start="25:49" pos:end="25:65"><name pos:start="25:49" pos:end="25:65"><name pos:start="25:49" pos:end="25:51">ist</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:55">st</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:65">codecpar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:59"><name pos:start="27:11" pos:end="27:25">av_opt_set_dict</name><argument_list pos:start="27:26" pos:end="27:59">(<argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:29">ost</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:38">enc_ctx</name></name></expr></argument>, <argument pos:start="27:41" pos:end="27:58"><expr pos:start="27:41" pos:end="27:58"><operator pos:start="27:41" pos:end="27:41">&amp;</operator><name pos:start="27:42" pos:end="27:58"><name pos:start="27:42" pos:end="27:44">ost</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:58">encoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition> <block pos:start="29:18" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:19">

        <expr_stmt pos:start="31:9" pos:end="33:60"><expr pos:start="31:9" pos:end="33:59"><call pos:start="31:9" pos:end="33:59"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:59">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr></argument>, <argument pos:start="31:22" pos:end="31:33"><expr pos:start="31:22" pos:end="31:33"><name pos:start="31:22" pos:end="31:33">AV_LOG_FATAL</name></expr></argument>,

               <argument pos:start="33:16" pos:end="33:58"><expr pos:start="33:16" pos:end="33:58"><literal type="string" pos:start="33:16" pos:end="33:58">"Error setting up codec context options.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:35">avcodec_parameters_from_context</name><argument_list pos:start="39:36" pos:end="39:58">(<argument pos:start="39:37" pos:end="39:43"><expr pos:start="39:37" pos:end="39:43"><name pos:start="39:37" pos:end="39:43">par_src</name></expr></argument>, <argument pos:start="39:46" pos:end="39:57"><expr pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:48">ost</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:57">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:18">codec_tag</name></expr>)</condition> <block pos:start="43:21" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:43">

        <decl_stmt pos:start="45:9" pos:end="45:35"><decl pos:start="45:9" pos:end="45:34"><type pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">unsigned</name> <name pos:start="45:18" pos:end="45:20">int</name></type> <name pos:start="45:22" pos:end="45:34">codec_tag_tmp</name></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="53:43"><if pos:start="47:9" pos:end="53:43">if <condition pos:start="47:12" pos:end="51:95">(<expr pos:start="47:13" pos:end="51:94"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:40"><name pos:start="47:14" pos:end="47:15">of</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:20">ctx</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:29">oformat</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:40">codec_tag</name></name> <operator pos:start="47:42" pos:end="47:43">||</operator>

            <call pos:start="49:13" pos:end="49:77"><name pos:start="49:13" pos:end="49:27">av_codec_get_id</name> <argument_list pos:start="49:29" pos:end="49:77">(<argument pos:start="49:30" pos:end="49:56"><expr pos:start="49:30" pos:end="49:56"><name pos:start="49:30" pos:end="49:56"><name pos:start="49:30" pos:end="49:31">of</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:36">ctx</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:45">oformat</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:56">codec_tag</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:76"><expr pos:start="49:59" pos:end="49:76"><name pos:start="49:59" pos:end="49:76"><name pos:start="49:59" pos:end="49:65">par_src</name><operator pos:start="49:66" pos:end="49:67">-&gt;</operator><name pos:start="49:68" pos:end="49:76">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:79" pos:end="49:80">==</operator> <name pos:start="49:82" pos:end="49:98"><name pos:start="49:82" pos:end="49:88">par_src</name><operator pos:start="49:89" pos:end="49:90">-&gt;</operator><name pos:start="49:91" pos:end="49:98">codec_id</name></name> <operator pos:start="49:100" pos:end="49:101">||</operator>

            <operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:94"><name pos:start="51:14" pos:end="51:30">av_codec_get_tag2</name><argument_list pos:start="51:31" pos:end="51:94">(<argument pos:start="51:32" pos:end="51:58"><expr pos:start="51:32" pos:end="51:58"><name pos:start="51:32" pos:end="51:58"><name pos:start="51:32" pos:end="51:33">of</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:38">ctx</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:47">oformat</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:58">codec_tag</name></name></expr></argument>, <argument pos:start="51:61" pos:end="51:77"><expr pos:start="51:61" pos:end="51:77"><name pos:start="51:61" pos:end="51:77"><name pos:start="51:61" pos:end="51:67">par_src</name><operator pos:start="51:68" pos:end="51:69">-&gt;</operator><name pos:start="51:70" pos:end="51:77">codec_id</name></name></expr></argument>, <argument pos:start="51:80" pos:end="51:93"><expr pos:start="51:80" pos:end="51:93"><operator pos:start="51:80" pos:end="51:80">&amp;</operator><name pos:start="51:81" pos:end="51:93">codec_tag_tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:43"><block_content pos:start="53:13" pos:end="53:43">

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><name pos:start="53:13" pos:end="53:21">codec_tag</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:42"><name pos:start="53:25" pos:end="53:31">par_src</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:42">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:52"><expr pos:start="59:5" pos:end="59:51"><name pos:start="59:5" pos:end="59:7">ret</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:51"><name pos:start="59:11" pos:end="59:33">avcodec_parameters_copy</name><argument_list pos:start="59:34" pos:end="59:51">(<argument pos:start="59:35" pos:end="59:41"><expr pos:start="59:35" pos:end="59:41"><name pos:start="59:35" pos:end="59:41">par_dst</name></expr></argument>, <argument pos:start="59:44" pos:end="59:50"><expr pos:start="59:44" pos:end="59:50"><name pos:start="59:44" pos:end="59:50">par_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">&lt;</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:11">par_dst</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:22">codec_tag</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:34">codec_tag</name></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="73:41"><if pos:start="71:5" pos:end="73:41">if <condition pos:start="71:8" pos:end="71:29">(<expr pos:start="71:9" pos:end="71:28"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:28"><name pos:start="71:10" pos:end="71:12">ost</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:24">frame_rate</name><operator pos:start="71:25" pos:end="71:25">.</operator><name pos:start="71:26" pos:end="71:28">num</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:41"><block_content pos:start="73:9" pos:end="73:41">

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:11">ost</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:23">frame_rate</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:29">ist</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:40">framerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:46"><expr pos:start="75:5" pos:end="75:45"><name pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:7">ost</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:11">st</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:27">avg_frame_rate</name></name> <operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:33">ost</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:45">frame_rate</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:101"><expr pos:start="79:5" pos:end="79:100"><name pos:start="79:5" pos:end="79:7">ret</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="79:100"><name pos:start="79:11" pos:end="79:55">avformat_transfer_internal_stream_timing_info</name><argument_list pos:start="79:56" pos:end="79:100">(<argument pos:start="79:57" pos:end="79:72"><expr pos:start="79:57" pos:end="79:72"><name pos:start="79:57" pos:end="79:72"><name pos:start="79:57" pos:end="79:58">of</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:63">ctx</name><operator pos:start="79:64" pos:end="79:65">-&gt;</operator><name pos:start="79:66" pos:end="79:72">oformat</name></name></expr></argument>, <argument pos:start="79:75" pos:end="79:81"><expr pos:start="79:75" pos:end="79:81"><name pos:start="79:75" pos:end="79:81"><name pos:start="79:75" pos:end="79:77">ost</name><operator pos:start="79:78" pos:end="79:79">-&gt;</operator><name pos:start="79:80" pos:end="79:81">st</name></name></expr></argument>, <argument pos:start="79:84" pos:end="79:90"><expr pos:start="79:84" pos:end="79:90"><name pos:start="79:84" pos:end="79:90"><name pos:start="79:84" pos:end="79:86">ist</name><operator pos:start="79:87" pos:end="79:88">-&gt;</operator><name pos:start="79:89" pos:end="79:90">st</name></name></expr></argument>, <argument pos:start="79:93" pos:end="79:99"><expr pos:start="79:93" pos:end="79:99"><name pos:start="79:93" pos:end="79:99">copy_tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:19"><if pos:start="81:5" pos:end="83:19">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:19"><block_content pos:start="83:9" pos:end="83:19">

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="87:5" pos:end="87:50">// copy timebase while removing common factors</comment>

    <expr_stmt pos:start="89:5" pos:end="89:93"><expr pos:start="89:5" pos:end="89:92"><name pos:start="89:5" pos:end="89:22"><name pos:start="89:5" pos:end="89:7">ost</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:11">st</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:22">time_base</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <macro pos:start="89:26" pos:end="89:92"><name pos:start="89:26" pos:end="89:33">av_add_q</name><argument_list pos:start="89:34" pos:end="89:92">(<argument pos:start="89:35" pos:end="89:71">av_stream_get_codec_timebase(ost-&gt;st)</argument>, <argument pos:start="89:74" pos:end="89:87">(AVRational){<literal type="number" pos:start="89:87" pos:end="89:87">0</literal></argument>, <argument pos:start="89:90" pos:end="89:91"><literal type="number" pos:start="89:90" pos:end="89:90">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>



    <comment type="line" pos:start="93:5" pos:end="93:23">// copy disposition</comment>

    <expr_stmt pos:start="95:5" pos:end="95:48"><expr pos:start="95:5" pos:end="95:47"><name pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:7">ost</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:11">st</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:24">disposition</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:47"><name pos:start="95:28" pos:end="95:30">ist</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:34">st</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:47">disposition</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="143:5"><if pos:start="99:5" pos:end="143:5">if <condition pos:start="99:8" pos:end="99:30">(<expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:11">ist</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:15">st</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:29">nb_side_data</name></name></expr>)</condition> <block pos:start="99:32" pos:end="143:5">{<block_content pos:start="101:9" pos:end="141:9">

        <expr_stmt pos:start="101:9" pos:end="103:75"><expr pos:start="101:9" pos:end="103:74"><name pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:11">ost</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:15">st</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:26">side_data</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="103:74"><name pos:start="101:30" pos:end="101:45">av_realloc_array</name><argument_list pos:start="101:46" pos:end="103:74">(<argument pos:start="101:47" pos:end="101:50"><expr pos:start="101:47" pos:end="101:50"><name pos:start="101:47" pos:end="101:50">NULL</name></expr></argument>, <argument pos:start="101:53" pos:end="101:73"><expr pos:start="101:53" pos:end="101:73"><name pos:start="101:53" pos:end="101:73"><name pos:start="101:53" pos:end="101:55">ist</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:59">st</name><operator pos:start="101:60" pos:end="101:61">-&gt;</operator><name pos:start="101:62" pos:end="101:73">nb_side_data</name></name></expr></argument>,

                                              <argument pos:start="103:47" pos:end="103:73"><expr pos:start="103:47" pos:end="103:73"><sizeof pos:start="103:47" pos:end="103:73">sizeof<argument_list pos:start="103:53" pos:end="103:73">(<argument pos:start="103:54" pos:end="103:72"><expr pos:start="103:54" pos:end="103:72"><operator pos:start="103:54" pos:end="103:54">*</operator><name pos:start="103:55" pos:end="103:72"><name pos:start="103:55" pos:end="103:57">ist</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:61">st</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:72">side_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="107:35"><if pos:start="105:9" pos:end="107:35">if <condition pos:start="105:12" pos:end="105:32">(<expr pos:start="105:13" pos:end="105:31"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:31"><name pos:start="105:14" pos:end="105:16">ost</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:20">st</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:31">side_data</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:35"><block_content pos:start="107:13" pos:end="107:35">

            <return pos:start="107:13" pos:end="107:35">return <expr pos:start="107:20" pos:end="107:34"><call pos:start="107:20" pos:end="107:34"><name pos:start="107:20" pos:end="107:26">AVERROR</name><argument_list pos:start="107:27" pos:end="107:34">(<argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:34"><expr pos:start="111:9" pos:end="111:33"><name pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">ost</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:15">st</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:29">nb_side_data</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>;</expr_stmt>

        <for pos:start="113:9" pos:end="141:9">for <control pos:start="113:13" pos:end="113:51">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">i</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:46"><expr pos:start="113:21" pos:end="113:45"><name pos:start="113:21" pos:end="113:21">i</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <name pos:start="113:25" pos:end="113:45"><name pos:start="113:25" pos:end="113:27">ist</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:31">st</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:45">nb_side_data</name></name></expr>;</condition> <incr pos:start="113:48" pos:end="113:50"><expr pos:start="113:48" pos:end="113:50"><name pos:start="113:48" pos:end="113:48">i</name><operator pos:start="113:49" pos:end="113:50">++</operator></expr></incr>)</control> <block pos:start="113:53" pos:end="141:9">{<block_content pos:start="115:13" pos:end="139:36">

            <decl_stmt pos:start="115:13" pos:end="115:68"><decl pos:start="115:13" pos:end="115:67"><type pos:start="115:13" pos:end="115:36"><specifier pos:start="115:13" pos:end="115:17">const</specifier> <name pos:start="115:19" pos:end="115:34">AVPacketSideData</name> <modifier pos:start="115:36" pos:end="115:36">*</modifier></type><name pos:start="115:37" pos:end="115:42">sd_src</name> <init pos:start="115:44" pos:end="115:67">= <expr pos:start="115:46" pos:end="115:67"><operator pos:start="115:46" pos:end="115:46">&amp;</operator><name pos:start="115:47" pos:end="115:67"><name pos:start="115:47" pos:end="115:49">ist</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:53">st</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:64">side_data</name><index pos:start="115:65" pos:end="115:67">[<expr pos:start="115:66" pos:end="115:66"><name pos:start="115:66" pos:end="115:66">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="117:13" pos:end="117:82"><decl pos:start="117:13" pos:end="117:81"><type pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:28">AVPacketSideData</name> <modifier pos:start="117:30" pos:end="117:30">*</modifier></type><name pos:start="117:31" pos:end="117:36">sd_dst</name> <init pos:start="117:38" pos:end="117:81">= <expr pos:start="117:40" pos:end="117:81"><operator pos:start="117:40" pos:end="117:40">&amp;</operator><name pos:start="117:41" pos:end="117:81"><name pos:start="117:41" pos:end="117:43">ost</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:47">st</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:58">side_data</name><index pos:start="117:59" pos:end="117:81">[<expr pos:start="117:60" pos:end="117:80"><name pos:start="117:60" pos:end="117:80"><name pos:start="117:60" pos:end="117:62">ost</name><operator pos:start="117:63" pos:end="117:64">-&gt;</operator><name pos:start="117:65" pos:end="117:66">st</name><operator pos:start="117:67" pos:end="117:68">-&gt;</operator><name pos:start="117:69" pos:end="117:80">nb_side_data</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="121:13" pos:end="123:25"><if pos:start="121:13" pos:end="123:25">if <condition pos:start="121:16" pos:end="121:84">(<expr pos:start="121:17" pos:end="121:83"><name pos:start="121:17" pos:end="121:38"><name pos:start="121:17" pos:end="121:19">ost</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:38">rotate_overridden</name></name> <operator pos:start="121:40" pos:end="121:41">&amp;&amp;</operator> <name pos:start="121:43" pos:end="121:54"><name pos:start="121:43" pos:end="121:48">sd_src</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:54">type</name></name> <operator pos:start="121:56" pos:end="121:57">==</operator> <name pos:start="121:59" pos:end="121:83">AV_PKT_DATA_DISPLAYMATRIX</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:25"><block_content pos:start="123:17" pos:end="123:25">

                <continue pos:start="123:17" pos:end="123:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:51"><expr pos:start="127:13" pos:end="127:50"><name pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:18">sd_dst</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:24">data</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <call pos:start="127:28" pos:end="127:50"><name pos:start="127:28" pos:end="127:36">av_malloc</name><argument_list pos:start="127:37" pos:end="127:50">(<argument pos:start="127:38" pos:end="127:49"><expr pos:start="127:38" pos:end="127:49"><name pos:start="127:38" pos:end="127:49"><name pos:start="127:38" pos:end="127:43">sd_src</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="131:39"><if pos:start="129:13" pos:end="131:39">if <condition pos:start="129:16" pos:end="129:30">(<expr pos:start="129:17" pos:end="129:29"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:29"><name pos:start="129:18" pos:end="129:23">sd_dst</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:29">data</name></name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:39"><block_content pos:start="131:17" pos:end="131:39">

                <return pos:start="131:17" pos:end="131:39">return <expr pos:start="131:24" pos:end="131:38"><call pos:start="131:24" pos:end="131:38"><name pos:start="131:24" pos:end="131:30">AVERROR</name><argument_list pos:start="131:31" pos:end="131:38">(<argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><name pos:start="131:32" pos:end="131:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:61"><expr pos:start="133:13" pos:end="133:60"><call pos:start="133:13" pos:end="133:60"><name pos:start="133:13" pos:end="133:18">memcpy</name><argument_list pos:start="133:19" pos:end="133:60">(<argument pos:start="133:20" pos:end="133:31"><expr pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:25">sd_dst</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:31">data</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:45"><expr pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:45"><name pos:start="133:34" pos:end="133:39">sd_src</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:45">data</name></name></expr></argument>, <argument pos:start="133:48" pos:end="133:59"><expr pos:start="133:48" pos:end="133:59"><name pos:start="133:48" pos:end="133:59"><name pos:start="133:48" pos:end="133:53">sd_src</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:59">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:40"><expr pos:start="135:13" pos:end="135:39"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:18">sd_dst</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:24">size</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:39"><name pos:start="135:28" pos:end="135:33">sd_src</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:39">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:40"><expr pos:start="137:13" pos:end="137:39"><name pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:18">sd_dst</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:24">type</name></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:39"><name pos:start="137:28" pos:end="137:33">sd_src</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:39">type</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:36"><expr pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:15">ost</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:19">st</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:33">nb_side_data</name></name><operator pos:start="139:34" pos:end="139:35">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:52"><expr pos:start="147:5" pos:end="147:51"><name pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:7">ost</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:15">parser</name></name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:51"><name pos:start="147:19" pos:end="147:32">av_parser_init</name><argument_list pos:start="147:33" pos:end="147:51">(<argument pos:start="147:34" pos:end="147:50"><expr pos:start="147:34" pos:end="147:50"><name pos:start="147:34" pos:end="147:50"><name pos:start="147:34" pos:end="147:40">par_dst</name><operator pos:start="147:41" pos:end="147:42">-&gt;</operator><name pos:start="147:43" pos:end="147:50">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:53"><expr pos:start="149:5" pos:end="149:52"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:7">ost</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:21">parser_avctx</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <call pos:start="149:25" pos:end="149:52"><name pos:start="149:25" pos:end="149:46">avcodec_alloc_context3</name><argument_list pos:start="149:47" pos:end="149:52">(<argument pos:start="149:48" pos:end="149:51"><expr pos:start="149:48" pos:end="149:51"><name pos:start="149:48" pos:end="149:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:31"><if pos:start="151:5" pos:end="153:31">if <condition pos:start="151:8" pos:end="151:27">(<expr pos:start="151:9" pos:end="151:26"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:26"><name pos:start="151:10" pos:end="151:12">ost</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:26">parser_avctx</name></name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:31"><block_content pos:start="153:9" pos:end="153:31">

        <return pos:start="153:9" pos:end="153:31">return <expr pos:start="153:16" pos:end="153:30"><call pos:start="153:16" pos:end="153:30"><name pos:start="153:16" pos:end="153:22">AVERROR</name><argument_list pos:start="153:23" pos:end="153:30">(<argument pos:start="153:24" pos:end="153:29"><expr pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="157:5" pos:end="211:5">switch <condition pos:start="157:12" pos:end="157:32">(<expr pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:19">par_dst</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:31">codec_type</name></name></expr>)</condition> <block pos:start="157:34" pos:end="211:5">{<block_content pos:start="159:5" pos:end="209:14">

    <case pos:start="159:5" pos:end="159:28">case <expr pos:start="159:10" pos:end="159:27"><name pos:start="159:10" pos:end="159:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="161:32">(<expr pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:24">audio_volume</name> <operator pos:start="161:26" pos:end="161:27">!=</operator> <literal type="number" pos:start="161:29" pos:end="161:31">256</literal></expr>)</condition> <block pos:start="161:34" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:28">

            <expr_stmt pos:start="163:13" pos:end="163:108"><expr pos:start="163:13" pos:end="163:107"><call pos:start="163:13" pos:end="163:107"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="163:107">(<argument pos:start="163:20" pos:end="163:23"><expr pos:start="163:20" pos:end="163:23"><name pos:start="163:20" pos:end="163:23">NULL</name></expr></argument>, <argument pos:start="163:26" pos:end="163:37"><expr pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="163:40" pos:end="163:106"><expr pos:start="163:40" pos:end="163:106"><literal type="string" pos:start="163:40" pos:end="163:106">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:28"><expr pos:start="165:13" pos:end="165:27"><call pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:24">exit_program</name><argument_list pos:start="165:25" pos:end="165:27">(<argument pos:start="165:26" pos:end="165:26"><expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="171:36"><if pos:start="169:9" pos:end="171:36">if<condition pos:start="169:11" pos:end="169:142">(<expr pos:start="169:12" pos:end="169:141"><operator pos:start="169:12" pos:end="169:12">(</operator><name pos:start="169:13" pos:end="169:32"><name pos:start="169:13" pos:end="169:19">par_dst</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:32">block_align</name></name> <operator pos:start="169:34" pos:end="169:35">==</operator> <literal type="number" pos:start="169:37" pos:end="169:37">1</literal> <operator pos:start="169:39" pos:end="169:40">||</operator> <name pos:start="169:42" pos:end="169:61"><name pos:start="169:42" pos:end="169:48">par_dst</name><operator pos:start="169:49" pos:end="169:50">-&gt;</operator><name pos:start="169:51" pos:end="169:61">block_align</name></name> <operator pos:start="169:63" pos:end="169:64">==</operator> <literal type="number" pos:start="169:66" pos:end="169:69">1152</literal> <operator pos:start="169:71" pos:end="169:72">||</operator> <name pos:start="169:74" pos:end="169:93"><name pos:start="169:74" pos:end="169:80">par_dst</name><operator pos:start="169:81" pos:end="169:82">-&gt;</operator><name pos:start="169:83" pos:end="169:93">block_align</name></name> <operator pos:start="169:95" pos:end="169:96">==</operator> <literal type="number" pos:start="169:98" pos:end="169:100">576</literal><operator pos:start="169:101" pos:end="169:101">)</operator> <operator pos:start="169:103" pos:end="169:104">&amp;&amp;</operator> <name pos:start="169:106" pos:end="169:122"><name pos:start="169:106" pos:end="169:112">par_dst</name><operator pos:start="169:113" pos:end="169:114">-&gt;</operator><name pos:start="169:115" pos:end="169:122">codec_id</name></name> <operator pos:start="169:124" pos:end="169:125">==</operator> <name pos:start="169:127" pos:end="169:141">AV_CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:36"><block_content pos:start="171:13" pos:end="171:36">

            <expr_stmt pos:start="171:13" pos:end="171:36"><expr pos:start="171:13" pos:end="171:35"><name pos:start="171:13" pos:end="171:32"><name pos:start="171:13" pos:end="171:19">par_dst</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:32">block_align</name></name><operator pos:start="171:33" pos:end="171:33">=</operator> <literal type="number" pos:start="171:35" pos:end="171:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="175:36"><if pos:start="173:9" pos:end="175:36">if<condition pos:start="173:11" pos:end="173:48">(<expr pos:start="173:12" pos:end="173:47"><name pos:start="173:12" pos:end="173:28"><name pos:start="173:12" pos:end="173:18">par_dst</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:28">codec_id</name></name> <operator pos:start="173:30" pos:end="173:31">==</operator> <name pos:start="173:33" pos:end="173:47">AV_CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:36"><block_content pos:start="175:13" pos:end="175:36">

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:19">par_dst</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:32">block_align</name></name><operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:28">case <expr pos:start="179:10" pos:end="179:27"><name pos:start="179:10" pos:end="179:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <if_stmt pos:start="181:9" pos:end="201:47"><if pos:start="181:9" pos:end="193:13">if <condition pos:start="181:12" pos:end="181:40">(<expr pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:15">ost</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:35">frame_aspect_ratio</name><operator pos:start="181:36" pos:end="181:36">.</operator><name pos:start="181:37" pos:end="181:39">num</name></name></expr>)</condition> <block pos:start="181:42" pos:end="193:13">{<block_content pos:start="183:13" pos:end="191:67"> <comment type="line" pos:start="181:44" pos:end="181:82">// overridden by the -aspect cli option</comment>

            <expr_stmt pos:start="183:13" pos:end="187:74"><expr pos:start="183:13" pos:end="187:73"><name pos:start="183:13" pos:end="183:15">sar</name> <operator pos:start="183:17" pos:end="183:17">=</operator>

                <macro pos:start="185:17" pos:end="187:73"><name pos:start="185:17" pos:end="185:24">av_mul_q</name><argument_list pos:start="185:25" pos:end="187:73">(<argument pos:start="185:26" pos:end="185:48">ost-&gt;frame_aspect_ratio</argument>,

                         <argument pos:start="187:26" pos:end="187:54">(AVRational){ par_dst-&gt;height</argument>, <argument pos:start="187:57" pos:end="187:72">par_dst-&gt;width }</argument>)</argument_list></macro></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="191:67"><expr pos:start="189:13" pos:end="191:66"><call pos:start="189:13" pos:end="191:66"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="191:66">(<argument pos:start="189:20" pos:end="189:23"><expr pos:start="189:20" pos:end="189:23"><name pos:start="189:20" pos:end="189:23">NULL</name></expr></argument>, <argument pos:start="189:26" pos:end="189:39"><expr pos:start="189:26" pos:end="189:39"><name pos:start="189:26" pos:end="189:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="189:42" pos:end="191:65"><expr pos:start="189:42" pos:end="191:65"><literal type="string" pos:start="189:42" pos:end="189:67">"Overriding aspect ratio "</literal>

                   <literal type="string" pos:start="191:20" pos:end="191:65">"with stream copy may produce invalid files\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

        <if type="elseif" pos:start="195:9" pos:end="197:47">else if <condition pos:start="195:17" pos:end="195:50">(<expr pos:start="195:18" pos:end="195:49"><name pos:start="195:18" pos:end="195:49"><name pos:start="195:18" pos:end="195:20">ist</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:24">st</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:45">sample_aspect_ratio</name><operator pos:start="195:46" pos:end="195:46">.</operator><name pos:start="195:47" pos:end="195:49">num</name></name></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:47"><block_content pos:start="197:13" pos:end="197:47">

            <expr_stmt pos:start="197:13" pos:end="197:47"><expr pos:start="197:13" pos:end="197:46"><name pos:start="197:13" pos:end="197:15">sar</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <name pos:start="197:19" pos:end="197:46"><name pos:start="197:19" pos:end="197:21">ist</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:25">st</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:46">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="199:9" pos:end="201:47">else<block type="pseudo" pos:start="201:13" pos:end="201:47"><block_content pos:start="201:13" pos:end="201:47">

            <expr_stmt pos:start="201:13" pos:end="201:47"><expr pos:start="201:13" pos:end="201:46"><name pos:start="201:13" pos:end="201:15">sar</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <name pos:start="201:19" pos:end="201:46"><name pos:start="201:19" pos:end="201:25">par_src</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:46">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:74"><expr pos:start="203:9" pos:end="203:73"><name pos:start="203:9" pos:end="203:36"><name pos:start="203:9" pos:end="203:11">ost</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:15">st</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:36">sample_aspect_ratio</name></name> <operator pos:start="203:38" pos:end="203:38">=</operator> <name pos:start="203:40" pos:end="203:67"><name pos:start="203:40" pos:end="203:46">par_dst</name><operator pos:start="203:47" pos:end="203:48">-&gt;</operator><name pos:start="203:49" pos:end="203:67">sample_aspect_ratio</name></name> <operator pos:start="203:69" pos:end="203:69">=</operator> <name pos:start="203:71" pos:end="203:73">sar</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:58"><expr pos:start="205:9" pos:end="205:57"><name pos:start="205:9" pos:end="205:31"><name pos:start="205:9" pos:end="205:11">ost</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:15">st</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:31">avg_frame_rate</name></name> <operator pos:start="205:33" pos:end="205:33">=</operator> <name pos:start="205:35" pos:end="205:57"><name pos:start="205:35" pos:end="205:37">ist</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:41">st</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:57">avg_frame_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:54"><expr pos:start="207:9" pos:end="207:53"><name pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:11">ost</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:15">st</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:29">r_frame_rate</name></name> <operator pos:start="207:31" pos:end="207:31">=</operator> <name pos:start="207:33" pos:end="207:53"><name pos:start="207:33" pos:end="207:35">ist</name><operator pos:start="207:36" pos:end="207:37">-&gt;</operator><name pos:start="207:38" pos:end="207:39">st</name><operator pos:start="207:40" pos:end="207:41">-&gt;</operator><name pos:start="207:42" pos:end="207:53">r_frame_rate</name></name></expr>;</expr_stmt>

        <break pos:start="209:9" pos:end="209:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
