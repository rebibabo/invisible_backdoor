<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27041.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_audio_rechunk_interleave</name><parameter_list pos:start="1:32" pos:end="5:85">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">out</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:80"><decl pos:start="1:68" pos:end="1:80"><type pos:start="1:68" pos:end="1:80"><name pos:start="1:68" pos:end="1:75">AVPacket</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">pkt</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:91"><decl pos:start="1:83" pos:end="1:91"><type pos:start="1:83" pos:end="1:91"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:91">flush</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:89"><function_decl pos:start="3:25" pos:end="3:89"><type pos:start="3:25" pos:end="3:27"><name pos:start="3:25" pos:end="3:27">int</name></type> (<modifier pos:start="3:30" pos:end="3:30">*</modifier><name pos:start="3:31" pos:end="3:40">get_packet</name>)<parameter_list pos:start="3:42" pos:end="3:89">(<parameter pos:start="3:43" pos:end="3:59"><decl pos:start="3:43" pos:end="3:59"><type pos:start="3:43" pos:end="3:59"><name pos:start="3:43" pos:end="3:57">AVFormatContext</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type></decl></parameter>, <parameter pos:start="3:62" pos:end="3:71"><decl pos:start="3:62" pos:end="3:71"><type pos:start="3:62" pos:end="3:71"><name pos:start="3:62" pos:end="3:69">AVPacket</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type></decl></parameter>, <parameter pos:start="3:74" pos:end="3:83"><decl pos:start="3:74" pos:end="3:83"><type pos:start="3:74" pos:end="3:83"><name pos:start="3:74" pos:end="3:81">AVPacket</name> <modifier pos:start="3:83" pos:end="3:83">*</modifier></type></decl></parameter>, <parameter pos:start="3:86" pos:end="3:88"><decl pos:start="3:86" pos:end="3:88"><type pos:start="3:86" pos:end="3:88"><name pos:start="3:86" pos:end="3:88">int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:84"><function_decl pos:start="5:25" pos:end="5:84"><type pos:start="5:25" pos:end="5:27"><name pos:start="5:25" pos:end="5:27">int</name></type> (<modifier pos:start="5:30" pos:end="5:30">*</modifier><name pos:start="5:31" pos:end="5:40">compare_ts</name>)<parameter_list pos:start="5:42" pos:end="5:84">(<parameter pos:start="5:43" pos:end="5:59"><decl pos:start="5:43" pos:end="5:59"><type pos:start="5:43" pos:end="5:59"><name pos:start="5:43" pos:end="5:57">AVFormatContext</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type></decl></parameter>, <parameter pos:start="5:62" pos:end="5:71"><decl pos:start="5:62" pos:end="5:71"><type pos:start="5:62" pos:end="5:71"><name pos:start="5:62" pos:end="5:69">AVPacket</name> <modifier pos:start="5:71" pos:end="5:71">*</modifier></type></decl></parameter>, <parameter pos:start="5:74" pos:end="5:83"><decl pos:start="5:74" pos:end="5:83"><type pos:start="5:74" pos:end="5:83"><name pos:start="5:74" pos:end="5:81">AVPacket</name> <modifier pos:start="5:83" pos:end="5:83">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="73:1">{<block_content pos:start="9:5" pos:end="71:43">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="49:5"><if pos:start="13:5" pos:end="49:5">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">pkt</name></expr>)</condition> <block pos:start="13:14" pos:end="49:5">{<block_content pos:start="15:9" pos:end="47:19">

        <decl_stmt pos:start="15:9" pos:end="15:53"><decl pos:start="15:9" pos:end="15:52"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:16">AVStream</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:20">st</name> <init pos:start="15:22" pos:end="15:52">= <expr pos:start="15:24" pos:end="15:52"><name pos:start="15:24" pos:end="15:52"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:33">streams</name><index pos:start="15:34" pos:end="15:52">[<expr pos:start="15:35" pos:end="15:51"><name pos:start="15:35" pos:end="15:51"><name pos:start="15:35" pos:end="15:37">pkt</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:51">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:52"><decl pos:start="17:9" pos:end="17:51"><type pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:30">AudioInterleaveContext</name> <modifier pos:start="17:32" pos:end="17:32">*</modifier></type><name pos:start="17:33" pos:end="17:35">aic</name> <init pos:start="17:37" pos:end="17:51">= <expr pos:start="17:39" pos:end="17:51"><name pos:start="17:39" pos:end="17:51"><name pos:start="17:39" pos:end="17:40">st</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="45:9"><if pos:start="19:9" pos:end="35:9">if <condition pos:start="19:12" pos:end="19:56">(<expr pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:14">st</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">codec</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">codec_type</name></name> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="19:58" pos:end="35:9">{<block_content pos:start="21:13" pos:end="33:73">

            <decl_stmt pos:start="21:13" pos:end="21:68"><decl pos:start="21:13" pos:end="21:67"><type pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:20">unsigned</name></type> <name pos:start="21:22" pos:end="21:29">new_size</name> <init pos:start="21:31" pos:end="21:67">= <expr pos:start="21:33" pos:end="21:67"><call pos:start="21:33" pos:end="21:55"><name pos:start="21:33" pos:end="21:44">av_fifo_size</name><argument_list pos:start="21:45" pos:end="21:55">(<argument pos:start="21:46" pos:end="21:54"><expr pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:48">aic</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:54">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:57">+</operator> <name pos:start="21:59" pos:end="21:67"><name pos:start="21:59" pos:end="21:61">pkt</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:67">size</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="23:13" pos:end="31:13"><if pos:start="23:13" pos:end="31:13">if <condition pos:start="23:16" pos:end="23:42">(<expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:24">new_size</name> <operator pos:start="23:26" pos:end="23:26">&gt;</operator> <name pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:30">aic</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:41">fifo_size</name></name></expr>)</condition> <block pos:start="23:44" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:42">

                <if_stmt pos:start="25:17" pos:end="27:30"><if pos:start="25:17" pos:end="27:30">if <condition pos:start="25:20" pos:end="25:62">(<expr pos:start="25:21" pos:end="25:61"><call pos:start="25:21" pos:end="25:57"><name pos:start="25:21" pos:end="25:36">av_fifo_realloc2</name><argument_list pos:start="25:37" pos:end="25:57">(<argument pos:start="25:38" pos:end="25:46"><expr pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:40">aic</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:46">fifo</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:56"><expr pos:start="25:49" pos:end="25:56"><name pos:start="25:49" pos:end="25:56">new_size</name></expr></argument>)</argument_list></call> <operator pos:start="25:59" pos:end="25:59">&lt;</operator> <literal type="number" pos:start="25:61" pos:end="25:61">0</literal></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:30"><block_content pos:start="27:21" pos:end="27:30">

                    <return pos:start="27:21" pos:end="27:30">return <expr pos:start="27:28" pos:end="27:29"><operator pos:start="27:28" pos:end="27:28">-</operator><literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:42"><expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:19">aic</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:30">fifo_size</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <name pos:start="29:34" pos:end="29:41">new_size</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:73"><expr pos:start="33:13" pos:end="33:72"><call pos:start="33:13" pos:end="33:72"><name pos:start="33:13" pos:end="33:33">av_fifo_generic_write</name><argument_list pos:start="33:34" pos:end="33:72">(<argument pos:start="33:35" pos:end="33:43"><expr pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:37">aic</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">fifo</name></name></expr></argument>, <argument pos:start="33:46" pos:end="33:54"><expr pos:start="33:46" pos:end="33:54"><name pos:start="33:46" pos:end="33:54"><name pos:start="33:46" pos:end="33:48">pkt</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:54">data</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:65"><expr pos:start="33:57" pos:end="33:65"><name pos:start="33:57" pos:end="33:65"><name pos:start="33:57" pos:end="33:59">pkt</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:65">size</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:71"><expr pos:start="33:68" pos:end="33:71"><name pos:start="33:68" pos:end="33:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="45:9">else <block pos:start="35:16" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:57">

            <comment type="line" pos:start="37:13" pos:end="37:67">// rewrite pts and dts to be decoded time line position</comment>

            <expr_stmt pos:start="39:13" pos:end="39:43"><expr pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:15">pkt</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">pts</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:26">pkt</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:31">dts</name></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <name pos:start="39:35" pos:end="39:42"><name pos:start="39:35" pos:end="39:37">aic</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">dts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">aic</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:20">dts</name></name> <operator pos:start="41:22" pos:end="41:23">+=</operator> <name pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:27">pkt</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:37">duration</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:57"><expr pos:start="43:13" pos:end="43:56"><call pos:start="43:13" pos:end="43:56"><name pos:start="43:13" pos:end="43:36">ff_interleave_add_packet</name><argument_list pos:start="43:37" pos:end="43:56">(<argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">s</name></expr></argument>, <argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:43">pkt</name></expr></argument>, <argument pos:start="43:46" pos:end="43:55"><expr pos:start="43:46" pos:end="43:55"><name pos:start="43:46" pos:end="43:55">compare_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">pkt</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="53:5" pos:end="67:5">for <control pos:start="53:9" pos:end="53:39">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:33"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:33">nb_streams</name></name></expr>;</condition> <incr pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:36">i</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></incr>)</control> <block pos:start="53:41" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:9">

        <decl_stmt pos:start="55:9" pos:end="55:37"><decl pos:start="55:9" pos:end="55:36"><type pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:16">AVStream</name> <modifier pos:start="55:18" pos:end="55:18">*</modifier></type><name pos:start="55:19" pos:end="55:20">st</name> <init pos:start="55:22" pos:end="55:36">= <expr pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:33">streams</name><index pos:start="55:34" pos:end="55:36">[<expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:56">(<expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:14">st</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:21">codec</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:33">codec_type</name></name> <operator pos:start="57:35" pos:end="57:36">==</operator> <name pos:start="57:38" pos:end="57:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="57:58" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:66">

            <decl_stmt pos:start="59:13" pos:end="59:29"><decl pos:start="59:13" pos:end="59:28"><type pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20">AVPacket</name></type> <name pos:start="59:22" pos:end="59:28">new_pkt</name></decl>;</decl_stmt>

            <while pos:start="61:13" pos:end="63:66">while <condition pos:start="61:19" pos:end="61:70">(<expr pos:start="61:20" pos:end="61:69"><call pos:start="61:20" pos:end="61:69"><name pos:start="61:20" pos:end="61:46">interleave_new_audio_packet</name><argument_list pos:start="61:47" pos:end="61:69">(<argument pos:start="61:48" pos:end="61:48"><expr pos:start="61:48" pos:end="61:48"><name pos:start="61:48" pos:end="61:48">s</name></expr></argument>, <argument pos:start="61:51" pos:end="61:58"><expr pos:start="61:51" pos:end="61:58"><operator pos:start="61:51" pos:end="61:51">&amp;</operator><name pos:start="61:52" pos:end="61:58">new_pkt</name></expr></argument>, <argument pos:start="61:61" pos:end="61:61"><expr pos:start="61:61" pos:end="61:61"><name pos:start="61:61" pos:end="61:61">i</name></expr></argument>, <argument pos:start="61:64" pos:end="61:68"><expr pos:start="61:64" pos:end="61:68"><name pos:start="61:64" pos:end="61:68">flush</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:66"><block_content pos:start="63:17" pos:end="63:66">

                <expr_stmt pos:start="63:17" pos:end="63:66"><expr pos:start="63:17" pos:end="63:65"><call pos:start="63:17" pos:end="63:65"><name pos:start="63:17" pos:end="63:40">ff_interleave_add_packet</name><argument_list pos:start="63:41" pos:end="63:65">(<argument pos:start="63:42" pos:end="63:42"><expr pos:start="63:42" pos:end="63:42"><name pos:start="63:42" pos:end="63:42">s</name></expr></argument>, <argument pos:start="63:45" pos:end="63:52"><expr pos:start="63:45" pos:end="63:52"><operator pos:start="63:45" pos:end="63:45">&amp;</operator><name pos:start="63:46" pos:end="63:52">new_pkt</name></expr></argument>, <argument pos:start="63:55" pos:end="63:64"><expr pos:start="63:55" pos:end="63:64"><name pos:start="63:55" pos:end="63:64">compare_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="71:5" pos:end="71:43">return <expr pos:start="71:12" pos:end="71:42"><call pos:start="71:12" pos:end="71:42"><name pos:start="71:12" pos:end="71:21">get_packet</name><argument_list pos:start="71:22" pos:end="71:42">(<argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">s</name></expr></argument>, <argument pos:start="71:26" pos:end="71:28"><expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">out</name></expr></argument>, <argument pos:start="71:31" pos:end="71:34"><expr pos:start="71:31" pos:end="71:34"><name pos:start="71:31" pos:end="71:34">NULL</name></expr></argument>, <argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:41">flush</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
