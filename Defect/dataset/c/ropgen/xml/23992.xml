<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23992.c" pos:tabs="8"><function pos:start="1:1" pos:end="412:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ffm2_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="412:15">{<block_content pos:start="5:5" pos:end="412:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FFMContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ffm</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:29"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:27">AVCodecDescriptor</name> <modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:39">codec_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>, <decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">f_main</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>, <decl pos:start="17:21" pos:end="17:31"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:26">f_cprv</name> <init pos:start="17:28" pos:end="17:31">= <expr pos:start="17:30" pos:end="17:31"><operator pos:start="17:30" pos:end="17:30">-</operator><literal type="number" pos:start="17:31" pos:end="17:31">1</literal></expr></init></decl>, <decl pos:start="17:34" pos:end="17:44"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:34" pos:end="17:39">f_stvi</name> <init pos:start="17:41" pos:end="17:44">= <expr pos:start="17:43" pos:end="17:44"><operator pos:start="17:43" pos:end="17:43">-</operator><literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></init></decl>, <decl pos:start="17:47" pos:end="17:57"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:47" pos:end="17:52">f_stau</name> <init pos:start="17:54" pos:end="17:57">= <expr pos:start="17:56" pos:end="17:57"><operator pos:start="17:56" pos:end="17:56">-</operator><literal type="number" pos:start="17:57" pos:end="17:57">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">AVCodec</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:16">buffer</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">ffm</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:20">packet_size</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:32">avio_rb32</name><argument_list pos:start="25:33" pos:end="25:36">(<argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="412:15"><if pos:start="27:5" pos:end="412:15">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:11">ffm</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:24">packet_size</name></name> <operator pos:start="27:26" pos:end="27:27">!=</operator> <name pos:start="27:29" pos:end="27:43">FFM_PACKET_SIZE</name></expr>)</condition> <block pos:start="27:46" pos:end="412:15">{<block_content pos:start="29:9" pos:end="412:15">

        <expr_stmt pos:start="29:9" pos:end="31:50"><expr pos:start="29:9" pos:end="31:49"><call pos:start="29:9" pos:end="31:49"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="31:49">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:30"><expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:33" pos:end="29:80"><expr pos:start="29:33" pos:end="29:80"><literal type="string" pos:start="29:33" pos:end="29:80">"Invalid packet size %d, expected size was %d\n"</literal></expr></argument>,

               <argument pos:start="31:16" pos:end="31:31"><expr pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:18">ffm</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:31">packet_size</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:48"><expr pos:start="31:34" pos:end="31:48"><name pos:start="31:34" pos:end="31:48">FFM_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>





    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:7">ffm</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:20">write_index</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:32">avio_rb64</name><argument_list pos:start="39:33" pos:end="39:36">(<argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><name pos:start="39:34" pos:end="39:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="41:5" pos:end="41:27">/* get also filesize */</comment>

    <if_stmt pos:start="43:5" pos:end="412:15"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">pb</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">seekable</name></name></expr>)</condition> <block pos:start="43:23" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:34">

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:11">ffm</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">file_size</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:34">avio_size</name><argument_list pos:start="45:35" pos:end="45:38">(<argument pos:start="45:36" pos:end="45:37"><expr pos:start="45:36" pos:end="45:37"><name pos:start="45:36" pos:end="45:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:34"><if pos:start="47:9" pos:end="49:34">if <condition pos:start="47:12" pos:end="47:34">(<expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:15">ffm</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:28">write_index</name></name> <operator pos:start="47:30" pos:end="47:31">&amp;&amp;</operator> <literal type="number" pos:start="47:33" pos:end="47:33">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:34"><block_content pos:start="49:13" pos:end="49:34">

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><call pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:30">adjust_write_index</name><argument_list pos:start="49:31" pos:end="49:33">(<argument pos:start="49:32" pos:end="49:32"><expr pos:start="49:32" pos:end="49:32"><name pos:start="49:32" pos:end="49:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="412:15">else <block pos:start="51:12" pos:end="412:15">{<block_content pos:start="53:9" pos:end="412:15">

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:11">ffm</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">file_size</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><call pos:start="53:27" pos:end="53:37"><name pos:start="53:27" pos:end="53:34">UINT64_C</name><argument_list pos:start="53:35" pos:end="53:37">(<argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="53:39" pos:end="53:40">&lt;&lt;</operator> <literal type="number" pos:start="53:42" pos:end="53:43">63</literal><operator pos:start="53:44" pos:end="53:44">)</operator> <operator pos:start="53:46" pos:end="53:46">-</operator> <literal type="number" pos:start="53:48" pos:end="53:48">1</literal></expr>;</expr_stmt>




    <while pos:start="58:5" pos:end="412:15">while<condition pos:start="58:10" pos:end="58:25">(<expr pos:start="58:11" pos:end="58:24"><operator pos:start="58:11" pos:end="58:11">!</operator><call pos:start="58:12" pos:end="58:24"><name pos:start="58:12" pos:end="58:20">avio_feof</name><argument_list pos:start="58:21" pos:end="58:24">(<argument pos:start="58:22" pos:end="58:23"><expr pos:start="58:22" pos:end="58:23"><name pos:start="58:22" pos:end="58:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="58:27" pos:end="412:15">{<block_content pos:start="60:9" pos:end="412:15">

        <decl_stmt pos:start="60:9" pos:end="60:36"><decl pos:start="60:9" pos:end="60:35"><type pos:start="60:9" pos:end="60:16"><name pos:start="60:9" pos:end="60:16">unsigned</name></type> <name pos:start="60:18" pos:end="60:19">id</name> <init pos:start="60:21" pos:end="60:35">= <expr pos:start="60:23" pos:end="60:35"><call pos:start="60:23" pos:end="60:35"><name pos:start="60:23" pos:end="60:31">avio_rb32</name><argument_list pos:start="60:32" pos:end="60:35">(<argument pos:start="60:33" pos:end="60:34"><expr pos:start="60:33" pos:end="60:34"><name pos:start="60:33" pos:end="60:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="62:9" pos:end="62:38"><decl pos:start="62:9" pos:end="62:37"><type pos:start="62:9" pos:end="62:16"><name pos:start="62:9" pos:end="62:16">unsigned</name></type> <name pos:start="62:18" pos:end="62:21">size</name> <init pos:start="62:23" pos:end="62:37">= <expr pos:start="62:25" pos:end="62:37"><call pos:start="62:25" pos:end="62:37"><name pos:start="62:25" pos:end="62:33">avio_rb32</name><argument_list pos:start="62:34" pos:end="62:37">(<argument pos:start="62:35" pos:end="62:36"><expr pos:start="62:35" pos:end="62:36"><name pos:start="62:35" pos:end="62:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="64:9" pos:end="64:44"><decl pos:start="64:9" pos:end="64:43"><type pos:start="64:9" pos:end="64:15"><name pos:start="64:9" pos:end="64:15">int64_t</name></type> <name pos:start="64:17" pos:end="64:20">next</name> <init pos:start="64:22" pos:end="64:43">= <expr pos:start="64:24" pos:end="64:43"><call pos:start="64:24" pos:end="64:36"><name pos:start="64:24" pos:end="64:32">avio_tell</name><argument_list pos:start="64:33" pos:end="64:36">(<argument pos:start="64:34" pos:end="64:35"><expr pos:start="64:34" pos:end="64:35"><name pos:start="64:34" pos:end="64:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="64:38" pos:end="64:38">+</operator> <name pos:start="64:40" pos:end="64:43">size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="66:9" pos:end="66:28"><decl pos:start="66:9" pos:end="66:27"><type pos:start="66:9" pos:end="66:12"><name pos:start="66:9" pos:end="66:12">char</name></type> <name pos:start="66:14" pos:end="66:27"><name pos:start="66:14" pos:end="66:22">rc_eq_buf</name><index pos:start="66:23" pos:end="66:27">[<expr pos:start="66:24" pos:end="66:26"><literal type="number" pos:start="66:24" pos:end="66:26">128</literal></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="70:9" pos:end="72:18"><if pos:start="70:9" pos:end="72:18">if<condition pos:start="70:11" pos:end="70:15">(<expr pos:start="70:12" pos:end="70:14"><operator pos:start="70:12" pos:end="70:12">!</operator><name pos:start="70:13" pos:end="70:14">id</name></expr>)</condition><block type="pseudo" pos:start="72:13" pos:end="72:18"><block_content pos:start="72:13" pos:end="72:18">

            <break pos:start="72:13" pos:end="72:18">break;</break></block_content></block></if></if_stmt>



        <switch pos:start="76:9" pos:end="412:15">switch<condition pos:start="76:15" pos:end="76:18">(<expr pos:start="76:16" pos:end="76:17"><name pos:start="76:16" pos:end="76:17">id</name></expr>)</condition> <block pos:start="76:20" pos:end="412:15">{<block_content pos:start="78:9" pos:end="412:15">

        <case pos:start="78:9" pos:end="78:41">case <expr pos:start="78:14" pos:end="78:40"><call pos:start="78:14" pos:end="78:40"><name pos:start="78:14" pos:end="78:20">MKBETAG</name><argument_list pos:start="78:21" pos:end="78:40">(<argument pos:start="78:22" pos:end="78:24"><expr pos:start="78:22" pos:end="78:24"><literal type="char" pos:start="78:22" pos:end="78:24">'M'</literal></expr></argument>, <argument pos:start="78:27" pos:end="78:29"><expr pos:start="78:27" pos:end="78:29"><literal type="char" pos:start="78:27" pos:end="78:29">'A'</literal></expr></argument>, <argument pos:start="78:32" pos:end="78:34"><expr pos:start="78:32" pos:end="78:34"><literal type="char" pos:start="78:32" pos:end="78:34">'I'</literal></expr></argument>, <argument pos:start="78:37" pos:end="78:39"><expr pos:start="78:37" pos:end="78:39"><literal type="char" pos:start="78:37" pos:end="78:39">'N'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="80:13" pos:end="412:15"><if pos:start="80:13" pos:end="412:15">if <condition pos:start="80:16" pos:end="80:25">(<expr pos:start="80:17" pos:end="80:24"><name pos:start="80:17" pos:end="80:22">f_main</name><operator pos:start="80:23" pos:end="80:24">++</operator></expr>)</condition> <block pos:start="80:27" pos:end="412:15">{<block_content pos:start="82:17" pos:end="412:15">

                <expr_stmt pos:start="82:17" pos:end="82:38"><expr pos:start="82:17" pos:end="82:37"><name pos:start="82:17" pos:end="82:19">ret</name> <operator pos:start="82:21" pos:end="82:21">=</operator> <call pos:start="82:23" pos:end="82:37"><name pos:start="82:23" pos:end="82:29">AVERROR</name><argument_list pos:start="82:30" pos:end="82:37">(<argument pos:start="82:31" pos:end="82:36"><expr pos:start="82:31" pos:end="82:36"><name pos:start="82:31" pos:end="82:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="86:13" pos:end="86:26"><expr pos:start="86:13" pos:end="86:25"><call pos:start="86:13" pos:end="86:25"><name pos:start="86:13" pos:end="86:21">avio_rb32</name><argument_list pos:start="86:22" pos:end="86:25">(<argument pos:start="86:23" pos:end="86:24"><expr pos:start="86:23" pos:end="86:24"><name pos:start="86:23" pos:end="86:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="86:28" pos:end="86:43">/* nb_streams */</comment>

            <expr_stmt pos:start="88:13" pos:end="88:26"><expr pos:start="88:13" pos:end="88:25"><call pos:start="88:13" pos:end="88:25"><name pos:start="88:13" pos:end="88:21">avio_rb32</name><argument_list pos:start="88:22" pos:end="88:25">(<argument pos:start="88:23" pos:end="88:24"><expr pos:start="88:23" pos:end="88:24"><name pos:start="88:23" pos:end="88:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="88:28" pos:end="88:46">/* total bitrate */</comment>

            <break pos:start="90:13" pos:end="90:18">break;</break>

        <case pos:start="92:9" pos:end="92:41">case <expr pos:start="92:14" pos:end="92:40"><call pos:start="92:14" pos:end="92:40"><name pos:start="92:14" pos:end="92:20">MKBETAG</name><argument_list pos:start="92:21" pos:end="92:40">(<argument pos:start="92:22" pos:end="92:24"><expr pos:start="92:22" pos:end="92:24"><literal type="char" pos:start="92:22" pos:end="92:24">'C'</literal></expr></argument>, <argument pos:start="92:27" pos:end="92:29"><expr pos:start="92:27" pos:end="92:29"><literal type="char" pos:start="92:27" pos:end="92:29">'O'</literal></expr></argument>, <argument pos:start="92:32" pos:end="92:34"><expr pos:start="92:32" pos:end="92:34"><literal type="char" pos:start="92:32" pos:end="92:34">'M'</literal></expr></argument>, <argument pos:start="92:37" pos:end="92:39"><expr pos:start="92:37" pos:end="92:39"><literal type="char" pos:start="92:37" pos:end="92:39">'M'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="94:13" pos:end="94:41"><expr pos:start="94:13" pos:end="94:40"><name pos:start="94:13" pos:end="94:18">f_cprv</name> <operator pos:start="94:20" pos:end="94:20">=</operator> <name pos:start="94:22" pos:end="94:27">f_stvi</name> <operator pos:start="94:29" pos:end="94:29">=</operator> <name pos:start="94:31" pos:end="94:36">f_stau</name> <operator pos:start="94:38" pos:end="94:38">=</operator> <literal type="number" pos:start="94:40" pos:end="94:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="96:13" pos:end="96:46"><expr pos:start="96:13" pos:end="96:45"><name pos:start="96:13" pos:end="96:14">st</name> <operator pos:start="96:16" pos:end="96:16">=</operator> <call pos:start="96:18" pos:end="96:45"><name pos:start="96:18" pos:end="96:36">avformat_new_stream</name><argument_list pos:start="96:37" pos:end="96:45">(<argument pos:start="96:38" pos:end="96:38"><expr pos:start="96:38" pos:end="96:38"><name pos:start="96:38" pos:end="96:38">s</name></expr></argument>, <argument pos:start="96:41" pos:end="96:44"><expr pos:start="96:41" pos:end="96:44"><name pos:start="96:41" pos:end="96:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="98:13" pos:end="412:15"><if pos:start="98:13" pos:end="412:15">if <condition pos:start="98:16" pos:end="98:20">(<expr pos:start="98:17" pos:end="98:19"><operator pos:start="98:17" pos:end="98:17">!</operator><name pos:start="98:18" pos:end="98:19">st</name></expr>)</condition> <block pos:start="98:22" pos:end="412:15">{<block_content pos:start="100:17" pos:end="412:15">

                <expr_stmt pos:start="100:17" pos:end="100:38"><expr pos:start="100:17" pos:end="100:37"><name pos:start="100:17" pos:end="100:19">ret</name> <operator pos:start="100:21" pos:end="100:21">=</operator> <call pos:start="100:23" pos:end="100:37"><name pos:start="100:23" pos:end="100:29">AVERROR</name><argument_list pos:start="100:30" pos:end="100:37">(<argument pos:start="100:31" pos:end="100:36"><expr pos:start="100:31" pos:end="100:36"><name pos:start="100:31" pos:end="100:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="106:13" pos:end="106:52"><expr pos:start="106:13" pos:end="106:51"><call pos:start="106:13" pos:end="106:51"><name pos:start="106:13" pos:end="106:31">avpriv_set_pts_info</name><argument_list pos:start="106:32" pos:end="106:51">(<argument pos:start="106:33" pos:end="106:34"><expr pos:start="106:33" pos:end="106:34"><name pos:start="106:33" pos:end="106:34">st</name></expr></argument>, <argument pos:start="106:37" pos:end="106:38"><expr pos:start="106:37" pos:end="106:38"><literal type="number" pos:start="106:37" pos:end="106:38">64</literal></expr></argument>, <argument pos:start="106:41" pos:end="106:41"><expr pos:start="106:41" pos:end="106:41"><literal type="number" pos:start="106:41" pos:end="106:41">1</literal></expr></argument>, <argument pos:start="106:44" pos:end="106:50"><expr pos:start="106:44" pos:end="106:50"><literal type="number" pos:start="106:44" pos:end="106:50">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="110:13" pos:end="110:30"><expr pos:start="110:13" pos:end="110:29"><name pos:start="110:13" pos:end="110:17">codec</name> <operator pos:start="110:19" pos:end="110:19">=</operator> <name pos:start="110:21" pos:end="110:29"><name pos:start="110:21" pos:end="110:22">st</name><operator pos:start="110:23" pos:end="110:24">-&gt;</operator><name pos:start="110:25" pos:end="110:29">codec</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="112:13" pos:end="112:30">/* generic info */</comment>

            <expr_stmt pos:start="114:13" pos:end="114:44"><expr pos:start="114:13" pos:end="114:43"><name pos:start="114:13" pos:end="114:27"><name pos:start="114:13" pos:end="114:17">codec</name><operator pos:start="114:18" pos:end="114:19">-&gt;</operator><name pos:start="114:20" pos:end="114:27">codec_id</name></name> <operator pos:start="114:29" pos:end="114:29">=</operator> <call pos:start="114:31" pos:end="114:43"><name pos:start="114:31" pos:end="114:39">avio_rb32</name><argument_list pos:start="114:40" pos:end="114:43">(<argument pos:start="114:41" pos:end="114:42"><expr pos:start="114:41" pos:end="114:42"><name pos:start="114:41" pos:end="114:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="116:13" pos:end="116:65"><expr pos:start="116:13" pos:end="116:64"><name pos:start="116:13" pos:end="116:22">codec_desc</name> <operator pos:start="116:24" pos:end="116:24">=</operator> <call pos:start="116:26" pos:end="116:64"><name pos:start="116:26" pos:end="116:47">avcodec_descriptor_get</name><argument_list pos:start="116:48" pos:end="116:64">(<argument pos:start="116:49" pos:end="116:63"><expr pos:start="116:49" pos:end="116:63"><name pos:start="116:49" pos:end="116:63"><name pos:start="116:49" pos:end="116:53">codec</name><operator pos:start="116:54" pos:end="116:55">-&gt;</operator><name pos:start="116:56" pos:end="116:63">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="118:13" pos:end="412:15"><if pos:start="118:13" pos:end="412:15">if <condition pos:start="118:16" pos:end="118:28">(<expr pos:start="118:17" pos:end="118:27"><operator pos:start="118:17" pos:end="118:17">!</operator><name pos:start="118:18" pos:end="118:27">codec_desc</name></expr>)</condition> <block pos:start="118:30" pos:end="412:15">{<block_content pos:start="120:17" pos:end="412:15">

                <expr_stmt pos:start="120:17" pos:end="120:83"><expr pos:start="120:17" pos:end="120:82"><call pos:start="120:17" pos:end="120:82"><name pos:start="120:17" pos:end="120:22">av_log</name><argument_list pos:start="120:23" pos:end="120:82">(<argument pos:start="120:24" pos:end="120:24"><expr pos:start="120:24" pos:end="120:24"><name pos:start="120:24" pos:end="120:24">s</name></expr></argument>, <argument pos:start="120:27" pos:end="120:38"><expr pos:start="120:27" pos:end="120:38"><name pos:start="120:27" pos:end="120:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="120:41" pos:end="120:64"><expr pos:start="120:41" pos:end="120:64"><literal type="string" pos:start="120:41" pos:end="120:64">"Invalid codec id: %d\n"</literal></expr></argument>, <argument pos:start="120:67" pos:end="120:81"><expr pos:start="120:67" pos:end="120:81"><name pos:start="120:67" pos:end="120:81"><name pos:start="120:67" pos:end="120:71">codec</name><operator pos:start="120:72" pos:end="120:73">-&gt;</operator><name pos:start="120:74" pos:end="120:81">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="122:17" pos:end="122:51"><expr pos:start="122:17" pos:end="122:50"><name pos:start="122:17" pos:end="122:31"><name pos:start="122:17" pos:end="122:21">codec</name><operator pos:start="122:22" pos:end="122:23">-&gt;</operator><name pos:start="122:24" pos:end="122:31">codec_id</name></name> <operator pos:start="122:33" pos:end="122:33">=</operator> <name pos:start="122:35" pos:end="122:50">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>



            <expr_stmt pos:start="126:13" pos:end="126:44"><expr pos:start="126:13" pos:end="126:43"><name pos:start="126:13" pos:end="126:29"><name pos:start="126:13" pos:end="126:17">codec</name><operator pos:start="126:18" pos:end="126:19">-&gt;</operator><name pos:start="126:20" pos:end="126:29">codec_type</name></name> <operator pos:start="126:31" pos:end="126:31">=</operator> <call pos:start="126:33" pos:end="126:43"><name pos:start="126:33" pos:end="126:39">avio_r8</name><argument_list pos:start="126:40" pos:end="126:43">(<argument pos:start="126:41" pos:end="126:42"><expr pos:start="126:41" pos:end="126:42"><name pos:start="126:41" pos:end="126:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="128:13" pos:end="412:15"><if pos:start="128:13" pos:end="412:15">if <condition pos:start="128:16" pos:end="128:54">(<expr pos:start="128:17" pos:end="128:53"><name pos:start="128:17" pos:end="128:33"><name pos:start="128:17" pos:end="128:21">codec</name><operator pos:start="128:22" pos:end="128:23">-&gt;</operator><name pos:start="128:24" pos:end="128:33">codec_type</name></name> <operator pos:start="128:35" pos:end="128:36">!=</operator> <name pos:start="128:38" pos:end="128:53"><name pos:start="128:38" pos:end="128:47">codec_desc</name><operator pos:start="128:48" pos:end="128:49">-&gt;</operator><name pos:start="128:50" pos:end="128:53">type</name></name></expr>)</condition> <block pos:start="128:56" pos:end="412:15">{<block_content pos:start="130:17" pos:end="412:15">

                <expr_stmt pos:start="130:17" pos:end="132:60"><expr pos:start="130:17" pos:end="132:59"><call pos:start="130:17" pos:end="132:59"><name pos:start="130:17" pos:end="130:22">av_log</name><argument_list pos:start="130:23" pos:end="132:59">(<argument pos:start="130:24" pos:end="130:24"><expr pos:start="130:24" pos:end="130:24"><name pos:start="130:24" pos:end="130:24">s</name></expr></argument>, <argument pos:start="130:27" pos:end="130:38"><expr pos:start="130:27" pos:end="130:38"><name pos:start="130:27" pos:end="130:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="130:41" pos:end="130:86"><expr pos:start="130:41" pos:end="130:86"><literal type="string" pos:start="130:41" pos:end="130:86">"Codec type mismatch: expected %d, found %d\n"</literal></expr></argument>,

                       <argument pos:start="132:24" pos:end="132:39"><expr pos:start="132:24" pos:end="132:39"><name pos:start="132:24" pos:end="132:39"><name pos:start="132:24" pos:end="132:33">codec_desc</name><operator pos:start="132:34" pos:end="132:35">-&gt;</operator><name pos:start="132:36" pos:end="132:39">type</name></name></expr></argument>, <argument pos:start="132:42" pos:end="132:58"><expr pos:start="132:42" pos:end="132:58"><name pos:start="132:42" pos:end="132:58"><name pos:start="132:42" pos:end="132:46">codec</name><operator pos:start="132:47" pos:end="132:48">-&gt;</operator><name pos:start="132:49" pos:end="132:58">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="134:17" pos:end="134:51"><expr pos:start="134:17" pos:end="134:50"><name pos:start="134:17" pos:end="134:31"><name pos:start="134:17" pos:end="134:21">codec</name><operator pos:start="134:22" pos:end="134:23">-&gt;</operator><name pos:start="134:24" pos:end="134:31">codec_id</name></name> <operator pos:start="134:33" pos:end="134:33">=</operator> <name pos:start="134:35" pos:end="134:50">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="136:17" pos:end="136:57"><expr pos:start="136:17" pos:end="136:56"><name pos:start="136:17" pos:end="136:33"><name pos:start="136:17" pos:end="136:21">codec</name><operator pos:start="136:22" pos:end="136:23">-&gt;</operator><name pos:start="136:24" pos:end="136:33">codec_type</name></name> <operator pos:start="136:35" pos:end="136:35">=</operator> <name pos:start="136:37" pos:end="136:56">AVMEDIA_TYPE_UNKNOWN</name></expr>;</expr_stmt>



            <expr_stmt pos:start="140:13" pos:end="140:44"><expr pos:start="140:13" pos:end="140:43"><name pos:start="140:13" pos:end="140:27"><name pos:start="140:13" pos:end="140:17">codec</name><operator pos:start="140:18" pos:end="140:19">-&gt;</operator><name pos:start="140:20" pos:end="140:27">bit_rate</name></name> <operator pos:start="140:29" pos:end="140:29">=</operator> <call pos:start="140:31" pos:end="140:43"><name pos:start="140:31" pos:end="140:39">avio_rb32</name><argument_list pos:start="140:40" pos:end="140:43">(<argument pos:start="140:41" pos:end="140:42"><expr pos:start="140:41" pos:end="140:42"><name pos:start="140:41" pos:end="140:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="142:13" pos:end="142:41"><expr pos:start="142:13" pos:end="142:40"><name pos:start="142:13" pos:end="142:24"><name pos:start="142:13" pos:end="142:17">codec</name><operator pos:start="142:18" pos:end="142:19">-&gt;</operator><name pos:start="142:20" pos:end="142:24">flags</name></name> <operator pos:start="142:26" pos:end="142:26">=</operator> <call pos:start="142:28" pos:end="142:40"><name pos:start="142:28" pos:end="142:36">avio_rb32</name><argument_list pos:start="142:37" pos:end="142:40">(<argument pos:start="142:38" pos:end="142:39"><expr pos:start="142:38" pos:end="142:39"><name pos:start="142:38" pos:end="142:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="144:13" pos:end="144:42"><expr pos:start="144:13" pos:end="144:41"><name pos:start="144:13" pos:end="144:25"><name pos:start="144:13" pos:end="144:17">codec</name><operator pos:start="144:18" pos:end="144:19">-&gt;</operator><name pos:start="144:20" pos:end="144:25">flags2</name></name> <operator pos:start="144:27" pos:end="144:27">=</operator> <call pos:start="144:29" pos:end="144:41"><name pos:start="144:29" pos:end="144:37">avio_rb32</name><argument_list pos:start="144:38" pos:end="144:41">(<argument pos:start="144:39" pos:end="144:40"><expr pos:start="144:39" pos:end="144:40"><name pos:start="144:39" pos:end="144:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="146:13" pos:end="146:41"><expr pos:start="146:13" pos:end="146:40"><name pos:start="146:13" pos:end="146:24"><name pos:start="146:13" pos:end="146:17">codec</name><operator pos:start="146:18" pos:end="146:19">-&gt;</operator><name pos:start="146:20" pos:end="146:24">debug</name></name> <operator pos:start="146:26" pos:end="146:26">=</operator> <call pos:start="146:28" pos:end="146:40"><name pos:start="146:28" pos:end="146:36">avio_rb32</name><argument_list pos:start="146:37" pos:end="146:40">(<argument pos:start="146:38" pos:end="146:39"><expr pos:start="146:38" pos:end="146:39"><name pos:start="146:38" pos:end="146:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="148:13" pos:end="412:15"><if pos:start="148:13" pos:end="412:15">if <condition pos:start="148:16" pos:end="148:59">(<expr pos:start="148:17" pos:end="148:58"><name pos:start="148:17" pos:end="148:28"><name pos:start="148:17" pos:end="148:21">codec</name><operator pos:start="148:22" pos:end="148:23">-&gt;</operator><name pos:start="148:24" pos:end="148:28">flags</name></name> <operator pos:start="148:30" pos:end="148:30">&amp;</operator> <name pos:start="148:32" pos:end="148:58">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="148:61" pos:end="412:15">{<block_content pos:start="150:17" pos:end="412:15">

                <decl_stmt pos:start="150:17" pos:end="150:41"><decl pos:start="150:17" pos:end="150:40"><type pos:start="150:17" pos:end="150:19"><name pos:start="150:17" pos:end="150:19">int</name></type> <name pos:start="150:21" pos:end="150:24">size</name> <init pos:start="150:26" pos:end="150:40">= <expr pos:start="150:28" pos:end="150:40"><call pos:start="150:28" pos:end="150:40"><name pos:start="150:28" pos:end="150:36">avio_rb32</name><argument_list pos:start="150:37" pos:end="150:40">(<argument pos:start="150:38" pos:end="150:39"><expr pos:start="150:38" pos:end="150:39"><name pos:start="150:38" pos:end="150:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="152:17" pos:end="152:83"><expr pos:start="152:17" pos:end="152:82"><name pos:start="152:17" pos:end="152:32"><name pos:start="152:17" pos:end="152:21">codec</name><operator pos:start="152:22" pos:end="152:23">-&gt;</operator><name pos:start="152:24" pos:end="152:32">extradata</name></name> <operator pos:start="152:34" pos:end="152:34">=</operator> <call pos:start="152:36" pos:end="152:82"><name pos:start="152:36" pos:end="152:45">av_mallocz</name><argument_list pos:start="152:46" pos:end="152:82">(<argument pos:start="152:47" pos:end="152:81"><expr pos:start="152:47" pos:end="152:81"><name pos:start="152:47" pos:end="152:50">size</name> <operator pos:start="152:52" pos:end="152:52">+</operator> <name pos:start="152:54" pos:end="152:81">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="154:17" pos:end="156:43"><if pos:start="154:17" pos:end="156:43">if <condition pos:start="154:20" pos:end="154:38">(<expr pos:start="154:21" pos:end="154:37"><operator pos:start="154:21" pos:end="154:21">!</operator><name pos:start="154:22" pos:end="154:37"><name pos:start="154:22" pos:end="154:26">codec</name><operator pos:start="154:27" pos:end="154:28">-&gt;</operator><name pos:start="154:29" pos:end="154:37">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="156:21" pos:end="156:43"><block_content pos:start="156:21" pos:end="156:43">

                    <return pos:start="156:21" pos:end="156:43">return <expr pos:start="156:28" pos:end="156:42"><call pos:start="156:28" pos:end="156:42"><name pos:start="156:28" pos:end="156:34">AVERROR</name><argument_list pos:start="156:35" pos:end="156:42">(<argument pos:start="156:36" pos:end="156:41"><expr pos:start="156:36" pos:end="156:41"><name pos:start="156:36" pos:end="156:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="158:17" pos:end="158:45"><expr pos:start="158:17" pos:end="158:44"><name pos:start="158:17" pos:end="158:37"><name pos:start="158:17" pos:end="158:21">codec</name><operator pos:start="158:22" pos:end="158:23">-&gt;</operator><name pos:start="158:24" pos:end="158:37">extradata_size</name></name> <operator pos:start="158:39" pos:end="158:39">=</operator> <name pos:start="158:41" pos:end="158:44">size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="160:17" pos:end="160:54"><expr pos:start="160:17" pos:end="160:53"><call pos:start="160:17" pos:end="160:53"><name pos:start="160:17" pos:end="160:25">avio_read</name><argument_list pos:start="160:26" pos:end="160:53">(<argument pos:start="160:27" pos:end="160:28"><expr pos:start="160:27" pos:end="160:28"><name pos:start="160:27" pos:end="160:28">pb</name></expr></argument>, <argument pos:start="160:31" pos:end="160:46"><expr pos:start="160:31" pos:end="160:46"><name pos:start="160:31" pos:end="160:46"><name pos:start="160:31" pos:end="160:35">codec</name><operator pos:start="160:36" pos:end="160:37">-&gt;</operator><name pos:start="160:38" pos:end="160:46">extradata</name></name></expr></argument>, <argument pos:start="160:49" pos:end="160:52"><expr pos:start="160:49" pos:end="160:52"><name pos:start="160:49" pos:end="160:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:41">case <expr pos:start="165:14" pos:end="165:40"><call pos:start="165:14" pos:end="165:40"><name pos:start="165:14" pos:end="165:20">MKBETAG</name><argument_list pos:start="165:21" pos:end="165:40">(<argument pos:start="165:22" pos:end="165:24"><expr pos:start="165:22" pos:end="165:24"><literal type="char" pos:start="165:22" pos:end="165:24">'S'</literal></expr></argument>, <argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><literal type="char" pos:start="165:27" pos:end="165:29">'T'</literal></expr></argument>, <argument pos:start="165:32" pos:end="165:34"><expr pos:start="165:32" pos:end="165:34"><literal type="char" pos:start="165:32" pos:end="165:34">'V'</literal></expr></argument>, <argument pos:start="165:37" pos:end="165:39"><expr pos:start="165:37" pos:end="165:39"><literal type="char" pos:start="165:37" pos:end="165:39">'I'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="167:13" pos:end="412:15"><if pos:start="167:13" pos:end="412:15">if <condition pos:start="167:16" pos:end="167:25">(<expr pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:22">f_stvi</name><operator pos:start="167:23" pos:end="167:24">++</operator></expr>)</condition> <block pos:start="167:27" pos:end="412:15">{<block_content pos:start="169:17" pos:end="412:15">

                <expr_stmt pos:start="169:17" pos:end="169:38"><expr pos:start="169:17" pos:end="169:37"><name pos:start="169:17" pos:end="169:19">ret</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:37"><name pos:start="169:23" pos:end="169:29">AVERROR</name><argument_list pos:start="169:30" pos:end="169:37">(<argument pos:start="169:31" pos:end="169:36"><expr pos:start="169:31" pos:end="169:36"><name pos:start="169:31" pos:end="169:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="173:13" pos:end="173:49"><expr pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:17">codec</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:28">time_base</name><operator pos:start="173:29" pos:end="173:29">.</operator><name pos:start="173:30" pos:end="173:32">num</name></name> <operator pos:start="173:34" pos:end="173:34">=</operator> <call pos:start="173:36" pos:end="173:48"><name pos:start="173:36" pos:end="173:44">avio_rb32</name><argument_list pos:start="173:45" pos:end="173:48">(<argument pos:start="173:46" pos:end="173:47"><expr pos:start="173:46" pos:end="173:47"><name pos:start="173:46" pos:end="173:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:49"><expr pos:start="175:13" pos:end="175:48"><name pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:17">codec</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:28">time_base</name><operator pos:start="175:29" pos:end="175:29">.</operator><name pos:start="175:30" pos:end="175:32">den</name></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <call pos:start="175:36" pos:end="175:48"><name pos:start="175:36" pos:end="175:44">avio_rb32</name><argument_list pos:start="175:45" pos:end="175:48">(<argument pos:start="175:46" pos:end="175:47"><expr pos:start="175:46" pos:end="175:47"><name pos:start="175:46" pos:end="175:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="412:15"><if pos:start="177:13" pos:end="412:15">if <condition pos:start="177:16" pos:end="177:71">(<expr pos:start="177:17" pos:end="177:70"><name pos:start="177:17" pos:end="177:36"><name pos:start="177:17" pos:end="177:21">codec</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:32">time_base</name><operator pos:start="177:33" pos:end="177:33">.</operator><name pos:start="177:34" pos:end="177:36">num</name></name> <operator pos:start="177:38" pos:end="177:39">&lt;=</operator> <literal type="number" pos:start="177:41" pos:end="177:41">0</literal> <operator pos:start="177:43" pos:end="177:44">||</operator> <name pos:start="177:46" pos:end="177:65"><name pos:start="177:46" pos:end="177:50">codec</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:61">time_base</name><operator pos:start="177:62" pos:end="177:62">.</operator><name pos:start="177:63" pos:end="177:65">den</name></name> <operator pos:start="177:67" pos:end="177:68">&lt;=</operator> <literal type="number" pos:start="177:70" pos:end="177:70">0</literal></expr>)</condition> <block pos:start="177:73" pos:end="412:15">{<block_content pos:start="179:17" pos:end="412:15">

                <expr_stmt pos:start="179:17" pos:end="181:67"><expr pos:start="179:17" pos:end="181:66"><call pos:start="179:17" pos:end="181:66"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="181:66">(<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">s</name></expr></argument>, <argument pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:38"><name pos:start="179:27" pos:end="179:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:41" pos:end="179:67"><expr pos:start="179:41" pos:end="179:67"><literal type="string" pos:start="179:41" pos:end="179:67">"Invalid time base %d/%d\n"</literal></expr></argument>,

                       <argument pos:start="181:24" pos:end="181:43"><expr pos:start="181:24" pos:end="181:43"><name pos:start="181:24" pos:end="181:43"><name pos:start="181:24" pos:end="181:28">codec</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:39">time_base</name><operator pos:start="181:40" pos:end="181:40">.</operator><name pos:start="181:41" pos:end="181:43">num</name></name></expr></argument>, <argument pos:start="181:46" pos:end="181:65"><expr pos:start="181:46" pos:end="181:65"><name pos:start="181:46" pos:end="181:65"><name pos:start="181:46" pos:end="181:50">codec</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:61">time_base</name><operator pos:start="181:62" pos:end="181:62">.</operator><name pos:start="181:63" pos:end="181:65">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:42"><expr pos:start="183:17" pos:end="183:41"><name pos:start="183:17" pos:end="183:19">ret</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:41"><expr pos:start="187:13" pos:end="187:40"><name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:17">codec</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:24">width</name></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:40"><name pos:start="187:28" pos:end="187:36">avio_rb16</name><argument_list pos:start="187:37" pos:end="187:40">(<argument pos:start="187:38" pos:end="187:39"><expr pos:start="187:38" pos:end="187:39"><name pos:start="187:38" pos:end="187:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:42"><expr pos:start="189:13" pos:end="189:41"><name pos:start="189:13" pos:end="189:25"><name pos:start="189:13" pos:end="189:17">codec</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:25">height</name></name> <operator pos:start="189:27" pos:end="189:27">=</operator> <call pos:start="189:29" pos:end="189:41"><name pos:start="189:29" pos:end="189:37">avio_rb16</name><argument_list pos:start="189:38" pos:end="189:41">(<argument pos:start="189:39" pos:end="189:40"><expr pos:start="189:39" pos:end="189:40"><name pos:start="189:39" pos:end="189:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:44"><expr pos:start="191:13" pos:end="191:43"><name pos:start="191:13" pos:end="191:27"><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:27">gop_size</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <call pos:start="191:31" pos:end="191:43"><name pos:start="191:31" pos:end="191:39">avio_rb16</name><argument_list pos:start="191:40" pos:end="191:43">(<argument pos:start="191:41" pos:end="191:42"><expr pos:start="191:41" pos:end="191:42"><name pos:start="191:41" pos:end="191:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:43"><expr pos:start="193:13" pos:end="193:42"><name pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:17">codec</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:26">pix_fmt</name></name> <operator pos:start="193:28" pos:end="193:28">=</operator> <call pos:start="193:30" pos:end="193:42"><name pos:start="193:30" pos:end="193:38">avio_rb32</name><argument_list pos:start="193:39" pos:end="193:42">(<argument pos:start="193:40" pos:end="193:41"><expr pos:start="193:40" pos:end="193:41"><name pos:start="193:40" pos:end="193:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






            <expr_stmt pos:start="200:13" pos:end="200:38"><expr pos:start="200:13" pos:end="200:37"><name pos:start="200:13" pos:end="200:23"><name pos:start="200:13" pos:end="200:17">codec</name><operator pos:start="200:18" pos:end="200:19">-&gt;</operator><name pos:start="200:20" pos:end="200:23">qmin</name></name> <operator pos:start="200:25" pos:end="200:25">=</operator> <call pos:start="200:27" pos:end="200:37"><name pos:start="200:27" pos:end="200:33">avio_r8</name><argument_list pos:start="200:34" pos:end="200:37">(<argument pos:start="200:35" pos:end="200:36"><expr pos:start="200:35" pos:end="200:36"><name pos:start="200:35" pos:end="200:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="202:13" pos:end="202:38"><expr pos:start="202:13" pos:end="202:37"><name pos:start="202:13" pos:end="202:23"><name pos:start="202:13" pos:end="202:17">codec</name><operator pos:start="202:18" pos:end="202:19">-&gt;</operator><name pos:start="202:20" pos:end="202:23">qmax</name></name> <operator pos:start="202:25" pos:end="202:25">=</operator> <call pos:start="202:27" pos:end="202:37"><name pos:start="202:27" pos:end="202:33">avio_r8</name><argument_list pos:start="202:34" pos:end="202:37">(<argument pos:start="202:35" pos:end="202:36"><expr pos:start="202:35" pos:end="202:36"><name pos:start="202:35" pos:end="202:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="204:13" pos:end="204:43"><expr pos:start="204:13" pos:end="204:42"><name pos:start="204:13" pos:end="204:28"><name pos:start="204:13" pos:end="204:17">codec</name><operator pos:start="204:18" pos:end="204:19">-&gt;</operator><name pos:start="204:20" pos:end="204:28">max_qdiff</name></name> <operator pos:start="204:30" pos:end="204:30">=</operator> <call pos:start="204:32" pos:end="204:42"><name pos:start="204:32" pos:end="204:38">avio_r8</name><argument_list pos:start="204:39" pos:end="204:42">(<argument pos:start="204:40" pos:end="204:41"><expr pos:start="204:40" pos:end="204:41"><name pos:start="204:40" pos:end="204:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="206:13" pos:end="206:55"><expr pos:start="206:13" pos:end="206:54"><name pos:start="206:13" pos:end="206:28"><name pos:start="206:13" pos:end="206:17">codec</name><operator pos:start="206:18" pos:end="206:19">-&gt;</operator><name pos:start="206:20" pos:end="206:28">qcompress</name></name> <operator pos:start="206:30" pos:end="206:30">=</operator> <call pos:start="206:32" pos:end="206:44"><name pos:start="206:32" pos:end="206:40">avio_rb16</name><argument_list pos:start="206:41" pos:end="206:44">(<argument pos:start="206:42" pos:end="206:43"><expr pos:start="206:42" pos:end="206:43"><name pos:start="206:42" pos:end="206:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="206:46" pos:end="206:46">/</operator> <literal type="number" pos:start="206:48" pos:end="206:54">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="208:13" pos:end="208:51"><expr pos:start="208:13" pos:end="208:50"><name pos:start="208:13" pos:end="208:24"><name pos:start="208:13" pos:end="208:17">codec</name><operator pos:start="208:18" pos:end="208:19">-&gt;</operator><name pos:start="208:20" pos:end="208:24">qblur</name></name> <operator pos:start="208:26" pos:end="208:26">=</operator> <call pos:start="208:28" pos:end="208:40"><name pos:start="208:28" pos:end="208:36">avio_rb16</name><argument_list pos:start="208:37" pos:end="208:40">(<argument pos:start="208:38" pos:end="208:39"><expr pos:start="208:38" pos:end="208:39"><name pos:start="208:38" pos:end="208:39">pb</name></expr></argument>)</argument_list></call> <operator pos:start="208:42" pos:end="208:42">/</operator> <literal type="number" pos:start="208:44" pos:end="208:50">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="210:13" pos:end="210:54"><expr pos:start="210:13" pos:end="210:53"><name pos:start="210:13" pos:end="210:37"><name pos:start="210:13" pos:end="210:17">codec</name><operator pos:start="210:18" pos:end="210:19">-&gt;</operator><name pos:start="210:20" pos:end="210:37">bit_rate_tolerance</name></name> <operator pos:start="210:39" pos:end="210:39">=</operator> <call pos:start="210:41" pos:end="210:53"><name pos:start="210:41" pos:end="210:49">avio_rb32</name><argument_list pos:start="210:50" pos:end="210:53">(<argument pos:start="210:51" pos:end="210:52"><expr pos:start="210:51" pos:end="210:52"><name pos:start="210:51" pos:end="210:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="212:13" pos:end="212:68"><expr pos:start="212:13" pos:end="212:67"><call pos:start="212:13" pos:end="212:67"><name pos:start="212:13" pos:end="212:24">avio_get_str</name><argument_list pos:start="212:25" pos:end="212:67">(<argument pos:start="212:26" pos:end="212:27"><expr pos:start="212:26" pos:end="212:27"><name pos:start="212:26" pos:end="212:27">pb</name></expr></argument>, <argument pos:start="212:30" pos:end="212:36"><expr pos:start="212:30" pos:end="212:36"><name pos:start="212:30" pos:end="212:36">INT_MAX</name></expr></argument>, <argument pos:start="212:39" pos:end="212:47"><expr pos:start="212:39" pos:end="212:47"><name pos:start="212:39" pos:end="212:47">rc_eq_buf</name></expr></argument>, <argument pos:start="212:50" pos:end="212:66"><expr pos:start="212:50" pos:end="212:66"><sizeof pos:start="212:50" pos:end="212:66">sizeof<argument_list pos:start="212:56" pos:end="212:66">(<argument pos:start="212:57" pos:end="212:65"><expr pos:start="212:57" pos:end="212:65"><name pos:start="212:57" pos:end="212:65">rc_eq_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="214:13" pos:end="214:48"><expr pos:start="214:13" pos:end="214:47"><name pos:start="214:13" pos:end="214:24"><name pos:start="214:13" pos:end="214:17">codec</name><operator pos:start="214:18" pos:end="214:19">-&gt;</operator><name pos:start="214:20" pos:end="214:24">rc_eq</name></name> <operator pos:start="214:26" pos:end="214:26">=</operator> <call pos:start="214:28" pos:end="214:47"><name pos:start="214:28" pos:end="214:36">av_strdup</name><argument_list pos:start="214:37" pos:end="214:47">(<argument pos:start="214:38" pos:end="214:46"><expr pos:start="214:38" pos:end="214:46"><name pos:start="214:38" pos:end="214:46">rc_eq_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="216:13" pos:end="216:47"><expr pos:start="216:13" pos:end="216:46"><name pos:start="216:13" pos:end="216:30"><name pos:start="216:13" pos:end="216:17">codec</name><operator pos:start="216:18" pos:end="216:19">-&gt;</operator><name pos:start="216:20" pos:end="216:30">rc_max_rate</name></name> <operator pos:start="216:32" pos:end="216:32">=</operator> <call pos:start="216:34" pos:end="216:46"><name pos:start="216:34" pos:end="216:42">avio_rb32</name><argument_list pos:start="216:43" pos:end="216:46">(<argument pos:start="216:44" pos:end="216:45"><expr pos:start="216:44" pos:end="216:45"><name pos:start="216:44" pos:end="216:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="218:13" pos:end="218:47"><expr pos:start="218:13" pos:end="218:46"><name pos:start="218:13" pos:end="218:30"><name pos:start="218:13" pos:end="218:17">codec</name><operator pos:start="218:18" pos:end="218:19">-&gt;</operator><name pos:start="218:20" pos:end="218:30">rc_min_rate</name></name> <operator pos:start="218:32" pos:end="218:32">=</operator> <call pos:start="218:34" pos:end="218:46"><name pos:start="218:34" pos:end="218:42">avio_rb32</name><argument_list pos:start="218:43" pos:end="218:46">(<argument pos:start="218:44" pos:end="218:45"><expr pos:start="218:44" pos:end="218:45"><name pos:start="218:44" pos:end="218:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="220:13" pos:end="220:50"><expr pos:start="220:13" pos:end="220:49"><name pos:start="220:13" pos:end="220:33"><name pos:start="220:13" pos:end="220:17">codec</name><operator pos:start="220:18" pos:end="220:19">-&gt;</operator><name pos:start="220:20" pos:end="220:33">rc_buffer_size</name></name> <operator pos:start="220:35" pos:end="220:35">=</operator> <call pos:start="220:37" pos:end="220:49"><name pos:start="220:37" pos:end="220:45">avio_rb32</name><argument_list pos:start="220:46" pos:end="220:49">(<argument pos:start="220:47" pos:end="220:48"><expr pos:start="220:47" pos:end="220:48"><name pos:start="220:47" pos:end="220:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="222:13" pos:end="222:65"><expr pos:start="222:13" pos:end="222:64"><name pos:start="222:13" pos:end="222:33"><name pos:start="222:13" pos:end="222:17">codec</name><operator pos:start="222:18" pos:end="222:19">-&gt;</operator><name pos:start="222:20" pos:end="222:33">i_quant_factor</name></name> <operator pos:start="222:35" pos:end="222:35">=</operator> <call pos:start="222:37" pos:end="222:64"><name pos:start="222:37" pos:end="222:49">av_int2double</name><argument_list pos:start="222:50" pos:end="222:64">(<argument pos:start="222:51" pos:end="222:63"><expr pos:start="222:51" pos:end="222:63"><call pos:start="222:51" pos:end="222:63"><name pos:start="222:51" pos:end="222:59">avio_rb64</name><argument_list pos:start="222:60" pos:end="222:63">(<argument pos:start="222:61" pos:end="222:62"><expr pos:start="222:61" pos:end="222:62"><name pos:start="222:61" pos:end="222:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="224:13" pos:end="224:65"><expr pos:start="224:13" pos:end="224:64"><name pos:start="224:13" pos:end="224:33"><name pos:start="224:13" pos:end="224:17">codec</name><operator pos:start="224:18" pos:end="224:19">-&gt;</operator><name pos:start="224:20" pos:end="224:33">b_quant_factor</name></name> <operator pos:start="224:35" pos:end="224:35">=</operator> <call pos:start="224:37" pos:end="224:64"><name pos:start="224:37" pos:end="224:49">av_int2double</name><argument_list pos:start="224:50" pos:end="224:64">(<argument pos:start="224:51" pos:end="224:63"><expr pos:start="224:51" pos:end="224:63"><call pos:start="224:51" pos:end="224:63"><name pos:start="224:51" pos:end="224:59">avio_rb64</name><argument_list pos:start="224:60" pos:end="224:63">(<argument pos:start="224:61" pos:end="224:62"><expr pos:start="224:61" pos:end="224:62"><name pos:start="224:61" pos:end="224:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="226:13" pos:end="226:65"><expr pos:start="226:13" pos:end="226:64"><name pos:start="226:13" pos:end="226:33"><name pos:start="226:13" pos:end="226:17">codec</name><operator pos:start="226:18" pos:end="226:19">-&gt;</operator><name pos:start="226:20" pos:end="226:33">i_quant_offset</name></name> <operator pos:start="226:35" pos:end="226:35">=</operator> <call pos:start="226:37" pos:end="226:64"><name pos:start="226:37" pos:end="226:49">av_int2double</name><argument_list pos:start="226:50" pos:end="226:64">(<argument pos:start="226:51" pos:end="226:63"><expr pos:start="226:51" pos:end="226:63"><call pos:start="226:51" pos:end="226:63"><name pos:start="226:51" pos:end="226:59">avio_rb64</name><argument_list pos:start="226:60" pos:end="226:63">(<argument pos:start="226:61" pos:end="226:62"><expr pos:start="226:61" pos:end="226:62"><name pos:start="226:61" pos:end="226:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="228:13" pos:end="228:65"><expr pos:start="228:13" pos:end="228:64"><name pos:start="228:13" pos:end="228:33"><name pos:start="228:13" pos:end="228:17">codec</name><operator pos:start="228:18" pos:end="228:19">-&gt;</operator><name pos:start="228:20" pos:end="228:33">b_quant_offset</name></name> <operator pos:start="228:35" pos:end="228:35">=</operator> <call pos:start="228:37" pos:end="228:64"><name pos:start="228:37" pos:end="228:49">av_int2double</name><argument_list pos:start="228:50" pos:end="228:64">(<argument pos:start="228:51" pos:end="228:63"><expr pos:start="228:51" pos:end="228:63"><call pos:start="228:51" pos:end="228:63"><name pos:start="228:51" pos:end="228:59">avio_rb64</name><argument_list pos:start="228:60" pos:end="228:63">(<argument pos:start="228:61" pos:end="228:62"><expr pos:start="228:61" pos:end="228:62"><name pos:start="228:61" pos:end="228:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="230:13" pos:end="230:44"><expr pos:start="230:13" pos:end="230:43"><name pos:start="230:13" pos:end="230:27"><name pos:start="230:13" pos:end="230:17">codec</name><operator pos:start="230:18" pos:end="230:19">-&gt;</operator><name pos:start="230:20" pos:end="230:27">dct_algo</name></name> <operator pos:start="230:29" pos:end="230:29">=</operator> <call pos:start="230:31" pos:end="230:43"><name pos:start="230:31" pos:end="230:39">avio_rb32</name><argument_list pos:start="230:40" pos:end="230:43">(<argument pos:start="230:41" pos:end="230:42"><expr pos:start="230:41" pos:end="230:42"><name pos:start="230:41" pos:end="230:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="232:13" pos:end="232:57"><expr pos:start="232:13" pos:end="232:56"><name pos:start="232:13" pos:end="232:40"><name pos:start="232:13" pos:end="232:17">codec</name><operator pos:start="232:18" pos:end="232:19">-&gt;</operator><name pos:start="232:20" pos:end="232:40">strict_std_compliance</name></name> <operator pos:start="232:42" pos:end="232:42">=</operator> <call pos:start="232:44" pos:end="232:56"><name pos:start="232:44" pos:end="232:52">avio_rb32</name><argument_list pos:start="232:53" pos:end="232:56">(<argument pos:start="232:54" pos:end="232:55"><expr pos:start="232:54" pos:end="232:55"><name pos:start="232:54" pos:end="232:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="234:13" pos:end="234:48"><expr pos:start="234:13" pos:end="234:47"><name pos:start="234:13" pos:end="234:31"><name pos:start="234:13" pos:end="234:17">codec</name><operator pos:start="234:18" pos:end="234:19">-&gt;</operator><name pos:start="234:20" pos:end="234:31">max_b_frames</name></name> <operator pos:start="234:33" pos:end="234:33">=</operator> <call pos:start="234:35" pos:end="234:47"><name pos:start="234:35" pos:end="234:43">avio_rb32</name><argument_list pos:start="234:44" pos:end="234:47">(<argument pos:start="234:45" pos:end="234:46"><expr pos:start="234:45" pos:end="234:46"><name pos:start="234:45" pos:end="234:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="236:13" pos:end="236:46"><expr pos:start="236:13" pos:end="236:45"><name pos:start="236:13" pos:end="236:29"><name pos:start="236:13" pos:end="236:17">codec</name><operator pos:start="236:18" pos:end="236:19">-&gt;</operator><name pos:start="236:20" pos:end="236:29">mpeg_quant</name></name> <operator pos:start="236:31" pos:end="236:31">=</operator> <call pos:start="236:33" pos:end="236:45"><name pos:start="236:33" pos:end="236:41">avio_rb32</name><argument_list pos:start="236:42" pos:end="236:45">(<argument pos:start="236:43" pos:end="236:44"><expr pos:start="236:43" pos:end="236:44"><name pos:start="236:43" pos:end="236:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="238:13" pos:end="238:54"><expr pos:start="238:13" pos:end="238:53"><name pos:start="238:13" pos:end="238:37"><name pos:start="238:13" pos:end="238:17">codec</name><operator pos:start="238:18" pos:end="238:19">-&gt;</operator><name pos:start="238:20" pos:end="238:37">intra_dc_precision</name></name> <operator pos:start="238:39" pos:end="238:39">=</operator> <call pos:start="238:41" pos:end="238:53"><name pos:start="238:41" pos:end="238:49">avio_rb32</name><argument_list pos:start="238:50" pos:end="238:53">(<argument pos:start="238:51" pos:end="238:52"><expr pos:start="238:51" pos:end="238:52"><name pos:start="238:51" pos:end="238:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="240:13" pos:end="240:45"><expr pos:start="240:13" pos:end="240:44"><name pos:start="240:13" pos:end="240:28"><name pos:start="240:13" pos:end="240:17">codec</name><operator pos:start="240:18" pos:end="240:19">-&gt;</operator><name pos:start="240:20" pos:end="240:28">me_method</name></name> <operator pos:start="240:30" pos:end="240:30">=</operator> <call pos:start="240:32" pos:end="240:44"><name pos:start="240:32" pos:end="240:40">avio_rb32</name><argument_list pos:start="240:41" pos:end="240:44">(<argument pos:start="240:42" pos:end="240:43"><expr pos:start="240:42" pos:end="240:43"><name pos:start="240:42" pos:end="240:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="242:13" pos:end="242:47"><expr pos:start="242:13" pos:end="242:46"><name pos:start="242:13" pos:end="242:30"><name pos:start="242:13" pos:end="242:17">codec</name><operator pos:start="242:18" pos:end="242:19">-&gt;</operator><name pos:start="242:20" pos:end="242:30">mb_decision</name></name> <operator pos:start="242:32" pos:end="242:32">=</operator> <call pos:start="242:34" pos:end="242:46"><name pos:start="242:34" pos:end="242:42">avio_rb32</name><argument_list pos:start="242:43" pos:end="242:46">(<argument pos:start="242:44" pos:end="242:45"><expr pos:start="242:44" pos:end="242:45"><name pos:start="242:44" pos:end="242:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="244:13" pos:end="244:47"><expr pos:start="244:13" pos:end="244:46"><name pos:start="244:13" pos:end="244:30"><name pos:start="244:13" pos:end="244:17">codec</name><operator pos:start="244:18" pos:end="244:19">-&gt;</operator><name pos:start="244:20" pos:end="244:30">nsse_weight</name></name> <operator pos:start="244:32" pos:end="244:32">=</operator> <call pos:start="244:34" pos:end="244:46"><name pos:start="244:34" pos:end="244:42">avio_rb32</name><argument_list pos:start="244:43" pos:end="244:46">(<argument pos:start="244:44" pos:end="244:45"><expr pos:start="244:44" pos:end="244:45"><name pos:start="244:44" pos:end="244:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="246:13" pos:end="246:50"><expr pos:start="246:13" pos:end="246:49"><name pos:start="246:13" pos:end="246:33"><name pos:start="246:13" pos:end="246:17">codec</name><operator pos:start="246:18" pos:end="246:19">-&gt;</operator><name pos:start="246:20" pos:end="246:33">frame_skip_cmp</name></name> <operator pos:start="246:35" pos:end="246:35">=</operator> <call pos:start="246:37" pos:end="246:49"><name pos:start="246:37" pos:end="246:45">avio_rb32</name><argument_list pos:start="246:46" pos:end="246:49">(<argument pos:start="246:47" pos:end="246:48"><expr pos:start="246:47" pos:end="246:48"><name pos:start="246:47" pos:end="246:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="248:13" pos:end="248:73"><expr pos:start="248:13" pos:end="248:72"><name pos:start="248:13" pos:end="248:41"><name pos:start="248:13" pos:end="248:17">codec</name><operator pos:start="248:18" pos:end="248:19">-&gt;</operator><name pos:start="248:20" pos:end="248:41">rc_buffer_aggressivity</name></name> <operator pos:start="248:43" pos:end="248:43">=</operator> <call pos:start="248:45" pos:end="248:72"><name pos:start="248:45" pos:end="248:57">av_int2double</name><argument_list pos:start="248:58" pos:end="248:72">(<argument pos:start="248:59" pos:end="248:71"><expr pos:start="248:59" pos:end="248:71"><call pos:start="248:59" pos:end="248:71"><name pos:start="248:59" pos:end="248:67">avio_rb64</name><argument_list pos:start="248:68" pos:end="248:71">(<argument pos:start="248:69" pos:end="248:70"><expr pos:start="248:69" pos:end="248:70"><name pos:start="248:69" pos:end="248:70">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="250:13" pos:end="250:45"><expr pos:start="250:13" pos:end="250:44"><name pos:start="250:13" pos:end="250:28"><name pos:start="250:13" pos:end="250:17">codec</name><operator pos:start="250:18" pos:end="250:19">-&gt;</operator><name pos:start="250:20" pos:end="250:28">codec_tag</name></name> <operator pos:start="250:30" pos:end="250:30">=</operator> <call pos:start="250:32" pos:end="250:44"><name pos:start="250:32" pos:end="250:40">avio_rb32</name><argument_list pos:start="250:41" pos:end="250:44">(<argument pos:start="250:42" pos:end="250:43"><expr pos:start="250:42" pos:end="250:43"><name pos:start="250:42" pos:end="250:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="252:13" pos:end="252:46"><expr pos:start="252:13" pos:end="252:45"><name pos:start="252:13" pos:end="252:31"><name pos:start="252:13" pos:end="252:17">codec</name><operator pos:start="252:18" pos:end="252:19">-&gt;</operator><name pos:start="252:20" pos:end="252:31">thread_count</name></name> <operator pos:start="252:33" pos:end="252:33">=</operator> <call pos:start="252:35" pos:end="252:45"><name pos:start="252:35" pos:end="252:41">avio_r8</name><argument_list pos:start="252:42" pos:end="252:45">(<argument pos:start="252:43" pos:end="252:44"><expr pos:start="252:43" pos:end="252:44"><name pos:start="252:43" pos:end="252:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="254:13" pos:end="254:46"><expr pos:start="254:13" pos:end="254:45"><name pos:start="254:13" pos:end="254:29"><name pos:start="254:13" pos:end="254:17">codec</name><operator pos:start="254:18" pos:end="254:19">-&gt;</operator><name pos:start="254:20" pos:end="254:29">coder_type</name></name> <operator pos:start="254:31" pos:end="254:31">=</operator> <call pos:start="254:33" pos:end="254:45"><name pos:start="254:33" pos:end="254:41">avio_rb32</name><argument_list pos:start="254:42" pos:end="254:45">(<argument pos:start="254:43" pos:end="254:44"><expr pos:start="254:43" pos:end="254:44"><name pos:start="254:43" pos:end="254:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="256:13" pos:end="256:42"><expr pos:start="256:13" pos:end="256:41"><name pos:start="256:13" pos:end="256:25"><name pos:start="256:13" pos:end="256:17">codec</name><operator pos:start="256:18" pos:end="256:19">-&gt;</operator><name pos:start="256:20" pos:end="256:25">me_cmp</name></name> <operator pos:start="256:27" pos:end="256:27">=</operator> <call pos:start="256:29" pos:end="256:41"><name pos:start="256:29" pos:end="256:37">avio_rb32</name><argument_list pos:start="256:38" pos:end="256:41">(<argument pos:start="256:39" pos:end="256:40"><expr pos:start="256:39" pos:end="256:40"><name pos:start="256:39" pos:end="256:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="258:13" pos:end="258:53"><expr pos:start="258:13" pos:end="258:52"><name pos:start="258:13" pos:end="258:36"><name pos:start="258:13" pos:end="258:17">codec</name><operator pos:start="258:18" pos:end="258:19">-&gt;</operator><name pos:start="258:20" pos:end="258:36">me_subpel_quality</name></name> <operator pos:start="258:38" pos:end="258:38">=</operator> <call pos:start="258:40" pos:end="258:52"><name pos:start="258:40" pos:end="258:48">avio_rb32</name><argument_list pos:start="258:49" pos:end="258:52">(<argument pos:start="258:50" pos:end="258:51"><expr pos:start="258:50" pos:end="258:51"><name pos:start="258:50" pos:end="258:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="260:13" pos:end="260:44"><expr pos:start="260:13" pos:end="260:43"><name pos:start="260:13" pos:end="260:27"><name pos:start="260:13" pos:end="260:17">codec</name><operator pos:start="260:18" pos:end="260:19">-&gt;</operator><name pos:start="260:20" pos:end="260:27">me_range</name></name> <operator pos:start="260:29" pos:end="260:29">=</operator> <call pos:start="260:31" pos:end="260:43"><name pos:start="260:31" pos:end="260:39">avio_rb32</name><argument_list pos:start="260:40" pos:end="260:43">(<argument pos:start="260:41" pos:end="260:42"><expr pos:start="260:41" pos:end="260:42"><name pos:start="260:41" pos:end="260:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="262:13" pos:end="262:46"><expr pos:start="262:13" pos:end="262:45"><name pos:start="262:13" pos:end="262:29"><name pos:start="262:13" pos:end="262:17">codec</name><operator pos:start="262:18" pos:end="262:19">-&gt;</operator><name pos:start="262:20" pos:end="262:29">keyint_min</name></name> <operator pos:start="262:31" pos:end="262:31">=</operator> <call pos:start="262:33" pos:end="262:45"><name pos:start="262:33" pos:end="262:41">avio_rb32</name><argument_list pos:start="262:42" pos:end="262:45">(<argument pos:start="262:43" pos:end="262:44"><expr pos:start="262:43" pos:end="262:44"><name pos:start="262:43" pos:end="262:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="264:13" pos:end="264:57"><expr pos:start="264:13" pos:end="264:56"><name pos:start="264:13" pos:end="264:40"><name pos:start="264:13" pos:end="264:17">codec</name><operator pos:start="264:18" pos:end="264:19">-&gt;</operator><name pos:start="264:20" pos:end="264:40">scenechange_threshold</name></name> <operator pos:start="264:42" pos:end="264:42">=</operator> <call pos:start="264:44" pos:end="264:56"><name pos:start="264:44" pos:end="264:52">avio_rb32</name><argument_list pos:start="264:53" pos:end="264:56">(<argument pos:start="264:54" pos:end="264:55"><expr pos:start="264:54" pos:end="264:55"><name pos:start="264:54" pos:end="264:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="266:13" pos:end="266:52"><expr pos:start="266:13" pos:end="266:51"><name pos:start="266:13" pos:end="266:35"><name pos:start="266:13" pos:end="266:17">codec</name><operator pos:start="266:18" pos:end="266:19">-&gt;</operator><name pos:start="266:20" pos:end="266:35">b_frame_strategy</name></name> <operator pos:start="266:37" pos:end="266:37">=</operator> <call pos:start="266:39" pos:end="266:51"><name pos:start="266:39" pos:end="266:47">avio_rb32</name><argument_list pos:start="266:48" pos:end="266:51">(<argument pos:start="266:49" pos:end="266:50"><expr pos:start="266:49" pos:end="266:50"><name pos:start="266:49" pos:end="266:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="268:13" pos:end="268:60"><expr pos:start="268:13" pos:end="268:59"><name pos:start="268:13" pos:end="268:28"><name pos:start="268:13" pos:end="268:17">codec</name><operator pos:start="268:18" pos:end="268:19">-&gt;</operator><name pos:start="268:20" pos:end="268:28">qcompress</name></name> <operator pos:start="268:30" pos:end="268:30">=</operator> <call pos:start="268:32" pos:end="268:59"><name pos:start="268:32" pos:end="268:44">av_int2double</name><argument_list pos:start="268:45" pos:end="268:59">(<argument pos:start="268:46" pos:end="268:58"><expr pos:start="268:46" pos:end="268:58"><call pos:start="268:46" pos:end="268:58"><name pos:start="268:46" pos:end="268:54">avio_rb64</name><argument_list pos:start="268:55" pos:end="268:58">(<argument pos:start="268:56" pos:end="268:57"><expr pos:start="268:56" pos:end="268:57"><name pos:start="268:56" pos:end="268:57">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="270:13" pos:end="270:56"><expr pos:start="270:13" pos:end="270:55"><name pos:start="270:13" pos:end="270:24"><name pos:start="270:13" pos:end="270:17">codec</name><operator pos:start="270:18" pos:end="270:19">-&gt;</operator><name pos:start="270:20" pos:end="270:24">qblur</name></name> <operator pos:start="270:26" pos:end="270:26">=</operator> <call pos:start="270:28" pos:end="270:55"><name pos:start="270:28" pos:end="270:40">av_int2double</name><argument_list pos:start="270:41" pos:end="270:55">(<argument pos:start="270:42" pos:end="270:54"><expr pos:start="270:42" pos:end="270:54"><call pos:start="270:42" pos:end="270:54"><name pos:start="270:42" pos:end="270:50">avio_rb64</name><argument_list pos:start="270:51" pos:end="270:54">(<argument pos:start="270:52" pos:end="270:53"><expr pos:start="270:52" pos:end="270:53"><name pos:start="270:52" pos:end="270:53">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="272:13" pos:end="272:45"><expr pos:start="272:13" pos:end="272:44"><name pos:start="272:13" pos:end="272:28"><name pos:start="272:13" pos:end="272:17">codec</name><operator pos:start="272:18" pos:end="272:19">-&gt;</operator><name pos:start="272:20" pos:end="272:28">max_qdiff</name></name> <operator pos:start="272:30" pos:end="272:30">=</operator> <call pos:start="272:32" pos:end="272:44"><name pos:start="272:32" pos:end="272:40">avio_rb32</name><argument_list pos:start="272:41" pos:end="272:44">(<argument pos:start="272:42" pos:end="272:43"><expr pos:start="272:42" pos:end="272:43"><name pos:start="272:42" pos:end="272:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="274:13" pos:end="274:40"><expr pos:start="274:13" pos:end="274:39"><name pos:start="274:13" pos:end="274:23"><name pos:start="274:13" pos:end="274:17">codec</name><operator pos:start="274:18" pos:end="274:19">-&gt;</operator><name pos:start="274:20" pos:end="274:23">refs</name></name> <operator pos:start="274:25" pos:end="274:25">=</operator> <call pos:start="274:27" pos:end="274:39"><name pos:start="274:27" pos:end="274:35">avio_rb32</name><argument_list pos:start="274:36" pos:end="274:39">(<argument pos:start="274:37" pos:end="274:38"><expr pos:start="274:37" pos:end="274:38"><name pos:start="274:37" pos:end="274:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="276:13" pos:end="276:18">break;</break>

        <case pos:start="278:9" pos:end="278:41">case <expr pos:start="278:14" pos:end="278:40"><call pos:start="278:14" pos:end="278:40"><name pos:start="278:14" pos:end="278:20">MKBETAG</name><argument_list pos:start="278:21" pos:end="278:40">(<argument pos:start="278:22" pos:end="278:24"><expr pos:start="278:22" pos:end="278:24"><literal type="char" pos:start="278:22" pos:end="278:24">'S'</literal></expr></argument>, <argument pos:start="278:27" pos:end="278:29"><expr pos:start="278:27" pos:end="278:29"><literal type="char" pos:start="278:27" pos:end="278:29">'T'</literal></expr></argument>, <argument pos:start="278:32" pos:end="278:34"><expr pos:start="278:32" pos:end="278:34"><literal type="char" pos:start="278:32" pos:end="278:34">'A'</literal></expr></argument>, <argument pos:start="278:37" pos:end="278:39"><expr pos:start="278:37" pos:end="278:39"><literal type="char" pos:start="278:37" pos:end="278:39">'U'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="280:13" pos:end="412:15"><if pos:start="280:13" pos:end="412:15">if <condition pos:start="280:16" pos:end="280:25">(<expr pos:start="280:17" pos:end="280:24"><name pos:start="280:17" pos:end="280:22">f_stau</name><operator pos:start="280:23" pos:end="280:24">++</operator></expr>)</condition> <block pos:start="280:27" pos:end="412:15">{<block_content pos:start="282:17" pos:end="412:15">

                <expr_stmt pos:start="282:17" pos:end="282:38"><expr pos:start="282:17" pos:end="282:37"><name pos:start="282:17" pos:end="282:19">ret</name> <operator pos:start="282:21" pos:end="282:21">=</operator> <call pos:start="282:23" pos:end="282:37"><name pos:start="282:23" pos:end="282:29">AVERROR</name><argument_list pos:start="282:30" pos:end="282:37">(<argument pos:start="282:31" pos:end="282:36"><expr pos:start="282:31" pos:end="282:36"><name pos:start="282:31" pos:end="282:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="286:13" pos:end="286:47"><expr pos:start="286:13" pos:end="286:46"><name pos:start="286:13" pos:end="286:30"><name pos:start="286:13" pos:end="286:17">codec</name><operator pos:start="286:18" pos:end="286:19">-&gt;</operator><name pos:start="286:20" pos:end="286:30">sample_rate</name></name> <operator pos:start="286:32" pos:end="286:32">=</operator> <call pos:start="286:34" pos:end="286:46"><name pos:start="286:34" pos:end="286:42">avio_rb32</name><argument_list pos:start="286:43" pos:end="286:46">(<argument pos:start="286:44" pos:end="286:45"><expr pos:start="286:44" pos:end="286:45"><name pos:start="286:44" pos:end="286:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="288:13" pos:end="288:44"><expr pos:start="288:13" pos:end="288:43"><name pos:start="288:13" pos:end="288:27"><name pos:start="288:13" pos:end="288:17">codec</name><operator pos:start="288:18" pos:end="288:19">-&gt;</operator><name pos:start="288:20" pos:end="288:27">channels</name></name> <operator pos:start="288:29" pos:end="288:29">=</operator> <call pos:start="288:31" pos:end="288:43"><name pos:start="288:31" pos:end="288:39">avio_rl16</name><argument_list pos:start="288:40" pos:end="288:43">(<argument pos:start="288:41" pos:end="288:42"><expr pos:start="288:41" pos:end="288:42"><name pos:start="288:41" pos:end="288:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="290:13" pos:end="290:46"><expr pos:start="290:13" pos:end="290:45"><name pos:start="290:13" pos:end="290:29"><name pos:start="290:13" pos:end="290:17">codec</name><operator pos:start="290:18" pos:end="290:19">-&gt;</operator><name pos:start="290:20" pos:end="290:29">frame_size</name></name> <operator pos:start="290:31" pos:end="290:31">=</operator> <call pos:start="290:33" pos:end="290:45"><name pos:start="290:33" pos:end="290:41">avio_rl16</name><argument_list pos:start="290:42" pos:end="290:45">(<argument pos:start="290:43" pos:end="290:44"><expr pos:start="290:43" pos:end="290:44"><name pos:start="290:43" pos:end="290:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="292:13" pos:end="292:18">break;</break>

        <case pos:start="294:9" pos:end="294:41">case <expr pos:start="294:14" pos:end="294:40"><call pos:start="294:14" pos:end="294:40"><name pos:start="294:14" pos:end="294:20">MKBETAG</name><argument_list pos:start="294:21" pos:end="294:40">(<argument pos:start="294:22" pos:end="294:24"><expr pos:start="294:22" pos:end="294:24"><literal type="char" pos:start="294:22" pos:end="294:24">'C'</literal></expr></argument>, <argument pos:start="294:27" pos:end="294:29"><expr pos:start="294:27" pos:end="294:29"><literal type="char" pos:start="294:27" pos:end="294:29">'P'</literal></expr></argument>, <argument pos:start="294:32" pos:end="294:34"><expr pos:start="294:32" pos:end="294:34"><literal type="char" pos:start="294:32" pos:end="294:34">'R'</literal></expr></argument>, <argument pos:start="294:37" pos:end="294:39"><expr pos:start="294:37" pos:end="294:39"><literal type="char" pos:start="294:37" pos:end="294:39">'V'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="296:13" pos:end="412:15"><if pos:start="296:13" pos:end="412:15">if <condition pos:start="296:16" pos:end="296:25">(<expr pos:start="296:17" pos:end="296:24"><name pos:start="296:17" pos:end="296:22">f_cprv</name><operator pos:start="296:23" pos:end="296:24">++</operator></expr>)</condition> <block pos:start="296:27" pos:end="412:15">{<block_content pos:start="298:17" pos:end="412:15">

                <expr_stmt pos:start="298:17" pos:end="298:38"><expr pos:start="298:17" pos:end="298:37"><name pos:start="298:17" pos:end="298:19">ret</name> <operator pos:start="298:21" pos:end="298:21">=</operator> <call pos:start="298:23" pos:end="298:37"><name pos:start="298:23" pos:end="298:29">AVERROR</name><argument_list pos:start="298:30" pos:end="298:37">(<argument pos:start="298:31" pos:end="298:36"><expr pos:start="298:31" pos:end="298:36"><name pos:start="298:31" pos:end="298:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="302:13" pos:end="302:56"><expr pos:start="302:13" pos:end="302:55"><name pos:start="302:13" pos:end="302:15">enc</name> <operator pos:start="302:17" pos:end="302:17">=</operator> <call pos:start="302:19" pos:end="302:55"><name pos:start="302:19" pos:end="302:38">avcodec_find_encoder</name><argument_list pos:start="302:39" pos:end="302:55">(<argument pos:start="302:40" pos:end="302:54"><expr pos:start="302:40" pos:end="302:54"><name pos:start="302:40" pos:end="302:54"><name pos:start="302:40" pos:end="302:44">codec</name><operator pos:start="302:45" pos:end="302:46">-&gt;</operator><name pos:start="302:47" pos:end="302:54">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="304:13" pos:end="412:15"><if pos:start="304:13" pos:end="412:15">if <condition pos:start="304:16" pos:end="304:62">(<expr pos:start="304:17" pos:end="304:61"><name pos:start="304:17" pos:end="304:19">enc</name> <operator pos:start="304:21" pos:end="304:22">&amp;&amp;</operator> <name pos:start="304:24" pos:end="304:42"><name pos:start="304:24" pos:end="304:26">enc</name><operator pos:start="304:27" pos:end="304:28">-&gt;</operator><name pos:start="304:29" pos:end="304:42">priv_data_size</name></name> <operator pos:start="304:44" pos:end="304:45">&amp;&amp;</operator> <name pos:start="304:47" pos:end="304:61"><name pos:start="304:47" pos:end="304:49">enc</name><operator pos:start="304:50" pos:end="304:51">-&gt;</operator><name pos:start="304:52" pos:end="304:61">priv_class</name></name></expr>)</condition> <block pos:start="304:64" pos:end="412:15">{<block_content pos:start="306:17" pos:end="412:15">

                <expr_stmt pos:start="306:17" pos:end="306:45"><expr pos:start="306:17" pos:end="306:44"><name pos:start="306:17" pos:end="306:22">buffer</name> <operator pos:start="306:24" pos:end="306:24">=</operator> <call pos:start="306:26" pos:end="306:44"><name pos:start="306:26" pos:end="306:34">av_malloc</name><argument_list pos:start="306:35" pos:end="306:44">(<argument pos:start="306:36" pos:end="306:43"><expr pos:start="306:36" pos:end="306:43"><name pos:start="306:36" pos:end="306:39">size</name> <operator pos:start="306:41" pos:end="306:41">+</operator> <literal type="number" pos:start="306:43" pos:end="306:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="308:17" pos:end="412:15"><if pos:start="308:17" pos:end="412:15">if <condition pos:start="308:20" pos:end="308:28">(<expr pos:start="308:21" pos:end="308:27"><operator pos:start="308:21" pos:end="308:21">!</operator><name pos:start="308:22" pos:end="308:27">buffer</name></expr>)</condition> <block pos:start="308:30" pos:end="412:15">{<block_content pos:start="310:21" pos:end="412:15">

                    <expr_stmt pos:start="310:21" pos:end="310:42"><expr pos:start="310:21" pos:end="310:41"><name pos:start="310:21" pos:end="310:23">ret</name> <operator pos:start="310:25" pos:end="310:25">=</operator> <call pos:start="310:27" pos:end="310:41"><name pos:start="310:27" pos:end="310:33">AVERROR</name><argument_list pos:start="310:34" pos:end="310:41">(<argument pos:start="310:35" pos:end="310:40"><expr pos:start="310:35" pos:end="310:40"><name pos:start="310:35" pos:end="310:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="314:17" pos:end="314:57"><expr pos:start="314:17" pos:end="314:56"><call pos:start="314:17" pos:end="314:56"><name pos:start="314:17" pos:end="314:28">avio_get_str</name><argument_list pos:start="314:29" pos:end="314:56">(<argument pos:start="314:30" pos:end="314:31"><expr pos:start="314:30" pos:end="314:31"><name pos:start="314:30" pos:end="314:31">pb</name></expr></argument>, <argument pos:start="314:34" pos:end="314:37"><expr pos:start="314:34" pos:end="314:37"><name pos:start="314:34" pos:end="314:37">size</name></expr></argument>, <argument pos:start="314:40" pos:end="314:45"><expr pos:start="314:40" pos:end="314:45"><name pos:start="314:40" pos:end="314:45">buffer</name></expr></argument>, <argument pos:start="314:48" pos:end="314:55"><expr pos:start="314:48" pos:end="314:55"><name pos:start="314:48" pos:end="314:51">size</name> <operator pos:start="314:53" pos:end="314:53">+</operator> <literal type="number" pos:start="314:55" pos:end="314:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="316:17" pos:end="320:18"><if pos:start="316:17" pos:end="320:18">if <condition pos:start="316:20" pos:end="316:82">(<expr pos:start="316:21" pos:end="316:81"><operator pos:start="316:21" pos:end="316:21">(</operator><name pos:start="316:22" pos:end="316:24">ret</name> <operator pos:start="316:26" pos:end="316:26">=</operator> <call pos:start="316:28" pos:end="316:76"><name pos:start="316:28" pos:end="316:63">ffm_append_recommended_configuration</name><argument_list pos:start="316:64" pos:end="316:76">(<argument pos:start="316:65" pos:end="316:66"><expr pos:start="316:65" pos:end="316:66"><name pos:start="316:65" pos:end="316:66">st</name></expr></argument>, <argument pos:start="316:69" pos:end="316:75"><expr pos:start="316:69" pos:end="316:75"><operator pos:start="316:69" pos:end="316:69">&amp;</operator><name pos:start="316:70" pos:end="316:75">buffer</name></expr></argument>)</argument_list></call><operator pos:start="316:77" pos:end="316:77">)</operator> <operator pos:start="316:79" pos:end="316:79">&lt;</operator> <literal type="number" pos:start="316:81" pos:end="316:81">0</literal></expr>)</condition><block type="pseudo" pos:start="320:13" pos:end="320:18"><block_content pos:start="320:13" pos:end="320:18">



            <break pos:start="320:13" pos:end="320:18">break;</break></block_content></block></if></if_stmt>

        <case pos:start="322:9" pos:end="322:41">case <expr pos:start="322:14" pos:end="322:40"><call pos:start="322:14" pos:end="322:40"><name pos:start="322:14" pos:end="322:20">MKBETAG</name><argument_list pos:start="322:21" pos:end="322:40">(<argument pos:start="322:22" pos:end="322:24"><expr pos:start="322:22" pos:end="322:24"><literal type="char" pos:start="322:22" pos:end="322:24">'S'</literal></expr></argument>, <argument pos:start="322:27" pos:end="322:29"><expr pos:start="322:27" pos:end="322:29"><literal type="char" pos:start="322:27" pos:end="322:29">'2'</literal></expr></argument>, <argument pos:start="322:32" pos:end="322:34"><expr pos:start="322:32" pos:end="322:34"><literal type="char" pos:start="322:32" pos:end="322:34">'V'</literal></expr></argument>, <argument pos:start="322:37" pos:end="322:39"><expr pos:start="322:37" pos:end="322:39"><literal type="char" pos:start="322:37" pos:end="322:39">'I'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="324:13" pos:end="412:15"><if pos:start="324:13" pos:end="412:15">if <condition pos:start="324:16" pos:end="324:34">(<expr pos:start="324:17" pos:end="324:33"><name pos:start="324:17" pos:end="324:22">f_stvi</name><operator pos:start="324:23" pos:end="324:24">++</operator> <operator pos:start="324:26" pos:end="324:27">||</operator> <operator pos:start="324:29" pos:end="324:29">!</operator><name pos:start="324:30" pos:end="324:33">size</name></expr>)</condition> <block pos:start="324:36" pos:end="412:15">{<block_content pos:start="326:17" pos:end="412:15">

                <expr_stmt pos:start="326:17" pos:end="326:38"><expr pos:start="326:17" pos:end="326:37"><name pos:start="326:17" pos:end="326:19">ret</name> <operator pos:start="326:21" pos:end="326:21">=</operator> <call pos:start="326:23" pos:end="326:37"><name pos:start="326:23" pos:end="326:29">AVERROR</name><argument_list pos:start="326:30" pos:end="326:37">(<argument pos:start="326:31" pos:end="326:36"><expr pos:start="326:31" pos:end="326:36"><name pos:start="326:31" pos:end="326:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="330:13" pos:end="330:37"><expr pos:start="330:13" pos:end="330:36"><name pos:start="330:13" pos:end="330:18">buffer</name> <operator pos:start="330:20" pos:end="330:20">=</operator> <call pos:start="330:22" pos:end="330:36"><name pos:start="330:22" pos:end="330:30">av_malloc</name><argument_list pos:start="330:31" pos:end="330:36">(<argument pos:start="330:32" pos:end="330:35"><expr pos:start="330:32" pos:end="330:35"><name pos:start="330:32" pos:end="330:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="332:13" pos:end="412:15"><if pos:start="332:13" pos:end="412:15">if <condition pos:start="332:16" pos:end="332:24">(<expr pos:start="332:17" pos:end="332:23"><operator pos:start="332:17" pos:end="332:17">!</operator><name pos:start="332:18" pos:end="332:23">buffer</name></expr>)</condition> <block pos:start="332:26" pos:end="412:15">{<block_content pos:start="334:17" pos:end="412:15">

                <expr_stmt pos:start="334:17" pos:end="334:38"><expr pos:start="334:17" pos:end="334:37"><name pos:start="334:17" pos:end="334:19">ret</name> <operator pos:start="334:21" pos:end="334:21">=</operator> <call pos:start="334:23" pos:end="334:37"><name pos:start="334:23" pos:end="334:29">AVERROR</name><argument_list pos:start="334:30" pos:end="334:37">(<argument pos:start="334:31" pos:end="334:36"><expr pos:start="334:31" pos:end="334:36"><name pos:start="334:31" pos:end="334:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="338:13" pos:end="338:52"><expr pos:start="338:13" pos:end="338:51"><call pos:start="338:13" pos:end="338:51"><name pos:start="338:13" pos:end="338:24">avio_get_str</name><argument_list pos:start="338:25" pos:end="338:51">(<argument pos:start="338:26" pos:end="338:27"><expr pos:start="338:26" pos:end="338:27"><name pos:start="338:26" pos:end="338:27">pb</name></expr></argument>, <argument pos:start="338:30" pos:end="338:36"><expr pos:start="338:30" pos:end="338:36"><name pos:start="338:30" pos:end="338:36">INT_MAX</name></expr></argument>, <argument pos:start="338:39" pos:end="338:44"><expr pos:start="338:39" pos:end="338:44"><name pos:start="338:39" pos:end="338:44">buffer</name></expr></argument>, <argument pos:start="338:47" pos:end="338:50"><expr pos:start="338:47" pos:end="338:50"><name pos:start="338:47" pos:end="338:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="340:13" pos:end="340:59"><expr pos:start="340:13" pos:end="340:58"><call pos:start="340:13" pos:end="340:58"><name pos:start="340:13" pos:end="340:33">av_set_options_string</name><argument_list pos:start="340:34" pos:end="340:58">(<argument pos:start="340:35" pos:end="340:39"><expr pos:start="340:35" pos:end="340:39"><name pos:start="340:35" pos:end="340:39">codec</name></expr></argument>, <argument pos:start="340:42" pos:end="340:47"><expr pos:start="340:42" pos:end="340:47"><name pos:start="340:42" pos:end="340:47">buffer</name></expr></argument>, <argument pos:start="340:50" pos:end="340:52"><expr pos:start="340:50" pos:end="340:52"><literal type="string" pos:start="340:50" pos:end="340:52">"="</literal></expr></argument>, <argument pos:start="340:55" pos:end="340:57"><expr pos:start="340:55" pos:end="340:57"><literal type="string" pos:start="340:55" pos:end="340:57">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="342:13" pos:end="345:18"><if pos:start="342:13" pos:end="345:18">if <condition pos:start="342:16" pos:end="342:78">(<expr pos:start="342:17" pos:end="342:77"><operator pos:start="342:17" pos:end="342:17">(</operator><name pos:start="342:18" pos:end="342:20">ret</name> <operator pos:start="342:22" pos:end="342:22">=</operator> <call pos:start="342:24" pos:end="342:72"><name pos:start="342:24" pos:end="342:59">ffm_append_recommended_configuration</name><argument_list pos:start="342:60" pos:end="342:72">(<argument pos:start="342:61" pos:end="342:62"><expr pos:start="342:61" pos:end="342:62"><name pos:start="342:61" pos:end="342:62">st</name></expr></argument>, <argument pos:start="342:65" pos:end="342:71"><expr pos:start="342:65" pos:end="342:71"><operator pos:start="342:65" pos:end="342:65">&amp;</operator><name pos:start="342:66" pos:end="342:71">buffer</name></expr></argument>)</argument_list></call><operator pos:start="342:73" pos:end="342:73">)</operator> <operator pos:start="342:75" pos:end="342:75">&lt;</operator> <literal type="number" pos:start="342:77" pos:end="342:77">0</literal></expr>)</condition><block type="pseudo" pos:start="345:13" pos:end="345:18"><block_content pos:start="345:13" pos:end="345:18">


            <break pos:start="345:13" pos:end="345:18">break;</break></block_content></block></if></if_stmt>

        <case pos:start="347:9" pos:end="347:41">case <expr pos:start="347:14" pos:end="347:40"><call pos:start="347:14" pos:end="347:40"><name pos:start="347:14" pos:end="347:20">MKBETAG</name><argument_list pos:start="347:21" pos:end="347:40">(<argument pos:start="347:22" pos:end="347:24"><expr pos:start="347:22" pos:end="347:24"><literal type="char" pos:start="347:22" pos:end="347:24">'S'</literal></expr></argument>, <argument pos:start="347:27" pos:end="347:29"><expr pos:start="347:27" pos:end="347:29"><literal type="char" pos:start="347:27" pos:end="347:29">'2'</literal></expr></argument>, <argument pos:start="347:32" pos:end="347:34"><expr pos:start="347:32" pos:end="347:34"><literal type="char" pos:start="347:32" pos:end="347:34">'A'</literal></expr></argument>, <argument pos:start="347:37" pos:end="347:39"><expr pos:start="347:37" pos:end="347:39"><literal type="char" pos:start="347:37" pos:end="347:39">'U'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="349:13" pos:end="412:15"><if pos:start="349:13" pos:end="412:15">if <condition pos:start="349:16" pos:end="349:34">(<expr pos:start="349:17" pos:end="349:33"><name pos:start="349:17" pos:end="349:22">f_stau</name><operator pos:start="349:23" pos:end="349:24">++</operator> <operator pos:start="349:26" pos:end="349:27">||</operator> <operator pos:start="349:29" pos:end="349:29">!</operator><name pos:start="349:30" pos:end="349:33">size</name></expr>)</condition> <block pos:start="349:36" pos:end="412:15">{<block_content pos:start="351:17" pos:end="412:15">

                <expr_stmt pos:start="351:17" pos:end="351:38"><expr pos:start="351:17" pos:end="351:37"><name pos:start="351:17" pos:end="351:19">ret</name> <operator pos:start="351:21" pos:end="351:21">=</operator> <call pos:start="351:23" pos:end="351:37"><name pos:start="351:23" pos:end="351:29">AVERROR</name><argument_list pos:start="351:30" pos:end="351:37">(<argument pos:start="351:31" pos:end="351:36"><expr pos:start="351:31" pos:end="351:36"><name pos:start="351:31" pos:end="351:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="355:13" pos:end="355:37"><expr pos:start="355:13" pos:end="355:36"><name pos:start="355:13" pos:end="355:18">buffer</name> <operator pos:start="355:20" pos:end="355:20">=</operator> <call pos:start="355:22" pos:end="355:36"><name pos:start="355:22" pos:end="355:30">av_malloc</name><argument_list pos:start="355:31" pos:end="355:36">(<argument pos:start="355:32" pos:end="355:35"><expr pos:start="355:32" pos:end="355:35"><name pos:start="355:32" pos:end="355:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="357:13" pos:end="412:15"><if pos:start="357:13" pos:end="412:15">if <condition pos:start="357:16" pos:end="357:24">(<expr pos:start="357:17" pos:end="357:23"><operator pos:start="357:17" pos:end="357:17">!</operator><name pos:start="357:18" pos:end="357:23">buffer</name></expr>)</condition> <block pos:start="357:26" pos:end="412:15">{<block_content pos:start="359:17" pos:end="412:15">

                <expr_stmt pos:start="359:17" pos:end="359:38"><expr pos:start="359:17" pos:end="359:37"><name pos:start="359:17" pos:end="359:19">ret</name> <operator pos:start="359:21" pos:end="359:21">=</operator> <call pos:start="359:23" pos:end="359:37"><name pos:start="359:23" pos:end="359:29">AVERROR</name><argument_list pos:start="359:30" pos:end="359:37">(<argument pos:start="359:31" pos:end="359:36"><expr pos:start="359:31" pos:end="359:36"><name pos:start="359:31" pos:end="359:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="363:13" pos:end="363:52"><expr pos:start="363:13" pos:end="363:51"><call pos:start="363:13" pos:end="363:51"><name pos:start="363:13" pos:end="363:24">avio_get_str</name><argument_list pos:start="363:25" pos:end="363:51">(<argument pos:start="363:26" pos:end="363:27"><expr pos:start="363:26" pos:end="363:27"><name pos:start="363:26" pos:end="363:27">pb</name></expr></argument>, <argument pos:start="363:30" pos:end="363:36"><expr pos:start="363:30" pos:end="363:36"><name pos:start="363:30" pos:end="363:36">INT_MAX</name></expr></argument>, <argument pos:start="363:39" pos:end="363:44"><expr pos:start="363:39" pos:end="363:44"><name pos:start="363:39" pos:end="363:44">buffer</name></expr></argument>, <argument pos:start="363:47" pos:end="363:50"><expr pos:start="363:47" pos:end="363:50"><name pos:start="363:47" pos:end="363:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:59"><expr pos:start="365:13" pos:end="365:58"><call pos:start="365:13" pos:end="365:58"><name pos:start="365:13" pos:end="365:33">av_set_options_string</name><argument_list pos:start="365:34" pos:end="365:58">(<argument pos:start="365:35" pos:end="365:39"><expr pos:start="365:35" pos:end="365:39"><name pos:start="365:35" pos:end="365:39">codec</name></expr></argument>, <argument pos:start="365:42" pos:end="365:47"><expr pos:start="365:42" pos:end="365:47"><name pos:start="365:42" pos:end="365:47">buffer</name></expr></argument>, <argument pos:start="365:50" pos:end="365:52"><expr pos:start="365:50" pos:end="365:52"><literal type="string" pos:start="365:50" pos:end="365:52">"="</literal></expr></argument>, <argument pos:start="365:55" pos:end="365:57"><expr pos:start="365:55" pos:end="365:57"><literal type="string" pos:start="365:55" pos:end="365:57">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="367:13" pos:end="370:18"><if pos:start="367:13" pos:end="370:18">if <condition pos:start="367:16" pos:end="367:78">(<expr pos:start="367:17" pos:end="367:77"><operator pos:start="367:17" pos:end="367:17">(</operator><name pos:start="367:18" pos:end="367:20">ret</name> <operator pos:start="367:22" pos:end="367:22">=</operator> <call pos:start="367:24" pos:end="367:72"><name pos:start="367:24" pos:end="367:59">ffm_append_recommended_configuration</name><argument_list pos:start="367:60" pos:end="367:72">(<argument pos:start="367:61" pos:end="367:62"><expr pos:start="367:61" pos:end="367:62"><name pos:start="367:61" pos:end="367:62">st</name></expr></argument>, <argument pos:start="367:65" pos:end="367:71"><expr pos:start="367:65" pos:end="367:71"><operator pos:start="367:65" pos:end="367:65">&amp;</operator><name pos:start="367:66" pos:end="367:71">buffer</name></expr></argument>)</argument_list></call><operator pos:start="367:73" pos:end="367:73">)</operator> <operator pos:start="367:75" pos:end="367:75">&lt;</operator> <literal type="number" pos:start="367:77" pos:end="367:77">0</literal></expr>)</condition><block type="pseudo" pos:start="370:13" pos:end="370:18"><block_content pos:start="370:13" pos:end="370:18">


            <break pos:start="370:13" pos:end="370:18">break;</break></block_content></block></if></if_stmt>


        <expr_stmt pos:start="373:9" pos:end="373:38"><expr pos:start="373:9" pos:end="373:37"><call pos:start="373:9" pos:end="373:37"><name pos:start="373:9" pos:end="373:17">avio_seek</name><argument_list pos:start="373:18" pos:end="373:37">(<argument pos:start="373:19" pos:end="373:20"><expr pos:start="373:19" pos:end="373:20"><name pos:start="373:19" pos:end="373:20">pb</name></expr></argument>, <argument pos:start="373:23" pos:end="373:26"><expr pos:start="373:23" pos:end="373:26"><name pos:start="373:23" pos:end="373:26">next</name></expr></argument>, <argument pos:start="373:29" pos:end="373:36"><expr pos:start="373:29" pos:end="373:36"><name pos:start="373:29" pos:end="373:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <for pos:start="378:5" pos:end="380:87">for <control pos:start="378:9" pos:end="378:39">(<init pos:start="378:10" pos:end="378:15"><expr pos:start="378:10" pos:end="378:14"><name pos:start="378:10" pos:end="378:10">i</name> <operator pos:start="378:12" pos:end="378:12">=</operator> <literal type="number" pos:start="378:14" pos:end="378:14">0</literal></expr>;</init> <condition pos:start="378:17" pos:end="378:34"><expr pos:start="378:17" pos:end="378:33"><name pos:start="378:17" pos:end="378:17">i</name> <operator pos:start="378:19" pos:end="378:19">&lt;</operator> <name pos:start="378:21" pos:end="378:33"><name pos:start="378:21" pos:end="378:21">s</name><operator pos:start="378:22" pos:end="378:23">-&gt;</operator><name pos:start="378:24" pos:end="378:33">nb_streams</name></name></expr>;</condition> <incr pos:start="378:36" pos:end="378:38"><expr pos:start="378:36" pos:end="378:38"><name pos:start="378:36" pos:end="378:36">i</name><operator pos:start="378:37" pos:end="378:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="380:9" pos:end="380:87"><block_content pos:start="380:9" pos:end="380:87">

        <expr_stmt pos:start="380:9" pos:end="380:87"><expr pos:start="380:9" pos:end="380:86"><call pos:start="380:9" pos:end="380:86"><name pos:start="380:9" pos:end="380:39">avcodec_parameters_from_context</name><argument_list pos:start="380:40" pos:end="380:86">(<argument pos:start="380:41" pos:end="380:63"><expr pos:start="380:41" pos:end="380:63"><name pos:start="380:41" pos:end="380:53"><name pos:start="380:41" pos:end="380:41">s</name><operator pos:start="380:42" pos:end="380:43">-&gt;</operator><name pos:start="380:44" pos:end="380:50">streams</name><index pos:start="380:51" pos:end="380:53">[<expr pos:start="380:52" pos:end="380:52"><name pos:start="380:52" pos:end="380:52">i</name></expr>]</index></name><operator pos:start="380:54" pos:end="380:55">-&gt;</operator><name pos:start="380:56" pos:end="380:63">codecpar</name></expr></argument>, <argument pos:start="380:66" pos:end="380:85"><expr pos:start="380:66" pos:end="380:85"><name pos:start="380:66" pos:end="380:78"><name pos:start="380:66" pos:end="380:66">s</name><operator pos:start="380:67" pos:end="380:68">-&gt;</operator><name pos:start="380:69" pos:end="380:75">streams</name><index pos:start="380:76" pos:end="380:78">[<expr pos:start="380:77" pos:end="380:77"><name pos:start="380:77" pos:end="380:77">i</name></expr>]</index></name><operator pos:start="380:79" pos:end="380:80">-&gt;</operator><name pos:start="380:81" pos:end="380:85">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="384:5" pos:end="384:40">/* get until end of block reached */</comment>

    <while pos:start="386:5" pos:end="388:20">while <condition pos:start="386:11" pos:end="386:71">(<expr pos:start="386:12" pos:end="386:70"><operator pos:start="386:12" pos:end="386:12">(</operator><call pos:start="386:13" pos:end="386:25"><name pos:start="386:13" pos:end="386:21">avio_tell</name><argument_list pos:start="386:22" pos:end="386:25">(<argument pos:start="386:23" pos:end="386:24"><expr pos:start="386:23" pos:end="386:24"><name pos:start="386:23" pos:end="386:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="386:27" pos:end="386:27">%</operator> <name pos:start="386:29" pos:end="386:44"><name pos:start="386:29" pos:end="386:31">ffm</name><operator pos:start="386:32" pos:end="386:33">-&gt;</operator><name pos:start="386:34" pos:end="386:44">packet_size</name></name><operator pos:start="386:45" pos:end="386:45">)</operator> <operator pos:start="386:47" pos:end="386:48">!=</operator> <literal type="number" pos:start="386:50" pos:end="386:50">0</literal> <operator pos:start="386:52" pos:end="386:53">&amp;&amp;</operator> <operator pos:start="386:55" pos:end="386:55">!</operator><name pos:start="386:56" pos:end="386:70"><name pos:start="386:56" pos:end="386:57">pb</name><operator pos:start="386:58" pos:end="386:59">-&gt;</operator><name pos:start="386:60" pos:end="386:70">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="388:9" pos:end="388:20"><block_content pos:start="388:9" pos:end="388:20">

        <expr_stmt pos:start="388:9" pos:end="388:20"><expr pos:start="388:9" pos:end="388:19"><call pos:start="388:9" pos:end="388:19"><name pos:start="388:9" pos:end="388:15">avio_r8</name><argument_list pos:start="388:16" pos:end="388:19">(<argument pos:start="388:17" pos:end="388:18"><expr pos:start="388:17" pos:end="388:18"><name pos:start="388:17" pos:end="388:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="392:5" pos:end="392:27">/* init packet demux */</comment>

    <expr_stmt pos:start="394:5" pos:end="394:34"><expr pos:start="394:5" pos:end="394:33"><name pos:start="394:5" pos:end="394:19"><name pos:start="394:5" pos:end="394:7">ffm</name><operator pos:start="394:8" pos:end="394:9">-&gt;</operator><name pos:start="394:10" pos:end="394:19">packet_ptr</name></name> <operator pos:start="394:21" pos:end="394:21">=</operator> <name pos:start="394:23" pos:end="394:33"><name pos:start="394:23" pos:end="394:25">ffm</name><operator pos:start="394:26" pos:end="394:27">-&gt;</operator><name pos:start="394:28" pos:end="394:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="396:5" pos:end="396:34"><expr pos:start="396:5" pos:end="396:33"><name pos:start="396:5" pos:end="396:19"><name pos:start="396:5" pos:end="396:7">ffm</name><operator pos:start="396:8" pos:end="396:9">-&gt;</operator><name pos:start="396:10" pos:end="396:19">packet_end</name></name> <operator pos:start="396:21" pos:end="396:21">=</operator> <name pos:start="396:23" pos:end="396:33"><name pos:start="396:23" pos:end="396:25">ffm</name><operator pos:start="396:26" pos:end="396:27">-&gt;</operator><name pos:start="396:28" pos:end="396:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="398:5" pos:end="398:26"><expr pos:start="398:5" pos:end="398:25"><name pos:start="398:5" pos:end="398:21"><name pos:start="398:5" pos:end="398:7">ffm</name><operator pos:start="398:8" pos:end="398:9">-&gt;</operator><name pos:start="398:10" pos:end="398:21">frame_offset</name></name> <operator pos:start="398:23" pos:end="398:23">=</operator> <literal type="number" pos:start="398:25" pos:end="398:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="400:5" pos:end="400:17"><expr pos:start="400:5" pos:end="400:16"><name pos:start="400:5" pos:end="400:12"><name pos:start="400:5" pos:end="400:7">ffm</name><operator pos:start="400:8" pos:end="400:9">-&gt;</operator><name pos:start="400:10" pos:end="400:12">dts</name></name> <operator pos:start="400:14" pos:end="400:14">=</operator> <literal type="number" pos:start="400:16" pos:end="400:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="402:5" pos:end="402:34"><expr pos:start="402:5" pos:end="402:33"><name pos:start="402:5" pos:end="402:19"><name pos:start="402:5" pos:end="402:7">ffm</name><operator pos:start="402:8" pos:end="402:9">-&gt;</operator><name pos:start="402:10" pos:end="402:19">read_state</name></name> <operator pos:start="402:21" pos:end="402:21">=</operator> <name pos:start="402:23" pos:end="402:33">READ_HEADER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="404:5" pos:end="404:26"><expr pos:start="404:5" pos:end="404:25"><name pos:start="404:5" pos:end="404:21"><name pos:start="404:5" pos:end="404:7">ffm</name><operator pos:start="404:8" pos:end="404:9">-&gt;</operator><name pos:start="404:10" pos:end="404:21">first_packet</name></name> <operator pos:start="404:23" pos:end="404:23">=</operator> <literal type="number" pos:start="404:25" pos:end="404:25">1</literal></expr>;</expr_stmt>

    <return pos:start="406:5" pos:end="406:13">return <expr pos:start="406:12" pos:end="406:12"><literal type="number" pos:start="406:12" pos:end="406:12">0</literal></expr>;</return>

 <label pos:start="408:2" pos:end="408:6"><name pos:start="408:2" pos:end="408:5">fail</name>:</label>

    <expr_stmt pos:start="410:5" pos:end="410:17"><expr pos:start="410:5" pos:end="410:16"><call pos:start="410:5" pos:end="410:16"><name pos:start="410:5" pos:end="410:13">ffm_close</name><argument_list pos:start="410:14" pos:end="410:16">(<argument pos:start="410:15" pos:end="410:15"><expr pos:start="410:15" pos:end="410:15"><name pos:start="410:15" pos:end="410:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="412:5" pos:end="412:15">return <expr pos:start="412:12" pos:end="412:14"><name pos:start="412:12" pos:end="412:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></while></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
