<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20661.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mjpeg_decode_app</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:46">MJpegDecodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:15">id</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:7">len</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:30"><name pos:start="9:11" pos:end="9:18">get_bits</name><argument_list pos:start="9:19" pos:end="9:30">(<argument pos:start="9:20" pos:end="9:25"><expr pos:start="9:20" pos:end="9:25"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:25">gb</name></name></expr></argument>, <argument pos:start="9:28" pos:end="9:29"><expr pos:start="9:28" pos:end="9:29"><literal type="number" pos:start="9:28" pos:end="9:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">len</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">5</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><literal type="number" pos:start="15:9" pos:end="15:9">8</literal> <operator pos:start="15:11" pos:end="15:11">*</operator> <name pos:start="15:13" pos:end="15:15">len</name> <operator pos:start="15:17" pos:end="15:17">&gt;</operator> <call pos:start="15:19" pos:end="15:39"><name pos:start="15:19" pos:end="15:31">get_bits_left</name><argument_list pos:start="15:32" pos:end="15:39">(<argument pos:start="15:33" pos:end="15:38"><expr pos:start="15:33" pos:end="15:38"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:6">id</name>   <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:36"><name pos:start="21:12" pos:end="21:24">get_bits_long</name><argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:31"><expr pos:start="21:26" pos:end="21:31"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:31">gb</name></name></expr></argument>, <argument pos:start="21:34" pos:end="21:35"><expr pos:start="21:34" pos:end="21:35"><literal type="number" pos:start="21:34" pos:end="21:35">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:6">id</name>   <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:21">av_be2ne32</name><argument_list pos:start="23:22" pos:end="23:25">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">len</name> <operator pos:start="25:9" pos:end="25:10">-=</operator> <literal type="number" pos:start="25:12" pos:end="25:12">6</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:57"><if pos:start="29:5" pos:end="31:57">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">avctx</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">debug</name></name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <name pos:start="29:27" pos:end="29:44">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:57"><block_content pos:start="31:9" pos:end="31:57">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:56">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="31:40" pos:end="31:51"><expr pos:start="31:40" pos:end="31:51"><literal type="string" pos:start="31:40" pos:end="31:51">"APPx %8X\n"</literal></expr></argument>, <argument pos:start="31:54" pos:end="31:55"><expr pos:start="31:54" pos:end="31:55"><name pos:start="31:54" pos:end="31:55">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:59">/* Buggy AVID, it puts EOI only at every 10th frame. */</comment>

    <comment type="block" pos:start="37:5" pos:end="39:69">/* Also, this fourcc is used by non-avid files too, it holds some

       information, but it's always present in AVID-created files. */</comment>

    <if_stmt pos:start="41:5" pos:end="77:5"><if pos:start="41:5" pos:end="77:5">if <condition pos:start="41:8" pos:end="41:30">(<expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:10">id</name> <operator pos:start="41:12" pos:end="41:13">==</operator> <call pos:start="41:15" pos:end="41:29"><name pos:start="41:15" pos:end="41:21">AV_RL32</name><argument_list pos:start="41:22" pos:end="41:29">(<argument pos:start="41:23" pos:end="41:28"><expr pos:start="41:23" pos:end="41:28"><literal type="string" pos:start="41:23" pos:end="41:28">"AVI1"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:32" pos:end="77:5">{<block_content pos:start="57:13" pos:end="75:17">

        <comment type="block" pos:start="43:9" pos:end="55:10">/* structure:

            4bytes      AVI1

            1bytes      polarity

            1bytes      always zero

            4bytes      field_size

            4bytes      field_size_less_padding

        */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:25">buggy_avid</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:20">get_bits</name><argument_list pos:start="59:21" pos:end="59:31">(<argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">gb</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="59:34" pos:end="59:39"><expr pos:start="59:34" pos:end="59:38"><name pos:start="59:34" pos:end="59:36">len</name><operator pos:start="59:37" pos:end="59:38">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="74:0"><expr pos:start="61:9" pos:end="61:58"><call pos:start="61:9" pos:end="61:58"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:58">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:40" pos:end="61:54"><expr pos:start="61:40" pos:end="61:54"><literal type="string" pos:start="61:40" pos:end="61:54">"polarity %d\n"</literal></expr></argument>, <argument pos:start="61:57" pos:end="61:57"><expr pos:start="61:57" pos:end="61:57"><name pos:start="61:57" pos:end="61:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="63:1" pos:end="63:5">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:5"><literal type="number" pos:start="63:5" pos:end="63:5">0</literal></expr></cpp:if>

        skip_bits(&amp;s-&gt;gb, 8);

        skip_bits(&amp;s-&gt;gb, 32);

        skip_bits(&amp;s-&gt;gb, 32);

        len -= 10;

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="81:1" pos:end="81:15">//    len -= 2;</comment>



    <if_stmt pos:start="85:5" pos:end="137:5"><if pos:start="85:5" pos:end="137:5">if <condition pos:start="85:8" pos:end="85:30">(<expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:10">id</name> <operator pos:start="85:12" pos:end="85:13">==</operator> <call pos:start="85:15" pos:end="85:29"><name pos:start="85:15" pos:end="85:21">AV_RL32</name><argument_list pos:start="85:22" pos:end="85:29">(<argument pos:start="85:23" pos:end="85:28"><expr pos:start="85:23" pos:end="85:28"><literal type="string" pos:start="85:23" pos:end="85:28">"JFIF"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:32" pos:end="137:5">{<block_content pos:start="87:9" pos:end="135:17">

        <decl_stmt pos:start="87:9" pos:end="87:29"><decl pos:start="87:9" pos:end="87:15"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:15">t_w</name></decl>, <decl pos:start="87:18" pos:end="87:20"><type ref="prev" pos:start="87:9" pos:end="87:11"/><name pos:start="87:18" pos:end="87:20">t_h</name></decl>, <decl pos:start="87:23" pos:end="87:24"><type ref="prev" pos:start="87:9" pos:end="87:11"/><name pos:start="87:23" pos:end="87:24">v1</name></decl>, <decl pos:start="87:27" pos:end="87:28"><type ref="prev" pos:start="87:9" pos:end="87:11"/><name pos:start="87:27" pos:end="87:28">v2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:17">skip_bits</name><argument_list pos:start="89:18" pos:end="89:28">(<argument pos:start="89:19" pos:end="89:24"><expr pos:start="89:19" pos:end="89:24"><operator pos:start="89:19" pos:end="89:19">&amp;</operator><name pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:24">gb</name></name></expr></argument>, <argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><literal type="number" pos:start="89:27" pos:end="89:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:31" pos:end="89:58">/* the trailing zero-byte */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:10">v1</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:32"><name pos:start="91:14" pos:end="91:21">get_bits</name><argument_list pos:start="91:22" pos:end="91:32">(<argument pos:start="91:23" pos:end="91:28"><expr pos:start="91:23" pos:end="91:28"><operator pos:start="91:23" pos:end="91:23">&amp;</operator><name pos:start="91:24" pos:end="91:28"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:28">gb</name></name></expr></argument>, <argument pos:start="91:31" pos:end="91:31"><expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:10">v2</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:32"><name pos:start="93:14" pos:end="93:21">get_bits</name><argument_list pos:start="93:22" pos:end="93:32">(<argument pos:start="93:23" pos:end="93:28"><expr pos:start="93:23" pos:end="93:28"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:28">gb</name></name></expr></argument>, <argument pos:start="93:31" pos:end="93:31"><expr pos:start="93:31" pos:end="93:31"><literal type="number" pos:start="93:31" pos:end="93:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:17">skip_bits</name><argument_list pos:start="95:18" pos:end="95:28">(<argument pos:start="95:19" pos:end="95:24"><expr pos:start="95:19" pos:end="95:24"><operator pos:start="95:19" pos:end="95:19">&amp;</operator><name pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:24">gb</name></name></expr></argument>, <argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:65"><expr pos:start="99:9" pos:end="99:64"><name pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:16">avctx</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:37">sample_aspect_ratio</name><operator pos:start="99:38" pos:end="99:38">.</operator><name pos:start="99:39" pos:end="99:41">num</name></name> <operator pos:start="99:43" pos:end="99:43">=</operator> <call pos:start="99:45" pos:end="99:64"><name pos:start="99:45" pos:end="99:52">get_bits</name><argument_list pos:start="99:53" pos:end="99:64">(<argument pos:start="99:54" pos:end="99:59"><expr pos:start="99:54" pos:end="99:59"><operator pos:start="99:54" pos:end="99:54">&amp;</operator><name pos:start="99:55" pos:end="99:59"><name pos:start="99:55" pos:end="99:55">s</name><operator pos:start="99:56" pos:end="99:57">-&gt;</operator><name pos:start="99:58" pos:end="99:59">gb</name></name></expr></argument>, <argument pos:start="99:62" pos:end="99:63"><expr pos:start="99:62" pos:end="99:63"><literal type="number" pos:start="99:62" pos:end="99:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:65"><expr pos:start="101:9" pos:end="101:64"><name pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:16">avctx</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:37">sample_aspect_ratio</name><operator pos:start="101:38" pos:end="101:38">.</operator><name pos:start="101:39" pos:end="101:41">den</name></name> <operator pos:start="101:43" pos:end="101:43">=</operator> <call pos:start="101:45" pos:end="101:64"><name pos:start="101:45" pos:end="101:52">get_bits</name><argument_list pos:start="101:53" pos:end="101:64">(<argument pos:start="101:54" pos:end="101:59"><expr pos:start="101:54" pos:end="101:59"><operator pos:start="101:54" pos:end="101:54">&amp;</operator><name pos:start="101:55" pos:end="101:59"><name pos:start="101:55" pos:end="101:55">s</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:59">gb</name></name></expr></argument>, <argument pos:start="101:62" pos:end="101:63"><expr pos:start="101:62" pos:end="101:63"><literal type="number" pos:start="101:62" pos:end="101:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="105:9" pos:end="115:54"><if pos:start="105:9" pos:end="115:54">if <condition pos:start="105:12" pos:end="105:49">(<expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:20">avctx</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:27">debug</name></name> <operator pos:start="105:29" pos:end="105:29">&amp;</operator> <name pos:start="105:31" pos:end="105:48">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="115:54"><block_content pos:start="107:13" pos:end="115:54">

            <expr_stmt pos:start="107:13" pos:end="115:54"><expr pos:start="107:13" pos:end="115:53"><call pos:start="107:13" pos:end="115:53"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="115:53">(<argument pos:start="107:20" pos:end="107:27"><expr pos:start="107:20" pos:end="107:27"><name pos:start="107:20" pos:end="107:27"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:27">avctx</name></name></expr></argument>, <argument pos:start="107:30" pos:end="107:40"><expr pos:start="107:30" pos:end="107:40"><name pos:start="107:30" pos:end="107:40">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="109:20" pos:end="109:74"><expr pos:start="109:20" pos:end="109:74"><literal type="string" pos:start="109:20" pos:end="109:74">"mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\n"</literal></expr></argument>,

                   <argument pos:start="111:20" pos:end="111:21"><expr pos:start="111:20" pos:end="111:21"><name pos:start="111:20" pos:end="111:21">v1</name></expr></argument>, <argument pos:start="111:24" pos:end="111:25"><expr pos:start="111:24" pos:end="111:25"><name pos:start="111:24" pos:end="111:25">v2</name></expr></argument>,

                   <argument pos:start="113:20" pos:end="113:52"><expr pos:start="113:20" pos:end="113:52"><name pos:start="113:20" pos:end="113:52"><name pos:start="113:20" pos:end="113:20">s</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:27">avctx</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:48">sample_aspect_ratio</name><operator pos:start="113:49" pos:end="113:49">.</operator><name pos:start="113:50" pos:end="113:52">num</name></name></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:52"><expr pos:start="115:20" pos:end="115:52"><name pos:start="115:20" pos:end="115:52"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:48">sample_aspect_ratio</name><operator pos:start="115:49" pos:end="115:49">.</operator><name pos:start="115:50" pos:end="115:52">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:34"><expr pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:11">t_w</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <call pos:start="119:15" pos:end="119:33"><name pos:start="119:15" pos:end="119:22">get_bits</name><argument_list pos:start="119:23" pos:end="119:33">(<argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><operator pos:start="119:24" pos:end="119:24">&amp;</operator><name pos:start="119:25" pos:end="119:29"><name pos:start="119:25" pos:end="119:25">s</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:29">gb</name></name></expr></argument>, <argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><literal type="number" pos:start="119:32" pos:end="119:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:34"><expr pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:11">t_h</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:33"><name pos:start="121:15" pos:end="121:22">get_bits</name><argument_list pos:start="121:23" pos:end="121:33">(<argument pos:start="121:24" pos:end="121:29"><expr pos:start="121:24" pos:end="121:29"><operator pos:start="121:24" pos:end="121:24">&amp;</operator><name pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:29">gb</name></name></expr></argument>, <argument pos:start="121:32" pos:end="121:32"><expr pos:start="121:32" pos:end="121:32"><literal type="number" pos:start="121:32" pos:end="121:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:23">(<expr pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:15">t_w</name> <operator pos:start="123:17" pos:end="123:18">&amp;&amp;</operator> <name pos:start="123:20" pos:end="123:22">t_h</name></expr>)</condition> <block pos:start="123:25" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:37">

            <comment type="block" pos:start="125:13" pos:end="125:32">/* skip thumbnail */</comment>

            <if_stmt pos:start="127:13" pos:end="129:37"><if pos:start="127:13" pos:end="129:37">if <condition pos:start="127:16" pos:end="127:46">(<expr pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:19">len</name> <operator pos:start="127:21" pos:end="127:21">-</operator><literal type="number" pos:start="127:22" pos:end="127:25">10</literal> <operator pos:start="127:25" pos:end="127:25">-</operator> <operator pos:start="127:27" pos:end="127:27">(</operator><name pos:start="127:28" pos:end="127:30">t_w</name> <operator pos:start="127:32" pos:end="127:32">*</operator> <name pos:start="127:34" pos:end="127:36">t_h</name> <operator pos:start="127:38" pos:end="127:38">*</operator> <literal type="number" pos:start="127:40" pos:end="127:40">3</literal><operator pos:start="127:41" pos:end="127:41">)</operator> <operator pos:start="127:43" pos:end="127:43">&gt;</operator> <literal type="number" pos:start="127:45" pos:end="127:45">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:37"><block_content pos:start="129:17" pos:end="129:37">

                <expr_stmt pos:start="129:17" pos:end="129:37"><expr pos:start="129:17" pos:end="129:36"><name pos:start="129:17" pos:end="129:19">len</name> <operator pos:start="129:21" pos:end="129:22">-=</operator> <name pos:start="129:24" pos:end="129:26">t_w</name> <operator pos:start="129:28" pos:end="129:28">*</operator> <name pos:start="129:30" pos:end="129:32">t_h</name> <operator pos:start="129:34" pos:end="129:34">*</operator> <literal type="number" pos:start="129:36" pos:end="129:36">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:18"><expr pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:11">len</name> <operator pos:start="133:13" pos:end="133:14">-=</operator> <literal type="number" pos:start="133:16" pos:end="133:17">10</literal></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:17">goto <name pos:start="135:14" pos:end="135:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="159:5"><if pos:start="141:5" pos:end="159:5">if <condition pos:start="141:8" pos:end="141:62">(<expr pos:start="141:9" pos:end="141:61"><name pos:start="141:9" pos:end="141:10">id</name> <operator pos:start="141:12" pos:end="141:13">==</operator> <call pos:start="141:15" pos:end="141:29"><name pos:start="141:15" pos:end="141:21">AV_RL32</name><argument_list pos:start="141:22" pos:end="141:29">(<argument pos:start="141:23" pos:end="141:28"><expr pos:start="141:23" pos:end="141:28"><literal type="string" pos:start="141:23" pos:end="141:28">"Adob"</literal></expr></argument>)</argument_list></call> <operator pos:start="141:31" pos:end="141:32">&amp;&amp;</operator> <operator pos:start="141:34" pos:end="141:34">(</operator><call pos:start="141:35" pos:end="141:53"><name pos:start="141:35" pos:end="141:42">get_bits</name><argument_list pos:start="141:43" pos:end="141:53">(<argument pos:start="141:44" pos:end="141:49"><expr pos:start="141:44" pos:end="141:49"><operator pos:start="141:44" pos:end="141:44">&amp;</operator><name pos:start="141:45" pos:end="141:49"><name pos:start="141:45" pos:end="141:45">s</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:49">gb</name></name></expr></argument>, <argument pos:start="141:52" pos:end="141:52"><expr pos:start="141:52" pos:end="141:52"><literal type="number" pos:start="141:52" pos:end="141:52">8</literal></expr></argument>)</argument_list></call> <operator pos:start="141:55" pos:end="141:56">==</operator> <literal type="char" pos:start="141:58" pos:end="141:60">'e'</literal><operator pos:start="141:61" pos:end="141:61">)</operator></expr>)</condition> <block pos:start="141:64" pos:end="159:5">{<block_content pos:start="143:9" pos:end="157:17">

        <if_stmt pos:start="143:9" pos:end="145:73"><if pos:start="143:9" pos:end="145:73">if <condition pos:start="143:12" pos:end="143:49">(<expr pos:start="143:13" pos:end="143:48"><name pos:start="143:13" pos:end="143:27"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">avctx</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:27">debug</name></name> <operator pos:start="143:29" pos:end="143:29">&amp;</operator> <name pos:start="143:31" pos:end="143:48">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:73"><block_content pos:start="145:13" pos:end="145:73">

            <expr_stmt pos:start="145:13" pos:end="145:73"><expr pos:start="145:13" pos:end="145:72"><call pos:start="145:13" pos:end="145:72"><name pos:start="145:13" pos:end="145:18">av_log</name><argument_list pos:start="145:19" pos:end="145:72">(<argument pos:start="145:20" pos:end="145:27"><expr pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:20">s</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:27">avctx</name></name></expr></argument>, <argument pos:start="145:30" pos:end="145:40"><expr pos:start="145:30" pos:end="145:40"><name pos:start="145:30" pos:end="145:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="145:43" pos:end="145:71"><expr pos:start="145:43" pos:end="145:71"><literal type="string" pos:start="145:43" pos:end="145:71">"mjpeg: Adobe header found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><call pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:17">skip_bits</name><argument_list pos:start="147:18" pos:end="147:29">(<argument pos:start="147:19" pos:end="147:24"><expr pos:start="147:19" pos:end="147:24"><operator pos:start="147:19" pos:end="147:19">&amp;</operator><name pos:start="147:20" pos:end="147:24"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:24">gb</name></name></expr></argument>, <argument pos:start="147:27" pos:end="147:28"><expr pos:start="147:27" pos:end="147:28"><literal type="number" pos:start="147:27" pos:end="147:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:32" pos:end="147:44">/* version */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><call pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:17">skip_bits</name><argument_list pos:start="149:18" pos:end="149:29">(<argument pos:start="149:19" pos:end="149:24"><expr pos:start="149:19" pos:end="149:24"><operator pos:start="149:19" pos:end="149:19">&amp;</operator><name pos:start="149:20" pos:end="149:24"><name pos:start="149:20" pos:end="149:20">s</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:24">gb</name></name></expr></argument>, <argument pos:start="149:27" pos:end="149:28"><expr pos:start="149:27" pos:end="149:28"><literal type="number" pos:start="149:27" pos:end="149:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="149:32" pos:end="149:43">/* flags0 */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><call pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:17">skip_bits</name><argument_list pos:start="151:18" pos:end="151:29">(<argument pos:start="151:19" pos:end="151:24"><expr pos:start="151:19" pos:end="151:24"><operator pos:start="151:19" pos:end="151:19">&amp;</operator><name pos:start="151:20" pos:end="151:24"><name pos:start="151:20" pos:end="151:20">s</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:24">gb</name></name></expr></argument>, <argument pos:start="151:27" pos:end="151:28"><expr pos:start="151:27" pos:end="151:28"><literal type="number" pos:start="151:27" pos:end="151:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="151:32" pos:end="151:43">/* flags1 */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><call pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:17">skip_bits</name><argument_list pos:start="153:18" pos:end="153:29">(<argument pos:start="153:19" pos:end="153:24"><expr pos:start="153:19" pos:end="153:24"><operator pos:start="153:19" pos:end="153:19">&amp;</operator><name pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:24">gb</name></name></expr></argument>,  <argument pos:start="153:28" pos:end="153:28"><expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="153:32" pos:end="153:46">/* transform */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:17"><expr pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:11">len</name> <operator pos:start="155:13" pos:end="155:14">-=</operator> <literal type="number" pos:start="155:16" pos:end="155:16">7</literal></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:17">goto <name pos:start="157:14" pos:end="157:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="207:5"><if pos:start="163:5" pos:end="207:5">if <condition pos:start="163:8" pos:end="163:30">(<expr pos:start="163:9" pos:end="163:29"><name pos:start="163:9" pos:end="163:10">id</name> <operator pos:start="163:12" pos:end="163:13">==</operator> <call pos:start="163:15" pos:end="163:29"><name pos:start="163:15" pos:end="163:21">AV_RL32</name><argument_list pos:start="163:22" pos:end="163:29">(<argument pos:start="163:23" pos:end="163:28"><expr pos:start="163:23" pos:end="163:28"><literal type="string" pos:start="163:23" pos:end="163:28">"LJIF"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:32" pos:end="207:5">{<block_content pos:start="165:9" pos:end="205:17">

        <if_stmt pos:start="165:9" pos:end="169:59"><if pos:start="165:9" pos:end="169:59">if <condition pos:start="165:12" pos:end="165:49">(<expr pos:start="165:13" pos:end="165:48"><name pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:20">avctx</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:27">debug</name></name> <operator pos:start="165:29" pos:end="165:29">&amp;</operator> <name pos:start="165:31" pos:end="165:48">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="169:59"><block_content pos:start="167:13" pos:end="169:59">

            <expr_stmt pos:start="167:13" pos:end="169:59"><expr pos:start="167:13" pos:end="169:58"><call pos:start="167:13" pos:end="169:58"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="169:58">(<argument pos:start="167:20" pos:end="167:27"><expr pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:27">avctx</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:40"><expr pos:start="167:30" pos:end="167:40"><name pos:start="167:30" pos:end="167:40">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:57"><expr pos:start="169:20" pos:end="169:57"><literal type="string" pos:start="169:20" pos:end="169:57">"Pegasus lossless jpeg header found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:30"><expr pos:start="171:9" pos:end="171:29"><call pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:17">skip_bits</name><argument_list pos:start="171:18" pos:end="171:29">(<argument pos:start="171:19" pos:end="171:24"><expr pos:start="171:19" pos:end="171:24"><operator pos:start="171:19" pos:end="171:19">&amp;</operator><name pos:start="171:20" pos:end="171:24"><name pos:start="171:20" pos:end="171:20">s</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:24">gb</name></name></expr></argument>, <argument pos:start="171:27" pos:end="171:28"><expr pos:start="171:27" pos:end="171:28"><literal type="number" pos:start="171:27" pos:end="171:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:32" pos:end="171:46">/* version ? */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:30"><expr pos:start="173:9" pos:end="173:29"><call pos:start="173:9" pos:end="173:29"><name pos:start="173:9" pos:end="173:17">skip_bits</name><argument_list pos:start="173:18" pos:end="173:29">(<argument pos:start="173:19" pos:end="173:24"><expr pos:start="173:19" pos:end="173:24"><operator pos:start="173:19" pos:end="173:19">&amp;</operator><name pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:20">s</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:24">gb</name></name></expr></argument>, <argument pos:start="173:27" pos:end="173:28"><expr pos:start="173:27" pos:end="173:28"><literal type="number" pos:start="173:27" pos:end="173:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="173:32" pos:end="173:54">/* unknwon always 0? */</comment>

        <expr_stmt pos:start="175:9" pos:end="175:30"><expr pos:start="175:9" pos:end="175:29"><call pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:17">skip_bits</name><argument_list pos:start="175:18" pos:end="175:29">(<argument pos:start="175:19" pos:end="175:24"><expr pos:start="175:19" pos:end="175:24"><operator pos:start="175:19" pos:end="175:19">&amp;</operator><name pos:start="175:20" pos:end="175:24"><name pos:start="175:20" pos:end="175:20">s</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:24">gb</name></name></expr></argument>, <argument pos:start="175:27" pos:end="175:28"><expr pos:start="175:27" pos:end="175:28"><literal type="number" pos:start="175:27" pos:end="175:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:32" pos:end="175:54">/* unknwon always 0? */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:30"><expr pos:start="177:9" pos:end="177:29"><call pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:17">skip_bits</name><argument_list pos:start="177:18" pos:end="177:29">(<argument pos:start="177:19" pos:end="177:24"><expr pos:start="177:19" pos:end="177:24"><operator pos:start="177:19" pos:end="177:19">&amp;</operator><name pos:start="177:20" pos:end="177:24"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:24">gb</name></name></expr></argument>, <argument pos:start="177:27" pos:end="177:28"><expr pos:start="177:27" pos:end="177:28"><literal type="number" pos:start="177:27" pos:end="177:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="177:32" pos:end="177:54">/* unknwon always 0? */</comment>

        <switch pos:start="179:9" pos:end="201:9">switch <condition pos:start="179:16" pos:end="179:36">(<expr pos:start="179:17" pos:end="179:35"><call pos:start="179:17" pos:end="179:35"><name pos:start="179:17" pos:end="179:24">get_bits</name><argument_list pos:start="179:25" pos:end="179:35">(<argument pos:start="179:26" pos:end="179:31"><expr pos:start="179:26" pos:end="179:31"><operator pos:start="179:26" pos:end="179:26">&amp;</operator><name pos:start="179:27" pos:end="179:31"><name pos:start="179:27" pos:end="179:27">s</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:31">gb</name></name></expr></argument>, <argument pos:start="179:34" pos:end="179:34"><expr pos:start="179:34" pos:end="179:34"><literal type="number" pos:start="179:34" pos:end="179:34">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:38" pos:end="201:9">{<block_content pos:start="181:9" pos:end="199:67">

        <case pos:start="181:9" pos:end="181:15">case <expr pos:start="181:14" pos:end="181:14"><literal type="number" pos:start="181:14" pos:end="181:14">1</literal></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:31"><expr pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:18"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:18">rgb</name></name>         <operator pos:start="183:28" pos:end="183:28">=</operator> <literal type="number" pos:start="183:30" pos:end="183:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:31"><expr pos:start="185:13" pos:end="185:30"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:26">pegasus_rct</name></name> <operator pos:start="185:28" pos:end="185:28">=</operator> <literal type="number" pos:start="185:30" pos:end="185:30">0</literal></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:15">case <expr pos:start="189:14" pos:end="189:14"><literal type="number" pos:start="189:14" pos:end="189:14">2</literal></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:31"><expr pos:start="191:13" pos:end="191:30"><name pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:18">rgb</name></name>         <operator pos:start="191:28" pos:end="191:28">=</operator> <literal type="number" pos:start="191:30" pos:end="191:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:31"><expr pos:start="193:13" pos:end="193:30"><name pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:26">pegasus_rct</name></name> <operator pos:start="193:28" pos:end="193:28">=</operator> <literal type="number" pos:start="193:30" pos:end="193:30">1</literal></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <default pos:start="197:9" pos:end="197:16">default:</default>

            <expr_stmt pos:start="199:13" pos:end="199:67"><expr pos:start="199:13" pos:end="199:66"><call pos:start="199:13" pos:end="199:66"><name pos:start="199:13" pos:end="199:18">av_log</name><argument_list pos:start="199:19" pos:end="199:66">(<argument pos:start="199:20" pos:end="199:27"><expr pos:start="199:20" pos:end="199:27"><name pos:start="199:20" pos:end="199:27"><name pos:start="199:20" pos:end="199:20">s</name><operator pos:start="199:21" pos:end="199:22">-&gt;</operator><name pos:start="199:23" pos:end="199:27">avctx</name></name></expr></argument>, <argument pos:start="199:30" pos:end="199:41"><expr pos:start="199:30" pos:end="199:41"><name pos:start="199:30" pos:end="199:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:44" pos:end="199:65"><expr pos:start="199:44" pos:end="199:65"><literal type="string" pos:start="199:44" pos:end="199:65">"unknown colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="203:9" pos:end="203:17"><expr pos:start="203:9" pos:end="203:16"><name pos:start="203:9" pos:end="203:11">len</name> <operator pos:start="203:13" pos:end="203:14">-=</operator> <literal type="number" pos:start="203:16" pos:end="203:16">9</literal></expr>;</expr_stmt>

        <goto pos:start="205:9" pos:end="205:17">goto <name pos:start="205:14" pos:end="205:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:23">/* Apple MJPEG-A */</comment>

    <if_stmt pos:start="213:5" pos:end="251:5"><if pos:start="213:5" pos:end="251:5">if <condition pos:start="213:8" pos:end="213:54">(<expr pos:start="213:9" pos:end="213:53"><operator pos:start="213:9" pos:end="213:9">(</operator><name pos:start="213:10" pos:end="213:22"><name pos:start="213:10" pos:end="213:10">s</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:22">start_code</name></name> <operator pos:start="213:24" pos:end="213:25">==</operator> <name pos:start="213:27" pos:end="213:30">APP1</name><operator pos:start="213:31" pos:end="213:31">)</operator> <operator pos:start="213:33" pos:end="213:34">&amp;&amp;</operator> <operator pos:start="213:36" pos:end="213:36">(</operator><name pos:start="213:37" pos:end="213:39">len</name> <operator pos:start="213:41" pos:end="213:41">&gt;</operator> <operator pos:start="213:43" pos:end="213:43">(</operator><literal type="number" pos:start="213:44" pos:end="213:49">0x28</literal> <operator pos:start="213:49" pos:end="213:49">-</operator> <literal type="number" pos:start="213:51" pos:end="213:51">8</literal><operator pos:start="213:52" pos:end="213:52">)</operator><operator pos:start="213:53" pos:end="213:53">)</operator></expr>)</condition> <block pos:start="213:56" pos:end="251:5">{<block_content pos:start="215:9" pos:end="249:9">

        <expr_stmt pos:start="215:9" pos:end="215:41"><expr pos:start="215:9" pos:end="215:40"><name pos:start="215:9" pos:end="215:10">id</name>   <operator pos:start="215:14" pos:end="215:14">=</operator> <call pos:start="215:16" pos:end="215:40"><name pos:start="215:16" pos:end="215:28">get_bits_long</name><argument_list pos:start="215:29" pos:end="215:40">(<argument pos:start="215:30" pos:end="215:35"><expr pos:start="215:30" pos:end="215:35"><operator pos:start="215:30" pos:end="215:30">&amp;</operator><name pos:start="215:31" pos:end="215:35"><name pos:start="215:31" pos:end="215:31">s</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:35">gb</name></name></expr></argument>, <argument pos:start="215:38" pos:end="215:39"><expr pos:start="215:38" pos:end="215:39"><literal type="number" pos:start="215:38" pos:end="215:39">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:30"><expr pos:start="217:9" pos:end="217:29"><name pos:start="217:9" pos:end="217:10">id</name>   <operator pos:start="217:14" pos:end="217:14">=</operator> <call pos:start="217:16" pos:end="217:29"><name pos:start="217:16" pos:end="217:25">av_be2ne32</name><argument_list pos:start="217:26" pos:end="217:29">(<argument pos:start="217:27" pos:end="217:28"><expr pos:start="217:27" pos:end="217:28"><name pos:start="217:27" pos:end="217:28">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:17"><expr pos:start="219:9" pos:end="219:16"><name pos:start="219:9" pos:end="219:11">len</name> <operator pos:start="219:13" pos:end="219:14">-=</operator> <literal type="number" pos:start="219:16" pos:end="219:16">4</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="221:9" pos:end="221:27">/* Apple MJPEG-A */</comment>

        <if_stmt pos:start="223:9" pos:end="249:9"><if pos:start="223:9" pos:end="249:9">if <condition pos:start="223:12" pos:end="223:34">(<expr pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:14">id</name> <operator pos:start="223:16" pos:end="223:17">==</operator> <call pos:start="223:19" pos:end="223:33"><name pos:start="223:19" pos:end="223:25">AV_RL32</name><argument_list pos:start="223:26" pos:end="223:33">(<argument pos:start="223:27" pos:end="223:32"><expr pos:start="223:27" pos:end="223:32"><literal type="string" pos:start="223:27" pos:end="223:32">"mjpg"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="223:36" pos:end="249:9">{<block_content pos:start="245:13" pos:end="247:85">

<cpp:if pos:start="225:1" pos:end="225:5">#<cpp:directive pos:start="225:2" pos:end="225:3">if</cpp:directive> <expr pos:start="225:5" pos:end="225:5"><literal type="number" pos:start="225:5" pos:end="225:5">0</literal></expr></cpp:if>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="227:36" pos:end="227:51">/* field size */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="229:36" pos:end="229:55">/* pad field size */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="231:36" pos:end="231:49">/* next off */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="233:36" pos:end="233:50">/* quant off */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="235:36" pos:end="235:49">/* huff off */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="237:36" pos:end="237:50">/* image off */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="239:36" pos:end="239:49">/* scan off */</comment>

            skip_bits(&amp;s-&gt;gb, 32); <comment type="block" pos:start="241:36" pos:end="241:49">/* data off */</comment>

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

            <if_stmt pos:start="245:13" pos:end="247:85"><if pos:start="245:13" pos:end="247:85">if <condition pos:start="245:16" pos:end="245:53">(<expr pos:start="245:17" pos:end="245:52"><name pos:start="245:17" pos:end="245:31"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:24">avctx</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:31">debug</name></name> <operator pos:start="245:33" pos:end="245:33">&amp;</operator> <name pos:start="245:35" pos:end="245:52">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:85"><block_content pos:start="247:17" pos:end="247:85">

                <expr_stmt pos:start="247:17" pos:end="247:85"><expr pos:start="247:17" pos:end="247:84"><call pos:start="247:17" pos:end="247:84"><name pos:start="247:17" pos:end="247:22">av_log</name><argument_list pos:start="247:23" pos:end="247:84">(<argument pos:start="247:24" pos:end="247:31"><expr pos:start="247:24" pos:end="247:31"><name pos:start="247:24" pos:end="247:31"><name pos:start="247:24" pos:end="247:24">s</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:31">avctx</name></name></expr></argument>, <argument pos:start="247:34" pos:end="247:44"><expr pos:start="247:34" pos:end="247:44"><name pos:start="247:34" pos:end="247:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="247:47" pos:end="247:83"><expr pos:start="247:47" pos:end="247:83"><literal type="string" pos:start="247:47" pos:end="247:83">"mjpeg: Apple MJPEG-A header found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="255:1" pos:end="255:4"><name pos:start="255:1" pos:end="255:3">out</name>:</label>

    <comment type="block" pos:start="257:5" pos:end="257:49">/* slow but needed for extreme adobe jpegs */</comment>

    <if_stmt pos:start="259:5" pos:end="263:70"><if pos:start="259:5" pos:end="263:70">if <condition pos:start="259:8" pos:end="259:16">(<expr pos:start="259:9" pos:end="259:15"><name pos:start="259:9" pos:end="259:11">len</name> <operator pos:start="259:13" pos:end="259:13">&lt;</operator> <literal type="number" pos:start="259:15" pos:end="259:15">0</literal></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="263:70"><block_content pos:start="261:9" pos:end="263:70">

        <expr_stmt pos:start="261:9" pos:end="263:70"><expr pos:start="261:9" pos:end="263:69"><call pos:start="261:9" pos:end="263:69"><name pos:start="261:9" pos:end="261:14">av_log</name><argument_list pos:start="261:15" pos:end="263:69">(<argument pos:start="261:16" pos:end="261:23"><expr pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:16">s</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:23">avctx</name></name></expr></argument>, <argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="263:16" pos:end="263:68"><expr pos:start="263:16" pos:end="263:68"><literal type="string" pos:start="263:16" pos:end="263:68">"mjpeg: error, decode_app parser read over the end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="265:5" pos:end="267:29">while <condition pos:start="265:11" pos:end="265:21">(<expr pos:start="265:12" pos:end="265:20"><operator pos:start="265:12" pos:end="265:13">--</operator><name pos:start="265:14" pos:end="265:16">len</name> <operator pos:start="265:18" pos:end="265:18">&gt;</operator> <literal type="number" pos:start="265:20" pos:end="265:20">0</literal></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:29"><block_content pos:start="267:9" pos:end="267:29">

        <expr_stmt pos:start="267:9" pos:end="267:29"><expr pos:start="267:9" pos:end="267:28"><call pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:17">skip_bits</name><argument_list pos:start="267:18" pos:end="267:28">(<argument pos:start="267:19" pos:end="267:24"><expr pos:start="267:19" pos:end="267:24"><operator pos:start="267:19" pos:end="267:19">&amp;</operator><name pos:start="267:20" pos:end="267:24"><name pos:start="267:20" pos:end="267:20">s</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:24">gb</name></name></expr></argument>, <argument pos:start="267:27" pos:end="267:27"><expr pos:start="267:27" pos:end="267:27"><literal type="number" pos:start="267:27" pos:end="267:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
