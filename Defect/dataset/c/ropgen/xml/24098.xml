<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24098.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">nabm_writeb</name> <parameter_list pos:start="1:25" pos:end="1:67">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:66">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIAC97LinkState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC97LinkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">ac97</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AC97BusMasterRegs</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">r</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">index</name> <init pos:start="11:20" pos:end="11:38">= <expr pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:25">addr</name> <operator pos:start="11:27" pos:end="11:27">-</operator> <name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">base</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <switch pos:start="13:5" pos:end="109:5">switch <condition pos:start="13:12" pos:end="13:18">(<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">index</name></expr>)</condition> <block pos:start="13:20" pos:end="109:5">{<block_content pos:start="15:5" pos:end="107:14">

    <case pos:start="15:5" pos:end="15:16">case <expr pos:start="15:10" pos:end="15:15"><name pos:start="15:10" pos:end="15:15">PI_LVI</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:16">case <expr pos:start="17:10" pos:end="17:15"><name pos:start="17:10" pos:end="17:15">PO_LVI</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">MC_LVI</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">&amp;</operator><name pos:start="21:14" pos:end="21:39"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">bm_regs</name><index pos:start="21:24" pos:end="21:39">[<expr pos:start="21:25" pos:end="21:38"><call pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:30">GET_BM</name> <argument_list pos:start="21:32" pos:end="21:38">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:50">(<expr pos:start="23:13" pos:end="23:49"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">r</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:18">cr</name></name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <name pos:start="23:22" pos:end="23:28">CR_RPBM</name><operator pos:start="23:29" pos:end="23:29">)</operator> <operator pos:start="23:31" pos:end="23:32">&amp;&amp;</operator> <operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:35">r</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:39">sr</name></name> <operator pos:start="23:41" pos:end="23:41">&amp;</operator> <name pos:start="23:43" pos:end="23:48">SR_DCH</name><operator pos:start="23:49" pos:end="23:49">)</operator></expr>)</condition> <block pos:start="23:52" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:28">

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">r</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">sr</name></name> <operator pos:start="25:19" pos:end="25:20">&amp;=</operator> <operator pos:start="25:22" pos:end="25:22">~</operator><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:29">SR_DCH</name> <operator pos:start="25:31" pos:end="25:31">|</operator> <name pos:start="25:33" pos:end="25:39">SR_CELV</name><operator pos:start="25:40" pos:end="25:40">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:13">r</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:18">civ</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:22">r</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:27">piv</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">r</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">piv</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:23">r</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:28">piv</name></name> <operator pos:start="29:30" pos:end="29:30">+</operator> <literal type="number" pos:start="29:32" pos:end="29:32">1</literal><operator pos:start="29:33" pos:end="29:33">)</operator> <operator pos:start="29:35" pos:end="29:35">%</operator> <literal type="number" pos:start="29:37" pos:end="29:38">32</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><call pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:20">fetch_bd</name> <argument_list pos:start="31:22" pos:end="31:27">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">r</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">lvi</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:20">val</name> <operator pos:start="35:22" pos:end="35:22">%</operator> <literal type="number" pos:start="35:24" pos:end="35:25">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:13">dolog</name> <argument_list pos:start="37:15" pos:end="37:55">(<argument pos:start="37:16" pos:end="37:33"><expr pos:start="37:16" pos:end="37:33"><literal type="string" pos:start="37:16" pos:end="37:33">"LVI[%d] &lt;- %#x\n"</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:49"><expr pos:start="37:36" pos:end="37:49"><call pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:41">GET_BM</name> <argument_list pos:start="37:43" pos:end="37:49">(<argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:48">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:52" pos:end="37:54"><expr pos:start="37:52" pos:end="37:54"><name pos:start="37:52" pos:end="37:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:15">case <expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:14">PI_CR</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:15">case <expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:14">PO_CR</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:15">case <expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:14">MC_CR</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:9">r</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <operator pos:start="47:13" pos:end="47:13">&amp;</operator><name pos:start="47:14" pos:end="47:39"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:23">bm_regs</name><index pos:start="47:24" pos:end="47:39">[<expr pos:start="47:25" pos:end="47:38"><call pos:start="47:25" pos:end="47:38"><name pos:start="47:25" pos:end="47:30">GET_BM</name> <argument_list pos:start="47:32" pos:end="47:38">(<argument pos:start="47:33" pos:end="47:37"><expr pos:start="47:33" pos:end="47:37"><name pos:start="47:33" pos:end="47:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="81:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:24">(<expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:15">val</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <name pos:start="49:19" pos:end="49:23">CR_RR</name></expr>)</condition> <block pos:start="49:26" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><call pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:25">reset_bm_regs</name> <argument_list pos:start="51:27" pos:end="51:32">(<argument pos:start="51:28" pos:end="51:28"><expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">s</name></expr></argument>, <argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="55:9" pos:end="81:9">else <block pos:start="55:14" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:13">

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">r</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:17">cr</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:23">val</name> <operator pos:start="57:25" pos:end="57:25">&amp;</operator> <name pos:start="57:27" pos:end="57:39">CR_VALID_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="79:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:35">(<expr pos:start="59:17" pos:end="59:34"><operator pos:start="59:17" pos:end="59:17">!</operator><operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:23"><name pos:start="59:19" pos:end="59:19">r</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">cr</name></name> <operator pos:start="59:25" pos:end="59:25">&amp;</operator> <name pos:start="59:27" pos:end="59:33">CR_RPBM</name><operator pos:start="59:34" pos:end="59:34">)</operator></expr>)</condition> <block pos:start="59:37" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:32">

                <expr_stmt pos:start="61:17" pos:end="61:56"><expr pos:start="61:17" pos:end="61:55"><call pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:32">voice_set_active</name> <argument_list pos:start="61:34" pos:end="61:55">(<argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">s</name></expr></argument>, <argument pos:start="61:38" pos:end="61:51"><expr pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:38">r</name> <operator pos:start="61:40" pos:end="61:40">-</operator> <name pos:start="61:42" pos:end="61:51"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:51">bm_regs</name></name></expr></argument>, <argument pos:start="61:54" pos:end="61:54"><expr pos:start="61:54" pos:end="61:54"><literal type="number" pos:start="61:54" pos:end="61:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:32"><expr pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:17">r</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:21">sr</name></name> <operator pos:start="63:23" pos:end="63:24">|=</operator> <name pos:start="63:26" pos:end="63:31">SR_DCH</name></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="67:13" pos:end="79:13">else <block pos:start="67:18" pos:end="79:13">{<block_content pos:start="69:17" pos:end="77:56">

                <expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:17">r</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:22">civ</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:26">r</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:31">piv</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:43"><expr pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:17">r</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:22">piv</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <operator pos:start="71:26" pos:end="71:26">(</operator><name pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:27">r</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:32">piv</name></name> <operator pos:start="71:34" pos:end="71:34">+</operator> <literal type="number" pos:start="71:36" pos:end="71:36">1</literal><operator pos:start="71:37" pos:end="71:37">)</operator> <operator pos:start="71:39" pos:end="71:39">%</operator> <literal type="number" pos:start="71:41" pos:end="71:42">32</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><call pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:24">fetch_bd</name> <argument_list pos:start="73:26" pos:end="73:31">(<argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">s</name></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><name pos:start="73:30" pos:end="73:30">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:33"><expr pos:start="75:17" pos:end="75:32"><name pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">r</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:21">sr</name></name> <operator pos:start="75:23" pos:end="75:24">&amp;=</operator> <operator pos:start="75:26" pos:end="75:26">~</operator><name pos:start="75:27" pos:end="75:32">SR_DCH</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:56"><expr pos:start="77:17" pos:end="77:55"><call pos:start="77:17" pos:end="77:55"><name pos:start="77:17" pos:end="77:32">voice_set_active</name> <argument_list pos:start="77:34" pos:end="77:55">(<argument pos:start="77:35" pos:end="77:35"><expr pos:start="77:35" pos:end="77:35"><name pos:start="77:35" pos:end="77:35">s</name></expr></argument>, <argument pos:start="77:38" pos:end="77:51"><expr pos:start="77:38" pos:end="77:51"><name pos:start="77:38" pos:end="77:38">r</name> <operator pos:start="77:40" pos:end="77:40">-</operator> <name pos:start="77:42" pos:end="77:51"><name pos:start="77:42" pos:end="77:42">s</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:51">bm_regs</name></name></expr></argument>, <argument pos:start="77:54" pos:end="77:54"><expr pos:start="77:54" pos:end="77:54"><literal type="number" pos:start="77:54" pos:end="77:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:71"><expr pos:start="83:9" pos:end="83:70"><call pos:start="83:9" pos:end="83:70"><name pos:start="83:9" pos:end="83:13">dolog</name> <argument_list pos:start="83:15" pos:end="83:70">(<argument pos:start="83:16" pos:end="83:41"><expr pos:start="83:16" pos:end="83:41"><literal type="string" pos:start="83:16" pos:end="83:41">"CR[%d] &lt;- %#x (cr %#x)\n"</literal></expr></argument>, <argument pos:start="83:44" pos:end="83:57"><expr pos:start="83:44" pos:end="83:57"><call pos:start="83:44" pos:end="83:57"><name pos:start="83:44" pos:end="83:49">GET_BM</name> <argument_list pos:start="83:51" pos:end="83:57">(<argument pos:start="83:52" pos:end="83:56"><expr pos:start="83:52" pos:end="83:56"><name pos:start="83:52" pos:end="83:56">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:60" pos:end="83:62"><expr pos:start="83:60" pos:end="83:62"><name pos:start="83:60" pos:end="83:62">val</name></expr></argument>, <argument pos:start="83:65" pos:end="83:69"><expr pos:start="83:65" pos:end="83:69"><name pos:start="83:65" pos:end="83:69"><name pos:start="83:65" pos:end="83:65">r</name><operator pos:start="83:66" pos:end="83:67">-&gt;</operator><name pos:start="83:68" pos:end="83:69">cr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:15">case <expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:14">PI_SR</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:15">case <expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:14">PO_SR</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:15">case <expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:14">MC_SR</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:40"><expr pos:start="93:9" pos:end="93:39"><name pos:start="93:9" pos:end="93:9">r</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <operator pos:start="93:13" pos:end="93:13">&amp;</operator><name pos:start="93:14" pos:end="93:39"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:23">bm_regs</name><index pos:start="93:24" pos:end="93:39">[<expr pos:start="93:25" pos:end="93:38"><call pos:start="93:25" pos:end="93:38"><name pos:start="93:25" pos:end="93:30">GET_BM</name> <argument_list pos:start="93:32" pos:end="93:38">(<argument pos:start="93:33" pos:end="93:37"><expr pos:start="93:33" pos:end="93:37"><name pos:start="93:33" pos:end="93:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">r</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:13">sr</name></name> <operator pos:start="95:15" pos:end="95:16">|=</operator> <name pos:start="95:18" pos:end="95:20">val</name> <operator pos:start="95:22" pos:end="95:22">&amp;</operator> <operator pos:start="95:24" pos:end="95:24">~</operator><operator pos:start="95:25" pos:end="95:25">(</operator><name pos:start="95:26" pos:end="95:35">SR_RO_MASK</name> <operator pos:start="95:37" pos:end="95:37">|</operator> <name pos:start="95:39" pos:end="95:52">SR_WCLEAR_MASK</name><operator pos:start="95:53" pos:end="95:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:58"><expr pos:start="97:9" pos:end="97:57"><call pos:start="97:9" pos:end="97:57"><name pos:start="97:9" pos:end="97:17">update_sr</name> <argument_list pos:start="97:19" pos:end="97:57">(<argument pos:start="97:20" pos:end="97:20"><expr pos:start="97:20" pos:end="97:20"><name pos:start="97:20" pos:end="97:20">s</name></expr></argument>, <argument pos:start="97:23" pos:end="97:23"><expr pos:start="97:23" pos:end="97:23"><name pos:start="97:23" pos:end="97:23">r</name></expr></argument>, <argument pos:start="97:26" pos:end="97:56"><expr pos:start="97:26" pos:end="97:56"><name pos:start="97:26" pos:end="97:30"><name pos:start="97:26" pos:end="97:26">r</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:30">sr</name></name> <operator pos:start="97:32" pos:end="97:32">&amp;</operator> <operator pos:start="97:34" pos:end="97:34">~</operator><operator pos:start="97:35" pos:end="97:35">(</operator><name pos:start="97:36" pos:end="97:38">val</name> <operator pos:start="97:40" pos:end="97:40">&amp;</operator> <name pos:start="97:42" pos:end="97:55">SR_WCLEAR_MASK</name><operator pos:start="97:56" pos:end="97:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:71"><expr pos:start="99:9" pos:end="99:70"><call pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:13">dolog</name> <argument_list pos:start="99:15" pos:end="99:70">(<argument pos:start="99:16" pos:end="99:41"><expr pos:start="99:16" pos:end="99:41"><literal type="string" pos:start="99:16" pos:end="99:41">"SR[%d] &lt;- %#x (sr %#x)\n"</literal></expr></argument>, <argument pos:start="99:44" pos:end="99:57"><expr pos:start="99:44" pos:end="99:57"><call pos:start="99:44" pos:end="99:57"><name pos:start="99:44" pos:end="99:49">GET_BM</name> <argument_list pos:start="99:51" pos:end="99:57">(<argument pos:start="99:52" pos:end="99:56"><expr pos:start="99:52" pos:end="99:56"><name pos:start="99:52" pos:end="99:56">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:60" pos:end="99:62"><expr pos:start="99:60" pos:end="99:62"><name pos:start="99:60" pos:end="99:62">val</name></expr></argument>, <argument pos:start="99:65" pos:end="99:69"><expr pos:start="99:65" pos:end="99:69"><name pos:start="99:65" pos:end="99:69"><name pos:start="99:65" pos:end="99:65">r</name><operator pos:start="99:66" pos:end="99:67">-&gt;</operator><name pos:start="99:68" pos:end="99:69">sr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <default pos:start="103:5" pos:end="103:12">default:</default>

        <expr_stmt pos:start="105:9" pos:end="105:56"><expr pos:start="105:9" pos:end="105:55"><call pos:start="105:9" pos:end="105:55"><name pos:start="105:9" pos:end="105:13">dolog</name> <argument_list pos:start="105:15" pos:end="105:55">(<argument pos:start="105:16" pos:end="105:43"><expr pos:start="105:16" pos:end="105:43"><literal type="string" pos:start="105:16" pos:end="105:43">"U nabm writeb %#x &lt;- %#x\n"</literal></expr></argument>, <argument pos:start="105:46" pos:end="105:49"><expr pos:start="105:46" pos:end="105:49"><name pos:start="105:46" pos:end="105:49">addr</name></expr></argument>, <argument pos:start="105:52" pos:end="105:54"><expr pos:start="105:52" pos:end="105:54"><name pos:start="105:52" pos:end="105:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
