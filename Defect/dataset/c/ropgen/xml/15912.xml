<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15912.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">sys_openat</name><parameter_list pos:start="1:22" pos:end="1:70">(<parameter pos:start="1:23" pos:end="1:31"><decl pos:start="1:23" pos:end="1:31"><type pos:start="1:23" pos:end="1:31"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:31">dirfd</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:53">pathname</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">flags</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:69"><decl pos:start="1:67" pos:end="1:69"><type pos:start="1:67" pos:end="1:69"><modifier pos:start="1:67" pos:end="1:69">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="13:3" pos:end="43:42">

  <comment type="block" pos:start="5:3" pos:end="11:5">/*

   * open(2) has extra parameter 'mode' when called with

   * flag O_CREAT.

   */</comment>

  <if_stmt pos:start="13:3" pos:end="41:3"><if pos:start="13:3" pos:end="41:3">if <condition pos:start="13:6" pos:end="13:29">(<expr pos:start="13:7" pos:end="13:28"><operator pos:start="13:7" pos:end="13:7">(</operator><name pos:start="13:8" pos:end="13:12">flags</name> <operator pos:start="13:14" pos:end="13:14">&amp;</operator> <name pos:start="13:16" pos:end="13:22">O_CREAT</name><operator pos:start="13:23" pos:end="13:23">)</operator> <operator pos:start="13:25" pos:end="13:26">!=</operator> <literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr>)</condition> <block pos:start="13:31" pos:end="41:3">{<block_content pos:start="15:7" pos:end="39:52">

      <decl_stmt pos:start="15:7" pos:end="15:17"><decl pos:start="15:7" pos:end="15:16"><type pos:start="15:7" pos:end="15:13"><name pos:start="15:7" pos:end="15:13">va_list</name></type> <name pos:start="15:15" pos:end="15:16">ap</name></decl>;</decl_stmt>

      <decl_stmt pos:start="17:7" pos:end="17:18"><decl pos:start="17:7" pos:end="17:17"><type pos:start="17:7" pos:end="17:12"><name pos:start="17:7" pos:end="17:12">mode_t</name></type> <name pos:start="17:14" pos:end="17:17">mode</name></decl>;</decl_stmt>



      <comment type="block" pos:start="21:7" pos:end="27:9">/*

       * Get the 'mode' parameter and translate it to

       * host bits.

       */</comment>

      <expr_stmt pos:start="29:7" pos:end="29:26"><expr pos:start="29:7" pos:end="29:25"><call pos:start="29:7" pos:end="29:25"><name pos:start="29:7" pos:end="29:14">va_start</name><argument_list pos:start="29:15" pos:end="29:25">(<argument pos:start="29:16" pos:end="29:17"><expr pos:start="29:16" pos:end="29:17"><name pos:start="29:16" pos:end="29:17">ap</name></expr></argument>, <argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="31:7" pos:end="31:32"><expr pos:start="31:7" pos:end="31:31"><name pos:start="31:7" pos:end="31:10">mode</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:19">va_arg</name><argument_list pos:start="31:20" pos:end="31:31">(<argument pos:start="31:21" pos:end="31:22"><expr pos:start="31:21" pos:end="31:22"><name pos:start="31:21" pos:end="31:22">ap</name></expr></argument>, <argument pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:30">mode_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="33:7" pos:end="33:59"><expr pos:start="33:7" pos:end="33:58"><name pos:start="33:7" pos:end="33:10">mode</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:58"><name pos:start="33:14" pos:end="33:35">target_to_host_bitmask</name><argument_list pos:start="33:36" pos:end="33:58">(<argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">mode</name></expr></argument>, <argument pos:start="33:43" pos:end="33:57"><expr pos:start="33:43" pos:end="33:57"><name pos:start="33:43" pos:end="33:57">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="35:7" pos:end="35:17"><expr pos:start="35:7" pos:end="35:16"><call pos:start="35:7" pos:end="35:16"><name pos:start="35:7" pos:end="35:12">va_end</name><argument_list pos:start="35:13" pos:end="35:16">(<argument pos:start="35:14" pos:end="35:15"><expr pos:start="35:14" pos:end="35:15"><name pos:start="35:14" pos:end="35:15">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <return pos:start="39:7" pos:end="39:52">return <expr pos:start="39:14" pos:end="39:51"><operator pos:start="39:14" pos:end="39:14">(</operator><call pos:start="39:15" pos:end="39:50"><name pos:start="39:15" pos:end="39:20">openat</name><argument_list pos:start="39:21" pos:end="39:50">(<argument pos:start="39:22" pos:end="39:26"><expr pos:start="39:22" pos:end="39:26"><name pos:start="39:22" pos:end="39:26">dirfd</name></expr></argument>, <argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36">pathname</name></expr></argument>, <argument pos:start="39:39" pos:end="39:43"><expr pos:start="39:39" pos:end="39:43"><name pos:start="39:39" pos:end="39:43">flags</name></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><name pos:start="39:46" pos:end="39:49">mode</name></expr></argument>)</argument_list></call><operator pos:start="39:51" pos:end="39:51">)</operator></expr>;</return>

  </block_content>}</block></if></if_stmt>

  <return pos:start="43:3" pos:end="43:42">return <expr pos:start="43:10" pos:end="43:41"><operator pos:start="43:10" pos:end="43:10">(</operator><call pos:start="43:11" pos:end="43:40"><name pos:start="43:11" pos:end="43:16">openat</name><argument_list pos:start="43:17" pos:end="43:40">(<argument pos:start="43:18" pos:end="43:22"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:22">dirfd</name></expr></argument>, <argument pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:32">pathname</name></expr></argument>, <argument pos:start="43:35" pos:end="43:39"><expr pos:start="43:35" pos:end="43:39"><name pos:start="43:35" pos:end="43:39">flags</name></expr></argument>)</argument_list></call><operator pos:start="43:41" pos:end="43:41">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
