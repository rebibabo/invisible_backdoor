<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16373.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h264_execute_decode_slices</name><parameter_list pos:start="1:34" pos:end="1:73">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:58">unsigned</name></type> <name pos:start="1:60" pos:end="1:72">context_count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:31">avctx</name> <init pos:start="5:33" pos:end="5:42">= <expr pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:35">h</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:42">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">H264SliceContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:85"><expr pos:start="13:5" pos:end="13:84"><call pos:start="13:5" pos:end="13:84"><name pos:start="13:5" pos:end="13:14">av_assert0</name><argument_list pos:start="13:15" pos:end="13:84">(<argument pos:start="13:16" pos:end="13:83"><expr pos:start="13:16" pos:end="13:83"><name pos:start="13:16" pos:end="13:28">context_count</name> <operator pos:start="13:30" pos:end="13:31">&amp;&amp;</operator> <name pos:start="13:33" pos:end="13:63"><name pos:start="13:33" pos:end="13:33">h</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:44">slice_ctx</name><index pos:start="13:45" pos:end="13:63">[<expr pos:start="13:46" pos:end="13:62"><name pos:start="13:46" pos:end="13:58">context_count</name> <operator pos:start="13:60" pos:end="13:60">-</operator> <literal type="number" pos:start="13:62" pos:end="13:62">1</literal></expr>]</index></name><operator pos:start="13:64" pos:end="13:64">.</operator><name pos:start="13:65" pos:end="13:68">mb_y</name> <operator pos:start="13:70" pos:end="13:70">&lt;</operator> <name pos:start="13:72" pos:end="13:83"><name pos:start="13:72" pos:end="13:72">h</name><operator pos:start="13:73" pos:end="13:74">-&gt;</operator><name pos:start="13:75" pos:end="13:83">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:17"><if pos:start="17:5" pos:end="21:17">if <condition pos:start="17:8" pos:end="19:64">(<expr pos:start="17:9" pos:end="19:63"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">h</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">avctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">hwaccel</name></name> <operator pos:start="17:27" pos:end="17:28">||</operator>

        <name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">avctx</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">codec</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:37">capabilities</name></name> <operator pos:start="19:39" pos:end="19:39">&amp;</operator> <name pos:start="19:41" pos:end="19:63">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="69:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:21">context_count</name> <operator pos:start="23:23" pos:end="23:24">==</operator> <literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>)</condition> <block pos:start="23:29" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:19">

        <decl_stmt pos:start="25:9" pos:end="25:56"><decl pos:start="25:9" pos:end="25:55"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">ret</name> <init pos:start="25:17" pos:end="25:55">= <expr pos:start="25:19" pos:end="25:55"><call pos:start="25:19" pos:end="25:55"><name pos:start="25:19" pos:end="25:30">decode_slice</name><argument_list pos:start="25:31" pos:end="25:55">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">avctx</name></expr></argument>, <argument pos:start="25:39" pos:end="25:54"><expr pos:start="25:39" pos:end="25:54"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:54"><name pos:start="25:40" pos:end="25:40">h</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:51">slice_ctx</name><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">mb_y</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:33"><name pos:start="27:19" pos:end="27:19">h</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:30">slice_ctx</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>]</index></name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:38">mb_y</name></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="69:5">else <block pos:start="31:12" pos:end="69:5">{<block_content pos:start="33:9" pos:end="67:9">

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:18">av_assert0</name><argument_list pos:start="33:19" pos:end="33:37">(<argument pos:start="33:20" pos:end="33:36"><expr pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:32">context_count</name> <operator pos:start="33:34" pos:end="33:34">&gt;</operator> <literal type="number" pos:start="33:36" pos:end="33:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="45:9">for <control pos:start="35:13" pos:end="35:43">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:38"><expr pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:37">context_count</name></expr>;</condition> <incr pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:40">i</name><operator pos:start="35:41" pos:end="35:42">++</operator></expr></incr>)</control> <block pos:start="35:45" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:13">

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:14">sl</name>                 <operator pos:start="37:32" pos:end="37:32">=</operator> <operator pos:start="37:34" pos:end="37:34">&amp;</operator><name pos:start="37:35" pos:end="37:49"><name pos:start="37:35" pos:end="37:35">h</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:46">slice_ctx</name><index pos:start="37:47" pos:end="37:49">[<expr pos:start="37:48" pos:end="37:48"><name pos:start="37:48" pos:end="37:48">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:40">(<expr pos:start="39:17" pos:end="39:39"><name pos:start="39:17" pos:end="39:39">CONFIG_ERROR_RESILIENCE</name></expr>)</condition> <block pos:start="39:42" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:39">

                <expr_stmt pos:start="41:17" pos:end="41:39"><expr pos:start="41:17" pos:end="41:38"><name pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:18">sl</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:22">er</name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:34">error_count</name></name> <operator pos:start="41:36" pos:end="41:36">=</operator> <literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="49:9" pos:end="51:69"><expr pos:start="49:9" pos:end="51:68"><call pos:start="49:9" pos:end="51:68"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">execute</name></name><argument_list pos:start="49:23" pos:end="51:68">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">avctx</name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:42">decode_slice</name></expr></argument>, <argument pos:start="49:45" pos:end="49:56"><expr pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:45">h</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:56">slice_ctx</name></name></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">NULL</name></expr></argument>, <argument pos:start="51:30" pos:end="51:42"><expr pos:start="51:30" pos:end="51:42"><name pos:start="51:30" pos:end="51:42">context_count</name></expr></argument>, <argument pos:start="51:45" pos:end="51:67"><expr pos:start="51:45" pos:end="51:67"><sizeof pos:start="51:45" pos:end="51:67">sizeof<argument_list pos:start="51:51" pos:end="51:67">(<argument pos:start="51:52" pos:end="51:66"><expr pos:start="51:52" pos:end="51:66"><name pos:start="51:52" pos:end="51:66"><name pos:start="51:52" pos:end="51:52">h</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:63">slice_ctx</name><index pos:start="51:64" pos:end="51:66">[<expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:59">/* pull back stuff from slices to master context */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:10">sl</name>                   <operator pos:start="57:30" pos:end="57:30">=</operator> <operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:63"><name pos:start="57:33" pos:end="57:33">h</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:44">slice_ctx</name><index pos:start="57:45" pos:end="57:63">[<expr pos:start="57:46" pos:end="57:62"><name pos:start="57:46" pos:end="57:58">context_count</name> <operator pos:start="57:60" pos:end="57:60">-</operator> <literal type="number" pos:start="57:62" pos:end="57:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:9">h</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:15">mb_y</name></name>              <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:39"><name pos:start="59:32" pos:end="59:33">sl</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">mb_y</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:36">(<expr pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:35">CONFIG_ERROR_RESILIENCE</name></expr>)</condition> <block pos:start="61:38" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:81">

            <for pos:start="63:13" pos:end="65:81">for <control pos:start="63:17" pos:end="63:47">(<init pos:start="63:18" pos:end="63:23"><expr pos:start="63:18" pos:end="63:22"><name pos:start="63:18" pos:end="63:18">i</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>;</init> <condition pos:start="63:25" pos:end="63:42"><expr pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:25">i</name> <operator pos:start="63:27" pos:end="63:27">&lt;</operator> <name pos:start="63:29" pos:end="63:41">context_count</name></expr>;</condition> <incr pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><name pos:start="63:44" pos:end="63:44">i</name><operator pos:start="63:45" pos:end="63:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:17" pos:end="65:81"><block_content pos:start="65:17" pos:end="65:81">

                <expr_stmt pos:start="65:17" pos:end="65:81"><expr pos:start="65:17" pos:end="65:80"><name pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:17">h</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:28">slice_ctx</name><index pos:start="65:29" pos:end="65:31">[<expr pos:start="65:30" pos:end="65:30"><literal type="number" pos:start="65:30" pos:end="65:30">0</literal></expr>]</index></name><operator pos:start="65:32" pos:end="65:32">.</operator><name pos:start="65:33" pos:end="65:46"><name pos:start="65:33" pos:end="65:34">er</name><operator pos:start="65:35" pos:end="65:35">.</operator><name pos:start="65:36" pos:end="65:46">error_count</name></name> <operator pos:start="65:48" pos:end="65:49">+=</operator> <name pos:start="65:51" pos:end="65:65"><name pos:start="65:51" pos:end="65:51">h</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:62">slice_ctx</name><index pos:start="65:63" pos:end="65:65">[<expr pos:start="65:64" pos:end="65:64"><name pos:start="65:64" pos:end="65:64">i</name></expr>]</index></name><operator pos:start="65:66" pos:end="65:66">.</operator><name pos:start="65:67" pos:end="65:80"><name pos:start="65:67" pos:end="65:68">er</name><operator pos:start="65:69" pos:end="65:69">.</operator><name pos:start="65:70" pos:end="65:80">error_count</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
