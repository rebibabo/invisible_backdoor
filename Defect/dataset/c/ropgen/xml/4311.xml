<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4311.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">ehci_execute</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">EHCIQueue</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">USBDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">endp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">devadr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:43">( <expr pos:start="15:10" pos:end="15:42"><operator pos:start="15:10" pos:end="15:10">!</operator><operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:12">q</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:16">qh</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:22">token</name></name> <operator pos:start="15:24" pos:end="15:24">&amp;</operator> <name pos:start="15:26" pos:end="15:41">QTD_TOKEN_ACTIVE</name><operator pos:start="15:42" pos:end="15:42">)</operator></expr>)</condition> <block pos:start="15:45" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:31">

        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:62">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:61"><expr pos:start="17:25" pos:end="17:61"><literal type="string" pos:start="17:25" pos:end="17:61">"Attempting to execute inactive QH\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">q</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">tbytes</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:28"><name pos:start="25:18" pos:end="25:18">q</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:22">qh</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:28">token</name></name> <operator pos:start="25:30" pos:end="25:30">&amp;</operator> <name pos:start="25:32" pos:end="25:52">QTD_TOKEN_TBYTES_MASK</name><operator pos:start="25:53" pos:end="25:53">)</operator> <operator pos:start="25:55" pos:end="25:56">&gt;&gt;</operator> <name pos:start="25:58" pos:end="25:76">QTD_TOKEN_TBYTES_SH</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">q</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">tbytes</name></name> <operator pos:start="27:19" pos:end="27:19">&gt;</operator> <name pos:start="27:21" pos:end="27:29">BUFF_SIZE</name></expr>)</condition> <block pos:start="27:32" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:31">

        <expr_stmt pos:start="29:9" pos:end="29:65"><expr pos:start="29:9" pos:end="29:64"><call pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="29:64">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="29:63"><expr pos:start="29:25" pos:end="29:63"><literal type="string" pos:start="29:25" pos:end="29:63">"Request for more bytes than allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">q</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">pid</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:25"><name pos:start="37:15" pos:end="37:15">q</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">qh</name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:25">token</name></name> <operator pos:start="37:27" pos:end="37:27">&amp;</operator> <name pos:start="37:29" pos:end="37:46">QTD_TOKEN_PID_MASK</name><operator pos:start="37:47" pos:end="37:47">)</operator> <operator pos:start="37:49" pos:end="37:50">&gt;&gt;</operator> <name pos:start="37:52" pos:end="37:67">QTD_TOKEN_PID_SH</name></expr>;</expr_stmt>

    <switch pos:start="39:5" pos:end="49:5">switch<condition pos:start="39:11" pos:end="39:18">(<expr pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:12">q</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:17">pid</name></name></expr>)</condition> <block pos:start="39:20" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:55">

        <case pos:start="41:9" pos:end="41:15">case <expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>:</case> <expr_stmt pos:start="41:17" pos:end="41:39"><expr pos:start="41:17" pos:end="41:38"><name pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:17">q</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:22">pid</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:38">USB_TOKEN_OUT</name></expr>;</expr_stmt> <break pos:start="41:41" pos:end="41:46">break;</break>

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr>:</case> <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:17">q</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:22">pid</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:37">USB_TOKEN_IN</name></expr>;</expr_stmt> <break pos:start="43:40" pos:end="43:45">break;</break>

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">2</literal></expr>:</case> <expr_stmt pos:start="45:17" pos:end="45:41"><expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">q</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:22">pid</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:40">USB_TOKEN_SETUP</name></expr>;</expr_stmt> <break pos:start="45:43" pos:end="45:48">break;</break>

        <default pos:start="47:9" pos:end="47:16">default:</default> <expr_stmt pos:start="47:18" pos:end="47:48"><expr pos:start="47:18" pos:end="47:47"><call pos:start="47:18" pos:end="47:47"><name pos:start="47:18" pos:end="47:24">fprintf</name><argument_list pos:start="47:25" pos:end="47:47">(<argument pos:start="47:26" pos:end="47:31"><expr pos:start="47:26" pos:end="47:31"><name pos:start="47:26" pos:end="47:31">stderr</name></expr></argument>, <argument pos:start="47:34" pos:end="47:46"><expr pos:start="47:34" pos:end="47:46"><literal type="string" pos:start="47:34" pos:end="47:46">"bad token\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="47:50" pos:end="47:55">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:35">(<expr pos:start="53:9" pos:end="53:34"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:26">ehci_init_transfer</name><argument_list pos:start="53:27" pos:end="53:29">(<argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">q</name></expr></argument>)</argument_list></call> <operator pos:start="53:31" pos:end="53:32">!=</operator> <literal type="number" pos:start="53:34" pos:end="53:34">0</literal></expr>)</condition> <block pos:start="53:37" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:49"><expr pos:start="61:5" pos:end="61:48"><name pos:start="61:5" pos:end="61:8">endp</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:48"><name pos:start="61:12" pos:end="61:20">get_field</name><argument_list pos:start="61:21" pos:end="61:48">(<argument pos:start="61:22" pos:end="61:33"><expr pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:22">q</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:26">qh</name><operator pos:start="61:27" pos:end="61:27">.</operator><name pos:start="61:28" pos:end="61:33">epchar</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:47"><expr pos:start="61:36" pos:end="61:47"><name pos:start="61:36" pos:end="61:47">QH_EPCHAR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:56"><expr pos:start="63:5" pos:end="63:55"><name pos:start="63:5" pos:end="63:10">devadr</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:55"><name pos:start="63:14" pos:end="63:22">get_field</name><argument_list pos:start="63:23" pos:end="63:55">(<argument pos:start="63:24" pos:end="63:35"><expr pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:24">q</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:28">qh</name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:35">epchar</name></name></expr></argument>, <argument pos:start="63:38" pos:end="63:54"><expr pos:start="63:38" pos:end="63:54"><name pos:start="63:38" pos:end="63:54">QH_EPCHAR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <name pos:start="67:11" pos:end="67:23">USB_RET_NODEV</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:55"><expr pos:start="71:5" pos:end="71:54"><call pos:start="71:5" pos:end="71:54"><name pos:start="71:5" pos:end="71:20">usb_packet_setup</name><argument_list pos:start="71:21" pos:end="71:54">(<argument pos:start="71:22" pos:end="71:31"><expr pos:start="71:22" pos:end="71:31"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:23">q</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:31">packet</name></name></expr></argument>, <argument pos:start="71:34" pos:end="71:39"><expr pos:start="71:34" pos:end="71:39"><name pos:start="71:34" pos:end="71:39"><name pos:start="71:34" pos:end="71:34">q</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:39">pid</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:47"><expr pos:start="71:42" pos:end="71:47"><name pos:start="71:42" pos:end="71:47">devadr</name></expr></argument>, <argument pos:start="71:50" pos:end="71:53"><expr pos:start="71:50" pos:end="71:53"><name pos:start="71:50" pos:end="71:53">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><call pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:18">usb_packet_map</name><argument_list pos:start="73:19" pos:end="73:39">(<argument pos:start="73:20" pos:end="73:29"><expr pos:start="73:20" pos:end="73:29"><operator pos:start="73:20" pos:end="73:20">&amp;</operator><name pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:21">q</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:29">packet</name></name></expr></argument>, <argument pos:start="73:32" pos:end="73:38"><expr pos:start="73:32" pos:end="73:38"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:38"><name pos:start="73:33" pos:end="73:33">q</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:38">sgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="77:5" pos:end="77:47">// TO-DO: associating device with ehci port</comment>

    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:7">dev</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="79:54"><name pos:start="79:11" pos:end="79:26">ehci_find_device</name><argument_list pos:start="79:27" pos:end="79:54">(<argument pos:start="79:28" pos:end="79:34"><expr pos:start="79:28" pos:end="79:34"><name pos:start="79:28" pos:end="79:34"><name pos:start="79:28" pos:end="79:28">q</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:34">ehci</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:53"><expr pos:start="79:37" pos:end="79:53"><name pos:start="79:37" pos:end="79:53"><name pos:start="79:37" pos:end="79:37">q</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:45">packet</name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:53">devaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:44"><name pos:start="81:11" pos:end="81:27">usb_handle_packet</name><argument_list pos:start="81:28" pos:end="81:44">(<argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">dev</name></expr></argument>, <argument pos:start="81:34" pos:end="81:43"><expr pos:start="81:34" pos:end="81:43"><operator pos:start="81:34" pos:end="81:34">&amp;</operator><name pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:35">q</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:43">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="89:54"><expr pos:start="83:5" pos:end="89:53"><call pos:start="83:5" pos:end="89:53"><name pos:start="83:5" pos:end="83:11">DPRINTF</name><argument_list pos:start="83:12" pos:end="89:53">(<argument pos:start="83:13" pos:end="85:41"><expr pos:start="83:13" pos:end="85:41"><literal type="string" pos:start="83:13" pos:end="83:58">"submit: qh %x next %x qtd %x pid %x len %zd "</literal>

            <literal type="string" pos:start="85:13" pos:end="85:41">"(total %d) endp %x ret %d\n"</literal></expr></argument>,

            <argument pos:start="87:13" pos:end="87:21"><expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:13">q</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:21">qhaddr</name></name></expr></argument>, <argument pos:start="87:24" pos:end="87:33"><expr pos:start="87:24" pos:end="87:33"><name pos:start="87:24" pos:end="87:33"><name pos:start="87:24" pos:end="87:24">q</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:28">qh</name><operator pos:start="87:29" pos:end="87:29">.</operator><name pos:start="87:30" pos:end="87:33">next</name></name></expr></argument>, <argument pos:start="87:36" pos:end="87:45"><expr pos:start="87:36" pos:end="87:45"><name pos:start="87:36" pos:end="87:45"><name pos:start="87:36" pos:end="87:36">q</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:45">qtdaddr</name></name></expr></argument>, <argument pos:start="87:48" pos:end="87:53"><expr pos:start="87:48" pos:end="87:53"><name pos:start="87:48" pos:end="87:53"><name pos:start="87:48" pos:end="87:48">q</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:53">pid</name></name></expr></argument>,

            <argument pos:start="89:13" pos:end="89:30"><expr pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:13">q</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:21">packet</name><operator pos:start="89:22" pos:end="89:22">.</operator><name pos:start="89:23" pos:end="89:25">iov</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:30">size</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:41"><expr pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:41"><name pos:start="89:33" pos:end="89:33">q</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:41">tbytes</name></name></expr></argument>, <argument pos:start="89:44" pos:end="89:47"><expr pos:start="89:44" pos:end="89:47"><name pos:start="89:44" pos:end="89:47">endp</name></expr></argument>, <argument pos:start="89:50" pos:end="89:52"><expr pos:start="89:50" pos:end="89:52"><name pos:start="89:50" pos:end="89:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:24">(<expr pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">&gt;</operator> <name pos:start="93:15" pos:end="93:23">BUFF_SIZE</name></expr>)</condition> <block pos:start="93:26" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:31">

        <expr_stmt pos:start="95:9" pos:end="95:68"><expr pos:start="95:9" pos:end="95:67"><call pos:start="95:9" pos:end="95:67"><name pos:start="95:9" pos:end="95:15">fprintf</name><argument_list pos:start="95:16" pos:end="95:67">(<argument pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">stderr</name></expr></argument>, <argument pos:start="95:25" pos:end="95:66"><expr pos:start="95:25" pos:end="95:66"><literal type="string" pos:start="95:25" pos:end="95:66">"ret from usb_handle_packet &gt; BUFF_SIZE\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:31">return <expr pos:start="97:16" pos:end="97:30"><name pos:start="97:16" pos:end="97:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
