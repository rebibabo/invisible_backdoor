<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16264.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_packetheader</name><parameter_list pos:start="1:28" pos:end="1:82">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">NUTContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">nut</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:58">ByteIOContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:81"><decl pos:start="1:65" pos:end="1:81"><type pos:start="1:65" pos:end="1:81"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:81">prefix_length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:16">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">start</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:20" pos:end="5:23">size</name></decl>, <decl pos:start="5:26" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:26" pos:end="5:34">last_size</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:9">start</name><operator pos:start="7:10" pos:end="7:10">=</operator> <call pos:start="7:12" pos:end="7:24"><name pos:start="7:12" pos:end="7:20">url_ftell</name><argument_list pos:start="7:21" pos:end="7:24">(<argument pos:start="7:22" pos:end="7:23"><expr pos:start="7:22" pos:end="7:23"><name pos:start="7:22" pos:end="7:23">bc</name></expr></argument>)</argument_list></call> <operator pos:start="7:26" pos:end="7:26">-</operator> <name pos:start="7:28" pos:end="7:40">prefix_length</name></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:61">(<expr pos:start="11:8" pos:end="11:60"><name pos:start="11:8" pos:end="11:12">start</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <name pos:start="11:17" pos:end="11:33"><name pos:start="11:17" pos:end="11:19">nut</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:33">packet_start</name></name> <operator pos:start="11:35" pos:end="11:35">+</operator> <name pos:start="11:37" pos:end="11:60"><name pos:start="11:37" pos:end="11:39">nut</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:60">written_packet_size</name></name></expr>)</condition><block pos:start="11:62" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:86"><expr pos:start="13:9" pos:end="13:85"><call pos:start="13:9" pos:end="13:85"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:85">(<argument pos:start="13:16" pos:end="13:23"><expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:18">nut</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:23">avf</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:40" pos:end="13:84"><expr pos:start="13:40" pos:end="13:84"><literal type="string" pos:start="13:40" pos:end="13:84">"get_packetheader called at weird position\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:8">size</name><operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:19"><name pos:start="21:11" pos:end="21:15">get_v</name><argument_list pos:start="21:16" pos:end="21:19">(<argument pos:start="21:17" pos:end="21:18"><expr pos:start="21:17" pos:end="21:18"><name pos:start="21:17" pos:end="21:18">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:13">last_size</name><operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:20">get_v</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:45">(<expr pos:start="25:8" pos:end="25:44"><name pos:start="25:8" pos:end="25:31"><name pos:start="25:8" pos:end="25:10">nut</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:31">written_packet_size</name></name> <operator pos:start="25:33" pos:end="25:34">!=</operator> <name pos:start="25:36" pos:end="25:44">last_size</name></expr>)</condition><block pos:start="25:46" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:129"><expr pos:start="27:9" pos:end="27:128"><call pos:start="27:9" pos:end="27:128"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:128">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:18">nut</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:23">avf</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:40" pos:end="27:83"><expr pos:start="27:40" pos:end="27:83"><literal type="string" pos:start="27:40" pos:end="27:83">"packet size missmatch %d != %lld at %lld\n"</literal></expr></argument>, <argument pos:start="27:86" pos:end="27:109"><expr pos:start="27:86" pos:end="27:109"><name pos:start="27:86" pos:end="27:109"><name pos:start="27:86" pos:end="27:88">nut</name><operator pos:start="27:89" pos:end="27:90">-&gt;</operator><name pos:start="27:91" pos:end="27:109">written_packet_size</name></name></expr></argument>, <argument pos:start="27:112" pos:end="27:120"><expr pos:start="27:112" pos:end="27:120"><name pos:start="27:112" pos:end="27:120">last_size</name></expr></argument>, <argument pos:start="27:123" pos:end="27:127"><expr pos:start="27:123" pos:end="27:127"><name pos:start="27:123" pos:end="27:127">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">nut</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:26">last_packet_start</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:32">nut</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:46">packet_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">nut</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">packet_start</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:29">start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:7">nut</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:28">written_packet_size</name></name><operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:34">size</name></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:16">return <expr pos:start="43:12" pos:end="43:15"><name pos:start="43:12" pos:end="43:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
