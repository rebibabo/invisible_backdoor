<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13793.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">usb_wacom_handle_data</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">USBDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">USBWacomState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:37">USBWacomState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator> <name pos:start="5:42" pos:end="5:44">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="45:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:13">p</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">pid</name></name></expr>)</condition> <block pos:start="11:21" pos:end="45:5">{<block_content pos:start="13:5" pos:end="43:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">USB_TOKEN_IN</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="33:9"><if pos:start="15:9" pos:end="33:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:13">p</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">devep</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>)</condition> <block pos:start="15:28" pos:end="33:9">{<block_content pos:start="17:13" pos:end="31:18">

            <if_stmt pos:start="17:13" pos:end="19:35"><if pos:start="17:13" pos:end="19:35">if <condition pos:start="17:16" pos:end="17:41">(<expr pos:start="17:17" pos:end="17:40"><operator pos:start="17:17" pos:end="17:17">!</operator><operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:28"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:28">changed</name></name> <operator pos:start="17:30" pos:end="17:31">||</operator> <name pos:start="17:33" pos:end="17:39"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">idle</name></name><operator pos:start="17:40" pos:end="17:40">)</operator></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:35"><block_content pos:start="19:17" pos:end="19:35">

                <return pos:start="19:17" pos:end="19:35">return <expr pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:34">USB_RET_NAK</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">changed</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="29:57"><if pos:start="23:13" pos:end="25:57">if <condition pos:start="23:16" pos:end="23:42">(<expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:23">mode</name></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <name pos:start="23:28" pos:end="23:41">WACOM_MODE_HID</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:57"><block_content pos:start="25:17" pos:end="25:57">

                <expr_stmt pos:start="25:17" pos:end="25:57"><expr pos:start="25:17" pos:end="25:56"><name pos:start="25:17" pos:end="25:19">ret</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:56"><name pos:start="25:23" pos:end="25:36">usb_mouse_poll</name><argument_list pos:start="25:37" pos:end="25:56">(<argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">s</name></expr></argument>, <argument pos:start="25:41" pos:end="25:47"><expr pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:41">p</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:47">data</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:55"><expr pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:50">p</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:55">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="27:13" pos:end="29:57">else if <condition pos:start="27:21" pos:end="27:49">(<expr pos:start="27:22" pos:end="27:48"><name pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:28">mode</name></name> <operator pos:start="27:30" pos:end="27:31">==</operator> <name pos:start="27:33" pos:end="27:48">WACOM_MODE_WACOM</name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:57"><block_content pos:start="29:17" pos:end="29:57">

                <expr_stmt pos:start="29:17" pos:end="29:57"><expr pos:start="29:17" pos:end="29:56"><name pos:start="29:17" pos:end="29:19">ret</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:56"><name pos:start="29:23" pos:end="29:36">usb_wacom_poll</name><argument_list pos:start="29:37" pos:end="29:56">(<argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">s</name></expr></argument>, <argument pos:start="29:41" pos:end="29:47"><expr pos:start="29:41" pos:end="29:47"><name pos:start="29:41" pos:end="29:47"><name pos:start="29:41" pos:end="29:41">p</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:47">data</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:55"><expr pos:start="29:50" pos:end="29:55"><name pos:start="29:50" pos:end="29:55"><name pos:start="29:50" pos:end="29:50">p</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:55">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:28">/* Fall through.  */</comment>

    <case pos:start="37:5" pos:end="37:23">case <expr pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:22">USB_TOKEN_OUT</name></expr>:</case>

    <default pos:start="39:5" pos:end="39:12">default:</default>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
