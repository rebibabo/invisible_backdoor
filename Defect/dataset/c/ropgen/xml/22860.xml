<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22860.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">cpu_watchpoint_remove_all</name><parameter_list pos:start="1:31" pos:end="1:55">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:39">CPUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:54">mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUWatchpoint</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">wp</name></decl>, <decl pos:start="5:24" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">next</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:22">TAILQ_FOREACH_SAFE</name><argument_list pos:start="9:23" pos:end="9:58">(<argument pos:start="9:24" pos:end="9:25">wp</argument>, <argument pos:start="9:28" pos:end="9:44">&amp;env-&gt;watchpoints</argument>, <argument pos:start="9:47" pos:end="9:51">entry</argument>, <argument pos:start="9:54" pos:end="9:57">next</argument>)</argument_list></macro> <block pos:start="9:60" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:50">

        <if_stmt pos:start="11:9" pos:end="13:50"><if pos:start="11:9" pos:end="13:50">if <condition pos:start="11:12" pos:end="11:29">(<expr pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:14">wp</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:21">flags</name></name> <operator pos:start="11:23" pos:end="11:23">&amp;</operator> <name pos:start="11:25" pos:end="11:28">mask</name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:50"><block_content pos:start="13:13" pos:end="13:50">

            <expr_stmt pos:start="13:13" pos:end="13:50"><expr pos:start="13:13" pos:end="13:49"><call pos:start="13:13" pos:end="13:49"><name pos:start="13:13" pos:end="13:40">cpu_watchpoint_remove_by_ref</name><argument_list pos:start="13:41" pos:end="13:49">(<argument pos:start="13:42" pos:end="13:44"><expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">env</name></expr></argument>, <argument pos:start="13:47" pos:end="13:48"><expr pos:start="13:47" pos:end="13:48"><name pos:start="13:47" pos:end="13:48">wp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
