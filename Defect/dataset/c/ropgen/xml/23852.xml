<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23852.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int32_t</name></type> <name pos:start="1:16" pos:end="1:36">scsi_disk_dma_command</name><parameter_list pos:start="1:37" pos:end="1:68">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:48">SCSIRequest</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">req</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:5">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:53">= <expr pos:start="5:22" pos:end="5:53"><call pos:start="5:22" pos:end="5:53"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:53">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42">SCSIDiskReq</name></expr></argument>, <argument pos:start="5:45" pos:end="5:47"><expr pos:start="5:45" pos:end="5:47"><name pos:start="5:45" pos:end="5:47">req</name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:63">= <expr pos:start="7:24" pos:end="7:63"><call pos:start="7:24" pos:end="7:63"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:63">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:62"><expr pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:57">req</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:62">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:19">command</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:11">command</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:17">buf</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:59">(<expr pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">tray_open</name></name> <operator pos:start="19:22" pos:end="19:23">||</operator> <operator pos:start="19:25" pos:end="19:25">!</operator><call pos:start="19:26" pos:end="19:58"><name pos:start="19:26" pos:end="19:41">bdrv_is_inserted</name><argument_list pos:start="19:42" pos:end="19:58">(<argument pos:start="19:43" pos:end="19:57"><expr pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:43">s</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:49">qdev</name><operator pos:start="19:50" pos:end="19:50">.</operator><name pos:start="19:51" pos:end="19:54">conf</name><operator pos:start="19:55" pos:end="19:55">.</operator><name pos:start="19:56" pos:end="19:57">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:61" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><call pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:28">scsi_check_condition</name><argument_list pos:start="21:29" pos:end="21:54">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">r</name></expr></argument>, <argument pos:start="21:33" pos:end="21:53"><expr pos:start="21:33" pos:end="21:53"><call pos:start="21:33" pos:end="21:53"><name pos:start="21:33" pos:end="21:42">SENSE_CODE</name><argument_list pos:start="21:43" pos:end="21:53">(<argument pos:start="21:44" pos:end="21:52"><expr pos:start="21:44" pos:end="21:52"><name pos:start="21:44" pos:end="21:52">NO_MEDIUM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:7">len</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:46"><name pos:start="29:11" pos:end="29:30">scsi_data_cdb_length</name><argument_list pos:start="29:31" pos:end="29:46">(<argument pos:start="29:32" pos:end="29:45"><expr pos:start="29:32" pos:end="29:45"><name pos:start="29:32" pos:end="29:45"><name pos:start="29:32" pos:end="29:32">r</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">req</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:41">cmd</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:45">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="123:5">switch <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:19">command</name></expr>)</condition> <block pos:start="31:22" pos:end="123:5">{<block_content pos:start="33:5" pos:end="121:17">

    <case pos:start="33:5" pos:end="33:16">case <expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:15">READ_6</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:17">case <expr pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:16">READ_10</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:17">case <expr pos:start="37:10" pos:end="37:16"><name pos:start="37:10" pos:end="37:16">READ_12</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:17">case <expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:16">READ_16</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:78"><expr pos:start="41:9" pos:end="41:77"><call pos:start="41:9" pos:end="41:77"><name pos:start="41:9" pos:end="41:15">DPRINTF</name><argument_list pos:start="41:16" pos:end="41:77">(<argument pos:start="41:17" pos:end="41:55"><expr pos:start="41:17" pos:end="41:55"><literal type="string" pos:start="41:17" pos:end="41:32">"Read (sector %"</literal> <name pos:start="41:34" pos:end="41:39">PRId64</name> <literal type="string" pos:start="41:41" pos:end="41:55">", count %u)\n"</literal></expr></argument>, <argument pos:start="41:58" pos:end="41:71"><expr pos:start="41:58" pos:end="41:71"><name pos:start="41:58" pos:end="41:71"><name pos:start="41:58" pos:end="41:58">r</name><operator pos:start="41:59" pos:end="41:60">-&gt;</operator><name pos:start="41:61" pos:end="41:63">req</name><operator pos:start="41:64" pos:end="41:64">.</operator><name pos:start="41:65" pos:end="41:67">cmd</name><operator pos:start="41:68" pos:end="41:68">.</operator><name pos:start="41:69" pos:end="41:71">lba</name></name></expr></argument>, <argument pos:start="41:74" pos:end="41:76"><expr pos:start="41:74" pos:end="41:76"><name pos:start="41:74" pos:end="41:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:13">r</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">req</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:22">cmd</name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:26">buf</name><index pos:start="43:27" pos:end="43:29">[<expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>]</index></name> <operator pos:start="43:31" pos:end="43:31">&amp;</operator> <literal type="number" pos:start="43:33" pos:end="43:36">0xe0</literal></expr>)</condition> <block pos:start="43:39" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:33">

            <goto pos:start="45:13" pos:end="45:33">goto <name pos:start="45:18" pos:end="45:32">illegal_request</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:53">(<expr pos:start="49:13" pos:end="49:52"><operator pos:start="49:13" pos:end="49:13">!</operator><call pos:start="49:14" pos:end="49:52"><name pos:start="49:14" pos:end="49:28">check_lba_range</name><argument_list pos:start="49:29" pos:end="49:52">(<argument pos:start="49:30" pos:end="49:30"><expr pos:start="49:30" pos:end="49:30"><name pos:start="49:30" pos:end="49:30">s</name></expr></argument>, <argument pos:start="49:33" pos:end="49:46"><expr pos:start="49:33" pos:end="49:46"><name pos:start="49:33" pos:end="49:46"><name pos:start="49:33" pos:end="49:33">r</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:38">req</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:42">cmd</name><operator pos:start="49:43" pos:end="49:43">.</operator><name pos:start="49:44" pos:end="49:46">lba</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:51"><expr pos:start="49:49" pos:end="49:51"><name pos:start="49:49" pos:end="49:51">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:55" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:29">

            <goto pos:start="51:13" pos:end="51:29">goto <name pos:start="51:18" pos:end="51:28">illegal_lba</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:9">r</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">sector</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:21">r</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">req</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:30">cmd</name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:34">lba</name></name> <operator pos:start="55:36" pos:end="55:36">*</operator> <operator pos:start="55:38" pos:end="55:38">(</operator><name pos:start="55:39" pos:end="55:55"><name pos:start="55:39" pos:end="55:39">s</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:45">qdev</name><operator pos:start="55:46" pos:end="55:46">.</operator><name pos:start="55:47" pos:end="55:55">blocksize</name></name> <operator pos:start="55:57" pos:end="55:57">/</operator> <literal type="number" pos:start="55:59" pos:end="55:61">512</literal><operator pos:start="55:62" pos:end="55:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:9">r</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:23">sector_count</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:29">len</name> <operator pos:start="57:31" pos:end="57:31">*</operator> <operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:50"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:40">qdev</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:50">blocksize</name></name> <operator pos:start="57:52" pos:end="57:52">/</operator> <literal type="number" pos:start="57:54" pos:end="57:56">512</literal><operator pos:start="57:57" pos:end="57:57">)</operator></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:17">case <expr pos:start="61:10" pos:end="61:16"><name pos:start="61:10" pos:end="61:16">WRITE_6</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:18">case <expr pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:17">WRITE_10</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:18">case <expr pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:17">WRITE_12</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:18">case <expr pos:start="67:10" pos:end="67:17"><name pos:start="67:10" pos:end="67:17">WRITE_16</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:25">case <expr pos:start="69:10" pos:end="69:24"><name pos:start="69:10" pos:end="69:24">WRITE_VERIFY_10</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:25">case <expr pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:24">WRITE_VERIFY_12</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:25">case <expr pos:start="73:10" pos:end="73:24"><name pos:start="73:10" pos:end="73:24">WRITE_VERIFY_16</name></expr>:</case>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:47">(<expr pos:start="75:13" pos:end="75:46"><call pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:29">bdrv_is_read_only</name><argument_list pos:start="75:30" pos:end="75:46">(<argument pos:start="75:31" pos:end="75:45"><expr pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:37">qdev</name><operator pos:start="75:38" pos:end="75:38">.</operator><name pos:start="75:39" pos:end="75:42">conf</name><operator pos:start="75:43" pos:end="75:43">.</operator><name pos:start="75:44" pos:end="75:45">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:49" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:21">

            <expr_stmt pos:start="77:13" pos:end="77:65"><expr pos:start="77:13" pos:end="77:64"><call pos:start="77:13" pos:end="77:64"><name pos:start="77:13" pos:end="77:32">scsi_check_condition</name><argument_list pos:start="77:33" pos:end="77:64">(<argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">r</name></expr></argument>, <argument pos:start="77:37" pos:end="77:63"><expr pos:start="77:37" pos:end="77:63"><call pos:start="77:37" pos:end="77:63"><name pos:start="77:37" pos:end="77:46">SENSE_CODE</name><argument_list pos:start="77:47" pos:end="77:63">(<argument pos:start="77:48" pos:end="77:62"><expr pos:start="77:48" pos:end="77:62"><name pos:start="77:48" pos:end="77:62">WRITE_PROTECTED</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:21">return <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="87:37"><expr pos:start="83:9" pos:end="87:36"><call pos:start="83:9" pos:end="87:36"><name pos:start="83:9" pos:end="83:15">DPRINTF</name><argument_list pos:start="83:16" pos:end="87:36">(<argument pos:start="83:17" pos:end="83:58"><expr pos:start="83:17" pos:end="83:58"><literal type="string" pos:start="83:17" pos:end="83:35">"Write %s(sector %"</literal> <name pos:start="83:37" pos:end="83:42">PRId64</name> <literal type="string" pos:start="83:44" pos:end="83:58">", count %u)\n"</literal></expr></argument>,

                <argument pos:start="85:17" pos:end="85:59"><expr pos:start="85:17" pos:end="85:59"><ternary pos:start="85:17" pos:end="85:59"><condition pos:start="85:17" pos:end="85:40"><expr pos:start="85:17" pos:end="85:38"><operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:24">command</name> <operator pos:start="85:26" pos:end="85:26">&amp;</operator> <literal type="number" pos:start="85:28" pos:end="85:30">0xe</literal><operator pos:start="85:31" pos:end="85:31">)</operator> <operator pos:start="85:33" pos:end="85:34">==</operator> <literal type="number" pos:start="85:36" pos:end="85:38">0xe</literal></expr> ?</condition><then pos:start="85:42" pos:end="85:54"> <expr pos:start="85:42" pos:end="85:54"><literal type="string" pos:start="85:42" pos:end="85:54">"And Verify "</literal></expr> </then><else pos:start="85:56" pos:end="85:59">: <expr pos:start="85:58" pos:end="85:59"><literal type="string" pos:start="85:58" pos:end="85:59">""</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="87:17" pos:end="87:30"><expr pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:17">r</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:22">req</name><operator pos:start="87:23" pos:end="87:23">.</operator><name pos:start="87:24" pos:end="87:26">cmd</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:30">lba</name></name></expr></argument>, <argument pos:start="87:33" pos:end="87:35"><expr pos:start="87:33" pos:end="87:35"><name pos:start="87:33" pos:end="87:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:37">(<expr pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:13">r</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:18">req</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:22">cmd</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:26">buf</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr>]</index></name> <operator pos:start="89:31" pos:end="89:31">&amp;</operator> <literal type="number" pos:start="89:33" pos:end="89:36">0xe0</literal></expr>)</condition> <block pos:start="89:39" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:33">

            <goto pos:start="91:13" pos:end="91:33">goto <name pos:start="91:18" pos:end="91:32">illegal_request</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:53">(<expr pos:start="95:13" pos:end="95:52"><operator pos:start="95:13" pos:end="95:13">!</operator><call pos:start="95:14" pos:end="95:52"><name pos:start="95:14" pos:end="95:28">check_lba_range</name><argument_list pos:start="95:29" pos:end="95:52">(<argument pos:start="95:30" pos:end="95:30"><expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">s</name></expr></argument>, <argument pos:start="95:33" pos:end="95:46"><expr pos:start="95:33" pos:end="95:46"><name pos:start="95:33" pos:end="95:46"><name pos:start="95:33" pos:end="95:33">r</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:38">req</name><operator pos:start="95:39" pos:end="95:39">.</operator><name pos:start="95:40" pos:end="95:42">cmd</name><operator pos:start="95:43" pos:end="95:43">.</operator><name pos:start="95:44" pos:end="95:46">lba</name></name></expr></argument>, <argument pos:start="95:49" pos:end="95:51"><expr pos:start="95:49" pos:end="95:51"><name pos:start="95:49" pos:end="95:51">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:55" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:29">

            <goto pos:start="97:13" pos:end="97:29">goto <name pos:start="97:18" pos:end="97:28">illegal_lba</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">r</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">sector</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:34"><name pos:start="101:21" pos:end="101:21">r</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:26">req</name><operator pos:start="101:27" pos:end="101:27">.</operator><name pos:start="101:28" pos:end="101:30">cmd</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:34">lba</name></name> <operator pos:start="101:36" pos:end="101:36">*</operator> <operator pos:start="101:38" pos:end="101:38">(</operator><name pos:start="101:39" pos:end="101:55"><name pos:start="101:39" pos:end="101:39">s</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:45">qdev</name><operator pos:start="101:46" pos:end="101:46">.</operator><name pos:start="101:47" pos:end="101:55">blocksize</name></name> <operator pos:start="101:57" pos:end="101:57">/</operator> <literal type="number" pos:start="101:59" pos:end="101:61">512</literal><operator pos:start="101:62" pos:end="101:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:58"><expr pos:start="103:9" pos:end="103:57"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:9">r</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:23">sector_count</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:29">len</name> <operator pos:start="103:31" pos:end="103:31">*</operator> <operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:50"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:40">qdev</name><operator pos:start="103:41" pos:end="103:41">.</operator><name pos:start="103:42" pos:end="103:50">blocksize</name></name> <operator pos:start="103:52" pos:end="103:52">/</operator> <literal type="number" pos:start="103:54" pos:end="103:56">512</literal><operator pos:start="103:57" pos:end="103:57">)</operator></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <default pos:start="107:5" pos:end="107:12">default:</default>

        <expr_stmt pos:start="109:9" pos:end="109:16"><expr pos:start="109:9" pos:end="109:15"><call pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:13">abort</name><argument_list pos:start="109:14" pos:end="109:15">()</argument_list></call></expr>;</expr_stmt>

    <label pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:19">illegal_request</name>:</label>

        <expr_stmt pos:start="113:9" pos:end="113:59"><expr pos:start="113:9" pos:end="113:58"><call pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:28">scsi_check_condition</name><argument_list pos:start="113:29" pos:end="113:58">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">r</name></expr></argument>, <argument pos:start="113:33" pos:end="113:57"><expr pos:start="113:33" pos:end="113:57"><call pos:start="113:33" pos:end="113:57"><name pos:start="113:33" pos:end="113:42">SENSE_CODE</name><argument_list pos:start="113:43" pos:end="113:57">(<argument pos:start="113:44" pos:end="113:56"><expr pos:start="113:44" pos:end="113:56"><name pos:start="113:44" pos:end="113:56">INVALID_FIELD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:17">return <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</return>

    <label pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:15">illegal_lba</name>:</label>

        <expr_stmt pos:start="119:9" pos:end="119:62"><expr pos:start="119:9" pos:end="119:61"><call pos:start="119:9" pos:end="119:61"><name pos:start="119:9" pos:end="119:28">scsi_check_condition</name><argument_list pos:start="119:29" pos:end="119:61">(<argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><name pos:start="119:30" pos:end="119:30">r</name></expr></argument>, <argument pos:start="119:33" pos:end="119:60"><expr pos:start="119:33" pos:end="119:60"><call pos:start="119:33" pos:end="119:60"><name pos:start="119:33" pos:end="119:42">SENSE_CODE</name><argument_list pos:start="119:43" pos:end="119:60">(<argument pos:start="119:44" pos:end="119:59"><expr pos:start="119:44" pos:end="119:59"><name pos:start="119:44" pos:end="119:59">LBA_OUT_OF_RANGE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:17">return <expr pos:start="121:16" pos:end="121:16"><literal type="number" pos:start="121:16" pos:end="121:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:29">(<expr pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:9">r</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:23">sector_count</name></name> <operator pos:start="125:25" pos:end="125:26">==</operator> <literal type="number" pos:start="125:28" pos:end="125:28">0</literal></expr>)</condition> <block pos:start="125:31" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:41">

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><call pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:25">scsi_req_complete</name><argument_list pos:start="127:26" pos:end="127:40">(<argument pos:start="127:27" pos:end="127:33"><expr pos:start="127:27" pos:end="127:33"><operator pos:start="127:27" pos:end="127:27">&amp;</operator><name pos:start="127:28" pos:end="127:33"><name pos:start="127:28" pos:end="127:28">r</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:33">req</name></name></expr></argument>, <argument pos:start="127:36" pos:end="127:39"><expr pos:start="127:36" pos:end="127:39"><name pos:start="127:36" pos:end="127:39">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:32"><expr pos:start="131:5" pos:end="131:31"><call pos:start="131:5" pos:end="131:31"><name pos:start="131:5" pos:end="131:10">assert</name><argument_list pos:start="131:11" pos:end="131:31">(<argument pos:start="131:12" pos:end="131:30"><expr pos:start="131:12" pos:end="131:30"><name pos:start="131:12" pos:end="131:25"><name pos:start="131:12" pos:end="131:12">r</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:17">iov</name><operator pos:start="131:18" pos:end="131:18">.</operator><name pos:start="131:19" pos:end="131:25">iov_len</name></name> <operator pos:start="131:27" pos:end="131:28">==</operator> <literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="141:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:44">(<expr pos:start="133:9" pos:end="133:43"><name pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:9">r</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:14">req</name><operator pos:start="133:15" pos:end="133:15">.</operator><name pos:start="133:16" pos:end="133:18">cmd</name><operator pos:start="133:19" pos:end="133:19">.</operator><name pos:start="133:20" pos:end="133:23">mode</name></name> <operator pos:start="133:25" pos:end="133:26">==</operator> <name pos:start="133:28" pos:end="133:43">SCSI_XFER_TO_DEV</name></expr>)</condition> <block pos:start="133:46" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:38">

        <return pos:start="135:9" pos:end="135:38">return <expr pos:start="135:16" pos:end="135:37"><operator pos:start="135:16" pos:end="135:16">-</operator><name pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:17">r</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:31">sector_count</name></name> <operator pos:start="135:33" pos:end="135:33">*</operator> <literal type="number" pos:start="135:35" pos:end="135:37">512</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="141:5">else <block pos:start="137:12" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:37">

        <return pos:start="139:9" pos:end="139:37">return <expr pos:start="139:16" pos:end="139:36"><name pos:start="139:16" pos:end="139:30"><name pos:start="139:16" pos:end="139:16">r</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:30">sector_count</name></name> <operator pos:start="139:32" pos:end="139:32">*</operator> <literal type="number" pos:start="139:34" pos:end="139:36">512</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
