<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20872.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">vmxnet3_adjust_by_guest_type</name><parameter_list pos:start="1:41" pos:end="1:57">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:53">VMXNET3State</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:78">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">Vmxnet3_GOSInfo</name></name></type> <name pos:start="5:28" pos:end="5:30">gos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:47"><expr pos:start="9:5" pos:end="11:46"><call pos:start="9:5" pos:end="11:46"><name pos:start="9:5" pos:end="9:27">VMXNET3_READ_DRV_SHARED</name><argument_list pos:start="9:28" pos:end="11:46">(<argument pos:start="9:29" pos:end="9:40"><expr pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">drv_shmem</name></name></expr></argument>, <argument pos:start="9:43" pos:end="9:69"><expr pos:start="9:43" pos:end="9:69"><name pos:start="9:43" pos:end="9:69"><name pos:start="9:43" pos:end="9:49">devRead</name><operator pos:start="9:50" pos:end="9:50">.</operator><name pos:start="9:51" pos:end="9:54">misc</name><operator pos:start="9:55" pos:end="9:55">.</operator><name pos:start="9:56" pos:end="9:65">driverInfo</name><operator pos:start="9:66" pos:end="9:66">.</operator><name pos:start="9:67" pos:end="9:69">gos</name></name></expr></argument>,

                            <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:32">gos</name></expr></argument>, <argument pos:start="11:35" pos:end="11:45"><expr pos:start="11:35" pos:end="11:45"><sizeof pos:start="11:35" pos:end="11:45">sizeof<argument_list pos:start="11:41" pos:end="11:45">(<argument pos:start="11:42" pos:end="11:44"><expr pos:start="11:42" pos:end="11:44"><name pos:start="11:42" pos:end="11:44">gos</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:61"><expr pos:start="13:5" pos:end="15:60"><name pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:26">rx_packets_compound</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator>

        <ternary pos:start="15:9" pos:end="15:60"><condition pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:45"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:12">gos</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:20">gosType</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <name pos:start="15:25" pos:end="15:44">VMXNET3_GOS_TYPE_WIN</name><operator pos:start="15:45" pos:end="15:45">)</operator></expr> ?</condition><then pos:start="15:49" pos:end="15:53"> <expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:53">false</name></expr> </then><else pos:start="15:55" pos:end="15:60">: <expr pos:start="15:57" pos:end="15:60"><name pos:start="15:57" pos:end="15:60">true</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:78"><expr pos:start="19:5" pos:end="19:77"><call pos:start="19:5" pos:end="19:77"><name pos:start="19:5" pos:end="19:13">VMW_CFPRN</name><argument_list pos:start="19:14" pos:end="19:77">(<argument pos:start="19:15" pos:end="19:52"><expr pos:start="19:15" pos:end="19:52"><literal type="string" pos:start="19:15" pos:end="19:52">"Guest type specifics: RXCOMPOUND: %d"</literal></expr></argument>, <argument pos:start="19:55" pos:end="19:76"><expr pos:start="19:55" pos:end="19:76"><name pos:start="19:55" pos:end="19:76"><name pos:start="19:55" pos:end="19:55">s</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:76">rx_packets_compound</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
