<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6224.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:22"><name pos:start="1:1" pos:end="1:20"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:20">GuestFileSeek</name></name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:41">qmp_guest_file_seek</name><parameter_list pos:start="1:42" pos:end="3:71">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:56">handle</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:65">int64_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:56">whence</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:63">Error</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier><modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:21">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">GuestFileHandle</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">gfh</name> <init pos:start="7:26" pos:end="7:63">= <expr pos:start="7:28" pos:end="7:63"><call pos:start="7:28" pos:end="7:63"><name pos:start="7:28" pos:end="7:49">guest_file_handle_find</name><argument_list pos:start="7:50" pos:end="7:63">(<argument pos:start="7:51" pos:end="7:56"><expr pos:start="7:51" pos:end="7:56"><name pos:start="7:51" pos:end="7:56">handle</name></expr></argument>, <argument pos:start="7:59" pos:end="7:62"><expr pos:start="7:59" pos:end="7:62"><name pos:start="7:59" pos:end="7:62">errp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GuestFileSeek</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">seek_data</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">FILE</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:12">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">gfh</name></expr>)</condition> <block pos:start="17:15" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:6">fh</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:16"><name pos:start="25:10" pos:end="25:12">gfh</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">fh</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:35"><name pos:start="27:11" pos:end="27:15">fseek</name><argument_list pos:start="27:16" pos:end="27:35">(<argument pos:start="27:17" pos:end="27:18"><expr pos:start="27:17" pos:end="27:18"><name pos:start="27:17" pos:end="27:18">fh</name></expr></argument>, <argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:26">offset</name></expr></argument>, <argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><name pos:start="27:29" pos:end="27:34">whence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:14">==</operator> <operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>)</condition> <block pos:start="29:20" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="31:61"><expr pos:start="31:9" pos:end="31:60"><call pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:24">error_setg_errno</name><argument_list pos:start="31:25" pos:end="31:60">(<argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">errp</name></expr></argument>, <argument pos:start="31:32" pos:end="31:36"><expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:36">errno</name></expr></argument>, <argument pos:start="31:39" pos:end="31:59"><expr pos:start="31:39" pos:end="31:59"><literal type="string" pos:start="31:39" pos:end="31:59">"failed to seek file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">errno</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <name pos:start="33:22" pos:end="33:27">ESPIPE</name></expr>)</condition> <block pos:start="33:30" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:38">

            <comment type="block" pos:start="35:13" pos:end="35:76">/* file is non-seekable, stdio shouldn't be buffering anyways */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">gfh</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:22">state</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:37">RW_STATE_NEW</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="51:5">else <block pos:start="41:12" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:34">

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:17">seek_data</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:26">g_new0</name><argument_list pos:start="43:27" pos:end="43:44">(<argument pos:start="43:28" pos:end="43:40"><expr pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:40">GuestFileSeek</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:17">seek_data</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">position</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <call pos:start="45:31" pos:end="45:39"><name pos:start="45:31" pos:end="45:35">ftell</name><argument_list pos:start="45:36" pos:end="45:39">(<argument pos:start="45:37" pos:end="45:38"><expr pos:start="45:37" pos:end="45:38"><name pos:start="45:37" pos:end="45:38">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:17">seek_data</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">eof</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:29">feof</name><argument_list pos:start="47:30" pos:end="47:33">(<argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><name pos:start="47:31" pos:end="47:32">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:11">gfh</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:18">state</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:33">RW_STATE_NEW</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><call pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:12">clearerr</name><argument_list pos:start="53:13" pos:end="53:16">(<argument pos:start="53:14" pos:end="53:15"><expr pos:start="53:14" pos:end="53:15"><name pos:start="53:14" pos:end="53:15">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:21">return <expr pos:start="57:12" pos:end="57:20"><name pos:start="57:12" pos:end="57:20">seek_data</name></expr>;</return>

</block_content>}</block></function>
</unit>
