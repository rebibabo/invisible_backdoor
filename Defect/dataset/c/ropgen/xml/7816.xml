<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7816.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:12">tap_open</name><parameter_list pos:start="1:13" pos:end="3:66">(<parameter pos:start="1:14" pos:end="1:25"><decl pos:start="1:14" pos:end="1:25"><type pos:start="1:14" pos:end="1:25"><name pos:start="1:14" pos:end="1:17">char</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:25">ifname</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:42">ifname_size</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:47">int</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">vnet_hdr</name></decl></parameter>,

             <parameter pos:start="3:14" pos:end="3:34"><decl pos:start="3:14" pos:end="3:34"><type pos:start="3:14" pos:end="3:34"><name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:34">vnet_hdr_required</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:51">mq_required</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:65"><decl pos:start="3:54" pos:end="3:65"><type pos:start="3:54" pos:end="3:65"><name pos:start="3:54" pos:end="3:58">Error</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier><modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="157:1">{<block_content pos:start="7:5" pos:end="155:14">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:16">ifreq</name></name></type> <name pos:start="7:18" pos:end="7:20">ifr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>, <decl pos:start="9:13" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name> <init pos:start="11:13" pos:end="11:43">= <expr pos:start="11:15" pos:end="11:43"><sizeof pos:start="11:15" pos:end="11:43">sizeof<argument_list pos:start="11:21" pos:end="11:43">(<argument pos:start="11:22" pos:end="11:42"><expr pos:start="11:22" pos:end="11:42">struct <name pos:start="11:29" pos:end="11:42">virtio_net_hdr</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:25">features</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:7">TFR</name><argument_list pos:start="17:8" pos:end="17:40">(<argument pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:10">fd</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:39"><name pos:start="17:14" pos:end="17:17">open</name><argument_list pos:start="17:18" pos:end="17:39">(<argument pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:30">PATH_NET_TUN</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><name pos:start="17:33" pos:end="17:38">O_RDWR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">fd</name> <operator pos:start="19:12" pos:end="19:12">&lt;</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>)</condition> <block pos:start="19:17" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:24">error_setg_errno</name><argument_list pos:start="21:25" pos:end="21:72">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">errp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">errno</name></expr></argument>, <argument pos:start="21:39" pos:end="21:57"><expr pos:start="21:39" pos:end="21:57"><literal type="string" pos:start="21:39" pos:end="21:57">"could not open %s"</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:71"><expr pos:start="21:60" pos:end="21:71"><name pos:start="21:60" pos:end="21:71">PATH_NET_TUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><call pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:32">(<argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:15">ifr</name></expr></argument>, <argument pos:start="27:18" pos:end="27:18"><expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></argument>, <argument pos:start="27:21" pos:end="27:31"><expr pos:start="27:21" pos:end="27:31"><sizeof pos:start="27:21" pos:end="27:31">sizeof<argument_list pos:start="27:27" pos:end="27:31">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">ifr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">ifr</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:17">ifr_flags</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:27">IFF_TAP</name> <operator pos:start="29:29" pos:end="29:29">|</operator> <name pos:start="29:31" pos:end="29:39">IFF_NO_PI</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:51">(<expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:13">ioctl</name><argument_list pos:start="33:14" pos:end="33:44">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">fd</name></expr></argument>, <argument pos:start="33:19" pos:end="33:32"><expr pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:32">TUNGETFEATURES</name></expr></argument>, <argument pos:start="33:35" pos:end="33:43"><expr pos:start="33:35" pos:end="33:43"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:43">features</name></expr></argument>)</argument_list></call> <operator pos:start="33:46" pos:end="33:47">==</operator> <operator pos:start="33:49" pos:end="33:49">-</operator><literal type="number" pos:start="33:50" pos:end="33:50">1</literal></expr>)</condition> <block pos:start="33:53" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:21">

        <expr_stmt pos:start="35:9" pos:end="35:76"><expr pos:start="35:9" pos:end="35:75"><call pos:start="35:9" pos:end="35:75"><name pos:start="35:9" pos:end="35:20">error_report</name><argument_list pos:start="35:21" pos:end="35:75">(<argument pos:start="35:22" pos:end="35:57"><expr pos:start="35:22" pos:end="35:57"><literal type="string" pos:start="35:22" pos:end="35:57">"warning: TUNGETFEATURES failed: %s"</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:74"><expr pos:start="35:60" pos:end="35:74"><call pos:start="35:60" pos:end="35:74"><name pos:start="35:60" pos:end="35:67">strerror</name><argument_list pos:start="35:68" pos:end="35:74">(<argument pos:start="35:69" pos:end="35:73"><expr pos:start="35:69" pos:end="35:73"><name pos:start="35:69" pos:end="35:73">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:16">features</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:33">(<expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:16">features</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <name pos:start="43:20" pos:end="43:32">IFF_ONE_QUEUE</name></expr>)</condition> <block pos:start="43:35" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:39">

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">ifr</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:21">ifr_flags</name></name> <operator pos:start="45:23" pos:end="45:24">|=</operator> <name pos:start="45:26" pos:end="45:38">IFF_ONE_QUEUE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="93:5"><if pos:start="51:5" pos:end="93:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:17">vnet_hdr</name></expr>)</condition> <block pos:start="51:20" pos:end="93:5">{<block_content pos:start="53:9" pos:end="91:41">

        <if_stmt pos:start="53:9" pos:end="63:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:36">(<expr pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:20">features</name> <operator pos:start="53:22" pos:end="53:22">&amp;</operator> <name pos:start="53:24" pos:end="53:35">IFF_VNET_HDR</name></expr>)</condition> <block pos:start="53:38" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:42">

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><operator pos:start="55:13" pos:end="55:13">*</operator><name pos:start="55:14" pos:end="55:21">vnet_hdr</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:15">ifr</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:25">ifr_flags</name></name> <operator pos:start="57:27" pos:end="57:28">|=</operator> <name pos:start="57:30" pos:end="57:41">IFF_VNET_HDR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="63:9">else <block pos:start="59:16" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:26">

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><operator pos:start="61:13" pos:end="61:13">*</operator><name pos:start="61:14" pos:end="61:21">vnet_hdr</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:44">(<expr pos:start="67:13" pos:end="67:43"><name pos:start="67:13" pos:end="67:29">vnet_hdr_required</name> <operator pos:start="67:31" pos:end="67:32">&amp;&amp;</operator> <operator pos:start="67:34" pos:end="67:34">!</operator><operator pos:start="67:35" pos:end="67:35">*</operator><name pos:start="67:36" pos:end="67:43">vnet_hdr</name></expr>)</condition> <block pos:start="67:46" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:22">

            <expr_stmt pos:start="69:13" pos:end="71:61"><expr pos:start="69:13" pos:end="71:60"><call pos:start="69:13" pos:end="71:60"><name pos:start="69:13" pos:end="69:22">error_setg</name><argument_list pos:start="69:23" pos:end="71:60">(<argument pos:start="69:24" pos:end="69:27"><expr pos:start="69:24" pos:end="69:27"><name pos:start="69:24" pos:end="69:27">errp</name></expr></argument>, <argument pos:start="69:30" pos:end="71:59"><expr pos:start="69:30" pos:end="71:59"><literal type="string" pos:start="69:30" pos:end="69:67">"vnet_hdr=1 requested, but no kernel "</literal>

                       <literal type="string" pos:start="71:24" pos:end="71:59">"support for IFF_VNET_HDR available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:22"><expr pos:start="73:13" pos:end="73:21"><call pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:17">close</name><argument_list pos:start="73:18" pos:end="73:21">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:22">return <expr pos:start="75:20" pos:end="75:21"><operator pos:start="75:20" pos:end="75:20">-</operator><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="79:9" pos:end="89:11">/*

         * Make sure vnet header size has the default value: for a persistent

         * tap it might have been modified e.g. by another instance of qemu.

         * Ignore errors since old kernels do not support this ioctl: in this

         * case the header size implicitly has the correct value.

         */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><call pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:13">ioctl</name><argument_list pos:start="91:14" pos:end="91:40">(<argument pos:start="91:15" pos:end="91:16"><expr pos:start="91:15" pos:end="91:16"><name pos:start="91:15" pos:end="91:16">fd</name></expr></argument>, <argument pos:start="91:19" pos:end="91:33"><expr pos:start="91:19" pos:end="91:33"><name pos:start="91:19" pos:end="91:33">TUNSETVNETHDRSZ</name></expr></argument>, <argument pos:start="91:36" pos:end="91:39"><expr pos:start="91:36" pos:end="91:39"><operator pos:start="91:36" pos:end="91:36">&amp;</operator><name pos:start="91:37" pos:end="91:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="115:5"><if pos:start="97:5" pos:end="115:5">if <condition pos:start="97:8" pos:end="97:20">(<expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:19">mq_required</name></expr>)</condition> <block pos:start="97:22" pos:end="115:5">{<block_content pos:start="99:9" pos:end="113:9">

        <if_stmt pos:start="99:9" pos:end="113:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:42">(<expr pos:start="99:13" pos:end="99:41"><operator pos:start="99:13" pos:end="99:13">!</operator><operator pos:start="99:14" pos:end="99:14">(</operator><name pos:start="99:15" pos:end="99:22">features</name> <operator pos:start="99:24" pos:end="99:24">&amp;</operator> <name pos:start="99:26" pos:end="99:40">IFF_MULTI_QUEUE</name><operator pos:start="99:41" pos:end="99:41">)</operator></expr>)</condition> <block pos:start="99:44" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:22">

            <expr_stmt pos:start="101:13" pos:end="103:64"><expr pos:start="101:13" pos:end="103:63"><call pos:start="101:13" pos:end="103:63"><name pos:start="101:13" pos:end="101:22">error_setg</name><argument_list pos:start="101:23" pos:end="103:63">(<argument pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:27">errp</name></expr></argument>, <argument pos:start="101:30" pos:end="103:62"><expr pos:start="101:30" pos:end="103:62"><literal type="string" pos:start="101:30" pos:end="101:66">"multiqueue required, but no kernel "</literal>

                       <literal type="string" pos:start="103:24" pos:end="103:62">"support for IFF_MULTI_QUEUE available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:22"><expr pos:start="105:13" pos:end="105:21"><call pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:17">close</name><argument_list pos:start="105:18" pos:end="105:21">(<argument pos:start="105:19" pos:end="105:20"><expr pos:start="105:19" pos:end="105:20"><name pos:start="105:19" pos:end="105:20">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:22">return <expr pos:start="107:20" pos:end="107:21"><operator pos:start="107:20" pos:end="107:20">-</operator><literal type="number" pos:start="107:21" pos:end="107:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:45">

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:15">ifr</name><operator pos:start="111:16" pos:end="111:16">.</operator><name pos:start="111:17" pos:end="111:25">ifr_flags</name></name> <operator pos:start="111:27" pos:end="111:28">|=</operator> <name pos:start="111:30" pos:end="111:44">IFF_MULTI_QUEUE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="125:49"><if pos:start="119:5" pos:end="121:48">if <condition pos:start="119:8" pos:end="119:26">(<expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:14">ifname</name><index pos:start="119:15" pos:end="119:17">[<expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>]</index></name> <operator pos:start="119:19" pos:end="119:20">!=</operator> <literal type="char" pos:start="119:22" pos:end="119:25">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:48"><block_content pos:start="121:9" pos:end="121:48">

        <expr_stmt pos:start="121:9" pos:end="121:48"><expr pos:start="121:9" pos:end="121:47"><call pos:start="121:9" pos:end="121:47"><name pos:start="121:9" pos:end="121:15">pstrcpy</name><argument_list pos:start="121:16" pos:end="121:47">(<argument pos:start="121:17" pos:end="121:28"><expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:19">ifr</name><operator pos:start="121:20" pos:end="121:20">.</operator><name pos:start="121:21" pos:end="121:28">ifr_name</name></name></expr></argument>, <argument pos:start="121:31" pos:end="121:38"><expr pos:start="121:31" pos:end="121:38"><name pos:start="121:31" pos:end="121:38">IFNAMSIZ</name></expr></argument>, <argument pos:start="121:41" pos:end="121:46"><expr pos:start="121:41" pos:end="121:46"><name pos:start="121:41" pos:end="121:46">ifname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="123:5" pos:end="125:49">else<block type="pseudo" pos:start="125:9" pos:end="125:49"><block_content pos:start="125:9" pos:end="125:49">

        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><call pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:15">pstrcpy</name><argument_list pos:start="125:16" pos:end="125:48">(<argument pos:start="125:17" pos:end="125:28"><expr pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:19">ifr</name><operator pos:start="125:20" pos:end="125:20">.</operator><name pos:start="125:21" pos:end="125:28">ifr_name</name></name></expr></argument>, <argument pos:start="125:31" pos:end="125:38"><expr pos:start="125:31" pos:end="125:38"><name pos:start="125:31" pos:end="125:38">IFNAMSIZ</name></expr></argument>, <argument pos:start="125:41" pos:end="125:47"><expr pos:start="125:41" pos:end="125:47"><literal type="string" pos:start="125:41" pos:end="125:47">"tap%d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:46"><expr pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:7">ret</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <call pos:start="127:11" pos:end="127:45"><name pos:start="127:11" pos:end="127:15">ioctl</name><argument_list pos:start="127:16" pos:end="127:45">(<argument pos:start="127:17" pos:end="127:18"><expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">fd</name></expr></argument>, <argument pos:start="127:21" pos:end="127:29"><expr pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:29">TUNSETIFF</name></expr></argument>, <argument pos:start="127:32" pos:end="127:44"><expr pos:start="127:32" pos:end="127:44"><operator pos:start="127:32" pos:end="127:32">(</operator><name pos:start="127:33" pos:end="127:36">void</name> <operator pos:start="127:38" pos:end="127:38">*</operator><operator pos:start="127:39" pos:end="127:39">)</operator> <operator pos:start="127:41" pos:end="127:41">&amp;</operator><name pos:start="127:42" pos:end="127:44">ifr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="149:5"><if pos:start="129:5" pos:end="149:5">if <condition pos:start="129:8" pos:end="129:17">(<expr pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:14">!=</operator> <literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>)</condition> <block pos:start="129:19" pos:end="149:5">{<block_content pos:start="131:9" pos:end="147:18">

        <if_stmt pos:start="131:9" pos:end="143:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:30">(<expr pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:21"><name pos:start="131:13" pos:end="131:18">ifname</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><literal type="number" pos:start="131:20" pos:end="131:20">0</literal></expr>]</index></name> <operator pos:start="131:23" pos:end="131:24">!=</operator> <literal type="char" pos:start="131:26" pos:end="131:29">'\0'</literal></expr>)</condition> <block pos:start="131:32" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:57">

            <expr_stmt pos:start="133:13" pos:end="135:57"><expr pos:start="133:13" pos:end="135:56"><call pos:start="133:13" pos:end="135:56"><name pos:start="133:13" pos:end="133:28">error_setg_errno</name><argument_list pos:start="133:29" pos:end="135:56">(<argument pos:start="133:30" pos:end="133:33"><expr pos:start="133:30" pos:end="133:33"><name pos:start="133:30" pos:end="133:33">errp</name></expr></argument>, <argument pos:start="133:36" pos:end="133:40"><expr pos:start="133:36" pos:end="133:40"><name pos:start="133:36" pos:end="133:40">errno</name></expr></argument>, <argument pos:start="133:43" pos:end="133:71"><expr pos:start="133:43" pos:end="133:71"><literal type="string" pos:start="133:43" pos:end="133:71">"could not configure %s (%s)"</literal></expr></argument>,

                             <argument pos:start="135:30" pos:end="135:41"><expr pos:start="135:30" pos:end="135:41"><name pos:start="135:30" pos:end="135:41">PATH_NET_TUN</name></expr></argument>, <argument pos:start="135:44" pos:end="135:55"><expr pos:start="135:44" pos:end="135:55"><name pos:start="135:44" pos:end="135:55"><name pos:start="135:44" pos:end="135:46">ifr</name><operator pos:start="135:47" pos:end="135:47">.</operator><name pos:start="135:48" pos:end="135:55">ifr_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="143:9">else <block pos:start="137:16" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:43">

            <expr_stmt pos:start="139:13" pos:end="141:43"><expr pos:start="139:13" pos:end="141:42"><call pos:start="139:13" pos:end="141:42"><name pos:start="139:13" pos:end="139:28">error_setg_errno</name><argument_list pos:start="139:29" pos:end="141:42">(<argument pos:start="139:30" pos:end="139:33"><expr pos:start="139:30" pos:end="139:33"><name pos:start="139:30" pos:end="139:33">errp</name></expr></argument>, <argument pos:start="139:36" pos:end="139:40"><expr pos:start="139:36" pos:end="139:40"><name pos:start="139:36" pos:end="139:40">errno</name></expr></argument>, <argument pos:start="139:43" pos:end="139:66"><expr pos:start="139:43" pos:end="139:66"><literal type="string" pos:start="139:43" pos:end="139:66">"could not configure %s"</literal></expr></argument>,

                             <argument pos:start="141:30" pos:end="141:41"><expr pos:start="141:30" pos:end="141:41"><name pos:start="141:30" pos:end="141:41">PATH_NET_TUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:18"><expr pos:start="145:9" pos:end="145:17"><call pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:13">close</name><argument_list pos:start="145:14" pos:end="145:17">(<argument pos:start="145:15" pos:end="145:16"><expr pos:start="145:15" pos:end="145:16"><name pos:start="145:15" pos:end="145:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:47"><expr pos:start="151:5" pos:end="151:46"><call pos:start="151:5" pos:end="151:46"><name pos:start="151:5" pos:end="151:11">pstrcpy</name><argument_list pos:start="151:12" pos:end="151:46">(<argument pos:start="151:13" pos:end="151:18"><expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:18">ifname</name></expr></argument>, <argument pos:start="151:21" pos:end="151:31"><expr pos:start="151:21" pos:end="151:31"><name pos:start="151:21" pos:end="151:31">ifname_size</name></expr></argument>, <argument pos:start="151:34" pos:end="151:45"><expr pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:36">ifr</name><operator pos:start="151:37" pos:end="151:37">.</operator><name pos:start="151:38" pos:end="151:45">ifr_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:35"><expr pos:start="153:5" pos:end="153:34"><call pos:start="153:5" pos:end="153:34"><name pos:start="153:5" pos:end="153:9">fcntl</name><argument_list pos:start="153:10" pos:end="153:34">(<argument pos:start="153:11" pos:end="153:12"><expr pos:start="153:11" pos:end="153:12"><name pos:start="153:11" pos:end="153:12">fd</name></expr></argument>, <argument pos:start="153:15" pos:end="153:21"><expr pos:start="153:15" pos:end="153:21"><name pos:start="153:15" pos:end="153:21">F_SETFL</name></expr></argument>, <argument pos:start="153:24" pos:end="153:33"><expr pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:14">return <expr pos:start="155:12" pos:end="155:13"><name pos:start="155:12" pos:end="155:13">fd</name></expr>;</return>

</block_content>}</block></function>
</unit>
