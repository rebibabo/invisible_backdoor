<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13300.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_ctts</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:21">j</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:24" pos:end="9:30">entries</name></decl>, <decl pos:start="9:33" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:33" pos:end="9:42">ctts_count</name> <init pos:start="9:44" pos:end="9:46">= <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:44">[<expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name><operator pos:start="17:42" pos:end="17:42">-</operator><literal type="number" pos:start="17:43" pos:end="17:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><call pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">avio_r8</name><argument_list pos:start="23:12" pos:end="23:15">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:18" pos:end="23:30">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb24</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:30">/* flags */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:11">entries</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:23">avio_rb32</name><argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:97"><expr pos:start="31:5" pos:end="31:96"><call pos:start="31:5" pos:end="31:96"><name pos:start="31:5" pos:end="31:10">av_log</name><argument_list pos:start="31:11" pos:end="31:96">(<argument pos:start="31:12" pos:end="31:16"><expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:12">c</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:16">fc</name></name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="31:33" pos:end="31:63"><expr pos:start="31:33" pos:end="31:63"><literal type="string" pos:start="31:33" pos:end="31:63">"track[%u].ctts.entries = %u\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:86"><expr pos:start="31:66" pos:end="31:86"><name pos:start="31:66" pos:end="31:82"><name pos:start="31:66" pos:end="31:66">c</name><operator pos:start="31:67" pos:end="31:68">-&gt;</operator><name pos:start="31:69" pos:end="31:70">fc</name><operator pos:start="31:71" pos:end="31:72">-&gt;</operator><name pos:start="31:73" pos:end="31:82">nb_streams</name></name> <operator pos:start="31:84" pos:end="31:84">-</operator> <literal type="number" pos:start="31:86" pos:end="31:86">1</literal></expr></argument>, <argument pos:start="31:89" pos:end="31:95"><expr pos:start="31:89" pos:end="31:95"><name pos:start="31:89" pos:end="31:95">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:16">entries</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:15">entries</name> <operator pos:start="39:17" pos:end="39:18">&gt;=</operator> <name pos:start="39:20" pos:end="39:27">UINT_MAX</name> <operator pos:start="39:29" pos:end="39:29">/</operator> <sizeof pos:start="39:31" pos:end="39:52">sizeof<argument_list pos:start="39:37" pos:end="39:52">(<argument pos:start="39:38" pos:end="39:51"><expr pos:start="39:38" pos:end="39:51"><operator pos:start="39:38" pos:end="39:38">*</operator><name pos:start="39:39" pos:end="39:51"><name pos:start="39:39" pos:end="39:40">sc</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:12">av_freep</name><argument_list pos:start="43:13" pos:end="43:28">(<argument pos:start="43:14" pos:end="43:27"><expr pos:start="43:14" pos:end="43:27"><operator pos:start="43:14" pos:end="43:14">&amp;</operator><name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:16">sc</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:27">ctts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:102"><expr pos:start="45:5" pos:end="45:101"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:6">sc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:17">ctts_data</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:101"><name pos:start="45:21" pos:end="45:35">av_fast_realloc</name><argument_list pos:start="45:36" pos:end="45:101">(<argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">NULL</name></expr></argument>, <argument pos:start="45:43" pos:end="45:66"><expr pos:start="45:43" pos:end="45:66"><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:66"><name pos:start="45:44" pos:end="45:45">sc</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:66">ctts_allocated_size</name></name></expr></argument>, <argument pos:start="45:69" pos:end="45:100"><expr pos:start="45:69" pos:end="45:100"><name pos:start="45:69" pos:end="45:75">entries</name> <operator pos:start="45:77" pos:end="45:77">*</operator> <sizeof pos:start="45:79" pos:end="45:100">sizeof<argument_list pos:start="45:85" pos:end="45:100">(<argument pos:start="45:86" pos:end="45:99"><expr pos:start="45:86" pos:end="45:99"><operator pos:start="45:86" pos:end="45:86">*</operator><name pos:start="45:87" pos:end="45:99"><name pos:start="45:87" pos:end="45:88">sc</name><operator pos:start="45:89" pos:end="45:90">-&gt;</operator><name pos:start="45:91" pos:end="45:99">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:11">sc</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:22">ctts_data</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="53:5" pos:end="107:5">for <control pos:start="53:9" pos:end="53:53">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:48"><expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:27">entries</name> <operator pos:start="53:29" pos:end="53:30">&amp;&amp;</operator> <operator pos:start="53:32" pos:end="53:32">!</operator><name pos:start="53:33" pos:end="53:47"><name pos:start="53:33" pos:end="53:34">pb</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:47">eof_reached</name></name></expr>;</condition> <incr pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:50">i</name><operator pos:start="53:51" pos:end="53:52">++</operator></expr></incr>)</control> <block pos:start="53:55" pos:end="107:5">{<block_content pos:start="55:9" pos:end="105:47">

        <decl_stmt pos:start="55:9" pos:end="55:36"><decl pos:start="55:9" pos:end="55:35"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:17">count</name>    <init pos:start="55:22" pos:end="55:35">=<expr pos:start="55:23" pos:end="55:35"><call pos:start="55:23" pos:end="55:35"><name pos:start="55:23" pos:end="55:31">avio_rb32</name><argument_list pos:start="55:32" pos:end="55:35">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:36"><decl pos:start="57:9" pos:end="57:35"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:20">duration</name> <init pos:start="57:22" pos:end="57:35">=<expr pos:start="57:23" pos:end="57:35"><call pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:31">avio_rb32</name><argument_list pos:start="57:32" pos:end="57:35">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:17">count</name> <operator pos:start="61:19" pos:end="61:20">&lt;=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>)</condition> <block pos:start="61:25" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:21">

            <expr_stmt pos:start="63:13" pos:end="67:36"><expr pos:start="63:13" pos:end="67:35"><call pos:start="63:13" pos:end="67:35"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="67:35">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:20">c</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:24">fc</name></name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_TRACE</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:68"><expr pos:start="65:20" pos:end="65:68"><literal type="string" pos:start="65:20" pos:end="65:68">"ignoring CTTS entry with count=%d duration=%d\n"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">count</name></expr></argument>, <argument pos:start="67:27" pos:end="67:34"><expr pos:start="67:27" pos:end="67:34"><name pos:start="67:27" pos:end="67:34">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="69:13" pos:end="69:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:74">/* Expand entries such that we have a 1-1 mapping with samples. */</comment>

        <for pos:start="77:9" pos:end="79:95">for <control pos:start="77:13" pos:end="77:35">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">j</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:30"><expr pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:21">j</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:29">count</name></expr>;</condition> <incr pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:32">j</name><operator pos:start="77:33" pos:end="77:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:13" pos:end="79:95"><block_content pos:start="79:13" pos:end="79:95">

            <expr_stmt pos:start="79:13" pos:end="79:95"><expr pos:start="79:13" pos:end="79:94"><call pos:start="79:13" pos:end="79:94"><name pos:start="79:13" pos:end="79:26">add_ctts_entry</name><argument_list pos:start="79:27" pos:end="79:94">(<argument pos:start="79:28" pos:end="79:41"><expr pos:start="79:28" pos:end="79:41"><operator pos:start="79:28" pos:end="79:28">&amp;</operator><name pos:start="79:29" pos:end="79:41"><name pos:start="79:29" pos:end="79:30">sc</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:41">ctts_data</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:54"><expr pos:start="79:44" pos:end="79:54"><operator pos:start="79:44" pos:end="79:44">&amp;</operator><name pos:start="79:45" pos:end="79:54">ctts_count</name></expr></argument>, <argument pos:start="79:57" pos:end="79:80"><expr pos:start="79:57" pos:end="79:80"><operator pos:start="79:57" pos:end="79:57">&amp;</operator><name pos:start="79:58" pos:end="79:80"><name pos:start="79:58" pos:end="79:59">sc</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:80">ctts_allocated_size</name></name></expr></argument>, <argument pos:start="79:83" pos:end="79:83"><expr pos:start="79:83" pos:end="79:83"><literal type="number" pos:start="79:83" pos:end="79:83">1</literal></expr></argument>, <argument pos:start="79:86" pos:end="79:93"><expr pos:start="79:86" pos:end="79:93"><name pos:start="79:86" pos:end="79:93">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="83:9" pos:end="85:33"><expr pos:start="83:9" pos:end="85:32"><call pos:start="83:9" pos:end="85:32"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="85:32">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:16">c</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:20">fc</name></name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="83:37" pos:end="83:61"><expr pos:start="83:37" pos:end="83:61"><literal type="string" pos:start="83:37" pos:end="83:61">"count=%d, duration=%d\n"</literal></expr></argument>,

                <argument pos:start="85:17" pos:end="85:21"><expr pos:start="85:17" pos:end="85:21"><name pos:start="85:17" pos:end="85:21">count</name></expr></argument>, <argument pos:start="85:24" pos:end="85:31"><expr pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:31">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="99:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:55">(<expr pos:start="89:13" pos:end="89:54"><call pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:18">FFNABS</name><argument_list pos:start="89:19" pos:end="89:28">(<argument pos:start="89:20" pos:end="89:27"><expr pos:start="89:20" pos:end="89:27"><name pos:start="89:20" pos:end="89:27">duration</name></expr></argument>)</argument_list></call> <operator pos:start="89:30" pos:end="89:30">&lt;</operator> <operator pos:start="89:32" pos:end="89:32">-</operator><operator pos:start="89:33" pos:end="89:33">(</operator><literal type="number" pos:start="89:34" pos:end="89:34">1</literal><operator pos:start="89:35" pos:end="89:36">&lt;&lt;</operator><literal type="number" pos:start="89:37" pos:end="89:38">28</literal><operator pos:start="89:39" pos:end="89:39">)</operator> <operator pos:start="89:41" pos:end="89:42">&amp;&amp;</operator> <name pos:start="89:44" pos:end="89:44">i</name><operator pos:start="89:45" pos:end="89:45">+</operator><literal type="number" pos:start="89:46" pos:end="89:46">2</literal><operator pos:start="89:47" pos:end="89:47">&lt;</operator><name pos:start="89:48" pos:end="89:54">entries</name></expr>)</condition> <block pos:start="89:57" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:21">

            <expr_stmt pos:start="91:13" pos:end="91:60"><expr pos:start="91:13" pos:end="91:59"><call pos:start="91:13" pos:end="91:59"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:59">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:20">c</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:24">fc</name></name></expr></argument>, <argument pos:start="91:27" pos:end="91:40"><expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="91:43" pos:end="91:58"><expr pos:start="91:43" pos:end="91:58"><literal type="string" pos:start="91:43" pos:end="91:58">"CTTS invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><call pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:20">av_freep</name><argument_list pos:start="93:21" pos:end="93:36">(<argument pos:start="93:22" pos:end="93:35"><expr pos:start="93:22" pos:end="93:35"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:35"><name pos:start="93:23" pos:end="93:24">sc</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:35">ctts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:31"><expr pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:14">sc</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:26">ctts_count</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <literal type="number" pos:start="95:30" pos:end="95:30">0</literal></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:21">return <expr pos:start="97:20" pos:end="97:20"><literal type="number" pos:start="97:20" pos:end="97:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="103:9" pos:end="105:47"><if pos:start="103:9" pos:end="105:47">if <condition pos:start="103:12" pos:end="103:24">(<expr pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:13">i</name><operator pos:start="103:14" pos:end="103:14">+</operator><literal type="number" pos:start="103:15" pos:end="103:15">2</literal><operator pos:start="103:16" pos:end="103:16">&lt;</operator><name pos:start="103:17" pos:end="103:23">entries</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:47"><block_content pos:start="105:13" pos:end="105:47">

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><call pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:32">mov_update_dts_shift</name><argument_list pos:start="105:33" pos:end="105:46">(<argument pos:start="105:34" pos:end="105:35"><expr pos:start="105:34" pos:end="105:35"><name pos:start="105:34" pos:end="105:35">sc</name></expr></argument>, <argument pos:start="105:38" pos:end="105:45"><expr pos:start="105:38" pos:end="105:45"><name pos:start="105:38" pos:end="105:45">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="111:5" pos:end="111:32"><expr pos:start="111:5" pos:end="111:31"><name pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:6">sc</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:18">ctts_count</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:31">ctts_count</name></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:27"><if pos:start="115:5" pos:end="117:27">if <condition pos:start="115:8" pos:end="115:24">(<expr pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:10">pb</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:27"><block_content pos:start="117:9" pos:end="117:27">

        <return pos:start="117:9" pos:end="117:27">return <expr pos:start="117:16" pos:end="117:26"><name pos:start="117:16" pos:end="117:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:65"><expr pos:start="121:5" pos:end="121:64"><call pos:start="121:5" pos:end="121:64"><name pos:start="121:5" pos:end="121:10">av_log</name><argument_list pos:start="121:11" pos:end="121:64">(<argument pos:start="121:12" pos:end="121:16"><expr pos:start="121:12" pos:end="121:16"><name pos:start="121:12" pos:end="121:16"><name pos:start="121:12" pos:end="121:12">c</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:16">fc</name></name></expr></argument>, <argument pos:start="121:19" pos:end="121:30"><expr pos:start="121:19" pos:end="121:30"><name pos:start="121:19" pos:end="121:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="121:33" pos:end="121:48"><expr pos:start="121:33" pos:end="121:48"><literal type="string" pos:start="121:33" pos:end="121:48">"dts shift %d\n"</literal></expr></argument>, <argument pos:start="121:51" pos:end="121:63"><expr pos:start="121:51" pos:end="121:63"><name pos:start="121:51" pos:end="121:63"><name pos:start="121:51" pos:end="121:52">sc</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:63">dts_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
