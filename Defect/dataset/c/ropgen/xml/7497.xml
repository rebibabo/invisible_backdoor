<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7497.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">op_to_mov</name><parameter_list pos:start="1:21" pos:end="1:28">(<parameter pos:start="1:22" pos:end="1:27"><decl pos:start="1:22" pos:end="1:27"><type pos:start="1:22" pos:end="1:24"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:27">op</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <switch pos:start="5:5" pos:end="27:5">switch <condition pos:start="5:12" pos:end="5:24">(<expr pos:start="5:13" pos:end="5:23"><call pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:19">op_bits</name><argument_list pos:start="5:20" pos:end="5:23">(<argument pos:start="5:21" pos:end="5:22"><expr pos:start="5:21" pos:end="5:22"><name pos:start="5:21" pos:end="5:22">op</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:26" pos:end="27:5">{<block_content pos:start="7:5" pos:end="25:20">

    <case pos:start="7:5" pos:end="7:12">case <expr pos:start="7:10" pos:end="7:11"><literal type="number" pos:start="7:10" pos:end="7:11">32</literal></expr>:</case>

        <return pos:start="9:9" pos:end="12:0">return <expr pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:31">INDEX_op_mov_i32</name></expr>;</return>

<cpp:if pos:start="11:1" pos:end="11:29">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:23">TCG_TARGET_REG_BITS</name> <operator pos:start="11:25" pos:end="11:26">==</operator> <literal type="number" pos:start="11:28" pos:end="11:29">64</literal></expr></cpp:if>

    <case pos:start="13:5" pos:end="13:12">case <expr pos:start="13:10" pos:end="13:11"><literal type="number" pos:start="13:10" pos:end="13:11">64</literal></expr>:</case>

        <return pos:start="15:9" pos:end="18:0">return <expr pos:start="15:16" pos:end="15:31"><name pos:start="15:16" pos:end="15:31">INDEX_op_mov_i64</name></expr>;</return>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <default pos:start="19:5" pos:end="19:12">default:</default>

        <expr_stmt pos:start="21:9" pos:end="23:39"><expr pos:start="21:9" pos:end="23:38"><call pos:start="21:9" pos:end="23:38"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="23:38">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="23:37"><expr pos:start="21:25" pos:end="23:37"><literal type="string" pos:start="21:25" pos:end="21:64">"op_to_mov: unexpected return value of "</literal>

                <literal type="string" pos:start="23:17" pos:end="23:37">"function op_bits.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><call pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">tcg_abort</name><argument_list pos:start="25:18" pos:end="25:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
