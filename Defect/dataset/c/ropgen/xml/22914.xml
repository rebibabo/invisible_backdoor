<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22914.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">decode_0</name><parameter_list pos:start="1:20" pos:end="1:70">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name></type> <name pos:start="1:52" pos:end="1:55">code</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="223:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">PAFVideoDecContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">c</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:24">opcode_size</name></decl>, <decl pos:start="7:27" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:27" pos:end="7:32">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name></decl>, <decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">dend</name></decl>, <decl pos:start="9:26" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:26" pos:end="9:29">mask</name> <init pos:start="9:31" pos:end="9:33">= <expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">0</literal></expr></init></decl>, <decl pos:start="9:36" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:36" pos:end="9:40">color</name> <init pos:start="9:42" pos:end="9:44">= <expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr></init></decl>, <decl pos:start="9:47" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:47" pos:end="9:47">a</name></decl>, <decl pos:start="9:50" pos:end="9:50"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:50" pos:end="9:50">b</name></decl>, <decl pos:start="9:53" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:53" pos:end="9:53">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">src</name></decl>, <decl pos:start="11:25" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:29">send</name></decl>, <decl pos:start="11:32" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:39">opcodes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>  <name pos:start="13:10" pos:end="13:10">i</name></decl>, <decl pos:start="13:13" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:13">j</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:16">x</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:5">i</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:28">bytestream2_get_byte</name><argument_list pos:start="17:29" pos:end="17:36">(<argument pos:start="17:30" pos:end="17:35"><expr pos:start="17:30" pos:end="17:35"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:31">c</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="73:5"><if pos:start="19:5" pos:end="73:5">if <condition pos:start="19:8" pos:end="19:10">(<expr pos:start="19:9" pos:end="19:9"><name pos:start="19:9" pos:end="19:9">i</name></expr>)</condition> <block pos:start="19:12" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:22">

        <if_stmt pos:start="21:9" pos:end="33:9"><if pos:start="21:9" pos:end="33:9">if <condition pos:start="21:12" pos:end="21:24">(<expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:16">code</name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <literal type="number" pos:start="21:20" pos:end="21:23">0x10</literal></expr>)</condition> <block pos:start="21:26" pos:end="33:9">{<block_content pos:start="23:13" pos:end="31:52">

            <decl_stmt pos:start="23:13" pos:end="23:22"><decl pos:start="23:13" pos:end="23:21"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:21">align</name></decl>;</decl_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:17">align</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:36">bytestream2_tell</name><argument_list pos:start="27:37" pos:end="27:44">(<argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:43"><name pos:start="27:39" pos:end="27:39">c</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:43">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:46" pos:end="27:46">&amp;</operator> <literal type="number" pos:start="27:48" pos:end="27:48">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="31:52"><if pos:start="29:13" pos:end="31:52">if <condition pos:start="29:16" pos:end="29:22">(<expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:21">align</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:52"><block_content pos:start="31:17" pos:end="31:52">

                <expr_stmt pos:start="31:17" pos:end="31:52"><expr pos:start="31:17" pos:end="31:51"><call pos:start="31:17" pos:end="31:51"><name pos:start="31:17" pos:end="31:32">bytestream2_skip</name><argument_list pos:start="31:33" pos:end="31:51">(<argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:35">c</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:39">gb</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:50"><expr pos:start="31:42" pos:end="31:50"><literal type="number" pos:start="31:42" pos:end="31:44">4</literal> <operator pos:start="31:44" pos:end="31:44">-</operator> <name pos:start="31:46" pos:end="31:50">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <do pos:start="35:9" pos:end="71:22">do <block pos:start="35:12" pos:end="71:9">{<block_content pos:start="37:13" pos:end="69:33">

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:13">a</name>      <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:49"><name pos:start="37:22" pos:end="37:41">bytestream2_get_byte</name><argument_list pos:start="37:42" pos:end="37:49">(<argument pos:start="37:43" pos:end="37:48"><expr pos:start="37:43" pos:end="37:48"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:44">c</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:50"><expr pos:start="39:13" pos:end="39:49"><name pos:start="39:13" pos:end="39:13">b</name>      <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:49"><name pos:start="39:22" pos:end="39:41">bytestream2_get_byte</name><argument_list pos:start="39:42" pos:end="39:49">(<argument pos:start="39:43" pos:end="39:48"><expr pos:start="39:43" pos:end="39:48"><operator pos:start="39:43" pos:end="39:43">&amp;</operator><name pos:start="39:44" pos:end="39:48"><name pos:start="39:44" pos:end="39:44">c</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:13">p</name>      <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:23">a</name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <literal type="number" pos:start="41:27" pos:end="41:30">0xC0</literal><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:34">&gt;&gt;</operator> <literal type="number" pos:start="41:36" pos:end="41:36">6</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:70"><expr pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:15">dst</name>    <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:22">c</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:29">frame</name><index pos:start="43:30" pos:end="43:32">[<expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">p</name></expr>]</index></name> <operator pos:start="43:34" pos:end="43:34">+</operator> <call pos:start="43:36" pos:end="43:69"><name pos:start="43:36" pos:end="43:56">get_video_page_offset</name><argument_list pos:start="43:57" pos:end="43:69">(<argument pos:start="43:58" pos:end="43:62"><expr pos:start="43:58" pos:end="43:62"><name pos:start="43:58" pos:end="43:62">avctx</name></expr></argument>, <argument pos:start="43:65" pos:end="43:65"><expr pos:start="43:65" pos:end="43:65"><name pos:start="43:65" pos:end="43:65">a</name></expr></argument>, <argument pos:start="43:68" pos:end="43:68"><expr pos:start="43:68" pos:end="43:68"><name pos:start="43:68" pos:end="43:68">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:16">dend</name>   <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:22">c</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:29">frame</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">p</name></expr>]</index></name> <operator pos:start="45:34" pos:end="45:34">+</operator> <name pos:start="45:36" pos:end="45:48"><name pos:start="45:36" pos:end="45:36">c</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:48">frame_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:18">offset</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:23">b</name> <operator pos:start="47:25" pos:end="47:25">&amp;</operator> <literal type="number" pos:start="47:27" pos:end="47:30">0x7F</literal><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:33">*</operator> <literal type="number" pos:start="47:35" pos:end="47:35">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:13">j</name>      <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:49"><name pos:start="49:22" pos:end="49:41">bytestream2_get_le16</name><argument_list pos:start="49:42" pos:end="49:49">(<argument pos:start="49:43" pos:end="49:48"><expr pos:start="49:43" pos:end="49:48"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:44">c</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:51" pos:end="49:51">+</operator> <name pos:start="49:53" pos:end="49:58">offset</name></expr>;</expr_stmt>



            <do pos:start="53:13" pos:end="69:33">do <block pos:start="53:16" pos:end="69:13">{<block_content pos:start="55:17" pos:end="67:25">

                <expr_stmt pos:start="55:17" pos:end="55:25"><expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:22">offset</name><operator pos:start="55:23" pos:end="55:24">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="57:17" pos:end="59:47"><if pos:start="57:17" pos:end="59:47">if <condition pos:start="57:20" pos:end="57:54">(<expr pos:start="57:21" pos:end="57:53"><name pos:start="57:21" pos:end="57:23">dst</name> <operator pos:start="57:25" pos:end="57:25">+</operator> <literal type="number" pos:start="57:27" pos:end="57:27">3</literal> <operator pos:start="57:29" pos:end="57:29">*</operator> <name pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:35">avctx</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:42">width</name></name> <operator pos:start="57:44" pos:end="57:44">+</operator> <literal type="number" pos:start="57:46" pos:end="57:46">4</literal> <operator pos:start="57:48" pos:end="57:48">&gt;</operator> <name pos:start="57:50" pos:end="57:53">dend</name></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:47"><block_content pos:start="59:21" pos:end="59:47">

                    <return pos:start="59:21" pos:end="59:47">return <expr pos:start="59:28" pos:end="59:46"><name pos:start="59:28" pos:end="59:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:35"><expr pos:start="61:17" pos:end="61:34"><call pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:22">copy4h</name><argument_list pos:start="61:23" pos:end="61:34">(<argument pos:start="61:24" pos:end="61:28"><expr pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:28">avctx</name></expr></argument>, <argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="63:17" pos:end="65:44"><if pos:start="63:17" pos:end="65:44">if <condition pos:start="63:20" pos:end="63:41">(<expr pos:start="63:21" pos:end="63:40"><operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:27">offset</name> <operator pos:start="63:29" pos:end="63:29">&amp;</operator> <literal type="number" pos:start="63:31" pos:end="63:34">0x3F</literal><operator pos:start="63:35" pos:end="63:35">)</operator> <operator pos:start="63:37" pos:end="63:38">==</operator> <literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:44"><block_content pos:start="65:21" pos:end="65:44">

                    <expr_stmt pos:start="65:21" pos:end="65:44"><expr pos:start="65:21" pos:end="65:43"><name pos:start="65:21" pos:end="65:23">dst</name> <operator pos:start="65:25" pos:end="65:26">+=</operator> <name pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:32">avctx</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:39">width</name></name> <operator pos:start="65:41" pos:end="65:41">*</operator> <literal type="number" pos:start="65:43" pos:end="65:43">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:25"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:19">dst</name> <operator pos:start="67:21" pos:end="67:22">+=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">4</literal></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="69:21" pos:end="69:32">(<expr pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:27">offset</name> <operator pos:start="69:29" pos:end="69:29">&lt;</operator> <name pos:start="69:31" pos:end="69:31">j</name></expr>)</condition>;</do>

        </block_content>}</block> while <condition pos:start="71:17" pos:end="71:21">(<expr pos:start="71:18" pos:end="71:20"><operator pos:start="71:18" pos:end="71:19">--</operator><name pos:start="71:20" pos:end="71:20">i</name></expr>)</condition>;</do>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:7">dst</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <name pos:start="77:11" pos:end="77:36"><name pos:start="77:11" pos:end="77:11">c</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:18">frame</name><index pos:start="77:19" pos:end="77:36">[<expr pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:20">c</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:35">current_frame</name></name></expr>]</index></name></expr>;</expr_stmt>

    <do pos:start="79:5" pos:end="105:37">do <block pos:start="79:8" pos:end="105:5">{<block_content pos:start="81:9" pos:end="103:17">

        <expr_stmt pos:start="81:9" pos:end="81:44"><expr pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:9">a</name>    <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:43"><name pos:start="81:16" pos:end="81:35">bytestream2_get_byte</name><argument_list pos:start="81:36" pos:end="81:43">(<argument pos:start="81:37" pos:end="81:42"><expr pos:start="81:37" pos:end="81:42"><operator pos:start="81:37" pos:end="81:37">&amp;</operator><name pos:start="81:38" pos:end="81:42"><name pos:start="81:38" pos:end="81:38">c</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:9">b</name>    <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:43"><name pos:start="83:16" pos:end="83:35">bytestream2_get_byte</name><argument_list pos:start="83:36" pos:end="83:43">(<argument pos:start="83:37" pos:end="83:42"><expr pos:start="83:37" pos:end="83:42"><operator pos:start="83:37" pos:end="83:37">&amp;</operator><name pos:start="83:38" pos:end="83:42"><name pos:start="83:38" pos:end="83:38">c</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:9">p</name>    <operator pos:start="85:14" pos:end="85:14">=</operator> <operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:17">a</name> <operator pos:start="85:19" pos:end="85:19">&amp;</operator> <literal type="number" pos:start="85:21" pos:end="85:24">0xC0</literal><operator pos:start="85:25" pos:end="85:25">)</operator> <operator pos:start="85:27" pos:end="85:28">&gt;&gt;</operator> <literal type="number" pos:start="85:30" pos:end="85:30">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:11">src</name>  <operator pos:start="87:14" pos:end="87:14">=</operator> <name pos:start="87:16" pos:end="87:26"><name pos:start="87:16" pos:end="87:16">c</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">frame</name><index pos:start="87:24" pos:end="87:26">[<expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">p</name></expr>]</index></name> <operator pos:start="87:28" pos:end="87:28">+</operator> <call pos:start="87:30" pos:end="87:63"><name pos:start="87:30" pos:end="87:50">get_video_page_offset</name><argument_list pos:start="87:51" pos:end="87:63">(<argument pos:start="87:52" pos:end="87:56"><expr pos:start="87:52" pos:end="87:56"><name pos:start="87:52" pos:end="87:56">avctx</name></expr></argument>, <argument pos:start="87:59" pos:end="87:59"><expr pos:start="87:59" pos:end="87:59"><name pos:start="87:59" pos:end="87:59">a</name></expr></argument>, <argument pos:start="87:62" pos:end="87:62"><expr pos:start="87:62" pos:end="87:62"><name pos:start="87:62" pos:end="87:62">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:12">send</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <name pos:start="89:16" pos:end="89:26"><name pos:start="89:16" pos:end="89:16">c</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">frame</name><index pos:start="89:24" pos:end="89:26">[<expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">p</name></expr>]</index></name> <operator pos:start="89:28" pos:end="89:28">+</operator> <name pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:30">c</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:42">frame_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:39"><if pos:start="91:9" pos:end="93:39">if <condition pos:start="91:12" pos:end="91:46">(<expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:15">src</name> <operator pos:start="91:17" pos:end="91:17">+</operator> <literal type="number" pos:start="91:19" pos:end="91:19">3</literal> <operator pos:start="91:21" pos:end="91:21">*</operator> <name pos:start="91:23" pos:end="91:34"><name pos:start="91:23" pos:end="91:27">avctx</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:34">width</name></name> <operator pos:start="91:36" pos:end="91:36">+</operator> <literal type="number" pos:start="91:38" pos:end="91:38">4</literal> <operator pos:start="91:40" pos:end="91:40">&gt;</operator> <name pos:start="91:42" pos:end="91:45">send</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:39"><block_content pos:start="93:13" pos:end="93:39">

            <return pos:start="93:13" pos:end="93:39">return <expr pos:start="93:20" pos:end="93:38"><name pos:start="93:20" pos:end="93:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><call pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:19">copy_block4</name><argument_list pos:start="95:20" pos:end="95:60">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">dst</name></expr></argument>, <argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">src</name></expr></argument>, <argument pos:start="95:31" pos:end="95:42"><expr pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:35">avctx</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:42">width</name></name></expr></argument>, <argument pos:start="95:45" pos:end="95:56"><expr pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:49">avctx</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:56">width</name></name></expr></argument>, <argument pos:start="95:59" pos:end="95:59"><expr pos:start="95:59" pos:end="95:59"><literal type="number" pos:start="95:59" pos:end="95:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:12"><expr pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:9">i</name><operator pos:start="97:10" pos:end="97:11">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:36"><if pos:start="99:9" pos:end="101:36">if <condition pos:start="99:12" pos:end="99:28">(<expr pos:start="99:13" pos:end="99:27"><operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">&amp;</operator> <literal type="number" pos:start="99:18" pos:end="99:21">0x3F</literal><operator pos:start="99:22" pos:end="99:22">)</operator> <operator pos:start="99:24" pos:end="99:25">==</operator> <literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:36"><block_content pos:start="101:13" pos:end="101:36">

            <expr_stmt pos:start="101:13" pos:end="101:36"><expr pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:15">dst</name> <operator pos:start="101:17" pos:end="101:18">+=</operator> <name pos:start="101:20" pos:end="101:31"><name pos:start="101:20" pos:end="101:24">avctx</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:31">width</name></name> <operator pos:start="101:33" pos:end="101:33">*</operator> <literal type="number" pos:start="101:35" pos:end="101:35">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:17"><expr pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:11">dst</name> <operator pos:start="103:13" pos:end="103:14">+=</operator> <literal type="number" pos:start="103:16" pos:end="103:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="105:13" pos:end="105:36">(<expr pos:start="105:14" pos:end="105:35"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">&lt;</operator> <name pos:start="105:18" pos:end="105:30"><name pos:start="105:18" pos:end="105:18">c</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:30">video_size</name></name> <operator pos:start="105:32" pos:end="105:32">/</operator> <literal type="number" pos:start="105:34" pos:end="105:35">16</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="109:5" pos:end="109:47"><expr pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:15">opcode_size</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:46"><name pos:start="109:19" pos:end="109:38">bytestream2_get_le16</name><argument_list pos:start="109:39" pos:end="109:46">(<argument pos:start="109:40" pos:end="109:45"><expr pos:start="109:40" pos:end="109:45"><operator pos:start="109:40" pos:end="109:40">&amp;</operator><name pos:start="109:41" pos:end="109:45"><name pos:start="109:41" pos:end="109:41">c</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:32"><expr pos:start="111:5" pos:end="111:31"><call pos:start="111:5" pos:end="111:31"><name pos:start="111:5" pos:end="111:20">bytestream2_skip</name><argument_list pos:start="111:21" pos:end="111:31">(<argument pos:start="111:22" pos:end="111:27"><expr pos:start="111:22" pos:end="111:27"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:27"><name pos:start="111:23" pos:end="111:23">c</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:27">gb</name></name></expr></argument>, <argument pos:start="111:30" pos:end="111:30"><expr pos:start="111:30" pos:end="111:30"><literal type="number" pos:start="111:30" pos:end="111:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:35"><if pos:start="115:5" pos:end="117:35">if <condition pos:start="115:8" pos:end="115:57">(<expr pos:start="115:9" pos:end="115:56"><call pos:start="115:9" pos:end="115:42"><name pos:start="115:9" pos:end="115:34">bytestream2_get_bytes_left</name><argument_list pos:start="115:35" pos:end="115:42">(<argument pos:start="115:36" pos:end="115:41"><expr pos:start="115:36" pos:end="115:41"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:37">c</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:44" pos:end="115:44">&lt;</operator> <name pos:start="115:46" pos:end="115:56">opcode_size</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:35"><block_content pos:start="117:9" pos:end="117:35">

        <return pos:start="117:9" pos:end="117:35">return <expr pos:start="117:16" pos:end="117:34"><name pos:start="117:16" pos:end="117:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:45"><expr pos:start="121:5" pos:end="121:44"><name pos:start="121:5" pos:end="121:11">opcodes</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <name pos:start="121:15" pos:end="121:17">pkt</name> <operator pos:start="121:19" pos:end="121:19">+</operator> <call pos:start="121:21" pos:end="121:44"><name pos:start="121:21" pos:end="121:36">bytestream2_tell</name><argument_list pos:start="121:37" pos:end="121:44">(<argument pos:start="121:38" pos:end="121:43"><expr pos:start="121:38" pos:end="121:43"><operator pos:start="121:38" pos:end="121:38">&amp;</operator><name pos:start="121:39" pos:end="121:43"><name pos:start="121:39" pos:end="121:39">c</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><call pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:21">bytestream2_skipu</name><argument_list pos:start="123:22" pos:end="123:42">(<argument pos:start="123:23" pos:end="123:28"><expr pos:start="123:23" pos:end="123:28"><operator pos:start="123:23" pos:end="123:23">&amp;</operator><name pos:start="123:24" pos:end="123:28"><name pos:start="123:24" pos:end="123:24">c</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:28">gb</name></name></expr></argument>, <argument pos:start="123:31" pos:end="123:41"><expr pos:start="123:31" pos:end="123:41"><name pos:start="123:31" pos:end="123:41">opcode_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:37"><expr pos:start="127:5" pos:end="127:36"><name pos:start="127:5" pos:end="127:7">dst</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <name pos:start="127:11" pos:end="127:36"><name pos:start="127:11" pos:end="127:11">c</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:18">frame</name><index pos:start="127:19" pos:end="127:36">[<expr pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:20">c</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:35">current_frame</name></name></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="131:5" pos:end="219:5">for <control pos:start="131:9" pos:end="131:67">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:34"><expr pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <name pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:25">avctx</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:33">height</name></name></expr>;</condition> <incr pos:start="131:36" pos:end="131:66"><expr pos:start="131:36" pos:end="131:41"><name pos:start="131:36" pos:end="131:36">i</name> <operator pos:start="131:38" pos:end="131:39">+=</operator> <literal type="number" pos:start="131:41" pos:end="131:41">4</literal></expr><operator pos:start="131:42" pos:end="131:42">,</operator> <expr pos:start="131:44" pos:end="131:66"><name pos:start="131:44" pos:end="131:46">dst</name> <operator pos:start="131:48" pos:end="131:49">+=</operator> <name pos:start="131:51" pos:end="131:62"><name pos:start="131:51" pos:end="131:55">avctx</name><operator pos:start="131:56" pos:end="131:57">-&gt;</operator><name pos:start="131:58" pos:end="131:62">width</name></name> <operator pos:start="131:64" pos:end="131:64">*</operator> <literal type="number" pos:start="131:66" pos:end="131:66">3</literal></expr></incr>)</control> <block pos:start="131:69" pos:end="219:5">{<block_content pos:start="133:9" pos:end="217:9">

        <for pos:start="133:9" pos:end="217:9">for <control pos:start="133:13" pos:end="133:55">(<init pos:start="133:14" pos:end="133:19"><expr pos:start="133:14" pos:end="133:18"><name pos:start="133:14" pos:end="133:14">j</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>;</init> <condition pos:start="133:21" pos:end="133:37"><expr pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:21">j</name> <operator pos:start="133:23" pos:end="133:23">&lt;</operator> <name pos:start="133:25" pos:end="133:36"><name pos:start="133:25" pos:end="133:29">avctx</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">width</name></name></expr>;</condition> <incr pos:start="133:39" pos:end="133:54"><expr pos:start="133:39" pos:end="133:44"><name pos:start="133:39" pos:end="133:39">j</name> <operator pos:start="133:41" pos:end="133:42">+=</operator> <literal type="number" pos:start="133:44" pos:end="133:44">4</literal></expr><operator pos:start="133:45" pos:end="133:45">,</operator> <expr pos:start="133:47" pos:end="133:54"><name pos:start="133:47" pos:end="133:49">dst</name> <operator pos:start="133:51" pos:end="133:52">+=</operator> <literal type="number" pos:start="133:54" pos:end="133:54">4</literal></expr></incr>)</control> <block pos:start="133:57" pos:end="217:9">{<block_content pos:start="135:13" pos:end="215:13">

            <decl_stmt pos:start="135:13" pos:end="135:30"><decl pos:start="135:13" pos:end="135:22"><type pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">int</name></type> <name pos:start="135:17" pos:end="135:22">opcode</name></decl>, <decl pos:start="135:25" pos:end="135:29"><type ref="prev" pos:start="135:13" pos:end="135:15"/><name pos:start="135:25" pos:end="135:25">k</name> <init pos:start="135:27" pos:end="135:29">= <expr pos:start="135:29" pos:end="135:29"><literal type="number" pos:start="135:29" pos:end="135:29">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="139:13" pos:end="141:43"><if pos:start="139:13" pos:end="141:43">if <condition pos:start="139:16" pos:end="139:32">(<expr pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:17">x</name> <operator pos:start="139:19" pos:end="139:19">&gt;</operator> <name pos:start="139:21" pos:end="139:31">opcode_size</name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:43"><block_content pos:start="141:17" pos:end="141:43">

                <return pos:start="141:17" pos:end="141:43">return <expr pos:start="141:24" pos:end="141:42"><name pos:start="141:24" pos:end="141:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="143:13" pos:end="153:13"><if pos:start="143:13" pos:end="149:13">if <condition pos:start="143:16" pos:end="143:22">(<expr pos:start="143:17" pos:end="143:21"><name pos:start="143:17" pos:end="143:17">j</name> <operator pos:start="143:19" pos:end="143:19">&amp;</operator> <literal type="number" pos:start="143:21" pos:end="143:21">4</literal></expr>)</condition> <block pos:start="143:24" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:20">

                <expr_stmt pos:start="145:17" pos:end="145:41"><expr pos:start="145:17" pos:end="145:40"><name pos:start="145:17" pos:end="145:22">opcode</name> <operator pos:start="145:24" pos:end="145:24">=</operator> <name pos:start="145:26" pos:end="145:35"><name pos:start="145:26" pos:end="145:32">opcodes</name><index pos:start="145:33" pos:end="145:35">[<expr pos:start="145:34" pos:end="145:34"><name pos:start="145:34" pos:end="145:34">x</name></expr>]</index></name> <operator pos:start="145:37" pos:end="145:37">&amp;</operator> <literal type="number" pos:start="145:39" pos:end="145:40">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:20"><expr pos:start="147:17" pos:end="147:19"><name pos:start="147:17" pos:end="147:17">x</name><operator pos:start="147:18" pos:end="147:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="153:13">else <block pos:start="149:20" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:41">

                <expr_stmt pos:start="151:17" pos:end="151:41"><expr pos:start="151:17" pos:end="151:40"><name pos:start="151:17" pos:end="151:22">opcode</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <name pos:start="151:26" pos:end="151:35"><name pos:start="151:26" pos:end="151:32">opcodes</name><index pos:start="151:33" pos:end="151:35">[<expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">x</name></expr>]</index></name> <operator pos:start="151:37" pos:end="151:38">&gt;&gt;</operator> <literal type="number" pos:start="151:40" pos:end="151:40">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <while pos:start="157:13" pos:end="215:13">while <condition pos:start="157:19" pos:end="157:46">(<expr pos:start="157:20" pos:end="157:45"><name pos:start="157:20" pos:end="157:45"><name pos:start="157:20" pos:end="157:34">block_sequences</name><index pos:start="157:35" pos:end="157:42">[<expr pos:start="157:36" pos:end="157:41"><name pos:start="157:36" pos:end="157:41">opcode</name></expr>]</index><index pos:start="157:43" pos:end="157:45">[<expr pos:start="157:44" pos:end="157:44"><name pos:start="157:44" pos:end="157:44">k</name></expr>]</index></name></expr>)</condition> <block pos:start="157:48" pos:end="215:13">{<block_content pos:start="161:17" pos:end="213:17">



                <expr_stmt pos:start="161:17" pos:end="161:42"><expr pos:start="161:17" pos:end="161:41"><name pos:start="161:17" pos:end="161:22">offset</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:37"><name pos:start="161:26" pos:end="161:30">avctx</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:37">width</name></name> <operator pos:start="161:39" pos:end="161:39">*</operator> <literal type="number" pos:start="161:41" pos:end="161:41">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:54"><expr pos:start="163:17" pos:end="163:53"><name pos:start="163:17" pos:end="163:20">code</name>   <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:53"><name pos:start="163:26" pos:end="163:40">block_sequences</name><index pos:start="163:41" pos:end="163:48">[<expr pos:start="163:42" pos:end="163:47"><name pos:start="163:42" pos:end="163:47">opcode</name></expr>]</index><index pos:start="163:49" pos:end="163:53">[<expr pos:start="163:50" pos:end="163:52"><name pos:start="163:50" pos:end="163:50">k</name><operator pos:start="163:51" pos:end="163:52">++</operator></expr>]</index></name></expr>;</expr_stmt>



                <switch pos:start="167:17" pos:end="213:17">switch <condition pos:start="167:24" pos:end="167:29">(<expr pos:start="167:25" pos:end="167:28"><name pos:start="167:25" pos:end="167:28">code</name></expr>)</condition> <block pos:start="167:31" pos:end="213:17">{<block_content pos:start="169:17" pos:end="211:26">

                <case pos:start="169:17" pos:end="169:23">case <expr pos:start="169:22" pos:end="169:22"><literal type="number" pos:start="169:22" pos:end="169:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="171:21" pos:end="171:31"><expr pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:26">offset</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>;</expr_stmt>

                <case pos:start="173:17" pos:end="173:23">case <expr pos:start="173:22" pos:end="173:22"><literal type="number" pos:start="173:22" pos:end="173:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="175:21" pos:end="175:58"><expr pos:start="175:21" pos:end="175:57"><name pos:start="175:21" pos:end="175:25">color</name>  <operator pos:start="175:28" pos:end="175:28">=</operator> <call pos:start="175:30" pos:end="175:57"><name pos:start="175:30" pos:end="175:49">bytestream2_get_byte</name><argument_list pos:start="175:50" pos:end="175:57">(<argument pos:start="175:51" pos:end="175:56"><expr pos:start="175:51" pos:end="175:56"><operator pos:start="175:51" pos:end="175:51">&amp;</operator><name pos:start="175:52" pos:end="175:56"><name pos:start="175:52" pos:end="175:52">c</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <case pos:start="177:17" pos:end="177:23">case <expr pos:start="177:22" pos:end="177:22"><literal type="number" pos:start="177:22" pos:end="177:22">4</literal></expr>:</case>

                    <expr_stmt pos:start="179:21" pos:end="179:58"><expr pos:start="179:21" pos:end="179:57"><name pos:start="179:21" pos:end="179:24">mask</name>   <operator pos:start="179:28" pos:end="179:28">=</operator> <call pos:start="179:30" pos:end="179:57"><name pos:start="179:30" pos:end="179:49">bytestream2_get_byte</name><argument_list pos:start="179:50" pos:end="179:57">(<argument pos:start="179:51" pos:end="179:56"><expr pos:start="179:51" pos:end="179:56"><operator pos:start="179:51" pos:end="179:51">&amp;</operator><name pos:start="179:52" pos:end="179:56"><name pos:start="179:52" pos:end="179:52">c</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="181:21" pos:end="181:70"><expr pos:start="181:21" pos:end="181:69"><call pos:start="181:21" pos:end="181:69"><name pos:start="181:21" pos:end="181:35">copy_color_mask</name><argument_list pos:start="181:36" pos:end="181:69">(<argument pos:start="181:37" pos:end="181:41"><expr pos:start="181:37" pos:end="181:41"><name pos:start="181:37" pos:end="181:41">avctx</name></expr></argument>, <argument pos:start="181:44" pos:end="181:47"><expr pos:start="181:44" pos:end="181:47"><name pos:start="181:44" pos:end="181:47">mask</name></expr></argument>, <argument pos:start="181:50" pos:end="181:61"><expr pos:start="181:50" pos:end="181:61"><name pos:start="181:50" pos:end="181:52">dst</name> <operator pos:start="181:54" pos:end="181:54">+</operator> <name pos:start="181:56" pos:end="181:61">offset</name></expr></argument>, <argument pos:start="181:64" pos:end="181:68"><expr pos:start="181:64" pos:end="181:68"><name pos:start="181:64" pos:end="181:68">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="183:21" pos:end="183:26">break;</break>

                <case pos:start="185:17" pos:end="185:23">case <expr pos:start="185:22" pos:end="185:22"><literal type="number" pos:start="185:22" pos:end="185:22">5</literal></expr>:</case>

                    <expr_stmt pos:start="187:21" pos:end="187:31"><expr pos:start="187:21" pos:end="187:30"><name pos:start="187:21" pos:end="187:26">offset</name> <operator pos:start="187:28" pos:end="187:28">=</operator> <literal type="number" pos:start="187:30" pos:end="187:30">0</literal></expr>;</expr_stmt>

                <case pos:start="189:17" pos:end="189:23">case <expr pos:start="189:22" pos:end="189:22"><literal type="number" pos:start="189:22" pos:end="189:22">6</literal></expr>:</case>

                    <expr_stmt pos:start="191:21" pos:end="191:56"><expr pos:start="191:21" pos:end="191:55"><name pos:start="191:21" pos:end="191:21">a</name>    <operator pos:start="191:26" pos:end="191:26">=</operator> <call pos:start="191:28" pos:end="191:55"><name pos:start="191:28" pos:end="191:47">bytestream2_get_byte</name><argument_list pos:start="191:48" pos:end="191:55">(<argument pos:start="191:49" pos:end="191:54"><expr pos:start="191:49" pos:end="191:54"><operator pos:start="191:49" pos:end="191:49">&amp;</operator><name pos:start="191:50" pos:end="191:54"><name pos:start="191:50" pos:end="191:50">c</name><operator pos:start="191:51" pos:end="191:52">-&gt;</operator><name pos:start="191:53" pos:end="191:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:56"><expr pos:start="193:21" pos:end="193:55"><name pos:start="193:21" pos:end="193:21">b</name>    <operator pos:start="193:26" pos:end="193:26">=</operator> <call pos:start="193:28" pos:end="193:55"><name pos:start="193:28" pos:end="193:47">bytestream2_get_byte</name><argument_list pos:start="193:48" pos:end="193:55">(<argument pos:start="193:49" pos:end="193:54"><expr pos:start="193:49" pos:end="193:54"><operator pos:start="193:49" pos:end="193:49">&amp;</operator><name pos:start="193:50" pos:end="193:54"><name pos:start="193:50" pos:end="193:50">c</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:43"><expr pos:start="195:21" pos:end="195:42"><name pos:start="195:21" pos:end="195:21">p</name>    <operator pos:start="195:26" pos:end="195:26">=</operator> <operator pos:start="195:28" pos:end="195:28">(</operator><name pos:start="195:29" pos:end="195:29">a</name> <operator pos:start="195:31" pos:end="195:31">&amp;</operator> <literal type="number" pos:start="195:33" pos:end="195:36">0xC0</literal><operator pos:start="195:37" pos:end="195:37">)</operator> <operator pos:start="195:39" pos:end="195:40">&gt;&gt;</operator> <literal type="number" pos:start="195:42" pos:end="195:42">6</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:76"><expr pos:start="197:21" pos:end="197:75"><name pos:start="197:21" pos:end="197:23">src</name>  <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:38"><name pos:start="197:28" pos:end="197:28">c</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:35">frame</name><index pos:start="197:36" pos:end="197:38">[<expr pos:start="197:37" pos:end="197:37"><name pos:start="197:37" pos:end="197:37">p</name></expr>]</index></name> <operator pos:start="197:40" pos:end="197:40">+</operator> <call pos:start="197:42" pos:end="197:75"><name pos:start="197:42" pos:end="197:62">get_video_page_offset</name><argument_list pos:start="197:63" pos:end="197:75">(<argument pos:start="197:64" pos:end="197:68"><expr pos:start="197:64" pos:end="197:68"><name pos:start="197:64" pos:end="197:68">avctx</name></expr></argument>, <argument pos:start="197:71" pos:end="197:71"><expr pos:start="197:71" pos:end="197:71"><name pos:start="197:71" pos:end="197:71">a</name></expr></argument>, <argument pos:start="197:74" pos:end="197:74"><expr pos:start="197:74" pos:end="197:74"><name pos:start="197:74" pos:end="197:74">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:55"><expr pos:start="199:21" pos:end="199:54"><name pos:start="199:21" pos:end="199:24">send</name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:38"><name pos:start="199:28" pos:end="199:28">c</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:35">frame</name><index pos:start="199:36" pos:end="199:38">[<expr pos:start="199:37" pos:end="199:37"><name pos:start="199:37" pos:end="199:37">p</name></expr>]</index></name> <operator pos:start="199:40" pos:end="199:40">+</operator> <name pos:start="199:42" pos:end="199:54"><name pos:start="199:42" pos:end="199:42">c</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:54">frame_size</name></name></expr>;</expr_stmt>

                <case pos:start="201:17" pos:end="201:23">case <expr pos:start="201:22" pos:end="201:22"><literal type="number" pos:start="201:22" pos:end="201:22">7</literal></expr>:</case>

                    <if_stmt pos:start="203:21" pos:end="205:51"><if pos:start="203:21" pos:end="205:51">if <condition pos:start="203:24" pos:end="203:63">(<expr pos:start="203:25" pos:end="203:62"><name pos:start="203:25" pos:end="203:27">src</name> <operator pos:start="203:29" pos:end="203:29">+</operator> <name pos:start="203:31" pos:end="203:36">offset</name> <operator pos:start="203:38" pos:end="203:38">+</operator> <name pos:start="203:40" pos:end="203:51"><name pos:start="203:40" pos:end="203:44">avctx</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:51">width</name></name> <operator pos:start="203:53" pos:end="203:53">+</operator> <literal type="number" pos:start="203:55" pos:end="203:55">4</literal> <operator pos:start="203:57" pos:end="203:57">&gt;</operator> <name pos:start="203:59" pos:end="203:62">send</name></expr>)</condition><block type="pseudo" pos:start="205:25" pos:end="205:51"><block_content pos:start="205:25" pos:end="205:51">

                        <return pos:start="205:25" pos:end="205:51">return <expr pos:start="205:32" pos:end="205:50"><name pos:start="205:32" pos:end="205:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="207:21" pos:end="207:56"><expr pos:start="207:21" pos:end="207:55"><name pos:start="207:21" pos:end="207:24">mask</name> <operator pos:start="207:26" pos:end="207:26">=</operator> <call pos:start="207:28" pos:end="207:55"><name pos:start="207:28" pos:end="207:47">bytestream2_get_byte</name><argument_list pos:start="207:48" pos:end="207:55">(<argument pos:start="207:49" pos:end="207:54"><expr pos:start="207:49" pos:end="207:54"><operator pos:start="207:49" pos:end="207:49">&amp;</operator><name pos:start="207:50" pos:end="207:54"><name pos:start="207:50" pos:end="207:50">c</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:75"><expr pos:start="209:21" pos:end="209:74"><call pos:start="209:21" pos:end="209:74"><name pos:start="209:21" pos:end="209:33">copy_src_mask</name><argument_list pos:start="209:34" pos:end="209:74">(<argument pos:start="209:35" pos:end="209:39"><expr pos:start="209:35" pos:end="209:39"><name pos:start="209:35" pos:end="209:39">avctx</name></expr></argument>, <argument pos:start="209:42" pos:end="209:45"><expr pos:start="209:42" pos:end="209:45"><name pos:start="209:42" pos:end="209:45">mask</name></expr></argument>, <argument pos:start="209:48" pos:end="209:59"><expr pos:start="209:48" pos:end="209:59"><name pos:start="209:48" pos:end="209:50">dst</name> <operator pos:start="209:52" pos:end="209:52">+</operator> <name pos:start="209:54" pos:end="209:59">offset</name></expr></argument>, <argument pos:start="209:62" pos:end="209:73"><expr pos:start="209:62" pos:end="209:73"><name pos:start="209:62" pos:end="209:64">src</name> <operator pos:start="209:66" pos:end="209:66">+</operator> <name pos:start="209:68" pos:end="209:73">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="211:21" pos:end="211:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></while>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
