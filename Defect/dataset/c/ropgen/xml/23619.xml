<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23619.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">uart_write</name><parameter_list pos:start="1:23" pos:end="3:56">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:62"><decl pos:start="1:38" pos:end="1:62"><type pos:start="1:38" pos:end="1:62"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:62">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:5">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">UartState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:38">= <expr pos:start="7:20" pos:end="7:38"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:29">UartState</name> <operator pos:start="7:31" pos:end="7:31">*</operator><operator pos:start="7:32" pos:end="7:32">)</operator><name pos:start="7:33" pos:end="7:38">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:64"><expr pos:start="11:5" pos:end="11:63"><call pos:start="11:5" pos:end="11:63"><name pos:start="11:5" pos:end="11:12">DB_PRINT</name><argument_list pos:start="11:13" pos:end="11:63">(<argument pos:start="11:14" pos:end="11:37"><expr pos:start="11:14" pos:end="11:37"><literal type="string" pos:start="11:14" pos:end="11:37">" offset:%x data:%08x\n"</literal></expr></argument>, <argument pos:start="11:40" pos:end="11:45"><expr pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:45">offset</name></expr></argument>, <argument pos:start="11:48" pos:end="11:62"><expr pos:start="11:48" pos:end="11:62"><operator pos:start="11:48" pos:end="11:48">(</operator><name pos:start="11:49" pos:end="11:56">unsigned</name><operator pos:start="11:57" pos:end="11:57">)</operator><name pos:start="11:58" pos:end="11:62">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">offset</name> <operator pos:start="13:12" pos:end="13:14">&gt;&gt;=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">2</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="63:5">switch <condition pos:start="15:12" pos:end="15:19">(<expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">offset</name></expr>)</condition> <block pos:start="15:21" pos:end="63:5">{<block_content pos:start="17:5" pos:end="61:29">

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:14">R_IER</name></expr>:</case> <comment type="block" pos:start="17:17" pos:end="17:35">/* ier (wts imr) */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:12">r</name><index pos:start="19:13" pos:end="19:19">[<expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:18">R_IMR</name></expr>]</index></name> <operator pos:start="19:21" pos:end="19:22">|=</operator> <name pos:start="19:24" pos:end="19:28">value</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:14">R_IDR</name></expr>:</case> <comment type="block" pos:start="23:17" pos:end="23:35">/* idr (wtc imr) */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:12">r</name><index pos:start="25:13" pos:end="25:19">[<expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:18">R_IMR</name></expr>]</index></name> <operator pos:start="25:21" pos:end="25:22">&amp;=</operator> <operator pos:start="25:24" pos:end="25:24">~</operator><name pos:start="25:25" pos:end="25:29">value</name></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:14">R_IMR</name></expr>:</case> <comment type="block" pos:start="29:17" pos:end="29:37">/* imr (read only) */</comment>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:16">case <expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:15">R_CISR</name></expr>:</case> <comment type="block" pos:start="33:18" pos:end="33:33">/* cisr (wtc) */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:12">r</name><index pos:start="35:13" pos:end="35:20">[<expr pos:start="35:14" pos:end="35:19"><name pos:start="35:14" pos:end="35:19">R_CISR</name></expr>]</index></name> <operator pos:start="35:22" pos:end="35:23">&amp;=</operator> <operator pos:start="35:25" pos:end="35:25">~</operator><name pos:start="35:26" pos:end="35:30">value</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:17">case <expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:16">R_TX_RX</name></expr>:</case> <comment type="block" pos:start="39:19" pos:end="39:30">/* UARTDR */</comment>

        <switch pos:start="41:9" pos:end="55:9">switch <condition pos:start="41:16" pos:end="41:44">(<expr pos:start="41:17" pos:end="41:43"><name pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:20">r</name><index pos:start="41:21" pos:end="41:26">[<expr pos:start="41:22" pos:end="41:25"><name pos:start="41:22" pos:end="41:25">R_MR</name></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">&amp;</operator> <name pos:start="41:30" pos:end="41:43">UART_MR_CHMODE</name></expr>)</condition> <block pos:start="41:46" pos:end="55:9">{<block_content pos:start="43:9" pos:end="53:18">

        <case pos:start="43:9" pos:end="43:25">case <expr pos:start="43:14" pos:end="43:24"><name pos:start="43:14" pos:end="43:24">NORMAL_MODE</name></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:57"><expr pos:start="45:13" pos:end="45:56"><call pos:start="45:13" pos:end="45:56"><name pos:start="45:13" pos:end="45:30">uart_write_tx_fifo</name><argument_list pos:start="45:31" pos:end="45:56">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">s</name></expr></argument>, <argument pos:start="45:35" pos:end="45:52"><expr pos:start="45:35" pos:end="45:52"><operator pos:start="45:35" pos:end="45:35">(</operator><name pos:start="45:36" pos:end="45:42">uint8_t</name> <operator pos:start="45:44" pos:end="45:44">*</operator><operator pos:start="45:45" pos:end="45:45">)</operator> <operator pos:start="45:47" pos:end="45:47">&amp;</operator><name pos:start="45:48" pos:end="45:52">value</name></expr></argument>, <argument pos:start="45:55" pos:end="45:55"><expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:28">case <expr pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:27">LOCAL_LOOPBACK</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:62"><expr pos:start="51:13" pos:end="51:61"><call pos:start="51:13" pos:end="51:61"><name pos:start="51:13" pos:end="51:30">uart_write_rx_fifo</name><argument_list pos:start="51:31" pos:end="51:61">(<argument pos:start="51:32" pos:end="51:37"><expr pos:start="51:32" pos:end="51:37"><name pos:start="51:32" pos:end="51:37">opaque</name></expr></argument>, <argument pos:start="51:40" pos:end="51:57"><expr pos:start="51:40" pos:end="51:57"><operator pos:start="51:40" pos:end="51:40">(</operator><name pos:start="51:41" pos:end="51:47">uint8_t</name> <operator pos:start="51:49" pos:end="51:49">*</operator><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:57">value</name></expr></argument>, <argument pos:start="51:60" pos:end="51:60"><expr pos:start="51:60" pos:end="51:60"><literal type="number" pos:start="51:60" pos:end="51:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:12">r</name><index pos:start="61:13" pos:end="61:20">[<expr pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:19">offset</name></expr>]</index></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:28">value</name></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <switch pos:start="67:5" pos:end="81:5">switch <condition pos:start="67:12" pos:end="67:19">(<expr pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">offset</name></expr>)</condition> <block pos:start="67:21" pos:end="81:5">{<block_content pos:start="69:5" pos:end="79:14">

    <case pos:start="69:5" pos:end="69:14">case <expr pos:start="69:10" pos:end="69:13"><name pos:start="69:10" pos:end="69:13">R_CR</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><call pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:24">uart_ctrl_update</name><argument_list pos:start="71:25" pos:end="71:27">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><name pos:start="75:10" pos:end="75:13">R_MR</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><call pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:29">uart_parameters_setup</name><argument_list pos:start="77:30" pos:end="77:32">(<argument pos:start="77:31" pos:end="77:31"><expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
