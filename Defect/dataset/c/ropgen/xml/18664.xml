<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18664.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">BusState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:26">qbus_find</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:39"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">BusState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:13">elem</name><index pos:start="9:14" pos:end="9:18">[<expr pos:start="9:15" pos:end="9:17"><literal type="number" pos:start="9:15" pos:end="9:17">128</literal></expr>]</index></name></decl>, <decl pos:start="9:21" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:23">msg</name><index pos:start="9:24" pos:end="9:28">[<expr pos:start="9:25" pos:end="9:27"><literal type="number" pos:start="9:25" pos:end="9:27">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">pos</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:28">/* find start element */</comment>

    <if_stmt pos:start="17:5" pos:end="45:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">path</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>]</index></name> <operator pos:start="17:17" pos:end="17:18">==</operator> <literal type="char" pos:start="17:20" pos:end="17:22">'/'</literal></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:11">bus</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:29">main_system_bus</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">pos</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="45:5">else <block pos:start="23:12" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:18">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:56">(<expr pos:start="25:13" pos:end="25:55"><call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:18">sscanf</name><argument_list pos:start="25:19" pos:end="25:50">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">path</name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><literal type="string" pos:start="25:26" pos:end="25:37">"%127[^/]%n"</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">elem</name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><operator pos:start="25:46" pos:end="25:46">&amp;</operator><name pos:start="25:47" pos:end="25:49">len</name></expr></argument>)</argument_list></call> <operator pos:start="25:52" pos:end="25:53">!=</operator> <literal type="number" pos:start="25:55" pos:end="25:55">1</literal></expr>)</condition> <block pos:start="25:58" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:24">

            <expr_stmt pos:start="27:13" pos:end="27:60"><expr pos:start="27:13" pos:end="27:59"><call pos:start="27:13" pos:end="27:59"><name pos:start="27:13" pos:end="27:22">qemu_error</name><argument_list pos:start="27:23" pos:end="27:59">(<argument pos:start="27:24" pos:end="27:52"><expr pos:start="27:24" pos:end="27:52"><literal type="string" pos:start="27:24" pos:end="27:52">"path parse error (\"%s\")\n"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:58"><expr pos:start="27:55" pos:end="27:58"><name pos:start="27:55" pos:end="27:58">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:11">bus</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:62"><name pos:start="33:15" pos:end="33:33">qbus_find_recursive</name><argument_list pos:start="33:34" pos:end="33:62">(<argument pos:start="33:35" pos:end="33:49"><expr pos:start="33:35" pos:end="33:49"><name pos:start="33:35" pos:end="33:49">main_system_bus</name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><name pos:start="33:52" pos:end="33:55">elem</name></expr></argument>, <argument pos:start="33:58" pos:end="33:61"><expr pos:start="33:58" pos:end="33:61"><name pos:start="33:58" pos:end="33:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:17">(<expr pos:start="35:13" pos:end="35:16"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:16">bus</name></expr>)</condition> <block pos:start="35:19" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:24">

            <expr_stmt pos:start="37:13" pos:end="37:55"><expr pos:start="37:13" pos:end="37:54"><call pos:start="37:13" pos:end="37:54"><name pos:start="37:13" pos:end="37:22">qemu_error</name><argument_list pos:start="37:23" pos:end="37:54">(<argument pos:start="37:24" pos:end="37:47"><expr pos:start="37:24" pos:end="37:47"><literal type="string" pos:start="37:24" pos:end="37:47">"bus \"%s\" not found\n"</literal></expr></argument>, <argument pos:start="37:50" pos:end="37:53"><expr pos:start="37:50" pos:end="37:53"><name pos:start="37:50" pos:end="37:53">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:24">return <expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:18"><expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:11">pos</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:17">len</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="49:5" pos:end="143:5">for <control pos:start="49:9" pos:end="49:12">(<init pos:start="49:10" pos:end="49:10">;</init><condition pos:start="49:11" pos:end="49:11">;</condition><incr/>)</control> <block pos:start="49:14" pos:end="143:5">{<block_content pos:start="51:9" pos:end="141:9">

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:30">(<expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:16">path</name><index pos:start="51:17" pos:end="51:21">[<expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">pos</name></expr>]</index></name> <operator pos:start="51:23" pos:end="51:24">==</operator> <literal type="char" pos:start="51:26" pos:end="51:29">'\0'</literal></expr>)</condition> <block pos:start="51:32" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:23">

            <comment type="block" pos:start="53:13" pos:end="53:29">/* we are done */</comment>

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">bus</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="61:9" pos:end="61:25">/* find device */</comment>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:61">(<expr pos:start="63:13" pos:end="63:60"><call pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:18">sscanf</name><argument_list pos:start="63:19" pos:end="63:55">(<argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:23">path</name><operator pos:start="63:24" pos:end="63:24">+</operator><name pos:start="63:25" pos:end="63:27">pos</name></expr></argument>, <argument pos:start="63:30" pos:end="63:42"><expr pos:start="63:30" pos:end="63:42"><literal type="string" pos:start="63:30" pos:end="63:42">"/%127[^/]%n"</literal></expr></argument>, <argument pos:start="63:45" pos:end="63:48"><expr pos:start="63:45" pos:end="63:48"><name pos:start="63:45" pos:end="63:48">elem</name></expr></argument>, <argument pos:start="63:51" pos:end="63:54"><expr pos:start="63:51" pos:end="63:54"><operator pos:start="63:51" pos:end="63:51">&amp;</operator><name pos:start="63:52" pos:end="63:54">len</name></expr></argument>)</argument_list></call> <operator pos:start="63:57" pos:end="63:58">!=</operator> <literal type="number" pos:start="63:60" pos:end="63:60">1</literal></expr>)</condition> <block pos:start="63:63" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:24">

            <expr_stmt pos:start="65:13" pos:end="65:72"><expr pos:start="65:13" pos:end="65:71"><call pos:start="65:13" pos:end="65:71"><name pos:start="65:13" pos:end="65:22">qemu_error</name><argument_list pos:start="65:23" pos:end="65:71">(<argument pos:start="65:24" pos:end="65:59"><expr pos:start="65:24" pos:end="65:59"><literal type="string" pos:start="65:24" pos:end="65:59">"path parse error (\"%s\" pos %d)\n"</literal></expr></argument>, <argument pos:start="65:62" pos:end="65:65"><expr pos:start="65:62" pos:end="65:65"><name pos:start="65:62" pos:end="65:65">path</name></expr></argument>, <argument pos:start="65:68" pos:end="65:70"><expr pos:start="65:68" pos:end="65:70"><name pos:start="65:68" pos:end="65:70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:24">return <expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:19"><expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:11">pos</name> <operator pos:start="71:13" pos:end="71:14">+=</operator> <name pos:start="71:16" pos:end="71:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:11">dev</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:38"><name pos:start="73:15" pos:end="73:27">qbus_find_dev</name><argument_list pos:start="73:28" pos:end="73:38">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">bus</name></expr></argument>, <argument pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><name pos:start="73:34" pos:end="73:37">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:17">(<expr pos:start="75:13" pos:end="75:16"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:16">dev</name></expr>)</condition> <block pos:start="75:19" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:24">

            <expr_stmt pos:start="77:13" pos:end="77:49"><expr pos:start="77:13" pos:end="77:48"><call pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:25">qbus_list_dev</name><argument_list pos:start="77:26" pos:end="77:48">(<argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:29">bus</name></expr></argument>, <argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">msg</name></expr></argument>, <argument pos:start="77:37" pos:end="77:47"><expr pos:start="77:37" pos:end="77:47"><sizeof pos:start="77:37" pos:end="77:47">sizeof<argument_list pos:start="77:43" pos:end="77:47">(<argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:46">msg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:67"><expr pos:start="79:13" pos:end="79:66"><call pos:start="79:13" pos:end="79:66"><name pos:start="79:13" pos:end="79:22">qemu_error</name><argument_list pos:start="79:23" pos:end="79:66">(<argument pos:start="79:24" pos:end="79:54"><expr pos:start="79:24" pos:end="79:54"><literal type="string" pos:start="79:24" pos:end="79:54">"device \"%s\" not found\n%s\n"</literal></expr></argument>, <argument pos:start="79:57" pos:end="79:60"><expr pos:start="79:57" pos:end="79:60"><name pos:start="79:57" pos:end="79:60">elem</name></expr></argument>, <argument pos:start="79:63" pos:end="79:65"><expr pos:start="79:63" pos:end="79:65"><name pos:start="79:63" pos:end="79:65">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:24">return <expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="115:9"><if pos:start="85:9" pos:end="115:9">if <condition pos:start="85:12" pos:end="85:30">(<expr pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:16">path</name><index pos:start="85:17" pos:end="85:21">[<expr pos:start="85:18" pos:end="85:20"><name pos:start="85:18" pos:end="85:20">pos</name></expr>]</index></name> <operator pos:start="85:23" pos:end="85:24">==</operator> <literal type="char" pos:start="85:26" pos:end="85:29">'\0'</literal></expr>)</condition> <block pos:start="85:32" pos:end="115:9">{<block_content pos:start="91:13" pos:end="113:13">

            <comment type="block" pos:start="87:13" pos:end="89:54">/* last specified element is a device.  If it has exactly

             * one child bus accept it nevertheless */</comment>

            <switch pos:start="91:13" pos:end="113:13">switch <condition pos:start="91:20" pos:end="91:39">(<expr pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:23">dev</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:38">num_child_bus</name></name></expr>)</condition> <block pos:start="91:41" pos:end="113:13">{<block_content pos:start="93:13" pos:end="111:28">

            <case pos:start="93:13" pos:end="93:19">case <expr pos:start="93:18" pos:end="93:18"><literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>:</case>

                <expr_stmt pos:start="95:17" pos:end="95:67"><expr pos:start="95:17" pos:end="95:66"><call pos:start="95:17" pos:end="95:66"><name pos:start="95:17" pos:end="95:26">qemu_error</name><argument_list pos:start="95:27" pos:end="95:66">(<argument pos:start="95:28" pos:end="95:59"><expr pos:start="95:28" pos:end="95:59"><literal type="string" pos:start="95:28" pos:end="95:59">"device has no child bus (%s)\n"</literal></expr></argument>, <argument pos:start="95:62" pos:end="95:65"><expr pos:start="95:62" pos:end="95:65"><name pos:start="95:62" pos:end="95:65">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="97:17" pos:end="97:28">return <expr pos:start="97:24" pos:end="97:27"><name pos:start="97:24" pos:end="97:27">NULL</name></expr>;</return>

            <case pos:start="99:13" pos:end="99:19">case <expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">1</literal></expr>:</case>

                <return pos:start="101:17" pos:end="101:51">return <expr pos:start="101:24" pos:end="101:50"><call pos:start="101:24" pos:end="101:50"><name pos:start="101:24" pos:end="101:33">LIST_FIRST</name><argument_list pos:start="101:34" pos:end="101:50">(<argument pos:start="101:35" pos:end="101:49"><expr pos:start="101:35" pos:end="101:49"><operator pos:start="101:35" pos:end="101:35">&amp;</operator><name pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:38">dev</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:49">child_bus</name></name></expr></argument>)</argument_list></call></expr>;</return>

            <default pos:start="103:13" pos:end="103:20">default:</default>

                <expr_stmt pos:start="105:17" pos:end="105:53"><expr pos:start="105:17" pos:end="105:52"><call pos:start="105:17" pos:end="105:52"><name pos:start="105:17" pos:end="105:29">qbus_list_bus</name><argument_list pos:start="105:30" pos:end="105:52">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">dev</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">msg</name></expr></argument>, <argument pos:start="105:41" pos:end="105:51"><expr pos:start="105:41" pos:end="105:51"><sizeof pos:start="105:41" pos:end="105:51">sizeof<argument_list pos:start="105:47" pos:end="105:51">(<argument pos:start="105:48" pos:end="105:50"><expr pos:start="105:48" pos:end="105:50"><name pos:start="105:48" pos:end="105:50">msg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="109:38"><expr pos:start="107:17" pos:end="109:37"><call pos:start="107:17" pos:end="109:37"><name pos:start="107:17" pos:end="107:26">qemu_error</name><argument_list pos:start="107:27" pos:end="109:37">(<argument pos:start="107:28" pos:end="107:72"><expr pos:start="107:28" pos:end="107:72"><literal type="string" pos:start="107:28" pos:end="107:72">"device has multiple child busses (%s)\n%s\n"</literal></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">path</name></expr></argument>, <argument pos:start="109:34" pos:end="109:36"><expr pos:start="109:34" pos:end="109:36"><name pos:start="109:34" pos:end="109:36">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="111:17" pos:end="111:28">return <expr pos:start="111:24" pos:end="111:27"><name pos:start="111:24" pos:end="111:27">NULL</name></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:22">/* find bus */</comment>

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:61">(<expr pos:start="121:13" pos:end="121:60"><call pos:start="121:13" pos:end="121:55"><name pos:start="121:13" pos:end="121:18">sscanf</name><argument_list pos:start="121:19" pos:end="121:55">(<argument pos:start="121:20" pos:end="121:27"><expr pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:23">path</name><operator pos:start="121:24" pos:end="121:24">+</operator><name pos:start="121:25" pos:end="121:27">pos</name></expr></argument>, <argument pos:start="121:30" pos:end="121:42"><expr pos:start="121:30" pos:end="121:42"><literal type="string" pos:start="121:30" pos:end="121:42">"/%127[^/]%n"</literal></expr></argument>, <argument pos:start="121:45" pos:end="121:48"><expr pos:start="121:45" pos:end="121:48"><name pos:start="121:45" pos:end="121:48">elem</name></expr></argument>, <argument pos:start="121:51" pos:end="121:54"><expr pos:start="121:51" pos:end="121:54"><operator pos:start="121:51" pos:end="121:51">&amp;</operator><name pos:start="121:52" pos:end="121:54">len</name></expr></argument>)</argument_list></call> <operator pos:start="121:57" pos:end="121:58">!=</operator> <literal type="number" pos:start="121:60" pos:end="121:60">1</literal></expr>)</condition> <block pos:start="121:63" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:24">

            <expr_stmt pos:start="123:13" pos:end="123:72"><expr pos:start="123:13" pos:end="123:71"><call pos:start="123:13" pos:end="123:71"><name pos:start="123:13" pos:end="123:22">qemu_error</name><argument_list pos:start="123:23" pos:end="123:71">(<argument pos:start="123:24" pos:end="123:59"><expr pos:start="123:24" pos:end="123:59"><literal type="string" pos:start="123:24" pos:end="123:59">"path parse error (\"%s\" pos %d)\n"</literal></expr></argument>, <argument pos:start="123:62" pos:end="123:65"><expr pos:start="123:62" pos:end="123:65"><name pos:start="123:62" pos:end="123:65">path</name></expr></argument>, <argument pos:start="123:68" pos:end="123:70"><expr pos:start="123:68" pos:end="123:70"><name pos:start="123:68" pos:end="123:70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:24">return <expr pos:start="125:20" pos:end="125:23"><name pos:start="125:20" pos:end="125:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:19"><expr pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:11">pos</name> <operator pos:start="129:13" pos:end="129:14">+=</operator> <name pos:start="129:16" pos:end="129:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:39"><expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:11">bus</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:38"><name pos:start="131:15" pos:end="131:27">qbus_find_bus</name><argument_list pos:start="131:28" pos:end="131:38">(<argument pos:start="131:29" pos:end="131:31"><expr pos:start="131:29" pos:end="131:31"><name pos:start="131:29" pos:end="131:31">dev</name></expr></argument>, <argument pos:start="131:34" pos:end="131:37"><expr pos:start="131:34" pos:end="131:37"><name pos:start="131:34" pos:end="131:37">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="141:9"><if pos:start="133:9" pos:end="141:9">if <condition pos:start="133:12" pos:end="133:17">(<expr pos:start="133:13" pos:end="133:16"><operator pos:start="133:13" pos:end="133:13">!</operator><name pos:start="133:14" pos:end="133:16">bus</name></expr>)</condition> <block pos:start="133:19" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:24">

            <expr_stmt pos:start="135:13" pos:end="135:49"><expr pos:start="135:13" pos:end="135:48"><call pos:start="135:13" pos:end="135:48"><name pos:start="135:13" pos:end="135:25">qbus_list_bus</name><argument_list pos:start="135:26" pos:end="135:48">(<argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">dev</name></expr></argument>, <argument pos:start="135:32" pos:end="135:34"><expr pos:start="135:32" pos:end="135:34"><name pos:start="135:32" pos:end="135:34">msg</name></expr></argument>, <argument pos:start="135:37" pos:end="135:47"><expr pos:start="135:37" pos:end="135:47"><sizeof pos:start="135:37" pos:end="135:47">sizeof<argument_list pos:start="135:43" pos:end="135:47">(<argument pos:start="135:44" pos:end="135:46"><expr pos:start="135:44" pos:end="135:46"><name pos:start="135:44" pos:end="135:46">msg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:70"><expr pos:start="137:13" pos:end="137:69"><call pos:start="137:13" pos:end="137:69"><name pos:start="137:13" pos:end="137:22">qemu_error</name><argument_list pos:start="137:23" pos:end="137:69">(<argument pos:start="137:24" pos:end="137:57"><expr pos:start="137:24" pos:end="137:57"><literal type="string" pos:start="137:24" pos:end="137:57">"child bus \"%s\" not found\n%s\n"</literal></expr></argument>, <argument pos:start="137:60" pos:end="137:63"><expr pos:start="137:60" pos:end="137:63"><name pos:start="137:60" pos:end="137:63">elem</name></expr></argument>, <argument pos:start="137:66" pos:end="137:68"><expr pos:start="137:66" pos:end="137:68"><name pos:start="137:66" pos:end="137:68">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="139:13" pos:end="139:24">return <expr pos:start="139:20" pos:end="139:23"><name pos:start="139:20" pos:end="139:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
