<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16040.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">curl_find_buf</name><parameter_list pos:start="1:25" pos:end="3:40">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:38">BDRVCURLState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:49">size_t</name></type> <name pos:start="1:51" pos:end="1:55">start</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:63">size_t</name></type> <name pos:start="1:65" pos:end="1:67">len</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:34">CURLAIOCB</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">acb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:25">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:14">end</name> <init pos:start="9:16" pos:end="9:28">= <expr pos:start="9:18" pos:end="9:28"><name pos:start="9:18" pos:end="9:22">start</name> <operator pos:start="9:24" pos:end="9:24">+</operator> <name pos:start="9:26" pos:end="9:28">len</name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="97:5">for <control pos:start="13:9" pos:end="13:37">(<init pos:start="13:10" pos:end="13:13"><expr pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:10">i</name><operator pos:start="13:11" pos:end="13:11">=</operator><literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>;</init> <condition pos:start="13:15" pos:end="13:32"><expr pos:start="13:15" pos:end="13:31"><name pos:start="13:15" pos:end="13:15">i</name><operator pos:start="13:16" pos:end="13:16">&lt;</operator><name pos:start="13:17" pos:end="13:31">CURL_NUM_STATES</name></expr>;</condition> <incr pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:34">i</name><operator pos:start="13:35" pos:end="13:36">++</operator></expr></incr>)</control> <block pos:start="13:39" pos:end="97:5">{<block_content pos:start="15:9" pos:end="95:9">

        <decl_stmt pos:start="15:9" pos:end="15:41"><decl pos:start="15:9" pos:end="15:40"><type pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:17">CURLState</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">state</name> <init pos:start="15:26" pos:end="15:40">= <expr pos:start="15:28" pos:end="15:40"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:37">states</name><index pos:start="15:38" pos:end="15:40">[<expr pos:start="15:39" pos:end="15:39"><name pos:start="15:39" pos:end="15:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:61"><decl pos:start="17:9" pos:end="17:60"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">size_t</name></type> <name pos:start="17:16" pos:end="17:22">buf_end</name> <init pos:start="17:24" pos:end="17:60">= <expr pos:start="17:26" pos:end="17:60"><operator pos:start="17:26" pos:end="17:26">(</operator><name pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:31">state</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:42">buf_start</name></name> <operator pos:start="17:44" pos:end="17:44">+</operator> <name pos:start="17:46" pos:end="17:59"><name pos:start="17:46" pos:end="17:50">state</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:59">buf_off</name></name><operator pos:start="17:60" pos:end="17:60">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:62"><decl pos:start="19:9" pos:end="19:61"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">size_t</name></type> <name pos:start="19:16" pos:end="19:23">buf_fend</name> <init pos:start="19:25" pos:end="19:61">= <expr pos:start="19:27" pos:end="19:61"><operator pos:start="19:27" pos:end="19:27">(</operator><name pos:start="19:28" pos:end="19:43"><name pos:start="19:28" pos:end="19:32">state</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:43">buf_start</name></name> <operator pos:start="19:45" pos:end="19:45">+</operator> <name pos:start="19:47" pos:end="19:60"><name pos:start="19:47" pos:end="19:51">state</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:60">buf_len</name></name><operator pos:start="19:61" pos:end="19:61">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:29">(<expr pos:start="23:13" pos:end="23:28"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:18">state</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:28">orig_buf</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:18">state</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">buf_off</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="33:9" pos:end="33:54">// Does the existing buffer cover our section?</comment>

        <if_stmt pos:start="35:9" pos:end="57:9"><if pos:start="35:9" pos:end="57:9">if <condition pos:start="35:12" pos:end="41:29">(<expr pos:start="35:13" pos:end="41:28"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:18">start</name> <operator pos:start="35:20" pos:end="35:21">&gt;=</operator> <name pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:27">state</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:38">buf_start</name></name><operator pos:start="35:39" pos:end="35:39">)</operator> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator>

            <operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:18">start</name> <operator pos:start="37:20" pos:end="37:21">&lt;=</operator> <name pos:start="37:23" pos:end="37:29">buf_end</name><operator pos:start="37:30" pos:end="37:30">)</operator> <operator pos:start="37:32" pos:end="37:33">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">end</name> <operator pos:start="39:18" pos:end="39:19">&gt;=</operator> <name pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:25">state</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:36">buf_start</name></name><operator pos:start="39:37" pos:end="39:37">)</operator> <operator pos:start="39:39" pos:end="39:40">&amp;&amp;</operator>

            <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:16">end</name> <operator pos:start="41:18" pos:end="41:19">&lt;=</operator> <name pos:start="41:21" pos:end="41:27">buf_end</name><operator pos:start="41:28" pos:end="41:28">)</operator></expr>)</condition>

        <block pos:start="43:9" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:31">

            <decl_stmt pos:start="45:13" pos:end="45:69"><decl pos:start="45:13" pos:end="45:68"><type pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:16">char</name> <modifier pos:start="45:18" pos:end="45:18">*</modifier></type><name pos:start="45:19" pos:end="45:21">buf</name> <init pos:start="45:23" pos:end="45:68">= <expr pos:start="45:25" pos:end="45:68"><name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:29">state</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:39">orig_buf</name></name> <operator pos:start="45:41" pos:end="45:41">+</operator> <operator pos:start="45:43" pos:end="45:43">(</operator><name pos:start="45:44" pos:end="45:48">start</name> <operator pos:start="45:50" pos:end="45:50">-</operator> <name pos:start="45:52" pos:end="45:67"><name pos:start="45:52" pos:end="45:56">state</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:67">buf_start</name></name><operator pos:start="45:68" pos:end="45:68">)</operator></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:56"><expr pos:start="49:13" pos:end="49:55"><call pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:31">qemu_iovec_from_buf</name><argument_list pos:start="49:32" pos:end="49:55">(<argument pos:start="49:33" pos:end="49:41"><expr pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:35">acb</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:41">qiov</name></name></expr></argument>, <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">0</literal></expr></argument>, <argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:49">buf</name></expr></argument>, <argument pos:start="49:52" pos:end="49:54"><expr pos:start="49:52" pos:end="49:54"><name pos:start="49:52" pos:end="49:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><call pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:15">acb</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:23">common</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:26">cb</name></name><argument_list pos:start="51:27" pos:end="51:49">(<argument pos:start="51:28" pos:end="51:45"><expr pos:start="51:28" pos:end="51:45"><name pos:start="51:28" pos:end="51:45"><name pos:start="51:28" pos:end="51:30">acb</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:38">common</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:45">opaque</name></name></expr></argument>, <argument pos:start="51:48" pos:end="51:48"><expr pos:start="51:48" pos:end="51:48"><literal type="number" pos:start="51:48" pos:end="51:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="55:13" pos:end="55:31">return <expr pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:30">FIND_RET_OK</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="61:9" pos:end="61:37">// Wait for unfinished chunks</comment>

        <if_stmt pos:start="63:9" pos:end="95:9"><if pos:start="63:9" pos:end="95:9">if <condition pos:start="63:12" pos:end="69:30">(<expr pos:start="63:13" pos:end="69:29"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:18">start</name> <operator pos:start="63:20" pos:end="63:21">&gt;=</operator> <name pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:27">state</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">buf_start</name></name><operator pos:start="63:39" pos:end="63:39">)</operator> <operator pos:start="63:41" pos:end="63:42">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:18">start</name> <operator pos:start="65:20" pos:end="65:21">&lt;=</operator> <name pos:start="65:23" pos:end="65:30">buf_fend</name><operator pos:start="65:31" pos:end="65:31">)</operator> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator>

            <operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:16">end</name> <operator pos:start="67:18" pos:end="67:19">&gt;=</operator> <name pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:25">state</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">buf_start</name></name><operator pos:start="67:37" pos:end="67:37">)</operator> <operator pos:start="67:39" pos:end="67:40">&amp;&amp;</operator>

            <operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:16">end</name> <operator pos:start="69:18" pos:end="69:19">&lt;=</operator> <name pos:start="69:21" pos:end="69:28">buf_fend</name><operator pos:start="69:29" pos:end="69:29">)</operator></expr>)</condition>

        <block pos:start="71:9" pos:end="95:9">{<block_content pos:start="73:13" pos:end="93:13">

            <decl_stmt pos:start="73:13" pos:end="73:18"><decl pos:start="73:13" pos:end="73:17"><type pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">int</name></type> <name pos:start="73:17" pos:end="73:17">j</name></decl>;</decl_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:15">acb</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:22">start</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:30">start</name> <operator pos:start="77:32" pos:end="77:32">-</operator> <name pos:start="77:34" pos:end="77:49"><name pos:start="77:34" pos:end="77:38">state</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:49">buf_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:40"><expr pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:15">acb</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:20">end</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:33"><name pos:start="79:24" pos:end="79:26">acb</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:33">start</name></name> <operator pos:start="79:35" pos:end="79:35">+</operator> <name pos:start="79:37" pos:end="79:39">len</name></expr>;</expr_stmt>



            <for pos:start="83:13" pos:end="93:13">for <control pos:start="83:17" pos:end="83:42">(<init pos:start="83:18" pos:end="83:21"><expr pos:start="83:18" pos:end="83:20"><name pos:start="83:18" pos:end="83:18">j</name><operator pos:start="83:19" pos:end="83:19">=</operator><literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</init> <condition pos:start="83:23" pos:end="83:37"><expr pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:23">j</name><operator pos:start="83:24" pos:end="83:24">&lt;</operator><name pos:start="83:25" pos:end="83:36">CURL_NUM_ACB</name></expr>;</condition> <incr pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><name pos:start="83:39" pos:end="83:39">j</name><operator pos:start="83:40" pos:end="83:41">++</operator></expr></incr>)</control> <block pos:start="83:44" pos:end="93:13">{<block_content pos:start="85:17" pos:end="91:17">

                <if_stmt pos:start="85:17" pos:end="91:17"><if pos:start="85:17" pos:end="91:17">if <condition pos:start="85:20" pos:end="85:35">(<expr pos:start="85:21" pos:end="85:34"><operator pos:start="85:21" pos:end="85:21">!</operator><name pos:start="85:22" pos:end="85:34"><name pos:start="85:22" pos:end="85:26">state</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:31">acb</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><name pos:start="85:33" pos:end="85:33">j</name></expr>]</index></name></expr>)</condition> <block pos:start="85:37" pos:end="91:17">{<block_content pos:start="87:21" pos:end="89:41">

                    <expr_stmt pos:start="87:21" pos:end="87:40"><expr pos:start="87:21" pos:end="87:39"><name pos:start="87:21" pos:end="87:33"><name pos:start="87:21" pos:end="87:25">state</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:30">acb</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">j</name></expr>]</index></name> <operator pos:start="87:35" pos:end="87:35">=</operator> <name pos:start="87:37" pos:end="87:39">acb</name></expr>;</expr_stmt>

                    <return pos:start="89:21" pos:end="89:41">return <expr pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:40">FIND_RET_WAIT</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="101:5" pos:end="101:25">return <expr pos:start="101:12" pos:end="101:24"><name pos:start="101:12" pos:end="101:24">FIND_RET_NONE</name></expr>;</return>

</block_content>}</block></function>
</unit>
