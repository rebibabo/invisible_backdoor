<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7897.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:28">gen_store</name><parameter_list pos:start="1:29" pos:end="1:78">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:56">opsize</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">TCGv</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:73">TCGv</name></type> <name pos:start="1:75" pos:end="1:77">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:40">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name> <init pos:start="5:15" pos:end="5:26">= <expr pos:start="5:17" pos:end="5:26"><call pos:start="5:17" pos:end="5:26"><name pos:start="5:17" pos:end="5:23">IS_USER</name><argument_list pos:start="5:24" pos:end="5:26">(<argument pos:start="5:25" pos:end="5:25"><expr pos:start="5:25" pos:end="5:25"><name pos:start="5:25" pos:end="5:25">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:18"><expr pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:13">is_mem</name></name> <operator pos:start="7:15" pos:end="7:15">=</operator> <literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr>;</expr_stmt>

    <switch pos:start="9:5" pos:end="35:5">switch<condition pos:start="9:11" pos:end="9:18">(<expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:17">opsize</name></expr>)</condition> <block pos:start="9:20" pos:end="35:5">{<block_content pos:start="11:5" pos:end="33:41">

    <case pos:start="11:5" pos:end="11:17">case <expr pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:16">OS_BYTE</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:24">tcg_gen_qemu_st8</name><argument_list pos:start="13:25" pos:end="13:42">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">val</name></expr></argument>, <argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">addr</name></expr></argument>, <argument pos:start="13:37" pos:end="13:41"><expr pos:start="13:37" pos:end="13:41"><name pos:start="13:37" pos:end="13:41">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:17">case <expr pos:start="17:10" pos:end="17:16"><name pos:start="17:10" pos:end="17:16">OS_WORD</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:25">tcg_gen_qemu_st16</name><argument_list pos:start="19:26" pos:end="19:43">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">val</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">addr</name></expr></argument>, <argument pos:start="19:38" pos:end="19:42"><expr pos:start="19:38" pos:end="19:42"><name pos:start="19:38" pos:end="19:42">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:17">case <expr pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:16">OS_LONG</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:19">case <expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:18">OS_SINGLE</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><call pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:25">tcg_gen_qemu_st32</name><argument_list pos:start="27:26" pos:end="27:43">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">val</name></expr></argument>, <argument pos:start="27:32" pos:end="27:35"><expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">addr</name></expr></argument>, <argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:42">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:19">qemu_assert</name><argument_list pos:start="33:20" pos:end="33:40">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></argument>, <argument pos:start="33:24" pos:end="33:39"><expr pos:start="33:24" pos:end="33:39"><literal type="string" pos:start="33:24" pos:end="33:39">"bad store size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:24">gen_throws_exception</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:39">gen_last_qop</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
