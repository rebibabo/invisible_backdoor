<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10010.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">patch_hypercalls</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:41">VAPICROMState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">hwaddr</name></type> <name pos:start="5:12" pos:end="5:20">rom_paddr</name> <init pos:start="5:22" pos:end="5:58">= <expr pos:start="5:24" pos:end="5:58"><name pos:start="5:24" pos:end="5:41"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:41">rom_state_paddr</name></name> <operator pos:start="5:43" pos:end="5:43">&amp;</operator> <name pos:start="5:45" pos:end="5:58">ROM_BLOCK_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="11:6"><decl pos:start="7:5" pos:end="11:5"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:39">vmcall_pattern</name><index pos:start="7:40" pos:end="7:41">[]</index></name> <init pos:start="7:43" pos:end="11:5">= <expr pos:start="7:45" pos:end="11:5"><block pos:start="7:45" pos:end="11:5">{ <comment type="block" pos:start="7:47" pos:end="7:58">/* vmcall */</comment>

        <expr pos:start="9:9" pos:end="9:12"><literal type="number" pos:start="9:9" pos:end="9:12">0xb8</literal></expr>, <expr pos:start="9:15" pos:end="9:17"><literal type="number" pos:start="9:15" pos:end="9:17">0x1</literal></expr>, <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr>, <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr>, <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>, <expr pos:start="9:29" pos:end="9:31"><literal type="number" pos:start="9:29" pos:end="9:31">0xf</literal></expr>, <expr pos:start="9:34" pos:end="9:36"><literal type="number" pos:start="9:34" pos:end="9:36">0x1</literal></expr>, <expr pos:start="9:39" pos:end="9:42"><literal type="number" pos:start="9:39" pos:end="9:42">0xc1</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="17:6"><decl pos:start="13:5" pos:end="17:5"><type pos:start="13:5" pos:end="13:24"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <specifier pos:start="13:12" pos:end="13:16">const</specifier> <name pos:start="13:18" pos:end="13:24">uint8_t</name></type> <name pos:start="13:26" pos:end="13:39"><name pos:start="13:26" pos:end="13:37">outl_pattern</name><index pos:start="13:38" pos:end="13:39">[]</index></name> <init pos:start="13:41" pos:end="17:5">= <expr pos:start="13:43" pos:end="17:5"><block pos:start="13:43" pos:end="17:5">{ <comment type="block" pos:start="13:45" pos:end="13:69">/* nop; outl %eax,0x7e */</comment>

        <expr pos:start="15:9" pos:end="15:12"><literal type="number" pos:start="15:9" pos:end="15:12">0xb8</literal></expr>, <expr pos:start="15:15" pos:end="15:17"><literal type="number" pos:start="15:15" pos:end="15:17">0x1</literal></expr>, <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>, <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>, <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>, <expr pos:start="15:29" pos:end="15:32"><literal type="number" pos:start="15:29" pos:end="15:32">0x90</literal></expr>, <expr pos:start="15:35" pos:end="15:38"><literal type="number" pos:start="15:35" pos:end="15:38">0xe7</literal></expr>, <expr pos:start="15:41" pos:end="15:44"><literal type="number" pos:start="15:41" pos:end="15:44">0x7e</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:22">alternates</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:26">pattern</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">uint8_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:24">patch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:15">patches</name> <init pos:start="25:17" pos:end="25:19">= <expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:9">off_t</name></type> <name pos:start="27:11" pos:end="27:13">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">uint8_t</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:16">rom</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:7">rom</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:31"><name pos:start="33:11" pos:end="33:18">g_malloc</name><argument_list pos:start="33:19" pos:end="33:31">(<argument pos:start="33:20" pos:end="33:30"><expr pos:start="33:20" pos:end="33:30"><name pos:start="33:20" pos:end="33:30"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:30">rom_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><call pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:28">cpu_physical_memory_read</name><argument_list pos:start="35:29" pos:end="35:57">(<argument pos:start="35:30" pos:end="35:38"><expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38">rom_paddr</name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">rom</name></expr></argument>, <argument pos:start="35:46" pos:end="35:56"><expr pos:start="35:46" pos:end="35:56"><name pos:start="35:46" pos:end="35:56"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:56">rom_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="81:5">for <control pos:start="39:9" pos:end="39:68">(<init pos:start="39:10" pos:end="39:17"><expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:12">pos</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</init> <condition pos:start="39:19" pos:end="39:61"><expr pos:start="39:19" pos:end="39:60"><name pos:start="39:19" pos:end="39:21">pos</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:35">rom_size</name></name> <operator pos:start="39:37" pos:end="39:37">-</operator> <sizeof pos:start="39:39" pos:end="39:60">sizeof<argument_list pos:start="39:45" pos:end="39:60">(<argument pos:start="39:46" pos:end="39:59"><expr pos:start="39:46" pos:end="39:59"><name pos:start="39:46" pos:end="39:59">vmcall_pattern</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="39:63" pos:end="39:67"><expr pos:start="39:63" pos:end="39:67"><name pos:start="39:63" pos:end="39:65">pos</name><operator pos:start="39:66" pos:end="39:67">++</operator></expr></incr>)</control> <block pos:start="39:70" pos:end="81:5">{<block_content pos:start="41:9" pos:end="79:9">

        <if_stmt pos:start="41:9" pos:end="61:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><call pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:33">kvm_irqchip_in_kernel</name><argument_list pos:start="41:34" pos:end="41:35">()</argument_list></call></expr>)</condition> <block pos:start="41:38" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:39">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:19">pattern</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:34">outl_pattern</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:44"><expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:22">alternates</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:43"><name pos:start="45:29" pos:end="45:40">outl_pattern</name><index pos:start="45:41" pos:end="45:43">[<expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">7</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:22">alternates</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:40">outl_pattern</name><index pos:start="47:41" pos:end="47:43">[<expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">7</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:39"><expr pos:start="49:13" pos:end="49:38"><name pos:start="49:13" pos:end="49:17">patch</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:38"><name pos:start="49:22" pos:end="49:35">vmcall_pattern</name><index pos:start="49:36" pos:end="49:38">[<expr pos:start="49:37" pos:end="49:37"><literal type="number" pos:start="49:37" pos:end="49:37">5</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="61:9">else <block pos:start="51:16" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:37">

            <expr_stmt pos:start="53:13" pos:end="53:37"><expr pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:19">pattern</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:36">vmcall_pattern</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:22">alternates</name><index pos:start="55:23" pos:end="55:25">[<expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:45"><name pos:start="55:29" pos:end="55:42">vmcall_pattern</name><index pos:start="55:43" pos:end="55:45">[<expr pos:start="55:44" pos:end="55:44"><literal type="number" pos:start="55:44" pos:end="55:44">7</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:22">alternates</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <literal type="number" pos:start="57:29" pos:end="57:32">0xd9</literal></expr>;</expr_stmt> <comment type="block" pos:start="57:35" pos:end="57:53">/* AMD's VMMCALL */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:17">patch</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <operator pos:start="59:21" pos:end="59:21">&amp;</operator><name pos:start="59:22" pos:end="59:36"><name pos:start="59:22" pos:end="59:33">outl_pattern</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><literal type="number" pos:start="59:35" pos:end="59:35">5</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="79:9"><if pos:start="63:9" pos:end="79:9">if <condition pos:start="63:12" pos:end="65:77">(<expr pos:start="63:13" pos:end="65:76"><call pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:18">memcmp</name><argument_list pos:start="63:19" pos:end="63:41">(<argument pos:start="63:20" pos:end="63:28"><expr pos:start="63:20" pos:end="63:28"><name pos:start="63:20" pos:end="63:22">rom</name> <operator pos:start="63:24" pos:end="63:24">+</operator> <name pos:start="63:26" pos:end="63:28">pos</name></expr></argument>, <argument pos:start="63:31" pos:end="63:37"><expr pos:start="63:31" pos:end="63:37"><name pos:start="63:31" pos:end="63:37">pattern</name></expr></argument>, <argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">7</literal></expr></argument>)</argument_list></call> <operator pos:start="63:43" pos:end="63:44">==</operator> <literal type="number" pos:start="63:46" pos:end="63:46">0</literal> <operator pos:start="63:48" pos:end="63:49">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:25"><name pos:start="65:14" pos:end="65:16">rom</name><index pos:start="65:17" pos:end="65:25">[<expr pos:start="65:18" pos:end="65:24"><name pos:start="65:18" pos:end="65:20">pos</name> <operator pos:start="65:22" pos:end="65:22">+</operator> <literal type="number" pos:start="65:24" pos:end="65:24">7</literal></expr>]</index></name> <operator pos:start="65:27" pos:end="65:28">==</operator> <name pos:start="65:30" pos:end="65:42"><name pos:start="65:30" pos:end="65:39">alternates</name><index pos:start="65:40" pos:end="65:42">[<expr pos:start="65:41" pos:end="65:41"><literal type="number" pos:start="65:41" pos:end="65:41">0</literal></expr>]</index></name> <operator pos:start="65:44" pos:end="65:45">||</operator> <name pos:start="65:47" pos:end="65:58"><name pos:start="65:47" pos:end="65:49">rom</name><index pos:start="65:50" pos:end="65:58">[<expr pos:start="65:51" pos:end="65:57"><name pos:start="65:51" pos:end="65:53">pos</name> <operator pos:start="65:55" pos:end="65:55">+</operator> <literal type="number" pos:start="65:57" pos:end="65:57">7</literal></expr>]</index></name> <operator pos:start="65:60" pos:end="65:61">==</operator> <name pos:start="65:63" pos:end="65:75"><name pos:start="65:63" pos:end="65:72">alternates</name><index pos:start="65:73" pos:end="65:75">[<expr pos:start="65:74" pos:end="65:74"><literal type="number" pos:start="65:74" pos:end="65:74">1</literal></expr>]</index></name><operator pos:start="65:76" pos:end="65:76">)</operator></expr>)</condition> <block pos:start="65:79" pos:end="79:9">{<block_content pos:start="67:13" pos:end="67:69">

            <expr_stmt pos:start="67:13" pos:end="67:69"><expr pos:start="67:13" pos:end="67:68"><call pos:start="67:13" pos:end="67:68"><name pos:start="67:13" pos:end="67:37">cpu_physical_memory_write</name><argument_list pos:start="67:38" pos:end="67:68">(<argument pos:start="67:39" pos:end="67:57"><expr pos:start="67:39" pos:end="67:57"><name pos:start="67:39" pos:end="67:47">rom_paddr</name> <operator pos:start="67:49" pos:end="67:49">+</operator> <name pos:start="67:51" pos:end="67:53">pos</name> <operator pos:start="67:55" pos:end="67:55">+</operator> <literal type="number" pos:start="67:57" pos:end="67:57">5</literal></expr></argument>, <argument pos:start="67:60" pos:end="67:64"><expr pos:start="67:60" pos:end="67:64"><name pos:start="67:60" pos:end="67:64">patch</name></expr></argument>, <argument pos:start="67:67" pos:end="67:67"><expr pos:start="67:67" pos:end="67:67"><literal type="number" pos:start="67:67" pos:end="67:67">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="69:13" pos:end="77:15">/*

             * Don't flush the tb here. Under ordinary conditions, the patched

             * calls are miles away from the current IP. Under malicious

             * conditions, the guest could trick us to crash.

             */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="85:5" pos:end="85:16"><expr pos:start="85:5" pos:end="85:15"><call pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:10">g_free</name><argument_list pos:start="85:11" pos:end="85:15">(<argument pos:start="85:12" pos:end="85:14"><expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:37">(<expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:15">patches</name> <operator pos:start="89:17" pos:end="89:18">!=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal> <operator pos:start="89:22" pos:end="89:23">&amp;&amp;</operator> <name pos:start="89:25" pos:end="89:31">patches</name> <operator pos:start="89:33" pos:end="89:34">!=</operator> <literal type="number" pos:start="89:36" pos:end="89:36">2</literal></expr>)</condition> <block pos:start="89:39" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:18">

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
