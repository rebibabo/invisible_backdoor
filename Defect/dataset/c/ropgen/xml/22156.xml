<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22156.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">qcow2_cache_put</name><parameter_list pos:start="1:20" pos:end="1:70">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:52">Qcow2Cache</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">c</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:61">void</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name> <init pos:start="5:11" pos:end="5:52">= <expr pos:start="5:13" pos:end="5:52"><call pos:start="5:13" pos:end="5:52"><name pos:start="5:13" pos:end="5:37">qcow2_cache_get_table_idx</name><argument_list pos:start="5:38" pos:end="5:52">(<argument pos:start="5:39" pos:end="5:40"><expr pos:start="5:39" pos:end="5:40"><name pos:start="5:39" pos:end="5:40">bs</name></expr></argument>, <argument pos:start="5:43" pos:end="5:43"><expr pos:start="5:43" pos:end="5:43"><name pos:start="5:43" pos:end="5:43">c</name></expr></argument>, <argument pos:start="5:46" pos:end="5:51"><expr pos:start="5:46" pos:end="5:51"><operator pos:start="5:46" pos:end="5:46">*</operator><name pos:start="5:47" pos:end="5:51">table</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">entries</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">i</name></expr>]</index></name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:28">offset</name> <operator pos:start="9:30" pos:end="9:31">==</operator> <literal type="number" pos:start="9:33" pos:end="9:33">0</literal></expr>)</condition> <block pos:start="9:36" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:23">

        <return pos:start="11:9" pos:end="11:23">return <expr pos:start="11:16" pos:end="11:22"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:22">ENOENT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:14">entries</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:21">ref</name><operator pos:start="17:22" pos:end="17:23">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:10">table</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:17">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">entries</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">i</name></expr>]</index></name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:25">ref</name> <operator pos:start="23:27" pos:end="23:28">==</operator> <literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr>)</condition> <block pos:start="23:33" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:53">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:18">entries</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">i</name></expr>]</index></name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:33">lru_counter</name> <operator pos:start="25:35" pos:end="25:35">=</operator> <operator pos:start="25:37" pos:end="25:38">++</operator><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:39">c</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:52">lru_counter</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:34">(<argument pos:start="31:12" pos:end="31:33"><expr pos:start="31:12" pos:end="31:33"><name pos:start="31:12" pos:end="31:24"><name pos:start="31:12" pos:end="31:12">c</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:21">entries</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">i</name></expr>]</index></name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:28">ref</name> <operator pos:start="31:30" pos:end="31:31">&gt;=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
