<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26369.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:27">serial_xmit</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:38">GIOChannel</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">chan</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">GIOCondition</name></type> <name pos:start="1:60" pos:end="1:63">cond</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:17">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SerialState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>



    <do pos:start="9:5" pos:end="79:71">do <block pos:start="9:8" pos:end="79:5">{<block_content pos:start="11:9" pos:end="73:9">

        <if_stmt pos:start="11:9" pos:end="43:9"><if pos:start="11:9" pos:end="43:9">if <condition pos:start="11:12" pos:end="11:30">(<expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:24">tsr_retry</name></name> <operator pos:start="11:26" pos:end="11:27">&lt;=</operator> <literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr>)</condition> <block pos:start="11:32" pos:end="43:9">{<block_content pos:start="13:13" pos:end="41:13">

            <if_stmt pos:start="13:13" pos:end="41:13"><if pos:start="13:13" pos:end="29:13">if <condition pos:start="13:16" pos:end="13:37">(<expr pos:start="13:17" pos:end="13:36"><name pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:22">fcr</name></name> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <name pos:start="13:26" pos:end="13:36">UART_FCR_FE</name></expr>)</condition> <block pos:start="13:39" pos:end="29:13">{<block_content pos:start="15:17" pos:end="27:17">

                <if_stmt pos:start="15:17" pos:end="19:17"><if pos:start="15:17" pos:end="19:17">if <condition pos:start="15:20" pos:end="15:50">(<expr pos:start="15:21" pos:end="15:49"><call pos:start="15:21" pos:end="15:49"><name pos:start="15:21" pos:end="15:34">fifo8_is_empty</name><argument_list pos:start="15:35" pos:end="15:49">(<argument pos:start="15:36" pos:end="15:48"><expr pos:start="15:36" pos:end="15:48"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:48"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:48">xmit_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:52" pos:end="19:17">{<block_content pos:start="17:21" pos:end="17:33">

                    <return pos:start="17:21" pos:end="17:33">return <expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">FALSE</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="21:17" pos:end="21:50"><expr pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">tsr</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:49"><name pos:start="21:26" pos:end="21:34">fifo8_pop</name><argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:48"><expr pos:start="21:36" pos:end="21:48"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:48"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:48">xmit_fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="23:17" pos:end="27:17"><if pos:start="23:17" pos:end="27:17">if <condition pos:start="23:20" pos:end="23:38">(<expr pos:start="23:21" pos:end="23:37"><operator pos:start="23:21" pos:end="23:21">!</operator><name pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:22">s</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:33">xmit_fifo</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:37">num</name></name></expr>)</condition> <block pos:start="23:40" pos:end="27:17">{<block_content pos:start="25:21" pos:end="25:44">

                    <expr_stmt pos:start="25:21" pos:end="25:44"><expr pos:start="25:21" pos:end="25:43"><name pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:26">lsr</name></name> <operator pos:start="25:28" pos:end="25:29">|=</operator> <name pos:start="25:31" pos:end="25:43">UART_LSR_THRE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="29:15" pos:end="33:13">else if <condition pos:start="29:23" pos:end="29:48">(<expr pos:start="29:24" pos:end="29:47"><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:30">lsr</name></name> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <name pos:start="29:34" pos:end="29:46">UART_LSR_THRE</name><operator pos:start="29:47" pos:end="29:47">)</operator></expr>)</condition> <block pos:start="29:50" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:29">

                <return pos:start="31:17" pos:end="31:29">return <expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:28">FALSE</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="33:15" pos:end="41:13">else <block pos:start="33:20" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:41">

                <expr_stmt pos:start="35:17" pos:end="35:32"><expr pos:start="35:17" pos:end="35:31"><name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">tsr</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:31">thr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:40"><expr pos:start="37:17" pos:end="37:39"><name pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:22">lsr</name></name> <operator pos:start="37:24" pos:end="37:25">|=</operator> <name pos:start="37:27" pos:end="37:39">UART_LSR_THRE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:41"><expr pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:22">lsr</name></name> <operator pos:start="39:24" pos:end="39:25">&amp;=</operator> <operator pos:start="39:27" pos:end="39:27">~</operator><name pos:start="39:28" pos:end="39:40">UART_LSR_TEMT</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="73:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:35">(<expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">mcr</name></name> <operator pos:start="47:20" pos:end="47:20">&amp;</operator> <name pos:start="47:22" pos:end="47:34">UART_MCR_LOOP</name></expr>)</condition> <block pos:start="47:37" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:43">

            <comment type="block" pos:start="49:13" pos:end="49:68">/* in loopback mode, say that we just received a char */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><call pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:27">serial_receive1</name><argument_list pos:start="51:28" pos:end="51:42">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">s</name></expr></argument>, <argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:38">tsr</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="69:9">else if <condition pos:start="53:19" pos:end="53:62">(<expr pos:start="53:20" pos:end="53:61"><call pos:start="53:20" pos:end="53:56"><name pos:start="53:20" pos:end="53:36">qemu_chr_fe_write</name><argument_list pos:start="53:37" pos:end="53:56">(<argument pos:start="53:38" pos:end="53:43"><expr pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:38">s</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:43">chr</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:52"><expr pos:start="53:46" pos:end="53:52"><operator pos:start="53:46" pos:end="53:46">&amp;</operator><name pos:start="53:47" pos:end="53:52"><name pos:start="53:47" pos:end="53:47">s</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:52">tsr</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:55"><expr pos:start="53:55" pos:end="53:55"><literal type="number" pos:start="53:55" pos:end="53:55">1</literal></expr></argument>)</argument_list></call> <operator pos:start="53:58" pos:end="53:59">!=</operator> <literal type="number" pos:start="53:61" pos:end="53:61">1</literal></expr>)</condition> <block pos:start="53:64" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:29">

            <if_stmt pos:start="55:13" pos:end="65:13"><if pos:start="55:13" pos:end="65:13">if <condition pos:start="55:16" pos:end="59:58">(<expr pos:start="55:17" pos:end="59:57"><name pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:28">tsr_retry</name></name> <operator pos:start="55:30" pos:end="55:31">&gt;=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">0</literal> <operator pos:start="55:35" pos:end="55:36">&amp;&amp;</operator> <name pos:start="55:38" pos:end="55:49"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:49">tsr_retry</name></name> <operator pos:start="55:51" pos:end="55:51">&lt;</operator> <name pos:start="55:53" pos:end="55:66">MAX_XMIT_RETRY</name> <operator pos:start="55:68" pos:end="55:69">&amp;&amp;</operator>

                <call pos:start="57:17" pos:end="59:53"><name pos:start="57:17" pos:end="57:37">qemu_chr_fe_add_watch</name><argument_list pos:start="57:38" pos:end="59:53">(<argument pos:start="57:39" pos:end="57:44"><expr pos:start="57:39" pos:end="57:44"><name pos:start="57:39" pos:end="57:44"><name pos:start="57:39" pos:end="57:39">s</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:44">chr</name></name></expr></argument>, <argument pos:start="57:47" pos:end="57:63"><expr pos:start="57:47" pos:end="57:63"><name pos:start="57:47" pos:end="57:54">G_IO_OUT</name><operator pos:start="57:55" pos:end="57:55">|</operator><name pos:start="57:56" pos:end="57:63">G_IO_HUP</name></expr></argument>,

                                      <argument pos:start="59:39" pos:end="59:49"><expr pos:start="59:39" pos:end="59:49"><name pos:start="59:39" pos:end="59:49">serial_xmit</name></expr></argument>, <argument pos:start="59:52" pos:end="59:52"><expr pos:start="59:52" pos:end="59:52"><name pos:start="59:52" pos:end="59:52">s</name></expr></argument>)</argument_list></call> <operator pos:start="59:55" pos:end="59:55">&gt;</operator> <literal type="number" pos:start="59:57" pos:end="59:57">0</literal></expr>)</condition> <block pos:start="59:60" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:29">

                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:28">tsr_retry</name></name><operator pos:start="61:29" pos:end="61:30">++</operator></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:29">return <expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28">FALSE</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:24">tsr_retry</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:29">

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">tsr_retry</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="75:9" pos:end="77:58">/* Transmit another byte if it is already available. It is only

           possible when FIFO is enabled and not empty. */</comment>

    </block_content>}</block> while <condition pos:start="79:13" pos:end="79:70">(<expr pos:start="79:14" pos:end="79:69"><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:20"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:20">fcr</name></name> <operator pos:start="79:22" pos:end="79:22">&amp;</operator> <name pos:start="79:24" pos:end="79:34">UART_FCR_FE</name><operator pos:start="79:35" pos:end="79:35">)</operator> <operator pos:start="79:37" pos:end="79:38">&amp;&amp;</operator> <operator pos:start="79:40" pos:end="79:40">!</operator><call pos:start="79:41" pos:end="79:69"><name pos:start="79:41" pos:end="79:54">fifo8_is_empty</name><argument_list pos:start="79:55" pos:end="79:69">(<argument pos:start="79:56" pos:end="79:68"><expr pos:start="79:56" pos:end="79:68"><operator pos:start="79:56" pos:end="79:56">&amp;</operator><name pos:start="79:57" pos:end="79:68"><name pos:start="79:57" pos:end="79:57">s</name><operator pos:start="79:58" pos:end="79:59">-&gt;</operator><name pos:start="79:60" pos:end="79:68">xmit_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



    <expr_stmt pos:start="83:5" pos:end="83:60"><expr pos:start="83:5" pos:end="83:59"><name pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:19">last_xmit_ts</name></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:59"><name pos:start="83:23" pos:end="83:39">qemu_clock_get_ns</name><argument_list pos:start="83:40" pos:end="83:59">(<argument pos:start="83:41" pos:end="83:58"><expr pos:start="83:41" pos:end="83:58"><name pos:start="83:41" pos:end="83:58">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:31">(<expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">lsr</name></name> <operator pos:start="87:16" pos:end="87:16">&amp;</operator> <name pos:start="87:18" pos:end="87:30">UART_LSR_THRE</name></expr>)</condition> <block pos:start="87:33" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:29">

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:14">lsr</name></name> <operator pos:start="89:16" pos:end="89:17">|=</operator> <name pos:start="89:19" pos:end="89:31">UART_LSR_TEMT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:23">thr_ipending</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <literal type="number" pos:start="91:27" pos:end="91:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><call pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:25">serial_update_irq</name><argument_list pos:start="93:26" pos:end="93:28">(<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:17">return <expr pos:start="99:12" pos:end="99:16"><name pos:start="99:12" pos:end="99:16">FALSE</name></expr>;</return>

</block_content>}</block></function>
</unit>
