<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2242.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">vmd_decode</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">VmdVideoContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">palette32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:19">r</name></decl>, <decl pos:start="9:22" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:22" pos:end="9:22">g</name></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:25" pos:end="9:25">b</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:48">/* point to the start of the encoded data */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:20">p</name> <init pos:start="15:22" pos:end="15:34">= <expr pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:29">buf</name></name> <operator pos:start="15:31" pos:end="15:31">+</operator> <literal type="number" pos:start="15:33" pos:end="15:34">16</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:21">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:22">meth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:17">char</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:21">dp</name></decl>;</decl_stmt>   <comment type="block" pos:start="23:26" pos:end="23:55">/* pointer to current frame */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:21">pp</name></decl>;</decl_stmt>   <comment type="block" pos:start="25:26" pos:end="25:56">/* pointer to previous frame */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:17">char</name></type> <name pos:start="27:19" pos:end="27:21">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:12"><decl pos:start="29:5" pos:end="29:11"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">ofs</name></decl>;</decl_stmt>



    <decl_stmt pos:start="33:5" pos:end="33:25"><decl pos:start="33:5" pos:end="33:15"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:15">frame_x</name></decl>, <decl pos:start="33:18" pos:end="33:24"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:18" pos:end="33:24">frame_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:34"><decl pos:start="35:5" pos:end="35:19"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:19">frame_width</name></decl>, <decl pos:start="35:22" pos:end="35:33"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:22" pos:end="35:33">frame_height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:11">frame_x</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:31"><name pos:start="39:15" pos:end="39:19">LE_16</name><argument_list pos:start="39:20" pos:end="39:31">(<argument pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:30"><operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:30"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:27">buf</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:11">frame_y</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:31"><name pos:start="41:15" pos:end="41:19">LE_16</name><argument_list pos:start="41:20" pos:end="41:31">(<argument pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:30"><operator pos:start="41:21" pos:end="41:21">&amp;</operator><name pos:start="41:22" pos:end="41:30"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:27">buf</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:15">frame_width</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:36"><name pos:start="43:19" pos:end="43:23">LE_16</name><argument_list pos:start="43:24" pos:end="43:36">(<argument pos:start="43:25" pos:end="43:35"><expr pos:start="43:25" pos:end="43:35"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:35"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">buf</name><index pos:start="43:32" pos:end="43:35">[<expr pos:start="43:33" pos:end="43:34"><literal type="number" pos:start="43:33" pos:end="43:34">10</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="43:38" pos:end="43:38">-</operator> <name pos:start="43:40" pos:end="43:46">frame_x</name> <operator pos:start="43:48" pos:end="43:48">+</operator> <literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:16">frame_height</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:37"><name pos:start="45:20" pos:end="45:24">LE_16</name><argument_list pos:start="45:25" pos:end="45:37">(<argument pos:start="45:26" pos:end="45:36"><expr pos:start="45:26" pos:end="45:36"><operator pos:start="45:26" pos:end="45:26">&amp;</operator><name pos:start="45:27" pos:end="45:36"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">buf</name><index pos:start="45:33" pos:end="45:36">[<expr pos:start="45:34" pos:end="45:35"><literal type="number" pos:start="45:34" pos:end="45:35">12</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="45:39" pos:end="45:39">-</operator> <name pos:start="45:41" pos:end="45:47">frame_y</name> <operator pos:start="45:49" pos:end="45:49">+</operator> <literal type="number" pos:start="45:51" pos:end="45:51">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="51:33">/* if only a certain region will be updated, copy the entire previous

     * frame before the decode */</comment>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="55:43">(<expr pos:start="53:9" pos:end="55:42"><name pos:start="53:9" pos:end="53:15">frame_x</name> <operator pos:start="53:17" pos:end="53:18">||</operator> <name pos:start="53:20" pos:end="53:26">frame_y</name> <operator pos:start="53:28" pos:end="53:29">||</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:42">frame_width</name> <operator pos:start="53:44" pos:end="53:45">!=</operator> <name pos:start="53:47" pos:end="53:61"><name pos:start="53:47" pos:end="53:47">s</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:54">avctx</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:61">width</name></name><operator pos:start="53:62" pos:end="53:62">)</operator> <operator pos:start="53:64" pos:end="53:65">||</operator>

        <operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:21">frame_height</name> <operator pos:start="55:23" pos:end="55:24">!=</operator> <name pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:33">avctx</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:41">height</name></name><operator pos:start="55:42" pos:end="55:42">)</operator></expr>)</condition> <block pos:start="55:45" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:53">



        <expr_stmt pos:start="59:9" pos:end="61:53"><expr pos:start="59:9" pos:end="61:52"><call pos:start="59:9" pos:end="61:52"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="61:52">(<argument pos:start="59:16" pos:end="59:31"><expr pos:start="59:16" pos:end="59:31"><name pos:start="59:16" pos:end="59:31"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">frame</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:28">data</name><index pos:start="59:29" pos:end="59:31">[<expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:34" pos:end="59:54"><expr pos:start="59:34" pos:end="59:54"><name pos:start="59:34" pos:end="59:54"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:46">prev_frame</name><operator pos:start="59:47" pos:end="59:47">.</operator><name pos:start="59:48" pos:end="59:51">data</name><index pos:start="59:52" pos:end="59:54">[<expr pos:start="59:53" pos:end="59:53"><literal type="number" pos:start="59:53" pos:end="59:53">0</literal></expr>]</index></name></expr></argument>, 

            <argument pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">avctx</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:28">height</name></name> <operator pos:start="61:30" pos:end="61:30">*</operator> <name pos:start="61:32" pos:end="61:51"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:39">frame</name><operator pos:start="61:40" pos:end="61:40">.</operator><name pos:start="61:41" pos:end="61:48">linesize</name><index pos:start="61:49" pos:end="61:51">[<expr pos:start="61:50" pos:end="61:50"><literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:41">/* check if there is a new palette */</comment>

    <if_stmt pos:start="69:5" pos:end="89:5"><if pos:start="69:5" pos:end="89:5">if <condition pos:start="69:8" pos:end="69:26">(<expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:14">buf</name><index pos:start="69:15" pos:end="69:18">[<expr pos:start="69:16" pos:end="69:17"><literal type="number" pos:start="69:16" pos:end="69:17">15</literal></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">&amp;</operator> <literal type="number" pos:start="69:22" pos:end="69:25">0x02</literal></expr>)</condition> <block pos:start="69:28" pos:end="89:5">{<block_content pos:start="71:9" pos:end="87:33">

        <expr_stmt pos:start="71:9" pos:end="71:15"><expr pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:9">p</name> <operator pos:start="71:11" pos:end="71:12">+=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:17">palette32</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:29">unsigned</name> <name pos:start="73:31" pos:end="73:33">int</name> <operator pos:start="73:35" pos:end="73:35">*</operator><operator pos:start="73:36" pos:end="73:36">)</operator><name pos:start="73:37" pos:end="73:46"><name pos:start="73:37" pos:end="73:37">s</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:46">palette</name></name></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="85:9">for <control pos:start="75:13" pos:end="75:43">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:38"><expr pos:start="75:21" pos:end="75:37"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:37">PALETTE_COUNT</name></expr>;</condition> <incr pos:start="75:40" pos:end="75:42"><expr pos:start="75:40" pos:end="75:42"><name pos:start="75:40" pos:end="75:40">i</name><operator pos:start="75:41" pos:end="75:42">++</operator></expr></incr>)</control> <block pos:start="75:45" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:54">

            <expr_stmt pos:start="77:13" pos:end="77:25"><expr pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:13">r</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <operator pos:start="77:17" pos:end="77:17">*</operator><name pos:start="77:18" pos:end="77:18">p</name><operator pos:start="77:19" pos:end="77:20">++</operator> <operator pos:start="77:22" pos:end="77:22">*</operator> <literal type="number" pos:start="77:24" pos:end="77:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:25"><expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:13">g</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <operator pos:start="79:17" pos:end="79:17">*</operator><name pos:start="79:18" pos:end="79:18">p</name><operator pos:start="79:19" pos:end="79:20">++</operator> <operator pos:start="79:22" pos:end="79:22">*</operator> <literal type="number" pos:start="79:24" pos:end="79:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:25"><expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:13">b</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <operator pos:start="81:17" pos:end="81:17">*</operator><name pos:start="81:18" pos:end="81:18">p</name><operator pos:start="81:19" pos:end="81:20">++</operator> <operator pos:start="81:22" pos:end="81:22">*</operator> <literal type="number" pos:start="81:24" pos:end="81:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:21">palette32</name><index pos:start="83:22" pos:end="83:24">[<expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">i</name></expr>]</index></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <operator pos:start="83:28" pos:end="83:28">(</operator><name pos:start="83:29" pos:end="83:29">r</name> <operator pos:start="83:31" pos:end="83:32">&lt;&lt;</operator> <literal type="number" pos:start="83:34" pos:end="83:35">16</literal><operator pos:start="83:36" pos:end="83:36">)</operator> <operator pos:start="83:38" pos:end="83:38">|</operator> <operator pos:start="83:40" pos:end="83:40">(</operator><name pos:start="83:41" pos:end="83:41">g</name> <operator pos:start="83:43" pos:end="83:44">&lt;&lt;</operator> <literal type="number" pos:start="83:46" pos:end="83:46">8</literal><operator pos:start="83:47" pos:end="83:47">)</operator> <operator pos:start="83:49" pos:end="83:49">|</operator> <operator pos:start="83:51" pos:end="83:51">(</operator><name pos:start="83:52" pos:end="83:52">b</name><operator pos:start="83:53" pos:end="83:53">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:15">size</name></name> <operator pos:start="87:17" pos:end="87:18">-=</operator> <operator pos:start="87:20" pos:end="87:20">(</operator><literal type="number" pos:start="87:21" pos:end="87:23">256</literal> <operator pos:start="87:25" pos:end="87:25">*</operator> <literal type="number" pos:start="87:27" pos:end="87:29">3</literal> <operator pos:start="87:29" pos:end="87:29">+</operator> <literal type="number" pos:start="87:31" pos:end="87:31">2</literal><operator pos:start="87:32" pos:end="87:32">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="243:5"><if pos:start="91:5" pos:end="243:5">if <condition pos:start="91:8" pos:end="91:21">(<expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">size</name></name> <operator pos:start="91:17" pos:end="91:18">&gt;=</operator> <literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>)</condition> <block pos:start="91:23" pos:end="243:5">{<block_content pos:start="95:9" pos:end="241:9">

        <comment type="block" pos:start="93:9" pos:end="93:50">/* originally UnpackFrame in VAG's code */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:15"><expr pos:start="95:9" pos:end="95:14"><name pos:start="95:9" pos:end="95:10">pb</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <name pos:start="95:14" pos:end="95:14">p</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:12">meth</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">*</operator><name pos:start="97:17" pos:end="97:18">pb</name><operator pos:start="97:19" pos:end="97:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="107:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="99:24">(<expr pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:16">meth</name> <operator pos:start="99:18" pos:end="99:18">&amp;</operator> <literal type="number" pos:start="99:20" pos:end="99:23">0x80</literal></expr>)</condition> <block pos:start="99:26" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:34">

            <expr_stmt pos:start="101:13" pos:end="101:44"><expr pos:start="101:13" pos:end="101:43"><call pos:start="101:13" pos:end="101:43"><name pos:start="101:13" pos:end="101:21">lz_unpack</name><argument_list pos:start="101:22" pos:end="101:43">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">pb</name></expr></argument>, <argument pos:start="101:27" pos:end="101:42"><expr pos:start="101:27" pos:end="101:42"><name pos:start="101:27" pos:end="101:42"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:42">unpack_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:25"><expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:16">meth</name> <operator pos:start="103:18" pos:end="103:19">&amp;=</operator> <literal type="number" pos:start="103:21" pos:end="103:24">0x7F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:14">pb</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:33"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:33">unpack_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:73"><expr pos:start="111:9" pos:end="111:72"><name pos:start="111:9" pos:end="111:10">dp</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <operator pos:start="111:14" pos:end="111:14">&amp;</operator><name pos:start="111:15" pos:end="111:72"><name pos:start="111:15" pos:end="111:15">s</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:22">frame</name><operator pos:start="111:23" pos:end="111:23">.</operator><name pos:start="111:24" pos:end="111:27">data</name><index pos:start="111:28" pos:end="111:30">[<expr pos:start="111:29" pos:end="111:29"><literal type="number" pos:start="111:29" pos:end="111:29">0</literal></expr>]</index><index pos:start="111:31" pos:end="111:72">[<expr pos:start="111:32" pos:end="111:71"><name pos:start="111:32" pos:end="111:38">frame_y</name> <operator pos:start="111:40" pos:end="111:40">*</operator> <name pos:start="111:42" pos:end="111:61"><name pos:start="111:42" pos:end="111:42">s</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:49">frame</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:58">linesize</name><index pos:start="111:59" pos:end="111:61">[<expr pos:start="111:60" pos:end="111:60"><literal type="number" pos:start="111:60" pos:end="111:60">0</literal></expr>]</index></name> <operator pos:start="111:63" pos:end="111:63">+</operator> <name pos:start="111:65" pos:end="111:71">frame_x</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:83"><expr pos:start="113:9" pos:end="113:82"><name pos:start="113:9" pos:end="113:10">pp</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <operator pos:start="113:14" pos:end="113:14">&amp;</operator><name pos:start="113:15" pos:end="113:82"><name pos:start="113:15" pos:end="113:15">s</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:27">prev_frame</name><operator pos:start="113:28" pos:end="113:28">.</operator><name pos:start="113:29" pos:end="113:32">data</name><index pos:start="113:33" pos:end="113:35">[<expr pos:start="113:34" pos:end="113:34"><literal type="number" pos:start="113:34" pos:end="113:34">0</literal></expr>]</index><index pos:start="113:36" pos:end="113:82">[<expr pos:start="113:37" pos:end="113:81"><name pos:start="113:37" pos:end="113:43">frame_y</name> <operator pos:start="113:45" pos:end="113:45">*</operator> <name pos:start="113:47" pos:end="113:71"><name pos:start="113:47" pos:end="113:47">s</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:59">prev_frame</name><operator pos:start="113:60" pos:end="113:60">.</operator><name pos:start="113:61" pos:end="113:68">linesize</name><index pos:start="113:69" pos:end="113:71">[<expr pos:start="113:70" pos:end="113:70"><literal type="number" pos:start="113:70" pos:end="113:70">0</literal></expr>]</index></name> <operator pos:start="113:73" pos:end="113:73">+</operator> <name pos:start="113:75" pos:end="113:81">frame_x</name></expr>]</index></name></expr>;</expr_stmt>

        <switch pos:start="115:9" pos:end="241:9">switch <condition pos:start="115:16" pos:end="115:21">(<expr pos:start="115:17" pos:end="115:20"><name pos:start="115:17" pos:end="115:20">meth</name></expr>)</condition> <block pos:start="115:23" pos:end="241:9">{<block_content pos:start="117:9" pos:end="239:18">

        <case pos:start="117:9" pos:end="117:15">case <expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">1</literal></expr>:</case>

            <for pos:start="119:13" pos:end="163:13">for <control pos:start="119:17" pos:end="119:46">(<init pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:22"><name pos:start="119:18" pos:end="119:18">i</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</init> <condition pos:start="119:25" pos:end="119:41"><expr pos:start="119:25" pos:end="119:40"><name pos:start="119:25" pos:end="119:25">i</name> <operator pos:start="119:27" pos:end="119:27">&lt;</operator> <name pos:start="119:29" pos:end="119:40">frame_height</name></expr>;</condition> <incr pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:43">i</name><operator pos:start="119:44" pos:end="119:45">++</operator></expr></incr>)</control> <block pos:start="119:48" pos:end="163:13">{<block_content pos:start="121:17" pos:end="161:48">

                <expr_stmt pos:start="121:17" pos:end="121:24"><expr pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:19">ofs</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <literal type="number" pos:start="121:23" pos:end="121:23">0</literal></expr>;</expr_stmt>

                <do pos:start="123:17" pos:end="147:44">do <block pos:start="123:20" pos:end="147:17">{<block_content pos:start="125:21" pos:end="145:21">

                    <expr_stmt pos:start="125:21" pos:end="125:32"><expr pos:start="125:21" pos:end="125:31"><name pos:start="125:21" pos:end="125:23">len</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <operator pos:start="125:27" pos:end="125:27">*</operator><name pos:start="125:28" pos:end="125:29">pb</name><operator pos:start="125:30" pos:end="125:31">++</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="127:21" pos:end="145:21"><if pos:start="127:21" pos:end="137:21">if <condition pos:start="127:24" pos:end="127:35">(<expr pos:start="127:25" pos:end="127:34"><name pos:start="127:25" pos:end="127:27">len</name> <operator pos:start="127:29" pos:end="127:29">&amp;</operator> <literal type="number" pos:start="127:31" pos:end="127:34">0x80</literal></expr>)</condition> <block pos:start="127:37" pos:end="137:21">{<block_content pos:start="129:25" pos:end="135:35">

                        <expr_stmt pos:start="129:25" pos:end="129:47"><expr pos:start="129:25" pos:end="129:46"><name pos:start="129:25" pos:end="129:27">len</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <operator pos:start="129:31" pos:end="129:31">(</operator><name pos:start="129:32" pos:end="129:34">len</name> <operator pos:start="129:36" pos:end="129:36">&amp;</operator> <literal type="number" pos:start="129:38" pos:end="129:41">0x7F</literal><operator pos:start="129:42" pos:end="129:42">)</operator> <operator pos:start="129:44" pos:end="129:44">+</operator> <literal type="number" pos:start="129:46" pos:end="129:46">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:50"><expr pos:start="131:25" pos:end="131:49"><call pos:start="131:25" pos:end="131:49"><name pos:start="131:25" pos:end="131:30">memcpy</name><argument_list pos:start="131:31" pos:end="131:49">(<argument pos:start="131:32" pos:end="131:39"><expr pos:start="131:32" pos:end="131:39"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:39"><name pos:start="131:33" pos:end="131:34">dp</name><index pos:start="131:35" pos:end="131:39">[<expr pos:start="131:36" pos:end="131:38"><name pos:start="131:36" pos:end="131:38">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="131:42" pos:end="131:43"><expr pos:start="131:42" pos:end="131:43"><name pos:start="131:42" pos:end="131:43">pb</name></expr></argument>, <argument pos:start="131:46" pos:end="131:48"><expr pos:start="131:46" pos:end="131:48"><name pos:start="131:46" pos:end="131:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:34"><expr pos:start="133:25" pos:end="133:33"><name pos:start="133:25" pos:end="133:26">pb</name> <operator pos:start="133:28" pos:end="133:29">+=</operator> <name pos:start="133:31" pos:end="133:33">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:35"><expr pos:start="135:25" pos:end="135:34"><name pos:start="135:25" pos:end="135:27">ofs</name> <operator pos:start="135:29" pos:end="135:30">+=</operator> <name pos:start="135:32" pos:end="135:34">len</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="137:23" pos:end="145:21">else <block pos:start="137:28" pos:end="145:21">{<block_content pos:start="141:25" pos:end="143:39">

                        <comment type="block" pos:start="139:25" pos:end="139:51">/* interframe pixel copy */</comment>

                        <expr_stmt pos:start="141:25" pos:end="141:60"><expr pos:start="141:25" pos:end="141:59"><call pos:start="141:25" pos:end="141:59"><name pos:start="141:25" pos:end="141:30">memcpy</name><argument_list pos:start="141:31" pos:end="141:59">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><operator pos:start="141:32" pos:end="141:32">&amp;</operator><name pos:start="141:33" pos:end="141:39"><name pos:start="141:33" pos:end="141:34">dp</name><index pos:start="141:35" pos:end="141:39">[<expr pos:start="141:36" pos:end="141:38"><name pos:start="141:36" pos:end="141:38">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="141:42" pos:end="141:49"><expr pos:start="141:42" pos:end="141:49"><operator pos:start="141:42" pos:end="141:42">&amp;</operator><name pos:start="141:43" pos:end="141:49"><name pos:start="141:43" pos:end="141:44">pp</name><index pos:start="141:45" pos:end="141:49">[<expr pos:start="141:46" pos:end="141:48"><name pos:start="141:46" pos:end="141:48">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="141:52" pos:end="141:58"><expr pos:start="141:52" pos:end="141:58"><name pos:start="141:52" pos:end="141:54">len</name> <operator pos:start="141:56" pos:end="141:56">+</operator> <literal type="number" pos:start="141:58" pos:end="141:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:39"><expr pos:start="143:25" pos:end="143:38"><name pos:start="143:25" pos:end="143:27">ofs</name> <operator pos:start="143:29" pos:end="143:30">+=</operator> <name pos:start="143:32" pos:end="143:34">len</name> <operator pos:start="143:36" pos:end="143:36">+</operator> <literal type="number" pos:start="143:38" pos:end="143:38">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block> while <condition pos:start="147:25" pos:end="147:43">(<expr pos:start="147:26" pos:end="147:42"><name pos:start="147:26" pos:end="147:28">ofs</name> <operator pos:start="147:30" pos:end="147:30">&lt;</operator> <name pos:start="147:32" pos:end="147:42">frame_width</name></expr>)</condition>;</do>

                <if_stmt pos:start="149:17" pos:end="157:17"><if pos:start="149:17" pos:end="157:17">if <condition pos:start="149:20" pos:end="149:38">(<expr pos:start="149:21" pos:end="149:37"><name pos:start="149:21" pos:end="149:23">ofs</name> <operator pos:start="149:25" pos:end="149:25">&gt;</operator> <name pos:start="149:27" pos:end="149:37">frame_width</name></expr>)</condition> <block pos:start="149:40" pos:end="157:17">{<block_content pos:start="151:21" pos:end="155:26">

                    <expr_stmt pos:start="151:21" pos:end="153:42"><expr pos:start="151:21" pos:end="153:41"><call pos:start="151:21" pos:end="153:41"><name pos:start="151:21" pos:end="151:26">av_log</name><argument_list pos:start="151:27" pos:end="153:41">(<argument pos:start="151:28" pos:end="151:35"><expr pos:start="151:28" pos:end="151:35"><name pos:start="151:28" pos:end="151:35"><name pos:start="151:28" pos:end="151:28">s</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:35">avctx</name></name></expr></argument>, <argument pos:start="151:38" pos:end="151:49"><expr pos:start="151:38" pos:end="151:49"><name pos:start="151:38" pos:end="151:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:52" pos:end="151:90"><expr pos:start="151:52" pos:end="151:90"><literal type="string" pos:start="151:52" pos:end="151:90">"VMD video: offset &gt; width (%d &gt; %d)\n"</literal></expr></argument>,

                        <argument pos:start="153:25" pos:end="153:27"><expr pos:start="153:25" pos:end="153:27"><name pos:start="153:25" pos:end="153:27">ofs</name></expr></argument>, <argument pos:start="153:30" pos:end="153:40"><expr pos:start="153:30" pos:end="153:40"><name pos:start="153:30" pos:end="153:40">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="155:21" pos:end="155:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:43"><expr pos:start="159:17" pos:end="159:42"><name pos:start="159:17" pos:end="159:18">dp</name> <operator pos:start="159:20" pos:end="159:21">+=</operator> <name pos:start="159:23" pos:end="159:42"><name pos:start="159:23" pos:end="159:23">s</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:30">frame</name><operator pos:start="159:31" pos:end="159:31">.</operator><name pos:start="159:32" pos:end="159:39">linesize</name><index pos:start="159:40" pos:end="159:42">[<expr pos:start="159:41" pos:end="159:41"><literal type="number" pos:start="159:41" pos:end="159:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:48"><expr pos:start="161:17" pos:end="161:47"><name pos:start="161:17" pos:end="161:18">pp</name> <operator pos:start="161:20" pos:end="161:21">+=</operator> <name pos:start="161:23" pos:end="161:47"><name pos:start="161:23" pos:end="161:23">s</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:35">prev_frame</name><operator pos:start="161:36" pos:end="161:36">.</operator><name pos:start="161:37" pos:end="161:44">linesize</name><index pos:start="161:45" pos:end="161:47">[<expr pos:start="161:46" pos:end="161:46"><literal type="number" pos:start="161:46" pos:end="161:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="165:13" pos:end="165:18">break;</break>



        <case pos:start="169:9" pos:end="169:15">case <expr pos:start="169:14" pos:end="169:14"><literal type="number" pos:start="169:14" pos:end="169:14">2</literal></expr>:</case>

            <for pos:start="171:13" pos:end="181:13">for <control pos:start="171:17" pos:end="171:46">(<init pos:start="171:18" pos:end="171:23"><expr pos:start="171:18" pos:end="171:22"><name pos:start="171:18" pos:end="171:18">i</name> <operator pos:start="171:20" pos:end="171:20">=</operator> <literal type="number" pos:start="171:22" pos:end="171:22">0</literal></expr>;</init> <condition pos:start="171:25" pos:end="171:41"><expr pos:start="171:25" pos:end="171:40"><name pos:start="171:25" pos:end="171:25">i</name> <operator pos:start="171:27" pos:end="171:27">&lt;</operator> <name pos:start="171:29" pos:end="171:40">frame_height</name></expr>;</condition> <incr pos:start="171:43" pos:end="171:45"><expr pos:start="171:43" pos:end="171:45"><name pos:start="171:43" pos:end="171:43">i</name><operator pos:start="171:44" pos:end="171:45">++</operator></expr></incr>)</control> <block pos:start="171:48" pos:end="181:13">{<block_content pos:start="173:17" pos:end="179:48">

                <expr_stmt pos:start="173:17" pos:end="173:44"><expr pos:start="173:17" pos:end="173:43"><call pos:start="173:17" pos:end="173:43"><name pos:start="173:17" pos:end="173:22">memcpy</name><argument_list pos:start="173:23" pos:end="173:43">(<argument pos:start="173:24" pos:end="173:25"><expr pos:start="173:24" pos:end="173:25"><name pos:start="173:24" pos:end="173:25">dp</name></expr></argument>, <argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">pb</name></expr></argument>, <argument pos:start="173:32" pos:end="173:42"><expr pos:start="173:32" pos:end="173:42"><name pos:start="173:32" pos:end="173:42">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:34"><expr pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:18">pb</name> <operator pos:start="175:20" pos:end="175:21">+=</operator> <name pos:start="175:23" pos:end="175:33">frame_width</name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:43"><expr pos:start="177:17" pos:end="177:42"><name pos:start="177:17" pos:end="177:18">dp</name> <operator pos:start="177:20" pos:end="177:21">+=</operator> <name pos:start="177:23" pos:end="177:42"><name pos:start="177:23" pos:end="177:23">s</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:30">frame</name><operator pos:start="177:31" pos:end="177:31">.</operator><name pos:start="177:32" pos:end="177:39">linesize</name><index pos:start="177:40" pos:end="177:42">[<expr pos:start="177:41" pos:end="177:41"><literal type="number" pos:start="177:41" pos:end="177:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:48"><expr pos:start="179:17" pos:end="179:47"><name pos:start="179:17" pos:end="179:18">pp</name> <operator pos:start="179:20" pos:end="179:21">+=</operator> <name pos:start="179:23" pos:end="179:47"><name pos:start="179:23" pos:end="179:23">s</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:35">prev_frame</name><operator pos:start="179:36" pos:end="179:36">.</operator><name pos:start="179:37" pos:end="179:44">linesize</name><index pos:start="179:45" pos:end="179:47">[<expr pos:start="179:46" pos:end="179:46"><literal type="number" pos:start="179:46" pos:end="179:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="183:13" pos:end="183:18">break;</break>



        <case pos:start="187:9" pos:end="187:15">case <expr pos:start="187:14" pos:end="187:14"><literal type="number" pos:start="187:14" pos:end="187:14">3</literal></expr>:</case>

            <for pos:start="189:13" pos:end="237:13">for <control pos:start="189:17" pos:end="189:46">(<init pos:start="189:18" pos:end="189:23"><expr pos:start="189:18" pos:end="189:22"><name pos:start="189:18" pos:end="189:18">i</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <literal type="number" pos:start="189:22" pos:end="189:22">0</literal></expr>;</init> <condition pos:start="189:25" pos:end="189:41"><expr pos:start="189:25" pos:end="189:40"><name pos:start="189:25" pos:end="189:25">i</name> <operator pos:start="189:27" pos:end="189:27">&lt;</operator> <name pos:start="189:29" pos:end="189:40">frame_height</name></expr>;</condition> <incr pos:start="189:43" pos:end="189:45"><expr pos:start="189:43" pos:end="189:45"><name pos:start="189:43" pos:end="189:43">i</name><operator pos:start="189:44" pos:end="189:45">++</operator></expr></incr>)</control> <block pos:start="189:48" pos:end="237:13">{<block_content pos:start="191:17" pos:end="235:48">

                <expr_stmt pos:start="191:17" pos:end="191:24"><expr pos:start="191:17" pos:end="191:23"><name pos:start="191:17" pos:end="191:19">ofs</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <literal type="number" pos:start="191:23" pos:end="191:23">0</literal></expr>;</expr_stmt>

                <do pos:start="193:17" pos:end="223:44">do <block pos:start="193:20" pos:end="223:17">{<block_content pos:start="195:21" pos:end="221:21">

                    <expr_stmt pos:start="195:21" pos:end="195:32"><expr pos:start="195:21" pos:end="195:31"><name pos:start="195:21" pos:end="195:23">len</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <operator pos:start="195:27" pos:end="195:27">*</operator><name pos:start="195:28" pos:end="195:29">pb</name><operator pos:start="195:30" pos:end="195:31">++</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="197:21" pos:end="221:21"><if pos:start="197:21" pos:end="213:21">if <condition pos:start="197:24" pos:end="197:35">(<expr pos:start="197:25" pos:end="197:34"><name pos:start="197:25" pos:end="197:27">len</name> <operator pos:start="197:29" pos:end="197:29">&amp;</operator> <literal type="number" pos:start="197:31" pos:end="197:34">0x80</literal></expr>)</condition> <block pos:start="197:37" pos:end="213:21">{<block_content pos:start="199:25" pos:end="211:35">

                        <expr_stmt pos:start="199:25" pos:end="199:47"><expr pos:start="199:25" pos:end="199:46"><name pos:start="199:25" pos:end="199:27">len</name> <operator pos:start="199:29" pos:end="199:29">=</operator> <operator pos:start="199:31" pos:end="199:31">(</operator><name pos:start="199:32" pos:end="199:34">len</name> <operator pos:start="199:36" pos:end="199:36">&amp;</operator> <literal type="number" pos:start="199:38" pos:end="199:41">0x7F</literal><operator pos:start="199:42" pos:end="199:42">)</operator> <operator pos:start="199:44" pos:end="199:44">+</operator> <literal type="number" pos:start="199:46" pos:end="199:46">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="201:25" pos:end="207:54"><if pos:start="201:25" pos:end="203:64">if <condition pos:start="201:28" pos:end="201:42">(<expr pos:start="201:29" pos:end="201:41"><operator pos:start="201:29" pos:end="201:29">*</operator><name pos:start="201:30" pos:end="201:31">pb</name><operator pos:start="201:32" pos:end="201:33">++</operator> <operator pos:start="201:35" pos:end="201:36">==</operator> <literal type="number" pos:start="201:38" pos:end="201:41">0xFF</literal></expr>)</condition><block type="pseudo" pos:start="203:29" pos:end="203:64"><block_content pos:start="203:29" pos:end="203:64">

                            <expr_stmt pos:start="203:29" pos:end="203:64"><expr pos:start="203:29" pos:end="203:63"><name pos:start="203:29" pos:end="203:31">len</name> <operator pos:start="203:33" pos:end="203:33">=</operator> <call pos:start="203:35" pos:end="203:63"><name pos:start="203:35" pos:end="203:44">rle_unpack</name><argument_list pos:start="203:45" pos:end="203:63">(<argument pos:start="203:46" pos:end="203:47"><expr pos:start="203:46" pos:end="203:47"><name pos:start="203:46" pos:end="203:47">pb</name></expr></argument>, <argument pos:start="203:50" pos:end="203:57"><expr pos:start="203:50" pos:end="203:57"><operator pos:start="203:50" pos:end="203:50">&amp;</operator><name pos:start="203:51" pos:end="203:57"><name pos:start="203:51" pos:end="203:52">dp</name><index pos:start="203:53" pos:end="203:57">[<expr pos:start="203:54" pos:end="203:56"><name pos:start="203:54" pos:end="203:56">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="203:60" pos:end="203:62"><expr pos:start="203:60" pos:end="203:62"><name pos:start="203:60" pos:end="203:62">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="205:25" pos:end="207:54">else<block type="pseudo" pos:start="207:29" pos:end="207:54"><block_content pos:start="207:29" pos:end="207:54">

                            <expr_stmt pos:start="207:29" pos:end="207:54"><expr pos:start="207:29" pos:end="207:53"><call pos:start="207:29" pos:end="207:53"><name pos:start="207:29" pos:end="207:34">memcpy</name><argument_list pos:start="207:35" pos:end="207:53">(<argument pos:start="207:36" pos:end="207:43"><expr pos:start="207:36" pos:end="207:43"><operator pos:start="207:36" pos:end="207:36">&amp;</operator><name pos:start="207:37" pos:end="207:43"><name pos:start="207:37" pos:end="207:38">dp</name><index pos:start="207:39" pos:end="207:43">[<expr pos:start="207:40" pos:end="207:42"><name pos:start="207:40" pos:end="207:42">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="207:46" pos:end="207:47"><expr pos:start="207:46" pos:end="207:47"><name pos:start="207:46" pos:end="207:47">pb</name></expr></argument>, <argument pos:start="207:50" pos:end="207:52"><expr pos:start="207:50" pos:end="207:52"><name pos:start="207:50" pos:end="207:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:34"><expr pos:start="209:25" pos:end="209:33"><name pos:start="209:25" pos:end="209:26">pb</name> <operator pos:start="209:28" pos:end="209:29">+=</operator> <name pos:start="209:31" pos:end="209:33">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:35"><expr pos:start="211:25" pos:end="211:34"><name pos:start="211:25" pos:end="211:27">ofs</name> <operator pos:start="211:29" pos:end="211:30">+=</operator> <name pos:start="211:32" pos:end="211:34">len</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="213:23" pos:end="221:21">else <block pos:start="213:28" pos:end="221:21">{<block_content pos:start="217:25" pos:end="219:39">

                        <comment type="block" pos:start="215:25" pos:end="215:51">/* interframe pixel copy */</comment>

                        <expr_stmt pos:start="217:25" pos:end="217:60"><expr pos:start="217:25" pos:end="217:59"><call pos:start="217:25" pos:end="217:59"><name pos:start="217:25" pos:end="217:30">memcpy</name><argument_list pos:start="217:31" pos:end="217:59">(<argument pos:start="217:32" pos:end="217:39"><expr pos:start="217:32" pos:end="217:39"><operator pos:start="217:32" pos:end="217:32">&amp;</operator><name pos:start="217:33" pos:end="217:39"><name pos:start="217:33" pos:end="217:34">dp</name><index pos:start="217:35" pos:end="217:39">[<expr pos:start="217:36" pos:end="217:38"><name pos:start="217:36" pos:end="217:38">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="217:42" pos:end="217:49"><expr pos:start="217:42" pos:end="217:49"><operator pos:start="217:42" pos:end="217:42">&amp;</operator><name pos:start="217:43" pos:end="217:49"><name pos:start="217:43" pos:end="217:44">pp</name><index pos:start="217:45" pos:end="217:49">[<expr pos:start="217:46" pos:end="217:48"><name pos:start="217:46" pos:end="217:48">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="217:52" pos:end="217:58"><expr pos:start="217:52" pos:end="217:58"><name pos:start="217:52" pos:end="217:54">len</name> <operator pos:start="217:56" pos:end="217:56">+</operator> <literal type="number" pos:start="217:58" pos:end="217:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="219:39"><expr pos:start="219:25" pos:end="219:38"><name pos:start="219:25" pos:end="219:27">ofs</name> <operator pos:start="219:29" pos:end="219:30">+=</operator> <name pos:start="219:32" pos:end="219:34">len</name> <operator pos:start="219:36" pos:end="219:36">+</operator> <literal type="number" pos:start="219:38" pos:end="219:38">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block> while <condition pos:start="223:25" pos:end="223:43">(<expr pos:start="223:26" pos:end="223:42"><name pos:start="223:26" pos:end="223:28">ofs</name> <operator pos:start="223:30" pos:end="223:30">&lt;</operator> <name pos:start="223:32" pos:end="223:42">frame_width</name></expr>)</condition>;</do>

                <if_stmt pos:start="225:17" pos:end="231:17"><if pos:start="225:17" pos:end="231:17">if <condition pos:start="225:20" pos:end="225:38">(<expr pos:start="225:21" pos:end="225:37"><name pos:start="225:21" pos:end="225:23">ofs</name> <operator pos:start="225:25" pos:end="225:25">&gt;</operator> <name pos:start="225:27" pos:end="225:37">frame_width</name></expr>)</condition> <block pos:start="225:40" pos:end="231:17">{<block_content pos:start="227:21" pos:end="229:42">

                    <expr_stmt pos:start="227:21" pos:end="229:42"><expr pos:start="227:21" pos:end="229:41"><call pos:start="227:21" pos:end="229:41"><name pos:start="227:21" pos:end="227:26">av_log</name><argument_list pos:start="227:27" pos:end="229:41">(<argument pos:start="227:28" pos:end="227:35"><expr pos:start="227:28" pos:end="227:35"><name pos:start="227:28" pos:end="227:35"><name pos:start="227:28" pos:end="227:28">s</name><operator pos:start="227:29" pos:end="227:30">-&gt;</operator><name pos:start="227:31" pos:end="227:35">avctx</name></name></expr></argument>, <argument pos:start="227:38" pos:end="227:49"><expr pos:start="227:38" pos:end="227:49"><name pos:start="227:38" pos:end="227:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="227:52" pos:end="227:90"><expr pos:start="227:52" pos:end="227:90"><literal type="string" pos:start="227:52" pos:end="227:90">"VMD video: offset &gt; width (%d &gt; %d)\n"</literal></expr></argument>,

                        <argument pos:start="229:25" pos:end="229:27"><expr pos:start="229:25" pos:end="229:27"><name pos:start="229:25" pos:end="229:27">ofs</name></expr></argument>, <argument pos:start="229:30" pos:end="229:40"><expr pos:start="229:30" pos:end="229:40"><name pos:start="229:30" pos:end="229:40">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:43"><expr pos:start="233:17" pos:end="233:42"><name pos:start="233:17" pos:end="233:18">dp</name> <operator pos:start="233:20" pos:end="233:21">+=</operator> <name pos:start="233:23" pos:end="233:42"><name pos:start="233:23" pos:end="233:23">s</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:30">frame</name><operator pos:start="233:31" pos:end="233:31">.</operator><name pos:start="233:32" pos:end="233:39">linesize</name><index pos:start="233:40" pos:end="233:42">[<expr pos:start="233:41" pos:end="233:41"><literal type="number" pos:start="233:41" pos:end="233:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:48"><expr pos:start="235:17" pos:end="235:47"><name pos:start="235:17" pos:end="235:18">pp</name> <operator pos:start="235:20" pos:end="235:21">+=</operator> <name pos:start="235:23" pos:end="235:47"><name pos:start="235:23" pos:end="235:23">s</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:35">prev_frame</name><operator pos:start="235:36" pos:end="235:36">.</operator><name pos:start="235:37" pos:end="235:44">linesize</name><index pos:start="235:45" pos:end="235:47">[<expr pos:start="235:46" pos:end="235:46"><literal type="number" pos:start="235:46" pos:end="235:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="239:13" pos:end="239:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
