<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26578.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">xlnx_zynqmp_init</name><parameter_list pos:start="1:29" pos:end="1:41">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:37"><name pos:start="1:30" pos:end="1:35">Object</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">XlnxZynqMPState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:36">XLNX_ZYNQMP</name><argument_list pos:start="5:37" pos:end="5:41">(<argument pos:start="5:38" pos:end="5:40"><expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="21:5">for <control pos:start="11:9" pos:end="11:50">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:45"><expr pos:start="11:17" pos:end="11:44"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:44">XLNX_ZYNQMP_NUM_APU_CPUS</name></expr>;</condition> <incr pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:47">i</name><operator pos:start="11:48" pos:end="11:49">++</operator></expr></incr>)</control> <block pos:start="11:52" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:48">

        <expr_stmt pos:start="13:9" pos:end="15:54"><expr pos:start="13:9" pos:end="15:53"><call pos:start="13:9" pos:end="15:53"><name pos:start="13:9" pos:end="13:25">object_initialize</name><argument_list pos:start="13:26" pos:end="15:53">(<argument pos:start="13:27" pos:end="13:40"><expr pos:start="13:27" pos:end="13:40"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:37">apu_cpu</name><index pos:start="13:38" pos:end="13:40">[<expr pos:start="13:39" pos:end="13:39"><name pos:start="13:39" pos:end="13:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="13:43" pos:end="13:63"><expr pos:start="13:43" pos:end="13:63"><sizeof pos:start="13:43" pos:end="13:63">sizeof<argument_list pos:start="13:49" pos:end="13:63">(<argument pos:start="13:50" pos:end="13:62"><expr pos:start="13:50" pos:end="13:62"><name pos:start="13:50" pos:end="13:62"><name pos:start="13:50" pos:end="13:50">s</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:59">apu_cpu</name><index pos:start="13:60" pos:end="13:62">[<expr pos:start="13:61" pos:end="13:61"><name pos:start="13:61" pos:end="13:61">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:52"><expr pos:start="15:27" pos:end="15:52"><literal type="string" pos:start="15:27" pos:end="15:39">"cortex-a53-"</literal> <name pos:start="15:41" pos:end="15:52">TYPE_ARM_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="19:48"><expr pos:start="17:9" pos:end="19:47"><call pos:start="17:9" pos:end="19:47"><name pos:start="17:9" pos:end="17:33">object_property_add_child</name><argument_list pos:start="17:34" pos:end="19:47">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">obj</name></expr></argument>, <argument pos:start="17:40" pos:end="17:51"><expr pos:start="17:40" pos:end="17:51"><literal type="string" pos:start="17:40" pos:end="17:51">"apu-cpu[*]"</literal></expr></argument>, <argument pos:start="17:54" pos:end="17:75"><expr pos:start="17:54" pos:end="17:75"><call pos:start="17:54" pos:end="17:75"><name pos:start="17:54" pos:end="17:59">OBJECT</name><argument_list pos:start="17:60" pos:end="17:75">(<argument pos:start="17:61" pos:end="17:74"><expr pos:start="17:61" pos:end="17:74"><operator pos:start="17:61" pos:end="17:61">&amp;</operator><name pos:start="17:62" pos:end="17:74"><name pos:start="17:62" pos:end="17:62">s</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:71">apu_cpu</name><index pos:start="17:72" pos:end="17:74">[<expr pos:start="17:73" pos:end="17:73"><name pos:start="17:73" pos:end="17:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="19:35" pos:end="19:46"><expr pos:start="19:35" pos:end="19:46"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="25:5" pos:end="35:5">for <control pos:start="25:9" pos:end="25:50">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:45"><expr pos:start="25:17" pos:end="25:44"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:44">XLNX_ZYNQMP_NUM_RPU_CPUS</name></expr>;</condition> <incr pos:start="25:47" pos:end="25:49"><expr pos:start="25:47" pos:end="25:49"><name pos:start="25:47" pos:end="25:47">i</name><operator pos:start="25:48" pos:end="25:49">++</operator></expr></incr>)</control> <block pos:start="25:52" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:48">

        <expr_stmt pos:start="27:9" pos:end="29:53"><expr pos:start="27:9" pos:end="29:52"><call pos:start="27:9" pos:end="29:52"><name pos:start="27:9" pos:end="27:25">object_initialize</name><argument_list pos:start="27:26" pos:end="29:52">(<argument pos:start="27:27" pos:end="27:40"><expr pos:start="27:27" pos:end="27:40"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:40"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:37">rpu_cpu</name><index pos:start="27:38" pos:end="27:40">[<expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:43" pos:end="27:63"><expr pos:start="27:43" pos:end="27:63"><sizeof pos:start="27:43" pos:end="27:63">sizeof<argument_list pos:start="27:49" pos:end="27:63">(<argument pos:start="27:50" pos:end="27:62"><expr pos:start="27:50" pos:end="27:62"><name pos:start="27:50" pos:end="27:62"><name pos:start="27:50" pos:end="27:50">s</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:59">rpu_cpu</name><index pos:start="27:60" pos:end="27:62">[<expr pos:start="27:61" pos:end="27:61"><name pos:start="27:61" pos:end="27:61">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:51"><expr pos:start="29:27" pos:end="29:51"><literal type="string" pos:start="29:27" pos:end="29:38">"cortex-r5-"</literal> <name pos:start="29:40" pos:end="29:51">TYPE_ARM_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:48"><expr pos:start="31:9" pos:end="33:47"><call pos:start="31:9" pos:end="33:47"><name pos:start="31:9" pos:end="31:33">object_property_add_child</name><argument_list pos:start="31:34" pos:end="33:47">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">obj</name></expr></argument>, <argument pos:start="31:40" pos:end="31:51"><expr pos:start="31:40" pos:end="31:51"><literal type="string" pos:start="31:40" pos:end="31:51">"rpu-cpu[*]"</literal></expr></argument>, <argument pos:start="31:54" pos:end="31:75"><expr pos:start="31:54" pos:end="31:75"><call pos:start="31:54" pos:end="31:75"><name pos:start="31:54" pos:end="31:59">OBJECT</name><argument_list pos:start="31:60" pos:end="31:75">(<argument pos:start="31:61" pos:end="31:74"><expr pos:start="31:61" pos:end="31:74"><operator pos:start="31:61" pos:end="31:61">&amp;</operator><name pos:start="31:62" pos:end="31:74"><name pos:start="31:62" pos:end="31:62">s</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:71">rpu_cpu</name><index pos:start="31:72" pos:end="31:74">[<expr pos:start="31:73" pos:end="31:73"><name pos:start="31:73" pos:end="31:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="33:35" pos:end="33:46"><expr pos:start="33:35" pos:end="33:46"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="45:75"><expr pos:start="39:5" pos:end="45:74"><call pos:start="39:5" pos:end="45:74"><name pos:start="39:5" pos:end="39:28">object_property_add_link</name><argument_list pos:start="39:29" pos:end="45:74">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">obj</name></expr></argument>, <argument pos:start="39:35" pos:end="39:43"><expr pos:start="39:35" pos:end="39:43"><literal type="string" pos:start="39:35" pos:end="39:43">"ddr-ram"</literal></expr></argument>, <argument pos:start="39:46" pos:end="39:63"><expr pos:start="39:46" pos:end="39:63"><name pos:start="39:46" pos:end="39:63">TYPE_MEMORY_REGION</name></expr></argument>,

                             <argument pos:start="41:30" pos:end="41:51"><expr pos:start="41:30" pos:end="41:51"><operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:36">Object</name> <operator pos:start="41:38" pos:end="41:38">*</operator><operator pos:start="41:39" pos:end="41:39">*</operator><operator pos:start="41:40" pos:end="41:40">)</operator><operator pos:start="41:41" pos:end="41:41">&amp;</operator><name pos:start="41:42" pos:end="41:51"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:51">ddr_ram</name></name></expr></argument>,

                             <argument pos:start="43:30" pos:end="43:68"><expr pos:start="43:30" pos:end="43:68"><name pos:start="43:30" pos:end="43:68">qdev_prop_allow_set_link_before_realize</name></expr></argument>,

                             <argument pos:start="45:30" pos:end="45:59"><expr pos:start="45:30" pos:end="45:59"><name pos:start="45:30" pos:end="45:59">OBJ_PROP_LINK_UNREF_ON_RELEASE</name></expr></argument>, <argument pos:start="45:62" pos:end="45:73"><expr pos:start="45:62" pos:end="45:73"><operator pos:start="45:62" pos:end="45:62">&amp;</operator><name pos:start="45:63" pos:end="45:73">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><call pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:21">object_initialize</name><argument_list pos:start="49:22" pos:end="49:60">(<argument pos:start="49:23" pos:end="49:29"><expr pos:start="49:23" pos:end="49:29"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">gic</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><sizeof pos:start="49:32" pos:end="49:45">sizeof<argument_list pos:start="49:38" pos:end="49:45">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:39">s</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:44">gic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:48" pos:end="49:59"><expr pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:59">TYPE_ARM_GIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:63"><expr pos:start="51:5" pos:end="51:62"><call pos:start="51:5" pos:end="51:62"><name pos:start="51:5" pos:end="51:23">qdev_set_parent_bus</name><argument_list pos:start="51:24" pos:end="51:62">(<argument pos:start="51:25" pos:end="51:39"><expr pos:start="51:25" pos:end="51:39"><call pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:30">DEVICE</name><argument_list pos:start="51:31" pos:end="51:39">(<argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:38">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:42" pos:end="51:61"><expr pos:start="51:42" pos:end="51:61"><call pos:start="51:42" pos:end="51:61"><name pos:start="51:42" pos:end="51:59">sysbus_get_default</name><argument_list pos:start="51:60" pos:end="51:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="61:5">for <control pos:start="55:9" pos:end="55:46">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:40">XLNX_ZYNQMP_NUM_GEMS</name></expr>;</condition> <incr pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:43">i</name><operator pos:start="55:44" pos:end="55:45">++</operator></expr></incr>)</control> <block pos:start="55:48" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:70">

        <expr_stmt pos:start="57:9" pos:end="57:75"><expr pos:start="57:9" pos:end="57:74"><call pos:start="57:9" pos:end="57:74"><name pos:start="57:9" pos:end="57:25">object_initialize</name><argument_list pos:start="57:26" pos:end="57:74">(<argument pos:start="57:27" pos:end="57:36"><expr pos:start="57:27" pos:end="57:36"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:36"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:33">gem</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:39" pos:end="57:55"><expr pos:start="57:39" pos:end="57:55"><sizeof pos:start="57:39" pos:end="57:55">sizeof<argument_list pos:start="57:45" pos:end="57:55">(<argument pos:start="57:46" pos:end="57:54"><expr pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:51">gem</name><index pos:start="57:52" pos:end="57:54">[<expr pos:start="57:53" pos:end="57:53"><name pos:start="57:53" pos:end="57:53">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:58" pos:end="57:73"><expr pos:start="57:58" pos:end="57:73"><name pos:start="57:58" pos:end="57:73">TYPE_CADENCE_GEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><call pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:27">qdev_set_parent_bus</name><argument_list pos:start="59:28" pos:end="59:69">(<argument pos:start="59:29" pos:end="59:46"><expr pos:start="59:29" pos:end="59:46"><call pos:start="59:29" pos:end="59:46"><name pos:start="59:29" pos:end="59:34">DEVICE</name><argument_list pos:start="59:35" pos:end="59:46">(<argument pos:start="59:36" pos:end="59:45"><expr pos:start="59:36" pos:end="59:45"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:45"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">gem</name><index pos:start="59:43" pos:end="59:45">[<expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:49" pos:end="59:68"><expr pos:start="59:49" pos:end="59:68"><call pos:start="59:49" pos:end="59:68"><name pos:start="59:49" pos:end="59:66">sysbus_get_default</name><argument_list pos:start="59:67" pos:end="59:68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="65:5" pos:end="71:5">for <control pos:start="65:9" pos:end="65:47">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:42"><expr pos:start="65:17" pos:end="65:41"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:41">XLNX_ZYNQMP_NUM_UARTS</name></expr>;</condition> <incr pos:start="65:44" pos:end="65:46"><expr pos:start="65:44" pos:end="65:46"><name pos:start="65:44" pos:end="65:44">i</name><operator pos:start="65:45" pos:end="65:46">++</operator></expr></incr>)</control> <block pos:start="65:49" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:71">

        <expr_stmt pos:start="67:9" pos:end="67:78"><expr pos:start="67:9" pos:end="67:77"><call pos:start="67:9" pos:end="67:77"><name pos:start="67:9" pos:end="67:25">object_initialize</name><argument_list pos:start="67:26" pos:end="67:77">(<argument pos:start="67:27" pos:end="67:37"><expr pos:start="67:27" pos:end="67:37"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:37"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:34">uart</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><name pos:start="67:36" pos:end="67:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:40" pos:end="67:57"><expr pos:start="67:40" pos:end="67:57"><sizeof pos:start="67:40" pos:end="67:57">sizeof<argument_list pos:start="67:46" pos:end="67:57">(<argument pos:start="67:47" pos:end="67:56"><expr pos:start="67:47" pos:end="67:56"><name pos:start="67:47" pos:end="67:56"><name pos:start="67:47" pos:end="67:47">s</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:53">uart</name><index pos:start="67:54" pos:end="67:56">[<expr pos:start="67:55" pos:end="67:55"><name pos:start="67:55" pos:end="67:55">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:60" pos:end="67:76"><expr pos:start="67:60" pos:end="67:76"><name pos:start="67:60" pos:end="67:76">TYPE_CADENCE_UART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><call pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:27">qdev_set_parent_bus</name><argument_list pos:start="69:28" pos:end="69:70">(<argument pos:start="69:29" pos:end="69:47"><expr pos:start="69:29" pos:end="69:47"><call pos:start="69:29" pos:end="69:47"><name pos:start="69:29" pos:end="69:34">DEVICE</name><argument_list pos:start="69:35" pos:end="69:47">(<argument pos:start="69:36" pos:end="69:46"><expr pos:start="69:36" pos:end="69:46"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:46"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:43">uart</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><name pos:start="69:45" pos:end="69:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:50" pos:end="69:69"><expr pos:start="69:50" pos:end="69:69"><call pos:start="69:50" pos:end="69:69"><name pos:start="69:50" pos:end="69:67">sysbus_get_default</name><argument_list pos:start="69:68" pos:end="69:69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:67"><expr pos:start="75:5" pos:end="75:66"><call pos:start="75:5" pos:end="75:66"><name pos:start="75:5" pos:end="75:21">object_initialize</name><argument_list pos:start="75:22" pos:end="75:66">(<argument pos:start="75:23" pos:end="75:30"><expr pos:start="75:23" pos:end="75:30"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:30"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:30">sata</name></name></expr></argument>, <argument pos:start="75:33" pos:end="75:47"><expr pos:start="75:33" pos:end="75:47"><sizeof pos:start="75:33" pos:end="75:47">sizeof<argument_list pos:start="75:39" pos:end="75:47">(<argument pos:start="75:40" pos:end="75:46"><expr pos:start="75:40" pos:end="75:46"><name pos:start="75:40" pos:end="75:46"><name pos:start="75:40" pos:end="75:40">s</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:46">sata</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="75:50" pos:end="75:65"><expr pos:start="75:50" pos:end="75:65"><name pos:start="75:50" pos:end="75:65">TYPE_SYSBUS_AHCI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><call pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:23">qdev_set_parent_bus</name><argument_list pos:start="77:24" pos:end="77:63">(<argument pos:start="77:25" pos:end="77:40"><expr pos:start="77:25" pos:end="77:40"><call pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:30">DEVICE</name><argument_list pos:start="77:31" pos:end="77:40">(<argument pos:start="77:32" pos:end="77:39"><expr pos:start="77:32" pos:end="77:39"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:39"><name pos:start="77:33" pos:end="77:33">s</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:39">sata</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:43" pos:end="77:62"><expr pos:start="77:43" pos:end="77:62"><call pos:start="77:43" pos:end="77:62"><name pos:start="77:43" pos:end="77:60">sysbus_get_default</name><argument_list pos:start="77:61" pos:end="77:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="81:5" pos:end="91:5">for <control pos:start="81:9" pos:end="81:47">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:42"><expr pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:41">XLNX_ZYNQMP_NUM_SDHCI</name></expr>;</condition> <incr pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:44">i</name><operator pos:start="81:45" pos:end="81:46">++</operator></expr></incr>)</control> <block pos:start="81:49" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:50">

        <expr_stmt pos:start="83:9" pos:end="85:45"><expr pos:start="83:9" pos:end="85:44"><call pos:start="83:9" pos:end="85:44"><name pos:start="83:9" pos:end="83:25">object_initialize</name><argument_list pos:start="83:26" pos:end="85:44">(<argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">sdhci</name><index pos:start="83:36" pos:end="83:38">[<expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:41" pos:end="83:59"><expr pos:start="83:41" pos:end="83:59"><sizeof pos:start="83:41" pos:end="83:59">sizeof<argument_list pos:start="83:47" pos:end="83:59">(<argument pos:start="83:48" pos:end="83:58"><expr pos:start="83:48" pos:end="83:58"><name pos:start="83:48" pos:end="83:58"><name pos:start="83:48" pos:end="83:48">s</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:55">sdhci</name><index pos:start="83:56" pos:end="83:58">[<expr pos:start="83:57" pos:end="83:57"><name pos:start="83:57" pos:end="83:57">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                          <argument pos:start="85:27" pos:end="85:43"><expr pos:start="85:27" pos:end="85:43"><name pos:start="85:27" pos:end="85:43">TYPE_SYSBUS_SDHCI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="89:50"><expr pos:start="87:9" pos:end="89:49"><call pos:start="87:9" pos:end="89:49"><name pos:start="87:9" pos:end="87:27">qdev_set_parent_bus</name><argument_list pos:start="87:28" pos:end="89:49">(<argument pos:start="87:29" pos:end="87:48"><expr pos:start="87:29" pos:end="87:48"><call pos:start="87:29" pos:end="87:48"><name pos:start="87:29" pos:end="87:34">DEVICE</name><argument_list pos:start="87:35" pos:end="87:48">(<argument pos:start="87:36" pos:end="87:47"><expr pos:start="87:36" pos:end="87:47"><operator pos:start="87:36" pos:end="87:36">&amp;</operator><name pos:start="87:37" pos:end="87:47"><name pos:start="87:37" pos:end="87:37">s</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:44">sdhci</name><index pos:start="87:45" pos:end="87:47">[<expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:48"><expr pos:start="89:29" pos:end="89:48"><call pos:start="89:29" pos:end="89:48"><name pos:start="89:29" pos:end="89:46">sysbus_get_default</name><argument_list pos:start="89:47" pos:end="89:48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="95:5" pos:end="103:5">for <control pos:start="95:9" pos:end="95:46">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:41"><expr pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:40">XLNX_ZYNQMP_NUM_SPIS</name></expr>;</condition> <incr pos:start="95:43" pos:end="95:45"><expr pos:start="95:43" pos:end="95:45"><name pos:start="95:43" pos:end="95:43">i</name><operator pos:start="95:44" pos:end="95:45">++</operator></expr></incr>)</control> <block pos:start="95:48" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:70">

        <expr_stmt pos:start="97:9" pos:end="99:45"><expr pos:start="97:9" pos:end="99:44"><call pos:start="97:9" pos:end="99:44"><name pos:start="97:9" pos:end="97:25">object_initialize</name><argument_list pos:start="97:26" pos:end="99:44">(<argument pos:start="97:27" pos:end="97:36"><expr pos:start="97:27" pos:end="97:36"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:36"><name pos:start="97:28" pos:end="97:28">s</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:33">spi</name><index pos:start="97:34" pos:end="97:36">[<expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="97:39" pos:end="97:55"><expr pos:start="97:39" pos:end="97:55"><sizeof pos:start="97:39" pos:end="97:55">sizeof<argument_list pos:start="97:45" pos:end="97:55">(<argument pos:start="97:46" pos:end="97:54"><expr pos:start="97:46" pos:end="97:54"><name pos:start="97:46" pos:end="97:54"><name pos:start="97:46" pos:end="97:46">s</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:51">spi</name><index pos:start="97:52" pos:end="97:54">[<expr pos:start="97:53" pos:end="97:53"><name pos:start="97:53" pos:end="97:53">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                          <argument pos:start="99:27" pos:end="99:43"><expr pos:start="99:27" pos:end="99:43"><name pos:start="99:27" pos:end="99:43">TYPE_XILINX_SPIPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:70"><expr pos:start="101:9" pos:end="101:69"><call pos:start="101:9" pos:end="101:69"><name pos:start="101:9" pos:end="101:27">qdev_set_parent_bus</name><argument_list pos:start="101:28" pos:end="101:69">(<argument pos:start="101:29" pos:end="101:46"><expr pos:start="101:29" pos:end="101:46"><call pos:start="101:29" pos:end="101:46"><name pos:start="101:29" pos:end="101:34">DEVICE</name><argument_list pos:start="101:35" pos:end="101:46">(<argument pos:start="101:36" pos:end="101:45"><expr pos:start="101:36" pos:end="101:45"><operator pos:start="101:36" pos:end="101:36">&amp;</operator><name pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:37">s</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:42">spi</name><index pos:start="101:43" pos:end="101:45">[<expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:49" pos:end="101:68"><expr pos:start="101:49" pos:end="101:68"><call pos:start="101:49" pos:end="101:68"><name pos:start="101:49" pos:end="101:66">sysbus_get_default</name><argument_list pos:start="101:67" pos:end="101:68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
