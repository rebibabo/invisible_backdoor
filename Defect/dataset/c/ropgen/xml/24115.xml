<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24115.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vp56_size_changed</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">VP56Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="33:1">{<block_content pos:start="3:5" pos:end="32:13">
    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">AVCodecContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:25">avctx</name> <init pos:start="3:27" pos:end="3:36">= <expr pos:start="3:29" pos:end="3:36"><name pos:start="3:29" pos:end="3:36"><name pos:start="3:29" pos:end="3:29">s</name><operator pos:start="3:30" pos:end="3:31">-&gt;</operator><name pos:start="3:32" pos:end="3:36">avctx</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:60"><decl pos:start="4:5" pos:end="4:59"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:14">stride</name> <init pos:start="4:16" pos:end="4:59">= <expr pos:start="4:18" pos:end="4:59"><name pos:start="4:18" pos:end="4:46"><name pos:start="4:18" pos:end="4:18">s</name><operator pos:start="4:19" pos:end="4:20">-&gt;</operator><name pos:start="4:21" pos:end="4:26">frames</name><index pos:start="4:27" pos:end="4:46">[<expr pos:start="4:28" pos:end="4:45"><name pos:start="4:28" pos:end="4:45">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="4:47" pos:end="4:48">-&gt;</operator><name pos:start="4:49" pos:end="4:59"><name pos:start="4:49" pos:end="4:56">linesize</name><index pos:start="4:57" pos:end="4:59">[<expr pos:start="4:58" pos:end="4:58"><literal type="number" pos:start="4:58" pos:end="4:58">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:65"><expr pos:start="6:5" pos:end="6:64"><name pos:start="6:5" pos:end="6:21"><name pos:start="6:5" pos:end="6:5">s</name><operator pos:start="6:6" pos:end="6:7">-&gt;</operator><name pos:start="6:8" pos:end="6:18">plane_width</name><index pos:start="6:19" pos:end="6:21">[<expr pos:start="6:20" pos:end="6:20"><literal type="number" pos:start="6:20" pos:end="6:20">0</literal></expr>]</index></name>  <operator pos:start="6:24" pos:end="6:24">=</operator> <name pos:start="6:26" pos:end="6:42"><name pos:start="6:26" pos:end="6:26">s</name><operator pos:start="6:27" pos:end="6:28">-&gt;</operator><name pos:start="6:29" pos:end="6:39">plane_width</name><index pos:start="6:40" pos:end="6:42">[<expr pos:start="6:41" pos:end="6:41"><literal type="number" pos:start="6:41" pos:end="6:41">3</literal></expr>]</index></name>  <operator pos:start="6:45" pos:end="6:45">=</operator> <name pos:start="6:47" pos:end="6:64"><name pos:start="6:47" pos:end="6:51">avctx</name><operator pos:start="6:52" pos:end="6:53">-&gt;</operator><name pos:start="6:54" pos:end="6:64">coded_width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:67"><expr pos:start="7:5" pos:end="7:66"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:18">plane_width</name><index pos:start="7:19" pos:end="7:21">[<expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">1</literal></expr>]</index></name>  <operator pos:start="7:24" pos:end="7:24">=</operator> <name pos:start="7:26" pos:end="7:42"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:39">plane_width</name><index pos:start="7:40" pos:end="7:42">[<expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">2</literal></expr>]</index></name>  <operator pos:start="7:45" pos:end="7:45">=</operator> <name pos:start="7:47" pos:end="7:64"><name pos:start="7:47" pos:end="7:51">avctx</name><operator pos:start="7:52" pos:end="7:53">-&gt;</operator><name pos:start="7:54" pos:end="7:64">coded_width</name></name><operator pos:start="7:65" pos:end="7:65">/</operator><literal type="number" pos:start="7:66" pos:end="7:66">2</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:66"><expr pos:start="8:5" pos:end="8:65"><name pos:start="8:5" pos:end="8:22"><name pos:start="8:5" pos:end="8:5">s</name><operator pos:start="8:6" pos:end="8:7">-&gt;</operator><name pos:start="8:8" pos:end="8:19">plane_height</name><index pos:start="8:20" pos:end="8:22">[<expr pos:start="8:21" pos:end="8:21"><literal type="number" pos:start="8:21" pos:end="8:21">0</literal></expr>]</index></name> <operator pos:start="8:24" pos:end="8:24">=</operator> <name pos:start="8:26" pos:end="8:43"><name pos:start="8:26" pos:end="8:26">s</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:40">plane_height</name><index pos:start="8:41" pos:end="8:43">[<expr pos:start="8:42" pos:end="8:42"><literal type="number" pos:start="8:42" pos:end="8:42">3</literal></expr>]</index></name> <operator pos:start="8:45" pos:end="8:45">=</operator> <name pos:start="8:47" pos:end="8:65"><name pos:start="8:47" pos:end="8:51">avctx</name><operator pos:start="8:52" pos:end="8:53">-&gt;</operator><name pos:start="8:54" pos:end="8:65">coded_height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:68"><expr pos:start="9:5" pos:end="9:67"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:19">plane_height</name><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">1</literal></expr>]</index></name> <operator pos:start="9:24" pos:end="9:24">=</operator> <name pos:start="9:26" pos:end="9:43"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:40">plane_height</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">2</literal></expr>]</index></name> <operator pos:start="9:45" pos:end="9:45">=</operator> <name pos:start="9:47" pos:end="9:65"><name pos:start="9:47" pos:end="9:51">avctx</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:65">coded_height</name></name><operator pos:start="9:66" pos:end="9:66">/</operator><literal type="number" pos:start="9:67" pos:end="9:67">2</literal></expr>;</expr_stmt>
    <for pos:start="10:5" pos:end="11:76">for <control pos:start="10:9" pos:end="10:23">(<init pos:start="10:10" pos:end="10:13"><expr pos:start="10:10" pos:end="10:12"><name pos:start="10:10" pos:end="10:10">i</name><operator pos:start="10:11" pos:end="10:11">=</operator><literal type="number" pos:start="10:12" pos:end="10:12">0</literal></expr>;</init> <condition pos:start="10:15" pos:end="10:18"><expr pos:start="10:15" pos:end="10:17"><name pos:start="10:15" pos:end="10:15">i</name><operator pos:start="10:16" pos:end="10:16">&lt;</operator><literal type="number" pos:start="10:17" pos:end="10:17">4</literal></expr>;</condition> <incr pos:start="10:20" pos:end="10:22"><expr pos:start="10:20" pos:end="10:22"><name pos:start="10:20" pos:end="10:20">i</name><operator pos:start="10:21" pos:end="10:22">++</operator></expr></incr>)</control><block type="pseudo" pos:start="11:9" pos:end="11:76"><block_content pos:start="11:9" pos:end="11:76">
        <expr_stmt pos:start="11:9" pos:end="11:76"><expr pos:start="11:9" pos:end="11:75"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:17">stride</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><name pos:start="11:19" pos:end="11:19">i</name></expr>]</index></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">flip</name></name> <operator pos:start="11:32" pos:end="11:32">*</operator> <name pos:start="11:34" pos:end="11:62"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:42">frames</name><index pos:start="11:43" pos:end="11:62">[<expr pos:start="11:44" pos:end="11:61"><name pos:start="11:44" pos:end="11:61">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="11:63" pos:end="11:64">-&gt;</operator><name pos:start="11:65" pos:end="11:75"><name pos:start="11:65" pos:end="11:72">linesize</name><index pos:start="11:73" pos:end="11:75">[<expr pos:start="11:74" pos:end="11:74"><name pos:start="11:74" pos:end="11:74">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="12:5" pos:end="12:49"><expr pos:start="12:5" pos:end="12:48"><name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:5">s</name><operator pos:start="12:6" pos:end="12:7">-&gt;</operator><name pos:start="12:8" pos:end="12:15">mb_width</name></name>  <operator pos:start="12:18" pos:end="12:18">=</operator> <operator pos:start="12:20" pos:end="12:20">(</operator><name pos:start="12:21" pos:end="12:38"><name pos:start="12:21" pos:end="12:25">avctx</name><operator pos:start="12:26" pos:end="12:27">-&gt;</operator><name pos:start="12:28" pos:end="12:38">coded_width</name></name> <operator pos:start="12:40" pos:end="12:40">+</operator><literal type="number" pos:start="12:41" pos:end="12:42">15</literal><operator pos:start="12:43" pos:end="12:43">)</operator> <operator pos:start="12:45" pos:end="12:45">/</operator> <literal type="number" pos:start="12:47" pos:end="12:48">16</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">mb_height</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <operator pos:start="13:20" pos:end="13:20">(</operator><name pos:start="13:21" pos:end="13:39"><name pos:start="13:21" pos:end="13:25">avctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:39">coded_height</name></name><operator pos:start="13:40" pos:end="13:40">+</operator><literal type="number" pos:start="13:41" pos:end="13:42">15</literal><operator pos:start="13:43" pos:end="13:43">)</operator> <operator pos:start="13:45" pos:end="13:45">/</operator> <literal type="number" pos:start="13:47" pos:end="13:48">16</literal></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="18:5"><if pos:start="14:5" pos:end="18:5">if <condition pos:start="14:8" pos:end="14:50">(<expr pos:start="14:9" pos:end="14:49"><name pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:19">mb_width</name></name> <operator pos:start="14:21" pos:end="14:21">&gt;</operator> <literal type="number" pos:start="14:23" pos:end="14:26">1000</literal> <operator pos:start="14:28" pos:end="14:29">||</operator> <name pos:start="14:31" pos:end="14:42"><name pos:start="14:31" pos:end="14:31">s</name><operator pos:start="14:32" pos:end="14:33">-&gt;</operator><name pos:start="14:34" pos:end="14:42">mb_height</name></name> <operator pos:start="14:44" pos:end="14:44">&gt;</operator> <literal type="number" pos:start="14:46" pos:end="14:49">1000</literal></expr>)</condition> <block pos:start="14:52" pos:end="18:5">{<block_content pos:start="15:9" pos:end="17:35">
        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:25">ff_set_dimensions</name><argument_list pos:start="15:26" pos:end="15:38">(<argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">avctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:34"><expr pos:start="15:34" pos:end="15:34"><literal type="number" pos:start="15:34" pos:end="15:34">0</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:37"><expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:57"><expr pos:start="16:9" pos:end="16:56"><call pos:start="16:9" pos:end="16:56"><name pos:start="16:9" pos:end="16:14">av_log</name><argument_list pos:start="16:15" pos:end="16:56">(<argument pos:start="16:16" pos:end="16:20"><expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:20">avctx</name></expr></argument>, <argument pos:start="16:23" pos:end="16:34"><expr pos:start="16:23" pos:end="16:34"><name pos:start="16:23" pos:end="16:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:37" pos:end="16:55"><expr pos:start="16:37" pos:end="16:55"><literal type="string" pos:start="16:37" pos:end="16:55">"picture too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="19:5" pos:end="20:48"><expr pos:start="19:5" pos:end="20:47"><call pos:start="19:5" pos:end="20:47"><name pos:start="19:5" pos:end="19:21">av_reallocp_array</name><argument_list pos:start="19:22" pos:end="20:47">(<argument pos:start="19:23" pos:end="19:38"><expr pos:start="19:23" pos:end="19:38"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:38">above_blocks</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:55"><expr pos:start="19:41" pos:end="19:55"><literal type="number" pos:start="19:41" pos:end="19:41">4</literal><operator pos:start="19:42" pos:end="19:42">*</operator><name pos:start="19:43" pos:end="19:53"><name pos:start="19:43" pos:end="19:43">s</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:53">mb_width</name></name><operator pos:start="19:54" pos:end="19:54">+</operator><literal type="number" pos:start="19:55" pos:end="19:55">6</literal></expr></argument>,
                      <argument pos:start="20:23" pos:end="20:46"><expr pos:start="20:23" pos:end="20:46"><sizeof pos:start="20:23" pos:end="20:46">sizeof<argument_list pos:start="20:29" pos:end="20:46">(<argument pos:start="20:30" pos:end="20:45"><expr pos:start="20:30" pos:end="20:45"><operator pos:start="20:30" pos:end="20:30">*</operator><name pos:start="20:31" pos:end="20:45"><name pos:start="20:31" pos:end="20:31">s</name><operator pos:start="20:32" pos:end="20:33">-&gt;</operator><name pos:start="20:34" pos:end="20:45">above_blocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="22:47"><expr pos:start="21:5" pos:end="22:46"><call pos:start="21:5" pos:end="22:46"><name pos:start="21:5" pos:end="21:21">av_reallocp_array</name><argument_list pos:start="21:22" pos:end="22:46">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:37"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:37">macroblocks</name></name></expr></argument>, <argument pos:start="21:40" pos:end="21:63"><expr pos:start="21:40" pos:end="21:63"><name pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:40">s</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:50">mb_width</name></name><operator pos:start="21:51" pos:end="21:51">*</operator><name pos:start="21:52" pos:end="21:63"><name pos:start="21:52" pos:end="21:52">s</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:63">mb_height</name></name></expr></argument>,
                      <argument pos:start="22:23" pos:end="22:45"><expr pos:start="22:23" pos:end="22:45"><sizeof pos:start="22:23" pos:end="22:45">sizeof<argument_list pos:start="22:29" pos:end="22:45">(<argument pos:start="22:30" pos:end="22:44"><expr pos:start="22:30" pos:end="22:44"><operator pos:start="22:30" pos:end="22:30">*</operator><name pos:start="22:31" pos:end="22:44"><name pos:start="22:31" pos:end="22:31">s</name><operator pos:start="22:32" pos:end="22:33">-&gt;</operator><name pos:start="22:34" pos:end="22:44">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:11">av_free</name><argument_list pos:start="23:12" pos:end="23:37">(<argument pos:start="23:13" pos:end="23:36"><expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:36">edge_emu_buffer_alloc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:52"><expr pos:start="24:5" pos:end="24:51"><name pos:start="24:5" pos:end="24:28"><name pos:start="24:5" pos:end="24:5">s</name><operator pos:start="24:6" pos:end="24:7">-&gt;</operator><name pos:start="24:8" pos:end="24:28">edge_emu_buffer_alloc</name></name> <operator pos:start="24:30" pos:end="24:30">=</operator> <call pos:start="24:32" pos:end="24:51"><name pos:start="24:32" pos:end="24:40">av_malloc</name><argument_list pos:start="24:41" pos:end="24:51">(<argument pos:start="24:42" pos:end="24:50"><expr pos:start="24:42" pos:end="24:50"><literal type="number" pos:start="24:42" pos:end="24:43">16</literal><operator pos:start="24:44" pos:end="24:44">*</operator><name pos:start="24:45" pos:end="24:50">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:22">edge_emu_buffer</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:49">edge_emu_buffer_alloc</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="26:5" pos:end="27:31"><if pos:start="26:5" pos:end="27:31">if <condition pos:start="26:8" pos:end="26:73">(<expr pos:start="26:9" pos:end="26:72"><operator pos:start="26:9" pos:end="26:9">!</operator><name pos:start="26:10" pos:end="26:24"><name pos:start="26:10" pos:end="26:10">s</name><operator pos:start="26:11" pos:end="26:12">-&gt;</operator><name pos:start="26:13" pos:end="26:24">above_blocks</name></name> <operator pos:start="26:26" pos:end="26:27">||</operator> <operator pos:start="26:29" pos:end="26:29">!</operator><name pos:start="26:30" pos:end="26:43"><name pos:start="26:30" pos:end="26:30">s</name><operator pos:start="26:31" pos:end="26:32">-&gt;</operator><name pos:start="26:33" pos:end="26:43">macroblocks</name></name> <operator pos:start="26:45" pos:end="26:46">||</operator> <operator pos:start="26:48" pos:end="26:48">!</operator><name pos:start="26:49" pos:end="26:72"><name pos:start="26:49" pos:end="26:49">s</name><operator pos:start="26:50" pos:end="26:51">-&gt;</operator><name pos:start="26:52" pos:end="26:72">edge_emu_buffer_alloc</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">
        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="28:5" pos:end="29:42"><if pos:start="28:5" pos:end="29:42">if <condition pos:start="28:8" pos:end="28:20">(<expr pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:15"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:15">flip</name></name> <operator pos:start="28:17" pos:end="28:17">&lt;</operator> <literal type="number" pos:start="28:19" pos:end="28:19">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:42"><block_content pos:start="29:9" pos:end="29:42">
        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:26">edge_emu_buffer</name></name> <operator pos:start="29:28" pos:end="29:29">+=</operator> <literal type="number" pos:start="29:31" pos:end="29:32">15</literal> <operator pos:start="29:34" pos:end="29:34">*</operator> <name pos:start="29:36" pos:end="29:41">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="30:5" pos:end="31:51"><if pos:start="30:5" pos:end="31:51">if <condition pos:start="30:8" pos:end="30:25">(<expr pos:start="30:9" pos:end="30:24"><name pos:start="30:9" pos:end="30:24"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:24">alpha_context</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:51"><block_content pos:start="31:9" pos:end="31:51">
        <return pos:start="31:9" pos:end="31:51">return <expr pos:start="31:16" pos:end="31:50"><call pos:start="31:16" pos:end="31:50"><name pos:start="31:16" pos:end="31:32">vp56_size_changed</name><argument_list pos:start="31:33" pos:end="31:50">(<argument pos:start="31:34" pos:end="31:49"><expr pos:start="31:34" pos:end="31:49"><name pos:start="31:34" pos:end="31:49"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:49">alpha_context</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
