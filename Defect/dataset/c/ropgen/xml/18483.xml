<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18483.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="29:1"><decl pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">execute_async</name><argument_list pos:start="1:26" pos:end="3:39">(<argument pos:start="1:27" pos:end="1:54"><expr pos:start="1:27" pos:end="1:54"><name pos:start="1:27" pos:end="1:31">DWORD</name> <call pos:start="1:33" pos:end="1:54"><call pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:38">WINAPI</name> <argument_list pos:start="1:40" pos:end="1:46">(<argument pos:start="1:41" pos:end="1:45"><expr pos:start="1:41" pos:end="1:45"><operator pos:start="1:41" pos:end="1:41">*</operator><name pos:start="1:42" pos:end="1:45">func</name></expr></argument>)</argument_list></call><argument_list pos:start="1:47" pos:end="1:54">(<argument pos:start="1:48" pos:end="1:53"><expr pos:start="1:48" pos:end="1:53"><name pos:start="1:48" pos:end="1:53">LPVOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1:57" pos:end="1:69"><expr pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:62">LPVOID</name> <name pos:start="1:64" pos:end="1:69">opaque</name></expr></argument>,

                          <argument pos:start="3:27" pos:end="3:38"><expr pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:31">Error</name> <operator pos:start="3:33" pos:end="3:33">*</operator><operator pos:start="3:34" pos:end="3:34">*</operator><name pos:start="3:35" pos:end="3:38">errp</name></expr></argument>)</argument_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:20">error_is_set</name><argument_list pos:start="11:21" pos:end="11:26">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:29" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:65"><decl pos:start="17:5" pos:end="17:64"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">HANDLE</name></type> <name pos:start="17:12" pos:end="17:17">thread</name> <init pos:start="17:19" pos:end="17:64">= <expr pos:start="17:21" pos:end="17:64"><call pos:start="17:21" pos:end="17:64"><name pos:start="17:21" pos:end="17:32">CreateThread</name><argument_list pos:start="17:33" pos:end="17:64">(<argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">NULL</name></expr></argument>, <argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><name pos:start="17:43" pos:end="17:46">func</name></expr></argument>, <argument pos:start="17:49" pos:end="17:54"><expr pos:start="17:49" pos:end="17:54"><name pos:start="17:49" pos:end="17:54">opaque</name></expr></argument>, <argument pos:start="17:57" pos:end="17:57"><expr pos:start="17:57" pos:end="17:57"><literal type="number" pos:start="17:57" pos:end="17:57">0</literal></expr></argument>, <argument pos:start="17:60" pos:end="17:63"><expr pos:start="17:60" pos:end="17:63"><name pos:start="17:60" pos:end="17:63">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">thread</name></expr>)</condition> <block pos:start="19:18" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:41">

        <expr_stmt pos:start="21:9" pos:end="23:61"><expr pos:start="21:9" pos:end="23:60"><call pos:start="21:9" pos:end="23:60"><name pos:start="21:9" pos:end="21:17">error_set</name><argument_list pos:start="21:18" pos:end="23:60">(<argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:28">local_err</name></expr></argument>, <argument pos:start="21:31" pos:end="21:53"><expr pos:start="21:31" pos:end="21:53"><name pos:start="21:31" pos:end="21:53">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:59"><expr pos:start="23:19" pos:end="23:59"><literal type="string" pos:start="23:19" pos:end="23:59">"failed to dispatch asynchronous command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:23">error_propagate</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>, <argument pos:start="25:31" pos:end="25:39"><expr pos:start="25:31" pos:end="25:39"><name pos:start="25:31" pos:end="25:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
