<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6888.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">posix_aio_process_queue</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:18">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">PosixAioState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">qemu_paiocb</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">acb</name></decl>, <decl pos:start="7:30" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:24"><modifier pos:start="7:30" pos:end="7:30">*</modifier><modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:35">pacb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">result</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="91:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control> <block pos:start="15:13" pos:end="91:5">{<block_content pos:start="17:9" pos:end="89:9">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:12">pacb</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:28">first_aio</name></name></expr>;</expr_stmt>

        <for pos:start="19:9" pos:end="89:9">for<control pos:start="19:12" pos:end="19:15">(<init pos:start="19:13" pos:end="19:13">;</init><condition pos:start="19:14" pos:end="19:14">;</condition><incr/>)</control> <block pos:start="19:17" pos:end="89:9">{<block_content pos:start="21:13" pos:end="87:13">

            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:15">acb</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">*</operator><name pos:start="21:20" pos:end="21:23">pacb</name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:30"><if pos:start="23:13" pos:end="25:30">if <condition pos:start="23:16" pos:end="23:21">(<expr pos:start="23:17" pos:end="23:20"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:20">acb</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:30"><block_content pos:start="25:17" pos:end="25:30">

                <return pos:start="25:17" pos:end="25:30">return <expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">result</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:38"><name pos:start="29:19" pos:end="29:33">qemu_paio_error</name><argument_list pos:start="29:34" pos:end="29:38">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="87:13"><if pos:start="31:13" pos:end="41:13">if <condition pos:start="31:16" pos:end="31:33">(<expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <name pos:start="31:24" pos:end="31:32">ECANCELED</name></expr>)</condition> <block pos:start="31:35" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:27">

                <comment type="block" pos:start="33:17" pos:end="33:40">/* remove the request */</comment>

                <expr_stmt pos:start="35:17" pos:end="35:34"><expr pos:start="35:17" pos:end="35:33"><operator pos:start="35:17" pos:end="35:17">*</operator><name pos:start="35:18" pos:end="35:21">pacb</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:27">acb</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">next</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:38"><expr pos:start="37:17" pos:end="37:37"><call pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:32">qemu_aio_release</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:22">result</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="41:15" pos:end="83:13">else if <condition pos:start="41:23" pos:end="41:42">(<expr pos:start="41:24" pos:end="41:41"><name pos:start="41:24" pos:end="41:26">ret</name> <operator pos:start="41:28" pos:end="41:29">!=</operator> <name pos:start="41:31" pos:end="41:41">EINPROGRESS</name></expr>)</condition> <block pos:start="41:44" pos:end="83:13">{<block_content pos:start="45:17" pos:end="81:22">

                <comment type="block" pos:start="43:17" pos:end="43:32">/* end of aio */</comment>

                <if_stmt pos:start="45:17" pos:end="61:17"><if pos:start="45:17" pos:end="57:17">if <condition pos:start="45:20" pos:end="45:29">(<expr pos:start="45:21" pos:end="45:28"><name pos:start="45:21" pos:end="45:23">ret</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>)</condition> <block pos:start="45:31" pos:end="57:17">{<block_content pos:start="47:21" pos:end="55:38">

                    <expr_stmt pos:start="47:21" pos:end="47:48"><expr pos:start="47:21" pos:end="47:47"><name pos:start="47:21" pos:end="47:23">ret</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:47"><name pos:start="47:27" pos:end="47:42">qemu_paio_return</name><argument_list pos:start="47:43" pos:end="47:47">(<argument pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:46">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="49:21" pos:end="55:38"><if pos:start="49:21" pos:end="51:32">if <condition pos:start="49:24" pos:end="49:47">(<expr pos:start="49:25" pos:end="49:46"><name pos:start="49:25" pos:end="49:27">ret</name> <operator pos:start="49:29" pos:end="49:30">==</operator> <name pos:start="49:32" pos:end="49:46"><name pos:start="49:32" pos:end="49:34">acb</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:46">aio_nbytes</name></name></expr>)</condition><block type="pseudo" pos:start="51:25" pos:end="51:32"><block_content pos:start="51:25" pos:end="51:32">

                        <expr_stmt pos:start="51:25" pos:end="51:32"><expr pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:27">ret</name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="53:21" pos:end="55:38">else<block type="pseudo" pos:start="55:25" pos:end="55:38"><block_content pos:start="55:25" pos:end="55:38">

                        <expr_stmt pos:start="55:25" pos:end="55:38"><expr pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:27">ret</name> <operator pos:start="55:29" pos:end="55:29">=</operator> <operator pos:start="55:31" pos:end="55:31">-</operator><name pos:start="55:32" pos:end="55:37">EINVAL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="57:19" pos:end="61:17">else <block pos:start="57:24" pos:end="61:17">{<block_content pos:start="59:21" pos:end="59:31">

                    <expr_stmt pos:start="59:21" pos:end="59:31"><expr pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:23">ret</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <operator pos:start="59:27" pos:end="59:27">-</operator><name pos:start="59:28" pos:end="59:30">ret</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="65:17" pos:end="65:66"><expr pos:start="65:17" pos:end="65:65"><call pos:start="65:17" pos:end="65:65"><name pos:start="65:17" pos:end="65:35">trace_paio_complete</name><argument_list pos:start="65:36" pos:end="65:65">(<argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">acb</name></expr></argument>, <argument pos:start="65:42" pos:end="65:59"><expr pos:start="65:42" pos:end="65:59"><name pos:start="65:42" pos:end="65:59"><name pos:start="65:42" pos:end="65:44">acb</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:52">common</name><operator pos:start="65:53" pos:end="65:53">.</operator><name pos:start="65:54" pos:end="65:59">opaque</name></name></expr></argument>, <argument pos:start="65:62" pos:end="65:64"><expr pos:start="65:62" pos:end="65:64"><name pos:start="65:62" pos:end="65:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="69:17" pos:end="69:40">/* remove the request */</comment>

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><operator pos:start="71:17" pos:end="71:17">*</operator><name pos:start="71:18" pos:end="71:21">pacb</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:27">acb</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:33">next</name></name></expr>;</expr_stmt>

                <comment type="block" pos:start="73:17" pos:end="73:39">/* call the callback */</comment>

                <expr_stmt pos:start="75:17" pos:end="75:56"><expr pos:start="75:17" pos:end="75:55"><call pos:start="75:17" pos:end="75:55"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:19">acb</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:27">common</name><operator pos:start="75:28" pos:end="75:28">.</operator><name pos:start="75:29" pos:end="75:30">cb</name></name><argument_list pos:start="75:31" pos:end="75:55">(<argument pos:start="75:32" pos:end="75:49"><expr pos:start="75:32" pos:end="75:49"><name pos:start="75:32" pos:end="75:49"><name pos:start="75:32" pos:end="75:34">acb</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:42">common</name><operator pos:start="75:43" pos:end="75:43">.</operator><name pos:start="75:44" pos:end="75:49">opaque</name></name></expr></argument>, <argument pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:54">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><call pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:32">qemu_aio_release</name><argument_list pos:start="77:33" pos:end="77:37">(<argument pos:start="77:34" pos:end="77:36"><expr pos:start="77:34" pos:end="77:36"><name pos:start="77:34" pos:end="77:36">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:27"><expr pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:22">result</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr>;</expr_stmt>

                <break pos:start="81:17" pos:end="81:22">break;</break>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="87:13">else <block pos:start="83:20" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:34">

                <expr_stmt pos:start="85:17" pos:end="85:34"><expr pos:start="85:17" pos:end="85:33"><name pos:start="85:17" pos:end="85:20">pacb</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <operator pos:start="85:24" pos:end="85:24">&amp;</operator><name pos:start="85:25" pos:end="85:33"><name pos:start="85:25" pos:end="85:27">acb</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:33">next</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="95:5" pos:end="95:18">return <expr pos:start="95:12" pos:end="95:17"><name pos:start="95:12" pos:end="95:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
