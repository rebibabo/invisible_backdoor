<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14039.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:78"><name pos:start="1:1" pos:end="1:8">callback</name><argument_list pos:start="1:9" pos:end="1:78">(<argument pos:start="1:10" pos:end="1:24">void *priv_data</argument>, <argument pos:start="1:27" pos:end="1:35">int index</argument>, <argument pos:start="1:38" pos:end="1:49">uint8_t *buf</argument>, <argument pos:start="1:52" pos:end="1:63">int buf_size</argument>, <argument pos:start="1:66" pos:end="1:77">int64_t time</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:11">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34">priv_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">dshow_ctx</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">ctx</name> <init pos:start="7:27" pos:end="7:40">= <expr pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:16">AVPacketList</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:24">ppktl</name></decl>, <decl pos:start="9:27" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:19"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:36">pktl_next</name></decl>;</decl_stmt>



<comment type="line" pos:start="13:1" pos:end="13:30">//    dump_videohdr(s, vdhdr);</comment>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><call pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:23">WaitForSingleObject</name><argument_list pos:start="17:24" pos:end="17:45">(<argument pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:27">ctx</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:34">mutex</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:44"><expr pos:start="17:37" pos:end="17:44"><name pos:start="17:37" pos:end="17:44">INFINITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if<condition pos:start="21:7" pos:end="21:24">(<expr pos:start="21:8" pos:end="21:23"><call pos:start="21:8" pos:end="21:23"><name pos:start="21:8" pos:end="21:20">shall_we_drop</name><argument_list pos:start="21:21" pos:end="21:23">(<argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:13">pktl_next</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:48"><name pos:start="27:17" pos:end="27:26">av_mallocz</name><argument_list pos:start="27:27" pos:end="27:48">(<argument pos:start="27:28" pos:end="27:47"><expr pos:start="27:28" pos:end="27:47"><sizeof pos:start="27:28" pos:end="27:47">sizeof<argument_list pos:start="27:34" pos:end="27:47">(<argument pos:start="27:35" pos:end="27:46"><expr pos:start="27:35" pos:end="27:46"><name pos:start="27:35" pos:end="27:46">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if<condition pos:start="29:7" pos:end="29:18">(<expr pos:start="29:8" pos:end="29:17"><operator pos:start="29:8" pos:end="29:8">!</operator><name pos:start="29:9" pos:end="29:17">pktl_next</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if<condition pos:start="35:7" pos:end="35:52">(<expr pos:start="35:8" pos:end="35:51"><call pos:start="35:8" pos:end="35:47"><name pos:start="35:8" pos:end="35:20">av_new_packet</name><argument_list pos:start="35:21" pos:end="35:47">(<argument pos:start="35:22" pos:end="35:36"><expr pos:start="35:22" pos:end="35:36"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:36"><name pos:start="35:23" pos:end="35:31">pktl_next</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">pkt</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:46"><expr pos:start="35:39" pos:end="35:46"><name pos:start="35:39" pos:end="35:46">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="35:49" pos:end="35:49">&lt;</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:15">av_free</name><argument_list pos:start="37:16" pos:end="37:26">(<argument pos:start="37:17" pos:end="37:25"><expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:25">pktl_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:13">pktl_next</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">pkt</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:31">stream_index</name></name> <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:39">index</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:13">pktl_next</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">pkt</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:22">pts</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:29">time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><call pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:10">memcpy</name><argument_list pos:start="49:11" pos:end="49:46">(<argument pos:start="49:12" pos:end="49:30"><expr pos:start="49:12" pos:end="49:30"><name pos:start="49:12" pos:end="49:30"><name pos:start="49:12" pos:end="49:20">pktl_next</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:25">pkt</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:30">data</name></name></expr></argument>, <argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">buf</name></expr></argument>, <argument pos:start="49:38" pos:end="49:45"><expr pos:start="49:38" pos:end="49:45"><name pos:start="49:38" pos:end="49:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="53:63">for<control pos:start="53:8" pos:end="53:62">(<init pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:13">ppktl</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:26"><name pos:start="53:18" pos:end="53:20">ctx</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:26">pktl</name></name></expr> ;</init> <condition pos:start="53:30" pos:end="53:37"><expr pos:start="53:30" pos:end="53:35"><operator pos:start="53:30" pos:end="53:30">*</operator><name pos:start="53:31" pos:end="53:35">ppktl</name></expr> ;</condition> <incr pos:start="53:39" pos:end="53:61"><expr pos:start="53:39" pos:end="53:61"><name pos:start="53:39" pos:end="53:43">ppktl</name> <operator pos:start="53:45" pos:end="53:45">=</operator> <operator pos:start="53:47" pos:end="53:47">&amp;</operator><name pos:start="53:48" pos:end="53:61"><operator pos:start="53:48" pos:end="53:48">(</operator><operator pos:start="53:49" pos:end="53:49">*</operator><name pos:start="53:50" pos:end="53:54">ppktl</name><operator pos:start="53:55" pos:end="53:55">)</operator><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:61">next</name></name></expr></incr>)</control><block type="pseudo" pos:start="53:63" pos:end="53:63"><block_content pos:start="53:63" pos:end="53:63"><empty_stmt pos:start="53:63" pos:end="53:63">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><operator pos:start="55:5" pos:end="55:5">*</operator><name pos:start="55:6" pos:end="55:10">ppktl</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:22">pktl_next</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:19">curbufsize</name></name> <operator pos:start="59:21" pos:end="59:22">+=</operator> <name pos:start="59:24" pos:end="59:31">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:25"><expr pos:start="63:5" pos:end="63:24"><call pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:12">SetEvent</name><argument_list pos:start="63:13" pos:end="63:24">(<argument pos:start="63:14" pos:end="63:23"><expr pos:start="63:14" pos:end="63:23"><name pos:start="63:14" pos:end="63:23"><name pos:start="63:14" pos:end="63:16">ctx</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">event</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><call pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:16">ReleaseMutex</name><argument_list pos:start="65:17" pos:end="65:28">(<argument pos:start="65:18" pos:end="65:27"><expr pos:start="65:18" pos:end="65:27"><name pos:start="65:18" pos:end="65:27"><name pos:start="65:18" pos:end="65:20">ctx</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:11">return;</return>

<label pos:start="71:1" pos:end="71:5"><name pos:start="71:1" pos:end="71:4">fail</name>:</label>

    <expr_stmt pos:start="73:5" pos:end="73:29"><expr pos:start="73:5" pos:end="73:28"><call pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:16">ReleaseMutex</name><argument_list pos:start="73:17" pos:end="73:28">(<argument pos:start="73:18" pos:end="73:27"><expr pos:start="73:18" pos:end="73:27"><name pos:start="73:18" pos:end="73:27"><name pos:start="73:18" pos:end="73:20">ctx</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:27">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:11">return;</return>

</block_content>}</block>
</unit>
