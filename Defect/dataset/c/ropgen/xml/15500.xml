<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15500.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">qemu_cond_destroy</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:33"><name pos:start="1:24" pos:end="1:31">QemuCond</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">cond</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:19">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">BOOL</name></type> <name pos:start="5:10" pos:end="5:15">result</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:47"><expr pos:start="7:5" pos:end="7:46"><name pos:start="7:5" pos:end="7:10">result</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <call pos:start="7:14" pos:end="7:46"><name pos:start="7:14" pos:end="7:24">CloseHandle</name><argument_list pos:start="7:25" pos:end="7:46">(<argument pos:start="7:26" pos:end="7:45"><expr pos:start="7:26" pos:end="7:45"><name pos:start="7:26" pos:end="7:45"><name pos:start="7:26" pos:end="7:29">cond</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:45">continue_event</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:15">result</name></expr>)</condition> <block pos:start="9:18" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:45">

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:18">error_exit</name><argument_list pos:start="11:19" pos:end="11:44">(<argument pos:start="11:20" pos:end="11:33"><expr pos:start="11:20" pos:end="11:33"><call pos:start="11:20" pos:end="11:33"><name pos:start="11:20" pos:end="11:31">GetLastError</name><argument_list pos:start="11:32" pos:end="11:33">()</argument_list></call></expr></argument>, <argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:8">cond</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:24">continue_event</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:10">result</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:36"><name pos:start="17:14" pos:end="17:24">CloseHandle</name><argument_list pos:start="17:25" pos:end="17:36">(<argument pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:35"><name pos:start="17:26" pos:end="17:35"><name pos:start="17:26" pos:end="17:29">cond</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">sema</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">result</name></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:45">

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:18">error_exit</name><argument_list pos:start="21:19" pos:end="21:44">(<argument pos:start="21:20" pos:end="21:33"><expr pos:start="21:20" pos:end="21:33"><call pos:start="21:20" pos:end="21:33"><name pos:start="21:20" pos:end="21:31">GetLastError</name><argument_list pos:start="21:32" pos:end="21:33">()</argument_list></call></expr></argument>, <argument pos:start="21:36" pos:end="21:43"><expr pos:start="21:36" pos:end="21:43"><name pos:start="21:36" pos:end="21:43">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:8">cond</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:14">sema</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
