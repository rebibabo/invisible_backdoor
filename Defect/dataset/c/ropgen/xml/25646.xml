<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25646.c" pos:tabs="8"><function pos:start="1:1" pos:end="465:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:102">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">data_size</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:87"><decl pos:start="1:76" pos:end="1:87"><type pos:start="1:76" pos:end="1:87"><name pos:start="1:76" pos:end="1:82">uint8_t</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">buf</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:101"><decl pos:start="1:90" pos:end="1:101"><type pos:start="1:90" pos:end="1:101"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:101">buf_size</name></decl></parameter>)</parameter_list><block pos:start="1:103" pos:end="465:1">{<block_content pos:start="3:5" pos:end="463:41">

    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">HYuvContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:18">s</name> <init pos:start="3:20" pos:end="3:37">= <expr pos:start="3:22" pos:end="3:37"><name pos:start="3:22" pos:end="3:37"><name pos:start="3:22" pos:end="3:26">avctx</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">width</name><init pos:start="5:20" pos:end="5:29">= <expr pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">width2</name><init pos:start="7:21" pos:end="7:33">= <expr pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:30"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:30">width</name></name><operator pos:start="7:31" pos:end="7:32">&gt;&gt;</operator><literal type="number" pos:start="7:33" pos:end="7:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">height</name><init pos:start="9:21" pos:end="9:31">= <expr pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:31"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:31">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">fake_ystride</name></decl>, <decl pos:start="11:23" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:34">fake_ustride</name></decl>, <decl pos:start="11:37" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:48">fake_vstride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:21">p</name><init pos:start="13:22" pos:end="13:34">= <expr pos:start="13:24" pos:end="13:34"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">picture</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">picture</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:14">data_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:74"><expr pos:start="33:5" pos:end="33:73"><call pos:start="33:5" pos:end="33:73"><name pos:start="33:5" pos:end="33:13">bswap_buf</name><argument_list pos:start="33:14" pos:end="33:73">(<argument pos:start="33:15" pos:end="33:44"><expr pos:start="33:15" pos:end="33:44"><operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:23">uint32_t</name><operator pos:start="33:24" pos:end="33:24">*</operator><operator pos:start="33:25" pos:end="33:25">)</operator><name pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:44">bitstream_buffer</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:60"><expr pos:start="33:47" pos:end="33:60"><operator pos:start="33:47" pos:end="33:47">(</operator><name pos:start="33:48" pos:end="33:55">uint32_t</name><operator pos:start="33:56" pos:end="33:56">*</operator><operator pos:start="33:57" pos:end="33:57">)</operator><name pos:start="33:58" pos:end="33:60">buf</name></expr></argument>, <argument pos:start="33:63" pos:end="33:72"><expr pos:start="33:63" pos:end="33:72"><name pos:start="33:63" pos:end="33:70">buf_size</name><operator pos:start="33:71" pos:end="33:71">/</operator><literal type="number" pos:start="33:72" pos:end="33:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="37:5" pos:end="37:57"><expr pos:start="37:5" pos:end="37:56"><call pos:start="37:5" pos:end="37:56"><name pos:start="37:5" pos:end="37:17">init_get_bits</name><argument_list pos:start="37:18" pos:end="37:56">(<argument pos:start="37:19" pos:end="37:24"><expr pos:start="37:19" pos:end="37:24"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">gb</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:45"><expr pos:start="37:27" pos:end="37:45"><name pos:start="37:27" pos:end="37:45"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:45">bitstream_buffer</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:55"><expr pos:start="37:48" pos:end="37:55"><name pos:start="37:48" pos:end="37:55">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:5">p</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:16">reference</name></name><operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:39">(<expr pos:start="43:8" pos:end="43:38"><call pos:start="43:8" pos:end="43:34"><name pos:start="43:8" pos:end="43:24"><name pos:start="43:8" pos:end="43:12">avctx</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:24">get_buffer</name></name><argument_list pos:start="43:25" pos:end="43:34">(<argument pos:start="43:26" pos:end="43:30"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:30">avctx</name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><name pos:start="43:33" pos:end="43:33">p</name></expr></argument>)</argument_list></call> <operator pos:start="43:36" pos:end="43:36">&lt;</operator> <literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr>)</condition><block pos:start="43:40" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="45:48">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:47"><expr pos:start="45:25" pos:end="45:47"><literal type="string" pos:start="45:25" pos:end="45:47">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:69"><expr pos:start="53:5" pos:end="53:68"><name pos:start="53:5" pos:end="53:16">fake_ystride</name><operator pos:start="53:17" pos:end="53:17">=</operator> <ternary pos:start="53:19" pos:end="53:68"><condition pos:start="53:19" pos:end="53:33"><expr pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:31">interlaced</name></name></expr> ?</condition><then pos:start="53:35" pos:end="53:50"> <expr pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:35">p</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:45">linesize</name><index pos:start="53:46" pos:end="53:48">[<expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">0</literal></expr>]</index></name><operator pos:start="53:49" pos:end="53:49">*</operator><literal type="number" pos:start="53:50" pos:end="53:50">2</literal></expr>  </then><else pos:start="53:53" pos:end="53:68">: <expr pos:start="53:55" pos:end="53:68"><name pos:start="53:55" pos:end="53:68"><name pos:start="53:55" pos:end="53:55">p</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:65">linesize</name><index pos:start="53:66" pos:end="53:68">[<expr pos:start="53:67" pos:end="53:67"><literal type="number" pos:start="53:67" pos:end="53:67">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:69"><expr pos:start="55:5" pos:end="55:68"><name pos:start="55:5" pos:end="55:16">fake_ustride</name><operator pos:start="55:17" pos:end="55:17">=</operator> <ternary pos:start="55:19" pos:end="55:68"><condition pos:start="55:19" pos:end="55:33"><expr pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:31">interlaced</name></name></expr> ?</condition><then pos:start="55:35" pos:end="55:50"> <expr pos:start="55:35" pos:end="55:50"><name pos:start="55:35" pos:end="55:48"><name pos:start="55:35" pos:end="55:35">p</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:45">linesize</name><index pos:start="55:46" pos:end="55:48">[<expr pos:start="55:47" pos:end="55:47"><literal type="number" pos:start="55:47" pos:end="55:47">1</literal></expr>]</index></name><operator pos:start="55:49" pos:end="55:49">*</operator><literal type="number" pos:start="55:50" pos:end="55:50">2</literal></expr>  </then><else pos:start="55:53" pos:end="55:68">: <expr pos:start="55:55" pos:end="55:68"><name pos:start="55:55" pos:end="55:68"><name pos:start="55:55" pos:end="55:55">p</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:65">linesize</name><index pos:start="55:66" pos:end="55:68">[<expr pos:start="55:67" pos:end="55:67"><literal type="number" pos:start="55:67" pos:end="55:67">1</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:16">fake_vstride</name><operator pos:start="57:17" pos:end="57:17">=</operator> <ternary pos:start="57:19" pos:end="57:68"><condition pos:start="57:19" pos:end="57:33"><expr pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:31">interlaced</name></name></expr> ?</condition><then pos:start="57:35" pos:end="57:50"> <expr pos:start="57:35" pos:end="57:50"><name pos:start="57:35" pos:end="57:48"><name pos:start="57:35" pos:end="57:35">p</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:45">linesize</name><index pos:start="57:46" pos:end="57:48">[<expr pos:start="57:47" pos:end="57:47"><literal type="number" pos:start="57:47" pos:end="57:47">2</literal></expr>]</index></name><operator pos:start="57:49" pos:end="57:49">*</operator><literal type="number" pos:start="57:50" pos:end="57:50">2</literal></expr>  </then><else pos:start="57:53" pos:end="57:68">: <expr pos:start="57:55" pos:end="57:68"><name pos:start="57:55" pos:end="57:68"><name pos:start="57:55" pos:end="57:55">p</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:65">linesize</name><index pos:start="57:66" pos:end="57:68">[<expr pos:start="57:67" pos:end="57:67"><literal type="number" pos:start="57:67" pos:end="57:67">2</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:21">last_slice_end</name></name><operator pos:start="61:22" pos:end="61:22">=</operator> <literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</expr_stmt>

        

    <if_stmt pos:start="65:5" pos:end="445:5"><if pos:start="65:5" pos:end="355:5">if<condition pos:start="65:7" pos:end="65:27">(<expr pos:start="65:8" pos:end="65:26"><name pos:start="65:8" pos:end="65:23"><name pos:start="65:8" pos:end="65:8">s</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:23">bitstream_bpp</name></name><operator pos:start="65:24" pos:end="65:24">&lt;</operator><literal type="number" pos:start="65:25" pos:end="65:26">24</literal></expr>)</condition><block pos:start="65:28" pos:end="355:5">{<block_content pos:start="67:9" pos:end="353:9">

        <decl_stmt pos:start="67:9" pos:end="67:18"><decl pos:start="67:9" pos:end="67:13"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">y</name></decl>, <decl pos:start="67:16" pos:end="67:17"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:16" pos:end="67:17">cy</name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:32"><decl pos:start="69:9" pos:end="69:17"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:17">lefty</name></decl>, <decl pos:start="69:20" pos:end="69:24"><type ref="prev" pos:start="69:9" pos:end="69:11"/><name pos:start="69:20" pos:end="69:24">leftu</name></decl>, <decl pos:start="69:27" pos:end="69:31"><type ref="prev" pos:start="69:9" pos:end="69:11"/><name pos:start="69:27" pos:end="69:31">leftv</name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:41"><decl pos:start="71:9" pos:end="71:20"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:20">lefttopy</name></decl>, <decl pos:start="71:23" pos:end="71:30"><type ref="prev" pos:start="71:9" pos:end="71:11"/><name pos:start="71:23" pos:end="71:30">lefttopu</name></decl>, <decl pos:start="71:33" pos:end="71:40"><type ref="prev" pos:start="71:9" pos:end="71:11"/><name pos:start="71:33" pos:end="71:40">lefttopv</name></decl>;</decl_stmt>

        

        <if_stmt pos:start="75:9" pos:end="353:9"><if pos:start="75:9" pos:end="91:9">if<condition pos:start="75:11" pos:end="75:19">(<expr pos:start="75:12" pos:end="75:18"><name pos:start="75:12" pos:end="75:18"><name pos:start="75:12" pos:end="75:12">s</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:18">yuy2</name></name></expr>)</condition><block pos:start="75:20" pos:end="91:9">{<block_content pos:start="77:13" pos:end="89:22">

            <expr_stmt pos:start="77:13" pos:end="77:47"><expr pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:13">p</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">data</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>]</index><index pos:start="77:23" pos:end="77:25">[<expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">3</literal></expr>]</index></name><operator pos:start="77:26" pos:end="77:26">=</operator> <call pos:start="77:28" pos:end="77:46"><name pos:start="77:28" pos:end="77:35">get_bits</name><argument_list pos:start="77:36" pos:end="77:46">(<argument pos:start="77:37" pos:end="77:42"><expr pos:start="77:37" pos:end="77:42"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:42"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:42">gb</name></name></expr></argument>, <argument pos:start="77:45" pos:end="77:45"><expr pos:start="77:45" pos:end="77:45"><literal type="number" pos:start="77:45" pos:end="77:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:47"><expr pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:13">p</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">data</name><index pos:start="79:20" pos:end="79:22">[<expr pos:start="79:21" pos:end="79:21"><literal type="number" pos:start="79:21" pos:end="79:21">0</literal></expr>]</index><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">2</literal></expr>]</index></name><operator pos:start="79:26" pos:end="79:26">=</operator> <call pos:start="79:28" pos:end="79:46"><name pos:start="79:28" pos:end="79:35">get_bits</name><argument_list pos:start="79:36" pos:end="79:46">(<argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><operator pos:start="79:37" pos:end="79:37">&amp;</operator><name pos:start="79:38" pos:end="79:42"><name pos:start="79:38" pos:end="79:38">s</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:42">gb</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:45"><expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:47"><expr pos:start="81:13" pos:end="81:46"><name pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:13">p</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:19">data</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>]</index><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">1</literal></expr>]</index></name><operator pos:start="81:26" pos:end="81:26">=</operator> <call pos:start="81:28" pos:end="81:46"><name pos:start="81:28" pos:end="81:35">get_bits</name><argument_list pos:start="81:36" pos:end="81:46">(<argument pos:start="81:37" pos:end="81:42"><expr pos:start="81:37" pos:end="81:42"><operator pos:start="81:37" pos:end="81:37">&amp;</operator><name pos:start="81:38" pos:end="81:42"><name pos:start="81:38" pos:end="81:38">s</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:42">gb</name></name></expr></argument>, <argument pos:start="81:45" pos:end="81:45"><expr pos:start="81:45" pos:end="81:45"><literal type="number" pos:start="81:45" pos:end="81:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:47"><expr pos:start="83:13" pos:end="83:46"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:13">p</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:19">data</name><index pos:start="83:20" pos:end="83:22">[<expr pos:start="83:21" pos:end="83:21"><literal type="number" pos:start="83:21" pos:end="83:21">0</literal></expr>]</index><index pos:start="83:23" pos:end="83:25">[<expr pos:start="83:24" pos:end="83:24"><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>]</index></name><operator pos:start="83:26" pos:end="83:26">=</operator> <call pos:start="83:28" pos:end="83:46"><name pos:start="83:28" pos:end="83:35">get_bits</name><argument_list pos:start="83:36" pos:end="83:46">(<argument pos:start="83:37" pos:end="83:42"><expr pos:start="83:37" pos:end="83:42"><operator pos:start="83:37" pos:end="83:37">&amp;</operator><name pos:start="83:38" pos:end="83:42"><name pos:start="83:38" pos:end="83:38">s</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:42">gb</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:45"><expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <expr_stmt pos:start="87:13" pos:end="87:66"><expr pos:start="87:13" pos:end="87:65"><call pos:start="87:13" pos:end="87:65"><name pos:start="87:13" pos:end="87:19">fprintf</name><argument_list pos:start="87:20" pos:end="87:65">(<argument pos:start="87:21" pos:end="87:26"><expr pos:start="87:21" pos:end="87:26"><name pos:start="87:21" pos:end="87:26">stderr</name></expr></argument>, <argument pos:start="87:29" pos:end="87:64"><expr pos:start="87:29" pos:end="87:64"><literal type="string" pos:start="87:29" pos:end="87:64">"YUY2 output isnt implemenetd yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></if><else pos:start="91:10" pos:end="353:9">else<block pos:start="91:14" pos:end="353:9">{<block_content pos:start="95:13" pos:end="351:13">

        

            <expr_stmt pos:start="95:13" pos:end="95:54"><expr pos:start="95:13" pos:end="95:53"><name pos:start="95:13" pos:end="95:17">leftv</name><operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:20">p</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:26">data</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><literal type="number" pos:start="95:28" pos:end="95:28">2</literal></expr>]</index><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">0</literal></expr>]</index></name><operator pos:start="95:33" pos:end="95:33">=</operator> <call pos:start="95:35" pos:end="95:53"><name pos:start="95:35" pos:end="95:42">get_bits</name><argument_list pos:start="95:43" pos:end="95:53">(<argument pos:start="95:44" pos:end="95:49"><expr pos:start="95:44" pos:end="95:49"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:49"><name pos:start="95:45" pos:end="95:45">s</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:49">gb</name></name></expr></argument>, <argument pos:start="95:52" pos:end="95:52"><expr pos:start="95:52" pos:end="95:52"><literal type="number" pos:start="95:52" pos:end="95:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:17">lefty</name><operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:20">p</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:26">data</name><index pos:start="97:27" pos:end="97:29">[<expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>]</index><index pos:start="97:30" pos:end="97:32">[<expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">1</literal></expr>]</index></name><operator pos:start="97:33" pos:end="97:33">=</operator> <call pos:start="97:35" pos:end="97:53"><name pos:start="97:35" pos:end="97:42">get_bits</name><argument_list pos:start="97:43" pos:end="97:53">(<argument pos:start="97:44" pos:end="97:49"><expr pos:start="97:44" pos:end="97:49"><operator pos:start="97:44" pos:end="97:44">&amp;</operator><name pos:start="97:45" pos:end="97:49"><name pos:start="97:45" pos:end="97:45">s</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:49">gb</name></name></expr></argument>, <argument pos:start="97:52" pos:end="97:52"><expr pos:start="97:52" pos:end="97:52"><literal type="number" pos:start="97:52" pos:end="97:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:54"><expr pos:start="99:13" pos:end="99:53"><name pos:start="99:13" pos:end="99:17">leftu</name><operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:20">p</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:26">data</name><index pos:start="99:27" pos:end="99:29">[<expr pos:start="99:28" pos:end="99:28"><literal type="number" pos:start="99:28" pos:end="99:28">1</literal></expr>]</index><index pos:start="99:30" pos:end="99:32">[<expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">0</literal></expr>]</index></name><operator pos:start="99:33" pos:end="99:33">=</operator> <call pos:start="99:35" pos:end="99:53"><name pos:start="99:35" pos:end="99:42">get_bits</name><argument_list pos:start="99:43" pos:end="99:53">(<argument pos:start="99:44" pos:end="99:49"><expr pos:start="99:44" pos:end="99:49"><operator pos:start="99:44" pos:end="99:44">&amp;</operator><name pos:start="99:45" pos:end="99:49"><name pos:start="99:45" pos:end="99:45">s</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:49">gb</name></name></expr></argument>, <argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><literal type="number" pos:start="99:52" pos:end="99:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                   <expr_stmt pos:start="101:20" pos:end="101:54"><expr pos:start="101:20" pos:end="101:53"><name pos:start="101:20" pos:end="101:32"><name pos:start="101:20" pos:end="101:20">p</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:26">data</name><index pos:start="101:27" pos:end="101:29">[<expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>]</index><index pos:start="101:30" pos:end="101:32">[<expr pos:start="101:31" pos:end="101:31"><literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>]</index></name><operator pos:start="101:33" pos:end="101:33">=</operator> <call pos:start="101:35" pos:end="101:53"><name pos:start="101:35" pos:end="101:42">get_bits</name><argument_list pos:start="101:43" pos:end="101:53">(<argument pos:start="101:44" pos:end="101:49"><expr pos:start="101:44" pos:end="101:49"><operator pos:start="101:44" pos:end="101:44">&amp;</operator><name pos:start="101:45" pos:end="101:49"><name pos:start="101:45" pos:end="101:45">s</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:49">gb</name></name></expr></argument>, <argument pos:start="101:52" pos:end="101:52"><expr pos:start="101:52" pos:end="101:52"><literal type="number" pos:start="101:52" pos:end="101:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

            <switch pos:start="105:13" pos:end="351:13">switch<condition pos:start="105:19" pos:end="105:32">(<expr pos:start="105:20" pos:end="105:31"><name pos:start="105:20" pos:end="105:31"><name pos:start="105:20" pos:end="105:20">s</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:31">predictor</name></name></expr>)</condition><block pos:start="105:33" pos:end="351:13">{<block_content pos:start="107:13" pos:end="349:22">

            <case pos:start="107:13" pos:end="107:22">case <expr pos:start="107:18" pos:end="107:21"><name pos:start="107:18" pos:end="107:21">LEFT</name></expr>:</case>

            <case pos:start="109:13" pos:end="109:23">case <expr pos:start="109:18" pos:end="109:22"><name pos:start="109:18" pos:end="109:22">PLANE</name></expr>:</case>

                <expr_stmt pos:start="111:17" pos:end="111:49"><expr pos:start="111:17" pos:end="111:48"><call pos:start="111:17" pos:end="111:48"><name pos:start="111:17" pos:end="111:36">decode_422_bitstream</name><argument_list pos:start="111:37" pos:end="111:48">(<argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><name pos:start="111:38" pos:end="111:38">s</name></expr></argument>, <argument pos:start="111:41" pos:end="111:47"><expr pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:45">width</name><operator pos:start="111:46" pos:end="111:46">-</operator><literal type="number" pos:start="111:47" pos:end="111:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:87"><expr pos:start="113:17" pos:end="113:86"><name pos:start="113:17" pos:end="113:21">lefty</name><operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:86"><name pos:start="113:24" pos:end="113:42">add_left_prediction</name><argument_list pos:start="113:43" pos:end="113:86">(<argument pos:start="113:44" pos:end="113:57"><expr pos:start="113:44" pos:end="113:57"><name pos:start="113:44" pos:end="113:53"><name pos:start="113:44" pos:end="113:44">p</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:50">data</name><index pos:start="113:51" pos:end="113:53">[<expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">0</literal></expr>]</index></name> <operator pos:start="113:55" pos:end="113:55">+</operator> <literal type="number" pos:start="113:57" pos:end="113:57">2</literal></expr></argument>, <argument pos:start="113:60" pos:end="113:69"><expr pos:start="113:60" pos:end="113:69"><name pos:start="113:60" pos:end="113:69"><name pos:start="113:60" pos:end="113:60">s</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:66">temp</name><index pos:start="113:67" pos:end="113:69">[<expr pos:start="113:68" pos:end="113:68"><literal type="number" pos:start="113:68" pos:end="113:68">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:72" pos:end="113:78"><expr pos:start="113:72" pos:end="113:78"><name pos:start="113:72" pos:end="113:76">width</name><operator pos:start="113:77" pos:end="113:77">-</operator><literal type="number" pos:start="113:78" pos:end="113:78">2</literal></expr></argument>, <argument pos:start="113:81" pos:end="113:85"><expr pos:start="113:81" pos:end="113:85"><name pos:start="113:81" pos:end="113:85">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="121:17"><if pos:start="115:17" pos:end="121:17">if<condition pos:start="115:19" pos:end="115:47">(<expr pos:start="115:20" pos:end="115:46"><operator pos:start="115:20" pos:end="115:20">!</operator><operator pos:start="115:21" pos:end="115:21">(</operator><name pos:start="115:22" pos:end="115:29"><name pos:start="115:22" pos:end="115:22">s</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:29">flags</name></name><operator pos:start="115:30" pos:end="115:30">&amp;</operator><name pos:start="115:31" pos:end="115:45">CODEC_FLAG_GRAY</name><operator pos:start="115:46" pos:end="115:46">)</operator></expr>)</condition><block pos:start="115:48" pos:end="121:17">{<block_content pos:start="117:21" pos:end="119:92">

                    <expr_stmt pos:start="117:21" pos:end="117:92"><expr pos:start="117:21" pos:end="117:91"><name pos:start="117:21" pos:end="117:25">leftu</name><operator pos:start="117:26" pos:end="117:26">=</operator> <call pos:start="117:28" pos:end="117:91"><name pos:start="117:28" pos:end="117:46">add_left_prediction</name><argument_list pos:start="117:47" pos:end="117:91">(<argument pos:start="117:48" pos:end="117:61"><expr pos:start="117:48" pos:end="117:61"><name pos:start="117:48" pos:end="117:57"><name pos:start="117:48" pos:end="117:48">p</name><operator pos:start="117:49" pos:end="117:50">-&gt;</operator><name pos:start="117:51" pos:end="117:54">data</name><index pos:start="117:55" pos:end="117:57">[<expr pos:start="117:56" pos:end="117:56"><literal type="number" pos:start="117:56" pos:end="117:56">1</literal></expr>]</index></name> <operator pos:start="117:59" pos:end="117:59">+</operator> <literal type="number" pos:start="117:61" pos:end="117:61">1</literal></expr></argument>, <argument pos:start="117:64" pos:end="117:73"><expr pos:start="117:64" pos:end="117:73"><name pos:start="117:64" pos:end="117:73"><name pos:start="117:64" pos:end="117:64">s</name><operator pos:start="117:65" pos:end="117:66">-&gt;</operator><name pos:start="117:67" pos:end="117:70">temp</name><index pos:start="117:71" pos:end="117:73">[<expr pos:start="117:72" pos:end="117:72"><literal type="number" pos:start="117:72" pos:end="117:72">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:76" pos:end="117:83"><expr pos:start="117:76" pos:end="117:83"><name pos:start="117:76" pos:end="117:81">width2</name><operator pos:start="117:82" pos:end="117:82">-</operator><literal type="number" pos:start="117:83" pos:end="117:83">1</literal></expr></argument>, <argument pos:start="117:86" pos:end="117:90"><expr pos:start="117:86" pos:end="117:90"><name pos:start="117:86" pos:end="117:90">leftu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:92"><expr pos:start="119:21" pos:end="119:91"><name pos:start="119:21" pos:end="119:25">leftv</name><operator pos:start="119:26" pos:end="119:26">=</operator> <call pos:start="119:28" pos:end="119:91"><name pos:start="119:28" pos:end="119:46">add_left_prediction</name><argument_list pos:start="119:47" pos:end="119:91">(<argument pos:start="119:48" pos:end="119:61"><expr pos:start="119:48" pos:end="119:61"><name pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:48">p</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:54">data</name><index pos:start="119:55" pos:end="119:57">[<expr pos:start="119:56" pos:end="119:56"><literal type="number" pos:start="119:56" pos:end="119:56">2</literal></expr>]</index></name> <operator pos:start="119:59" pos:end="119:59">+</operator> <literal type="number" pos:start="119:61" pos:end="119:61">1</literal></expr></argument>, <argument pos:start="119:64" pos:end="119:73"><expr pos:start="119:64" pos:end="119:73"><name pos:start="119:64" pos:end="119:73"><name pos:start="119:64" pos:end="119:64">s</name><operator pos:start="119:65" pos:end="119:66">-&gt;</operator><name pos:start="119:67" pos:end="119:70">temp</name><index pos:start="119:71" pos:end="119:73">[<expr pos:start="119:72" pos:end="119:72"><literal type="number" pos:start="119:72" pos:end="119:72">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:76" pos:end="119:83"><expr pos:start="119:76" pos:end="119:83"><name pos:start="119:76" pos:end="119:81">width2</name><operator pos:start="119:82" pos:end="119:82">-</operator><literal type="number" pos:start="119:83" pos:end="119:83">1</literal></expr></argument>, <argument pos:start="119:86" pos:end="119:90"><expr pos:start="119:86" pos:end="119:90"><name pos:start="119:86" pos:end="119:90">leftv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <for pos:start="125:17" pos:end="201:17">for<control pos:start="125:20" pos:end="125:50">(<init pos:start="125:21" pos:end="125:27"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:22">cy</name><operator pos:start="125:23" pos:end="125:23">=</operator><name pos:start="125:24" pos:end="125:24">y</name><operator pos:start="125:25" pos:end="125:25">=</operator><literal type="number" pos:start="125:26" pos:end="125:26">1</literal></expr>;</init> <condition pos:start="125:29" pos:end="125:40"><expr pos:start="125:29" pos:end="125:39"><name pos:start="125:29" pos:end="125:29">y</name><operator pos:start="125:30" pos:end="125:30">&lt;</operator><name pos:start="125:31" pos:end="125:39"><name pos:start="125:31" pos:end="125:31">s</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:39">height</name></name></expr>;</condition> <incr pos:start="125:42" pos:end="125:49"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:42">y</name><operator pos:start="125:43" pos:end="125:44">++</operator></expr><operator pos:start="125:45" pos:end="125:45">,</operator><expr pos:start="125:46" pos:end="125:49"><name pos:start="125:46" pos:end="125:47">cy</name><operator pos:start="125:48" pos:end="125:49">++</operator></expr></incr>)</control><block pos:start="125:51" pos:end="201:17">{<block_content pos:start="127:21" pos:end="199:21">

                    <decl_stmt pos:start="127:21" pos:end="127:48"><decl pos:start="127:21" pos:end="127:33"><type pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:27">uint8_t</name> <modifier pos:start="127:29" pos:end="127:29">*</modifier></type><name pos:start="127:30" pos:end="127:33">ydst</name></decl>, <decl pos:start="127:36" pos:end="127:40"><type ref="prev" pos:start="127:21" pos:end="127:29"><modifier pos:start="127:36" pos:end="127:36">*</modifier></type><name pos:start="127:37" pos:end="127:40">udst</name></decl>, <decl pos:start="127:43" pos:end="127:47"><type ref="prev" pos:start="127:21" pos:end="127:29"><modifier pos:start="127:43" pos:end="127:43">*</modifier></type><name pos:start="127:44" pos:end="127:47">vdst</name></decl>;</decl_stmt>

                    

                    <if_stmt pos:start="131:21" pos:end="155:21"><if pos:start="131:21" pos:end="155:21">if<condition pos:start="131:23" pos:end="131:44">(<expr pos:start="131:24" pos:end="131:43"><name pos:start="131:24" pos:end="131:39"><name pos:start="131:24" pos:end="131:24">s</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:39">bitstream_bpp</name></name><operator pos:start="131:40" pos:end="131:41">==</operator><literal type="number" pos:start="131:42" pos:end="131:43">12</literal></expr>)</condition><block pos:start="131:45" pos:end="155:21">{<block_content pos:start="133:25" pos:end="153:47">

                        <expr_stmt pos:start="133:25" pos:end="133:56"><expr pos:start="133:25" pos:end="133:55"><call pos:start="133:25" pos:end="133:55"><name pos:start="133:25" pos:end="133:45">decode_gray_bitstream</name><argument_list pos:start="133:46" pos:end="133:55">(<argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><name pos:start="133:47" pos:end="133:47">s</name></expr></argument>, <argument pos:start="133:50" pos:end="133:54"><expr pos:start="133:50" pos:end="133:54"><name pos:start="133:50" pos:end="133:54">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                        <expr_stmt pos:start="137:25" pos:end="137:60"><expr pos:start="137:25" pos:end="137:59"><name pos:start="137:25" pos:end="137:28">ydst</name><operator pos:start="137:29" pos:end="137:29">=</operator> <name pos:start="137:31" pos:end="137:40"><name pos:start="137:31" pos:end="137:31">p</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:37">data</name><index pos:start="137:38" pos:end="137:40">[<expr pos:start="137:39" pos:end="137:39"><literal type="number" pos:start="137:39" pos:end="137:39">0</literal></expr>]</index></name> <operator pos:start="137:42" pos:end="137:42">+</operator> <name pos:start="137:44" pos:end="137:57"><name pos:start="137:44" pos:end="137:44">p</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:54">linesize</name><index pos:start="137:55" pos:end="137:57">[<expr pos:start="137:56" pos:end="137:56"><literal type="number" pos:start="137:56" pos:end="137:56">0</literal></expr>]</index></name><operator pos:start="137:58" pos:end="137:58">*</operator><name pos:start="137:59" pos:end="137:59">y</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="141:25" pos:end="141:83"><expr pos:start="141:25" pos:end="141:82"><name pos:start="141:25" pos:end="141:29">lefty</name><operator pos:start="141:30" pos:end="141:30">=</operator> <call pos:start="141:32" pos:end="141:82"><name pos:start="141:32" pos:end="141:50">add_left_prediction</name><argument_list pos:start="141:51" pos:end="141:82">(<argument pos:start="141:52" pos:end="141:55"><expr pos:start="141:52" pos:end="141:55"><name pos:start="141:52" pos:end="141:55">ydst</name></expr></argument>, <argument pos:start="141:58" pos:end="141:67"><expr pos:start="141:58" pos:end="141:67"><name pos:start="141:58" pos:end="141:67"><name pos:start="141:58" pos:end="141:58">s</name><operator pos:start="141:59" pos:end="141:60">-&gt;</operator><name pos:start="141:61" pos:end="141:64">temp</name><index pos:start="141:65" pos:end="141:67">[<expr pos:start="141:66" pos:end="141:66"><literal type="number" pos:start="141:66" pos:end="141:66">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:70" pos:end="141:74"><expr pos:start="141:70" pos:end="141:74"><name pos:start="141:70" pos:end="141:74">width</name></expr></argument>, <argument pos:start="141:77" pos:end="141:81"><expr pos:start="141:77" pos:end="141:81"><name pos:start="141:77" pos:end="141:81">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="143:25" pos:end="149:25"><if pos:start="143:25" pos:end="149:25">if<condition pos:start="143:27" pos:end="143:49">(<expr pos:start="143:28" pos:end="143:48"><name pos:start="143:28" pos:end="143:39"><name pos:start="143:28" pos:end="143:28">s</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:39">predictor</name></name> <operator pos:start="143:41" pos:end="143:42">==</operator> <name pos:start="143:44" pos:end="143:48">PLANE</name></expr>)</condition><block pos:start="143:50" pos:end="149:25">{<block_content pos:start="145:29" pos:end="147:83">

                            <if_stmt pos:start="145:29" pos:end="147:83"><if pos:start="145:29" pos:end="147:83">if<condition pos:start="145:31" pos:end="145:47">(<expr pos:start="145:32" pos:end="145:46"><name pos:start="145:32" pos:end="145:32">y</name><operator pos:start="145:33" pos:end="145:33">&gt;</operator><name pos:start="145:34" pos:end="145:46"><name pos:start="145:34" pos:end="145:34">s</name><operator pos:start="145:35" pos:end="145:36">-&gt;</operator><name pos:start="145:37" pos:end="145:46">interlaced</name></name></expr>)</condition><block type="pseudo" pos:start="147:33" pos:end="147:83"><block_content pos:start="147:33" pos:end="147:83">

                                <expr_stmt pos:start="147:33" pos:end="147:83"><expr pos:start="147:33" pos:end="147:82"><call pos:start="147:33" pos:end="147:82"><name pos:start="147:33" pos:end="147:48"><name pos:start="147:33" pos:end="147:33">s</name><operator pos:start="147:34" pos:end="147:35">-&gt;</operator><name pos:start="147:36" pos:end="147:38">dsp</name><operator pos:start="147:39" pos:end="147:39">.</operator><name pos:start="147:40" pos:end="147:48">add_bytes</name></name><argument_list pos:start="147:49" pos:end="147:82">(<argument pos:start="147:50" pos:end="147:53"><expr pos:start="147:50" pos:end="147:53"><name pos:start="147:50" pos:end="147:53">ydst</name></expr></argument>, <argument pos:start="147:56" pos:end="147:74"><expr pos:start="147:56" pos:end="147:74"><name pos:start="147:56" pos:end="147:59">ydst</name> <operator pos:start="147:61" pos:end="147:61">-</operator> <name pos:start="147:63" pos:end="147:74">fake_ystride</name></expr></argument>, <argument pos:start="147:77" pos:end="147:81"><expr pos:start="147:77" pos:end="147:81"><name pos:start="147:77" pos:end="147:81">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="151:25" pos:end="151:28"><expr pos:start="151:25" pos:end="151:27"><name pos:start="151:25" pos:end="151:25">y</name><operator pos:start="151:26" pos:end="151:27">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="153:25" pos:end="153:47"><if pos:start="153:25" pos:end="153:47">if<condition pos:start="153:27" pos:end="153:40">(<expr pos:start="153:28" pos:end="153:39"><name pos:start="153:28" pos:end="153:28">y</name><operator pos:start="153:29" pos:end="153:30">&gt;=</operator><name pos:start="153:31" pos:end="153:39"><name pos:start="153:31" pos:end="153:31">s</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:39">height</name></name></expr>)</condition><block type="pseudo" pos:start="153:42" pos:end="153:47"><block_content pos:start="153:42" pos:end="153:47"> <break pos:start="153:42" pos:end="153:47">break;</break></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    

                    <expr_stmt pos:start="159:21" pos:end="159:37"><expr pos:start="159:21" pos:end="159:36"><call pos:start="159:21" pos:end="159:36"><name pos:start="159:21" pos:end="159:30">draw_slice</name><argument_list pos:start="159:31" pos:end="159:36">(<argument pos:start="159:32" pos:end="159:32"><expr pos:start="159:32" pos:end="159:32"><name pos:start="159:32" pos:end="159:32">s</name></expr></argument>, <argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="163:21" pos:end="163:56"><expr pos:start="163:21" pos:end="163:55"><name pos:start="163:21" pos:end="163:24">ydst</name><operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:36"><name pos:start="163:27" pos:end="163:27">p</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:33">data</name><index pos:start="163:34" pos:end="163:36">[<expr pos:start="163:35" pos:end="163:35"><literal type="number" pos:start="163:35" pos:end="163:35">0</literal></expr>]</index></name> <operator pos:start="163:38" pos:end="163:38">+</operator> <name pos:start="163:40" pos:end="163:53"><name pos:start="163:40" pos:end="163:40">p</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:50">linesize</name><index pos:start="163:51" pos:end="163:53">[<expr pos:start="163:52" pos:end="163:52"><literal type="number" pos:start="163:52" pos:end="163:52">0</literal></expr>]</index></name><operator pos:start="163:54" pos:end="163:54">*</operator><name pos:start="163:55" pos:end="163:55">y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:57"><expr pos:start="165:21" pos:end="165:56"><name pos:start="165:21" pos:end="165:24">udst</name><operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:36"><name pos:start="165:27" pos:end="165:27">p</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:33">data</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><literal type="number" pos:start="165:35" pos:end="165:35">1</literal></expr>]</index></name> <operator pos:start="165:38" pos:end="165:38">+</operator> <name pos:start="165:40" pos:end="165:53"><name pos:start="165:40" pos:end="165:40">p</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:50">linesize</name><index pos:start="165:51" pos:end="165:53">[<expr pos:start="165:52" pos:end="165:52"><literal type="number" pos:start="165:52" pos:end="165:52">1</literal></expr>]</index></name><operator pos:start="165:54" pos:end="165:54">*</operator><name pos:start="165:55" pos:end="165:56">cy</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:57"><expr pos:start="167:21" pos:end="167:56"><name pos:start="167:21" pos:end="167:24">vdst</name><operator pos:start="167:25" pos:end="167:25">=</operator> <name pos:start="167:27" pos:end="167:36"><name pos:start="167:27" pos:end="167:27">p</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:33">data</name><index pos:start="167:34" pos:end="167:36">[<expr pos:start="167:35" pos:end="167:35"><literal type="number" pos:start="167:35" pos:end="167:35">2</literal></expr>]</index></name> <operator pos:start="167:38" pos:end="167:38">+</operator> <name pos:start="167:40" pos:end="167:53"><name pos:start="167:40" pos:end="167:40">p</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:50">linesize</name><index pos:start="167:51" pos:end="167:53">[<expr pos:start="167:52" pos:end="167:52"><literal type="number" pos:start="167:52" pos:end="167:52">2</literal></expr>]</index></name><operator pos:start="167:54" pos:end="167:54">*</operator><name pos:start="167:55" pos:end="167:56">cy</name></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="171:21" pos:end="171:51"><expr pos:start="171:21" pos:end="171:50"><call pos:start="171:21" pos:end="171:50"><name pos:start="171:21" pos:end="171:40">decode_422_bitstream</name><argument_list pos:start="171:41" pos:end="171:50">(<argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><name pos:start="171:42" pos:end="171:42">s</name></expr></argument>, <argument pos:start="171:45" pos:end="171:49"><expr pos:start="171:45" pos:end="171:49"><name pos:start="171:45" pos:end="171:49">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:79"><expr pos:start="173:21" pos:end="173:78"><name pos:start="173:21" pos:end="173:25">lefty</name><operator pos:start="173:26" pos:end="173:26">=</operator> <call pos:start="173:28" pos:end="173:78"><name pos:start="173:28" pos:end="173:46">add_left_prediction</name><argument_list pos:start="173:47" pos:end="173:78">(<argument pos:start="173:48" pos:end="173:51"><expr pos:start="173:48" pos:end="173:51"><name pos:start="173:48" pos:end="173:51">ydst</name></expr></argument>, <argument pos:start="173:54" pos:end="173:63"><expr pos:start="173:54" pos:end="173:63"><name pos:start="173:54" pos:end="173:63"><name pos:start="173:54" pos:end="173:54">s</name><operator pos:start="173:55" pos:end="173:56">-&gt;</operator><name pos:start="173:57" pos:end="173:60">temp</name><index pos:start="173:61" pos:end="173:63">[<expr pos:start="173:62" pos:end="173:62"><literal type="number" pos:start="173:62" pos:end="173:62">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:66" pos:end="173:70"><expr pos:start="173:66" pos:end="173:70"><name pos:start="173:66" pos:end="173:70">width</name></expr></argument>, <argument pos:start="173:73" pos:end="173:77"><expr pos:start="173:73" pos:end="173:77"><name pos:start="173:73" pos:end="173:77">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="175:21" pos:end="181:21"><if pos:start="175:21" pos:end="181:21">if<condition pos:start="175:23" pos:end="175:51">(<expr pos:start="175:24" pos:end="175:50"><operator pos:start="175:24" pos:end="175:24">!</operator><operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:33"><name pos:start="175:26" pos:end="175:26">s</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:33">flags</name></name><operator pos:start="175:34" pos:end="175:34">&amp;</operator><name pos:start="175:35" pos:end="175:49">CODEC_FLAG_GRAY</name><operator pos:start="175:50" pos:end="175:50">)</operator></expr>)</condition><block pos:start="175:52" pos:end="181:21">{<block_content pos:start="177:25" pos:end="179:84">

                        <expr_stmt pos:start="177:25" pos:end="177:84"><expr pos:start="177:25" pos:end="177:83"><name pos:start="177:25" pos:end="177:29">leftu</name><operator pos:start="177:30" pos:end="177:30">=</operator> <call pos:start="177:32" pos:end="177:83"><name pos:start="177:32" pos:end="177:50">add_left_prediction</name><argument_list pos:start="177:51" pos:end="177:83">(<argument pos:start="177:52" pos:end="177:55"><expr pos:start="177:52" pos:end="177:55"><name pos:start="177:52" pos:end="177:55">udst</name></expr></argument>, <argument pos:start="177:58" pos:end="177:67"><expr pos:start="177:58" pos:end="177:67"><name pos:start="177:58" pos:end="177:67"><name pos:start="177:58" pos:end="177:58">s</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:64">temp</name><index pos:start="177:65" pos:end="177:67">[<expr pos:start="177:66" pos:end="177:66"><literal type="number" pos:start="177:66" pos:end="177:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:70" pos:end="177:75"><expr pos:start="177:70" pos:end="177:75"><name pos:start="177:70" pos:end="177:75">width2</name></expr></argument>, <argument pos:start="177:78" pos:end="177:82"><expr pos:start="177:78" pos:end="177:82"><name pos:start="177:78" pos:end="177:82">leftu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:84"><expr pos:start="179:25" pos:end="179:83"><name pos:start="179:25" pos:end="179:29">leftv</name><operator pos:start="179:30" pos:end="179:30">=</operator> <call pos:start="179:32" pos:end="179:83"><name pos:start="179:32" pos:end="179:50">add_left_prediction</name><argument_list pos:start="179:51" pos:end="179:83">(<argument pos:start="179:52" pos:end="179:55"><expr pos:start="179:52" pos:end="179:55"><name pos:start="179:52" pos:end="179:55">vdst</name></expr></argument>, <argument pos:start="179:58" pos:end="179:67"><expr pos:start="179:58" pos:end="179:67"><name pos:start="179:58" pos:end="179:67"><name pos:start="179:58" pos:end="179:58">s</name><operator pos:start="179:59" pos:end="179:60">-&gt;</operator><name pos:start="179:61" pos:end="179:64">temp</name><index pos:start="179:65" pos:end="179:67">[<expr pos:start="179:66" pos:end="179:66"><literal type="number" pos:start="179:66" pos:end="179:66">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:70" pos:end="179:75"><expr pos:start="179:70" pos:end="179:75"><name pos:start="179:70" pos:end="179:75">width2</name></expr></argument>, <argument pos:start="179:78" pos:end="179:82"><expr pos:start="179:78" pos:end="179:82"><name pos:start="179:78" pos:end="179:82">leftv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="183:21" pos:end="199:21"><if pos:start="183:21" pos:end="199:21">if<condition pos:start="183:23" pos:end="183:45">(<expr pos:start="183:24" pos:end="183:44"><name pos:start="183:24" pos:end="183:35"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:35">predictor</name></name> <operator pos:start="183:37" pos:end="183:38">==</operator> <name pos:start="183:40" pos:end="183:44">PLANE</name></expr>)</condition><block pos:start="183:46" pos:end="199:21">{<block_content pos:start="185:25" pos:end="197:25">

                        <if_stmt pos:start="185:25" pos:end="197:25"><if pos:start="185:25" pos:end="197:25">if<condition pos:start="185:27" pos:end="185:44">(<expr pos:start="185:28" pos:end="185:43"><name pos:start="185:28" pos:end="185:29">cy</name><operator pos:start="185:30" pos:end="185:30">&gt;</operator><name pos:start="185:31" pos:end="185:43"><name pos:start="185:31" pos:end="185:31">s</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:43">interlaced</name></name></expr>)</condition><block pos:start="185:45" pos:end="197:25">{<block_content pos:start="187:29" pos:end="195:29">

                            <expr_stmt pos:start="187:29" pos:end="187:79"><expr pos:start="187:29" pos:end="187:78"><call pos:start="187:29" pos:end="187:78"><name pos:start="187:29" pos:end="187:44"><name pos:start="187:29" pos:end="187:29">s</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:34">dsp</name><operator pos:start="187:35" pos:end="187:35">.</operator><name pos:start="187:36" pos:end="187:44">add_bytes</name></name><argument_list pos:start="187:45" pos:end="187:78">(<argument pos:start="187:46" pos:end="187:49"><expr pos:start="187:46" pos:end="187:49"><name pos:start="187:46" pos:end="187:49">ydst</name></expr></argument>, <argument pos:start="187:52" pos:end="187:70"><expr pos:start="187:52" pos:end="187:70"><name pos:start="187:52" pos:end="187:55">ydst</name> <operator pos:start="187:57" pos:end="187:57">-</operator> <name pos:start="187:59" pos:end="187:70">fake_ystride</name></expr></argument>, <argument pos:start="187:73" pos:end="187:77"><expr pos:start="187:73" pos:end="187:77"><name pos:start="187:73" pos:end="187:77">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="189:29" pos:end="195:29"><if pos:start="189:29" pos:end="195:29">if<condition pos:start="189:31" pos:end="189:59">(<expr pos:start="189:32" pos:end="189:58"><operator pos:start="189:32" pos:end="189:32">!</operator><operator pos:start="189:33" pos:end="189:33">(</operator><name pos:start="189:34" pos:end="189:41"><name pos:start="189:34" pos:end="189:34">s</name><operator pos:start="189:35" pos:end="189:36">-&gt;</operator><name pos:start="189:37" pos:end="189:41">flags</name></name><operator pos:start="189:42" pos:end="189:42">&amp;</operator><name pos:start="189:43" pos:end="189:57">CODEC_FLAG_GRAY</name><operator pos:start="189:58" pos:end="189:58">)</operator></expr>)</condition><block pos:start="189:60" pos:end="195:29">{<block_content pos:start="191:33" pos:end="193:84">

                                <expr_stmt pos:start="191:33" pos:end="191:84"><expr pos:start="191:33" pos:end="191:83"><call pos:start="191:33" pos:end="191:83"><name pos:start="191:33" pos:end="191:48"><name pos:start="191:33" pos:end="191:33">s</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:38">dsp</name><operator pos:start="191:39" pos:end="191:39">.</operator><name pos:start="191:40" pos:end="191:48">add_bytes</name></name><argument_list pos:start="191:49" pos:end="191:83">(<argument pos:start="191:50" pos:end="191:53"><expr pos:start="191:50" pos:end="191:53"><name pos:start="191:50" pos:end="191:53">udst</name></expr></argument>, <argument pos:start="191:56" pos:end="191:74"><expr pos:start="191:56" pos:end="191:74"><name pos:start="191:56" pos:end="191:59">udst</name> <operator pos:start="191:61" pos:end="191:61">-</operator> <name pos:start="191:63" pos:end="191:74">fake_ustride</name></expr></argument>, <argument pos:start="191:77" pos:end="191:82"><expr pos:start="191:77" pos:end="191:82"><name pos:start="191:77" pos:end="191:82">width2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="193:33" pos:end="193:84"><expr pos:start="193:33" pos:end="193:83"><call pos:start="193:33" pos:end="193:83"><name pos:start="193:33" pos:end="193:48"><name pos:start="193:33" pos:end="193:33">s</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:38">dsp</name><operator pos:start="193:39" pos:end="193:39">.</operator><name pos:start="193:40" pos:end="193:48">add_bytes</name></name><argument_list pos:start="193:49" pos:end="193:83">(<argument pos:start="193:50" pos:end="193:53"><expr pos:start="193:50" pos:end="193:53"><name pos:start="193:50" pos:end="193:53">vdst</name></expr></argument>, <argument pos:start="193:56" pos:end="193:74"><expr pos:start="193:56" pos:end="193:74"><name pos:start="193:56" pos:end="193:59">vdst</name> <operator pos:start="193:61" pos:end="193:61">-</operator> <name pos:start="193:63" pos:end="193:74">fake_vstride</name></expr></argument>, <argument pos:start="193:77" pos:end="193:82"><expr pos:start="193:77" pos:end="193:82"><name pos:start="193:77" pos:end="193:82">width2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="203:17" pos:end="203:38"><expr pos:start="203:17" pos:end="203:37"><call pos:start="203:17" pos:end="203:37"><name pos:start="203:17" pos:end="203:26">draw_slice</name><argument_list pos:start="203:27" pos:end="203:37">(<argument pos:start="203:28" pos:end="203:28"><expr pos:start="203:28" pos:end="203:28"><name pos:start="203:28" pos:end="203:28">s</name></expr></argument>, <argument pos:start="203:31" pos:end="203:36"><expr pos:start="203:31" pos:end="203:36"><name pos:start="203:31" pos:end="203:36">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                

                <break pos:start="207:17" pos:end="207:22">break;</break>

            <case pos:start="209:13" pos:end="209:24">case <expr pos:start="209:18" pos:end="209:23"><name pos:start="209:18" pos:end="209:23">MEDIAN</name></expr>:</case>

                <comment type="block" pos:start="211:17" pos:end="211:72">/* first line except first 2 pixels is left predicted */</comment>

                <expr_stmt pos:start="213:17" pos:end="213:49"><expr pos:start="213:17" pos:end="213:48"><call pos:start="213:17" pos:end="213:48"><name pos:start="213:17" pos:end="213:36">decode_422_bitstream</name><argument_list pos:start="213:37" pos:end="213:48">(<argument pos:start="213:38" pos:end="213:38"><expr pos:start="213:38" pos:end="213:38"><name pos:start="213:38" pos:end="213:38">s</name></expr></argument>, <argument pos:start="213:41" pos:end="213:47"><expr pos:start="213:41" pos:end="213:47"><name pos:start="213:41" pos:end="213:45">width</name><operator pos:start="213:46" pos:end="213:46">-</operator><literal type="number" pos:start="213:47" pos:end="213:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:87"><expr pos:start="215:17" pos:end="215:86"><name pos:start="215:17" pos:end="215:21">lefty</name><operator pos:start="215:22" pos:end="215:22">=</operator> <call pos:start="215:24" pos:end="215:86"><name pos:start="215:24" pos:end="215:42">add_left_prediction</name><argument_list pos:start="215:43" pos:end="215:86">(<argument pos:start="215:44" pos:end="215:57"><expr pos:start="215:44" pos:end="215:57"><name pos:start="215:44" pos:end="215:53"><name pos:start="215:44" pos:end="215:44">p</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:50">data</name><index pos:start="215:51" pos:end="215:53">[<expr pos:start="215:52" pos:end="215:52"><literal type="number" pos:start="215:52" pos:end="215:52">0</literal></expr>]</index></name> <operator pos:start="215:55" pos:end="215:55">+</operator> <literal type="number" pos:start="215:57" pos:end="215:57">2</literal></expr></argument>, <argument pos:start="215:60" pos:end="215:69"><expr pos:start="215:60" pos:end="215:69"><name pos:start="215:60" pos:end="215:69"><name pos:start="215:60" pos:end="215:60">s</name><operator pos:start="215:61" pos:end="215:62">-&gt;</operator><name pos:start="215:63" pos:end="215:66">temp</name><index pos:start="215:67" pos:end="215:69">[<expr pos:start="215:68" pos:end="215:68"><literal type="number" pos:start="215:68" pos:end="215:68">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:72" pos:end="215:78"><expr pos:start="215:72" pos:end="215:78"><name pos:start="215:72" pos:end="215:76">width</name><operator pos:start="215:77" pos:end="215:77">-</operator><literal type="number" pos:start="215:78" pos:end="215:78">2</literal></expr></argument>, <argument pos:start="215:81" pos:end="215:85"><expr pos:start="215:81" pos:end="215:85"><name pos:start="215:81" pos:end="215:85">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="217:17" pos:end="223:17"><if pos:start="217:17" pos:end="223:17">if<condition pos:start="217:19" pos:end="217:47">(<expr pos:start="217:20" pos:end="217:46"><operator pos:start="217:20" pos:end="217:20">!</operator><operator pos:start="217:21" pos:end="217:21">(</operator><name pos:start="217:22" pos:end="217:29"><name pos:start="217:22" pos:end="217:22">s</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:29">flags</name></name><operator pos:start="217:30" pos:end="217:30">&amp;</operator><name pos:start="217:31" pos:end="217:45">CODEC_FLAG_GRAY</name><operator pos:start="217:46" pos:end="217:46">)</operator></expr>)</condition><block pos:start="217:48" pos:end="223:17">{<block_content pos:start="219:21" pos:end="221:92">

                    <expr_stmt pos:start="219:21" pos:end="219:92"><expr pos:start="219:21" pos:end="219:91"><name pos:start="219:21" pos:end="219:25">leftu</name><operator pos:start="219:26" pos:end="219:26">=</operator> <call pos:start="219:28" pos:end="219:91"><name pos:start="219:28" pos:end="219:46">add_left_prediction</name><argument_list pos:start="219:47" pos:end="219:91">(<argument pos:start="219:48" pos:end="219:61"><expr pos:start="219:48" pos:end="219:61"><name pos:start="219:48" pos:end="219:57"><name pos:start="219:48" pos:end="219:48">p</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:54">data</name><index pos:start="219:55" pos:end="219:57">[<expr pos:start="219:56" pos:end="219:56"><literal type="number" pos:start="219:56" pos:end="219:56">1</literal></expr>]</index></name> <operator pos:start="219:59" pos:end="219:59">+</operator> <literal type="number" pos:start="219:61" pos:end="219:61">1</literal></expr></argument>, <argument pos:start="219:64" pos:end="219:73"><expr pos:start="219:64" pos:end="219:73"><name pos:start="219:64" pos:end="219:73"><name pos:start="219:64" pos:end="219:64">s</name><operator pos:start="219:65" pos:end="219:66">-&gt;</operator><name pos:start="219:67" pos:end="219:70">temp</name><index pos:start="219:71" pos:end="219:73">[<expr pos:start="219:72" pos:end="219:72"><literal type="number" pos:start="219:72" pos:end="219:72">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:76" pos:end="219:83"><expr pos:start="219:76" pos:end="219:83"><name pos:start="219:76" pos:end="219:81">width2</name><operator pos:start="219:82" pos:end="219:82">-</operator><literal type="number" pos:start="219:83" pos:end="219:83">1</literal></expr></argument>, <argument pos:start="219:86" pos:end="219:90"><expr pos:start="219:86" pos:end="219:90"><name pos:start="219:86" pos:end="219:90">leftu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:92"><expr pos:start="221:21" pos:end="221:91"><name pos:start="221:21" pos:end="221:25">leftv</name><operator pos:start="221:26" pos:end="221:26">=</operator> <call pos:start="221:28" pos:end="221:91"><name pos:start="221:28" pos:end="221:46">add_left_prediction</name><argument_list pos:start="221:47" pos:end="221:91">(<argument pos:start="221:48" pos:end="221:61"><expr pos:start="221:48" pos:end="221:61"><name pos:start="221:48" pos:end="221:57"><name pos:start="221:48" pos:end="221:48">p</name><operator pos:start="221:49" pos:end="221:50">-&gt;</operator><name pos:start="221:51" pos:end="221:54">data</name><index pos:start="221:55" pos:end="221:57">[<expr pos:start="221:56" pos:end="221:56"><literal type="number" pos:start="221:56" pos:end="221:56">2</literal></expr>]</index></name> <operator pos:start="221:59" pos:end="221:59">+</operator> <literal type="number" pos:start="221:61" pos:end="221:61">1</literal></expr></argument>, <argument pos:start="221:64" pos:end="221:73"><expr pos:start="221:64" pos:end="221:73"><name pos:start="221:64" pos:end="221:73"><name pos:start="221:64" pos:end="221:64">s</name><operator pos:start="221:65" pos:end="221:66">-&gt;</operator><name pos:start="221:67" pos:end="221:70">temp</name><index pos:start="221:71" pos:end="221:73">[<expr pos:start="221:72" pos:end="221:72"><literal type="number" pos:start="221:72" pos:end="221:72">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="221:76" pos:end="221:83"><expr pos:start="221:76" pos:end="221:83"><name pos:start="221:76" pos:end="221:81">width2</name><operator pos:start="221:82" pos:end="221:82">-</operator><literal type="number" pos:start="221:83" pos:end="221:83">1</literal></expr></argument>, <argument pos:start="221:86" pos:end="221:90"><expr pos:start="221:86" pos:end="221:90"><name pos:start="221:86" pos:end="221:90">leftv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                

                <expr_stmt pos:start="227:17" pos:end="227:23"><expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:18">cy</name><operator pos:start="227:19" pos:end="227:19">=</operator><name pos:start="227:20" pos:end="227:20">y</name><operator pos:start="227:21" pos:end="227:21">=</operator><literal type="number" pos:start="227:22" pos:end="227:22">1</literal></expr>;</expr_stmt>

                

                <comment type="block" pos:start="231:17" pos:end="231:71">/* second line is left predicted for interlaced case */</comment>

                <if_stmt pos:start="233:17" pos:end="249:17"><if pos:start="233:17" pos:end="249:17">if<condition pos:start="233:19" pos:end="233:33">(<expr pos:start="233:20" pos:end="233:32"><name pos:start="233:20" pos:end="233:32"><name pos:start="233:20" pos:end="233:20">s</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:32">interlaced</name></name></expr>)</condition><block pos:start="233:34" pos:end="249:17">{<block_content pos:start="235:21" pos:end="247:30">

                    <expr_stmt pos:start="235:21" pos:end="235:51"><expr pos:start="235:21" pos:end="235:50"><call pos:start="235:21" pos:end="235:50"><name pos:start="235:21" pos:end="235:40">decode_422_bitstream</name><argument_list pos:start="235:41" pos:end="235:50">(<argument pos:start="235:42" pos:end="235:42"><expr pos:start="235:42" pos:end="235:42"><name pos:start="235:42" pos:end="235:42">s</name></expr></argument>, <argument pos:start="235:45" pos:end="235:49"><expr pos:start="235:45" pos:end="235:49"><name pos:start="235:45" pos:end="235:49">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="237:102"><expr pos:start="237:21" pos:end="237:101"><name pos:start="237:21" pos:end="237:25">lefty</name><operator pos:start="237:26" pos:end="237:26">=</operator> <call pos:start="237:28" pos:end="237:101"><name pos:start="237:28" pos:end="237:46">add_left_prediction</name><argument_list pos:start="237:47" pos:end="237:101">(<argument pos:start="237:48" pos:end="237:74"><expr pos:start="237:48" pos:end="237:74"><name pos:start="237:48" pos:end="237:57"><name pos:start="237:48" pos:end="237:48">p</name><operator pos:start="237:49" pos:end="237:50">-&gt;</operator><name pos:start="237:51" pos:end="237:54">data</name><index pos:start="237:55" pos:end="237:57">[<expr pos:start="237:56" pos:end="237:56"><literal type="number" pos:start="237:56" pos:end="237:56">0</literal></expr>]</index></name> <operator pos:start="237:59" pos:end="237:59">+</operator> <name pos:start="237:61" pos:end="237:74"><name pos:start="237:61" pos:end="237:61">p</name><operator pos:start="237:62" pos:end="237:63">-&gt;</operator><name pos:start="237:64" pos:end="237:71">linesize</name><index pos:start="237:72" pos:end="237:74">[<expr pos:start="237:73" pos:end="237:73"><literal type="number" pos:start="237:73" pos:end="237:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:77" pos:end="237:86"><expr pos:start="237:77" pos:end="237:86"><name pos:start="237:77" pos:end="237:86"><name pos:start="237:77" pos:end="237:77">s</name><operator pos:start="237:78" pos:end="237:79">-&gt;</operator><name pos:start="237:80" pos:end="237:83">temp</name><index pos:start="237:84" pos:end="237:86">[<expr pos:start="237:85" pos:end="237:85"><literal type="number" pos:start="237:85" pos:end="237:85">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:89" pos:end="237:93"><expr pos:start="237:89" pos:end="237:93"><name pos:start="237:89" pos:end="237:93">width</name></expr></argument>, <argument pos:start="237:96" pos:end="237:100"><expr pos:start="237:96" pos:end="237:100"><name pos:start="237:96" pos:end="237:100">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="239:21" pos:end="245:21"><if pos:start="239:21" pos:end="245:21">if<condition pos:start="239:23" pos:end="239:51">(<expr pos:start="239:24" pos:end="239:50"><operator pos:start="239:24" pos:end="239:24">!</operator><operator pos:start="239:25" pos:end="239:25">(</operator><name pos:start="239:26" pos:end="239:33"><name pos:start="239:26" pos:end="239:26">s</name><operator pos:start="239:27" pos:end="239:28">-&gt;</operator><name pos:start="239:29" pos:end="239:33">flags</name></name><operator pos:start="239:34" pos:end="239:34">&amp;</operator><name pos:start="239:35" pos:end="239:49">CODEC_FLAG_GRAY</name><operator pos:start="239:50" pos:end="239:50">)</operator></expr>)</condition><block pos:start="239:52" pos:end="245:21">{<block_content pos:start="241:25" pos:end="243:107">

                        <expr_stmt pos:start="241:25" pos:end="241:107"><expr pos:start="241:25" pos:end="241:106"><name pos:start="241:25" pos:end="241:29">leftu</name><operator pos:start="241:30" pos:end="241:30">=</operator> <call pos:start="241:32" pos:end="241:106"><name pos:start="241:32" pos:end="241:50">add_left_prediction</name><argument_list pos:start="241:51" pos:end="241:106">(<argument pos:start="241:52" pos:end="241:78"><expr pos:start="241:52" pos:end="241:78"><name pos:start="241:52" pos:end="241:61"><name pos:start="241:52" pos:end="241:52">p</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:58">data</name><index pos:start="241:59" pos:end="241:61">[<expr pos:start="241:60" pos:end="241:60"><literal type="number" pos:start="241:60" pos:end="241:60">1</literal></expr>]</index></name> <operator pos:start="241:63" pos:end="241:63">+</operator> <name pos:start="241:65" pos:end="241:78"><name pos:start="241:65" pos:end="241:65">p</name><operator pos:start="241:66" pos:end="241:67">-&gt;</operator><name pos:start="241:68" pos:end="241:75">linesize</name><index pos:start="241:76" pos:end="241:78">[<expr pos:start="241:77" pos:end="241:77"><literal type="number" pos:start="241:77" pos:end="241:77">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:81" pos:end="241:90"><expr pos:start="241:81" pos:end="241:90"><name pos:start="241:81" pos:end="241:90"><name pos:start="241:81" pos:end="241:81">s</name><operator pos:start="241:82" pos:end="241:83">-&gt;</operator><name pos:start="241:84" pos:end="241:87">temp</name><index pos:start="241:88" pos:end="241:90">[<expr pos:start="241:89" pos:end="241:89"><literal type="number" pos:start="241:89" pos:end="241:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:93" pos:end="241:98"><expr pos:start="241:93" pos:end="241:98"><name pos:start="241:93" pos:end="241:98">width2</name></expr></argument>, <argument pos:start="241:101" pos:end="241:105"><expr pos:start="241:101" pos:end="241:105"><name pos:start="241:101" pos:end="241:105">leftu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="243:25" pos:end="243:107"><expr pos:start="243:25" pos:end="243:106"><name pos:start="243:25" pos:end="243:29">leftv</name><operator pos:start="243:30" pos:end="243:30">=</operator> <call pos:start="243:32" pos:end="243:106"><name pos:start="243:32" pos:end="243:50">add_left_prediction</name><argument_list pos:start="243:51" pos:end="243:106">(<argument pos:start="243:52" pos:end="243:78"><expr pos:start="243:52" pos:end="243:78"><name pos:start="243:52" pos:end="243:61"><name pos:start="243:52" pos:end="243:52">p</name><operator pos:start="243:53" pos:end="243:54">-&gt;</operator><name pos:start="243:55" pos:end="243:58">data</name><index pos:start="243:59" pos:end="243:61">[<expr pos:start="243:60" pos:end="243:60"><literal type="number" pos:start="243:60" pos:end="243:60">2</literal></expr>]</index></name> <operator pos:start="243:63" pos:end="243:63">+</operator> <name pos:start="243:65" pos:end="243:78"><name pos:start="243:65" pos:end="243:65">p</name><operator pos:start="243:66" pos:end="243:67">-&gt;</operator><name pos:start="243:68" pos:end="243:75">linesize</name><index pos:start="243:76" pos:end="243:78">[<expr pos:start="243:77" pos:end="243:77"><literal type="number" pos:start="243:77" pos:end="243:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:81" pos:end="243:90"><expr pos:start="243:81" pos:end="243:90"><name pos:start="243:81" pos:end="243:90"><name pos:start="243:81" pos:end="243:81">s</name><operator pos:start="243:82" pos:end="243:83">-&gt;</operator><name pos:start="243:84" pos:end="243:87">temp</name><index pos:start="243:88" pos:end="243:90">[<expr pos:start="243:89" pos:end="243:89"><literal type="number" pos:start="243:89" pos:end="243:89">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:93" pos:end="243:98"><expr pos:start="243:93" pos:end="243:98"><name pos:start="243:93" pos:end="243:98">width2</name></expr></argument>, <argument pos:start="243:101" pos:end="243:105"><expr pos:start="243:101" pos:end="243:105"><name pos:start="243:101" pos:end="243:105">leftv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="247:21" pos:end="247:24"><expr pos:start="247:21" pos:end="247:23"><name pos:start="247:21" pos:end="247:21">y</name><operator pos:start="247:22" pos:end="247:23">++</operator></expr>;</expr_stmt> <expr_stmt pos:start="247:26" pos:end="247:30"><expr pos:start="247:26" pos:end="247:29"><name pos:start="247:26" pos:end="247:27">cy</name><operator pos:start="247:28" pos:end="247:29">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="253:17" pos:end="253:58">/* next 4 pixels are left predicted too */</comment>

                <expr_stmt pos:start="255:17" pos:end="255:43"><expr pos:start="255:17" pos:end="255:42"><call pos:start="255:17" pos:end="255:42"><name pos:start="255:17" pos:end="255:36">decode_422_bitstream</name><argument_list pos:start="255:37" pos:end="255:42">(<argument pos:start="255:38" pos:end="255:38"><expr pos:start="255:38" pos:end="255:38"><name pos:start="255:38" pos:end="255:38">s</name></expr></argument>, <argument pos:start="255:41" pos:end="255:41"><expr pos:start="255:41" pos:end="255:41"><literal type="number" pos:start="255:41" pos:end="255:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:92"><expr pos:start="257:17" pos:end="257:91"><name pos:start="257:17" pos:end="257:21">lefty</name><operator pos:start="257:22" pos:end="257:22">=</operator> <call pos:start="257:24" pos:end="257:91"><name pos:start="257:24" pos:end="257:42">add_left_prediction</name><argument_list pos:start="257:43" pos:end="257:91">(<argument pos:start="257:44" pos:end="257:68"><expr pos:start="257:44" pos:end="257:68"><name pos:start="257:44" pos:end="257:53"><name pos:start="257:44" pos:end="257:44">p</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:50">data</name><index pos:start="257:51" pos:end="257:53">[<expr pos:start="257:52" pos:end="257:52"><literal type="number" pos:start="257:52" pos:end="257:52">0</literal></expr>]</index></name> <operator pos:start="257:55" pos:end="257:55">+</operator> <name pos:start="257:57" pos:end="257:68">fake_ystride</name></expr></argument>, <argument pos:start="257:71" pos:end="257:80"><expr pos:start="257:71" pos:end="257:80"><name pos:start="257:71" pos:end="257:80"><name pos:start="257:71" pos:end="257:71">s</name><operator pos:start="257:72" pos:end="257:73">-&gt;</operator><name pos:start="257:74" pos:end="257:77">temp</name><index pos:start="257:78" pos:end="257:80">[<expr pos:start="257:79" pos:end="257:79"><literal type="number" pos:start="257:79" pos:end="257:79">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="257:83" pos:end="257:83"><expr pos:start="257:83" pos:end="257:83"><literal type="number" pos:start="257:83" pos:end="257:83">4</literal></expr></argument>, <argument pos:start="257:86" pos:end="257:90"><expr pos:start="257:86" pos:end="257:90"><name pos:start="257:86" pos:end="257:90">lefty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="259:17" pos:end="265:17"><if pos:start="259:17" pos:end="265:17">if<condition pos:start="259:19" pos:end="259:47">(<expr pos:start="259:20" pos:end="259:46"><operator pos:start="259:20" pos:end="259:20">!</operator><operator pos:start="259:21" pos:end="259:21">(</operator><name pos:start="259:22" pos:end="259:29"><name pos:start="259:22" pos:end="259:22">s</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:29">flags</name></name><operator pos:start="259:30" pos:end="259:30">&amp;</operator><name pos:start="259:31" pos:end="259:45">CODEC_FLAG_GRAY</name><operator pos:start="259:46" pos:end="259:46">)</operator></expr>)</condition><block pos:start="259:48" pos:end="265:17">{<block_content pos:start="261:21" pos:end="263:96">

                    <expr_stmt pos:start="261:21" pos:end="261:96"><expr pos:start="261:21" pos:end="261:95"><name pos:start="261:21" pos:end="261:25">leftu</name><operator pos:start="261:26" pos:end="261:26">=</operator> <call pos:start="261:28" pos:end="261:95"><name pos:start="261:28" pos:end="261:46">add_left_prediction</name><argument_list pos:start="261:47" pos:end="261:95">(<argument pos:start="261:48" pos:end="261:72"><expr pos:start="261:48" pos:end="261:72"><name pos:start="261:48" pos:end="261:57"><name pos:start="261:48" pos:end="261:48">p</name><operator pos:start="261:49" pos:end="261:50">-&gt;</operator><name pos:start="261:51" pos:end="261:54">data</name><index pos:start="261:55" pos:end="261:57">[<expr pos:start="261:56" pos:end="261:56"><literal type="number" pos:start="261:56" pos:end="261:56">1</literal></expr>]</index></name> <operator pos:start="261:59" pos:end="261:59">+</operator> <name pos:start="261:61" pos:end="261:72">fake_ustride</name></expr></argument>, <argument pos:start="261:75" pos:end="261:84"><expr pos:start="261:75" pos:end="261:84"><name pos:start="261:75" pos:end="261:84"><name pos:start="261:75" pos:end="261:75">s</name><operator pos:start="261:76" pos:end="261:77">-&gt;</operator><name pos:start="261:78" pos:end="261:81">temp</name><index pos:start="261:82" pos:end="261:84">[<expr pos:start="261:83" pos:end="261:83"><literal type="number" pos:start="261:83" pos:end="261:83">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:87" pos:end="261:87"><expr pos:start="261:87" pos:end="261:87"><literal type="number" pos:start="261:87" pos:end="261:87">2</literal></expr></argument>, <argument pos:start="261:90" pos:end="261:94"><expr pos:start="261:90" pos:end="261:94"><name pos:start="261:90" pos:end="261:94">leftu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:96"><expr pos:start="263:21" pos:end="263:95"><name pos:start="263:21" pos:end="263:25">leftv</name><operator pos:start="263:26" pos:end="263:26">=</operator> <call pos:start="263:28" pos:end="263:95"><name pos:start="263:28" pos:end="263:46">add_left_prediction</name><argument_list pos:start="263:47" pos:end="263:95">(<argument pos:start="263:48" pos:end="263:72"><expr pos:start="263:48" pos:end="263:72"><name pos:start="263:48" pos:end="263:57"><name pos:start="263:48" pos:end="263:48">p</name><operator pos:start="263:49" pos:end="263:50">-&gt;</operator><name pos:start="263:51" pos:end="263:54">data</name><index pos:start="263:55" pos:end="263:57">[<expr pos:start="263:56" pos:end="263:56"><literal type="number" pos:start="263:56" pos:end="263:56">2</literal></expr>]</index></name> <operator pos:start="263:59" pos:end="263:59">+</operator> <name pos:start="263:61" pos:end="263:72">fake_vstride</name></expr></argument>, <argument pos:start="263:75" pos:end="263:84"><expr pos:start="263:75" pos:end="263:84"><name pos:start="263:75" pos:end="263:84"><name pos:start="263:75" pos:end="263:75">s</name><operator pos:start="263:76" pos:end="263:77">-&gt;</operator><name pos:start="263:78" pos:end="263:81">temp</name><index pos:start="263:82" pos:end="263:84">[<expr pos:start="263:83" pos:end="263:83"><literal type="number" pos:start="263:83" pos:end="263:83">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:87" pos:end="263:87"><expr pos:start="263:87" pos:end="263:87"><literal type="number" pos:start="263:87" pos:end="263:87">2</literal></expr></argument>, <argument pos:start="263:90" pos:end="263:94"><expr pos:start="263:90" pos:end="263:94"><name pos:start="263:90" pos:end="263:94">leftv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="269:17" pos:end="269:77">/* next line except the first 4 pixels is median predicted */</comment>

                <expr_stmt pos:start="271:17" pos:end="271:40"><expr pos:start="271:17" pos:end="271:39"><name pos:start="271:17" pos:end="271:24">lefttopy</name><operator pos:start="271:25" pos:end="271:25">=</operator> <name pos:start="271:27" pos:end="271:39"><name pos:start="271:27" pos:end="271:27">p</name><operator pos:start="271:28" pos:end="271:29">-&gt;</operator><name pos:start="271:30" pos:end="271:33">data</name><index pos:start="271:34" pos:end="271:36">[<expr pos:start="271:35" pos:end="271:35"><literal type="number" pos:start="271:35" pos:end="271:35">0</literal></expr>]</index><index pos:start="271:37" pos:end="271:39">[<expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:49"><expr pos:start="273:17" pos:end="273:48"><call pos:start="273:17" pos:end="273:48"><name pos:start="273:17" pos:end="273:36">decode_422_bitstream</name><argument_list pos:start="273:37" pos:end="273:48">(<argument pos:start="273:38" pos:end="273:38"><expr pos:start="273:38" pos:end="273:38"><name pos:start="273:38" pos:end="273:38">s</name></expr></argument>, <argument pos:start="273:41" pos:end="273:47"><expr pos:start="273:41" pos:end="273:47"><name pos:start="273:41" pos:end="273:45">width</name><operator pos:start="273:46" pos:end="273:46">-</operator><literal type="number" pos:start="273:47" pos:end="273:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:121"><expr pos:start="275:17" pos:end="275:120"><call pos:start="275:17" pos:end="275:120"><name pos:start="275:17" pos:end="275:37">add_median_prediction</name><argument_list pos:start="275:38" pos:end="275:120">(<argument pos:start="275:39" pos:end="275:65"><expr pos:start="275:39" pos:end="275:65"><name pos:start="275:39" pos:end="275:48"><name pos:start="275:39" pos:end="275:39">p</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:45">data</name><index pos:start="275:46" pos:end="275:48">[<expr pos:start="275:47" pos:end="275:47"><literal type="number" pos:start="275:47" pos:end="275:47">0</literal></expr>]</index></name> <operator pos:start="275:50" pos:end="275:50">+</operator> <name pos:start="275:52" pos:end="275:63">fake_ystride</name><operator pos:start="275:64" pos:end="275:64">+</operator><literal type="number" pos:start="275:65" pos:end="275:65">4</literal></expr></argument>, <argument pos:start="275:68" pos:end="275:79"><expr pos:start="275:68" pos:end="275:79"><name pos:start="275:68" pos:end="275:77"><name pos:start="275:68" pos:end="275:68">p</name><operator pos:start="275:69" pos:end="275:70">-&gt;</operator><name pos:start="275:71" pos:end="275:74">data</name><index pos:start="275:75" pos:end="275:77">[<expr pos:start="275:76" pos:end="275:76"><literal type="number" pos:start="275:76" pos:end="275:76">0</literal></expr>]</index></name><operator pos:start="275:78" pos:end="275:78">+</operator><literal type="number" pos:start="275:79" pos:end="275:79">4</literal></expr></argument>, <argument pos:start="275:82" pos:end="275:91"><expr pos:start="275:82" pos:end="275:91"><name pos:start="275:82" pos:end="275:91"><name pos:start="275:82" pos:end="275:82">s</name><operator pos:start="275:83" pos:end="275:84">-&gt;</operator><name pos:start="275:85" pos:end="275:88">temp</name><index pos:start="275:89" pos:end="275:91">[<expr pos:start="275:90" pos:end="275:90"><literal type="number" pos:start="275:90" pos:end="275:90">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="275:94" pos:end="275:100"><expr pos:start="275:94" pos:end="275:100"><name pos:start="275:94" pos:end="275:98">width</name><operator pos:start="275:99" pos:end="275:99">-</operator><literal type="number" pos:start="275:100" pos:end="275:100">4</literal></expr></argument>, <argument pos:start="275:103" pos:end="275:108"><expr pos:start="275:103" pos:end="275:108"><operator pos:start="275:103" pos:end="275:103">&amp;</operator><name pos:start="275:104" pos:end="275:108">lefty</name></expr></argument>, <argument pos:start="275:111" pos:end="275:119"><expr pos:start="275:111" pos:end="275:119"><operator pos:start="275:111" pos:end="275:111">&amp;</operator><name pos:start="275:112" pos:end="275:119">lefttopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="277:17" pos:end="287:17"><if pos:start="277:17" pos:end="287:17">if<condition pos:start="277:19" pos:end="277:47">(<expr pos:start="277:20" pos:end="277:46"><operator pos:start="277:20" pos:end="277:20">!</operator><operator pos:start="277:21" pos:end="277:21">(</operator><name pos:start="277:22" pos:end="277:29"><name pos:start="277:22" pos:end="277:22">s</name><operator pos:start="277:23" pos:end="277:24">-&gt;</operator><name pos:start="277:25" pos:end="277:29">flags</name></name><operator pos:start="277:30" pos:end="277:30">&amp;</operator><name pos:start="277:31" pos:end="277:45">CODEC_FLAG_GRAY</name><operator pos:start="277:46" pos:end="277:46">)</operator></expr>)</condition><block pos:start="277:48" pos:end="287:17">{<block_content pos:start="279:21" pos:end="285:126">

                    <expr_stmt pos:start="279:21" pos:end="279:44"><expr pos:start="279:21" pos:end="279:43"><name pos:start="279:21" pos:end="279:28">lefttopu</name><operator pos:start="279:29" pos:end="279:29">=</operator> <name pos:start="279:31" pos:end="279:43"><name pos:start="279:31" pos:end="279:31">p</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:37">data</name><index pos:start="279:38" pos:end="279:40">[<expr pos:start="279:39" pos:end="279:39"><literal type="number" pos:start="279:39" pos:end="279:39">1</literal></expr>]</index><index pos:start="279:41" pos:end="279:43">[<expr pos:start="279:42" pos:end="279:42"><literal type="number" pos:start="279:42" pos:end="279:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:44"><expr pos:start="281:21" pos:end="281:43"><name pos:start="281:21" pos:end="281:28">lefttopv</name><operator pos:start="281:29" pos:end="281:29">=</operator> <name pos:start="281:31" pos:end="281:43"><name pos:start="281:31" pos:end="281:31">p</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:37">data</name><index pos:start="281:38" pos:end="281:40">[<expr pos:start="281:39" pos:end="281:39"><literal type="number" pos:start="281:39" pos:end="281:39">2</literal></expr>]</index><index pos:start="281:41" pos:end="281:43">[<expr pos:start="281:42" pos:end="281:42"><literal type="number" pos:start="281:42" pos:end="281:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:126"><expr pos:start="283:21" pos:end="283:125"><call pos:start="283:21" pos:end="283:125"><name pos:start="283:21" pos:end="283:41">add_median_prediction</name><argument_list pos:start="283:42" pos:end="283:125">(<argument pos:start="283:43" pos:end="283:69"><expr pos:start="283:43" pos:end="283:69"><name pos:start="283:43" pos:end="283:52"><name pos:start="283:43" pos:end="283:43">p</name><operator pos:start="283:44" pos:end="283:45">-&gt;</operator><name pos:start="283:46" pos:end="283:49">data</name><index pos:start="283:50" pos:end="283:52">[<expr pos:start="283:51" pos:end="283:51"><literal type="number" pos:start="283:51" pos:end="283:51">1</literal></expr>]</index></name> <operator pos:start="283:54" pos:end="283:54">+</operator> <name pos:start="283:56" pos:end="283:67">fake_ustride</name><operator pos:start="283:68" pos:end="283:68">+</operator><literal type="number" pos:start="283:69" pos:end="283:69">2</literal></expr></argument>, <argument pos:start="283:72" pos:end="283:83"><expr pos:start="283:72" pos:end="283:83"><name pos:start="283:72" pos:end="283:81"><name pos:start="283:72" pos:end="283:72">p</name><operator pos:start="283:73" pos:end="283:74">-&gt;</operator><name pos:start="283:75" pos:end="283:78">data</name><index pos:start="283:79" pos:end="283:81">[<expr pos:start="283:80" pos:end="283:80"><literal type="number" pos:start="283:80" pos:end="283:80">1</literal></expr>]</index></name><operator pos:start="283:82" pos:end="283:82">+</operator><literal type="number" pos:start="283:83" pos:end="283:83">2</literal></expr></argument>, <argument pos:start="283:86" pos:end="283:95"><expr pos:start="283:86" pos:end="283:95"><name pos:start="283:86" pos:end="283:95"><name pos:start="283:86" pos:end="283:86">s</name><operator pos:start="283:87" pos:end="283:88">-&gt;</operator><name pos:start="283:89" pos:end="283:92">temp</name><index pos:start="283:93" pos:end="283:95">[<expr pos:start="283:94" pos:end="283:94"><literal type="number" pos:start="283:94" pos:end="283:94">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:98" pos:end="283:105"><expr pos:start="283:98" pos:end="283:105"><name pos:start="283:98" pos:end="283:103">width2</name><operator pos:start="283:104" pos:end="283:104">-</operator><literal type="number" pos:start="283:105" pos:end="283:105">2</literal></expr></argument>, <argument pos:start="283:108" pos:end="283:113"><expr pos:start="283:108" pos:end="283:113"><operator pos:start="283:108" pos:end="283:108">&amp;</operator><name pos:start="283:109" pos:end="283:113">leftu</name></expr></argument>, <argument pos:start="283:116" pos:end="283:124"><expr pos:start="283:116" pos:end="283:124"><operator pos:start="283:116" pos:end="283:116">&amp;</operator><name pos:start="283:117" pos:end="283:124">lefttopu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:126"><expr pos:start="285:21" pos:end="285:125"><call pos:start="285:21" pos:end="285:125"><name pos:start="285:21" pos:end="285:41">add_median_prediction</name><argument_list pos:start="285:42" pos:end="285:125">(<argument pos:start="285:43" pos:end="285:69"><expr pos:start="285:43" pos:end="285:69"><name pos:start="285:43" pos:end="285:52"><name pos:start="285:43" pos:end="285:43">p</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:49">data</name><index pos:start="285:50" pos:end="285:52">[<expr pos:start="285:51" pos:end="285:51"><literal type="number" pos:start="285:51" pos:end="285:51">2</literal></expr>]</index></name> <operator pos:start="285:54" pos:end="285:54">+</operator> <name pos:start="285:56" pos:end="285:67">fake_vstride</name><operator pos:start="285:68" pos:end="285:68">+</operator><literal type="number" pos:start="285:69" pos:end="285:69">2</literal></expr></argument>, <argument pos:start="285:72" pos:end="285:83"><expr pos:start="285:72" pos:end="285:83"><name pos:start="285:72" pos:end="285:81"><name pos:start="285:72" pos:end="285:72">p</name><operator pos:start="285:73" pos:end="285:74">-&gt;</operator><name pos:start="285:75" pos:end="285:78">data</name><index pos:start="285:79" pos:end="285:81">[<expr pos:start="285:80" pos:end="285:80"><literal type="number" pos:start="285:80" pos:end="285:80">2</literal></expr>]</index></name><operator pos:start="285:82" pos:end="285:82">+</operator><literal type="number" pos:start="285:83" pos:end="285:83">2</literal></expr></argument>, <argument pos:start="285:86" pos:end="285:95"><expr pos:start="285:86" pos:end="285:95"><name pos:start="285:86" pos:end="285:95"><name pos:start="285:86" pos:end="285:86">s</name><operator pos:start="285:87" pos:end="285:88">-&gt;</operator><name pos:start="285:89" pos:end="285:92">temp</name><index pos:start="285:93" pos:end="285:95">[<expr pos:start="285:94" pos:end="285:94"><literal type="number" pos:start="285:94" pos:end="285:94">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:98" pos:end="285:105"><expr pos:start="285:98" pos:end="285:105"><name pos:start="285:98" pos:end="285:103">width2</name><operator pos:start="285:104" pos:end="285:104">-</operator><literal type="number" pos:start="285:105" pos:end="285:105">2</literal></expr></argument>, <argument pos:start="285:108" pos:end="285:113"><expr pos:start="285:108" pos:end="285:113"><operator pos:start="285:108" pos:end="285:108">&amp;</operator><name pos:start="285:109" pos:end="285:113">leftv</name></expr></argument>, <argument pos:start="285:116" pos:end="285:124"><expr pos:start="285:116" pos:end="285:124"><operator pos:start="285:116" pos:end="285:116">&amp;</operator><name pos:start="285:117" pos:end="285:124">lefttopv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:20"><expr pos:start="289:17" pos:end="289:19"><name pos:start="289:17" pos:end="289:17">y</name><operator pos:start="289:18" pos:end="289:19">++</operator></expr>;</expr_stmt> <expr_stmt pos:start="289:22" pos:end="289:26"><expr pos:start="289:22" pos:end="289:25"><name pos:start="289:22" pos:end="289:23">cy</name><operator pos:start="289:24" pos:end="289:25">++</operator></expr>;</expr_stmt>

                

                <for pos:start="293:17" pos:end="343:17">for<control pos:start="293:20" pos:end="293:41">(<init pos:start="293:21" pos:end="293:21">;</init> <condition pos:start="293:23" pos:end="293:31"><expr pos:start="293:23" pos:end="293:30"><name pos:start="293:23" pos:end="293:23">y</name><operator pos:start="293:24" pos:end="293:24">&lt;</operator><name pos:start="293:25" pos:end="293:30">height</name></expr>;</condition> <incr pos:start="293:33" pos:end="293:40"><expr pos:start="293:33" pos:end="293:35"><name pos:start="293:33" pos:end="293:33">y</name><operator pos:start="293:34" pos:end="293:35">++</operator></expr><operator pos:start="293:36" pos:end="293:36">,</operator><expr pos:start="293:37" pos:end="293:40"><name pos:start="293:37" pos:end="293:38">cy</name><operator pos:start="293:39" pos:end="293:40">++</operator></expr></incr>)</control><block pos:start="293:42" pos:end="343:17">{<block_content pos:start="295:21" pos:end="341:21">

                    <decl_stmt pos:start="295:21" pos:end="295:48"><decl pos:start="295:21" pos:end="295:33"><type pos:start="295:21" pos:end="295:29"><name pos:start="295:21" pos:end="295:27">uint8_t</name> <modifier pos:start="295:29" pos:end="295:29">*</modifier></type><name pos:start="295:30" pos:end="295:33">ydst</name></decl>, <decl pos:start="295:36" pos:end="295:40"><type ref="prev" pos:start="295:21" pos:end="295:29"><modifier pos:start="295:36" pos:end="295:36">*</modifier></type><name pos:start="295:37" pos:end="295:40">udst</name></decl>, <decl pos:start="295:43" pos:end="295:47"><type ref="prev" pos:start="295:21" pos:end="295:29"><modifier pos:start="295:43" pos:end="295:43">*</modifier></type><name pos:start="295:44" pos:end="295:47">vdst</name></decl>;</decl_stmt>



                    <if_stmt pos:start="299:21" pos:end="315:21"><if pos:start="299:21" pos:end="315:21">if<condition pos:start="299:23" pos:end="299:44">(<expr pos:start="299:24" pos:end="299:43"><name pos:start="299:24" pos:end="299:39"><name pos:start="299:24" pos:end="299:24">s</name><operator pos:start="299:25" pos:end="299:26">-&gt;</operator><name pos:start="299:27" pos:end="299:39">bitstream_bpp</name></name><operator pos:start="299:40" pos:end="299:41">==</operator><literal type="number" pos:start="299:42" pos:end="299:43">12</literal></expr>)</condition><block pos:start="299:45" pos:end="315:21">{<block_content pos:start="301:25" pos:end="313:44">

                        <while pos:start="301:25" pos:end="311:25">while<condition pos:start="301:30" pos:end="301:39">(<expr pos:start="301:31" pos:end="301:38"><literal type="number" pos:start="301:31" pos:end="301:31">2</literal><operator pos:start="301:32" pos:end="301:32">*</operator><name pos:start="301:33" pos:end="301:34">cy</name> <operator pos:start="301:36" pos:end="301:36">&gt;</operator> <name pos:start="301:38" pos:end="301:38">y</name></expr>)</condition><block pos:start="301:40" pos:end="311:25">{<block_content pos:start="303:29" pos:end="309:32">

                            <expr_stmt pos:start="303:29" pos:end="303:60"><expr pos:start="303:29" pos:end="303:59"><call pos:start="303:29" pos:end="303:59"><name pos:start="303:29" pos:end="303:49">decode_gray_bitstream</name><argument_list pos:start="303:50" pos:end="303:59">(<argument pos:start="303:51" pos:end="303:51"><expr pos:start="303:51" pos:end="303:51"><name pos:start="303:51" pos:end="303:51">s</name></expr></argument>, <argument pos:start="303:54" pos:end="303:58"><expr pos:start="303:54" pos:end="303:58"><name pos:start="303:54" pos:end="303:58">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="305:29" pos:end="305:64"><expr pos:start="305:29" pos:end="305:63"><name pos:start="305:29" pos:end="305:32">ydst</name><operator pos:start="305:33" pos:end="305:33">=</operator> <name pos:start="305:35" pos:end="305:44"><name pos:start="305:35" pos:end="305:35">p</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:41">data</name><index pos:start="305:42" pos:end="305:44">[<expr pos:start="305:43" pos:end="305:43"><literal type="number" pos:start="305:43" pos:end="305:43">0</literal></expr>]</index></name> <operator pos:start="305:46" pos:end="305:46">+</operator> <name pos:start="305:48" pos:end="305:61"><name pos:start="305:48" pos:end="305:48">p</name><operator pos:start="305:49" pos:end="305:50">-&gt;</operator><name pos:start="305:51" pos:end="305:58">linesize</name><index pos:start="305:59" pos:end="305:61">[<expr pos:start="305:60" pos:end="305:60"><literal type="number" pos:start="305:60" pos:end="305:60">0</literal></expr>]</index></name><operator pos:start="305:62" pos:end="305:62">*</operator><name pos:start="305:63" pos:end="305:63">y</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="307:29" pos:end="307:115"><expr pos:start="307:29" pos:end="307:114"><call pos:start="307:29" pos:end="307:114"><name pos:start="307:29" pos:end="307:49">add_median_prediction</name><argument_list pos:start="307:50" pos:end="307:114">(<argument pos:start="307:51" pos:end="307:54"><expr pos:start="307:51" pos:end="307:54"><name pos:start="307:51" pos:end="307:54">ydst</name></expr></argument>, <argument pos:start="307:57" pos:end="307:75"><expr pos:start="307:57" pos:end="307:75"><name pos:start="307:57" pos:end="307:60">ydst</name> <operator pos:start="307:62" pos:end="307:62">-</operator> <name pos:start="307:64" pos:end="307:75">fake_ystride</name></expr></argument>, <argument pos:start="307:78" pos:end="307:87"><expr pos:start="307:78" pos:end="307:87"><name pos:start="307:78" pos:end="307:87"><name pos:start="307:78" pos:end="307:78">s</name><operator pos:start="307:79" pos:end="307:80">-&gt;</operator><name pos:start="307:81" pos:end="307:84">temp</name><index pos:start="307:85" pos:end="307:87">[<expr pos:start="307:86" pos:end="307:86"><literal type="number" pos:start="307:86" pos:end="307:86">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:90" pos:end="307:94"><expr pos:start="307:90" pos:end="307:94"><name pos:start="307:90" pos:end="307:94">width</name></expr></argument>, <argument pos:start="307:97" pos:end="307:102"><expr pos:start="307:97" pos:end="307:102"><operator pos:start="307:97" pos:end="307:97">&amp;</operator><name pos:start="307:98" pos:end="307:102">lefty</name></expr></argument>, <argument pos:start="307:105" pos:end="307:113"><expr pos:start="307:105" pos:end="307:113"><operator pos:start="307:105" pos:end="307:105">&amp;</operator><name pos:start="307:106" pos:end="307:113">lefttopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="309:29" pos:end="309:32"><expr pos:start="309:29" pos:end="309:31"><name pos:start="309:29" pos:end="309:29">y</name><operator pos:start="309:30" pos:end="309:31">++</operator></expr>;</expr_stmt>

                        </block_content>}</block></while>

                        <if_stmt pos:start="313:25" pos:end="313:44"><if pos:start="313:25" pos:end="313:44">if<condition pos:start="313:27" pos:end="313:37">(<expr pos:start="313:28" pos:end="313:36"><name pos:start="313:28" pos:end="313:28">y</name><operator pos:start="313:29" pos:end="313:30">&gt;=</operator><name pos:start="313:31" pos:end="313:36">height</name></expr>)</condition><block type="pseudo" pos:start="313:39" pos:end="313:44"><block_content pos:start="313:39" pos:end="313:44"> <break pos:start="313:39" pos:end="313:44">break;</break></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:37"><expr pos:start="317:21" pos:end="317:36"><call pos:start="317:21" pos:end="317:36"><name pos:start="317:21" pos:end="317:30">draw_slice</name><argument_list pos:start="317:31" pos:end="317:36">(<argument pos:start="317:32" pos:end="317:32"><expr pos:start="317:32" pos:end="317:32"><name pos:start="317:32" pos:end="317:32">s</name></expr></argument>, <argument pos:start="317:35" pos:end="317:35"><expr pos:start="317:35" pos:end="317:35"><name pos:start="317:35" pos:end="317:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="321:21" pos:end="321:51"><expr pos:start="321:21" pos:end="321:50"><call pos:start="321:21" pos:end="321:50"><name pos:start="321:21" pos:end="321:40">decode_422_bitstream</name><argument_list pos:start="321:41" pos:end="321:50">(<argument pos:start="321:42" pos:end="321:42"><expr pos:start="321:42" pos:end="321:42"><name pos:start="321:42" pos:end="321:42">s</name></expr></argument>, <argument pos:start="321:45" pos:end="321:49"><expr pos:start="321:45" pos:end="321:49"><name pos:start="321:45" pos:end="321:49">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="325:21" pos:end="325:56"><expr pos:start="325:21" pos:end="325:55"><name pos:start="325:21" pos:end="325:24">ydst</name><operator pos:start="325:25" pos:end="325:25">=</operator> <name pos:start="325:27" pos:end="325:36"><name pos:start="325:27" pos:end="325:27">p</name><operator pos:start="325:28" pos:end="325:29">-&gt;</operator><name pos:start="325:30" pos:end="325:33">data</name><index pos:start="325:34" pos:end="325:36">[<expr pos:start="325:35" pos:end="325:35"><literal type="number" pos:start="325:35" pos:end="325:35">0</literal></expr>]</index></name> <operator pos:start="325:38" pos:end="325:38">+</operator> <name pos:start="325:40" pos:end="325:53"><name pos:start="325:40" pos:end="325:40">p</name><operator pos:start="325:41" pos:end="325:42">-&gt;</operator><name pos:start="325:43" pos:end="325:50">linesize</name><index pos:start="325:51" pos:end="325:53">[<expr pos:start="325:52" pos:end="325:52"><literal type="number" pos:start="325:52" pos:end="325:52">0</literal></expr>]</index></name><operator pos:start="325:54" pos:end="325:54">*</operator><name pos:start="325:55" pos:end="325:55">y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:57"><expr pos:start="327:21" pos:end="327:56"><name pos:start="327:21" pos:end="327:24">udst</name><operator pos:start="327:25" pos:end="327:25">=</operator> <name pos:start="327:27" pos:end="327:36"><name pos:start="327:27" pos:end="327:27">p</name><operator pos:start="327:28" pos:end="327:29">-&gt;</operator><name pos:start="327:30" pos:end="327:33">data</name><index pos:start="327:34" pos:end="327:36">[<expr pos:start="327:35" pos:end="327:35"><literal type="number" pos:start="327:35" pos:end="327:35">1</literal></expr>]</index></name> <operator pos:start="327:38" pos:end="327:38">+</operator> <name pos:start="327:40" pos:end="327:53"><name pos:start="327:40" pos:end="327:40">p</name><operator pos:start="327:41" pos:end="327:42">-&gt;</operator><name pos:start="327:43" pos:end="327:50">linesize</name><index pos:start="327:51" pos:end="327:53">[<expr pos:start="327:52" pos:end="327:52"><literal type="number" pos:start="327:52" pos:end="327:52">1</literal></expr>]</index></name><operator pos:start="327:54" pos:end="327:54">*</operator><name pos:start="327:55" pos:end="327:56">cy</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:57"><expr pos:start="329:21" pos:end="329:56"><name pos:start="329:21" pos:end="329:24">vdst</name><operator pos:start="329:25" pos:end="329:25">=</operator> <name pos:start="329:27" pos:end="329:36"><name pos:start="329:27" pos:end="329:27">p</name><operator pos:start="329:28" pos:end="329:29">-&gt;</operator><name pos:start="329:30" pos:end="329:33">data</name><index pos:start="329:34" pos:end="329:36">[<expr pos:start="329:35" pos:end="329:35"><literal type="number" pos:start="329:35" pos:end="329:35">2</literal></expr>]</index></name> <operator pos:start="329:38" pos:end="329:38">+</operator> <name pos:start="329:40" pos:end="329:53"><name pos:start="329:40" pos:end="329:40">p</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:50">linesize</name><index pos:start="329:51" pos:end="329:53">[<expr pos:start="329:52" pos:end="329:52"><literal type="number" pos:start="329:52" pos:end="329:52">2</literal></expr>]</index></name><operator pos:start="329:54" pos:end="329:54">*</operator><name pos:start="329:55" pos:end="329:56">cy</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="333:21" pos:end="333:107"><expr pos:start="333:21" pos:end="333:106"><call pos:start="333:21" pos:end="333:106"><name pos:start="333:21" pos:end="333:41">add_median_prediction</name><argument_list pos:start="333:42" pos:end="333:106">(<argument pos:start="333:43" pos:end="333:46"><expr pos:start="333:43" pos:end="333:46"><name pos:start="333:43" pos:end="333:46">ydst</name></expr></argument>, <argument pos:start="333:49" pos:end="333:67"><expr pos:start="333:49" pos:end="333:67"><name pos:start="333:49" pos:end="333:52">ydst</name> <operator pos:start="333:54" pos:end="333:54">-</operator> <name pos:start="333:56" pos:end="333:67">fake_ystride</name></expr></argument>, <argument pos:start="333:70" pos:end="333:79"><expr pos:start="333:70" pos:end="333:79"><name pos:start="333:70" pos:end="333:79"><name pos:start="333:70" pos:end="333:70">s</name><operator pos:start="333:71" pos:end="333:72">-&gt;</operator><name pos:start="333:73" pos:end="333:76">temp</name><index pos:start="333:77" pos:end="333:79">[<expr pos:start="333:78" pos:end="333:78"><literal type="number" pos:start="333:78" pos:end="333:78">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="333:82" pos:end="333:86"><expr pos:start="333:82" pos:end="333:86"><name pos:start="333:82" pos:end="333:86">width</name></expr></argument>, <argument pos:start="333:89" pos:end="333:94"><expr pos:start="333:89" pos:end="333:94"><operator pos:start="333:89" pos:end="333:89">&amp;</operator><name pos:start="333:90" pos:end="333:94">lefty</name></expr></argument>, <argument pos:start="333:97" pos:end="333:105"><expr pos:start="333:97" pos:end="333:105"><operator pos:start="333:97" pos:end="333:97">&amp;</operator><name pos:start="333:98" pos:end="333:105">lefttopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="335:21" pos:end="341:21"><if pos:start="335:21" pos:end="341:21">if<condition pos:start="335:23" pos:end="335:51">(<expr pos:start="335:24" pos:end="335:50"><operator pos:start="335:24" pos:end="335:24">!</operator><operator pos:start="335:25" pos:end="335:25">(</operator><name pos:start="335:26" pos:end="335:33"><name pos:start="335:26" pos:end="335:26">s</name><operator pos:start="335:27" pos:end="335:28">-&gt;</operator><name pos:start="335:29" pos:end="335:33">flags</name></name><operator pos:start="335:34" pos:end="335:34">&amp;</operator><name pos:start="335:35" pos:end="335:49">CODEC_FLAG_GRAY</name><operator pos:start="335:50" pos:end="335:50">)</operator></expr>)</condition><block pos:start="335:52" pos:end="341:21">{<block_content pos:start="337:25" pos:end="339:112">

                        <expr_stmt pos:start="337:25" pos:end="337:112"><expr pos:start="337:25" pos:end="337:111"><call pos:start="337:25" pos:end="337:111"><name pos:start="337:25" pos:end="337:45">add_median_prediction</name><argument_list pos:start="337:46" pos:end="337:111">(<argument pos:start="337:47" pos:end="337:50"><expr pos:start="337:47" pos:end="337:50"><name pos:start="337:47" pos:end="337:50">udst</name></expr></argument>, <argument pos:start="337:53" pos:end="337:71"><expr pos:start="337:53" pos:end="337:71"><name pos:start="337:53" pos:end="337:56">udst</name> <operator pos:start="337:58" pos:end="337:58">-</operator> <name pos:start="337:60" pos:end="337:71">fake_ustride</name></expr></argument>, <argument pos:start="337:74" pos:end="337:83"><expr pos:start="337:74" pos:end="337:83"><name pos:start="337:74" pos:end="337:83"><name pos:start="337:74" pos:end="337:74">s</name><operator pos:start="337:75" pos:end="337:76">-&gt;</operator><name pos:start="337:77" pos:end="337:80">temp</name><index pos:start="337:81" pos:end="337:83">[<expr pos:start="337:82" pos:end="337:82"><literal type="number" pos:start="337:82" pos:end="337:82">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="337:86" pos:end="337:91"><expr pos:start="337:86" pos:end="337:91"><name pos:start="337:86" pos:end="337:91">width2</name></expr></argument>, <argument pos:start="337:94" pos:end="337:99"><expr pos:start="337:94" pos:end="337:99"><operator pos:start="337:94" pos:end="337:94">&amp;</operator><name pos:start="337:95" pos:end="337:99">leftu</name></expr></argument>, <argument pos:start="337:102" pos:end="337:110"><expr pos:start="337:102" pos:end="337:110"><operator pos:start="337:102" pos:end="337:102">&amp;</operator><name pos:start="337:103" pos:end="337:110">lefttopu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="339:25" pos:end="339:112"><expr pos:start="339:25" pos:end="339:111"><call pos:start="339:25" pos:end="339:111"><name pos:start="339:25" pos:end="339:45">add_median_prediction</name><argument_list pos:start="339:46" pos:end="339:111">(<argument pos:start="339:47" pos:end="339:50"><expr pos:start="339:47" pos:end="339:50"><name pos:start="339:47" pos:end="339:50">vdst</name></expr></argument>, <argument pos:start="339:53" pos:end="339:71"><expr pos:start="339:53" pos:end="339:71"><name pos:start="339:53" pos:end="339:56">vdst</name> <operator pos:start="339:58" pos:end="339:58">-</operator> <name pos:start="339:60" pos:end="339:71">fake_vstride</name></expr></argument>, <argument pos:start="339:74" pos:end="339:83"><expr pos:start="339:74" pos:end="339:83"><name pos:start="339:74" pos:end="339:83"><name pos:start="339:74" pos:end="339:74">s</name><operator pos:start="339:75" pos:end="339:76">-&gt;</operator><name pos:start="339:77" pos:end="339:80">temp</name><index pos:start="339:81" pos:end="339:83">[<expr pos:start="339:82" pos:end="339:82"><literal type="number" pos:start="339:82" pos:end="339:82">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="339:86" pos:end="339:91"><expr pos:start="339:86" pos:end="339:91"><name pos:start="339:86" pos:end="339:91">width2</name></expr></argument>, <argument pos:start="339:94" pos:end="339:99"><expr pos:start="339:94" pos:end="339:99"><operator pos:start="339:94" pos:end="339:94">&amp;</operator><name pos:start="339:95" pos:end="339:99">leftv</name></expr></argument>, <argument pos:start="339:102" pos:end="339:110"><expr pos:start="339:102" pos:end="339:110"><operator pos:start="339:102" pos:end="339:102">&amp;</operator><name pos:start="339:103" pos:end="339:110">lefttopv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="347:17" pos:end="347:38"><expr pos:start="347:17" pos:end="347:37"><call pos:start="347:17" pos:end="347:37"><name pos:start="347:17" pos:end="347:26">draw_slice</name><argument_list pos:start="347:27" pos:end="347:37">(<argument pos:start="347:28" pos:end="347:28"><expr pos:start="347:28" pos:end="347:28"><name pos:start="347:28" pos:end="347:28">s</name></expr></argument>, <argument pos:start="347:31" pos:end="347:36"><expr pos:start="347:31" pos:end="347:36"><name pos:start="347:31" pos:end="347:36">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="349:17" pos:end="349:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="355:6" pos:end="445:5">else<block pos:start="355:10" pos:end="445:5">{<block_content pos:start="357:9" pos:end="443:9">

        <decl_stmt pos:start="357:9" pos:end="357:14"><decl pos:start="357:9" pos:end="357:13"><type pos:start="357:9" pos:end="357:11"><name pos:start="357:9" pos:end="357:11">int</name></type> <name pos:start="357:13" pos:end="357:13">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="359:9" pos:end="359:32"><decl pos:start="359:9" pos:end="359:17"><type pos:start="359:9" pos:end="359:11"><name pos:start="359:9" pos:end="359:11">int</name></type> <name pos:start="359:13" pos:end="359:17">leftr</name></decl>, <decl pos:start="359:20" pos:end="359:24"><type ref="prev" pos:start="359:9" pos:end="359:11"/><name pos:start="359:20" pos:end="359:24">leftg</name></decl>, <decl pos:start="359:27" pos:end="359:31"><type ref="prev" pos:start="359:9" pos:end="359:11"/><name pos:start="359:27" pos:end="359:31">leftb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="361:9" pos:end="361:55"><decl pos:start="361:9" pos:end="361:54"><type pos:start="361:9" pos:end="361:17"><specifier pos:start="361:9" pos:end="361:13">const</specifier> <name pos:start="361:15" pos:end="361:17">int</name></type> <name pos:start="361:19" pos:end="361:27">last_line</name><init pos:start="361:28" pos:end="361:54">= <expr pos:start="361:30" pos:end="361:54"><operator pos:start="361:30" pos:end="361:30">(</operator><name pos:start="361:31" pos:end="361:36">height</name><operator pos:start="361:37" pos:end="361:37">-</operator><literal type="number" pos:start="361:38" pos:end="361:38">1</literal><operator pos:start="361:39" pos:end="361:39">)</operator><operator pos:start="361:40" pos:end="361:40">*</operator><name pos:start="361:41" pos:end="361:54"><name pos:start="361:41" pos:end="361:41">p</name><operator pos:start="361:42" pos:end="361:43">-&gt;</operator><name pos:start="361:44" pos:end="361:51">linesize</name><index pos:start="361:52" pos:end="361:54">[<expr pos:start="361:53" pos:end="361:53"><literal type="number" pos:start="361:53" pos:end="361:53">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        

        <if_stmt pos:start="365:9" pos:end="385:9"><if pos:start="365:9" pos:end="375:9">if<condition pos:start="365:11" pos:end="365:32">(<expr pos:start="365:12" pos:end="365:31"><name pos:start="365:12" pos:end="365:27"><name pos:start="365:12" pos:end="365:12">s</name><operator pos:start="365:13" pos:end="365:14">-&gt;</operator><name pos:start="365:15" pos:end="365:27">bitstream_bpp</name></name><operator pos:start="365:28" pos:end="365:29">==</operator><literal type="number" pos:start="365:30" pos:end="365:31">32</literal></expr>)</condition><block pos:start="365:33" pos:end="375:9">{<block_content pos:start="367:20" pos:end="373:64">

                   <expr_stmt pos:start="367:20" pos:end="367:64"><expr pos:start="367:20" pos:end="367:63"><name pos:start="367:20" pos:end="367:42"><name pos:start="367:20" pos:end="367:20">p</name><operator pos:start="367:21" pos:end="367:22">-&gt;</operator><name pos:start="367:23" pos:end="367:26">data</name><index pos:start="367:27" pos:end="367:29">[<expr pos:start="367:28" pos:end="367:28"><literal type="number" pos:start="367:28" pos:end="367:28">0</literal></expr>]</index><index pos:start="367:30" pos:end="367:42">[<expr pos:start="367:31" pos:end="367:41"><name pos:start="367:31" pos:end="367:39">last_line</name><operator pos:start="367:40" pos:end="367:40">+</operator><literal type="number" pos:start="367:41" pos:end="367:41">3</literal></expr>]</index></name><operator pos:start="367:43" pos:end="367:43">=</operator> <call pos:start="367:45" pos:end="367:63"><name pos:start="367:45" pos:end="367:52">get_bits</name><argument_list pos:start="367:53" pos:end="367:63">(<argument pos:start="367:54" pos:end="367:59"><expr pos:start="367:54" pos:end="367:59"><operator pos:start="367:54" pos:end="367:54">&amp;</operator><name pos:start="367:55" pos:end="367:59"><name pos:start="367:55" pos:end="367:55">s</name><operator pos:start="367:56" pos:end="367:57">-&gt;</operator><name pos:start="367:58" pos:end="367:59">gb</name></name></expr></argument>, <argument pos:start="367:62" pos:end="367:62"><expr pos:start="367:62" pos:end="367:62"><literal type="number" pos:start="367:62" pos:end="367:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:64"><expr pos:start="369:13" pos:end="369:63"><name pos:start="369:13" pos:end="369:17">leftr</name><operator pos:start="369:18" pos:end="369:18">=</operator> <name pos:start="369:20" pos:end="369:42"><name pos:start="369:20" pos:end="369:20">p</name><operator pos:start="369:21" pos:end="369:22">-&gt;</operator><name pos:start="369:23" pos:end="369:26">data</name><index pos:start="369:27" pos:end="369:29">[<expr pos:start="369:28" pos:end="369:28"><literal type="number" pos:start="369:28" pos:end="369:28">0</literal></expr>]</index><index pos:start="369:30" pos:end="369:42">[<expr pos:start="369:31" pos:end="369:41"><name pos:start="369:31" pos:end="369:39">last_line</name><operator pos:start="369:40" pos:end="369:40">+</operator><literal type="number" pos:start="369:41" pos:end="369:41">2</literal></expr>]</index></name><operator pos:start="369:43" pos:end="369:43">=</operator> <call pos:start="369:45" pos:end="369:63"><name pos:start="369:45" pos:end="369:52">get_bits</name><argument_list pos:start="369:53" pos:end="369:63">(<argument pos:start="369:54" pos:end="369:59"><expr pos:start="369:54" pos:end="369:59"><operator pos:start="369:54" pos:end="369:54">&amp;</operator><name pos:start="369:55" pos:end="369:59"><name pos:start="369:55" pos:end="369:55">s</name><operator pos:start="369:56" pos:end="369:57">-&gt;</operator><name pos:start="369:58" pos:end="369:59">gb</name></name></expr></argument>, <argument pos:start="369:62" pos:end="369:62"><expr pos:start="369:62" pos:end="369:62"><literal type="number" pos:start="369:62" pos:end="369:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:64"><expr pos:start="371:13" pos:end="371:63"><name pos:start="371:13" pos:end="371:17">leftg</name><operator pos:start="371:18" pos:end="371:18">=</operator> <name pos:start="371:20" pos:end="371:42"><name pos:start="371:20" pos:end="371:20">p</name><operator pos:start="371:21" pos:end="371:22">-&gt;</operator><name pos:start="371:23" pos:end="371:26">data</name><index pos:start="371:27" pos:end="371:29">[<expr pos:start="371:28" pos:end="371:28"><literal type="number" pos:start="371:28" pos:end="371:28">0</literal></expr>]</index><index pos:start="371:30" pos:end="371:42">[<expr pos:start="371:31" pos:end="371:41"><name pos:start="371:31" pos:end="371:39">last_line</name><operator pos:start="371:40" pos:end="371:40">+</operator><literal type="number" pos:start="371:41" pos:end="371:41">1</literal></expr>]</index></name><operator pos:start="371:43" pos:end="371:43">=</operator> <call pos:start="371:45" pos:end="371:63"><name pos:start="371:45" pos:end="371:52">get_bits</name><argument_list pos:start="371:53" pos:end="371:63">(<argument pos:start="371:54" pos:end="371:59"><expr pos:start="371:54" pos:end="371:59"><operator pos:start="371:54" pos:end="371:54">&amp;</operator><name pos:start="371:55" pos:end="371:59"><name pos:start="371:55" pos:end="371:55">s</name><operator pos:start="371:56" pos:end="371:57">-&gt;</operator><name pos:start="371:58" pos:end="371:59">gb</name></name></expr></argument>, <argument pos:start="371:62" pos:end="371:62"><expr pos:start="371:62" pos:end="371:62"><literal type="number" pos:start="371:62" pos:end="371:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:64"><expr pos:start="373:13" pos:end="373:63"><name pos:start="373:13" pos:end="373:17">leftb</name><operator pos:start="373:18" pos:end="373:18">=</operator> <name pos:start="373:20" pos:end="373:42"><name pos:start="373:20" pos:end="373:20">p</name><operator pos:start="373:21" pos:end="373:22">-&gt;</operator><name pos:start="373:23" pos:end="373:26">data</name><index pos:start="373:27" pos:end="373:29">[<expr pos:start="373:28" pos:end="373:28"><literal type="number" pos:start="373:28" pos:end="373:28">0</literal></expr>]</index><index pos:start="373:30" pos:end="373:42">[<expr pos:start="373:31" pos:end="373:41"><name pos:start="373:31" pos:end="373:39">last_line</name><operator pos:start="373:40" pos:end="373:40">+</operator><literal type="number" pos:start="373:41" pos:end="373:41">0</literal></expr>]</index></name><operator pos:start="373:43" pos:end="373:43">=</operator> <call pos:start="373:45" pos:end="373:63"><name pos:start="373:45" pos:end="373:52">get_bits</name><argument_list pos:start="373:53" pos:end="373:63">(<argument pos:start="373:54" pos:end="373:59"><expr pos:start="373:54" pos:end="373:59"><operator pos:start="373:54" pos:end="373:54">&amp;</operator><name pos:start="373:55" pos:end="373:59"><name pos:start="373:55" pos:end="373:55">s</name><operator pos:start="373:56" pos:end="373:57">-&gt;</operator><name pos:start="373:58" pos:end="373:59">gb</name></name></expr></argument>, <argument pos:start="373:62" pos:end="373:62"><expr pos:start="373:62" pos:end="373:62"><literal type="number" pos:start="373:62" pos:end="373:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="375:10" pos:end="385:9">else<block pos:start="375:14" pos:end="385:9">{<block_content pos:start="377:13" pos:end="383:33">

            <expr_stmt pos:start="377:13" pos:end="377:64"><expr pos:start="377:13" pos:end="377:63"><name pos:start="377:13" pos:end="377:17">leftr</name><operator pos:start="377:18" pos:end="377:18">=</operator> <name pos:start="377:20" pos:end="377:42"><name pos:start="377:20" pos:end="377:20">p</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:26">data</name><index pos:start="377:27" pos:end="377:29">[<expr pos:start="377:28" pos:end="377:28"><literal type="number" pos:start="377:28" pos:end="377:28">0</literal></expr>]</index><index pos:start="377:30" pos:end="377:42">[<expr pos:start="377:31" pos:end="377:41"><name pos:start="377:31" pos:end="377:39">last_line</name><operator pos:start="377:40" pos:end="377:40">+</operator><literal type="number" pos:start="377:41" pos:end="377:41">2</literal></expr>]</index></name><operator pos:start="377:43" pos:end="377:43">=</operator> <call pos:start="377:45" pos:end="377:63"><name pos:start="377:45" pos:end="377:52">get_bits</name><argument_list pos:start="377:53" pos:end="377:63">(<argument pos:start="377:54" pos:end="377:59"><expr pos:start="377:54" pos:end="377:59"><operator pos:start="377:54" pos:end="377:54">&amp;</operator><name pos:start="377:55" pos:end="377:59"><name pos:start="377:55" pos:end="377:55">s</name><operator pos:start="377:56" pos:end="377:57">-&gt;</operator><name pos:start="377:58" pos:end="377:59">gb</name></name></expr></argument>, <argument pos:start="377:62" pos:end="377:62"><expr pos:start="377:62" pos:end="377:62"><literal type="number" pos:start="377:62" pos:end="377:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:64"><expr pos:start="379:13" pos:end="379:63"><name pos:start="379:13" pos:end="379:17">leftg</name><operator pos:start="379:18" pos:end="379:18">=</operator> <name pos:start="379:20" pos:end="379:42"><name pos:start="379:20" pos:end="379:20">p</name><operator pos:start="379:21" pos:end="379:22">-&gt;</operator><name pos:start="379:23" pos:end="379:26">data</name><index pos:start="379:27" pos:end="379:29">[<expr pos:start="379:28" pos:end="379:28"><literal type="number" pos:start="379:28" pos:end="379:28">0</literal></expr>]</index><index pos:start="379:30" pos:end="379:42">[<expr pos:start="379:31" pos:end="379:41"><name pos:start="379:31" pos:end="379:39">last_line</name><operator pos:start="379:40" pos:end="379:40">+</operator><literal type="number" pos:start="379:41" pos:end="379:41">1</literal></expr>]</index></name><operator pos:start="379:43" pos:end="379:43">=</operator> <call pos:start="379:45" pos:end="379:63"><name pos:start="379:45" pos:end="379:52">get_bits</name><argument_list pos:start="379:53" pos:end="379:63">(<argument pos:start="379:54" pos:end="379:59"><expr pos:start="379:54" pos:end="379:59"><operator pos:start="379:54" pos:end="379:54">&amp;</operator><name pos:start="379:55" pos:end="379:59"><name pos:start="379:55" pos:end="379:55">s</name><operator pos:start="379:56" pos:end="379:57">-&gt;</operator><name pos:start="379:58" pos:end="379:59">gb</name></name></expr></argument>, <argument pos:start="379:62" pos:end="379:62"><expr pos:start="379:62" pos:end="379:62"><literal type="number" pos:start="379:62" pos:end="379:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:64"><expr pos:start="381:13" pos:end="381:63"><name pos:start="381:13" pos:end="381:17">leftb</name><operator pos:start="381:18" pos:end="381:18">=</operator> <name pos:start="381:20" pos:end="381:42"><name pos:start="381:20" pos:end="381:20">p</name><operator pos:start="381:21" pos:end="381:22">-&gt;</operator><name pos:start="381:23" pos:end="381:26">data</name><index pos:start="381:27" pos:end="381:29">[<expr pos:start="381:28" pos:end="381:28"><literal type="number" pos:start="381:28" pos:end="381:28">0</literal></expr>]</index><index pos:start="381:30" pos:end="381:42">[<expr pos:start="381:31" pos:end="381:41"><name pos:start="381:31" pos:end="381:39">last_line</name><operator pos:start="381:40" pos:end="381:40">+</operator><literal type="number" pos:start="381:41" pos:end="381:41">0</literal></expr>]</index></name><operator pos:start="381:43" pos:end="381:43">=</operator> <call pos:start="381:45" pos:end="381:63"><name pos:start="381:45" pos:end="381:52">get_bits</name><argument_list pos:start="381:53" pos:end="381:63">(<argument pos:start="381:54" pos:end="381:59"><expr pos:start="381:54" pos:end="381:59"><operator pos:start="381:54" pos:end="381:54">&amp;</operator><name pos:start="381:55" pos:end="381:59"><name pos:start="381:55" pos:end="381:55">s</name><operator pos:start="381:56" pos:end="381:57">-&gt;</operator><name pos:start="381:58" pos:end="381:59">gb</name></name></expr></argument>, <argument pos:start="381:62" pos:end="381:62"><expr pos:start="381:62" pos:end="381:62"><literal type="number" pos:start="381:62" pos:end="381:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:33"><expr pos:start="383:13" pos:end="383:32"><call pos:start="383:13" pos:end="383:32"><name pos:start="383:13" pos:end="383:21">skip_bits</name><argument_list pos:start="383:22" pos:end="383:32">(<argument pos:start="383:23" pos:end="383:28"><expr pos:start="383:23" pos:end="383:28"><operator pos:start="383:23" pos:end="383:23">&amp;</operator><name pos:start="383:24" pos:end="383:28"><name pos:start="383:24" pos:end="383:24">s</name><operator pos:start="383:25" pos:end="383:26">-&gt;</operator><name pos:start="383:27" pos:end="383:28">gb</name></name></expr></argument>, <argument pos:start="383:31" pos:end="383:31"><expr pos:start="383:31" pos:end="383:31"><literal type="number" pos:start="383:31" pos:end="383:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        

        <if_stmt pos:start="389:9" pos:end="443:9"><if pos:start="389:9" pos:end="435:9">if<condition pos:start="389:11" pos:end="389:20">(<expr pos:start="389:12" pos:end="389:19"><name pos:start="389:12" pos:end="389:19"><name pos:start="389:12" pos:end="389:12">s</name><operator pos:start="389:13" pos:end="389:14">-&gt;</operator><name pos:start="389:15" pos:end="389:19">bgr32</name></name></expr>)</condition><block pos:start="389:21" pos:end="435:9">{<block_content pos:start="391:13" pos:end="433:13">

            <switch pos:start="391:13" pos:end="433:13">switch<condition pos:start="391:19" pos:end="391:32">(<expr pos:start="391:20" pos:end="391:31"><name pos:start="391:20" pos:end="391:31"><name pos:start="391:20" pos:end="391:20">s</name><operator pos:start="391:21" pos:end="391:22">-&gt;</operator><name pos:start="391:23" pos:end="391:31">predictor</name></name></expr>)</condition><block pos:start="391:33" pos:end="433:13">{<block_content pos:start="393:13" pos:end="431:68">

            <case pos:start="393:13" pos:end="393:22">case <expr pos:start="393:18" pos:end="393:21"><name pos:start="393:18" pos:end="393:21">LEFT</name></expr>:</case>

            <case pos:start="395:13" pos:end="395:23">case <expr pos:start="395:18" pos:end="395:22"><name pos:start="395:18" pos:end="395:22">PLANE</name></expr>:</case>

                <expr_stmt pos:start="397:17" pos:end="397:49"><expr pos:start="397:17" pos:end="397:48"><call pos:start="397:17" pos:end="397:48"><name pos:start="397:17" pos:end="397:36">decode_bgr_bitstream</name><argument_list pos:start="397:37" pos:end="397:48">(<argument pos:start="397:38" pos:end="397:38"><expr pos:start="397:38" pos:end="397:38"><name pos:start="397:38" pos:end="397:38">s</name></expr></argument>, <argument pos:start="397:41" pos:end="397:47"><expr pos:start="397:41" pos:end="397:47"><name pos:start="397:41" pos:end="397:45">width</name><operator pos:start="397:46" pos:end="397:46">-</operator><literal type="number" pos:start="397:47" pos:end="397:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:113"><expr pos:start="399:17" pos:end="399:112"><call pos:start="399:17" pos:end="399:112"><name pos:start="399:17" pos:end="399:41">add_left_prediction_bgr32</name><argument_list pos:start="399:42" pos:end="399:112">(<argument pos:start="399:43" pos:end="399:66"><expr pos:start="399:43" pos:end="399:66"><name pos:start="399:43" pos:end="399:52"><name pos:start="399:43" pos:end="399:43">p</name><operator pos:start="399:44" pos:end="399:45">-&gt;</operator><name pos:start="399:46" pos:end="399:49">data</name><index pos:start="399:50" pos:end="399:52">[<expr pos:start="399:51" pos:end="399:51"><literal type="number" pos:start="399:51" pos:end="399:51">0</literal></expr>]</index></name> <operator pos:start="399:54" pos:end="399:54">+</operator> <name pos:start="399:56" pos:end="399:64">last_line</name><operator pos:start="399:65" pos:end="399:65">+</operator><literal type="number" pos:start="399:66" pos:end="399:66">4</literal></expr></argument>, <argument pos:start="399:69" pos:end="399:78"><expr pos:start="399:69" pos:end="399:78"><name pos:start="399:69" pos:end="399:78"><name pos:start="399:69" pos:end="399:69">s</name><operator pos:start="399:70" pos:end="399:71">-&gt;</operator><name pos:start="399:72" pos:end="399:75">temp</name><index pos:start="399:76" pos:end="399:78">[<expr pos:start="399:77" pos:end="399:77"><literal type="number" pos:start="399:77" pos:end="399:77">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="399:81" pos:end="399:87"><expr pos:start="399:81" pos:end="399:87"><name pos:start="399:81" pos:end="399:85">width</name><operator pos:start="399:86" pos:end="399:86">-</operator><literal type="number" pos:start="399:87" pos:end="399:87">1</literal></expr></argument>, <argument pos:start="399:90" pos:end="399:95"><expr pos:start="399:90" pos:end="399:95"><operator pos:start="399:90" pos:end="399:90">&amp;</operator><name pos:start="399:91" pos:end="399:95">leftr</name></expr></argument>, <argument pos:start="399:98" pos:end="399:103"><expr pos:start="399:98" pos:end="399:103"><operator pos:start="399:98" pos:end="399:98">&amp;</operator><name pos:start="399:99" pos:end="399:103">leftg</name></expr></argument>, <argument pos:start="399:106" pos:end="399:111"><expr pos:start="399:106" pos:end="399:111"><operator pos:start="399:106" pos:end="399:106">&amp;</operator><name pos:start="399:107" pos:end="399:111">leftb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="403:17" pos:end="423:17">for<control pos:start="403:20" pos:end="403:45">(<init pos:start="403:21" pos:end="403:34"><expr pos:start="403:21" pos:end="403:33"><name pos:start="403:21" pos:end="403:21">y</name><operator pos:start="403:22" pos:end="403:22">=</operator><name pos:start="403:23" pos:end="403:31"><name pos:start="403:23" pos:end="403:23">s</name><operator pos:start="403:24" pos:end="403:25">-&gt;</operator><name pos:start="403:26" pos:end="403:31">height</name></name><operator pos:start="403:32" pos:end="403:32">-</operator><literal type="number" pos:start="403:33" pos:end="403:33">2</literal></expr>;</init> <condition pos:start="403:36" pos:end="403:40"><expr pos:start="403:36" pos:end="403:39"><name pos:start="403:36" pos:end="403:36">y</name><operator pos:start="403:37" pos:end="403:38">&gt;=</operator><literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>;</condition> <incr pos:start="403:42" pos:end="403:44"><expr pos:start="403:42" pos:end="403:44"><name pos:start="403:42" pos:end="403:42">y</name><operator pos:start="403:43" pos:end="403:44">--</operator></expr></incr>)</control><block pos:start="403:46" pos:end="423:17">{<block_content pos:start="405:21" pos:end="421:21"> <comment type="line" pos:start="403:48" pos:end="403:75">//yes its stored upside down</comment>

                    <expr_stmt pos:start="405:21" pos:end="405:51"><expr pos:start="405:21" pos:end="405:50"><call pos:start="405:21" pos:end="405:50"><name pos:start="405:21" pos:end="405:40">decode_bgr_bitstream</name><argument_list pos:start="405:41" pos:end="405:50">(<argument pos:start="405:42" pos:end="405:42"><expr pos:start="405:42" pos:end="405:42"><name pos:start="405:42" pos:end="405:42">s</name></expr></argument>, <argument pos:start="405:45" pos:end="405:49"><expr pos:start="405:45" pos:end="405:49"><name pos:start="405:45" pos:end="405:49">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="409:21" pos:end="409:120"><expr pos:start="409:21" pos:end="409:119"><call pos:start="409:21" pos:end="409:119"><name pos:start="409:21" pos:end="409:45">add_left_prediction_bgr32</name><argument_list pos:start="409:46" pos:end="409:119">(<argument pos:start="409:47" pos:end="409:75"><expr pos:start="409:47" pos:end="409:75"><name pos:start="409:47" pos:end="409:56"><name pos:start="409:47" pos:end="409:47">p</name><operator pos:start="409:48" pos:end="409:49">-&gt;</operator><name pos:start="409:50" pos:end="409:53">data</name><index pos:start="409:54" pos:end="409:56">[<expr pos:start="409:55" pos:end="409:55"><literal type="number" pos:start="409:55" pos:end="409:55">0</literal></expr>]</index></name> <operator pos:start="409:58" pos:end="409:58">+</operator> <name pos:start="409:60" pos:end="409:73"><name pos:start="409:60" pos:end="409:60">p</name><operator pos:start="409:61" pos:end="409:62">-&gt;</operator><name pos:start="409:63" pos:end="409:70">linesize</name><index pos:start="409:71" pos:end="409:73">[<expr pos:start="409:72" pos:end="409:72"><literal type="number" pos:start="409:72" pos:end="409:72">0</literal></expr>]</index></name><operator pos:start="409:74" pos:end="409:74">*</operator><name pos:start="409:75" pos:end="409:75">y</name></expr></argument>, <argument pos:start="409:78" pos:end="409:87"><expr pos:start="409:78" pos:end="409:87"><name pos:start="409:78" pos:end="409:87"><name pos:start="409:78" pos:end="409:78">s</name><operator pos:start="409:79" pos:end="409:80">-&gt;</operator><name pos:start="409:81" pos:end="409:84">temp</name><index pos:start="409:85" pos:end="409:87">[<expr pos:start="409:86" pos:end="409:86"><literal type="number" pos:start="409:86" pos:end="409:86">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="409:90" pos:end="409:94"><expr pos:start="409:90" pos:end="409:94"><name pos:start="409:90" pos:end="409:94">width</name></expr></argument>, <argument pos:start="409:97" pos:end="409:102"><expr pos:start="409:97" pos:end="409:102"><operator pos:start="409:97" pos:end="409:97">&amp;</operator><name pos:start="409:98" pos:end="409:102">leftr</name></expr></argument>, <argument pos:start="409:105" pos:end="409:110"><expr pos:start="409:105" pos:end="409:110"><operator pos:start="409:105" pos:end="409:105">&amp;</operator><name pos:start="409:106" pos:end="409:110">leftg</name></expr></argument>, <argument pos:start="409:113" pos:end="409:118"><expr pos:start="409:113" pos:end="409:118"><operator pos:start="409:113" pos:end="409:113">&amp;</operator><name pos:start="409:114" pos:end="409:118">leftb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="411:21" pos:end="421:21"><if pos:start="411:21" pos:end="421:21">if<condition pos:start="411:23" pos:end="411:45">(<expr pos:start="411:24" pos:end="411:44"><name pos:start="411:24" pos:end="411:35"><name pos:start="411:24" pos:end="411:24">s</name><operator pos:start="411:25" pos:end="411:26">-&gt;</operator><name pos:start="411:27" pos:end="411:35">predictor</name></name> <operator pos:start="411:37" pos:end="411:38">==</operator> <name pos:start="411:40" pos:end="411:44">PLANE</name></expr>)</condition><block pos:start="411:46" pos:end="421:21">{<block_content pos:start="413:25" pos:end="419:25">

                        <if_stmt pos:start="413:25" pos:end="419:25"><if pos:start="413:25" pos:end="419:25">if<condition pos:start="413:27" pos:end="413:48">(<expr pos:start="413:28" pos:end="413:47"><operator pos:start="413:28" pos:end="413:28">(</operator><name pos:start="413:29" pos:end="413:29">y</name><operator pos:start="413:30" pos:end="413:30">&amp;</operator><name pos:start="413:31" pos:end="413:43"><name pos:start="413:31" pos:end="413:31">s</name><operator pos:start="413:32" pos:end="413:33">-&gt;</operator><name pos:start="413:34" pos:end="413:43">interlaced</name></name><operator pos:start="413:44" pos:end="413:44">)</operator><operator pos:start="413:45" pos:end="413:46">==</operator><literal type="number" pos:start="413:47" pos:end="413:47">0</literal></expr>)</condition><block pos:start="413:49" pos:end="419:25">{<block_content pos:start="415:29" pos:end="417:105">

                            <expr_stmt pos:start="415:29" pos:end="417:105"><expr pos:start="415:29" pos:end="417:104"><call pos:start="415:29" pos:end="417:104"><name pos:start="415:29" pos:end="415:44"><name pos:start="415:29" pos:end="415:29">s</name><operator pos:start="415:30" pos:end="415:31">-&gt;</operator><name pos:start="415:32" pos:end="415:34">dsp</name><operator pos:start="415:35" pos:end="415:35">.</operator><name pos:start="415:36" pos:end="415:44">add_bytes</name></name><argument_list pos:start="415:45" pos:end="417:104">(<argument pos:start="415:46" pos:end="415:74"><expr pos:start="415:46" pos:end="415:74"><name pos:start="415:46" pos:end="415:55"><name pos:start="415:46" pos:end="415:46">p</name><operator pos:start="415:47" pos:end="415:48">-&gt;</operator><name pos:start="415:49" pos:end="415:52">data</name><index pos:start="415:53" pos:end="415:55">[<expr pos:start="415:54" pos:end="415:54"><literal type="number" pos:start="415:54" pos:end="415:54">0</literal></expr>]</index></name> <operator pos:start="415:57" pos:end="415:57">+</operator> <name pos:start="415:59" pos:end="415:72"><name pos:start="415:59" pos:end="415:59">p</name><operator pos:start="415:60" pos:end="415:61">-&gt;</operator><name pos:start="415:62" pos:end="415:69">linesize</name><index pos:start="415:70" pos:end="415:72">[<expr pos:start="415:71" pos:end="415:71"><literal type="number" pos:start="415:71" pos:end="415:71">0</literal></expr>]</index></name><operator pos:start="415:73" pos:end="415:73">*</operator><name pos:start="415:74" pos:end="415:74">y</name></expr></argument>, 

                                             <argument pos:start="417:46" pos:end="417:89"><expr pos:start="417:46" pos:end="417:89"><name pos:start="417:46" pos:end="417:55"><name pos:start="417:46" pos:end="417:46">p</name><operator pos:start="417:47" pos:end="417:48">-&gt;</operator><name pos:start="417:49" pos:end="417:52">data</name><index pos:start="417:53" pos:end="417:55">[<expr pos:start="417:54" pos:end="417:54"><literal type="number" pos:start="417:54" pos:end="417:54">0</literal></expr>]</index></name> <operator pos:start="417:57" pos:end="417:57">+</operator> <name pos:start="417:59" pos:end="417:72"><name pos:start="417:59" pos:end="417:59">p</name><operator pos:start="417:60" pos:end="417:61">-&gt;</operator><name pos:start="417:62" pos:end="417:69">linesize</name><index pos:start="417:70" pos:end="417:72">[<expr pos:start="417:71" pos:end="417:71"><literal type="number" pos:start="417:71" pos:end="417:71">0</literal></expr>]</index></name><operator pos:start="417:73" pos:end="417:73">*</operator><name pos:start="417:74" pos:end="417:74">y</name> <operator pos:start="417:76" pos:end="417:76">+</operator> <name pos:start="417:78" pos:end="417:89">fake_ystride</name></expr></argument>, <argument pos:start="417:92" pos:end="417:103"><expr pos:start="417:92" pos:end="417:103"><name pos:start="417:92" pos:end="417:103">fake_ystride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="425:17" pos:end="425:38"><expr pos:start="425:17" pos:end="425:37"><call pos:start="425:17" pos:end="425:37"><name pos:start="425:17" pos:end="425:26">draw_slice</name><argument_list pos:start="425:27" pos:end="425:37">(<argument pos:start="425:28" pos:end="425:28"><expr pos:start="425:28" pos:end="425:28"><name pos:start="425:28" pos:end="425:28">s</name></expr></argument>, <argument pos:start="425:31" pos:end="425:36"><expr pos:start="425:31" pos:end="425:36"><name pos:start="425:31" pos:end="425:36">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="425:40" pos:end="425:99">// just 1 large slice as this isnt possible in reverse order</comment>

                <break pos:start="427:17" pos:end="427:22">break;</break>

            <default pos:start="429:13" pos:end="429:20">default:</default>

                <expr_stmt pos:start="431:17" pos:end="431:68"><expr pos:start="431:17" pos:end="431:67"><call pos:start="431:17" pos:end="431:67"><name pos:start="431:17" pos:end="431:23">fprintf</name><argument_list pos:start="431:24" pos:end="431:67">(<argument pos:start="431:25" pos:end="431:30"><expr pos:start="431:25" pos:end="431:30"><name pos:start="431:25" pos:end="431:30">stderr</name></expr></argument>, <argument pos:start="431:33" pos:end="431:66"><expr pos:start="431:33" pos:end="431:66"><literal type="string" pos:start="431:33" pos:end="431:66">"prediction type not supported!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if><else pos:start="435:10" pos:end="443:9">else<block pos:start="435:14" pos:end="443:9">{<block_content pos:start="439:13" pos:end="441:22">



            <expr_stmt pos:start="439:13" pos:end="439:67"><expr pos:start="439:13" pos:end="439:66"><call pos:start="439:13" pos:end="439:66"><name pos:start="439:13" pos:end="439:19">fprintf</name><argument_list pos:start="439:20" pos:end="439:66">(<argument pos:start="439:21" pos:end="439:26"><expr pos:start="439:21" pos:end="439:26"><name pos:start="439:21" pos:end="439:26">stderr</name></expr></argument>, <argument pos:start="439:29" pos:end="439:65"><expr pos:start="439:29" pos:end="439:65"><literal type="string" pos:start="439:29" pos:end="439:65">"BGR24 output isnt implemenetd yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="441:13" pos:end="441:22">return <expr pos:start="441:20" pos:end="441:21"><operator pos:start="441:20" pos:end="441:20">-</operator><literal type="number" pos:start="441:21" pos:end="441:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:13"><expr pos:start="447:5" pos:end="447:12"><call pos:start="447:5" pos:end="447:12"><name pos:start="447:5" pos:end="447:10">emms_c</name><argument_list pos:start="447:11" pos:end="447:12">()</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="451:5" pos:end="451:17"><expr pos:start="451:5" pos:end="451:16"><operator pos:start="451:5" pos:end="451:5">*</operator><name pos:start="451:6" pos:end="451:12">picture</name><operator pos:start="451:13" pos:end="451:13">=</operator> <operator pos:start="451:15" pos:end="451:15">*</operator><name pos:start="451:16" pos:end="451:16">p</name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="455:5" pos:end="455:36"><expr pos:start="455:5" pos:end="455:35"><call pos:start="455:5" pos:end="455:35"><name pos:start="455:5" pos:end="455:25"><name pos:start="455:5" pos:end="455:9">avctx</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:25">release_buffer</name></name><argument_list pos:start="455:26" pos:end="455:35">(<argument pos:start="455:27" pos:end="455:31"><expr pos:start="455:27" pos:end="455:31"><name pos:start="455:27" pos:end="455:31">avctx</name></expr></argument>, <argument pos:start="455:34" pos:end="455:34"><expr pos:start="455:34" pos:end="455:34"><name pos:start="455:34" pos:end="455:34">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="459:5" pos:end="459:33"><expr pos:start="459:5" pos:end="459:32"><operator pos:start="459:5" pos:end="459:5">*</operator><name pos:start="459:6" pos:end="459:14">data_size</name> <operator pos:start="459:16" pos:end="459:16">=</operator> <sizeof pos:start="459:18" pos:end="459:32">sizeof<argument_list pos:start="459:24" pos:end="459:32">(<argument pos:start="459:25" pos:end="459:31"><expr pos:start="459:25" pos:end="459:31"><name pos:start="459:25" pos:end="459:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    

    <return pos:start="463:5" pos:end="463:41">return <expr pos:start="463:12" pos:end="463:40"><operator pos:start="463:12" pos:end="463:12">(</operator><call pos:start="463:13" pos:end="463:34"><name pos:start="463:13" pos:end="463:26">get_bits_count</name><argument_list pos:start="463:27" pos:end="463:34">(<argument pos:start="463:28" pos:end="463:33"><expr pos:start="463:28" pos:end="463:33"><operator pos:start="463:28" pos:end="463:28">&amp;</operator><name pos:start="463:29" pos:end="463:33"><name pos:start="463:29" pos:end="463:29">s</name><operator pos:start="463:30" pos:end="463:31">-&gt;</operator><name pos:start="463:32" pos:end="463:33">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="463:35" pos:end="463:35">+</operator><literal type="number" pos:start="463:36" pos:end="463:36">7</literal><operator pos:start="463:37" pos:end="463:37">)</operator><operator pos:start="463:38" pos:end="463:39">&gt;&gt;</operator><literal type="number" pos:start="463:40" pos:end="463:40">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
