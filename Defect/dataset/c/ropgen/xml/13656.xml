<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13656.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">fdctrl_read_data</name> <parameter_list pos:start="1:34" pos:end="1:51">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:42">fdctrl_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">fdctrl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:18">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">fdrive_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:21">cur_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">retval</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">pos</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:11">cur_drv</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:33"><name pos:start="13:15" pos:end="13:25">get_cur_drv</name><argument_list pos:start="13:26" pos:end="13:33">(<argument pos:start="13:27" pos:end="13:32"><expr pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:32">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:10">fdctrl</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">state</name></name> <operator pos:start="15:19" pos:end="15:20">&amp;=</operator> <operator pos:start="15:22" pos:end="15:22">~</operator><name pos:start="15:23" pos:end="15:35">FD_CTRL_SLEEP</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:53">(<expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:16">FD_STATE</name><argument_list pos:start="17:17" pos:end="17:36">(<argument pos:start="17:18" pos:end="17:35"><expr pos:start="17:18" pos:end="17:35"><name pos:start="17:18" pos:end="17:35"><name pos:start="17:18" pos:end="17:23">fdctrl</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:35">data_state</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:38" pos:end="17:39">==</operator> <name pos:start="17:41" pos:end="17:52">FD_STATE_CMD</name></expr>)</condition> <block pos:start="17:55" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:20">FLOPPY_ERROR</name><argument_list pos:start="19:21" pos:end="19:54">(<argument pos:start="19:22" pos:end="19:53"><expr pos:start="19:22" pos:end="19:53"><literal type="string" pos:start="19:22" pos:end="19:53">"can't read data in CMD state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:7">pos</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:26"><name pos:start="25:11" pos:end="25:16">fdctrl</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:26">data_pos</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="45:5"><if pos:start="27:5" pos:end="45:5">if <condition pos:start="27:8" pos:end="27:54">(<expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:16">FD_STATE</name><argument_list pos:start="27:17" pos:end="27:36">(<argument pos:start="27:18" pos:end="27:35"><expr pos:start="27:18" pos:end="27:35"><name pos:start="27:18" pos:end="27:35"><name pos:start="27:18" pos:end="27:23">fdctrl</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:35">data_state</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:38" pos:end="27:39">==</operator> <name pos:start="27:41" pos:end="27:53">FD_STATE_DATA</name></expr>)</condition> <block pos:start="27:56" pos:end="45:5">{<block_content pos:start="29:9" pos:end="43:9">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:11">pos</name> <operator pos:start="29:13" pos:end="29:14">%=</operator> <name pos:start="29:16" pos:end="29:28">FD_SECTOR_LEN</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">pos</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:41">

            <expr_stmt pos:start="33:13" pos:end="33:54"><expr pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:15">len</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:34"><name pos:start="33:19" pos:end="33:24">fdctrl</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:34">data_len</name></name> <operator pos:start="33:36" pos:end="33:36">-</operator> <name pos:start="33:38" pos:end="33:53"><name pos:start="33:38" pos:end="33:43">fdctrl</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:53">data_pos</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:36"><if pos:start="35:13" pos:end="37:36">if <condition pos:start="35:16" pos:end="35:36">(<expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:19">len</name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <name pos:start="35:23" pos:end="35:35">FD_SECTOR_LEN</name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:36"><block_content pos:start="37:17" pos:end="37:36">

                <expr_stmt pos:start="37:17" pos:end="37:36"><expr pos:start="37:17" pos:end="37:35"><name pos:start="37:17" pos:end="37:19">len</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:35">FD_SECTOR_LEN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="41:41"><expr pos:start="39:13" pos:end="41:40"><call pos:start="39:13" pos:end="41:40"><name pos:start="39:13" pos:end="39:21">bdrv_read</name><argument_list pos:start="39:22" pos:end="41:40">(<argument pos:start="39:23" pos:end="39:33"><expr pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:29">cur_drv</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:33">bs</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:53"><expr pos:start="39:36" pos:end="39:53"><call pos:start="39:36" pos:end="39:53"><name pos:start="39:36" pos:end="39:44">fd_sector</name><argument_list pos:start="39:45" pos:end="39:53">(<argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><name pos:start="39:46" pos:end="39:52">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:28">fdctrl</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">fifo</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:10">retval</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:30"><name pos:start="47:14" pos:end="47:19">fdctrl</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:25">fifo</name><index pos:start="47:26" pos:end="47:30">[<expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">pos</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="71:5"><if pos:start="49:5" pos:end="71:5">if <condition pos:start="49:8" pos:end="49:47">(<expr pos:start="49:9" pos:end="49:46"><operator pos:start="49:9" pos:end="49:10">++</operator><name pos:start="49:11" pos:end="49:26"><name pos:start="49:11" pos:end="49:16">fdctrl</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:26">data_pos</name></name> <operator pos:start="49:28" pos:end="49:29">==</operator> <name pos:start="49:31" pos:end="49:46"><name pos:start="49:31" pos:end="49:36">fdctrl</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">data_len</name></name></expr>)</condition> <block pos:start="49:49" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:9">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:14">fdctrl</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">data_pos</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="53:9" pos:end="57:11">/* Switch from transfer mode to status mode

         * then from status mode to command mode

         */</comment>

        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:58">(<expr pos:start="59:13" pos:end="59:57"><call pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:20">FD_STATE</name><argument_list pos:start="59:21" pos:end="59:40">(<argument pos:start="59:22" pos:end="59:39"><expr pos:start="59:22" pos:end="59:39"><name pos:start="59:22" pos:end="59:39"><name pos:start="59:22" pos:end="59:27">fdctrl</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:39">data_state</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:42" pos:end="59:43">==</operator> <name pos:start="59:45" pos:end="59:57">FD_STATE_DATA</name></expr>)</condition> <block pos:start="59:60" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:59">

            <expr_stmt pos:start="61:13" pos:end="61:59"><expr pos:start="61:13" pos:end="61:58"><call pos:start="61:13" pos:end="61:58"><name pos:start="61:13" pos:end="61:32">fdctrl_stop_transfer</name><argument_list pos:start="61:33" pos:end="61:58">(<argument pos:start="61:34" pos:end="61:39"><expr pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:39">fdctrl</name></expr></argument>, <argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><literal type="number" pos:start="61:42" pos:end="61:45">0x20</literal></expr></argument>, <argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><literal type="number" pos:start="61:48" pos:end="61:51">0x00</literal></expr></argument>, <argument pos:start="61:54" pos:end="61:57"><expr pos:start="61:54" pos:end="61:57"><literal type="number" pos:start="61:54" pos:end="61:57">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="69:9">else <block pos:start="63:16" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:37">

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><call pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:29">fdctrl_reset_fifo</name><argument_list pos:start="65:30" pos:end="65:37">(<argument pos:start="65:31" pos:end="65:36"><expr pos:start="65:31" pos:end="65:36"><name pos:start="65:31" pos:end="65:36">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:28">fdctrl_reset_irq</name><argument_list pos:start="67:29" pos:end="67:36">(<argument pos:start="67:30" pos:end="67:35"><expr pos:start="67:30" pos:end="67:35"><name pos:start="67:30" pos:end="67:35">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><call pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:18">FLOPPY_DPRINTF</name><argument_list pos:start="73:19" pos:end="73:53">(<argument pos:start="73:20" pos:end="73:44"><expr pos:start="73:20" pos:end="73:44"><literal type="string" pos:start="73:20" pos:end="73:44">"data register: 0x%02x\n"</literal></expr></argument>, <argument pos:start="73:47" pos:end="73:52"><expr pos:start="73:47" pos:end="73:52"><name pos:start="73:47" pos:end="73:52">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:18">return <expr pos:start="77:12" pos:end="77:17"><name pos:start="77:12" pos:end="77:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
