<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8040.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mxf_read_packet_old</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:48">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">KLVPacket</name></type> <name pos:start="5:15" pos:end="5:17">klv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MXFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">mxf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="195:5">while <condition pos:start="13:11" pos:end="13:53">(<expr pos:start="13:12" pos:end="13:52"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:15">ret</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:46"><name pos:start="13:19" pos:end="13:33">klv_read_packet</name><argument_list pos:start="13:34" pos:end="13:46">(<argument pos:start="13:35" pos:end="13:38"><expr pos:start="13:35" pos:end="13:38"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:38">klv</name></expr></argument>, <argument pos:start="13:41" pos:end="13:45"><expr pos:start="13:41" pos:end="13:45"><name pos:start="13:41" pos:end="13:45"><name pos:start="13:41" pos:end="13:41">s</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:45">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="13:47" pos:end="13:47">)</operator> <operator pos:start="13:49" pos:end="13:50">==</operator> <literal type="number" pos:start="13:52" pos:end="13:52">0</literal></expr>)</condition> <block pos:start="13:55" pos:end="195:5">{<block_content pos:start="15:9" pos:end="193:41">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:17">PRINT_KEY</name><argument_list pos:start="15:18" pos:end="15:44">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">s</name></expr></argument>, <argument pos:start="15:22" pos:end="15:34"><expr pos:start="15:22" pos:end="15:34"><literal type="string" pos:start="15:22" pos:end="15:34">"read packet"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:43"><expr pos:start="15:37" pos:end="15:43"><name pos:start="15:37" pos:end="15:43"><name pos:start="15:37" pos:end="15:39">klv</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:43">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:94"><expr pos:start="17:9" pos:end="17:93"><call pos:start="17:9" pos:end="17:93"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:93">(<argument pos:start="17:16" pos:end="17:16"><expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">s</name></expr></argument>, <argument pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="17:33" pos:end="17:68"><expr pos:start="17:33" pos:end="17:68"><literal type="string" pos:start="17:33" pos:end="17:40">"size %"</literal><name pos:start="17:41" pos:end="17:46">PRIu64</name><literal type="string" pos:start="17:47" pos:end="17:58">" offset %#"</literal><name pos:start="17:59" pos:end="17:64">PRIx64</name><literal type="string" pos:start="17:65" pos:end="17:68">"\n"</literal></expr></argument>, <argument pos:start="17:71" pos:end="17:80"><expr pos:start="17:71" pos:end="17:80"><name pos:start="17:71" pos:end="17:80"><name pos:start="17:71" pos:end="17:73">klv</name><operator pos:start="17:74" pos:end="17:74">.</operator><name pos:start="17:75" pos:end="17:80">length</name></name></expr></argument>, <argument pos:start="17:83" pos:end="17:92"><expr pos:start="17:83" pos:end="17:92"><name pos:start="17:83" pos:end="17:92"><name pos:start="17:83" pos:end="17:85">klv</name><operator pos:start="17:86" pos:end="17:86">.</operator><name pos:start="17:87" pos:end="17:92">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="33:9"><if pos:start="19:9" pos:end="33:9">if <condition pos:start="19:12" pos:end="19:59">(<expr pos:start="19:13" pos:end="19:58"><call pos:start="19:13" pos:end="19:58"><name pos:start="19:13" pos:end="19:22">IS_KLV_KEY</name><argument_list pos:start="19:23" pos:end="19:58">(<argument pos:start="19:24" pos:end="19:30"><expr pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:26">klv</name><operator pos:start="19:27" pos:end="19:27">.</operator><name pos:start="19:28" pos:end="19:30">key</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:57"><expr pos:start="19:33" pos:end="19:57"><name pos:start="19:33" pos:end="19:57">mxf_encrypted_triplet_key</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:61" pos:end="33:9">{<block_content pos:start="21:13" pos:end="31:21">

            <expr_stmt pos:start="21:13" pos:end="21:52"><expr pos:start="21:13" pos:end="21:51"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:51"><name pos:start="21:19" pos:end="21:37">mxf_decrypt_triplet</name><argument_list pos:start="21:38" pos:end="21:51">(<argument pos:start="21:39" pos:end="21:39"><expr pos:start="21:39" pos:end="21:39"><name pos:start="21:39" pos:end="21:39">s</name></expr></argument>, <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">pkt</name></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:50">klv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:24">(<expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:19">ret</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>)</condition> <block pos:start="23:26" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:27">

                <expr_stmt pos:start="25:17" pos:end="25:69"><expr pos:start="25:17" pos:end="25:68"><call pos:start="25:17" pos:end="25:68"><name pos:start="25:17" pos:end="25:22">av_log</name><argument_list pos:start="25:23" pos:end="25:68">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">s</name></expr></argument>, <argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:41" pos:end="25:67"><expr pos:start="25:41" pos:end="25:67"><literal type="string" pos:start="25:41" pos:end="25:67">"invalid encoded triplet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="27:17" pos:end="27:27">return <expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="31:13" pos:end="31:21">return <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="193:41"><if pos:start="35:9" pos:end="189:9">if <condition pos:start="35:12" pos:end="39:62">(<expr pos:start="35:13" pos:end="39:61"><call pos:start="35:13" pos:end="35:56"><name pos:start="35:13" pos:end="35:22">IS_KLV_KEY</name><argument_list pos:start="35:23" pos:end="35:56">(<argument pos:start="35:24" pos:end="35:30"><expr pos:start="35:24" pos:end="35:30"><name pos:start="35:24" pos:end="35:30"><name pos:start="35:24" pos:end="35:26">klv</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:30">key</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:55"><expr pos:start="35:33" pos:end="35:55"><name pos:start="35:33" pos:end="35:55">mxf_essence_element_key</name></expr></argument>)</argument_list></call> <operator pos:start="35:58" pos:end="35:59">||</operator>

            <call pos:start="37:13" pos:end="37:64"><name pos:start="37:13" pos:end="37:22">IS_KLV_KEY</name><argument_list pos:start="37:23" pos:end="37:64">(<argument pos:start="37:24" pos:end="37:30"><expr pos:start="37:24" pos:end="37:30"><name pos:start="37:24" pos:end="37:30"><name pos:start="37:24" pos:end="37:26">klv</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:30">key</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:63"><expr pos:start="37:33" pos:end="37:63"><name pos:start="37:33" pos:end="37:63">mxf_canopus_essence_element_key</name></expr></argument>)</argument_list></call> <operator pos:start="37:66" pos:end="37:67">||</operator>

            <call pos:start="39:13" pos:end="39:61"><name pos:start="39:13" pos:end="39:22">IS_KLV_KEY</name><argument_list pos:start="39:23" pos:end="39:61">(<argument pos:start="39:24" pos:end="39:30"><expr pos:start="39:24" pos:end="39:30"><name pos:start="39:24" pos:end="39:30"><name pos:start="39:24" pos:end="39:26">klv</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:30">key</name></name></expr></argument>, <argument pos:start="39:33" pos:end="39:60"><expr pos:start="39:33" pos:end="39:60"><name pos:start="39:33" pos:end="39:60">mxf_avid_essence_element_key</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:64" pos:end="189:9">{<block_content pos:start="41:13" pos:end="187:21">

            <decl_stmt pos:start="41:13" pos:end="41:54"><decl pos:start="41:13" pos:end="41:53"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:21">index</name> <init pos:start="41:23" pos:end="41:53">= <expr pos:start="41:25" pos:end="41:53"><call pos:start="41:25" pos:end="41:53"><name pos:start="41:25" pos:end="41:44">mxf_get_stream_index</name><argument_list pos:start="41:45" pos:end="41:53">(<argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><name pos:start="41:46" pos:end="41:46">s</name></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><operator pos:start="41:49" pos:end="41:49">&amp;</operator><name pos:start="41:50" pos:end="41:52">klv</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:39"><decl pos:start="43:13" pos:end="43:28"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">int64_t</name></type> <name pos:start="43:21" pos:end="43:28">next_ofs</name></decl>, <decl pos:start="43:31" pos:end="43:38"><type ref="prev" pos:start="43:13" pos:end="43:19"/><name pos:start="43:31" pos:end="43:38">next_klv</name></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:25"><decl pos:start="45:13" pos:end="45:24"><type pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:20">AVStream</name> <modifier pos:start="45:22" pos:end="45:22">*</modifier></type><name pos:start="45:23" pos:end="45:24">st</name></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:28"><decl pos:start="47:13" pos:end="47:27"><type pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:20">MXFTrack</name> <modifier pos:start="47:22" pos:end="47:22">*</modifier></type><name pos:start="47:23" pos:end="47:27">track</name></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:35"><decl pos:start="49:13" pos:end="49:34"><type pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:29">AVCodecParameters</name> <modifier pos:start="49:31" pos:end="49:31">*</modifier></type><name pos:start="49:32" pos:end="49:34">par</name></decl>;</decl_stmt>



            <if_stmt pos:start="53:13" pos:end="63:13"><if pos:start="53:13" pos:end="63:13">if <condition pos:start="53:16" pos:end="53:26">(<expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:21">index</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition> <block pos:start="53:28" pos:end="63:13">{<block_content pos:start="55:17" pos:end="61:26">

                <expr_stmt pos:start="55:17" pos:end="59:46"><expr pos:start="55:17" pos:end="59:45"><call pos:start="55:17" pos:end="59:45"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="59:45">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="57:24" pos:end="57:63"><expr pos:start="57:24" pos:end="57:63"><literal type="string" pos:start="57:24" pos:end="57:53">"error getting stream index %"</literal><name pos:start="57:54" pos:end="57:59">PRIu32</name><literal type="string" pos:start="57:60" pos:end="57:63">"\n"</literal></expr></argument>,

                       <argument pos:start="59:24" pos:end="59:44"><expr pos:start="59:24" pos:end="59:44"><call pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:30">AV_RB32</name><argument_list pos:start="59:31" pos:end="59:44">(<argument pos:start="59:32" pos:end="59:43"><expr pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:34">klv</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:38">key</name></name> <operator pos:start="59:40" pos:end="59:40">+</operator> <literal type="number" pos:start="59:42" pos:end="59:43">12</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="61:17" pos:end="61:26">goto <name pos:start="61:22" pos:end="61:25">skip</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:14">st</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:34"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:27">streams</name><index pos:start="67:28" pos:end="67:34">[<expr pos:start="67:29" pos:end="67:33"><name pos:start="67:29" pos:end="67:33">index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:17">track</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:22">st</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:33">priv_data</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="75:26"><if pos:start="73:13" pos:end="75:26">if <condition pos:start="73:16" pos:end="73:60">(<expr pos:start="73:17" pos:end="73:59"><name pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:26">streams</name><index pos:start="73:27" pos:end="73:33">[<expr pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:32">index</name></expr>]</index></name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:42">discard</name> <operator pos:start="73:44" pos:end="73:45">==</operator> <name pos:start="73:47" pos:end="73:59">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:26"><block_content pos:start="75:17" pos:end="75:26">

                <goto pos:start="75:17" pos:end="75:26">goto <name pos:start="75:22" pos:end="75:25">skip</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:53"><expr pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:20">next_klv</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:39"><name pos:start="79:24" pos:end="79:32">avio_tell</name><argument_list pos:start="79:33" pos:end="79:39">(<argument pos:start="79:34" pos:end="79:38"><expr pos:start="79:34" pos:end="79:38"><name pos:start="79:34" pos:end="79:38"><name pos:start="79:34" pos:end="79:34">s</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:38">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:41" pos:end="79:41">+</operator> <name pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:45">klv</name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:52">length</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:66"><expr pos:start="81:13" pos:end="81:65"><name pos:start="81:13" pos:end="81:20">next_ofs</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="81:65"><name pos:start="81:24" pos:end="81:48">mxf_set_current_edit_unit</name><argument_list pos:start="81:49" pos:end="81:65">(<argument pos:start="81:50" pos:end="81:52"><expr pos:start="81:50" pos:end="81:52"><name pos:start="81:50" pos:end="81:52">mxf</name></expr></argument>, <argument pos:start="81:55" pos:end="81:64"><expr pos:start="81:55" pos:end="81:64"><name pos:start="81:55" pos:end="81:64"><name pos:start="81:55" pos:end="81:57">klv</name><operator pos:start="81:58" pos:end="81:58">.</operator><name pos:start="81:59" pos:end="81:64">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="85:13" pos:end="103:13"><if pos:start="85:13" pos:end="103:13">if <condition pos:start="85:16" pos:end="85:53">(<expr pos:start="85:17" pos:end="85:52"><name pos:start="85:17" pos:end="85:24">next_ofs</name> <operator pos:start="85:26" pos:end="85:27">&gt;=</operator> <literal type="number" pos:start="85:29" pos:end="85:29">0</literal> <operator pos:start="85:31" pos:end="85:32">&amp;&amp;</operator> <name pos:start="85:34" pos:end="85:41">next_klv</name> <operator pos:start="85:43" pos:end="85:43">&gt;</operator> <name pos:start="85:45" pos:end="85:52">next_ofs</name></expr>)</condition> <block pos:start="85:55" pos:end="103:13">{<block_content pos:start="91:17" pos:end="101:57">

                <comment type="block" pos:start="87:17" pos:end="89:91">/* if this check is hit then it's possible OPAtom was treated as OP1a

                 * truncate the packet since it's probably very large (&gt;2 GiB is common) */</comment>

                <expr_stmt pos:start="91:17" pos:end="99:62"><expr pos:start="91:17" pos:end="99:61"><call pos:start="91:17" pos:end="99:61"><name pos:start="91:17" pos:end="91:37">avpriv_request_sample</name><argument_list pos:start="91:38" pos:end="99:61">(<argument pos:start="91:39" pos:end="91:39"><expr pos:start="91:39" pos:end="91:39"><name pos:start="91:39" pos:end="91:39">s</name></expr></argument>,

                                      <argument pos:start="93:39" pos:end="97:54"><expr pos:start="93:39" pos:end="97:54"><literal type="string" pos:start="93:39" pos:end="93:71">"OPAtom misinterpreted as OP1a? "</literal>

                                      <literal type="string" pos:start="95:39" pos:end="95:76">"KLV for edit unit %i extending into "</literal>

                                      <literal type="string" pos:start="97:39" pos:end="97:54">"next edit unit"</literal></expr></argument>,

                                      <argument pos:start="99:39" pos:end="99:60"><expr pos:start="99:39" pos:end="99:60"><name pos:start="99:39" pos:end="99:60"><name pos:start="99:39" pos:end="99:41">mxf</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:60">current_edit_unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:57"><expr pos:start="101:17" pos:end="101:56"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:19">klv</name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:26">length</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:37">next_ofs</name> <operator pos:start="101:39" pos:end="101:39">-</operator> <call pos:start="101:41" pos:end="101:56"><name pos:start="101:41" pos:end="101:49">avio_tell</name><argument_list pos:start="101:50" pos:end="101:56">(<argument pos:start="101:51" pos:end="101:55"><expr pos:start="101:51" pos:end="101:55"><name pos:start="101:51" pos:end="101:55"><name pos:start="101:51" pos:end="101:51">s</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:55">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="107:13" pos:end="107:51">/* check for 8 channels AES3 element */</comment>

            <if_stmt pos:start="109:13" pos:end="131:13"><if pos:start="109:13" pos:end="123:13">if <condition pos:start="109:16" pos:end="109:82">(<expr pos:start="109:17" pos:end="109:81"><name pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:19">klv</name><operator pos:start="109:20" pos:end="109:20">.</operator><name pos:start="109:21" pos:end="109:23">key</name><index pos:start="109:24" pos:end="109:27">[<expr pos:start="109:25" pos:end="109:26"><literal type="number" pos:start="109:25" pos:end="109:26">12</literal></expr>]</index></name> <operator pos:start="109:29" pos:end="109:30">==</operator> <literal type="number" pos:start="109:32" pos:end="109:35">0x06</literal> <operator pos:start="109:37" pos:end="109:38">&amp;&amp;</operator> <name pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:42">klv</name><operator pos:start="109:43" pos:end="109:43">.</operator><name pos:start="109:44" pos:end="109:46">key</name><index pos:start="109:47" pos:end="109:50">[<expr pos:start="109:48" pos:end="109:49"><literal type="number" pos:start="109:48" pos:end="109:49">13</literal></expr>]</index></name> <operator pos:start="109:52" pos:end="109:53">==</operator> <literal type="number" pos:start="109:55" pos:end="109:58">0x01</literal> <operator pos:start="109:60" pos:end="109:61">&amp;&amp;</operator> <name pos:start="109:63" pos:end="109:73"><name pos:start="109:63" pos:end="109:65">klv</name><operator pos:start="109:66" pos:end="109:66">.</operator><name pos:start="109:67" pos:end="109:69">key</name><index pos:start="109:70" pos:end="109:73">[<expr pos:start="109:71" pos:end="109:72"><literal type="number" pos:start="109:71" pos:end="109:72">14</literal></expr>]</index></name> <operator pos:start="109:75" pos:end="109:76">==</operator> <literal type="number" pos:start="109:78" pos:end="109:81">0x10</literal></expr>)</condition> <block pos:start="109:84" pos:end="123:13">{<block_content pos:start="111:17" pos:end="121:17">

                <expr_stmt pos:start="111:17" pos:end="113:63"><expr pos:start="111:17" pos:end="113:62"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="113:62"><name pos:start="111:23" pos:end="111:45">mxf_get_d10_aes3_packet</name><argument_list pos:start="111:46" pos:end="113:62">(<argument pos:start="111:47" pos:end="111:51"><expr pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:47">s</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:51">pb</name></name></expr></argument>, <argument pos:start="111:54" pos:end="111:70"><expr pos:start="111:54" pos:end="111:70"><name pos:start="111:54" pos:end="111:70"><name pos:start="111:54" pos:end="111:54">s</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:63">streams</name><index pos:start="111:64" pos:end="111:70">[<expr pos:start="111:65" pos:end="111:69"><name pos:start="111:65" pos:end="111:69">index</name></expr>]</index></name></expr></argument>,

                                              <argument pos:start="113:47" pos:end="113:49"><expr pos:start="113:47" pos:end="113:49"><name pos:start="113:47" pos:end="113:49">pkt</name></expr></argument>, <argument pos:start="113:52" pos:end="113:61"><expr pos:start="113:52" pos:end="113:61"><name pos:start="113:52" pos:end="113:61"><name pos:start="113:52" pos:end="113:54">klv</name><operator pos:start="113:55" pos:end="113:55">.</operator><name pos:start="113:56" pos:end="113:61">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="121:17"><if pos:start="115:17" pos:end="121:17">if <condition pos:start="115:20" pos:end="115:28">(<expr pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:23">ret</name> <operator pos:start="115:25" pos:end="115:25">&lt;</operator> <literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr>)</condition> <block pos:start="115:30" pos:end="121:17">{<block_content pos:start="117:21" pos:end="119:31">

                    <expr_stmt pos:start="117:21" pos:end="117:79"><expr pos:start="117:21" pos:end="117:78"><call pos:start="117:21" pos:end="117:78"><name pos:start="117:21" pos:end="117:26">av_log</name><argument_list pos:start="117:27" pos:end="117:78">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">s</name></expr></argument>, <argument pos:start="117:31" pos:end="117:42"><expr pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:45" pos:end="117:77"><expr pos:start="117:45" pos:end="117:77"><literal type="string" pos:start="117:45" pos:end="117:77">"error reading D-10 aes3 frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="119:21" pos:end="119:31">return <expr pos:start="119:28" pos:end="119:30"><name pos:start="119:28" pos:end="119:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="123:15" pos:end="131:13">else <block pos:start="123:20" pos:end="131:13">{<block_content pos:start="125:17" pos:end="129:31">

                <expr_stmt pos:start="125:17" pos:end="125:60"><expr pos:start="125:17" pos:end="125:59"><name pos:start="125:17" pos:end="125:19">ret</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <call pos:start="125:23" pos:end="125:59"><name pos:start="125:23" pos:end="125:35">av_get_packet</name><argument_list pos:start="125:36" pos:end="125:59">(<argument pos:start="125:37" pos:end="125:41"><expr pos:start="125:37" pos:end="125:41"><name pos:start="125:37" pos:end="125:41"><name pos:start="125:37" pos:end="125:37">s</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:41">pb</name></name></expr></argument>, <argument pos:start="125:44" pos:end="125:46"><expr pos:start="125:44" pos:end="125:46"><name pos:start="125:44" pos:end="125:46">pkt</name></expr></argument>, <argument pos:start="125:49" pos:end="125:58"><expr pos:start="125:49" pos:end="125:58"><name pos:start="125:49" pos:end="125:58"><name pos:start="125:49" pos:end="125:51">klv</name><operator pos:start="125:52" pos:end="125:52">.</operator><name pos:start="125:53" pos:end="125:58">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="129:31"><if pos:start="127:17" pos:end="129:31">if <condition pos:start="127:20" pos:end="127:28">(<expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:23">ret</name> <operator pos:start="127:25" pos:end="127:25">&lt;</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:31"><block_content pos:start="129:21" pos:end="129:31">

                    <return pos:start="129:21" pos:end="129:31">return <expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:15">pkt</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:29">stream_index</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:37">index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:34"><expr pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:15">pkt</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:20">pos</name></name> <operator pos:start="135:22" pos:end="135:22">=</operator> <name pos:start="135:24" pos:end="135:33"><name pos:start="135:24" pos:end="135:26">klv</name><operator pos:start="135:27" pos:end="135:27">.</operator><name pos:start="135:28" pos:end="135:33">offset</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:31"><expr pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:15">par</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:30"><name pos:start="139:19" pos:end="139:20">st</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:30">codecpar</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="143:13" pos:end="177:13"><if pos:start="143:13" pos:end="169:13">if <condition pos:start="143:16" pos:end="143:71">(<expr pos:start="143:17" pos:end="143:70"><name pos:start="143:17" pos:end="143:31"><name pos:start="143:17" pos:end="143:19">par</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:31">codec_type</name></name> <operator pos:start="143:33" pos:end="143:34">==</operator> <name pos:start="143:36" pos:end="143:53">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="143:55" pos:end="143:56">&amp;&amp;</operator> <name pos:start="143:58" pos:end="143:65">next_ofs</name> <operator pos:start="143:67" pos:end="143:68">&gt;=</operator> <literal type="number" pos:start="143:70" pos:end="143:70">0</literal></expr>)</condition> <block pos:start="143:73" pos:end="169:13">{<block_content pos:start="149:17" pos:end="167:17">

                <comment type="block" pos:start="145:17" pos:end="147:59">/* mxf-&gt;current_edit_unit good - see if we have an

                 * index table to derive timestamps from */</comment>

                <decl_stmt pos:start="149:17" pos:end="149:57"><decl pos:start="149:17" pos:end="149:56"><type pos:start="149:17" pos:end="149:31"><name pos:start="149:17" pos:end="149:29">MXFIndexTable</name> <modifier pos:start="149:31" pos:end="149:31">*</modifier></type><name pos:start="149:32" pos:end="149:32">t</name> <init pos:start="149:34" pos:end="149:56">= <expr pos:start="149:36" pos:end="149:56"><operator pos:start="149:36" pos:end="149:36">&amp;</operator><name pos:start="149:37" pos:end="149:56"><name pos:start="149:37" pos:end="149:39">mxf</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:53">index_tables</name><index pos:start="149:54" pos:end="149:56">[<expr pos:start="149:55" pos:end="149:55"><literal type="number" pos:start="149:55" pos:end="149:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="153:17" pos:end="167:17"><if pos:start="153:17" pos:end="159:17">if <condition pos:start="153:20" pos:end="153:86">(<expr pos:start="153:21" pos:end="153:85"><name pos:start="153:21" pos:end="153:40"><name pos:start="153:21" pos:end="153:23">mxf</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:40">nb_index_tables</name></name> <operator pos:start="153:42" pos:end="153:43">&gt;=</operator> <literal type="number" pos:start="153:45" pos:end="153:45">1</literal> <operator pos:start="153:47" pos:end="153:48">&amp;&amp;</operator> <name pos:start="153:50" pos:end="153:71"><name pos:start="153:50" pos:end="153:52">mxf</name><operator pos:start="153:53" pos:end="153:54">-&gt;</operator><name pos:start="153:55" pos:end="153:71">current_edit_unit</name></name> <operator pos:start="153:73" pos:end="153:73">&lt;</operator> <name pos:start="153:75" pos:end="153:85"><name pos:start="153:75" pos:end="153:75">t</name><operator pos:start="153:76" pos:end="153:77">-&gt;</operator><name pos:start="153:78" pos:end="153:85">nb_ptses</name></name></expr>)</condition> <block pos:start="153:88" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:64">

                    <expr_stmt pos:start="155:21" pos:end="155:69"><expr pos:start="155:21" pos:end="155:68"><name pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:23">pkt</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:28">dts</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:53"><name pos:start="155:32" pos:end="155:34">mxf</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:53">current_edit_unit</name></name> <operator pos:start="155:55" pos:end="155:55">+</operator> <name pos:start="155:57" pos:end="155:68"><name pos:start="155:57" pos:end="155:57">t</name><operator pos:start="155:58" pos:end="155:59">-&gt;</operator><name pos:start="155:60" pos:end="155:68">first_dts</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:64"><expr pos:start="157:21" pos:end="157:63"><name pos:start="157:21" pos:end="157:28"><name pos:start="157:21" pos:end="157:23">pkt</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:28">pts</name></name> <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:63"><name pos:start="157:32" pos:end="157:32">t</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:39">ptses</name><index pos:start="157:40" pos:end="157:63">[<expr pos:start="157:41" pos:end="157:62"><name pos:start="157:41" pos:end="157:62"><name pos:start="157:41" pos:end="157:43">mxf</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:62">current_edit_unit</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="159:19" pos:end="167:17">else if <condition pos:start="159:27" pos:end="159:45">(<expr pos:start="159:28" pos:end="159:44"><name pos:start="159:28" pos:end="159:44"><name pos:start="159:28" pos:end="159:32">track</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:44">intra_only</name></name></expr>)</condition> <block pos:start="159:47" pos:end="167:17">{<block_content pos:start="165:21" pos:end="165:54">

                    <comment type="block" pos:start="161:21" pos:end="163:104">/* intra-only -&gt; PTS = EditUnit.

                     * let utils.c figure out DTS since it can be &lt; PTS if low_delay = 0 (Sony IMX30) */</comment>

                    <expr_stmt pos:start="165:21" pos:end="165:54"><expr pos:start="165:21" pos:end="165:53"><name pos:start="165:21" pos:end="165:28"><name pos:start="165:21" pos:end="165:23">pkt</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:28">pts</name></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <name pos:start="165:32" pos:end="165:53"><name pos:start="165:32" pos:end="165:34">mxf</name><operator pos:start="165:35" pos:end="165:36">-&gt;</operator><name pos:start="165:37" pos:end="165:53">current_edit_unit</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="169:15" pos:end="177:13">else if <condition pos:start="169:23" pos:end="169:61">(<expr pos:start="169:24" pos:end="169:60"><name pos:start="169:24" pos:end="169:38"><name pos:start="169:24" pos:end="169:26">par</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:38">codec_type</name></name> <operator pos:start="169:40" pos:end="169:41">==</operator> <name pos:start="169:43" pos:end="169:60">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="169:63" pos:end="177:13">{<block_content pos:start="171:17" pos:end="175:31">

                <expr_stmt pos:start="171:17" pos:end="171:55"><expr pos:start="171:17" pos:end="171:54"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <call pos:start="171:23" pos:end="171:54"><name pos:start="171:23" pos:end="171:39">mxf_set_audio_pts</name><argument_list pos:start="171:40" pos:end="171:54">(<argument pos:start="171:41" pos:end="171:43"><expr pos:start="171:41" pos:end="171:43"><name pos:start="171:41" pos:end="171:43">mxf</name></expr></argument>, <argument pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:48">par</name></expr></argument>, <argument pos:start="171:51" pos:end="171:53"><expr pos:start="171:51" pos:end="171:53"><name pos:start="171:51" pos:end="171:53">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="173:17" pos:end="175:31"><if pos:start="173:17" pos:end="175:31">if <condition pos:start="173:20" pos:end="173:28">(<expr pos:start="173:21" pos:end="173:27"><name pos:start="173:21" pos:end="173:23">ret</name> <operator pos:start="173:25" pos:end="173:25">&lt;</operator> <literal type="number" pos:start="173:27" pos:end="173:27">0</literal></expr>)</condition><block type="pseudo" pos:start="175:21" pos:end="175:31"><block_content pos:start="175:21" pos:end="175:31">

                    <return pos:start="175:21" pos:end="175:31">return <expr pos:start="175:28" pos:end="175:30"><name pos:start="175:28" pos:end="175:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="181:13" pos:end="181:44">/* seek for truncated packets */</comment>

            <expr_stmt pos:start="183:13" pos:end="183:49"><expr pos:start="183:13" pos:end="183:48"><call pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:21">avio_seek</name><argument_list pos:start="183:22" pos:end="183:48">(<argument pos:start="183:23" pos:end="183:27"><expr pos:start="183:23" pos:end="183:27"><name pos:start="183:23" pos:end="183:27"><name pos:start="183:23" pos:end="183:23">s</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:27">pb</name></name></expr></argument>, <argument pos:start="183:30" pos:end="183:37"><expr pos:start="183:30" pos:end="183:37"><name pos:start="183:30" pos:end="183:37">next_klv</name></expr></argument>, <argument pos:start="183:40" pos:end="183:47"><expr pos:start="183:40" pos:end="183:47"><name pos:start="183:40" pos:end="183:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="187:13" pos:end="187:21">return <expr pos:start="187:20" pos:end="187:20"><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="189:11" pos:end="193:41">else<block type="pseudo" pos:start="191:9" pos:end="193:41"><block_content pos:start="191:9" pos:end="193:41">

        <label pos:start="191:9" pos:end="191:13"><name pos:start="191:9" pos:end="191:12">skip</name>:</label>

            <expr_stmt pos:start="193:13" pos:end="193:41"><expr pos:start="193:13" pos:end="193:40"><call pos:start="193:13" pos:end="193:40"><name pos:start="193:13" pos:end="193:21">avio_skip</name><argument_list pos:start="193:22" pos:end="193:40">(<argument pos:start="193:23" pos:end="193:27"><expr pos:start="193:23" pos:end="193:27"><name pos:start="193:23" pos:end="193:27"><name pos:start="193:23" pos:end="193:23">s</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:27">pb</name></name></expr></argument>, <argument pos:start="193:30" pos:end="193:39"><expr pos:start="193:30" pos:end="193:39"><name pos:start="193:30" pos:end="193:39"><name pos:start="193:30" pos:end="193:32">klv</name><operator pos:start="193:33" pos:end="193:33">.</operator><name pos:start="193:34" pos:end="193:39">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="197:5" pos:end="197:48">return <expr pos:start="197:12" pos:end="197:47"><ternary pos:start="197:12" pos:end="197:47"><condition pos:start="197:12" pos:end="197:29"><expr pos:start="197:12" pos:end="197:27"><call pos:start="197:12" pos:end="197:27"><name pos:start="197:12" pos:end="197:20">avio_feof</name><argument_list pos:start="197:21" pos:end="197:27">(<argument pos:start="197:22" pos:end="197:26"><expr pos:start="197:22" pos:end="197:26"><name pos:start="197:22" pos:end="197:26"><name pos:start="197:22" pos:end="197:22">s</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:26">pb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="197:31" pos:end="197:41"> <expr pos:start="197:31" pos:end="197:41"><name pos:start="197:31" pos:end="197:41">AVERROR_EOF</name></expr> </then><else pos:start="197:43" pos:end="197:47">: <expr pos:start="197:45" pos:end="197:47"><name pos:start="197:45" pos:end="197:47">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
