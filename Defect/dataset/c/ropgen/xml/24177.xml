<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24177.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">pci_vga_initfn</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:6" pos:end="55:14">

     <decl_stmt pos:start="5:6" pos:end="5:55"><decl pos:start="5:6" pos:end="5:54"><type pos:start="5:6" pos:end="5:18"><name pos:start="5:6" pos:end="5:16">PCIVGAState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">d</name> <init pos:start="5:21" pos:end="5:54">= <expr pos:start="5:23" pos:end="5:54"><call pos:start="5:23" pos:end="5:54"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:54">(<argument pos:start="5:33" pos:end="5:43"><expr pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:43">PCIVGAState</name></expr></argument>, <argument pos:start="5:46" pos:end="5:48"><expr pos:start="5:46" pos:end="5:48"><name pos:start="5:46" pos:end="5:48">dev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:53"><expr pos:start="5:51" pos:end="5:53"><name pos:start="5:51" pos:end="5:53">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

     <decl_stmt pos:start="7:6" pos:end="7:33"><decl pos:start="7:6" pos:end="7:32"><type pos:start="7:6" pos:end="7:21"><name pos:start="7:6" pos:end="7:19">VGACommonState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:32">= <expr pos:start="7:26" pos:end="7:32"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:27">d</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">vga</name></name></expr></init></decl>;</decl_stmt>

     <decl_stmt pos:start="9:6" pos:end="9:39"><decl pos:start="9:6" pos:end="9:38"><type pos:start="9:6" pos:end="9:14"><name pos:start="9:6" pos:end="9:12">uint8_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">pci_conf</name> <init pos:start="9:24" pos:end="9:38">= <expr pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:26">d</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:31">dev</name><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:38">config</name></name></expr></init></decl>;</decl_stmt>



     <comment type="line" pos:start="13:6" pos:end="13:26">// vga + console init</comment>

     <expr_stmt pos:start="15:6" pos:end="15:38"><expr pos:start="15:6" pos:end="15:37"><call pos:start="15:6" pos:end="15:37"><name pos:start="15:6" pos:end="15:20">vga_common_init</name><argument_list pos:start="15:21" pos:end="15:37">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">s</name></expr></argument>, <argument pos:start="15:25" pos:end="15:36"><expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">VGA_RAM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="17:6" pos:end="17:17"><expr pos:start="17:6" pos:end="17:16"><call pos:start="17:6" pos:end="17:16"><name pos:start="17:6" pos:end="17:13">vga_init</name><argument_list pos:start="17:14" pos:end="17:16">(<argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <expr_stmt pos:start="21:6" pos:end="23:69"><expr pos:start="21:6" pos:end="23:68"><name pos:start="21:6" pos:end="21:10"><name pos:start="21:6" pos:end="21:6">s</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:10">ds</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="23:68"><name pos:start="21:14" pos:end="21:33">graphic_console_init</name><argument_list pos:start="21:34" pos:end="23:68">(<argument pos:start="21:35" pos:end="21:43"><expr pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:35">s</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:43">update</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:58"><expr pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:46">s</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:58">invalidate</name></name></expr></argument>,

                                  <argument pos:start="23:35" pos:end="23:48"><expr pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:48">screen_dump</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:64"><expr pos:start="23:51" pos:end="23:64"><name pos:start="23:51" pos:end="23:64"><name pos:start="23:51" pos:end="23:51">s</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:64">text_update</name></name></expr></argument>, <argument pos:start="23:67" pos:end="23:67"><expr pos:start="23:67" pos:end="23:67"><name pos:start="23:67" pos:end="23:67">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <comment type="line" pos:start="27:6" pos:end="27:36">// dummy VGA (same as Bochs ID)</comment>

     <expr_stmt pos:start="29:6" pos:end="29:60"><expr pos:start="29:6" pos:end="29:59"><call pos:start="29:6" pos:end="29:59"><name pos:start="29:6" pos:end="29:29">pci_config_set_vendor_id</name><argument_list pos:start="29:30" pos:end="29:59">(<argument pos:start="29:31" pos:end="29:38"><expr pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:38">pci_conf</name></expr></argument>, <argument pos:start="29:41" pos:end="29:58"><expr pos:start="29:41" pos:end="29:58"><name pos:start="29:41" pos:end="29:58">PCI_VENDOR_ID_QEMU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="31:6" pos:end="31:64"><expr pos:start="31:6" pos:end="31:63"><call pos:start="31:6" pos:end="31:63"><name pos:start="31:6" pos:end="31:29">pci_config_set_device_id</name><argument_list pos:start="31:30" pos:end="31:63">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">pci_conf</name></expr></argument>, <argument pos:start="31:41" pos:end="31:62"><expr pos:start="31:41" pos:end="31:62"><name pos:start="31:41" pos:end="31:62">PCI_DEVICE_ID_QEMU_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     <expr_stmt pos:start="33:6" pos:end="33:59"><expr pos:start="33:6" pos:end="33:58"><call pos:start="33:6" pos:end="33:58"><name pos:start="33:6" pos:end="33:25">pci_config_set_class</name><argument_list pos:start="33:26" pos:end="33:58">(<argument pos:start="33:27" pos:end="33:34"><expr pos:start="33:27" pos:end="33:34"><name pos:start="33:27" pos:end="33:34">pci_conf</name></expr></argument>, <argument pos:start="33:37" pos:end="33:57"><expr pos:start="33:37" pos:end="33:57"><name pos:start="33:37" pos:end="33:57">PCI_CLASS_DISPLAY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <comment type="block" pos:start="37:6" pos:end="37:51">/* XXX: VGA_RAM_SIZE must be a power of two */</comment>

     <expr_stmt pos:start="39:6" pos:end="41:62"><expr pos:start="39:6" pos:end="41:61"><call pos:start="39:6" pos:end="41:61"><name pos:start="39:6" pos:end="39:21">pci_register_bar</name><argument_list pos:start="39:22" pos:end="41:61">(<argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:24">d</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:29">dev</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr></argument>, <argument pos:start="39:35" pos:end="39:46"><expr pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:46">VGA_RAM_SIZE</name></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:51"><expr pos:start="41:23" pos:end="41:51"><name pos:start="41:23" pos:end="41:51">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>, <argument pos:start="41:54" pos:end="41:60"><expr pos:start="41:54" pos:end="41:60"><name pos:start="41:54" pos:end="41:60">vga_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



     <if_stmt pos:start="45:6" pos:end="51:6"><if pos:start="45:6" pos:end="51:6">if <condition pos:start="45:9" pos:end="45:23">(<expr pos:start="45:10" pos:end="45:22"><operator pos:start="45:10" pos:end="45:10">!</operator><name pos:start="45:11" pos:end="45:22"><name pos:start="45:11" pos:end="45:13">dev</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">rom_bar</name></name></expr>)</condition> <block pos:start="45:25" pos:end="51:6">{<block_content pos:start="49:10" pos:end="49:25">

         <comment type="block" pos:start="47:10" pos:end="47:51">/* compatibility with pc-0.13 and older */</comment>

         <expr_stmt pos:start="49:10" pos:end="49:25"><expr pos:start="49:10" pos:end="49:24"><call pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:21">vga_init_vbe</name><argument_list pos:start="49:22" pos:end="49:24">(<argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><name pos:start="49:23" pos:end="49:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     </block_content>}</block></if></if_stmt>



     <return pos:start="55:6" pos:end="55:14">return <expr pos:start="55:13" pos:end="55:13"><literal type="number" pos:start="55:13" pos:end="55:13">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
