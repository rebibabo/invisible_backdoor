<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25028.c" pos:tabs="8"><function pos:start="1:1" pos:end="283:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">scsi_req_length</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">SCSICommand</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cmd</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:55">SCSIDevice</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">dev</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="283:1">{<block_content pos:start="5:5" pos:end="281:13">

    <switch pos:start="5:5" pos:end="45:5">switch <condition pos:start="5:12" pos:end="5:24">(<expr pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:18"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:18">[<expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr>]</index></name> <operator pos:start="5:20" pos:end="5:21">&gt;&gt;</operator> <literal type="number" pos:start="5:23" pos:end="5:23">5</literal></expr>)</condition> <block pos:start="5:26" pos:end="45:5">{<block_content pos:start="7:5" pos:end="43:18">

    <case pos:start="7:5" pos:end="7:11">case <expr pos:start="7:10" pos:end="7:10"><literal type="number" pos:start="7:10" pos:end="7:10">0</literal></expr>:</case>

        <expr_stmt pos:start="9:9" pos:end="9:27"><expr pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">cmd</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:17">xfer</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <name pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:23">buf</name><index pos:start="9:24" pos:end="9:26">[<expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:21"><expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">cmd</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:16">len</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">6</literal></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">1</literal></expr>:</case>

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">2</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">cmd</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">xfer</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:38"><name pos:start="19:21" pos:end="19:29">lduw_be_p</name><argument_list pos:start="19:30" pos:end="19:38">(<argument pos:start="19:31" pos:end="19:37"><expr pos:start="19:31" pos:end="19:37"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:34">buf</name><index pos:start="19:35" pos:end="19:37">[<expr pos:start="19:36" pos:end="19:36"><literal type="number" pos:start="19:36" pos:end="19:36">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">cmd</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">len</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="number" pos:start="21:20" pos:end="21:21">10</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">4</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:11">cmd</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:17">xfer</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:38"><name pos:start="27:21" pos:end="27:28">ldl_be_p</name><argument_list pos:start="27:29" pos:end="27:38">(<argument pos:start="27:30" pos:end="27:37"><expr pos:start="27:30" pos:end="27:37"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:33">buf</name><index pos:start="27:34" pos:end="27:37">[<expr pos:start="27:35" pos:end="27:36"><literal type="number" pos:start="27:35" pos:end="27:36">10</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <literal type="number" pos:start="27:42" pos:end="27:54">0xffffffffULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">cmd</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">len</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:21">16</literal></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">5</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:11">cmd</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:17">xfer</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:28">ldl_be_p</name><argument_list pos:start="35:29" pos:end="35:37">(<argument pos:start="35:30" pos:end="35:36"><expr pos:start="35:30" pos:end="35:36"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:33">buf</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">6</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="35:39" pos:end="35:39">&amp;</operator> <literal type="number" pos:start="35:41" pos:end="35:53">0xffffffffULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">cmd</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">len</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:21">12</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <switch pos:start="49:5" pos:end="279:5">switch <condition pos:start="49:12" pos:end="49:19">(<expr pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:15">buf</name><index pos:start="49:16" pos:end="49:18">[<expr pos:start="49:17" pos:end="49:17"><literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="49:21" pos:end="279:5">{<block_content pos:start="51:5" pos:end="277:14">

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">TEST_UNIT_READY</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:16">case <expr pos:start="53:10" pos:end="53:15"><name pos:start="53:10" pos:end="53:15">REWIND</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:20">case <expr pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:19">START_STOP</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:22">case <expr pos:start="57:10" pos:end="57:21"><name pos:start="57:10" pos:end="57:21">SET_CAPACITY</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">WRITE_FILEMARKS</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:28">case <expr pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:27">WRITE_FILEMARKS_16</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:15">case <expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:14">SPACE</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:17">case <expr pos:start="65:10" pos:end="65:16"><name pos:start="65:10" pos:end="65:16">RESERVE</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:17">case <expr pos:start="67:10" pos:end="67:16"><name pos:start="67:10" pos:end="67:16">RELEASE</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:15">case <expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:14">ERASE</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:30">case <expr pos:start="71:10" pos:end="71:29"><name pos:start="71:10" pos:end="71:29">ALLOW_MEDIUM_REMOVAL</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:19">case <expr pos:start="73:10" pos:end="73:18"><name pos:start="73:10" pos:end="73:18">VERIFY_10</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:17">case <expr pos:start="75:10" pos:end="75:16"><name pos:start="75:10" pos:end="75:16">SEEK_10</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:27">case <expr pos:start="77:10" pos:end="77:26"><name pos:start="77:10" pos:end="77:26">SYNCHRONIZE_CACHE</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:30">case <expr pos:start="79:10" pos:end="79:29"><name pos:start="79:10" pos:end="79:29">SYNCHRONIZE_CACHE_16</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:19">case <expr pos:start="81:10" pos:end="81:18"><name pos:start="81:10" pos:end="81:18">LOCATE_16</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:27">case <expr pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:26">LOCK_UNLOCK_CACHE</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:22">case <expr pos:start="85:10" pos:end="85:21"><name pos:start="85:10" pos:end="85:21">SET_CD_SPEED</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:20">case <expr pos:start="87:10" pos:end="87:19"><name pos:start="87:10" pos:end="87:19">SET_LIMITS</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:23">case <expr pos:start="89:10" pos:end="89:22"><name pos:start="89:10" pos:end="89:22">WRITE_LONG_10</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:21">case <expr pos:start="91:10" pos:end="91:20"><name pos:start="91:10" pos:end="91:20">MOVE_MEDIUM</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:22">case <expr pos:start="93:10" pos:end="93:21"><name pos:start="93:10" pos:end="93:21">UPDATE_BLOCK</name></expr>:</case>

    <case pos:start="95:5" pos:end="95:23">case <expr pos:start="95:10" pos:end="95:22"><name pos:start="95:10" pos:end="95:22">RESERVE_TRACK</name></expr>:</case>

    <case pos:start="97:5" pos:end="97:24">case <expr pos:start="97:10" pos:end="97:23"><name pos:start="97:10" pos:end="97:23">SET_READ_AHEAD</name></expr>:</case>

    <case pos:start="99:5" pos:end="99:19">case <expr pos:start="99:10" pos:end="99:18"><name pos:start="99:10" pos:end="99:18">PRE_FETCH</name></expr>:</case>

    <case pos:start="101:5" pos:end="101:22">case <expr pos:start="101:10" pos:end="101:21"><name pos:start="101:10" pos:end="101:21">PRE_FETCH_16</name></expr>:</case>

    <case pos:start="103:5" pos:end="103:25">case <expr pos:start="103:10" pos:end="103:24"><name pos:start="103:10" pos:end="103:24">ALLOW_OVERWRITE</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:22"><expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:11">cmd</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">xfer</name></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <literal type="number" pos:start="105:21" pos:end="105:21">0</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:20">case <expr pos:start="109:10" pos:end="109:19"><name pos:start="109:10" pos:end="109:19">MODE_SENSE</name></expr>:</case>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:23">case <expr pos:start="113:10" pos:end="113:22"><name pos:start="113:10" pos:end="113:22">WRITE_SAME_10</name></expr>:</case>

    <case pos:start="115:5" pos:end="115:23">case <expr pos:start="115:10" pos:end="115:22"><name pos:start="115:10" pos:end="115:22">WRITE_SAME_16</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:11">cmd</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:17">xfer</name></name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:23">dev</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:34">blocksize</name></name></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:26">case <expr pos:start="121:10" pos:end="121:25"><name pos:start="121:10" pos:end="121:25">READ_CAPACITY_10</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:22"><expr pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:11">cmd</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:17">xfer</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <literal type="number" pos:start="123:21" pos:end="123:21">8</literal></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <case pos:start="127:5" pos:end="127:27">case <expr pos:start="127:10" pos:end="127:26"><name pos:start="127:10" pos:end="127:26">READ_BLOCK_LIMITS</name></expr>:</case>

        <expr_stmt pos:start="129:9" pos:end="129:22"><expr pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:11">cmd</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:17">xfer</name></name> <operator pos:start="129:19" pos:end="129:19">=</operator> <literal type="number" pos:start="129:21" pos:end="129:21">6</literal></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <case pos:start="133:5" pos:end="133:25">case <expr pos:start="133:10" pos:end="133:24"><name pos:start="133:10" pos:end="133:24">SEND_VOLUME_TAG</name></expr>:</case>

        <comment type="block" pos:start="135:9" pos:end="135:60">/* GPCMD_SET_STREAMING from multimedia commands.  */</comment>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:34">(<expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:15">dev</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:21">type</name></name> <operator pos:start="137:23" pos:end="137:24">==</operator> <name pos:start="137:26" pos:end="137:33">TYPE_ROM</name></expr>)</condition> <block pos:start="137:36" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:48">

            <expr_stmt pos:start="139:13" pos:end="139:48"><expr pos:start="139:13" pos:end="139:47"><name pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:15">cmd</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:21">xfer</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:31"><name pos:start="139:25" pos:end="139:27">buf</name><index pos:start="139:28" pos:end="139:31">[<expr pos:start="139:29" pos:end="139:30"><literal type="number" pos:start="139:29" pos:end="139:30">10</literal></expr>]</index></name> <operator pos:start="139:33" pos:end="139:33">|</operator> <operator pos:start="139:35" pos:end="139:35">(</operator><name pos:start="139:36" pos:end="139:41"><name pos:start="139:36" pos:end="139:38">buf</name><index pos:start="139:39" pos:end="139:41">[<expr pos:start="139:40" pos:end="139:40"><literal type="number" pos:start="139:40" pos:end="139:40">9</literal></expr>]</index></name> <operator pos:start="139:43" pos:end="139:44">&lt;&lt;</operator> <literal type="number" pos:start="139:46" pos:end="139:46">8</literal><operator pos:start="139:47" pos:end="139:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="145:9">else <block pos:start="141:16" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:47">

            <expr_stmt pos:start="143:13" pos:end="143:47"><expr pos:start="143:13" pos:end="143:46"><name pos:start="143:13" pos:end="143:21"><name pos:start="143:13" pos:end="143:15">cmd</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:21">xfer</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <name pos:start="143:25" pos:end="143:30"><name pos:start="143:25" pos:end="143:27">buf</name><index pos:start="143:28" pos:end="143:30">[<expr pos:start="143:29" pos:end="143:29"><literal type="number" pos:start="143:29" pos:end="143:29">9</literal></expr>]</index></name> <operator pos:start="143:32" pos:end="143:32">|</operator> <operator pos:start="143:34" pos:end="143:34">(</operator><name pos:start="143:35" pos:end="143:40"><name pos:start="143:35" pos:end="143:37">buf</name><index pos:start="143:38" pos:end="143:40">[<expr pos:start="143:39" pos:end="143:39"><literal type="number" pos:start="143:39" pos:end="143:39">8</literal></expr>]</index></name> <operator pos:start="143:42" pos:end="143:43">&lt;&lt;</operator> <literal type="number" pos:start="143:45" pos:end="143:45">8</literal><operator pos:start="143:46" pos:end="143:46">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:17">case <expr pos:start="149:10" pos:end="149:16"><name pos:start="149:10" pos:end="149:16">WRITE_6</name></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:39">/* length 0 means 256 blocks */</comment>

        <if_stmt pos:start="153:9" pos:end="157:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:27">(<expr pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:21"><name pos:start="153:13" pos:end="153:15">cmd</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:21">xfer</name></name> <operator pos:start="153:23" pos:end="153:24">==</operator> <literal type="number" pos:start="153:26" pos:end="153:26">0</literal></expr>)</condition> <block pos:start="153:29" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:28">

            <expr_stmt pos:start="155:13" pos:end="155:28"><expr pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:21"><name pos:start="155:13" pos:end="155:15">cmd</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:21">xfer</name></name> <operator pos:start="155:23" pos:end="155:23">=</operator> <literal type="number" pos:start="155:25" pos:end="155:27">256</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    <case pos:start="159:5" pos:end="159:18">case <expr pos:start="159:10" pos:end="159:17"><name pos:start="159:10" pos:end="159:17">WRITE_10</name></expr>:</case>

    <case pos:start="161:5" pos:end="161:25">case <expr pos:start="161:10" pos:end="161:24"><name pos:start="161:10" pos:end="161:24">WRITE_VERIFY_10</name></expr>:</case>

    <case pos:start="163:5" pos:end="163:18">case <expr pos:start="163:10" pos:end="163:17"><name pos:start="163:10" pos:end="163:17">WRITE_12</name></expr>:</case>

    <case pos:start="165:5" pos:end="165:25">case <expr pos:start="165:10" pos:end="165:24"><name pos:start="165:10" pos:end="165:24">WRITE_VERIFY_12</name></expr>:</case>

    <case pos:start="167:5" pos:end="167:18">case <expr pos:start="167:10" pos:end="167:17"><name pos:start="167:10" pos:end="167:17">WRITE_16</name></expr>:</case>

    <case pos:start="169:5" pos:end="169:25">case <expr pos:start="169:10" pos:end="169:24"><name pos:start="169:10" pos:end="169:24">WRITE_VERIFY_16</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:36"><expr pos:start="171:9" pos:end="171:35"><name pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:11">cmd</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:17">xfer</name></name> <operator pos:start="171:19" pos:end="171:20">*=</operator> <name pos:start="171:22" pos:end="171:35"><name pos:start="171:22" pos:end="171:24">dev</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:35">blocksize</name></name></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    <case pos:start="175:5" pos:end="175:16">case <expr pos:start="175:10" pos:end="175:15"><name pos:start="175:10" pos:end="175:15">READ_6</name></expr>:</case>

    <case pos:start="177:5" pos:end="177:22">case <expr pos:start="177:10" pos:end="177:21"><name pos:start="177:10" pos:end="177:21">READ_REVERSE</name></expr>:</case>

        <comment type="block" pos:start="179:9" pos:end="179:39">/* length 0 means 256 blocks */</comment>

        <if_stmt pos:start="181:9" pos:end="185:9"><if pos:start="181:9" pos:end="185:9">if <condition pos:start="181:12" pos:end="181:27">(<expr pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:21"><name pos:start="181:13" pos:end="181:15">cmd</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:21">xfer</name></name> <operator pos:start="181:23" pos:end="181:24">==</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>)</condition> <block pos:start="181:29" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:28">

            <expr_stmt pos:start="183:13" pos:end="183:28"><expr pos:start="183:13" pos:end="183:27"><name pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:15">cmd</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:21">xfer</name></name> <operator pos:start="183:23" pos:end="183:23">=</operator> <literal type="number" pos:start="183:25" pos:end="183:27">256</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    <case pos:start="187:5" pos:end="187:17">case <expr pos:start="187:10" pos:end="187:16"><name pos:start="187:10" pos:end="187:16">READ_10</name></expr>:</case>

    <case pos:start="189:5" pos:end="189:31">case <expr pos:start="189:10" pos:end="189:30"><name pos:start="189:10" pos:end="189:30">RECOVER_BUFFERED_DATA</name></expr>:</case>

    <case pos:start="191:5" pos:end="191:17">case <expr pos:start="191:10" pos:end="191:16"><name pos:start="191:10" pos:end="191:16">READ_12</name></expr>:</case>

    <case pos:start="193:5" pos:end="193:17">case <expr pos:start="193:10" pos:end="193:16"><name pos:start="193:10" pos:end="193:16">READ_16</name></expr>:</case>

        <expr_stmt pos:start="195:9" pos:end="195:36"><expr pos:start="195:9" pos:end="195:35"><name pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:11">cmd</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:17">xfer</name></name> <operator pos:start="195:19" pos:end="195:20">*=</operator> <name pos:start="195:22" pos:end="195:35"><name pos:start="195:22" pos:end="195:24">dev</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:35">blocksize</name></name></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:21">case <expr pos:start="199:10" pos:end="199:20"><name pos:start="199:10" pos:end="199:20">FORMAT_UNIT</name></expr>:</case>

        <comment type="block" pos:start="201:9" pos:end="203:72">/* MMC mandates the parameter list to be 12-bytes long.  Parameters

         * for block devices are restricted to the header right now.  */</comment>

        <if_stmt pos:start="205:9" pos:end="213:9"><if pos:start="205:9" pos:end="209:9">if <condition pos:start="205:12" pos:end="205:51">(<expr pos:start="205:13" pos:end="205:50"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:15">dev</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:21">type</name></name> <operator pos:start="205:23" pos:end="205:24">==</operator> <name pos:start="205:26" pos:end="205:33">TYPE_ROM</name> <operator pos:start="205:35" pos:end="205:36">&amp;&amp;</operator> <operator pos:start="205:38" pos:end="205:38">(</operator><name pos:start="205:39" pos:end="205:44"><name pos:start="205:39" pos:end="205:41">buf</name><index pos:start="205:42" pos:end="205:44">[<expr pos:start="205:43" pos:end="205:43"><literal type="number" pos:start="205:43" pos:end="205:43">1</literal></expr>]</index></name> <operator pos:start="205:46" pos:end="205:46">&amp;</operator> <literal type="number" pos:start="205:48" pos:end="205:49">16</literal><operator pos:start="205:50" pos:end="205:50">)</operator></expr>)</condition> <block pos:start="205:53" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:27">

            <expr_stmt pos:start="207:13" pos:end="207:27"><expr pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:15">cmd</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:21">xfer</name></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <literal type="number" pos:start="207:25" pos:end="207:26">12</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:71">

            <expr_stmt pos:start="211:13" pos:end="211:71"><expr pos:start="211:13" pos:end="211:70"><name pos:start="211:13" pos:end="211:21"><name pos:start="211:13" pos:end="211:15">cmd</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:21">xfer</name></name> <operator pos:start="211:23" pos:end="211:23">=</operator> <ternary pos:start="211:25" pos:end="211:70"><condition pos:start="211:25" pos:end="211:44"><expr pos:start="211:25" pos:end="211:42"><operator pos:start="211:25" pos:end="211:25">(</operator><name pos:start="211:26" pos:end="211:31"><name pos:start="211:26" pos:end="211:28">buf</name><index pos:start="211:29" pos:end="211:31">[<expr pos:start="211:30" pos:end="211:30"><literal type="number" pos:start="211:30" pos:end="211:30">1</literal></expr>]</index></name> <operator pos:start="211:33" pos:end="211:33">&amp;</operator> <literal type="number" pos:start="211:35" pos:end="211:36">16</literal><operator pos:start="211:37" pos:end="211:37">)</operator> <operator pos:start="211:39" pos:end="211:40">==</operator> <literal type="number" pos:start="211:42" pos:end="211:42">0</literal></expr> ?</condition><then pos:start="211:46" pos:end="211:46"> <expr pos:start="211:46" pos:end="211:46"><literal type="number" pos:start="211:46" pos:end="211:46">0</literal></expr> </then><else pos:start="211:48" pos:end="211:70">: <expr pos:start="211:50" pos:end="211:70"><operator pos:start="211:50" pos:end="211:50">(</operator><ternary pos:start="211:51" pos:end="211:69"><condition pos:start="211:51" pos:end="211:63"><expr pos:start="211:51" pos:end="211:61"><name pos:start="211:51" pos:end="211:56"><name pos:start="211:51" pos:end="211:53">buf</name><index pos:start="211:54" pos:end="211:56">[<expr pos:start="211:55" pos:end="211:55"><literal type="number" pos:start="211:55" pos:end="211:55">1</literal></expr>]</index></name> <operator pos:start="211:58" pos:end="211:58">&amp;</operator> <literal type="number" pos:start="211:60" pos:end="211:61">32</literal></expr> ?</condition><then pos:start="211:65" pos:end="211:65"> <expr pos:start="211:65" pos:end="211:65"><literal type="number" pos:start="211:65" pos:end="211:65">8</literal></expr> </then><else pos:start="211:67" pos:end="211:69">: <expr pos:start="211:69" pos:end="211:69"><literal type="number" pos:start="211:69" pos:end="211:69">4</literal></expr></else></ternary><operator pos:start="211:70" pos:end="211:70">)</operator></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:17">case <expr pos:start="217:10" pos:end="217:16"><name pos:start="217:10" pos:end="217:16">INQUIRY</name></expr>:</case>

    <case pos:start="219:5" pos:end="219:28">case <expr pos:start="219:10" pos:end="219:27"><name pos:start="219:10" pos:end="219:27">RECEIVE_DIAGNOSTIC</name></expr>:</case>

    <case pos:start="221:5" pos:end="221:25">case <expr pos:start="221:10" pos:end="221:24"><name pos:start="221:10" pos:end="221:24">SEND_DIAGNOSTIC</name></expr>:</case>

        <expr_stmt pos:start="223:9" pos:end="223:43"><expr pos:start="223:9" pos:end="223:42"><name pos:start="223:9" pos:end="223:17"><name pos:start="223:9" pos:end="223:11">cmd</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:17">xfer</name></name> <operator pos:start="223:19" pos:end="223:19">=</operator> <name pos:start="223:21" pos:end="223:26"><name pos:start="223:21" pos:end="223:23">buf</name><index pos:start="223:24" pos:end="223:26">[<expr pos:start="223:25" pos:end="223:25"><literal type="number" pos:start="223:25" pos:end="223:25">4</literal></expr>]</index></name> <operator pos:start="223:28" pos:end="223:28">|</operator> <operator pos:start="223:30" pos:end="223:30">(</operator><name pos:start="223:31" pos:end="223:36"><name pos:start="223:31" pos:end="223:33">buf</name><index pos:start="223:34" pos:end="223:36">[<expr pos:start="223:35" pos:end="223:35"><literal type="number" pos:start="223:35" pos:end="223:35">3</literal></expr>]</index></name> <operator pos:start="223:38" pos:end="223:39">&lt;&lt;</operator> <literal type="number" pos:start="223:41" pos:end="223:41">8</literal><operator pos:start="223:42" pos:end="223:42">)</operator></expr>;</expr_stmt>

        <break pos:start="225:9" pos:end="225:14">break;</break>

    <case pos:start="227:5" pos:end="227:17">case <expr pos:start="227:10" pos:end="227:16"><name pos:start="227:10" pos:end="227:16">READ_CD</name></expr>:</case>

    <case pos:start="229:5" pos:end="229:21">case <expr pos:start="229:10" pos:end="229:20"><name pos:start="229:10" pos:end="229:20">READ_BUFFER</name></expr>:</case>

    <case pos:start="231:5" pos:end="231:22">case <expr pos:start="231:10" pos:end="231:21"><name pos:start="231:10" pos:end="231:21">WRITE_BUFFER</name></expr>:</case>

    <case pos:start="233:5" pos:end="233:24">case <expr pos:start="233:10" pos:end="233:23"><name pos:start="233:10" pos:end="233:23">SEND_CUE_SHEET</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:60"><expr pos:start="235:9" pos:end="235:59"><name pos:start="235:9" pos:end="235:17"><name pos:start="235:9" pos:end="235:11">cmd</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:17">xfer</name></name> <operator pos:start="235:19" pos:end="235:19">=</operator> <name pos:start="235:21" pos:end="235:26"><name pos:start="235:21" pos:end="235:23">buf</name><index pos:start="235:24" pos:end="235:26">[<expr pos:start="235:25" pos:end="235:25"><literal type="number" pos:start="235:25" pos:end="235:25">8</literal></expr>]</index></name> <operator pos:start="235:28" pos:end="235:28">|</operator> <operator pos:start="235:30" pos:end="235:30">(</operator><name pos:start="235:31" pos:end="235:36"><name pos:start="235:31" pos:end="235:33">buf</name><index pos:start="235:34" pos:end="235:36">[<expr pos:start="235:35" pos:end="235:35"><literal type="number" pos:start="235:35" pos:end="235:35">7</literal></expr>]</index></name> <operator pos:start="235:38" pos:end="235:39">&lt;&lt;</operator> <literal type="number" pos:start="235:41" pos:end="235:41">8</literal><operator pos:start="235:42" pos:end="235:42">)</operator> <operator pos:start="235:44" pos:end="235:44">|</operator> <operator pos:start="235:46" pos:end="235:46">(</operator><name pos:start="235:47" pos:end="235:52"><name pos:start="235:47" pos:end="235:49">buf</name><index pos:start="235:50" pos:end="235:52">[<expr pos:start="235:51" pos:end="235:51"><literal type="number" pos:start="235:51" pos:end="235:51">6</literal></expr>]</index></name> <operator pos:start="235:54" pos:end="235:55">&lt;&lt;</operator> <literal type="number" pos:start="235:57" pos:end="235:58">16</literal><operator pos:start="235:59" pos:end="235:59">)</operator></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:32">case <expr pos:start="239:10" pos:end="239:31"><name pos:start="239:10" pos:end="239:31">PERSISTENT_RESERVE_OUT</name></expr>:</case>

        <expr_stmt pos:start="241:9" pos:end="241:54"><expr pos:start="241:9" pos:end="241:53"><name pos:start="241:9" pos:end="241:17"><name pos:start="241:9" pos:end="241:11">cmd</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:17">xfer</name></name> <operator pos:start="241:19" pos:end="241:19">=</operator> <call pos:start="241:21" pos:end="241:37"><name pos:start="241:21" pos:end="241:28">ldl_be_p</name><argument_list pos:start="241:29" pos:end="241:37">(<argument pos:start="241:30" pos:end="241:36"><expr pos:start="241:30" pos:end="241:36"><operator pos:start="241:30" pos:end="241:30">&amp;</operator><name pos:start="241:31" pos:end="241:36"><name pos:start="241:31" pos:end="241:33">buf</name><index pos:start="241:34" pos:end="241:36">[<expr pos:start="241:35" pos:end="241:35"><literal type="number" pos:start="241:35" pos:end="241:35">5</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="241:39" pos:end="241:39">&amp;</operator> <literal type="number" pos:start="241:41" pos:end="241:53">0xffffffffULL</literal></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:18">case <expr pos:start="245:10" pos:end="245:17"><name pos:start="245:10" pos:end="245:17">ERASE_12</name></expr>:</case>

        <if_stmt pos:start="247:9" pos:end="255:9"><if pos:start="247:9" pos:end="255:9">if <condition pos:start="247:12" pos:end="247:34">(<expr pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:21"><name pos:start="247:13" pos:end="247:15">dev</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:21">type</name></name> <operator pos:start="247:23" pos:end="247:24">==</operator> <name pos:start="247:26" pos:end="247:33">TYPE_ROM</name></expr>)</condition> <block pos:start="247:36" pos:end="255:9">{<block_content pos:start="251:13" pos:end="253:76">

            <comment type="block" pos:start="249:13" pos:end="249:47">/* MMC command GET PERFORMANCE.  */</comment>

            <expr_stmt pos:start="251:13" pos:end="253:76"><expr pos:start="251:13" pos:end="253:75"><name pos:start="251:13" pos:end="251:21"><name pos:start="251:13" pos:end="251:15">cmd</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:21">xfer</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <call pos:start="251:25" pos:end="253:75"><name pos:start="251:25" pos:end="251:51">scsi_get_performance_length</name><argument_list pos:start="251:52" pos:end="253:75">(<argument pos:start="251:53" pos:end="251:74"><expr pos:start="251:53" pos:end="251:74"><name pos:start="251:53" pos:end="251:58"><name pos:start="251:53" pos:end="251:55">buf</name><index pos:start="251:56" pos:end="251:58">[<expr pos:start="251:57" pos:end="251:57"><literal type="number" pos:start="251:57" pos:end="251:57">9</literal></expr>]</index></name> <operator pos:start="251:60" pos:end="251:60">|</operator> <operator pos:start="251:62" pos:end="251:62">(</operator><name pos:start="251:63" pos:end="251:68"><name pos:start="251:63" pos:end="251:65">buf</name><index pos:start="251:66" pos:end="251:68">[<expr pos:start="251:67" pos:end="251:67"><literal type="number" pos:start="251:67" pos:end="251:67">8</literal></expr>]</index></name> <operator pos:start="251:70" pos:end="251:71">&lt;&lt;</operator> <literal type="number" pos:start="251:73" pos:end="251:73">8</literal><operator pos:start="251:74" pos:end="251:74">)</operator></expr></argument>,

                                                    <argument pos:start="253:53" pos:end="253:59"><expr pos:start="253:53" pos:end="253:59"><name pos:start="253:53" pos:end="253:59"><name pos:start="253:53" pos:end="253:55">buf</name><index pos:start="253:56" pos:end="253:59">[<expr pos:start="253:57" pos:end="253:58"><literal type="number" pos:start="253:57" pos:end="253:58">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:62" pos:end="253:74"><expr pos:start="253:62" pos:end="253:74"><name pos:start="253:62" pos:end="253:67"><name pos:start="253:62" pos:end="253:64">buf</name><index pos:start="253:65" pos:end="253:67">[<expr pos:start="253:66" pos:end="253:66"><literal type="number" pos:start="253:66" pos:end="253:66">1</literal></expr>]</index></name> <operator pos:start="253:69" pos:end="253:69">&amp;</operator> <literal type="number" pos:start="253:71" pos:end="253:74">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="257:9" pos:end="257:14">break;</break>

    <case pos:start="259:5" pos:end="259:26">case <expr pos:start="259:10" pos:end="259:25"><name pos:start="259:10" pos:end="259:25">MECHANISM_STATUS</name></expr>:</case>

    <case pos:start="261:5" pos:end="261:28">case <expr pos:start="261:10" pos:end="261:27"><name pos:start="261:10" pos:end="261:27">READ_DVD_STRUCTURE</name></expr>:</case>

    <case pos:start="263:5" pos:end="263:28">case <expr pos:start="263:10" pos:end="263:27"><name pos:start="263:10" pos:end="263:27">SEND_DVD_STRUCTURE</name></expr>:</case>

    <case pos:start="265:5" pos:end="265:25">case <expr pos:start="265:10" pos:end="265:24"><name pos:start="265:10" pos:end="265:24">MAINTENANCE_OUT</name></expr>:</case>

    <case pos:start="267:5" pos:end="267:24">case <expr pos:start="267:10" pos:end="267:23"><name pos:start="267:10" pos:end="267:23">MAINTENANCE_IN</name></expr>:</case>

        <if_stmt pos:start="269:9" pos:end="275:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:34">(<expr pos:start="269:13" pos:end="269:33"><name pos:start="269:13" pos:end="269:21"><name pos:start="269:13" pos:end="269:15">dev</name><operator pos:start="269:16" pos:end="269:17">-&gt;</operator><name pos:start="269:18" pos:end="269:21">type</name></name> <operator pos:start="269:23" pos:end="269:24">==</operator> <name pos:start="269:26" pos:end="269:33">TYPE_ROM</name></expr>)</condition> <block pos:start="269:36" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:47">

            <comment type="block" pos:start="271:13" pos:end="271:79">/* GPCMD_REPORT_KEY and GPCMD_SEND_KEY from multi media commands */</comment>

            <expr_stmt pos:start="273:13" pos:end="273:47"><expr pos:start="273:13" pos:end="273:46"><name pos:start="273:13" pos:end="273:21"><name pos:start="273:13" pos:end="273:15">cmd</name><operator pos:start="273:16" pos:end="273:17">-&gt;</operator><name pos:start="273:18" pos:end="273:21">xfer</name></name> <operator pos:start="273:23" pos:end="273:23">=</operator> <name pos:start="273:25" pos:end="273:30"><name pos:start="273:25" pos:end="273:27">buf</name><index pos:start="273:28" pos:end="273:30">[<expr pos:start="273:29" pos:end="273:29"><literal type="number" pos:start="273:29" pos:end="273:29">9</literal></expr>]</index></name> <operator pos:start="273:32" pos:end="273:32">|</operator> <operator pos:start="273:34" pos:end="273:34">(</operator><name pos:start="273:35" pos:end="273:40"><name pos:start="273:35" pos:end="273:37">buf</name><index pos:start="273:38" pos:end="273:40">[<expr pos:start="273:39" pos:end="273:39"><literal type="number" pos:start="273:39" pos:end="273:39">8</literal></expr>]</index></name> <operator pos:start="273:42" pos:end="273:43">&lt;&lt;</operator> <literal type="number" pos:start="273:45" pos:end="273:45">8</literal><operator pos:start="273:46" pos:end="273:46">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="281:5" pos:end="281:13">return <expr pos:start="281:12" pos:end="281:12"><literal type="number" pos:start="281:12" pos:end="281:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
