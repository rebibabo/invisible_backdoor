<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8413.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">tls_open</name><parameter_list pos:start="1:20" pos:end="1:62">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">URLContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">h</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">uri</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:17">[<expr pos:start="11:14" pos:end="11:16"><literal type="number" pos:start="11:14" pos:end="11:16">200</literal></expr>]</index></name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:23">host</name><index pos:start="11:24" pos:end="11:28">[<expr pos:start="11:25" pos:end="11:27"><literal type="number" pos:start="11:25" pos:end="11:27">200</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">numerichost</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:19">addrinfo</name></name></type> <name pos:start="15:21" pos:end="15:25">hints</name> <init pos:start="15:27" pos:end="15:33">= <expr pos:start="15:29" pos:end="15:33"><block pos:start="15:29" pos:end="15:33">{ <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="15:36" pos:end="15:45"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:36" pos:end="15:36">*</modifier></type><name pos:start="15:37" pos:end="15:38">ai</name> <init pos:start="15:40" pos:end="15:45">= <expr pos:start="15:42" pos:end="15:45"><name pos:start="15:42" pos:end="15:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:26">proxy_path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">use_proxy</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">ff_tls_init</name><argument_list pos:start="23:16" pos:end="23:17">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:76"><expr pos:start="27:5" pos:end="27:75"><call pos:start="27:5" pos:end="27:75"><name pos:start="27:5" pos:end="27:16">av_url_split</name><argument_list pos:start="27:17" pos:end="27:75">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">NULL</name></expr></argument>, <argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">NULL</name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">host</name></expr></argument>, <argument pos:start="27:42" pos:end="27:53"><expr pos:start="27:42" pos:end="27:53"><sizeof pos:start="27:42" pos:end="27:53">sizeof<argument_list pos:start="27:48" pos:end="27:53">(<argument pos:start="27:49" pos:end="27:52"><expr pos:start="27:49" pos:end="27:52"><name pos:start="27:49" pos:end="27:52">host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:56" pos:end="27:60"><expr pos:start="27:56" pos:end="27:60"><operator pos:start="27:56" pos:end="27:56">&amp;</operator><name pos:start="27:57" pos:end="27:60">port</name></expr></argument>, <argument pos:start="27:63" pos:end="27:66"><expr pos:start="27:63" pos:end="27:66"><name pos:start="27:63" pos:end="27:66">NULL</name></expr></argument>, <argument pos:start="27:69" pos:end="27:69"><expr pos:start="27:69" pos:end="27:69"><literal type="number" pos:start="27:69" pos:end="27:69">0</literal></expr></argument>, <argument pos:start="27:72" pos:end="27:74"><expr pos:start="27:72" pos:end="27:74"><name pos:start="27:72" pos:end="27:74">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><call pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:15">ff_url_join</name><argument_list pos:start="29:16" pos:end="29:64">(<argument pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">buf</name></expr></argument>, <argument pos:start="29:22" pos:end="29:32"><expr pos:start="29:22" pos:end="29:32"><sizeof pos:start="29:22" pos:end="29:32">sizeof<argument_list pos:start="29:28" pos:end="29:32">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:35" pos:end="29:39"><expr pos:start="29:35" pos:end="29:39"><literal type="string" pos:start="29:35" pos:end="29:39">"tcp"</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">NULL</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">host</name></expr></argument>, <argument pos:start="29:54" pos:end="29:57"><expr pos:start="29:54" pos:end="29:57"><name pos:start="29:54" pos:end="29:57">port</name></expr></argument>, <argument pos:start="29:60" pos:end="29:63"><expr pos:start="29:60" pos:end="29:63"><name pos:start="29:60" pos:end="29:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:9">hints</name><operator pos:start="33:10" pos:end="33:10">.</operator><name pos:start="33:11" pos:end="33:18">ai_flags</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:35">AI_NUMERICHOST</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:46">(<expr pos:start="35:9" pos:end="35:45"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:45"><name pos:start="35:10" pos:end="35:20">getaddrinfo</name><argument_list pos:start="35:21" pos:end="35:45">(<argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><name pos:start="35:22" pos:end="35:25">host</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">NULL</name></expr></argument>, <argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:39">hints</name></expr></argument>, <argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:44">ai</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:48" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:25">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:19">numerichost</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><call pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:20">freeaddrinfo</name><argument_list pos:start="39:21" pos:end="39:24">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">ai</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:14">proxy_path</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:37"><name pos:start="45:18" pos:end="45:23">getenv</name><argument_list pos:start="45:24" pos:end="45:37">(<argument pos:start="45:25" pos:end="45:36"><expr pos:start="45:25" pos:end="45:36"><literal type="string" pos:start="45:25" pos:end="45:36">"http_proxy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:79"><expr pos:start="47:5" pos:end="49:78"><name pos:start="47:5" pos:end="47:13">use_proxy</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">!</operator><call pos:start="47:18" pos:end="47:65"><name pos:start="47:18" pos:end="47:39">ff_http_match_no_proxy</name><argument_list pos:start="47:40" pos:end="47:65">(<argument pos:start="47:41" pos:end="47:58"><expr pos:start="47:41" pos:end="47:58"><call pos:start="47:41" pos:end="47:58"><name pos:start="47:41" pos:end="47:46">getenv</name><argument_list pos:start="47:47" pos:end="47:58">(<argument pos:start="47:48" pos:end="47:57"><expr pos:start="47:48" pos:end="47:57"><literal type="string" pos:start="47:48" pos:end="47:57">"no_proxy"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:61" pos:end="47:64"><expr pos:start="47:61" pos:end="47:64"><name pos:start="47:61" pos:end="47:64">host</name></expr></argument>)</argument_list></call> <operator pos:start="47:67" pos:end="47:68">&amp;&amp;</operator>

                <name pos:start="49:17" pos:end="49:26">proxy_path</name> <operator pos:start="49:28" pos:end="49:29">!=</operator> <name pos:start="49:31" pos:end="49:34">NULL</name> <operator pos:start="49:36" pos:end="49:37">&amp;&amp;</operator> <call pos:start="49:39" pos:end="49:78"><name pos:start="49:39" pos:end="49:49">av_strstart</name><argument_list pos:start="49:50" pos:end="49:78">(<argument pos:start="49:51" pos:end="49:60"><expr pos:start="49:51" pos:end="49:60"><name pos:start="49:51" pos:end="49:60">proxy_path</name></expr></argument>, <argument pos:start="49:63" pos:end="49:71"><expr pos:start="49:63" pos:end="49:71"><literal type="string" pos:start="49:63" pos:end="49:71">"http://"</literal></expr></argument>, <argument pos:start="49:74" pos:end="49:77"><expr pos:start="49:74" pos:end="49:77"><name pos:start="49:74" pos:end="49:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="71:5"><if pos:start="53:5" pos:end="71:5">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:17">use_proxy</name></expr>)</condition> <block pos:start="53:20" pos:end="71:5">{<block_content pos:start="55:9" pos:end="69:45">

        <decl_stmt pos:start="55:9" pos:end="55:57"><decl pos:start="55:9" pos:end="55:28"><type pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:12">char</name></type> <name pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:23">proxy_host</name><index pos:start="55:24" pos:end="55:28">[<expr pos:start="55:25" pos:end="55:27"><literal type="number" pos:start="55:25" pos:end="55:27">200</literal></expr>]</index></name></decl>, <decl pos:start="55:31" pos:end="55:45"><type ref="prev" pos:start="55:9" pos:end="55:12"/><name pos:start="55:31" pos:end="55:45"><name pos:start="55:31" pos:end="55:40">proxy_auth</name><index pos:start="55:41" pos:end="55:45">[<expr pos:start="55:42" pos:end="55:44"><literal type="number" pos:start="55:42" pos:end="55:44">200</literal></expr>]</index></name></decl>, <decl pos:start="55:48" pos:end="55:56"><type ref="prev" pos:start="55:9" pos:end="55:12"/><name pos:start="55:48" pos:end="55:56"><name pos:start="55:48" pos:end="55:51">dest</name><index pos:start="55:52" pos:end="55:56">[<expr pos:start="55:53" pos:end="55:55"><literal type="number" pos:start="55:53" pos:end="55:55">200</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:23"><decl pos:start="57:9" pos:end="57:22"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:22">proxy_port</name></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="63:33"><expr pos:start="59:9" pos:end="63:32"><call pos:start="59:9" pos:end="63:32"><name pos:start="59:9" pos:end="59:20">av_url_split</name><argument_list pos:start="59:21" pos:end="63:32">(<argument pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:25"><name pos:start="59:22" pos:end="59:25">NULL</name></expr></argument>, <argument pos:start="59:28" pos:end="59:28"><expr pos:start="59:28" pos:end="59:28"><literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:40"><expr pos:start="59:31" pos:end="59:40"><name pos:start="59:31" pos:end="59:40">proxy_auth</name></expr></argument>, <argument pos:start="59:43" pos:end="59:60"><expr pos:start="59:43" pos:end="59:60"><sizeof pos:start="59:43" pos:end="59:60">sizeof<argument_list pos:start="59:49" pos:end="59:60">(<argument pos:start="59:50" pos:end="59:59"><expr pos:start="59:50" pos:end="59:59"><name pos:start="59:50" pos:end="59:59">proxy_auth</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="61:22" pos:end="61:31"><expr pos:start="61:22" pos:end="61:31"><name pos:start="61:22" pos:end="61:31">proxy_host</name></expr></argument>, <argument pos:start="61:34" pos:end="61:51"><expr pos:start="61:34" pos:end="61:51"><sizeof pos:start="61:34" pos:end="61:51">sizeof<argument_list pos:start="61:40" pos:end="61:51">(<argument pos:start="61:41" pos:end="61:50"><expr pos:start="61:41" pos:end="61:50"><name pos:start="61:41" pos:end="61:50">proxy_host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:54" pos:end="61:64"><expr pos:start="61:54" pos:end="61:64"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:64">proxy_port</name></expr></argument>, <argument pos:start="61:67" pos:end="61:70"><expr pos:start="61:67" pos:end="61:70"><name pos:start="61:67" pos:end="61:70">NULL</name></expr></argument>, <argument pos:start="61:73" pos:end="61:73"><expr pos:start="61:73" pos:end="61:73"><literal type="number" pos:start="61:73" pos:end="61:73">0</literal></expr></argument>,

                     <argument pos:start="63:22" pos:end="63:31"><expr pos:start="63:22" pos:end="63:31"><name pos:start="63:22" pos:end="63:31">proxy_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:70"><expr pos:start="65:9" pos:end="65:69"><call pos:start="65:9" pos:end="65:69"><name pos:start="65:9" pos:end="65:19">ff_url_join</name><argument_list pos:start="65:20" pos:end="65:69">(<argument pos:start="65:21" pos:end="65:24"><expr pos:start="65:21" pos:end="65:24"><name pos:start="65:21" pos:end="65:24">dest</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><sizeof pos:start="65:27" pos:end="65:38">sizeof<argument_list pos:start="65:33" pos:end="65:38">(<argument pos:start="65:34" pos:end="65:37"><expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">dest</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:41" pos:end="65:44"><expr pos:start="65:41" pos:end="65:44"><name pos:start="65:41" pos:end="65:44">NULL</name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">NULL</name></expr></argument>, <argument pos:start="65:53" pos:end="65:56"><expr pos:start="65:53" pos:end="65:56"><name pos:start="65:53" pos:end="65:56">host</name></expr></argument>, <argument pos:start="65:59" pos:end="65:62"><expr pos:start="65:59" pos:end="65:62"><name pos:start="65:59" pos:end="65:62">port</name></expr></argument>, <argument pos:start="65:65" pos:end="65:68"><expr pos:start="65:65" pos:end="65:68"><name pos:start="65:65" pos:end="65:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="69:45"><expr pos:start="67:9" pos:end="69:44"><call pos:start="67:9" pos:end="69:44"><name pos:start="67:9" pos:end="67:19">ff_url_join</name><argument_list pos:start="67:20" pos:end="69:44">(<argument pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">buf</name></expr></argument>, <argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><sizeof pos:start="67:26" pos:end="67:36">sizeof<argument_list pos:start="67:32" pos:end="67:36">(<argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:39" pos:end="67:49"><expr pos:start="67:39" pos:end="67:49"><literal type="string" pos:start="67:39" pos:end="67:49">"httpproxy"</literal></expr></argument>, <argument pos:start="67:52" pos:end="67:61"><expr pos:start="67:52" pos:end="67:61"><name pos:start="67:52" pos:end="67:61">proxy_auth</name></expr></argument>, <argument pos:start="67:64" pos:end="67:73"><expr pos:start="67:64" pos:end="67:73"><name pos:start="67:64" pos:end="67:73">proxy_host</name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:30"><expr pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:30">proxy_port</name></expr></argument>, <argument pos:start="69:33" pos:end="69:37"><expr pos:start="69:33" pos:end="69:37"><literal type="string" pos:start="69:33" pos:end="69:37">"/%s"</literal></expr></argument>, <argument pos:start="69:40" pos:end="69:43"><expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:51"><expr pos:start="75:5" pos:end="77:50"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="77:50"><name pos:start="75:11" pos:end="75:20">ffurl_open</name><argument_list pos:start="75:21" pos:end="77:50">(<argument pos:start="75:22" pos:end="75:28"><expr pos:start="75:22" pos:end="75:28"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:28"><name pos:start="75:23" pos:end="75:23">c</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">tcp</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:33">buf</name></expr></argument>, <argument pos:start="75:36" pos:end="75:55"><expr pos:start="75:36" pos:end="75:55"><name pos:start="75:36" pos:end="75:55">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                     <argument pos:start="77:22" pos:end="77:43"><expr pos:start="77:22" pos:end="77:43"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:43"><name pos:start="77:23" pos:end="77:23">h</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:43">interrupt_callback</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:49"><expr pos:start="77:46" pos:end="77:49"><name pos:start="77:46" pos:end="77:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:12">(<expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">ret</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <goto pos:start="81:9" pos:end="81:18">goto <name pos:start="81:14" pos:end="81:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="88:0"><expr pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:9"><name pos:start="83:5" pos:end="83:5">c</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:9">fd</name></name> <operator pos:start="83:11" pos:end="83:11">=</operator> <call pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:33">ffurl_get_file_handle</name><argument_list pos:start="83:34" pos:end="83:41">(<argument pos:start="83:35" pos:end="83:40"><expr pos:start="83:35" pos:end="83:40"><name pos:start="83:35" pos:end="83:40"><name pos:start="83:35" pos:end="83:35">c</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:40">tcp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="87:1" pos:end="87:17">#<cpp:directive pos:start="87:2" pos:end="87:3">if</cpp:directive> <expr pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:17">CONFIG_GNUTLS</name></expr></cpp:if>

    <expr_stmt pos:start="89:5" pos:end="89:44"><expr pos:start="89:5" pos:end="89:43"><call pos:start="89:5" pos:end="89:43"><name pos:start="89:5" pos:end="89:15">gnutls_init</name><argument_list pos:start="89:16" pos:end="89:43">(<argument pos:start="89:17" pos:end="89:27"><expr pos:start="89:17" pos:end="89:27"><operator pos:start="89:17" pos:end="89:17">&amp;</operator><name pos:start="89:18" pos:end="89:27"><name pos:start="89:18" pos:end="89:18">c</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:27">session</name></name></expr></argument>, <argument pos:start="89:30" pos:end="89:42"><expr pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:42">GNUTLS_CLIENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:80"><if pos:start="91:5" pos:end="93:80">if <condition pos:start="91:8" pos:end="91:21">(<expr pos:start="91:9" pos:end="91:20"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:20">numerichost</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:80"><block_content pos:start="93:9" pos:end="93:80">

        <expr_stmt pos:start="93:9" pos:end="93:80"><expr pos:start="93:9" pos:end="93:79"><call pos:start="93:9" pos:end="93:79"><name pos:start="93:9" pos:end="93:30">gnutls_server_name_set</name><argument_list pos:start="93:31" pos:end="93:79">(<argument pos:start="93:32" pos:end="93:41"><expr pos:start="93:32" pos:end="93:41"><name pos:start="93:32" pos:end="93:41"><name pos:start="93:32" pos:end="93:32">c</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:41">session</name></name></expr></argument>, <argument pos:start="93:44" pos:end="93:58"><expr pos:start="93:44" pos:end="93:58"><name pos:start="93:44" pos:end="93:58">GNUTLS_NAME_DNS</name></expr></argument>, <argument pos:start="93:61" pos:end="93:64"><expr pos:start="93:61" pos:end="93:64"><name pos:start="93:61" pos:end="93:64">host</name></expr></argument>, <argument pos:start="93:67" pos:end="93:78"><expr pos:start="93:67" pos:end="93:78"><call pos:start="93:67" pos:end="93:78"><name pos:start="93:67" pos:end="93:72">strlen</name><argument_list pos:start="93:73" pos:end="93:78">(<argument pos:start="93:74" pos:end="93:77"><expr pos:start="93:74" pos:end="93:77"><name pos:start="93:74" pos:end="93:77">host</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:54"><expr pos:start="95:5" pos:end="95:53"><call pos:start="95:5" pos:end="95:53"><name pos:start="95:5" pos:end="95:43">gnutls_certificate_allocate_credentials</name><argument_list pos:start="95:44" pos:end="95:53">(<argument pos:start="95:45" pos:end="95:52"><expr pos:start="95:45" pos:end="95:52"><operator pos:start="95:45" pos:end="95:45">&amp;</operator><name pos:start="95:46" pos:end="95:52"><name pos:start="95:46" pos:end="95:46">c</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:52">cred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:52"><expr pos:start="97:5" pos:end="97:51"><call pos:start="97:5" pos:end="97:51"><name pos:start="97:5" pos:end="97:39">gnutls_certificate_set_verify_flags</name><argument_list pos:start="97:40" pos:end="97:51">(<argument pos:start="97:41" pos:end="97:47"><expr pos:start="97:41" pos:end="97:47"><name pos:start="97:41" pos:end="97:47"><name pos:start="97:41" pos:end="97:41">c</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:47">cred</name></name></expr></argument>, <argument pos:start="97:50" pos:end="97:50"><expr pos:start="97:50" pos:end="97:50"><literal type="number" pos:start="97:50" pos:end="97:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:72"><expr pos:start="99:5" pos:end="99:71"><call pos:start="99:5" pos:end="99:71"><name pos:start="99:5" pos:end="99:26">gnutls_credentials_set</name><argument_list pos:start="99:27" pos:end="99:71">(<argument pos:start="99:28" pos:end="99:37"><expr pos:start="99:28" pos:end="99:37"><name pos:start="99:28" pos:end="99:37"><name pos:start="99:28" pos:end="99:28">c</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:37">session</name></name></expr></argument>, <argument pos:start="99:40" pos:end="99:61"><expr pos:start="99:40" pos:end="99:61"><name pos:start="99:40" pos:end="99:61">GNUTLS_CRD_CERTIFICATE</name></expr></argument>, <argument pos:start="99:64" pos:end="99:70"><expr pos:start="99:64" pos:end="99:70"><name pos:start="99:64" pos:end="99:70"><name pos:start="99:64" pos:end="99:64">c</name><operator pos:start="99:65" pos:end="99:66">-&gt;</operator><name pos:start="99:67" pos:end="99:70">cred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:59"><expr pos:start="101:5" pos:end="103:58"><call pos:start="101:5" pos:end="103:58"><name pos:start="101:5" pos:end="101:28">gnutls_transport_set_ptr</name><argument_list pos:start="101:29" pos:end="103:58">(<argument pos:start="101:30" pos:end="101:39"><expr pos:start="101:30" pos:end="101:39"><name pos:start="101:30" pos:end="101:39"><name pos:start="101:30" pos:end="101:30">c</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:39">session</name></name></expr></argument>, <argument pos:start="101:42" pos:end="103:57"><expr pos:start="101:42" pos:end="103:57"><operator pos:start="101:42" pos:end="101:42">(</operator><name pos:start="101:43" pos:end="101:64">gnutls_transport_ptr_t</name><operator pos:start="101:65" pos:end="101:65">)</operator>

                                         <operator pos:start="103:42" pos:end="103:42">(</operator><name pos:start="103:43" pos:end="103:50">intptr_t</name><operator pos:start="103:51" pos:end="103:51">)</operator> <name pos:start="103:53" pos:end="103:57"><name pos:start="103:53" pos:end="103:53">c</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:57">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:59"><expr pos:start="105:5" pos:end="105:58"><call pos:start="105:5" pos:end="105:58"><name pos:start="105:5" pos:end="105:30">gnutls_priority_set_direct</name><argument_list pos:start="105:31" pos:end="105:58">(<argument pos:start="105:32" pos:end="105:41"><expr pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:41"><name pos:start="105:32" pos:end="105:32">c</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:41">session</name></name></expr></argument>, <argument pos:start="105:44" pos:end="105:51"><expr pos:start="105:44" pos:end="105:51"><literal type="string" pos:start="105:44" pos:end="105:51">"NORMAL"</literal></expr></argument>, <argument pos:start="105:54" pos:end="105:57"><expr pos:start="105:54" pos:end="105:57"><name pos:start="105:54" pos:end="105:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="107:5" pos:end="122:0">while <condition pos:start="107:11" pos:end="107:13">(<expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">1</literal></expr>)</condition> <block pos:start="107:15" pos:end="122:0">{<block_content pos:start="109:9" pos:end="117:22">

        <expr_stmt pos:start="109:9" pos:end="109:43"><expr pos:start="109:9" pos:end="109:42"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:42"><name pos:start="109:15" pos:end="109:30">gnutls_handshake</name><argument_list pos:start="109:31" pos:end="109:42">(<argument pos:start="109:32" pos:end="109:41"><expr pos:start="109:32" pos:end="109:41"><name pos:start="109:32" pos:end="109:41"><name pos:start="109:32" pos:end="109:32">c</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:41">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:18"><if pos:start="111:9" pos:end="113:18">if <condition pos:start="111:12" pos:end="111:21">(<expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:18">==</operator> <literal type="number" pos:start="111:20" pos:end="111:20">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:18"><block_content pos:start="113:13" pos:end="113:18">

            <break pos:start="113:13" pos:end="113:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="117:22"><if pos:start="115:9" pos:end="117:22">if <condition pos:start="115:12" pos:end="115:44">(<expr pos:start="115:13" pos:end="115:43"><operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:16">ret</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:38"><name pos:start="115:20" pos:end="115:30">do_tls_poll</name><argument_list pos:start="115:31" pos:end="115:38">(<argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">h</name></expr></argument>, <argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:37">ret</name></expr></argument>)</argument_list></call><operator pos:start="115:39" pos:end="115:39">)</operator> <operator pos:start="115:41" pos:end="115:41">&lt;</operator> <literal type="number" pos:start="115:43" pos:end="115:43">0</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:22"><block_content pos:start="117:13" pos:end="117:22">

            <goto pos:start="117:13" pos:end="117:22">goto <name pos:start="117:18" pos:end="117:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></while>

<cpp:elif pos:start="121:1" pos:end="121:20">#<cpp:directive pos:start="121:2" pos:end="121:5">elif</cpp:directive> <expr pos:start="121:7" pos:end="121:20"><name pos:start="121:7" pos:end="121:20">CONFIG_OPENSSL</name></expr></cpp:elif>

    <expr_stmt pos:start="123:5" pos:end="123:48"><expr pos:start="123:5" pos:end="123:47"><name pos:start="123:5" pos:end="123:10"><name pos:start="123:5" pos:end="123:5">c</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:10">ctx</name></name> <operator pos:start="123:12" pos:end="123:12">=</operator> <call pos:start="123:14" pos:end="123:47"><name pos:start="123:14" pos:end="123:24">SSL_CTX_new</name><argument_list pos:start="123:25" pos:end="123:47">(<argument pos:start="123:26" pos:end="123:46"><expr pos:start="123:26" pos:end="123:46"><call pos:start="123:26" pos:end="123:46"><name pos:start="123:26" pos:end="123:44">TLSv1_client_method</name><argument_list pos:start="123:45" pos:end="123:46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:16">(<expr pos:start="125:9" pos:end="125:15"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:15"><name pos:start="125:10" pos:end="125:10">c</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:15">ctx</name></name></expr>)</condition> <block pos:start="125:18" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:18">

        <expr_stmt pos:start="127:9" pos:end="127:81"><expr pos:start="127:9" pos:end="127:80"><call pos:start="127:9" pos:end="127:80"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:80">(<argument pos:start="127:16" pos:end="127:16"><expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">h</name></expr></argument>, <argument pos:start="127:19" pos:end="127:30"><expr pos:start="127:19" pos:end="127:30"><name pos:start="127:19" pos:end="127:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:33" pos:end="127:38"><expr pos:start="127:33" pos:end="127:38"><literal type="string" pos:start="127:33" pos:end="127:38">"%s\n"</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:79"><expr pos:start="127:41" pos:end="127:79"><call pos:start="127:41" pos:end="127:79"><name pos:start="127:41" pos:end="127:56">ERR_error_string</name><argument_list pos:start="127:57" pos:end="127:79">(<argument pos:start="127:58" pos:end="127:72"><expr pos:start="127:58" pos:end="127:72"><call pos:start="127:58" pos:end="127:72"><name pos:start="127:58" pos:end="127:70">ERR_get_error</name><argument_list pos:start="127:71" pos:end="127:72">()</argument_list></call></expr></argument>, <argument pos:start="127:75" pos:end="127:78"><expr pos:start="127:75" pos:end="127:78"><name pos:start="127:75" pos:end="127:78">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:27"><expr pos:start="129:9" pos:end="129:26"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <call pos:start="129:15" pos:end="129:26"><name pos:start="129:15" pos:end="129:21">AVERROR</name><argument_list pos:start="129:22" pos:end="129:26">(<argument pos:start="129:23" pos:end="129:25"><expr pos:start="129:23" pos:end="129:25"><name pos:start="129:23" pos:end="129:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="131:9" pos:end="131:18">goto <name pos:start="131:14" pos:end="131:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:29"><expr pos:start="135:5" pos:end="135:28"><name pos:start="135:5" pos:end="135:10"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:10">ssl</name></name> <operator pos:start="135:12" pos:end="135:12">=</operator> <call pos:start="135:14" pos:end="135:28"><name pos:start="135:14" pos:end="135:20">SSL_new</name><argument_list pos:start="135:21" pos:end="135:28">(<argument pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:27"><name pos:start="135:22" pos:end="135:27"><name pos:start="135:22" pos:end="135:22">c</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:27">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:16">(<expr pos:start="137:9" pos:end="137:15"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:15"><name pos:start="137:10" pos:end="137:10">c</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:15">ssl</name></name></expr>)</condition> <block pos:start="137:18" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:18">

        <expr_stmt pos:start="139:9" pos:end="139:81"><expr pos:start="139:9" pos:end="139:80"><call pos:start="139:9" pos:end="139:80"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:80">(<argument pos:start="139:16" pos:end="139:16"><expr pos:start="139:16" pos:end="139:16"><name pos:start="139:16" pos:end="139:16">h</name></expr></argument>, <argument pos:start="139:19" pos:end="139:30"><expr pos:start="139:19" pos:end="139:30"><name pos:start="139:19" pos:end="139:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:33" pos:end="139:38"><expr pos:start="139:33" pos:end="139:38"><literal type="string" pos:start="139:33" pos:end="139:38">"%s\n"</literal></expr></argument>, <argument pos:start="139:41" pos:end="139:79"><expr pos:start="139:41" pos:end="139:79"><call pos:start="139:41" pos:end="139:79"><name pos:start="139:41" pos:end="139:56">ERR_error_string</name><argument_list pos:start="139:57" pos:end="139:79">(<argument pos:start="139:58" pos:end="139:72"><expr pos:start="139:58" pos:end="139:72"><call pos:start="139:58" pos:end="139:72"><name pos:start="139:58" pos:end="139:70">ERR_get_error</name><argument_list pos:start="139:71" pos:end="139:72">()</argument_list></call></expr></argument>, <argument pos:start="139:75" pos:end="139:78"><expr pos:start="139:75" pos:end="139:78"><name pos:start="139:75" pos:end="139:78">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:26"><name pos:start="141:15" pos:end="141:21">AVERROR</name><argument_list pos:start="141:22" pos:end="141:26">(<argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:18">goto <name pos:start="143:14" pos:end="143:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:30"><expr pos:start="147:5" pos:end="147:29"><call pos:start="147:5" pos:end="147:29"><name pos:start="147:5" pos:end="147:14">SSL_set_fd</name><argument_list pos:start="147:15" pos:end="147:29">(<argument pos:start="147:16" pos:end="147:21"><expr pos:start="147:16" pos:end="147:21"><name pos:start="147:16" pos:end="147:21"><name pos:start="147:16" pos:end="147:16">c</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:21">ssl</name></name></expr></argument>, <argument pos:start="147:24" pos:end="147:28"><expr pos:start="147:24" pos:end="147:28"><name pos:start="147:24" pos:end="147:28"><name pos:start="147:24" pos:end="147:24">c</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:28">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="151:47"><if pos:start="149:5" pos:end="151:47">if <condition pos:start="149:8" pos:end="149:21">(<expr pos:start="149:9" pos:end="149:20"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:20">numerichost</name></expr>)</condition><block type="pseudo" pos:start="151:9" pos:end="151:47"><block_content pos:start="151:9" pos:end="151:47">

        <expr_stmt pos:start="151:9" pos:end="151:47"><expr pos:start="151:9" pos:end="151:46"><call pos:start="151:9" pos:end="151:46"><name pos:start="151:9" pos:end="151:32">SSL_set_tlsext_host_name</name><argument_list pos:start="151:33" pos:end="151:46">(<argument pos:start="151:34" pos:end="151:39"><expr pos:start="151:34" pos:end="151:39"><name pos:start="151:34" pos:end="151:39"><name pos:start="151:34" pos:end="151:34">c</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:39">ssl</name></name></expr></argument>, <argument pos:start="151:42" pos:end="151:45"><expr pos:start="151:42" pos:end="151:45"><name pos:start="151:42" pos:end="151:45">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="153:5" pos:end="178:0">while <condition pos:start="153:11" pos:end="153:13">(<expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">1</literal></expr>)</condition> <block pos:start="153:15" pos:end="178:0">{<block_content pos:start="155:9" pos:end="173:22">

        <expr_stmt pos:start="155:9" pos:end="155:34"><expr pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:33"><name pos:start="155:15" pos:end="155:25">SSL_connect</name><argument_list pos:start="155:26" pos:end="155:33">(<argument pos:start="155:27" pos:end="155:32"><expr pos:start="155:27" pos:end="155:32"><name pos:start="155:27" pos:end="155:32"><name pos:start="155:27" pos:end="155:27">c</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:32">ssl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="159:18"><if pos:start="157:9" pos:end="159:18">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">&gt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:18"><block_content pos:start="159:13" pos:end="159:18">

            <break pos:start="159:13" pos:end="159:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="169:9"><if pos:start="161:9" pos:end="169:9">if <condition pos:start="161:12" pos:end="161:21">(<expr pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:15">ret</name> <operator pos:start="161:17" pos:end="161:18">==</operator> <literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>)</condition> <block pos:start="161:23" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:22">

            <expr_stmt pos:start="163:13" pos:end="163:77"><expr pos:start="163:13" pos:end="163:76"><call pos:start="163:13" pos:end="163:76"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="163:76">(<argument pos:start="163:20" pos:end="163:20"><expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">h</name></expr></argument>, <argument pos:start="163:23" pos:end="163:34"><expr pos:start="163:23" pos:end="163:34"><name pos:start="163:23" pos:end="163:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:37" pos:end="163:75"><expr pos:start="163:37" pos:end="163:75"><literal type="string" pos:start="163:37" pos:end="163:75">"Unable to negotiate TLS/SSL session\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:15">ret</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <call pos:start="165:19" pos:end="165:30"><name pos:start="165:19" pos:end="165:25">AVERROR</name><argument_list pos:start="165:26" pos:end="165:30">(<argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:22">goto <name pos:start="167:18" pos:end="167:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="171:9" pos:end="173:22"><if pos:start="171:9" pos:end="173:22">if <condition pos:start="171:12" pos:end="171:44">(<expr pos:start="171:13" pos:end="171:43"><operator pos:start="171:13" pos:end="171:13">(</operator><name pos:start="171:14" pos:end="171:16">ret</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <call pos:start="171:20" pos:end="171:38"><name pos:start="171:20" pos:end="171:30">do_tls_poll</name><argument_list pos:start="171:31" pos:end="171:38">(<argument pos:start="171:32" pos:end="171:32"><expr pos:start="171:32" pos:end="171:32"><name pos:start="171:32" pos:end="171:32">h</name></expr></argument>, <argument pos:start="171:35" pos:end="171:37"><expr pos:start="171:35" pos:end="171:37"><name pos:start="171:35" pos:end="171:37">ret</name></expr></argument>)</argument_list></call><operator pos:start="171:39" pos:end="171:39">)</operator> <operator pos:start="171:41" pos:end="171:41">&lt;</operator> <literal type="number" pos:start="171:43" pos:end="171:43">0</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:22"><block_content pos:start="173:13" pos:end="173:22">

            <goto pos:start="173:13" pos:end="173:22">goto <name pos:start="173:18" pos:end="173:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></while>

<cpp:endif pos:start="177:1" pos:end="177:6">#<cpp:directive pos:start="177:2" pos:end="177:6">endif</cpp:directive></cpp:endif>

    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

<label pos:start="181:1" pos:end="181:5"><name pos:start="181:1" pos:end="181:4">fail</name>:</label>

    <expr_stmt pos:start="183:5" pos:end="183:16"><expr pos:start="183:5" pos:end="183:15"><call pos:start="183:5" pos:end="183:15"><name pos:start="183:5" pos:end="183:12">TLS_free</name><argument_list pos:start="183:13" pos:end="183:15">(<argument pos:start="183:14" pos:end="183:14"><expr pos:start="183:14" pos:end="183:14"><name pos:start="183:14" pos:end="183:14">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="187:28"><if pos:start="185:5" pos:end="187:28">if <condition pos:start="185:8" pos:end="185:15">(<expr pos:start="185:9" pos:end="185:14"><name pos:start="185:9" pos:end="185:14"><name pos:start="185:9" pos:end="185:9">c</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:14">tcp</name></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:28"><block_content pos:start="187:9" pos:end="187:28">

        <expr_stmt pos:start="187:9" pos:end="187:28"><expr pos:start="187:9" pos:end="187:27"><call pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:19">ffurl_close</name><argument_list pos:start="187:20" pos:end="187:27">(<argument pos:start="187:21" pos:end="187:26"><expr pos:start="187:21" pos:end="187:26"><name pos:start="187:21" pos:end="187:26"><name pos:start="187:21" pos:end="187:21">c</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:26">tcp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:20"><expr pos:start="189:5" pos:end="189:19"><call pos:start="189:5" pos:end="189:19"><name pos:start="189:5" pos:end="189:17">ff_tls_deinit</name><argument_list pos:start="189:18" pos:end="189:19">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="191:5" pos:end="191:15">return <expr pos:start="191:12" pos:end="191:14"><name pos:start="191:12" pos:end="191:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
