<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6111.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">rv20_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:56">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">MpegEncContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:45">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">seq</name></decl>, <decl pos:start="5:14" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:19">mb_pos</name></decl>, <decl pos:start="5:22" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:22">i</name></decl>;</decl_stmt>

    

    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="19:5">if<condition pos:start="9:7" pos:end="9:72">(<expr pos:start="9:8" pos:end="9:71"><name pos:start="9:8" pos:end="9:23"><name pos:start="9:8" pos:end="9:8">s</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:15">avctx</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:23">sub_id</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <literal type="number" pos:start="9:28" pos:end="9:37">0x30202002</literal> <operator pos:start="9:39" pos:end="9:40">||</operator> <name pos:start="9:42" pos:end="9:57"><name pos:start="9:42" pos:end="9:42">s</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:49">avctx</name><operator pos:start="9:50" pos:end="9:51">-&gt;</operator><name pos:start="9:52" pos:end="9:57">sub_id</name></name> <operator pos:start="9:59" pos:end="9:60">==</operator> <literal type="number" pos:start="9:62" pos:end="9:71">0x30203002</literal></expr>)</condition><block pos:start="9:73" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:9">

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:32">(<expr pos:start="11:13" pos:end="11:31"><call pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:20">get_bits</name><argument_list pos:start="11:21" pos:end="11:31">(<argument pos:start="11:22" pos:end="11:27"><expr pos:start="11:22" pos:end="11:27"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">gb</name></name></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="11:33" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:22">

            <expr_stmt pos:start="13:13" pos:end="13:68"><expr pos:start="13:13" pos:end="13:67"><call pos:start="13:13" pos:end="13:67"><name pos:start="13:13" pos:end="13:18">av_log</name><argument_list pos:start="13:19" pos:end="13:67">(<argument pos:start="13:20" pos:end="13:27"><expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">avctx</name></name></expr></argument>, <argument pos:start="13:30" pos:end="13:41"><expr pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:44" pos:end="13:66"><expr pos:start="13:44" pos:end="13:66"><literal type="string" pos:start="13:44" pos:end="13:66">"unknown triplet set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt> 

    </block_content>}</block></if></if_stmt>   



    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:5">i</name><operator pos:start="23:6" pos:end="23:6">=</operator> <call pos:start="23:8" pos:end="23:26"><name pos:start="23:8" pos:end="23:15">get_bits</name><argument_list pos:start="23:16" pos:end="23:26">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:22">gb</name></name></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="41:5">switch<condition pos:start="25:11" pos:end="25:13">(<expr pos:start="25:12" pos:end="25:12"><name pos:start="25:12" pos:end="25:12">i</name></expr>)</condition><block pos:start="25:14" pos:end="41:5">{<block_content pos:start="27:5" pos:end="39:18">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal></expr>:</case> <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:24">pict_type</name></name><operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:32">I_TYPE</name></expr>;</expr_stmt> <break pos:start="27:35" pos:end="27:40">break;</break>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">1</literal></expr>:</case> <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">pict_type</name></name><operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:32">I_TYPE</name></expr>;</expr_stmt> <break pos:start="29:35" pos:end="29:40">break;</break> <comment type="line" pos:start="29:42" pos:end="29:50">//hmm ...</comment>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>:</case> <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">pict_type</name></name><operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:32">P_TYPE</name></expr>;</expr_stmt> <break pos:start="31:35" pos:end="31:40">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">3</literal></expr>:</case> <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">pict_type</name></name><operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:32">B_TYPE</name></expr>;</expr_stmt> <break pos:start="33:35" pos:end="33:40">break;</break>

    <default pos:start="35:5" pos:end="35:12">default:</default> 

        <expr_stmt pos:start="37:9" pos:end="37:63"><expr pos:start="37:9" pos:end="37:62"><call pos:start="37:9" pos:end="37:62"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:62">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:40" pos:end="37:61"><expr pos:start="37:40" pos:end="37:61"><literal type="string" pos:start="37:40" pos:end="37:61">"unknown frame type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:28">(<expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:16">get_bits</name><argument_list pos:start="45:17" pos:end="45:27">(<argument pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:23"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:23">gb</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="45:29" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:58"><expr pos:start="47:40" pos:end="47:58"><literal type="string" pos:start="47:40" pos:end="47:58">"unknown bit set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:13">qscale</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:24">get_bits</name><argument_list pos:start="55:25" pos:end="55:35">(<argument pos:start="55:26" pos:end="55:31"><expr pos:start="55:26" pos:end="55:31"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:31"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:31">gb</name></name></expr></argument>, <argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><literal type="number" pos:start="55:34" pos:end="55:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:20">(<expr pos:start="57:8" pos:end="57:19"><name pos:start="57:8" pos:end="57:16"><name pos:start="57:8" pos:end="57:8">s</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:16">qscale</name></name><operator pos:start="57:17" pos:end="57:18">==</operator><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition><block pos:start="57:21" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:60"><expr pos:start="59:9" pos:end="59:59"><call pos:start="59:9" pos:end="59:59"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:59">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:58"><expr pos:start="59:40" pos:end="59:58"><literal type="string" pos:start="59:40" pos:end="59:58">"error, qscale:0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if<condition pos:start="65:7" pos:end="65:38">(<expr pos:start="65:8" pos:end="65:37"><name pos:start="65:8" pos:end="65:23"><name pos:start="65:8" pos:end="65:8">s</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:15">avctx</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:23">sub_id</name></name> <operator pos:start="65:25" pos:end="65:26">==</operator> <literal type="number" pos:start="65:28" pos:end="65:37">0x30203002</literal></expr>)</condition><block pos:start="65:39" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:9">

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:32">(<expr pos:start="67:13" pos:end="67:31"><call pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:20">get_bits</name><argument_list pos:start="67:21" pos:end="67:31">(<argument pos:start="67:22" pos:end="67:27"><expr pos:start="67:22" pos:end="67:27"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:27">gb</name></name></expr></argument>, <argument pos:start="67:30" pos:end="67:30"><expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="67:33" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:22">

            <expr_stmt pos:start="69:13" pos:end="69:65"><expr pos:start="69:13" pos:end="69:64"><call pos:start="69:13" pos:end="69:64"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:64">(<argument pos:start="69:20" pos:end="69:27"><expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:27">avctx</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:41"><expr pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:44" pos:end="69:63"><expr pos:start="69:44" pos:end="69:63"><literal type="string" pos:start="69:44" pos:end="69:63">"unknown bit2 set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

        

    <if_stmt pos:start="79:5" pos:end="93:37"><if pos:start="79:5" pos:end="91:5">if<condition pos:start="79:7" pos:end="79:30">(<expr pos:start="79:8" pos:end="79:29"><name pos:start="79:8" pos:end="79:29"><name pos:start="79:8" pos:end="79:8">s</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:15">avctx</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:29">has_b_frames</name></name></expr>)</condition><block pos:start="79:31" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:34">

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:32">(<expr pos:start="81:13" pos:end="81:31"><call pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:20">get_bits</name><argument_list pos:start="81:21" pos:end="81:31">(<argument pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:27"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:27">gb</name></name></expr></argument>, <argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="81:33" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:22">

            <expr_stmt pos:start="83:13" pos:end="83:65"><expr pos:start="83:13" pos:end="83:64"><call pos:start="83:13" pos:end="83:64"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:64">(<argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:27">avctx</name></name></expr></argument>, <argument pos:start="83:30" pos:end="83:41"><expr pos:start="83:30" pos:end="83:41"><name pos:start="83:30" pos:end="83:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:44" pos:end="83:63"><expr pos:start="83:44" pos:end="83:63"><literal type="string" pos:start="83:44" pos:end="83:63">"unknown bit3 set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:11">seq</name><operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:33"><name pos:start="89:14" pos:end="89:21">get_bits</name><argument_list pos:start="89:22" pos:end="89:33">(<argument pos:start="89:23" pos:end="89:28"><expr pos:start="89:23" pos:end="89:28"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:28">gb</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:32"><expr pos:start="89:31" pos:end="89:32"><literal type="number" pos:start="89:31" pos:end="89:32">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="91:6" pos:end="93:37">else<block type="pseudo" pos:start="93:9" pos:end="93:37"><block_content pos:start="93:9" pos:end="93:37">

        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:11">seq</name><operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:32"><name pos:start="93:14" pos:end="93:21">get_bits</name><argument_list pos:start="93:22" pos:end="93:32">(<argument pos:start="93:23" pos:end="93:28"><expr pos:start="93:23" pos:end="93:28"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:28">gb</name></name></expr></argument>, <argument pos:start="93:31" pos:end="93:31"><expr pos:start="93:31" pos:end="93:31"><literal type="number" pos:start="93:31" pos:end="93:31">8</literal></expr></argument>)</argument_list></call><operator pos:start="93:33" pos:end="93:33">*</operator><literal type="number" pos:start="93:34" pos:end="93:36">128</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<comment type="line" pos:start="95:1" pos:end="95:22">//printf("%d\n", seq);</comment>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:7">seq</name> <operator pos:start="97:9" pos:end="97:10">|=</operator> <name pos:start="97:12" pos:end="97:18"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:18">time</name></name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator><operator pos:start="97:21" pos:end="97:21">~</operator><literal type="number" pos:start="97:22" pos:end="97:27">0x7FFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="99:46"><if pos:start="99:5" pos:end="99:46">if<condition pos:start="99:7" pos:end="99:31">(<expr pos:start="99:8" pos:end="99:30"><name pos:start="99:8" pos:end="99:10">seq</name> <operator pos:start="99:12" pos:end="99:12">-</operator> <name pos:start="99:14" pos:end="99:20"><name pos:start="99:14" pos:end="99:14">s</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:20">time</name></name> <operator pos:start="99:22" pos:end="99:22">&gt;</operator>  <literal type="number" pos:start="99:25" pos:end="99:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="99:33" pos:end="99:46"><block_content pos:start="99:33" pos:end="99:46"> <expr_stmt pos:start="99:33" pos:end="99:46"><expr pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:35">seq</name> <operator pos:start="99:37" pos:end="99:38">-=</operator> <literal type="number" pos:start="99:40" pos:end="99:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="101:5" pos:end="101:46"><if pos:start="101:5" pos:end="101:46">if<condition pos:start="101:7" pos:end="101:31">(<expr pos:start="101:8" pos:end="101:30"><name pos:start="101:8" pos:end="101:10">seq</name> <operator pos:start="101:12" pos:end="101:12">-</operator> <name pos:start="101:14" pos:end="101:20"><name pos:start="101:14" pos:end="101:14">s</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:20">time</name></name> <operator pos:start="101:22" pos:end="101:22">&lt;</operator> <operator pos:start="101:24" pos:end="101:24">-</operator><literal type="number" pos:start="101:25" pos:end="101:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="101:33" pos:end="101:46"><block_content pos:start="101:33" pos:end="101:46"> <expr_stmt pos:start="101:33" pos:end="101:46"><expr pos:start="101:33" pos:end="101:45"><name pos:start="101:33" pos:end="101:35">seq</name> <operator pos:start="101:37" pos:end="101:38">+=</operator> <literal type="number" pos:start="101:40" pos:end="101:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="129:5"><if pos:start="103:5" pos:end="129:5">if<condition pos:start="103:7" pos:end="103:22">(<expr pos:start="103:8" pos:end="103:21"><name pos:start="103:8" pos:end="103:10">seq</name> <operator pos:start="103:12" pos:end="103:13">!=</operator> <name pos:start="103:15" pos:end="103:21"><name pos:start="103:15" pos:end="103:15">s</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:21">time</name></name></expr>)</condition><block pos:start="103:23" pos:end="129:5">{<block_content pos:start="105:9" pos:end="127:9">  

        <if_stmt pos:start="105:9" pos:end="127:9"><if pos:start="105:9" pos:end="113:9">if<condition pos:start="105:11" pos:end="105:32">(<expr pos:start="105:12" pos:end="105:31"><name pos:start="105:12" pos:end="105:23"><name pos:start="105:12" pos:end="105:12">s</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:23">pict_type</name></name><operator pos:start="105:24" pos:end="105:25">!=</operator><name pos:start="105:26" pos:end="105:31">B_TYPE</name></expr>)</condition><block pos:start="105:33" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:40">

            <expr_stmt pos:start="107:13" pos:end="107:25"><expr pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:19">time</name></name><operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:53"><expr pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">pp_time</name></name><operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:31"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:31">time</name></name> <operator pos:start="109:33" pos:end="109:33">-</operator> <name pos:start="109:35" pos:end="109:52"><name pos:start="109:35" pos:end="109:35">s</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:52">last_non_b_time</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:40"><expr pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">last_non_b_time</name></name><operator pos:start="111:31" pos:end="111:31">=</operator> <name pos:start="111:33" pos:end="111:39"><name pos:start="111:33" pos:end="111:33">s</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:39">time</name></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="113:10" pos:end="127:9">else<block pos:start="113:14" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:13">

            <expr_stmt pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:19">time</name></name><operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:68"><expr pos:start="117:13" pos:end="117:67"><name pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:22">pb_time</name></name><operator pos:start="117:23" pos:end="117:23">=</operator> <name pos:start="117:25" pos:end="117:34"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:34">pp_time</name></name> <operator pos:start="117:36" pos:end="117:36">-</operator> <operator pos:start="117:38" pos:end="117:38">(</operator><name pos:start="117:39" pos:end="117:56"><name pos:start="117:39" pos:end="117:39">s</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:56">last_non_b_time</name></name> <operator pos:start="117:58" pos:end="117:58">-</operator> <name pos:start="117:60" pos:end="117:66"><name pos:start="117:60" pos:end="117:60">s</name><operator pos:start="117:61" pos:end="117:62">-&gt;</operator><name pos:start="117:63" pos:end="117:66">time</name></name><operator pos:start="117:67" pos:end="117:67">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if<condition pos:start="119:15" pos:end="119:97">(<expr pos:start="119:16" pos:end="119:96"><name pos:start="119:16" pos:end="119:25"><name pos:start="119:16" pos:end="119:16">s</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:25">pp_time</name></name> <operator pos:start="119:27" pos:end="119:28">&lt;=</operator><name pos:start="119:29" pos:end="119:38"><name pos:start="119:29" pos:end="119:29">s</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:38">pb_time</name></name> <operator pos:start="119:40" pos:end="119:41">||</operator> <name pos:start="119:43" pos:end="119:52"><name pos:start="119:43" pos:end="119:43">s</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:52">pp_time</name></name> <operator pos:start="119:54" pos:end="119:55">&lt;=</operator> <name pos:start="119:57" pos:end="119:66"><name pos:start="119:57" pos:end="119:57">s</name><operator pos:start="119:58" pos:end="119:59">-&gt;</operator><name pos:start="119:60" pos:end="119:66">pp_time</name></name> <operator pos:start="119:68" pos:end="119:68">-</operator> <name pos:start="119:70" pos:end="119:79"><name pos:start="119:70" pos:end="119:70">s</name><operator pos:start="119:71" pos:end="119:72">-&gt;</operator><name pos:start="119:73" pos:end="119:79">pb_time</name></name> <operator pos:start="119:81" pos:end="119:82">||</operator> <name pos:start="119:84" pos:end="119:93"><name pos:start="119:84" pos:end="119:84">s</name><operator pos:start="119:85" pos:end="119:86">-&gt;</operator><name pos:start="119:87" pos:end="119:93">pp_time</name></name><operator pos:start="119:94" pos:end="119:95">&lt;=</operator><literal type="number" pos:start="119:96" pos:end="119:96">0</literal></expr>)</condition><block pos:start="119:98" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:36">

                <expr_stmt pos:start="121:17" pos:end="121:79"><expr pos:start="121:17" pos:end="121:78"><call pos:start="121:17" pos:end="121:78"><name pos:start="121:17" pos:end="121:22">printf</name><argument_list pos:start="121:23" pos:end="121:78">(<argument pos:start="121:24" pos:end="121:77"><expr pos:start="121:24" pos:end="121:77"><literal type="string" pos:start="121:24" pos:end="121:77">"messed up order, seeking?, skiping current b frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:36">return <expr pos:start="123:24" pos:end="123:35"><name pos:start="123:24" pos:end="123:35">FRAME_SKIPED</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="131:1" pos:end="131:101">//    printf("%d %d %d %d %d\n", seq, (int)s-&gt;time, (int)s-&gt;last_non_b_time, s-&gt;pp_time, s-&gt;pb_time);</comment>



    <expr_stmt pos:start="135:5" pos:end="135:34"><expr pos:start="135:5" pos:end="135:33"><name pos:start="135:5" pos:end="135:10">mb_pos</name><operator pos:start="135:11" pos:end="135:11">=</operator> <call pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:30">ff_h263_decode_mba</name><argument_list pos:start="135:31" pos:end="135:33">(<argument pos:start="135:32" pos:end="135:32"><expr pos:start="135:32" pos:end="135:32"><name pos:start="135:32" pos:end="135:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:38"><expr pos:start="137:5" pos:end="137:37"><name pos:start="137:5" pos:end="137:18"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:18">no_rounding</name></name><operator pos:start="137:19" pos:end="137:19">=</operator> <call pos:start="137:21" pos:end="137:37"><name pos:start="137:21" pos:end="137:29">get_bits1</name><argument_list pos:start="137:30" pos:end="137:37">(<argument pos:start="137:31" pos:end="137:36"><expr pos:start="137:31" pos:end="137:36"><operator pos:start="137:31" pos:end="137:31">&amp;</operator><name pos:start="137:32" pos:end="137:36"><name pos:start="137:32" pos:end="137:32">s</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="141:5" pos:end="141:18"><expr pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:13"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:13">f_code</name></name> <operator pos:start="141:15" pos:end="141:15">=</operator> <literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:22"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:22">unrestricted_mv</name></name> <operator pos:start="143:24" pos:end="143:24">=</operator> <literal type="number" pos:start="143:26" pos:end="143:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:40"><expr pos:start="145:5" pos:end="145:39"><name pos:start="145:5" pos:end="145:15"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:15">h263_aic</name></name><operator pos:start="145:16" pos:end="145:16">=</operator> <name pos:start="145:18" pos:end="145:29"><name pos:start="145:18" pos:end="145:18">s</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:29">pict_type</name></name> <operator pos:start="145:31" pos:end="145:32">==</operator> <name pos:start="145:34" pos:end="145:39">I_TYPE</name></expr>;</expr_stmt>

<comment type="line" pos:start="147:1" pos:end="147:25">//    s-&gt;alt_inter_vlc=1;</comment>

<comment type="line" pos:start="149:1" pos:end="149:16">//    s-&gt;obmc=1;</comment>

<comment type="line" pos:start="151:1" pos:end="151:19">//    s-&gt;umvplus=1;</comment>

    <expr_stmt pos:start="153:5" pos:end="153:24"><expr pos:start="153:5" pos:end="153:23"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:21">modified_quant</name></name><operator pos:start="153:22" pos:end="153:22">=</operator><literal type="number" pos:start="153:23" pos:end="153:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:21"><expr pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:18"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:18">loop_filter</name></name><operator pos:start="155:19" pos:end="155:19">=</operator><literal type="number" pos:start="155:20" pos:end="155:20">1</literal></expr>;</expr_stmt>

    

    <if_stmt pos:start="159:5" pos:end="165:5"><if pos:start="159:5" pos:end="165:5">if<condition pos:start="159:7" pos:end="159:44">(<expr pos:start="159:8" pos:end="159:43"><name pos:start="159:8" pos:end="159:22"><name pos:start="159:8" pos:end="159:8">s</name><operator pos:start="159:9" pos:end="159:10">-&gt;</operator><name pos:start="159:11" pos:end="159:15">avctx</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:22">debug</name></name> <operator pos:start="159:24" pos:end="159:24">&amp;</operator> <name pos:start="159:26" pos:end="159:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="159:45" pos:end="165:5">{<block_content pos:start="161:13" pos:end="163:83">

            <expr_stmt pos:start="161:13" pos:end="163:83"><expr pos:start="161:13" pos:end="163:82"><call pos:start="161:13" pos:end="163:82"><name pos:start="161:13" pos:end="161:18">av_log</name><argument_list pos:start="161:19" pos:end="163:82">(<argument pos:start="161:20" pos:end="161:27"><expr pos:start="161:20" pos:end="161:27"><name pos:start="161:20" pos:end="161:27"><name pos:start="161:20" pos:end="161:20">s</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:27">avctx</name></name></expr></argument>, <argument pos:start="161:30" pos:end="161:40"><expr pos:start="161:30" pos:end="161:40"><name pos:start="161:30" pos:end="161:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="161:43" pos:end="161:91"><expr pos:start="161:43" pos:end="161:91"><literal type="string" pos:start="161:43" pos:end="161:91">"num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n"</literal></expr></argument>, 

                   <argument pos:start="163:20" pos:end="163:22"><expr pos:start="163:20" pos:end="163:22"><name pos:start="163:20" pos:end="163:22">seq</name></expr></argument>, <argument pos:start="163:25" pos:end="163:31"><expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:25">s</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:31">mb_x</name></name></expr></argument>, <argument pos:start="163:34" pos:end="163:40"><expr pos:start="163:34" pos:end="163:40"><name pos:start="163:34" pos:end="163:40"><name pos:start="163:34" pos:end="163:34">s</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:40">mb_y</name></name></expr></argument>, <argument pos:start="163:43" pos:end="163:54"><expr pos:start="163:43" pos:end="163:54"><name pos:start="163:43" pos:end="163:54"><name pos:start="163:43" pos:end="163:43">s</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:54">pict_type</name></name></expr></argument>, <argument pos:start="163:57" pos:end="163:65"><expr pos:start="163:57" pos:end="163:65"><name pos:start="163:57" pos:end="163:65"><name pos:start="163:57" pos:end="163:57">s</name><operator pos:start="163:58" pos:end="163:59">-&gt;</operator><name pos:start="163:60" pos:end="163:65">qscale</name></name></expr></argument>, <argument pos:start="163:68" pos:end="163:81"><expr pos:start="163:68" pos:end="163:81"><name pos:start="163:68" pos:end="163:81"><name pos:start="163:68" pos:end="163:68">s</name><operator pos:start="163:69" pos:end="163:70">-&gt;</operator><name pos:start="163:71" pos:end="163:81">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:52"><expr pos:start="169:5" pos:end="169:51"><call pos:start="169:5" pos:end="169:51"><name pos:start="169:5" pos:end="169:10">assert</name><argument_list pos:start="169:11" pos:end="169:51">(<argument pos:start="169:12" pos:end="169:50"><expr pos:start="169:12" pos:end="169:50"><name pos:start="169:12" pos:end="169:23"><name pos:start="169:12" pos:end="169:12">s</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:23">pict_type</name></name> <operator pos:start="169:25" pos:end="169:26">!=</operator> <name pos:start="169:28" pos:end="169:33">B_TYPE</name> <operator pos:start="169:35" pos:end="169:36">||</operator> <operator pos:start="169:38" pos:end="169:38">!</operator><name pos:start="169:39" pos:end="169:50"><name pos:start="169:39" pos:end="169:39">s</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:50">low_delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:45">return <expr pos:start="173:12" pos:end="173:44"><name pos:start="173:12" pos:end="173:22"><name pos:start="173:12" pos:end="173:12">s</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:22">mb_width</name></name><operator pos:start="173:23" pos:end="173:23">*</operator><name pos:start="173:24" pos:end="173:35"><name pos:start="173:24" pos:end="173:24">s</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:35">mb_height</name></name> <operator pos:start="173:37" pos:end="173:37">-</operator> <name pos:start="173:39" pos:end="173:44">mb_pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
