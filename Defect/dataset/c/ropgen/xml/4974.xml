<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4974.c" pos:tabs="8"><function pos:start="1:1" pos:end="549:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int32_t</name></type> <name pos:start="1:9" pos:end="1:25">scsi_send_command</name><parameter_list pos:start="1:26" pos:end="1:77">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">SCSIDevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:53">tag</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">buf</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:76"><decl pos:start="1:70" pos:end="1:76"><type pos:start="1:70" pos:end="1:76"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:76">lun</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="549:1">{<block_content pos:start="5:5" pos:end="547:33">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">lba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">cmdlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">is_write</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:14">command</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:20">buf</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">tag</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:16">tag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">sector_count</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">buf_pos</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">buf_len</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12">is_write</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:11">DPRINTF</name><argument_list pos:start="29:12" pos:end="29:38">(<argument pos:start="29:13" pos:end="29:29"><expr pos:start="29:13" pos:end="29:29"><literal type="string" pos:start="29:13" pos:end="29:29">"Command: 0x%02x"</literal></expr></argument>, <argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:34">buf</name><index pos:start="29:35" pos:end="29:37">[<expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="84:0">switch <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">command</name></name> <operator pos:start="31:24" pos:end="31:25">&gt;&gt;</operator> <literal type="number" pos:start="31:27" pos:end="31:27">5</literal></expr>)</condition> <block pos:start="31:30" pos:end="84:0">{<block_content pos:start="33:5" pos:end="79:18">

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">0</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:11">lba</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:20"><name pos:start="35:15" pos:end="35:17">buf</name><index pos:start="35:18" pos:end="35:20">[<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">3</literal></expr>]</index></name> <operator pos:start="35:22" pos:end="35:22">|</operator> <operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:27">buf</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">2</literal></expr>]</index></name> <operator pos:start="35:32" pos:end="35:33">&lt;&lt;</operator> <literal type="number" pos:start="35:35" pos:end="35:35">8</literal><operator pos:start="35:36" pos:end="35:36">)</operator> <operator pos:start="35:38" pos:end="35:38">|</operator> <operator pos:start="35:40" pos:end="35:40">(</operator><operator pos:start="35:41" pos:end="35:41">(</operator><name pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:44">buf</name><index pos:start="35:45" pos:end="35:47">[<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">1</literal></expr>]</index></name> <operator pos:start="35:49" pos:end="35:49">&amp;</operator> <literal type="number" pos:start="35:51" pos:end="35:54">0x1f</literal><operator pos:start="35:55" pos:end="35:55">)</operator> <operator pos:start="35:57" pos:end="35:58">&lt;&lt;</operator> <literal type="number" pos:start="35:60" pos:end="35:61">16</literal><operator pos:start="35:62" pos:end="35:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:17">buf</name><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:14">cmdlen</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">6</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">1</literal></expr>:</case>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">2</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:11">lba</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:20"><name pos:start="47:15" pos:end="47:17">buf</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">5</literal></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">|</operator> <operator pos:start="47:24" pos:end="47:24">(</operator><name pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:27">buf</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">4</literal></expr>]</index></name> <operator pos:start="47:32" pos:end="47:33">&lt;&lt;</operator> <literal type="number" pos:start="47:35" pos:end="47:35">8</literal><operator pos:start="47:36" pos:end="47:36">)</operator> <operator pos:start="47:38" pos:end="47:38">|</operator> <operator pos:start="47:40" pos:end="47:40">(</operator><name pos:start="47:41" pos:end="47:46"><name pos:start="47:41" pos:end="47:43">buf</name><index pos:start="47:44" pos:end="47:46">[<expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">3</literal></expr>]</index></name> <operator pos:start="47:48" pos:end="47:49">&lt;&lt;</operator> <literal type="number" pos:start="47:51" pos:end="47:52">16</literal><operator pos:start="47:53" pos:end="47:53">)</operator> <operator pos:start="47:55" pos:end="47:55">|</operator> <operator pos:start="47:57" pos:end="47:57">(</operator><name pos:start="47:58" pos:end="47:63"><name pos:start="47:58" pos:end="47:60">buf</name><index pos:start="47:61" pos:end="47:63">[<expr pos:start="47:62" pos:end="47:62"><literal type="number" pos:start="47:62" pos:end="47:62">2</literal></expr>]</index></name> <operator pos:start="47:65" pos:end="47:66">&lt;&lt;</operator> <literal type="number" pos:start="47:68" pos:end="47:69">24</literal><operator pos:start="47:70" pos:end="47:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:11">len</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:20"><name pos:start="49:15" pos:end="49:17">buf</name><index pos:start="49:18" pos:end="49:20">[<expr pos:start="49:19" pos:end="49:19"><literal type="number" pos:start="49:19" pos:end="49:19">8</literal></expr>]</index></name> <operator pos:start="49:22" pos:end="49:22">|</operator> <operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:30"><name pos:start="49:25" pos:end="49:27">buf</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">7</literal></expr>]</index></name> <operator pos:start="49:32" pos:end="49:33">&lt;&lt;</operator> <literal type="number" pos:start="49:35" pos:end="49:35">8</literal><operator pos:start="49:36" pos:end="49:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:14">cmdlen</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:19">10</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">4</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:71"><expr pos:start="57:9" pos:end="57:70"><name pos:start="57:9" pos:end="57:11">lba</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:20"><name pos:start="57:15" pos:end="57:17">buf</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">5</literal></expr>]</index></name> <operator pos:start="57:22" pos:end="57:22">|</operator> <operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:27">buf</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">4</literal></expr>]</index></name> <operator pos:start="57:32" pos:end="57:33">&lt;&lt;</operator> <literal type="number" pos:start="57:35" pos:end="57:35">8</literal><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:38">|</operator> <operator pos:start="57:40" pos:end="57:40">(</operator><name pos:start="57:41" pos:end="57:46"><name pos:start="57:41" pos:end="57:43">buf</name><index pos:start="57:44" pos:end="57:46">[<expr pos:start="57:45" pos:end="57:45"><literal type="number" pos:start="57:45" pos:end="57:45">3</literal></expr>]</index></name> <operator pos:start="57:48" pos:end="57:49">&lt;&lt;</operator> <literal type="number" pos:start="57:51" pos:end="57:52">16</literal><operator pos:start="57:53" pos:end="57:53">)</operator> <operator pos:start="57:55" pos:end="57:55">|</operator> <operator pos:start="57:57" pos:end="57:57">(</operator><name pos:start="57:58" pos:end="57:63"><name pos:start="57:58" pos:end="57:60">buf</name><index pos:start="57:61" pos:end="57:63">[<expr pos:start="57:62" pos:end="57:62"><literal type="number" pos:start="57:62" pos:end="57:62">2</literal></expr>]</index></name> <operator pos:start="57:65" pos:end="57:66">&lt;&lt;</operator> <literal type="number" pos:start="57:68" pos:end="57:69">24</literal><operator pos:start="57:70" pos:end="57:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:75"><expr pos:start="59:9" pos:end="59:74"><name pos:start="59:9" pos:end="59:11">len</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:21"><name pos:start="59:15" pos:end="59:17">buf</name><index pos:start="59:18" pos:end="59:21">[<expr pos:start="59:19" pos:end="59:20"><literal type="number" pos:start="59:19" pos:end="59:20">13</literal></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">|</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:32"><name pos:start="59:26" pos:end="59:28">buf</name><index pos:start="59:29" pos:end="59:32">[<expr pos:start="59:30" pos:end="59:31"><literal type="number" pos:start="59:30" pos:end="59:31">12</literal></expr>]</index></name> <operator pos:start="59:34" pos:end="59:35">&lt;&lt;</operator> <literal type="number" pos:start="59:37" pos:end="59:37">8</literal><operator pos:start="59:38" pos:end="59:38">)</operator> <operator pos:start="59:40" pos:end="59:40">|</operator> <operator pos:start="59:42" pos:end="59:42">(</operator><name pos:start="59:43" pos:end="59:49"><name pos:start="59:43" pos:end="59:45">buf</name><index pos:start="59:46" pos:end="59:49">[<expr pos:start="59:47" pos:end="59:48"><literal type="number" pos:start="59:47" pos:end="59:48">11</literal></expr>]</index></name> <operator pos:start="59:51" pos:end="59:52">&lt;&lt;</operator> <literal type="number" pos:start="59:54" pos:end="59:55">16</literal><operator pos:start="59:56" pos:end="59:56">)</operator> <operator pos:start="59:58" pos:end="59:58">|</operator> <operator pos:start="59:60" pos:end="59:60">(</operator><name pos:start="59:61" pos:end="59:67"><name pos:start="59:61" pos:end="59:63">buf</name><index pos:start="59:64" pos:end="59:67">[<expr pos:start="59:65" pos:end="59:66"><literal type="number" pos:start="59:65" pos:end="59:66">10</literal></expr>]</index></name> <operator pos:start="59:69" pos:end="59:70">&lt;&lt;</operator> <literal type="number" pos:start="59:72" pos:end="59:73">24</literal><operator pos:start="59:74" pos:end="59:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:14">cmdlen</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:19">16</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">5</literal></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:71"><expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:11">lba</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:20"><name pos:start="67:15" pos:end="67:17">buf</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">5</literal></expr>]</index></name> <operator pos:start="67:22" pos:end="67:22">|</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><name pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:27">buf</name><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">4</literal></expr>]</index></name> <operator pos:start="67:32" pos:end="67:33">&lt;&lt;</operator> <literal type="number" pos:start="67:35" pos:end="67:35">8</literal><operator pos:start="67:36" pos:end="67:36">)</operator> <operator pos:start="67:38" pos:end="67:38">|</operator> <operator pos:start="67:40" pos:end="67:40">(</operator><name pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:43">buf</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">3</literal></expr>]</index></name> <operator pos:start="67:48" pos:end="67:49">&lt;&lt;</operator> <literal type="number" pos:start="67:51" pos:end="67:52">16</literal><operator pos:start="67:53" pos:end="67:53">)</operator> <operator pos:start="67:55" pos:end="67:55">|</operator> <operator pos:start="67:57" pos:end="67:57">(</operator><name pos:start="67:58" pos:end="67:63"><name pos:start="67:58" pos:end="67:60">buf</name><index pos:start="67:61" pos:end="67:63">[<expr pos:start="67:62" pos:end="67:62"><literal type="number" pos:start="67:62" pos:end="67:62">2</literal></expr>]</index></name> <operator pos:start="67:65" pos:end="67:66">&lt;&lt;</operator> <literal type="number" pos:start="67:68" pos:end="67:69">24</literal><operator pos:start="67:70" pos:end="67:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:11">len</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:20"><name pos:start="69:15" pos:end="69:17">buf</name><index pos:start="69:18" pos:end="69:20">[<expr pos:start="69:19" pos:end="69:19"><literal type="number" pos:start="69:19" pos:end="69:19">9</literal></expr>]</index></name> <operator pos:start="69:22" pos:end="69:22">|</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:27">buf</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">8</literal></expr>]</index></name> <operator pos:start="69:32" pos:end="69:33">&lt;&lt;</operator> <literal type="number" pos:start="69:35" pos:end="69:35">8</literal><operator pos:start="69:36" pos:end="69:36">)</operator> <operator pos:start="69:38" pos:end="69:38">|</operator> <operator pos:start="69:40" pos:end="69:40">(</operator><name pos:start="69:41" pos:end="69:46"><name pos:start="69:41" pos:end="69:43">buf</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">7</literal></expr>]</index></name> <operator pos:start="69:48" pos:end="69:49">&lt;&lt;</operator> <literal type="number" pos:start="69:51" pos:end="69:52">16</literal><operator pos:start="69:53" pos:end="69:53">)</operator> <operator pos:start="69:55" pos:end="69:55">|</operator> <operator pos:start="69:57" pos:end="69:57">(</operator><name pos:start="69:58" pos:end="69:63"><name pos:start="69:58" pos:end="69:60">buf</name><index pos:start="69:61" pos:end="69:63">[<expr pos:start="69:62" pos:end="69:62"><literal type="number" pos:start="69:62" pos:end="69:62">6</literal></expr>]</index></name> <operator pos:start="69:65" pos:end="69:66">&lt;&lt;</operator> <literal type="number" pos:start="69:68" pos:end="69:69">24</literal><operator pos:start="69:70" pos:end="69:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:14">cmdlen</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:19">12</literal></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <expr_stmt pos:start="77:9" pos:end="77:69"><expr pos:start="77:9" pos:end="77:68"><call pos:start="77:9" pos:end="77:68"><name pos:start="77:9" pos:end="77:12">BADF</name><argument_list pos:start="77:13" pos:end="77:68">(<argument pos:start="77:14" pos:end="77:55"><expr pos:start="77:14" pos:end="77:55"><literal type="string" pos:start="77:14" pos:end="77:55">"Unsupported command length, command %x\n"</literal></expr></argument>, <argument pos:start="77:58" pos:end="77:67"><expr pos:start="77:58" pos:end="77:67"><name pos:start="77:58" pos:end="77:67"><name pos:start="77:58" pos:end="77:58">s</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:67">command</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="83:1" pos:end="83:17">#<cpp:directive pos:start="83:2" pos:end="83:6">ifdef</cpp:directive> <name pos:start="83:8" pos:end="83:17">DEBUG_SCSI</name></cpp:ifdef>

    <block pos:start="85:5" pos:end="100:0">{<block_content pos:start="87:9" pos:end="95:21">

        <decl_stmt pos:start="87:9" pos:end="87:14"><decl pos:start="87:9" pos:end="87:13"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:13">i</name></decl>;</decl_stmt>

        <for pos:start="89:9" pos:end="93:9">for <control pos:start="89:13" pos:end="89:36">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:31"><expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:30">cmdlen</name></expr>;</condition> <incr pos:start="89:33" pos:end="89:35"><expr pos:start="89:33" pos:end="89:35"><name pos:start="89:33" pos:end="89:33">i</name><operator pos:start="89:34" pos:end="89:35">++</operator></expr></incr>)</control> <block pos:start="89:38" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:38">

            <expr_stmt pos:start="91:13" pos:end="91:38"><expr pos:start="91:13" pos:end="91:37"><call pos:start="91:13" pos:end="91:37"><name pos:start="91:13" pos:end="91:18">printf</name><argument_list pos:start="91:19" pos:end="91:37">(<argument pos:start="91:20" pos:end="91:28"><expr pos:start="91:20" pos:end="91:28"><literal type="string" pos:start="91:20" pos:end="91:28">" 0x%02x"</literal></expr></argument>, <argument pos:start="91:31" pos:end="91:36"><expr pos:start="91:31" pos:end="91:36"><name pos:start="91:31" pos:end="91:36"><name pos:start="91:31" pos:end="91:33">buf</name><index pos:start="91:34" pos:end="91:36">[<expr pos:start="91:35" pos:end="91:35"><name pos:start="91:35" pos:end="91:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><call pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:14">printf</name><argument_list pos:start="95:15" pos:end="95:20">(<argument pos:start="95:16" pos:end="95:19"><expr pos:start="95:16" pos:end="95:19"><literal type="string" pos:start="95:16" pos:end="95:19">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:27">(<expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:11">lun</name> <operator pos:start="101:13" pos:end="101:14">||</operator> <name pos:start="101:16" pos:end="101:21"><name pos:start="101:16" pos:end="101:18">buf</name><index pos:start="101:19" pos:end="101:21">[<expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">1</literal></expr>]</index></name> <operator pos:start="101:23" pos:end="101:24">&gt;&gt;</operator> <literal type="number" pos:start="101:26" pos:end="101:26">5</literal></expr>)</condition> <block pos:start="101:29" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:18">

        <comment type="block" pos:start="103:9" pos:end="103:36">/* Only LUN 0 supported.  */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:67"><expr pos:start="105:9" pos:end="105:66"><call pos:start="105:9" pos:end="105:66"><name pos:start="105:9" pos:end="105:15">DPRINTF</name><argument_list pos:start="105:16" pos:end="105:66">(<argument pos:start="105:17" pos:end="105:40"><expr pos:start="105:17" pos:end="105:40"><literal type="string" pos:start="105:17" pos:end="105:40">"Unimplemented LUN %d\n"</literal></expr></argument>, <argument pos:start="105:43" pos:end="105:65"><expr pos:start="105:43" pos:end="105:65"><ternary pos:start="105:43" pos:end="105:65"><condition pos:start="105:43" pos:end="105:47"><expr pos:start="105:43" pos:end="105:45"><name pos:start="105:43" pos:end="105:45">lun</name></expr> ?</condition><then pos:start="105:49" pos:end="105:51"> <expr pos:start="105:49" pos:end="105:51"><name pos:start="105:49" pos:end="105:51">lun</name></expr> </then><else pos:start="105:53" pos:end="105:65">: <expr pos:start="105:55" pos:end="105:65"><name pos:start="105:55" pos:end="105:60"><name pos:start="105:55" pos:end="105:57">buf</name><index pos:start="105:58" pos:end="105:60">[<expr pos:start="105:59" pos:end="105:59"><literal type="number" pos:start="105:59" pos:end="105:59">1</literal></expr>]</index></name> <operator pos:start="105:62" pos:end="105:63">&gt;&gt;</operator> <literal type="number" pos:start="105:65" pos:end="105:65">5</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:18">goto <name pos:start="107:14" pos:end="107:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="111:5" pos:end="537:5">switch <condition pos:start="111:12" pos:end="111:23">(<expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:22">command</name></name></expr>)</condition> <block pos:start="111:25" pos:end="537:5">{<block_content pos:start="113:5" pos:end="535:17">

    <case pos:start="113:5" pos:end="113:13">case <expr pos:start="113:10" pos:end="113:12"><literal type="number" pos:start="113:10" pos:end="113:12">0x0</literal></expr>:</case>

	<expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><call pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:15">DPRINTF</name><argument_list pos:start="115:16" pos:end="115:36">(<argument pos:start="115:17" pos:end="115:35"><expr pos:start="115:17" pos:end="115:35"><literal type="string" pos:start="115:17" pos:end="115:35">"Test Unit Ready\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x03</literal></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:49"><expr pos:start="121:9" pos:end="121:48"><call pos:start="121:9" pos:end="121:48"><name pos:start="121:9" pos:end="121:15">DPRINTF</name><argument_list pos:start="121:16" pos:end="121:48">(<argument pos:start="121:17" pos:end="121:42"><expr pos:start="121:17" pos:end="121:42"><literal type="string" pos:start="121:17" pos:end="121:42">"Request Sense (len %d)\n"</literal></expr></argument>, <argument pos:start="121:45" pos:end="121:47"><expr pos:start="121:45" pos:end="121:47"><name pos:start="121:45" pos:end="121:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="125:22"><if pos:start="123:9" pos:end="125:22">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:15">len</name> <operator pos:start="123:17" pos:end="123:17">&lt;</operator> <literal type="number" pos:start="123:19" pos:end="123:19">4</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:22"><block_content pos:start="125:13" pos:end="125:22">

            <goto pos:start="125:13" pos:end="125:22">goto <name pos:start="125:18" pos:end="125:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:26"><expr pos:start="127:9" pos:end="127:25"><call pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:14">memset</name><argument_list pos:start="127:15" pos:end="127:25">(<argument pos:start="127:16" pos:end="127:18"><expr pos:start="127:16" pos:end="127:18"><name pos:start="127:16" pos:end="127:18">buf</name></expr></argument>, <argument pos:start="127:21" pos:end="127:21"><expr pos:start="127:21" pos:end="127:21"><literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr></argument>, <argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:14">buf</name><index pos:start="129:15" pos:end="129:17">[<expr pos:start="129:16" pos:end="129:16"><literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>]</index></name> <operator pos:start="129:19" pos:end="129:19">=</operator> <literal type="number" pos:start="129:21" pos:end="129:24">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:22"><expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:14">buf</name><index pos:start="131:15" pos:end="131:17">[<expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">1</literal></expr>]</index></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <literal type="number" pos:start="131:21" pos:end="131:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:29"><expr pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:14">buf</name><index pos:start="133:15" pos:end="133:17">[<expr pos:start="133:16" pos:end="133:16"><literal type="number" pos:start="133:16" pos:end="133:16">2</literal></expr>]</index></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:28">sense</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:23"><expr pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:18">buf_len</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">4</literal></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:14">case <expr pos:start="139:10" pos:end="139:13"><literal type="number" pos:start="139:10" pos:end="139:13">0x12</literal></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><call pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:15">DPRINTF</name><argument_list pos:start="141:16" pos:end="141:42">(<argument pos:start="141:17" pos:end="141:36"><expr pos:start="141:17" pos:end="141:36"><literal type="string" pos:start="141:17" pos:end="141:36">"Inquiry (len %d)\n"</literal></expr></argument>, <argument pos:start="141:39" pos:end="141:41"><expr pos:start="141:39" pos:end="141:41"><name pos:start="141:39" pos:end="141:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:21">(<expr pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:15">len</name> <operator pos:start="143:17" pos:end="143:17">&lt;</operator> <literal type="number" pos:start="143:19" pos:end="143:20">36</literal></expr>)</condition> <block pos:start="143:23" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:57">

            <expr_stmt pos:start="145:13" pos:end="145:57"><expr pos:start="145:13" pos:end="145:56"><call pos:start="145:13" pos:end="145:56"><name pos:start="145:13" pos:end="145:16">BADF</name><argument_list pos:start="145:17" pos:end="145:56">(<argument pos:start="145:18" pos:end="145:50"><expr pos:start="145:18" pos:end="145:50"><literal type="string" pos:start="145:18" pos:end="145:50">"Inquiry buffer too small (%d)\n"</literal></expr></argument>, <argument pos:start="145:53" pos:end="145:55"><expr pos:start="145:53" pos:end="145:55"><name pos:start="145:53" pos:end="145:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><call pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:14">memset</name><argument_list pos:start="149:15" pos:end="149:29">(<argument pos:start="149:16" pos:end="149:21"><expr pos:start="149:16" pos:end="149:21"><name pos:start="149:16" pos:end="149:21"><name pos:start="149:16" pos:end="149:16">s</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:21">buf</name></name></expr></argument>, <argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">0</literal></expr></argument>, <argument pos:start="149:27" pos:end="149:28"><expr pos:start="149:27" pos:end="149:28"><literal type="number" pos:start="149:27" pos:end="149:28">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="151:9" pos:end="165:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:59">(<expr pos:start="151:13" pos:end="151:58"><call pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:30">bdrv_get_type_hint</name><argument_list pos:start="151:31" pos:end="151:39">(<argument pos:start="151:32" pos:end="151:38"><expr pos:start="151:32" pos:end="151:38"><name pos:start="151:32" pos:end="151:38"><name pos:start="151:32" pos:end="151:32">s</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:38">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:41" pos:end="151:42">==</operator> <name pos:start="151:44" pos:end="151:58">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="151:61" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:55">

	    <expr_stmt pos:start="153:13" pos:end="153:26"><expr pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:21"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:18">buf</name><index pos:start="153:19" pos:end="153:21">[<expr pos:start="153:20" pos:end="153:20"><literal type="number" pos:start="153:20" pos:end="153:20">0</literal></expr>]</index></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <literal type="number" pos:start="153:25" pos:end="153:25">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:29"><expr pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:21"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:18">buf</name><index pos:start="155:19" pos:end="155:21">[<expr pos:start="155:20" pos:end="155:20"><literal type="number" pos:start="155:20" pos:end="155:20">1</literal></expr>]</index></name> <operator pos:start="155:23" pos:end="155:23">=</operator> <literal type="number" pos:start="155:25" pos:end="155:28">0x80</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="157:13" pos:end="157:55"><expr pos:start="157:13" pos:end="157:54"><call pos:start="157:13" pos:end="157:54"><name pos:start="157:13" pos:end="157:18">memcpy</name><argument_list pos:start="157:19" pos:end="157:54">(<argument pos:start="157:20" pos:end="157:30"><expr pos:start="157:20" pos:end="157:30"><operator pos:start="157:20" pos:end="157:20">&amp;</operator><name pos:start="157:21" pos:end="157:30"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:26">buf</name><index pos:start="157:27" pos:end="157:30">[<expr pos:start="157:28" pos:end="157:29"><literal type="number" pos:start="157:28" pos:end="157:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:33" pos:end="157:49"><expr pos:start="157:33" pos:end="157:49"><literal type="string" pos:start="157:33" pos:end="157:49">"QEMU CD-ROM    "</literal></expr></argument>, <argument pos:start="157:52" pos:end="157:53"><expr pos:start="157:52" pos:end="157:53"><literal type="number" pos:start="157:52" pos:end="157:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="159:11" pos:end="165:9">else <block pos:start="159:16" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:55">

	    <expr_stmt pos:start="161:13" pos:end="161:26"><expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:18">buf</name><index pos:start="161:19" pos:end="161:21">[<expr pos:start="161:20" pos:end="161:20"><literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>]</index></name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="163:13" pos:end="163:55"><expr pos:start="163:13" pos:end="163:54"><call pos:start="163:13" pos:end="163:54"><name pos:start="163:13" pos:end="163:18">memcpy</name><argument_list pos:start="163:19" pos:end="163:54">(<argument pos:start="163:20" pos:end="163:30"><expr pos:start="163:20" pos:end="163:30"><operator pos:start="163:20" pos:end="163:20">&amp;</operator><name pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:21">s</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:26">buf</name><index pos:start="163:27" pos:end="163:30">[<expr pos:start="163:28" pos:end="163:29"><literal type="number" pos:start="163:28" pos:end="163:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:33" pos:end="163:49"><expr pos:start="163:33" pos:end="163:49"><literal type="string" pos:start="163:33" pos:end="163:49">"QEMU HARDDISK  "</literal></expr></argument>, <argument pos:start="163:52" pos:end="163:53"><expr pos:start="163:52" pos:end="163:53"><literal type="number" pos:start="163:52" pos:end="163:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<expr_stmt pos:start="167:9" pos:end="167:41"><expr pos:start="167:9" pos:end="167:40"><call pos:start="167:9" pos:end="167:40"><name pos:start="167:9" pos:end="167:14">memcpy</name><argument_list pos:start="167:15" pos:end="167:40">(<argument pos:start="167:16" pos:end="167:25"><expr pos:start="167:16" pos:end="167:25"><operator pos:start="167:16" pos:end="167:16">&amp;</operator><name pos:start="167:17" pos:end="167:25"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:22">buf</name><index pos:start="167:23" pos:end="167:25">[<expr pos:start="167:24" pos:end="167:24"><literal type="number" pos:start="167:24" pos:end="167:24">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="167:28" pos:end="167:36"><expr pos:start="167:28" pos:end="167:36"><literal type="string" pos:start="167:28" pos:end="167:36">"QEMU   "</literal></expr></argument>, <argument pos:start="167:39" pos:end="167:39"><expr pos:start="167:39" pos:end="167:39"><literal type="number" pos:start="167:39" pos:end="167:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:45"><expr pos:start="169:9" pos:end="169:44"><call pos:start="169:9" pos:end="169:44"><name pos:start="169:9" pos:end="169:14">memcpy</name><argument_list pos:start="169:15" pos:end="169:44">(<argument pos:start="169:16" pos:end="169:26"><expr pos:start="169:16" pos:end="169:26"><operator pos:start="169:16" pos:end="169:16">&amp;</operator><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:17">s</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:22">buf</name><index pos:start="169:23" pos:end="169:26">[<expr pos:start="169:24" pos:end="169:25"><literal type="number" pos:start="169:24" pos:end="169:25">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:29" pos:end="169:40"><expr pos:start="169:29" pos:end="169:40"><name pos:start="169:29" pos:end="169:40">QEMU_VERSION</name></expr></argument>, <argument pos:start="169:43" pos:end="169:43"><expr pos:start="169:43" pos:end="169:43"><literal type="number" pos:start="169:43" pos:end="169:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="171:9" pos:end="173:55">/* Identify device as SCSI-3 rev 1.

           Some later commands are also implemented. */</comment>

	<expr_stmt pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:14">buf</name><index pos:start="175:15" pos:end="175:17">[<expr pos:start="175:16" pos:end="175:16"><literal type="number" pos:start="175:16" pos:end="175:16">2</literal></expr>]</index></name> <operator pos:start="175:19" pos:end="175:19">=</operator> <literal type="number" pos:start="175:21" pos:end="175:21">3</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="177:9" pos:end="177:22"><expr pos:start="177:9" pos:end="177:21"><name pos:start="177:9" pos:end="177:17"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:14">buf</name><index pos:start="177:15" pos:end="177:17">[<expr pos:start="177:16" pos:end="177:16"><literal type="number" pos:start="177:16" pos:end="177:16">3</literal></expr>]</index></name> <operator pos:start="177:19" pos:end="177:19">=</operator> <literal type="number" pos:start="177:21" pos:end="177:21">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="177:24" pos:end="177:37">/* Format 2 */</comment>

	<expr_stmt pos:start="179:9" pos:end="179:23"><expr pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:17"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:14">buf</name><index pos:start="179:15" pos:end="179:17">[<expr pos:start="179:16" pos:end="179:16"><literal type="number" pos:start="179:16" pos:end="179:16">4</literal></expr>]</index></name> <operator pos:start="179:19" pos:end="179:19">=</operator> <literal type="number" pos:start="179:21" pos:end="179:22">32</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="181:9" pos:end="181:24"><expr pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:18"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:18">buf_len</name></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:23">36</literal></expr>;</expr_stmt>

	<break pos:start="183:9" pos:end="183:14">break;</break>

    <case pos:start="185:5" pos:end="185:14">case <expr pos:start="185:10" pos:end="185:13"><literal type="number" pos:start="185:10" pos:end="185:13">0x16</literal></expr>:</case>

        <expr_stmt pos:start="187:9" pos:end="187:32"><expr pos:start="187:9" pos:end="187:31"><call pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:15">DPRINTF</name><argument_list pos:start="187:16" pos:end="187:31">(<argument pos:start="187:17" pos:end="187:30"><expr pos:start="187:17" pos:end="187:30"><literal type="string" pos:start="187:17" pos:end="187:30">"Reserve(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="191:22"><if pos:start="189:9" pos:end="191:22">if <condition pos:start="189:12" pos:end="189:23">(<expr pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:18"><name pos:start="189:13" pos:end="189:15">buf</name><index pos:start="189:16" pos:end="189:18">[<expr pos:start="189:17" pos:end="189:17"><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr>]</index></name> <operator pos:start="189:20" pos:end="189:20">&amp;</operator> <literal type="number" pos:start="189:22" pos:end="189:22">1</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:22"><block_content pos:start="191:13" pos:end="191:22">

            <goto pos:start="191:13" pos:end="191:22">goto <name pos:start="191:18" pos:end="191:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:14">case <expr pos:start="195:10" pos:end="195:13"><literal type="number" pos:start="195:10" pos:end="195:13">0x17</literal></expr>:</case>

        <expr_stmt pos:start="197:9" pos:end="197:32"><expr pos:start="197:9" pos:end="197:31"><call pos:start="197:9" pos:end="197:31"><name pos:start="197:9" pos:end="197:15">DPRINTF</name><argument_list pos:start="197:16" pos:end="197:31">(<argument pos:start="197:17" pos:end="197:30"><expr pos:start="197:17" pos:end="197:30"><literal type="string" pos:start="197:17" pos:end="197:30">"Release(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="201:22"><if pos:start="199:9" pos:end="201:22">if <condition pos:start="199:12" pos:end="199:23">(<expr pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:18"><name pos:start="199:13" pos:end="199:15">buf</name><index pos:start="199:16" pos:end="199:18">[<expr pos:start="199:17" pos:end="199:17"><literal type="number" pos:start="199:17" pos:end="199:17">1</literal></expr>]</index></name> <operator pos:start="199:20" pos:end="199:20">&amp;</operator> <literal type="number" pos:start="199:22" pos:end="199:22">1</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:22"><block_content pos:start="201:13" pos:end="201:22">

            <goto pos:start="201:13" pos:end="201:22">goto <name pos:start="201:18" pos:end="201:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:14">case <expr pos:start="205:10" pos:end="205:13"><literal type="number" pos:start="205:10" pos:end="205:13">0x1a</literal></expr>:</case>

    <case pos:start="207:5" pos:end="207:14">case <expr pos:start="207:10" pos:end="207:13"><literal type="number" pos:start="207:10" pos:end="207:13">0x5a</literal></expr>:</case>

        <block pos:start="209:9" pos:end="319:9">{<block_content pos:start="211:13" pos:end="317:33">

            <decl_stmt pos:start="211:13" pos:end="211:20"><decl pos:start="211:13" pos:end="211:19"><type pos:start="211:13" pos:end="211:18"><name pos:start="211:13" pos:end="211:16">char</name> <modifier pos:start="211:18" pos:end="211:18">*</modifier></type><name pos:start="211:19" pos:end="211:19">p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="213:13" pos:end="213:21"><decl pos:start="213:13" pos:end="213:20"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:20">page</name></decl>;</decl_stmt>



            <expr_stmt pos:start="217:13" pos:end="217:33"><expr pos:start="217:13" pos:end="217:32"><name pos:start="217:13" pos:end="217:16">page</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <name pos:start="217:20" pos:end="217:25"><name pos:start="217:20" pos:end="217:22">buf</name><index pos:start="217:23" pos:end="217:25">[<expr pos:start="217:24" pos:end="217:24"><literal type="number" pos:start="217:24" pos:end="217:24">2</literal></expr>]</index></name> <operator pos:start="217:27" pos:end="217:27">&amp;</operator> <literal type="number" pos:start="217:29" pos:end="217:32">0x3f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:65"><expr pos:start="219:13" pos:end="219:64"><call pos:start="219:13" pos:end="219:64"><name pos:start="219:13" pos:end="219:19">DPRINTF</name><argument_list pos:start="219:20" pos:end="219:64">(<argument pos:start="219:21" pos:end="219:52"><expr pos:start="219:21" pos:end="219:52"><literal type="string" pos:start="219:21" pos:end="219:52">"Mode Sense (page %d, len %d)\n"</literal></expr></argument>, <argument pos:start="219:55" pos:end="219:58"><expr pos:start="219:55" pos:end="219:58"><name pos:start="219:55" pos:end="219:58">page</name></expr></argument>, <argument pos:start="219:61" pos:end="219:63"><expr pos:start="219:61" pos:end="219:63"><name pos:start="219:61" pos:end="219:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:23"><expr pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:13">p</name> <operator pos:start="221:15" pos:end="221:15">=</operator> <name pos:start="221:17" pos:end="221:22"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:22">buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:28"><expr pos:start="223:13" pos:end="223:27"><call pos:start="223:13" pos:end="223:27"><name pos:start="223:13" pos:end="223:18">memset</name><argument_list pos:start="223:19" pos:end="223:27">(<argument pos:start="223:20" pos:end="223:20"><expr pos:start="223:20" pos:end="223:20"><name pos:start="223:20" pos:end="223:20">p</name></expr></argument>, <argument pos:start="223:23" pos:end="223:23"><expr pos:start="223:23" pos:end="223:23"><literal type="number" pos:start="223:23" pos:end="223:23">0</literal></expr></argument>, <argument pos:start="223:26" pos:end="223:26"><expr pos:start="223:26" pos:end="223:26"><literal type="number" pos:start="223:26" pos:end="223:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:26"><expr pos:start="225:13" pos:end="225:25"><name pos:start="225:13" pos:end="225:21"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:18">buf</name><index pos:start="225:19" pos:end="225:21">[<expr pos:start="225:20" pos:end="225:20"><literal type="number" pos:start="225:20" pos:end="225:20">1</literal></expr>]</index></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <literal type="number" pos:start="225:25" pos:end="225:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="225:28" pos:end="225:53">/* Default media type.  */</comment>

            <expr_stmt pos:start="227:13" pos:end="227:26"><expr pos:start="227:13" pos:end="227:25"><name pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:18">buf</name><index pos:start="227:19" pos:end="227:21">[<expr pos:start="227:20" pos:end="227:20"><literal type="number" pos:start="227:20" pos:end="227:20">3</literal></expr>]</index></name> <operator pos:start="227:23" pos:end="227:23">=</operator> <literal type="number" pos:start="227:25" pos:end="227:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="227:28" pos:end="227:58">/* Block descriptor length.  */</comment>

            <if_stmt pos:start="229:13" pos:end="233:13"><if pos:start="229:13" pos:end="233:13">if <condition pos:start="229:16" pos:end="229:63">(<expr pos:start="229:17" pos:end="229:62"><call pos:start="229:17" pos:end="229:43"><name pos:start="229:17" pos:end="229:34">bdrv_get_type_hint</name><argument_list pos:start="229:35" pos:end="229:43">(<argument pos:start="229:36" pos:end="229:42"><expr pos:start="229:36" pos:end="229:42"><name pos:start="229:36" pos:end="229:42"><name pos:start="229:36" pos:end="229:36">s</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:42">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="229:45" pos:end="229:46">==</operator> <name pos:start="229:48" pos:end="229:62">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="229:65" pos:end="233:13">{<block_content pos:start="231:17" pos:end="231:33">

                <expr_stmt pos:start="231:17" pos:end="231:33"><expr pos:start="231:17" pos:end="231:32"><name pos:start="231:17" pos:end="231:25"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:22">buf</name><index pos:start="231:23" pos:end="231:25">[<expr pos:start="231:24" pos:end="231:24"><literal type="number" pos:start="231:24" pos:end="231:24">2</literal></expr>]</index></name> <operator pos:start="231:27" pos:end="231:27">=</operator> <literal type="number" pos:start="231:29" pos:end="231:32">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="231:35" pos:end="231:50">/* Readonly.  */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:19"><expr pos:start="235:13" pos:end="235:18"><name pos:start="235:13" pos:end="235:13">p</name> <operator pos:start="235:15" pos:end="235:16">+=</operator> <literal type="number" pos:start="235:18" pos:end="235:18">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="237:13" pos:end="249:13"><if pos:start="237:13" pos:end="249:13">if <condition pos:start="237:16" pos:end="237:44">(<expr pos:start="237:17" pos:end="237:43"><operator pos:start="237:17" pos:end="237:17">(</operator><name pos:start="237:18" pos:end="237:21">page</name> <operator pos:start="237:23" pos:end="237:24">==</operator> <literal type="number" pos:start="237:26" pos:end="237:26">8</literal> <operator pos:start="237:28" pos:end="237:29">||</operator> <name pos:start="237:31" pos:end="237:34">page</name> <operator pos:start="237:36" pos:end="237:37">==</operator> <literal type="number" pos:start="237:39" pos:end="237:42">0x3f</literal><operator pos:start="237:43" pos:end="237:43">)</operator></expr>)</condition> <block pos:start="237:46" pos:end="249:13">{<block_content pos:start="241:17" pos:end="247:24">

                <comment type="block" pos:start="239:17" pos:end="239:36">/* Caching page.  */</comment>

                <expr_stmt pos:start="241:17" pos:end="241:25"><expr pos:start="241:17" pos:end="241:24"><name pos:start="241:17" pos:end="241:20"><name pos:start="241:17" pos:end="241:17">p</name><index pos:start="241:18" pos:end="241:20">[<expr pos:start="241:19" pos:end="241:19"><literal type="number" pos:start="241:19" pos:end="241:19">0</literal></expr>]</index></name> <operator pos:start="241:22" pos:end="241:22">=</operator> <literal type="number" pos:start="241:24" pos:end="241:24">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:28"><expr pos:start="243:17" pos:end="243:27"><name pos:start="243:17" pos:end="243:20"><name pos:start="243:17" pos:end="243:17">p</name><index pos:start="243:18" pos:end="243:20">[<expr pos:start="243:19" pos:end="243:19"><literal type="number" pos:start="243:19" pos:end="243:19">1</literal></expr>]</index></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <literal type="number" pos:start="243:24" pos:end="243:27">0x12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:25"><expr pos:start="245:17" pos:end="245:24"><name pos:start="245:17" pos:end="245:20"><name pos:start="245:17" pos:end="245:17">p</name><index pos:start="245:18" pos:end="245:20">[<expr pos:start="245:19" pos:end="245:19"><literal type="number" pos:start="245:19" pos:end="245:19">2</literal></expr>]</index></name> <operator pos:start="245:22" pos:end="245:22">=</operator> <literal type="number" pos:start="245:24" pos:end="245:24">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="245:27" pos:end="245:35">/* WCE */</comment>

                <expr_stmt pos:start="247:17" pos:end="247:24"><expr pos:start="247:17" pos:end="247:23"><name pos:start="247:17" pos:end="247:17">p</name> <operator pos:start="247:19" pos:end="247:20">+=</operator> <literal type="number" pos:start="247:22" pos:end="247:23">19</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="251:13" pos:end="309:13"><if pos:start="251:13" pos:end="309:13">if <condition pos:start="251:16" pos:end="253:72">(<expr pos:start="251:17" pos:end="253:71"><operator pos:start="251:17" pos:end="251:17">(</operator><name pos:start="251:18" pos:end="251:21">page</name> <operator pos:start="251:23" pos:end="251:24">==</operator> <literal type="number" pos:start="251:26" pos:end="251:29">0x3f</literal> <operator pos:start="251:31" pos:end="251:32">||</operator> <name pos:start="251:34" pos:end="251:37">page</name> <operator pos:start="251:39" pos:end="251:40">==</operator> <literal type="number" pos:start="251:42" pos:end="251:45">0x2a</literal><operator pos:start="251:46" pos:end="251:46">)</operator>

                    <operator pos:start="253:21" pos:end="253:22">&amp;&amp;</operator> <operator pos:start="253:24" pos:end="253:24">(</operator><call pos:start="253:25" pos:end="253:51"><name pos:start="253:25" pos:end="253:42">bdrv_get_type_hint</name><argument_list pos:start="253:43" pos:end="253:51">(<argument pos:start="253:44" pos:end="253:50"><expr pos:start="253:44" pos:end="253:50"><name pos:start="253:44" pos:end="253:50"><name pos:start="253:44" pos:end="253:44">s</name><operator pos:start="253:45" pos:end="253:46">-&gt;</operator><name pos:start="253:47" pos:end="253:50">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:53" pos:end="253:54">==</operator> <name pos:start="253:56" pos:end="253:70">BDRV_TYPE_CDROM</name><operator pos:start="253:71" pos:end="253:71">)</operator></expr>)</condition> <block pos:start="253:74" pos:end="309:13">{<block_content pos:start="257:17" pos:end="307:24">

                <comment type="block" pos:start="255:17" pos:end="255:65">/* CD Capabilities and Mechanical Status page. */</comment>

                <expr_stmt pos:start="257:17" pos:end="257:28"><expr pos:start="257:17" pos:end="257:27"><name pos:start="257:17" pos:end="257:20"><name pos:start="257:17" pos:end="257:17">p</name><index pos:start="257:18" pos:end="257:20">[<expr pos:start="257:19" pos:end="257:19"><literal type="number" pos:start="257:19" pos:end="257:19">0</literal></expr>]</index></name> <operator pos:start="257:22" pos:end="257:22">=</operator> <literal type="number" pos:start="257:24" pos:end="257:27">0x2a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:28"><expr pos:start="259:17" pos:end="259:27"><name pos:start="259:17" pos:end="259:20"><name pos:start="259:17" pos:end="259:17">p</name><index pos:start="259:18" pos:end="259:20">[<expr pos:start="259:19" pos:end="259:19"><literal type="number" pos:start="259:19" pos:end="259:19">1</literal></expr>]</index></name> <operator pos:start="259:22" pos:end="259:22">=</operator> <literal type="number" pos:start="259:24" pos:end="259:27">0x14</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:25"><expr pos:start="261:17" pos:end="261:24"><name pos:start="261:17" pos:end="261:20"><name pos:start="261:17" pos:end="261:17">p</name><index pos:start="261:18" pos:end="261:20">[<expr pos:start="261:19" pos:end="261:19"><literal type="number" pos:start="261:19" pos:end="261:19">2</literal></expr>]</index></name> <operator pos:start="261:22" pos:end="261:22">=</operator> <literal type="number" pos:start="261:24" pos:end="261:24">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="261:27" pos:end="261:46">// CD-R &amp; CD-RW read</comment>

                <expr_stmt pos:start="263:17" pos:end="263:25"><expr pos:start="263:17" pos:end="263:24"><name pos:start="263:17" pos:end="263:20"><name pos:start="263:17" pos:end="263:17">p</name><index pos:start="263:18" pos:end="263:20">[<expr pos:start="263:19" pos:end="263:19"><literal type="number" pos:start="263:19" pos:end="263:19">3</literal></expr>]</index></name> <operator pos:start="263:22" pos:end="263:22">=</operator> <literal type="number" pos:start="263:24" pos:end="263:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="263:27" pos:end="263:50">// Writing not supported</comment>

                <expr_stmt pos:start="265:17" pos:end="265:28"><expr pos:start="265:17" pos:end="265:27"><name pos:start="265:17" pos:end="265:20"><name pos:start="265:17" pos:end="265:17">p</name><index pos:start="265:18" pos:end="265:20">[<expr pos:start="265:19" pos:end="265:19"><literal type="number" pos:start="265:19" pos:end="265:19">4</literal></expr>]</index></name> <operator pos:start="265:22" pos:end="265:22">=</operator> <literal type="number" pos:start="265:24" pos:end="265:27">0x7f</literal></expr>;</expr_stmt> <comment type="block" pos:start="265:30" pos:end="267:74">/* Audio, composite, digital out,

                                         mode 2 form 1&amp;2, multi session */</comment>

                <expr_stmt pos:start="269:17" pos:end="269:28"><expr pos:start="269:17" pos:end="269:27"><name pos:start="269:17" pos:end="269:20"><name pos:start="269:17" pos:end="269:17">p</name><index pos:start="269:18" pos:end="269:20">[<expr pos:start="269:19" pos:end="269:19"><literal type="number" pos:start="269:19" pos:end="269:19">5</literal></expr>]</index></name> <operator pos:start="269:22" pos:end="269:22">=</operator> <literal type="number" pos:start="269:24" pos:end="269:27">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="269:30" pos:end="273:57">/* CD DA, DA accurate, RW supported,

                                         RW corrected, C2 errors, ISRC,

                                         UPC, Bar code */</comment>

                <expr_stmt pos:start="275:17" pos:end="275:63"><expr pos:start="275:17" pos:end="275:62"><name pos:start="275:17" pos:end="275:20"><name pos:start="275:17" pos:end="275:17">p</name><index pos:start="275:18" pos:end="275:20">[<expr pos:start="275:19" pos:end="275:19"><literal type="number" pos:start="275:19" pos:end="275:19">6</literal></expr>]</index></name> <operator pos:start="275:22" pos:end="275:22">=</operator> <literal type="number" pos:start="275:24" pos:end="275:27">0x2d</literal> <operator pos:start="275:29" pos:end="275:29">|</operator> <operator pos:start="275:31" pos:end="275:31">(</operator><ternary pos:start="275:32" pos:end="275:61"><condition pos:start="275:32" pos:end="275:55"><expr pos:start="275:32" pos:end="275:54"><call pos:start="275:32" pos:end="275:54"><name pos:start="275:32" pos:end="275:45">bdrv_is_locked</name><argument_list pos:start="275:46" pos:end="275:54">(<argument pos:start="275:47" pos:end="275:53"><expr pos:start="275:47" pos:end="275:53"><name pos:start="275:47" pos:end="275:53"><name pos:start="275:47" pos:end="275:47">s</name><operator pos:start="275:48" pos:end="275:49">-&gt;</operator><name pos:start="275:50" pos:end="275:53">bdrv</name></name></expr></argument>)</argument_list></call></expr>?</condition><then pos:start="275:57" pos:end="275:57"> <expr pos:start="275:57" pos:end="275:57"><literal type="number" pos:start="275:57" pos:end="275:57">2</literal></expr> </then><else pos:start="275:59" pos:end="275:61">: <expr pos:start="275:61" pos:end="275:61"><literal type="number" pos:start="275:61" pos:end="275:61">0</literal></expr></else></ternary><operator pos:start="275:62" pos:end="275:62">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="277:17" pos:end="277:68">/* Locking supported, jumper present, eject, tray */</comment>

                <expr_stmt pos:start="279:17" pos:end="279:25"><expr pos:start="279:17" pos:end="279:24"><name pos:start="279:17" pos:end="279:20"><name pos:start="279:17" pos:end="279:17">p</name><index pos:start="279:18" pos:end="279:20">[<expr pos:start="279:19" pos:end="279:19"><literal type="number" pos:start="279:19" pos:end="279:19">7</literal></expr>]</index></name> <operator pos:start="279:22" pos:end="279:22">=</operator> <literal type="number" pos:start="279:24" pos:end="279:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="279:27" pos:end="281:48">/* no volume &amp; mute control, no

                                      changer */</comment>

                <expr_stmt pos:start="283:17" pos:end="283:39"><expr pos:start="283:17" pos:end="283:38"><name pos:start="283:17" pos:end="283:20"><name pos:start="283:17" pos:end="283:17">p</name><index pos:start="283:18" pos:end="283:20">[<expr pos:start="283:19" pos:end="283:19"><literal type="number" pos:start="283:19" pos:end="283:19">8</literal></expr>]</index></name> <operator pos:start="283:22" pos:end="283:22">=</operator> <operator pos:start="283:24" pos:end="283:24">(</operator><literal type="number" pos:start="283:25" pos:end="283:26">50</literal> <operator pos:start="283:28" pos:end="283:28">*</operator> <literal type="number" pos:start="283:30" pos:end="283:32">176</literal><operator pos:start="283:33" pos:end="283:33">)</operator> <operator pos:start="283:35" pos:end="283:36">&gt;&gt;</operator> <literal type="number" pos:start="283:38" pos:end="283:38">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="283:41" pos:end="283:57">// 50x read speed</comment>

                <expr_stmt pos:start="285:17" pos:end="285:41"><expr pos:start="285:17" pos:end="285:40"><name pos:start="285:17" pos:end="285:20"><name pos:start="285:17" pos:end="285:17">p</name><index pos:start="285:18" pos:end="285:20">[<expr pos:start="285:19" pos:end="285:19"><literal type="number" pos:start="285:19" pos:end="285:19">9</literal></expr>]</index></name> <operator pos:start="285:22" pos:end="285:22">=</operator> <operator pos:start="285:24" pos:end="285:24">(</operator><literal type="number" pos:start="285:25" pos:end="285:26">50</literal> <operator pos:start="285:28" pos:end="285:28">*</operator> <literal type="number" pos:start="285:30" pos:end="285:32">176</literal><operator pos:start="285:33" pos:end="285:33">)</operator> <operator pos:start="285:35" pos:end="285:35">&amp;</operator> <literal type="number" pos:start="285:37" pos:end="285:40">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:31"><expr pos:start="287:17" pos:end="287:30"><name pos:start="287:17" pos:end="287:21"><name pos:start="287:17" pos:end="287:17">p</name><index pos:start="287:18" pos:end="287:21">[<expr pos:start="287:19" pos:end="287:20"><literal type="number" pos:start="287:19" pos:end="287:20">10</literal></expr>]</index></name> <operator pos:start="287:23" pos:end="287:23">=</operator> <literal type="number" pos:start="287:25" pos:end="287:25">0</literal> <operator pos:start="287:27" pos:end="287:28">&gt;&gt;</operator> <literal type="number" pos:start="287:30" pos:end="287:30">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="287:33" pos:end="287:44">// No volume</comment>

                <expr_stmt pos:start="289:17" pos:end="289:33"><expr pos:start="289:17" pos:end="289:32"><name pos:start="289:17" pos:end="289:21"><name pos:start="289:17" pos:end="289:17">p</name><index pos:start="289:18" pos:end="289:21">[<expr pos:start="289:19" pos:end="289:20"><literal type="number" pos:start="289:19" pos:end="289:20">11</literal></expr>]</index></name> <operator pos:start="289:23" pos:end="289:23">=</operator> <literal type="number" pos:start="289:25" pos:end="289:25">0</literal> <operator pos:start="289:27" pos:end="289:27">&amp;</operator> <literal type="number" pos:start="289:29" pos:end="289:32">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:34"><expr pos:start="291:17" pos:end="291:33"><name pos:start="291:17" pos:end="291:21"><name pos:start="291:17" pos:end="291:17">p</name><index pos:start="291:18" pos:end="291:21">[<expr pos:start="291:19" pos:end="291:20"><literal type="number" pos:start="291:19" pos:end="291:20">12</literal></expr>]</index></name> <operator pos:start="291:23" pos:end="291:23">=</operator> <literal type="number" pos:start="291:25" pos:end="291:28">2048</literal> <operator pos:start="291:30" pos:end="291:31">&gt;&gt;</operator> <literal type="number" pos:start="291:33" pos:end="291:33">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="291:36" pos:end="291:47">// 2M buffer</comment>

                <expr_stmt pos:start="293:17" pos:end="293:36"><expr pos:start="293:17" pos:end="293:35"><name pos:start="293:17" pos:end="293:21"><name pos:start="293:17" pos:end="293:17">p</name><index pos:start="293:18" pos:end="293:21">[<expr pos:start="293:19" pos:end="293:20"><literal type="number" pos:start="293:19" pos:end="293:20">13</literal></expr>]</index></name> <operator pos:start="293:23" pos:end="293:23">=</operator> <literal type="number" pos:start="293:25" pos:end="293:28">2048</literal> <operator pos:start="293:30" pos:end="293:30">&amp;</operator> <literal type="number" pos:start="293:32" pos:end="293:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:40"><expr pos:start="295:17" pos:end="295:39"><name pos:start="295:17" pos:end="295:21"><name pos:start="295:17" pos:end="295:17">p</name><index pos:start="295:18" pos:end="295:21">[<expr pos:start="295:19" pos:end="295:20"><literal type="number" pos:start="295:19" pos:end="295:20">14</literal></expr>]</index></name> <operator pos:start="295:23" pos:end="295:23">=</operator> <operator pos:start="295:25" pos:end="295:25">(</operator><literal type="number" pos:start="295:26" pos:end="295:27">16</literal> <operator pos:start="295:29" pos:end="295:29">*</operator> <literal type="number" pos:start="295:31" pos:end="295:33">176</literal><operator pos:start="295:34" pos:end="295:34">)</operator> <operator pos:start="295:36" pos:end="295:37">&gt;&gt;</operator> <literal type="number" pos:start="295:39" pos:end="295:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="295:42" pos:end="295:66">// 16x read speed current</comment>

                <expr_stmt pos:start="297:17" pos:end="297:42"><expr pos:start="297:17" pos:end="297:41"><name pos:start="297:17" pos:end="297:21"><name pos:start="297:17" pos:end="297:17">p</name><index pos:start="297:18" pos:end="297:21">[<expr pos:start="297:19" pos:end="297:20"><literal type="number" pos:start="297:19" pos:end="297:20">15</literal></expr>]</index></name> <operator pos:start="297:23" pos:end="297:23">=</operator> <operator pos:start="297:25" pos:end="297:25">(</operator><literal type="number" pos:start="297:26" pos:end="297:27">16</literal> <operator pos:start="297:29" pos:end="297:29">*</operator> <literal type="number" pos:start="297:31" pos:end="297:33">176</literal><operator pos:start="297:34" pos:end="297:34">)</operator> <operator pos:start="297:36" pos:end="297:36">&amp;</operator> <literal type="number" pos:start="297:38" pos:end="297:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:40"><expr pos:start="299:17" pos:end="299:39"><name pos:start="299:17" pos:end="299:21"><name pos:start="299:17" pos:end="299:17">p</name><index pos:start="299:18" pos:end="299:21">[<expr pos:start="299:19" pos:end="299:20"><literal type="number" pos:start="299:19" pos:end="299:20">18</literal></expr>]</index></name> <operator pos:start="299:23" pos:end="299:23">=</operator> <operator pos:start="299:25" pos:end="299:25">(</operator><literal type="number" pos:start="299:26" pos:end="299:27">16</literal> <operator pos:start="299:29" pos:end="299:29">*</operator> <literal type="number" pos:start="299:31" pos:end="299:33">176</literal><operator pos:start="299:34" pos:end="299:34">)</operator> <operator pos:start="299:36" pos:end="299:37">&gt;&gt;</operator> <literal type="number" pos:start="299:39" pos:end="299:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="299:42" pos:end="299:59">// 16x write speed</comment>

                <expr_stmt pos:start="301:17" pos:end="301:42"><expr pos:start="301:17" pos:end="301:41"><name pos:start="301:17" pos:end="301:21"><name pos:start="301:17" pos:end="301:17">p</name><index pos:start="301:18" pos:end="301:21">[<expr pos:start="301:19" pos:end="301:20"><literal type="number" pos:start="301:19" pos:end="301:20">19</literal></expr>]</index></name> <operator pos:start="301:23" pos:end="301:23">=</operator> <operator pos:start="301:25" pos:end="301:25">(</operator><literal type="number" pos:start="301:26" pos:end="301:27">16</literal> <operator pos:start="301:29" pos:end="301:29">*</operator> <literal type="number" pos:start="301:31" pos:end="301:33">176</literal><operator pos:start="301:34" pos:end="301:34">)</operator> <operator pos:start="301:36" pos:end="301:36">&amp;</operator> <literal type="number" pos:start="301:38" pos:end="301:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:40"><expr pos:start="303:17" pos:end="303:39"><name pos:start="303:17" pos:end="303:21"><name pos:start="303:17" pos:end="303:17">p</name><index pos:start="303:18" pos:end="303:21">[<expr pos:start="303:19" pos:end="303:20"><literal type="number" pos:start="303:19" pos:end="303:20">20</literal></expr>]</index></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <operator pos:start="303:25" pos:end="303:25">(</operator><literal type="number" pos:start="303:26" pos:end="303:27">16</literal> <operator pos:start="303:29" pos:end="303:29">*</operator> <literal type="number" pos:start="303:31" pos:end="303:33">176</literal><operator pos:start="303:34" pos:end="303:34">)</operator> <operator pos:start="303:36" pos:end="303:37">&gt;&gt;</operator> <literal type="number" pos:start="303:39" pos:end="303:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="303:42" pos:end="303:67">// 16x write speed current</comment>

                <expr_stmt pos:start="305:17" pos:end="305:42"><expr pos:start="305:17" pos:end="305:41"><name pos:start="305:17" pos:end="305:21"><name pos:start="305:17" pos:end="305:17">p</name><index pos:start="305:18" pos:end="305:21">[<expr pos:start="305:19" pos:end="305:20"><literal type="number" pos:start="305:19" pos:end="305:20">21</literal></expr>]</index></name> <operator pos:start="305:23" pos:end="305:23">=</operator> <operator pos:start="305:25" pos:end="305:25">(</operator><literal type="number" pos:start="305:26" pos:end="305:27">16</literal> <operator pos:start="305:29" pos:end="305:29">*</operator> <literal type="number" pos:start="305:31" pos:end="305:33">176</literal><operator pos:start="305:34" pos:end="305:34">)</operator> <operator pos:start="305:36" pos:end="305:36">&amp;</operator> <literal type="number" pos:start="305:38" pos:end="305:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:24"><expr pos:start="307:17" pos:end="307:23"><name pos:start="307:17" pos:end="307:17">p</name> <operator pos:start="307:19" pos:end="307:20">+=</operator> <literal type="number" pos:start="307:22" pos:end="307:23">21</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:36"><expr pos:start="311:13" pos:end="311:35"><name pos:start="311:13" pos:end="311:22"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:22">buf_len</name></name> <operator pos:start="311:24" pos:end="311:24">=</operator> <name pos:start="311:26" pos:end="311:26">p</name> <operator pos:start="311:28" pos:end="311:28">-</operator> <name pos:start="311:30" pos:end="311:35"><name pos:start="311:30" pos:end="311:30">s</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:35">buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:39"><expr pos:start="313:13" pos:end="313:38"><name pos:start="313:13" pos:end="313:21"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:18">buf</name><index pos:start="313:19" pos:end="313:21">[<expr pos:start="313:20" pos:end="313:20"><literal type="number" pos:start="313:20" pos:end="313:20">0</literal></expr>]</index></name> <operator pos:start="313:23" pos:end="313:23">=</operator> <name pos:start="313:25" pos:end="313:34"><name pos:start="313:25" pos:end="313:25">s</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:34">buf_len</name></name> <operator pos:start="313:36" pos:end="313:36">-</operator> <literal type="number" pos:start="313:38" pos:end="313:38">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="315:13" pos:end="317:33"><if pos:start="315:13" pos:end="317:33">if <condition pos:start="315:16" pos:end="315:33">(<expr pos:start="315:17" pos:end="315:32"><name pos:start="315:17" pos:end="315:26"><name pos:start="315:17" pos:end="315:17">s</name><operator pos:start="315:18" pos:end="315:19">-&gt;</operator><name pos:start="315:20" pos:end="315:26">buf_len</name></name> <operator pos:start="315:28" pos:end="315:28">&gt;</operator> <name pos:start="315:30" pos:end="315:32">len</name></expr>)</condition><block type="pseudo" pos:start="317:17" pos:end="317:33"><block_content pos:start="317:17" pos:end="317:33">

                <expr_stmt pos:start="317:17" pos:end="317:33"><expr pos:start="317:17" pos:end="317:32"><name pos:start="317:17" pos:end="317:26"><name pos:start="317:17" pos:end="317:17">s</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:26">buf_len</name></name> <operator pos:start="317:28" pos:end="317:28">=</operator> <name pos:start="317:30" pos:end="317:32">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <case pos:start="323:5" pos:end="323:14">case <expr pos:start="323:10" pos:end="323:13"><literal type="number" pos:start="323:10" pos:end="323:13">0x1b</literal></expr>:</case>

        <expr_stmt pos:start="325:9" pos:end="325:37"><expr pos:start="325:9" pos:end="325:36"><call pos:start="325:9" pos:end="325:36"><name pos:start="325:9" pos:end="325:15">DPRINTF</name><argument_list pos:start="325:16" pos:end="325:36">(<argument pos:start="325:17" pos:end="325:35"><expr pos:start="325:17" pos:end="325:35"><literal type="string" pos:start="325:17" pos:end="325:35">"Start Stop Unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="327:9" pos:end="327:14">break;</break>

    <case pos:start="329:5" pos:end="329:14">case <expr pos:start="329:10" pos:end="329:13"><literal type="number" pos:start="329:10" pos:end="329:13">0x1e</literal></expr>:</case>

        <expr_stmt pos:start="331:9" pos:end="331:77"><expr pos:start="331:9" pos:end="331:76"><call pos:start="331:9" pos:end="331:76"><name pos:start="331:9" pos:end="331:15">DPRINTF</name><argument_list pos:start="331:16" pos:end="331:76">(<argument pos:start="331:17" pos:end="331:63"><expr pos:start="331:17" pos:end="331:63"><literal type="string" pos:start="331:17" pos:end="331:63">"Prevent Allow Medium Removal (prevent = %d)\n"</literal></expr></argument>, <argument pos:start="331:66" pos:end="331:75"><expr pos:start="331:66" pos:end="331:75"><name pos:start="331:66" pos:end="331:71"><name pos:start="331:66" pos:end="331:68">buf</name><index pos:start="331:69" pos:end="331:71">[<expr pos:start="331:70" pos:end="331:70"><literal type="number" pos:start="331:70" pos:end="331:70">4</literal></expr>]</index></name> <operator pos:start="331:73" pos:end="331:73">&amp;</operator> <literal type="number" pos:start="331:75" pos:end="331:75">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:45"><expr pos:start="333:9" pos:end="333:44"><call pos:start="333:9" pos:end="333:44"><name pos:start="333:9" pos:end="333:23">bdrv_set_locked</name><argument_list pos:start="333:24" pos:end="333:44">(<argument pos:start="333:25" pos:end="333:31"><expr pos:start="333:25" pos:end="333:31"><name pos:start="333:25" pos:end="333:31"><name pos:start="333:25" pos:end="333:25">s</name><operator pos:start="333:26" pos:end="333:27">-&gt;</operator><name pos:start="333:28" pos:end="333:31">bdrv</name></name></expr></argument>, <argument pos:start="333:34" pos:end="333:43"><expr pos:start="333:34" pos:end="333:43"><name pos:start="333:34" pos:end="333:39"><name pos:start="333:34" pos:end="333:36">buf</name><index pos:start="333:37" pos:end="333:39">[<expr pos:start="333:38" pos:end="333:38"><literal type="number" pos:start="333:38" pos:end="333:38">4</literal></expr>]</index></name> <operator pos:start="333:41" pos:end="333:41">&amp;</operator> <literal type="number" pos:start="333:43" pos:end="333:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="335:9" pos:end="335:14">break;</break>

    <case pos:start="337:5" pos:end="337:14">case <expr pos:start="337:10" pos:end="337:13"><literal type="number" pos:start="337:10" pos:end="337:13">0x25</literal></expr>:</case>

	<expr_stmt pos:start="339:9" pos:end="339:35"><expr pos:start="339:9" pos:end="339:34"><call pos:start="339:9" pos:end="339:34"><name pos:start="339:9" pos:end="339:15">DPRINTF</name><argument_list pos:start="339:16" pos:end="339:34">(<argument pos:start="339:17" pos:end="339:33"><expr pos:start="339:17" pos:end="339:33"><literal type="string" pos:start="339:17" pos:end="339:33">"Read Capacity\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="341:9" pos:end="341:61">/* The normal LEN field for this command is zero.  */</comment>

	<expr_stmt pos:start="343:9" pos:end="343:29"><expr pos:start="343:9" pos:end="343:28"><call pos:start="343:9" pos:end="343:28"><name pos:start="343:9" pos:end="343:14">memset</name><argument_list pos:start="343:15" pos:end="343:28">(<argument pos:start="343:16" pos:end="343:21"><expr pos:start="343:16" pos:end="343:21"><name pos:start="343:16" pos:end="343:21"><name pos:start="343:16" pos:end="343:16">s</name><operator pos:start="343:17" pos:end="343:18">-&gt;</operator><name pos:start="343:19" pos:end="343:21">buf</name></name></expr></argument>, <argument pos:start="343:24" pos:end="343:24"><expr pos:start="343:24" pos:end="343:24"><literal type="number" pos:start="343:24" pos:end="343:24">0</literal></expr></argument>, <argument pos:start="343:27" pos:end="343:27"><expr pos:start="343:27" pos:end="343:27"><literal type="number" pos:start="343:27" pos:end="343:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="345:9" pos:end="345:48"><expr pos:start="345:9" pos:end="345:47"><call pos:start="345:9" pos:end="345:47"><name pos:start="345:9" pos:end="345:25">bdrv_get_geometry</name><argument_list pos:start="345:26" pos:end="345:47">(<argument pos:start="345:27" pos:end="345:33"><expr pos:start="345:27" pos:end="345:33"><name pos:start="345:27" pos:end="345:33"><name pos:start="345:27" pos:end="345:27">s</name><operator pos:start="345:28" pos:end="345:29">-&gt;</operator><name pos:start="345:30" pos:end="345:33">bdrv</name></name></expr></argument>, <argument pos:start="345:36" pos:end="345:46"><expr pos:start="345:36" pos:end="345:46"><operator pos:start="345:36" pos:end="345:36">&amp;</operator><name pos:start="345:37" pos:end="345:46">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="347:9" pos:end="347:46"><expr pos:start="347:9" pos:end="347:45"><name pos:start="347:9" pos:end="347:17"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:14">buf</name><index pos:start="347:15" pos:end="347:17">[<expr pos:start="347:16" pos:end="347:16"><literal type="number" pos:start="347:16" pos:end="347:16">0</literal></expr>]</index></name> <operator pos:start="347:19" pos:end="347:19">=</operator> <operator pos:start="347:21" pos:end="347:21">(</operator><name pos:start="347:22" pos:end="347:31">nb_sectors</name> <operator pos:start="347:33" pos:end="347:34">&gt;&gt;</operator> <literal type="number" pos:start="347:36" pos:end="347:37">24</literal><operator pos:start="347:38" pos:end="347:38">)</operator> <operator pos:start="347:40" pos:end="347:40">&amp;</operator> <literal type="number" pos:start="347:42" pos:end="347:45">0xff</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="349:9" pos:end="349:46"><expr pos:start="349:9" pos:end="349:45"><name pos:start="349:9" pos:end="349:17"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:14">buf</name><index pos:start="349:15" pos:end="349:17">[<expr pos:start="349:16" pos:end="349:16"><literal type="number" pos:start="349:16" pos:end="349:16">1</literal></expr>]</index></name> <operator pos:start="349:19" pos:end="349:19">=</operator> <operator pos:start="349:21" pos:end="349:21">(</operator><name pos:start="349:22" pos:end="349:31">nb_sectors</name> <operator pos:start="349:33" pos:end="349:34">&gt;&gt;</operator> <literal type="number" pos:start="349:36" pos:end="349:37">16</literal><operator pos:start="349:38" pos:end="349:38">)</operator> <operator pos:start="349:40" pos:end="349:40">&amp;</operator> <literal type="number" pos:start="349:42" pos:end="349:45">0xff</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="351:9" pos:end="351:45"><expr pos:start="351:9" pos:end="351:44"><name pos:start="351:9" pos:end="351:17"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:14">buf</name><index pos:start="351:15" pos:end="351:17">[<expr pos:start="351:16" pos:end="351:16"><literal type="number" pos:start="351:16" pos:end="351:16">2</literal></expr>]</index></name> <operator pos:start="351:19" pos:end="351:19">=</operator> <operator pos:start="351:21" pos:end="351:21">(</operator><name pos:start="351:22" pos:end="351:31">nb_sectors</name> <operator pos:start="351:33" pos:end="351:34">&gt;&gt;</operator> <literal type="number" pos:start="351:36" pos:end="351:36">8</literal><operator pos:start="351:37" pos:end="351:37">)</operator> <operator pos:start="351:39" pos:end="351:39">&amp;</operator> <literal type="number" pos:start="351:41" pos:end="351:44">0xff</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="353:9" pos:end="353:38"><expr pos:start="353:9" pos:end="353:37"><name pos:start="353:9" pos:end="353:17"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:14">buf</name><index pos:start="353:15" pos:end="353:17">[<expr pos:start="353:16" pos:end="353:16"><literal type="number" pos:start="353:16" pos:end="353:16">3</literal></expr>]</index></name> <operator pos:start="353:19" pos:end="353:19">=</operator> <name pos:start="353:21" pos:end="353:30">nb_sectors</name> <operator pos:start="353:32" pos:end="353:32">&amp;</operator> <literal type="number" pos:start="353:34" pos:end="353:37">0xff</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="355:9" pos:end="355:22"><expr pos:start="355:9" pos:end="355:21"><name pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:14">buf</name><index pos:start="355:15" pos:end="355:17">[<expr pos:start="355:16" pos:end="355:16"><literal type="number" pos:start="355:16" pos:end="355:16">4</literal></expr>]</index></name> <operator pos:start="355:19" pos:end="355:19">=</operator> <literal type="number" pos:start="355:21" pos:end="355:21">0</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="357:9" pos:end="357:22"><expr pos:start="357:9" pos:end="357:21"><name pos:start="357:9" pos:end="357:17"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:14">buf</name><index pos:start="357:15" pos:end="357:17">[<expr pos:start="357:16" pos:end="357:16"><literal type="number" pos:start="357:16" pos:end="357:16">5</literal></expr>]</index></name> <operator pos:start="357:19" pos:end="357:19">=</operator> <literal type="number" pos:start="357:21" pos:end="357:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:40"><expr pos:start="359:9" pos:end="359:39"><name pos:start="359:9" pos:end="359:17"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:14">buf</name><index pos:start="359:15" pos:end="359:17">[<expr pos:start="359:16" pos:end="359:16"><literal type="number" pos:start="359:16" pos:end="359:16">6</literal></expr>]</index></name> <operator pos:start="359:19" pos:end="359:19">=</operator> <name pos:start="359:21" pos:end="359:35"><name pos:start="359:21" pos:end="359:21">s</name><operator pos:start="359:22" pos:end="359:23">-&gt;</operator><name pos:start="359:24" pos:end="359:35">cluster_size</name></name> <operator pos:start="359:37" pos:end="359:37">*</operator> <literal type="number" pos:start="359:39" pos:end="359:39">2</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="361:9" pos:end="361:22"><expr pos:start="361:9" pos:end="361:21"><name pos:start="361:9" pos:end="361:17"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:14">buf</name><index pos:start="361:15" pos:end="361:17">[<expr pos:start="361:16" pos:end="361:16"><literal type="number" pos:start="361:16" pos:end="361:16">7</literal></expr>]</index></name> <operator pos:start="361:19" pos:end="361:19">=</operator> <literal type="number" pos:start="361:21" pos:end="361:21">0</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="363:9" pos:end="363:23"><expr pos:start="363:9" pos:end="363:22"><name pos:start="363:9" pos:end="363:18"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:18">buf_len</name></name> <operator pos:start="363:20" pos:end="363:20">=</operator> <literal type="number" pos:start="363:22" pos:end="363:22">8</literal></expr>;</expr_stmt>

	<break pos:start="365:9" pos:end="365:14">break;</break>

    <case pos:start="367:5" pos:end="367:14">case <expr pos:start="367:10" pos:end="367:13"><literal type="number" pos:start="367:10" pos:end="367:13">0x08</literal></expr>:</case>

    <case pos:start="369:5" pos:end="369:14">case <expr pos:start="369:10" pos:end="369:13"><literal type="number" pos:start="369:10" pos:end="369:13">0x28</literal></expr>:</case>

        <expr_stmt pos:start="371:9" pos:end="371:58"><expr pos:start="371:9" pos:end="371:57"><call pos:start="371:9" pos:end="371:57"><name pos:start="371:9" pos:end="371:15">DPRINTF</name><argument_list pos:start="371:16" pos:end="371:57">(<argument pos:start="371:17" pos:end="371:46"><expr pos:start="371:17" pos:end="371:46"><literal type="string" pos:start="371:17" pos:end="371:46">"Read (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="371:49" pos:end="371:51"><expr pos:start="371:49" pos:end="371:51"><name pos:start="371:49" pos:end="371:51">lba</name></expr></argument>, <argument pos:start="371:54" pos:end="371:56"><expr pos:start="371:54" pos:end="371:56"><name pos:start="371:54" pos:end="371:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:42"><expr pos:start="373:9" pos:end="373:41"><name pos:start="373:9" pos:end="373:17"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:17">sector</name></name> <operator pos:start="373:19" pos:end="373:19">=</operator> <name pos:start="373:21" pos:end="373:23">lba</name> <operator pos:start="373:25" pos:end="373:25">*</operator> <name pos:start="373:27" pos:end="373:41"><name pos:start="373:27" pos:end="373:27">s</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:48"><expr pos:start="375:9" pos:end="375:47"><name pos:start="375:9" pos:end="375:23"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:23">sector_count</name></name> <operator pos:start="375:25" pos:end="375:25">=</operator> <name pos:start="375:27" pos:end="375:29">len</name> <operator pos:start="375:31" pos:end="375:31">*</operator> <name pos:start="375:33" pos:end="375:47"><name pos:start="375:33" pos:end="375:33">s</name><operator pos:start="375:34" pos:end="375:35">-&gt;</operator><name pos:start="375:36" pos:end="375:47">cluster_size</name></name></expr>;</expr_stmt>

        <break pos:start="377:9" pos:end="377:14">break;</break>

    <case pos:start="379:5" pos:end="379:14">case <expr pos:start="379:10" pos:end="379:13"><literal type="number" pos:start="379:10" pos:end="379:13">0x0a</literal></expr>:</case>

    <case pos:start="381:5" pos:end="381:14">case <expr pos:start="381:10" pos:end="381:13"><literal type="number" pos:start="381:10" pos:end="381:13">0x2a</literal></expr>:</case>

        <expr_stmt pos:start="383:9" pos:end="383:59"><expr pos:start="383:9" pos:end="383:58"><call pos:start="383:9" pos:end="383:58"><name pos:start="383:9" pos:end="383:15">DPRINTF</name><argument_list pos:start="383:16" pos:end="383:58">(<argument pos:start="383:17" pos:end="383:47"><expr pos:start="383:17" pos:end="383:47"><literal type="string" pos:start="383:17" pos:end="383:47">"Write (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="383:50" pos:end="383:52"><expr pos:start="383:50" pos:end="383:52"><name pos:start="383:50" pos:end="383:52">lba</name></expr></argument>, <argument pos:start="383:55" pos:end="383:57"><expr pos:start="383:55" pos:end="383:57"><name pos:start="383:55" pos:end="383:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:42"><expr pos:start="385:9" pos:end="385:41"><name pos:start="385:9" pos:end="385:17"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:17">sector</name></name> <operator pos:start="385:19" pos:end="385:19">=</operator> <name pos:start="385:21" pos:end="385:23">lba</name> <operator pos:start="385:25" pos:end="385:25">*</operator> <name pos:start="385:27" pos:end="385:41"><name pos:start="385:27" pos:end="385:27">s</name><operator pos:start="385:28" pos:end="385:29">-&gt;</operator><name pos:start="385:30" pos:end="385:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:48"><expr pos:start="387:9" pos:end="387:47"><name pos:start="387:9" pos:end="387:23"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:23">sector_count</name></name> <operator pos:start="387:25" pos:end="387:25">=</operator> <name pos:start="387:27" pos:end="387:29">len</name> <operator pos:start="387:31" pos:end="387:31">*</operator> <name pos:start="387:33" pos:end="387:47"><name pos:start="387:33" pos:end="387:33">s</name><operator pos:start="387:34" pos:end="387:35">-&gt;</operator><name pos:start="387:36" pos:end="387:47">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:21"><expr pos:start="389:9" pos:end="389:20"><name pos:start="389:9" pos:end="389:16">is_write</name> <operator pos:start="389:18" pos:end="389:18">=</operator> <literal type="number" pos:start="389:20" pos:end="389:20">1</literal></expr>;</expr_stmt>

        <break pos:start="391:9" pos:end="391:14">break;</break>

    <case pos:start="393:5" pos:end="393:14">case <expr pos:start="393:10" pos:end="393:13"><literal type="number" pos:start="393:10" pos:end="393:13">0x35</literal></expr>:</case>

        <expr_stmt pos:start="395:9" pos:end="395:70"><expr pos:start="395:9" pos:end="395:69"><call pos:start="395:9" pos:end="395:69"><name pos:start="395:9" pos:end="395:15">DPRINTF</name><argument_list pos:start="395:16" pos:end="395:69">(<argument pos:start="395:17" pos:end="395:58"><expr pos:start="395:17" pos:end="395:58"><literal type="string" pos:start="395:17" pos:end="395:58">"Syncronise cache (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="395:61" pos:end="395:63"><expr pos:start="395:61" pos:end="395:63"><name pos:start="395:61" pos:end="395:63">lba</name></expr></argument>, <argument pos:start="395:66" pos:end="395:68"><expr pos:start="395:66" pos:end="395:68"><name pos:start="395:66" pos:end="395:68">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:28"><expr pos:start="397:9" pos:end="397:27"><call pos:start="397:9" pos:end="397:27"><name pos:start="397:9" pos:end="397:18">bdrv_flush</name><argument_list pos:start="397:19" pos:end="397:27">(<argument pos:start="397:20" pos:end="397:26"><expr pos:start="397:20" pos:end="397:26"><name pos:start="397:20" pos:end="397:26"><name pos:start="397:20" pos:end="397:20">s</name><operator pos:start="397:21" pos:end="397:22">-&gt;</operator><name pos:start="397:23" pos:end="397:26">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="399:9" pos:end="399:14">break;</break>

    <case pos:start="401:5" pos:end="401:14">case <expr pos:start="401:10" pos:end="401:13"><literal type="number" pos:start="401:10" pos:end="401:13">0x43</literal></expr>:</case>

        <block pos:start="403:9" pos:end="473:9">{<block_content pos:start="405:13" pos:end="471:22">

            <decl_stmt pos:start="405:13" pos:end="405:49"><decl pos:start="405:13" pos:end="405:27"><type pos:start="405:13" pos:end="405:15"><name pos:start="405:13" pos:end="405:15">int</name></type> <name pos:start="405:17" pos:end="405:27">start_track</name></decl>, <decl pos:start="405:30" pos:end="405:35"><type ref="prev" pos:start="405:13" pos:end="405:15"/><name pos:start="405:30" pos:end="405:35">format</name></decl>, <decl pos:start="405:38" pos:end="405:40"><type ref="prev" pos:start="405:13" pos:end="405:15"/><name pos:start="405:38" pos:end="405:40">msf</name></decl>, <decl pos:start="405:43" pos:end="405:48"><type ref="prev" pos:start="405:13" pos:end="405:15"/><name pos:start="405:43" pos:end="405:48">toclen</name></decl>;</decl_stmt>



            <expr_stmt pos:start="409:13" pos:end="409:29"><expr pos:start="409:13" pos:end="409:28"><name pos:start="409:13" pos:end="409:15">msf</name> <operator pos:start="409:17" pos:end="409:17">=</operator> <name pos:start="409:19" pos:end="409:24"><name pos:start="409:19" pos:end="409:21">buf</name><index pos:start="409:22" pos:end="409:24">[<expr pos:start="409:23" pos:end="409:23"><literal type="number" pos:start="409:23" pos:end="409:23">1</literal></expr>]</index></name> <operator pos:start="409:26" pos:end="409:26">&amp;</operator> <literal type="number" pos:start="409:28" pos:end="409:28">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:34"><expr pos:start="411:13" pos:end="411:33"><name pos:start="411:13" pos:end="411:18">format</name> <operator pos:start="411:20" pos:end="411:20">=</operator> <name pos:start="411:22" pos:end="411:27"><name pos:start="411:22" pos:end="411:24">buf</name><index pos:start="411:25" pos:end="411:27">[<expr pos:start="411:26" pos:end="411:26"><literal type="number" pos:start="411:26" pos:end="411:26">2</literal></expr>]</index></name> <operator pos:start="411:29" pos:end="411:29">&amp;</operator> <literal type="number" pos:start="411:31" pos:end="411:33">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:33"><expr pos:start="413:13" pos:end="413:32"><name pos:start="413:13" pos:end="413:23">start_track</name> <operator pos:start="413:25" pos:end="413:25">=</operator> <name pos:start="413:27" pos:end="413:32"><name pos:start="413:27" pos:end="413:29">buf</name><index pos:start="413:30" pos:end="413:32">[<expr pos:start="413:31" pos:end="413:31"><literal type="number" pos:start="413:31" pos:end="413:31">6</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:52"><expr pos:start="415:13" pos:end="415:51"><call pos:start="415:13" pos:end="415:51"><name pos:start="415:13" pos:end="415:29">bdrv_get_geometry</name><argument_list pos:start="415:30" pos:end="415:51">(<argument pos:start="415:31" pos:end="415:37"><expr pos:start="415:31" pos:end="415:37"><name pos:start="415:31" pos:end="415:37"><name pos:start="415:31" pos:end="415:31">s</name><operator pos:start="415:32" pos:end="415:33">-&gt;</operator><name pos:start="415:34" pos:end="415:37">bdrv</name></name></expr></argument>, <argument pos:start="415:40" pos:end="415:50"><expr pos:start="415:40" pos:end="415:50"><operator pos:start="415:40" pos:end="415:40">&amp;</operator><name pos:start="415:41" pos:end="415:50">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:93"><expr pos:start="417:13" pos:end="417:92"><call pos:start="417:13" pos:end="417:92"><name pos:start="417:13" pos:end="417:19">DPRINTF</name><argument_list pos:start="417:20" pos:end="417:92">(<argument pos:start="417:21" pos:end="417:60"><expr pos:start="417:21" pos:end="417:60"><literal type="string" pos:start="417:21" pos:end="417:60">"Read TOC (track %d format %d msf %d)\n"</literal></expr></argument>, <argument pos:start="417:63" pos:end="417:73"><expr pos:start="417:63" pos:end="417:73"><name pos:start="417:63" pos:end="417:73">start_track</name></expr></argument>, <argument pos:start="417:76" pos:end="417:81"><expr pos:start="417:76" pos:end="417:81"><name pos:start="417:76" pos:end="417:81">format</name></expr></argument>, <argument pos:start="417:84" pos:end="417:91"><expr pos:start="417:84" pos:end="417:91"><name pos:start="417:84" pos:end="417:86">msf</name> <operator pos:start="417:88" pos:end="417:89">&gt;&gt;</operator> <literal type="number" pos:start="417:91" pos:end="417:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="419:13" pos:end="453:13">switch<condition pos:start="419:19" pos:end="419:26">(<expr pos:start="419:20" pos:end="419:25"><name pos:start="419:20" pos:end="419:25">format</name></expr>)</condition> <block pos:start="419:28" pos:end="453:13">{<block_content pos:start="421:13" pos:end="451:31">

            <case pos:start="421:13" pos:end="421:19">case <expr pos:start="421:18" pos:end="421:18"><literal type="number" pos:start="421:18" pos:end="421:18">0</literal></expr>:</case>

                <expr_stmt pos:start="423:17" pos:end="423:78"><expr pos:start="423:17" pos:end="423:77"><name pos:start="423:17" pos:end="423:22">toclen</name> <operator pos:start="423:24" pos:end="423:24">=</operator> <call pos:start="423:26" pos:end="423:77"><name pos:start="423:26" pos:end="423:39">cdrom_read_toc</name><argument_list pos:start="423:40" pos:end="423:77">(<argument pos:start="423:41" pos:end="423:50"><expr pos:start="423:41" pos:end="423:50"><name pos:start="423:41" pos:end="423:50">nb_sectors</name></expr></argument>, <argument pos:start="423:53" pos:end="423:58"><expr pos:start="423:53" pos:end="423:58"><name pos:start="423:53" pos:end="423:58"><name pos:start="423:53" pos:end="423:53">s</name><operator pos:start="423:54" pos:end="423:55">-&gt;</operator><name pos:start="423:56" pos:end="423:58">buf</name></name></expr></argument>, <argument pos:start="423:61" pos:end="423:63"><expr pos:start="423:61" pos:end="423:63"><name pos:start="423:61" pos:end="423:63">msf</name></expr></argument>, <argument pos:start="423:66" pos:end="423:76"><expr pos:start="423:66" pos:end="423:76"><name pos:start="423:66" pos:end="423:76">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="425:17" pos:end="425:22">break;</break>

            <case pos:start="427:13" pos:end="427:19">case <expr pos:start="427:18" pos:end="427:18"><literal type="number" pos:start="427:18" pos:end="427:18">1</literal></expr>:</case>

                <comment type="block" pos:start="429:17" pos:end="429:67">/* multi session : only a single session defined */</comment>

                <expr_stmt pos:start="431:17" pos:end="431:28"><expr pos:start="431:17" pos:end="431:27"><name pos:start="431:17" pos:end="431:22">toclen</name> <operator pos:start="431:24" pos:end="431:24">=</operator> <literal type="number" pos:start="431:26" pos:end="431:27">12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="433:17" pos:end="433:38"><expr pos:start="433:17" pos:end="433:37"><call pos:start="433:17" pos:end="433:37"><name pos:start="433:17" pos:end="433:22">memset</name><argument_list pos:start="433:23" pos:end="433:37">(<argument pos:start="433:24" pos:end="433:29"><expr pos:start="433:24" pos:end="433:29"><name pos:start="433:24" pos:end="433:29"><name pos:start="433:24" pos:end="433:24">s</name><operator pos:start="433:25" pos:end="433:26">-&gt;</operator><name pos:start="433:27" pos:end="433:29">buf</name></name></expr></argument>, <argument pos:start="433:32" pos:end="433:32"><expr pos:start="433:32" pos:end="433:32"><literal type="number" pos:start="433:32" pos:end="433:32">0</literal></expr></argument>, <argument pos:start="433:35" pos:end="433:36"><expr pos:start="433:35" pos:end="433:36"><literal type="number" pos:start="433:35" pos:end="433:36">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="435:17" pos:end="435:33"><expr pos:start="435:17" pos:end="435:32"><name pos:start="435:17" pos:end="435:25"><name pos:start="435:17" pos:end="435:17">s</name><operator pos:start="435:18" pos:end="435:19">-&gt;</operator><name pos:start="435:20" pos:end="435:22">buf</name><index pos:start="435:23" pos:end="435:25">[<expr pos:start="435:24" pos:end="435:24"><literal type="number" pos:start="435:24" pos:end="435:24">1</literal></expr>]</index></name> <operator pos:start="435:27" pos:end="435:27">=</operator> <literal type="number" pos:start="435:29" pos:end="435:32">0x0a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="437:17" pos:end="437:33"><expr pos:start="437:17" pos:end="437:32"><name pos:start="437:17" pos:end="437:25"><name pos:start="437:17" pos:end="437:17">s</name><operator pos:start="437:18" pos:end="437:19">-&gt;</operator><name pos:start="437:20" pos:end="437:22">buf</name><index pos:start="437:23" pos:end="437:25">[<expr pos:start="437:24" pos:end="437:24"><literal type="number" pos:start="437:24" pos:end="437:24">2</literal></expr>]</index></name> <operator pos:start="437:27" pos:end="437:27">=</operator> <literal type="number" pos:start="437:29" pos:end="437:32">0x01</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:33"><expr pos:start="439:17" pos:end="439:32"><name pos:start="439:17" pos:end="439:25"><name pos:start="439:17" pos:end="439:17">s</name><operator pos:start="439:18" pos:end="439:19">-&gt;</operator><name pos:start="439:20" pos:end="439:22">buf</name><index pos:start="439:23" pos:end="439:25">[<expr pos:start="439:24" pos:end="439:24"><literal type="number" pos:start="439:24" pos:end="439:24">3</literal></expr>]</index></name> <operator pos:start="439:27" pos:end="439:27">=</operator> <literal type="number" pos:start="439:29" pos:end="439:32">0x01</literal></expr>;</expr_stmt>

                <break pos:start="441:17" pos:end="441:22">break;</break>

            <case pos:start="443:13" pos:end="443:19">case <expr pos:start="443:18" pos:end="443:18"><literal type="number" pos:start="443:18" pos:end="443:18">2</literal></expr>:</case>

                <expr_stmt pos:start="445:17" pos:end="445:82"><expr pos:start="445:17" pos:end="445:81"><name pos:start="445:17" pos:end="445:22">toclen</name> <operator pos:start="445:24" pos:end="445:24">=</operator> <call pos:start="445:26" pos:end="445:81"><name pos:start="445:26" pos:end="445:43">cdrom_read_toc_raw</name><argument_list pos:start="445:44" pos:end="445:81">(<argument pos:start="445:45" pos:end="445:54"><expr pos:start="445:45" pos:end="445:54"><name pos:start="445:45" pos:end="445:54">nb_sectors</name></expr></argument>, <argument pos:start="445:57" pos:end="445:62"><expr pos:start="445:57" pos:end="445:62"><name pos:start="445:57" pos:end="445:62"><name pos:start="445:57" pos:end="445:57">s</name><operator pos:start="445:58" pos:end="445:59">-&gt;</operator><name pos:start="445:60" pos:end="445:62">buf</name></name></expr></argument>, <argument pos:start="445:65" pos:end="445:67"><expr pos:start="445:65" pos:end="445:67"><name pos:start="445:65" pos:end="445:67">msf</name></expr></argument>, <argument pos:start="445:70" pos:end="445:80"><expr pos:start="445:70" pos:end="445:80"><name pos:start="445:70" pos:end="445:80">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="447:17" pos:end="447:22">break;</break>

            <default pos:start="449:13" pos:end="449:20">default:</default>

                <goto pos:start="451:17" pos:end="451:31">goto <name pos:start="451:22" pos:end="451:30">error_cmd</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="455:13" pos:end="465:13"><if pos:start="455:13" pos:end="465:13">if <condition pos:start="455:16" pos:end="455:27">(<expr pos:start="455:17" pos:end="455:26"><name pos:start="455:17" pos:end="455:22">toclen</name> <operator pos:start="455:24" pos:end="455:24">&gt;</operator> <literal type="number" pos:start="455:26" pos:end="455:26">0</literal></expr>)</condition> <block pos:start="455:29" pos:end="465:13">{<block_content pos:start="457:17" pos:end="463:22">

                <if_stmt pos:start="457:17" pos:end="459:31"><if pos:start="457:17" pos:end="459:31">if <condition pos:start="457:20" pos:end="457:33">(<expr pos:start="457:21" pos:end="457:32"><name pos:start="457:21" pos:end="457:23">len</name> <operator pos:start="457:25" pos:end="457:25">&gt;</operator> <name pos:start="457:27" pos:end="457:32">toclen</name></expr>)</condition><block type="pseudo" pos:start="459:19" pos:end="459:31"><block_content pos:start="459:19" pos:end="459:31">

                  <expr_stmt pos:start="459:19" pos:end="459:31"><expr pos:start="459:19" pos:end="459:30"><name pos:start="459:19" pos:end="459:21">len</name> <operator pos:start="459:23" pos:end="459:23">=</operator> <name pos:start="459:25" pos:end="459:30">toclen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:33"><expr pos:start="461:17" pos:end="461:32"><name pos:start="461:17" pos:end="461:26"><name pos:start="461:17" pos:end="461:17">s</name><operator pos:start="461:18" pos:end="461:19">-&gt;</operator><name pos:start="461:20" pos:end="461:26">buf_len</name></name> <operator pos:start="461:28" pos:end="461:28">=</operator> <name pos:start="461:30" pos:end="461:32">len</name></expr>;</expr_stmt>

                <break pos:start="463:17" pos:end="463:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="467:9" pos:end="467:18"><name pos:start="467:9" pos:end="467:17">error_cmd</name>:</label>

            <expr_stmt pos:start="469:13" pos:end="469:40"><expr pos:start="469:13" pos:end="469:39"><call pos:start="469:13" pos:end="469:39"><name pos:start="469:13" pos:end="469:19">DPRINTF</name><argument_list pos:start="469:20" pos:end="469:39">(<argument pos:start="469:21" pos:end="469:38"><expr pos:start="469:21" pos:end="469:38"><literal type="string" pos:start="469:21" pos:end="469:38">"Read TOC error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="471:13" pos:end="471:22">goto <name pos:start="471:18" pos:end="471:21">fail</name>;</goto>

        </block_content>}</block>

    <case pos:start="475:5" pos:end="475:14">case <expr pos:start="475:10" pos:end="475:13"><literal type="number" pos:start="475:10" pos:end="475:13">0x46</literal></expr>:</case>

        <expr_stmt pos:start="477:9" pos:end="477:75"><expr pos:start="477:9" pos:end="477:74"><call pos:start="477:9" pos:end="477:74"><name pos:start="477:9" pos:end="477:15">DPRINTF</name><argument_list pos:start="477:16" pos:end="477:74">(<argument pos:start="477:17" pos:end="477:56"><expr pos:start="477:17" pos:end="477:56"><literal type="string" pos:start="477:17" pos:end="477:56">"Get Configuration (rt %d, maxlen %d)\n"</literal></expr></argument>, <argument pos:start="477:59" pos:end="477:68"><expr pos:start="477:59" pos:end="477:68"><name pos:start="477:59" pos:end="477:64"><name pos:start="477:59" pos:end="477:61">buf</name><index pos:start="477:62" pos:end="477:64">[<expr pos:start="477:63" pos:end="477:63"><literal type="number" pos:start="477:63" pos:end="477:63">1</literal></expr>]</index></name> <operator pos:start="477:66" pos:end="477:66">&amp;</operator> <literal type="number" pos:start="477:68" pos:end="477:68">3</literal></expr></argument>, <argument pos:start="477:71" pos:end="477:73"><expr pos:start="477:71" pos:end="477:73"><name pos:start="477:71" pos:end="477:73">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="479:9" pos:end="479:29"><expr pos:start="479:9" pos:end="479:28"><call pos:start="479:9" pos:end="479:28"><name pos:start="479:9" pos:end="479:14">memset</name><argument_list pos:start="479:15" pos:end="479:28">(<argument pos:start="479:16" pos:end="479:21"><expr pos:start="479:16" pos:end="479:21"><name pos:start="479:16" pos:end="479:21"><name pos:start="479:16" pos:end="479:16">s</name><operator pos:start="479:17" pos:end="479:18">-&gt;</operator><name pos:start="479:19" pos:end="479:21">buf</name></name></expr></argument>, <argument pos:start="479:24" pos:end="479:24"><expr pos:start="479:24" pos:end="479:24"><literal type="number" pos:start="479:24" pos:end="479:24">0</literal></expr></argument>, <argument pos:start="479:27" pos:end="479:27"><expr pos:start="479:27" pos:end="479:27"><literal type="number" pos:start="479:27" pos:end="479:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="481:9" pos:end="483:74">/* ??? This shoud probably return much more information.  For now

           just return the basic header indicating the CD-ROM profile.  */</comment>

        <expr_stmt pos:start="485:9" pos:end="485:22"><expr pos:start="485:9" pos:end="485:21"><name pos:start="485:9" pos:end="485:17"><name pos:start="485:9" pos:end="485:9">s</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:14">buf</name><index pos:start="485:15" pos:end="485:17">[<expr pos:start="485:16" pos:end="485:16"><literal type="number" pos:start="485:16" pos:end="485:16">7</literal></expr>]</index></name> <operator pos:start="485:19" pos:end="485:19">=</operator> <literal type="number" pos:start="485:21" pos:end="485:21">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="485:24" pos:end="485:32">// CD-ROM</comment>

        <expr_stmt pos:start="487:9" pos:end="487:23"><expr pos:start="487:9" pos:end="487:22"><name pos:start="487:9" pos:end="487:18"><name pos:start="487:9" pos:end="487:9">s</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:18">buf_len</name></name> <operator pos:start="487:20" pos:end="487:20">=</operator> <literal type="number" pos:start="487:22" pos:end="487:22">8</literal></expr>;</expr_stmt>

        <break pos:start="489:9" pos:end="489:14">break;</break>

    <case pos:start="491:5" pos:end="491:14">case <expr pos:start="491:10" pos:end="491:13"><literal type="number" pos:start="491:10" pos:end="491:13">0x56</literal></expr>:</case>

        <expr_stmt pos:start="493:9" pos:end="493:33"><expr pos:start="493:9" pos:end="493:32"><call pos:start="493:9" pos:end="493:32"><name pos:start="493:9" pos:end="493:15">DPRINTF</name><argument_list pos:start="493:16" pos:end="493:32">(<argument pos:start="493:17" pos:end="493:31"><expr pos:start="493:17" pos:end="493:31"><literal type="string" pos:start="493:17" pos:end="493:31">"Reserve(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="495:9" pos:end="497:22"><if pos:start="495:9" pos:end="497:22">if <condition pos:start="495:12" pos:end="495:23">(<expr pos:start="495:13" pos:end="495:22"><name pos:start="495:13" pos:end="495:18"><name pos:start="495:13" pos:end="495:15">buf</name><index pos:start="495:16" pos:end="495:18">[<expr pos:start="495:17" pos:end="495:17"><literal type="number" pos:start="495:17" pos:end="495:17">1</literal></expr>]</index></name> <operator pos:start="495:20" pos:end="495:20">&amp;</operator> <literal type="number" pos:start="495:22" pos:end="495:22">3</literal></expr>)</condition><block type="pseudo" pos:start="497:13" pos:end="497:22"><block_content pos:start="497:13" pos:end="497:22">

            <goto pos:start="497:13" pos:end="497:22">goto <name pos:start="497:18" pos:end="497:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="499:9" pos:end="499:14">break;</break>

    <case pos:start="501:5" pos:end="501:14">case <expr pos:start="501:10" pos:end="501:13"><literal type="number" pos:start="501:10" pos:end="501:13">0x57</literal></expr>:</case>

        <expr_stmt pos:start="503:9" pos:end="503:33"><expr pos:start="503:9" pos:end="503:32"><call pos:start="503:9" pos:end="503:32"><name pos:start="503:9" pos:end="503:15">DPRINTF</name><argument_list pos:start="503:16" pos:end="503:32">(<argument pos:start="503:17" pos:end="503:31"><expr pos:start="503:17" pos:end="503:31"><literal type="string" pos:start="503:17" pos:end="503:31">"Release(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="505:9" pos:end="507:22"><if pos:start="505:9" pos:end="507:22">if <condition pos:start="505:12" pos:end="505:23">(<expr pos:start="505:13" pos:end="505:22"><name pos:start="505:13" pos:end="505:18"><name pos:start="505:13" pos:end="505:15">buf</name><index pos:start="505:16" pos:end="505:18">[<expr pos:start="505:17" pos:end="505:17"><literal type="number" pos:start="505:17" pos:end="505:17">1</literal></expr>]</index></name> <operator pos:start="505:20" pos:end="505:20">&amp;</operator> <literal type="number" pos:start="505:22" pos:end="505:22">3</literal></expr>)</condition><block type="pseudo" pos:start="507:13" pos:end="507:22"><block_content pos:start="507:13" pos:end="507:22">

            <goto pos:start="507:13" pos:end="507:22">goto <name pos:start="507:18" pos:end="507:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="509:9" pos:end="509:14">break;</break>

    <case pos:start="511:5" pos:end="511:14">case <expr pos:start="511:10" pos:end="511:13"><literal type="number" pos:start="511:10" pos:end="511:13">0xa0</literal></expr>:</case>

        <expr_stmt pos:start="513:9" pos:end="513:47"><expr pos:start="513:9" pos:end="513:46"><call pos:start="513:9" pos:end="513:46"><name pos:start="513:9" pos:end="513:15">DPRINTF</name><argument_list pos:start="513:16" pos:end="513:46">(<argument pos:start="513:17" pos:end="513:40"><expr pos:start="513:17" pos:end="513:40"><literal type="string" pos:start="513:17" pos:end="513:40">"Report LUNs (len %d)\n"</literal></expr></argument>, <argument pos:start="513:43" pos:end="513:45"><expr pos:start="513:43" pos:end="513:45"><name pos:start="513:43" pos:end="513:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="515:9" pos:end="517:22"><if pos:start="515:9" pos:end="517:22">if <condition pos:start="515:12" pos:end="515:21">(<expr pos:start="515:13" pos:end="515:20"><name pos:start="515:13" pos:end="515:15">len</name> <operator pos:start="515:17" pos:end="515:17">&lt;</operator> <literal type="number" pos:start="515:19" pos:end="515:20">16</literal></expr>)</condition><block type="pseudo" pos:start="517:13" pos:end="517:22"><block_content pos:start="517:13" pos:end="517:22">

            <goto pos:start="517:13" pos:end="517:22">goto <name pos:start="517:18" pos:end="517:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:30"><expr pos:start="519:9" pos:end="519:29"><call pos:start="519:9" pos:end="519:29"><name pos:start="519:9" pos:end="519:14">memset</name><argument_list pos:start="519:15" pos:end="519:29">(<argument pos:start="519:16" pos:end="519:21"><expr pos:start="519:16" pos:end="519:21"><name pos:start="519:16" pos:end="519:21"><name pos:start="519:16" pos:end="519:16">s</name><operator pos:start="519:17" pos:end="519:18">-&gt;</operator><name pos:start="519:19" pos:end="519:21">buf</name></name></expr></argument>, <argument pos:start="519:24" pos:end="519:24"><expr pos:start="519:24" pos:end="519:24"><literal type="number" pos:start="519:24" pos:end="519:24">0</literal></expr></argument>, <argument pos:start="519:27" pos:end="519:28"><expr pos:start="519:27" pos:end="519:28"><literal type="number" pos:start="519:27" pos:end="519:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:22"><expr pos:start="521:9" pos:end="521:21"><name pos:start="521:9" pos:end="521:17"><name pos:start="521:9" pos:end="521:9">s</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:14">buf</name><index pos:start="521:15" pos:end="521:17">[<expr pos:start="521:16" pos:end="521:16"><literal type="number" pos:start="521:16" pos:end="521:16">3</literal></expr>]</index></name> <operator pos:start="521:19" pos:end="521:19">=</operator> <literal type="number" pos:start="521:21" pos:end="521:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="523:9" pos:end="523:24"><expr pos:start="523:9" pos:end="523:23"><name pos:start="523:9" pos:end="523:18"><name pos:start="523:9" pos:end="523:9">s</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:18">buf_len</name></name> <operator pos:start="523:20" pos:end="523:20">=</operator> <literal type="number" pos:start="523:22" pos:end="523:23">16</literal></expr>;</expr_stmt>

        <break pos:start="525:9" pos:end="525:14">break;</break>

    <default pos:start="527:5" pos:end="527:12">default:</default>

	<expr_stmt pos:start="529:9" pos:end="529:58"><expr pos:start="529:9" pos:end="529:57"><call pos:start="529:9" pos:end="529:57"><name pos:start="529:9" pos:end="529:15">DPRINTF</name><argument_list pos:start="529:16" pos:end="529:57">(<argument pos:start="529:17" pos:end="529:48"><expr pos:start="529:17" pos:end="529:48"><literal type="string" pos:start="529:17" pos:end="529:48">"Unknown SCSI command (%2.2x)\n"</literal></expr></argument>, <argument pos:start="529:51" pos:end="529:56"><expr pos:start="529:51" pos:end="529:56"><name pos:start="529:51" pos:end="529:56"><name pos:start="529:51" pos:end="529:53">buf</name><index pos:start="529:54" pos:end="529:56">[<expr pos:start="529:55" pos:end="529:55"><literal type="number" pos:start="529:55" pos:end="529:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="531:5" pos:end="531:9"><name pos:start="531:5" pos:end="531:8">fail</name>:</label>

        <expr_stmt pos:start="533:9" pos:end="533:56"><expr pos:start="533:9" pos:end="533:55"><call pos:start="533:9" pos:end="533:55"><name pos:start="533:9" pos:end="533:29">scsi_command_complete</name><argument_list pos:start="533:30" pos:end="533:55">(<argument pos:start="533:31" pos:end="533:31"><expr pos:start="533:31" pos:end="533:31"><name pos:start="533:31" pos:end="533:31">s</name></expr></argument>, <argument pos:start="533:34" pos:end="533:54"><expr pos:start="533:34" pos:end="533:54"><name pos:start="533:34" pos:end="533:54">SENSE_ILLEGAL_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="535:9" pos:end="535:17">return <expr pos:start="535:16" pos:end="535:16"><literal type="number" pos:start="535:16" pos:end="535:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="539:5" pos:end="543:5"><if pos:start="539:5" pos:end="543:5">if <condition pos:start="539:8" pos:end="539:48">(<expr pos:start="539:9" pos:end="539:47"><name pos:start="539:9" pos:end="539:23"><name pos:start="539:9" pos:end="539:9">s</name><operator pos:start="539:10" pos:end="539:11">-&gt;</operator><name pos:start="539:12" pos:end="539:23">sector_count</name></name> <operator pos:start="539:25" pos:end="539:26">==</operator> <literal type="number" pos:start="539:28" pos:end="539:28">0</literal> <operator pos:start="539:30" pos:end="539:31">&amp;&amp;</operator> <name pos:start="539:33" pos:end="539:42"><name pos:start="539:33" pos:end="539:33">s</name><operator pos:start="539:34" pos:end="539:35">-&gt;</operator><name pos:start="539:36" pos:end="539:42">buf_len</name></name> <operator pos:start="539:44" pos:end="539:45">==</operator> <literal type="number" pos:start="539:47" pos:end="539:47">0</literal></expr>)</condition> <block pos:start="539:50" pos:end="543:5">{<block_content pos:start="541:9" pos:end="541:49">

        <expr_stmt pos:start="541:9" pos:end="541:49"><expr pos:start="541:9" pos:end="541:48"><call pos:start="541:9" pos:end="541:48"><name pos:start="541:9" pos:end="541:29">scsi_command_complete</name><argument_list pos:start="541:30" pos:end="541:48">(<argument pos:start="541:31" pos:end="541:31"><expr pos:start="541:31" pos:end="541:31"><name pos:start="541:31" pos:end="541:31">s</name></expr></argument>, <argument pos:start="541:34" pos:end="541:47"><expr pos:start="541:34" pos:end="541:47"><name pos:start="541:34" pos:end="541:47">SENSE_NO_SENSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="545:5" pos:end="545:45"><expr pos:start="545:5" pos:end="545:44"><name pos:start="545:5" pos:end="545:7">len</name> <operator pos:start="545:9" pos:end="545:9">=</operator> <name pos:start="545:11" pos:end="545:25"><name pos:start="545:11" pos:end="545:11">s</name><operator pos:start="545:12" pos:end="545:13">-&gt;</operator><name pos:start="545:14" pos:end="545:25">sector_count</name></name> <operator pos:start="545:27" pos:end="545:27">*</operator> <literal type="number" pos:start="545:29" pos:end="545:33">512</literal> <operator pos:start="545:33" pos:end="545:33">+</operator> <name pos:start="545:35" pos:end="545:44"><name pos:start="545:35" pos:end="545:35">s</name><operator pos:start="545:36" pos:end="545:37">-&gt;</operator><name pos:start="545:38" pos:end="545:44">buf_len</name></name></expr>;</expr_stmt>

    <return pos:start="547:5" pos:end="547:33">return <expr pos:start="547:12" pos:end="547:32"><ternary pos:start="547:12" pos:end="547:32"><condition pos:start="547:12" pos:end="547:21"><expr pos:start="547:12" pos:end="547:19"><name pos:start="547:12" pos:end="547:19">is_write</name></expr> ?</condition><then pos:start="547:23" pos:end="547:26"> <expr pos:start="547:23" pos:end="547:26"><operator pos:start="547:23" pos:end="547:23">-</operator><name pos:start="547:24" pos:end="547:26">len</name></expr> </then><else pos:start="547:28" pos:end="547:32">: <expr pos:start="547:30" pos:end="547:32"><name pos:start="547:30" pos:end="547:32">len</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
