<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7803.c" pos:tabs="8"><function pos:start="1:1" pos:end="449:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">rtmp_open</name><parameter_list pos:start="1:21" pos:end="1:63">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">uri</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="449:1">{<block_content pos:start="5:5" pos:end="447:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">RTMPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">rt</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:14">proto</name><index pos:start="7:15" pos:end="7:17">[<expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">8</literal></expr>]</index></name></decl>, <decl pos:start="7:20" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:27">hostname</name><index pos:start="7:28" pos:end="7:32">[<expr pos:start="7:29" pos:end="7:31"><literal type="number" pos:start="7:29" pos:end="7:31">256</literal></expr>]</index></name></decl>, <decl pos:start="7:35" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:38">path</name><index pos:start="7:39" pos:end="7:44">[<expr pos:start="7:40" pos:end="7:43"><literal type="number" pos:start="7:40" pos:end="7:43">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:47" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:47" pos:end="7:55"><name pos:start="7:47" pos:end="7:50">auth</name><index pos:start="7:51" pos:end="7:55">[<expr pos:start="7:52" pos:end="7:54"><literal type="number" pos:start="7:52" pos:end="7:54">100</literal></expr>]</index></name></decl>, <decl pos:start="7:58" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:63">fname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">old_app</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:21">[<expr pos:start="11:17" pos:end="11:20"><literal type="number" pos:start="11:17" pos:end="11:20">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">AVDictionary</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">opts</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:23"><if pos:start="21:5" pos:end="23:23">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:10">rt</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:26">listen_timeout</name></name> <operator pos:start="21:28" pos:end="21:28">&gt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:23"><block_content pos:start="23:9" pos:end="23:23">

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">rt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:18">listen</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:6">rt</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">is_input</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">!</operator><operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:26">flags</name> <operator pos:start="27:28" pos:end="27:28">&amp;</operator> <name pos:start="27:30" pos:end="27:44">AVIO_FLAG_WRITE</name><operator pos:start="27:45" pos:end="27:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="35:50"><expr pos:start="31:5" pos:end="35:49"><call pos:start="31:5" pos:end="35:49"><name pos:start="31:5" pos:end="31:16">av_url_split</name><argument_list pos:start="31:17" pos:end="35:49">(<argument pos:start="31:18" pos:end="31:22"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:22">proto</name></expr></argument>, <argument pos:start="31:25" pos:end="31:37"><expr pos:start="31:25" pos:end="31:37"><sizeof pos:start="31:25" pos:end="31:37">sizeof<argument_list pos:start="31:31" pos:end="31:37">(<argument pos:start="31:32" pos:end="31:36"><expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:36">proto</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">auth</name></expr></argument>, <argument pos:start="31:46" pos:end="31:57"><expr pos:start="31:46" pos:end="31:57"><sizeof pos:start="31:46" pos:end="31:57">sizeof<argument_list pos:start="31:52" pos:end="31:57">(<argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><name pos:start="31:53" pos:end="31:56">auth</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:25"><expr pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:25">hostname</name></expr></argument>, <argument pos:start="33:28" pos:end="33:43"><expr pos:start="33:28" pos:end="33:43"><sizeof pos:start="33:28" pos:end="33:43">sizeof<argument_list pos:start="33:34" pos:end="33:43">(<argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">hostname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:46" pos:end="33:50"><expr pos:start="33:46" pos:end="33:50"><operator pos:start="33:46" pos:end="33:46">&amp;</operator><name pos:start="33:47" pos:end="33:50">port</name></expr></argument>,

                 <argument pos:start="35:18" pos:end="35:21"><expr pos:start="35:18" pos:end="35:21"><name pos:start="35:18" pos:end="35:21">path</name></expr></argument>, <argument pos:start="35:24" pos:end="35:35"><expr pos:start="35:24" pos:end="35:35"><sizeof pos:start="35:24" pos:end="35:35">sizeof<argument_list pos:start="35:30" pos:end="35:35">(<argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:38" pos:end="35:48"><expr pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:48">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="53:5"><if pos:start="39:5" pos:end="53:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">auth</name><index pos:start="39:13" pos:end="39:15">[<expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="39:18" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <decl_stmt pos:start="41:9" pos:end="41:38"><decl pos:start="41:9" pos:end="41:37"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">char</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:17">ptr</name> <init pos:start="41:19" pos:end="41:37">= <expr pos:start="41:21" pos:end="41:37"><call pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:26">strchr</name><argument_list pos:start="41:27" pos:end="41:37">(<argument pos:start="41:28" pos:end="41:31"><expr pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:31">auth</name></expr></argument>, <argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><literal type="char" pos:start="41:34" pos:end="41:36">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:16">(<expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">ptr</name></expr>)</condition> <block pos:start="43:18" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:68">

            <expr_stmt pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:16">ptr</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="char" pos:start="45:20" pos:end="45:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:65"><expr pos:start="47:13" pos:end="47:64"><call pos:start="47:13" pos:end="47:64"><name pos:start="47:13" pos:end="47:22">av_strlcpy</name><argument_list pos:start="47:23" pos:end="47:64">(<argument pos:start="47:24" pos:end="47:35"><expr pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:25">rt</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:35">username</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:41"><expr pos:start="47:38" pos:end="47:41"><name pos:start="47:38" pos:end="47:41">auth</name></expr></argument>, <argument pos:start="47:44" pos:end="47:63"><expr pos:start="47:44" pos:end="47:63"><sizeof pos:start="47:44" pos:end="47:63">sizeof<argument_list pos:start="47:50" pos:end="47:63">(<argument pos:start="47:51" pos:end="47:62"><expr pos:start="47:51" pos:end="47:62"><name pos:start="47:51" pos:end="47:62"><name pos:start="47:51" pos:end="47:52">rt</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:62">username</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:68"><expr pos:start="49:13" pos:end="49:67"><call pos:start="49:13" pos:end="49:67"><name pos:start="49:13" pos:end="49:22">av_strlcpy</name><argument_list pos:start="49:23" pos:end="49:67">(<argument pos:start="49:24" pos:end="49:35"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:25">rt</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:35">password</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:44"><expr pos:start="49:38" pos:end="49:44"><name pos:start="49:38" pos:end="49:40">ptr</name> <operator pos:start="49:42" pos:end="49:42">+</operator> <literal type="number" pos:start="49:44" pos:end="49:44">1</literal></expr></argument>, <argument pos:start="49:47" pos:end="49:66"><expr pos:start="49:47" pos:end="49:66"><sizeof pos:start="49:47" pos:end="49:66">sizeof<argument_list pos:start="49:53" pos:end="49:66">(<argument pos:start="49:54" pos:end="49:65"><expr pos:start="49:54" pos:end="49:65"><name pos:start="49:54" pos:end="49:65"><name pos:start="49:54" pos:end="49:55">rt</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:65">password</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:44">(<expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:10">rt</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:18">listen</name></name> <operator pos:start="57:20" pos:end="57:21">&amp;&amp;</operator> <call pos:start="57:23" pos:end="57:43"><name pos:start="57:23" pos:end="57:28">strcmp</name><argument_list pos:start="57:29" pos:end="57:43">(<argument pos:start="57:30" pos:end="57:34"><expr pos:start="57:30" pos:end="57:34"><name pos:start="57:30" pos:end="57:34">proto</name></expr></argument>, <argument pos:start="57:37" pos:end="57:42"><expr pos:start="57:37" pos:end="57:42"><literal type="string" pos:start="57:37" pos:end="57:42">"rtmp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:46" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:31">

        <expr_stmt pos:start="59:9" pos:end="61:22"><expr pos:start="59:9" pos:end="61:21"><call pos:start="59:9" pos:end="61:21"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="61:21">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">s</name></expr></argument>, <argument pos:start="59:19" pos:end="59:30"><expr pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:33" pos:end="59:68"><expr pos:start="59:33" pos:end="59:68"><literal type="string" pos:start="59:33" pos:end="59:68">"rtmp_listen not available for %s\n"</literal></expr></argument>,

               <argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">proto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:31">return <expr pos:start="63:16" pos:end="63:30"><call pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="123:5"><if pos:start="67:5" pos:end="79:5">if <condition pos:start="67:8" pos:end="67:60">(<expr pos:start="67:9" pos:end="67:59"><operator pos:start="67:9" pos:end="67:9">!</operator><call pos:start="67:10" pos:end="67:31"><name pos:start="67:10" pos:end="67:15">strcmp</name><argument_list pos:start="67:16" pos:end="67:31">(<argument pos:start="67:17" pos:end="67:21"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21">proto</name></expr></argument>, <argument pos:start="67:24" pos:end="67:30"><expr pos:start="67:24" pos:end="67:30"><literal type="string" pos:start="67:24" pos:end="67:30">"rtmpt"</literal></expr></argument>)</argument_list></call> <operator pos:start="67:33" pos:end="67:34">||</operator> <operator pos:start="67:36" pos:end="67:36">!</operator><call pos:start="67:37" pos:end="67:59"><name pos:start="67:37" pos:end="67:42">strcmp</name><argument_list pos:start="67:43" pos:end="67:59">(<argument pos:start="67:44" pos:end="67:48"><expr pos:start="67:44" pos:end="67:48"><name pos:start="67:44" pos:end="67:48">proto</name></expr></argument>, <argument pos:start="67:51" pos:end="67:58"><expr pos:start="67:51" pos:end="67:58"><literal type="string" pos:start="67:51" pos:end="67:58">"rtmpts"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:62" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:80">

        <if_stmt pos:start="69:9" pos:end="71:57"><if pos:start="69:9" pos:end="71:57">if <condition pos:start="69:12" pos:end="69:37">(<expr pos:start="69:13" pos:end="69:36"><operator pos:start="69:13" pos:end="69:13">!</operator><call pos:start="69:14" pos:end="69:36"><name pos:start="69:14" pos:end="69:19">strcmp</name><argument_list pos:start="69:20" pos:end="69:36">(<argument pos:start="69:21" pos:end="69:25"><expr pos:start="69:21" pos:end="69:25"><name pos:start="69:21" pos:end="69:25">proto</name></expr></argument>, <argument pos:start="69:28" pos:end="69:35"><expr pos:start="69:28" pos:end="69:35"><literal type="string" pos:start="69:28" pos:end="69:35">"rtmpts"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:57"><block_content pos:start="71:13" pos:end="71:57">

            <expr_stmt pos:start="71:13" pos:end="71:57"><expr pos:start="71:13" pos:end="71:56"><call pos:start="71:13" pos:end="71:56"><name pos:start="71:13" pos:end="71:23">av_dict_set</name><argument_list pos:start="71:24" pos:end="71:56">(<argument pos:start="71:25" pos:end="71:29"><expr pos:start="71:25" pos:end="71:29"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:29">opts</name></expr></argument>, <argument pos:start="71:32" pos:end="71:47"><expr pos:start="71:32" pos:end="71:47"><literal type="string" pos:start="71:32" pos:end="71:47">"ffrtmphttp_tls"</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:52"><expr pos:start="71:50" pos:end="71:52"><literal type="string" pos:start="71:50" pos:end="71:52">"1"</literal></expr></argument>, <argument pos:start="71:55" pos:end="71:55"><expr pos:start="71:55" pos:end="71:55"><literal type="number" pos:start="71:55" pos:end="71:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:48">/* open the http tunneling connection */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:80"><expr pos:start="77:9" pos:end="77:79"><call pos:start="77:9" pos:end="77:79"><name pos:start="77:9" pos:end="77:19">ff_url_join</name><argument_list pos:start="77:20" pos:end="77:79">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">buf</name></expr></argument>, <argument pos:start="77:26" pos:end="77:36"><expr pos:start="77:26" pos:end="77:36"><sizeof pos:start="77:26" pos:end="77:36">sizeof<argument_list pos:start="77:32" pos:end="77:36">(<argument pos:start="77:33" pos:end="77:35"><expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:39" pos:end="77:50"><expr pos:start="77:39" pos:end="77:50"><literal type="string" pos:start="77:39" pos:end="77:50">"ffrtmphttp"</literal></expr></argument>, <argument pos:start="77:53" pos:end="77:56"><expr pos:start="77:53" pos:end="77:56"><name pos:start="77:53" pos:end="77:56">NULL</name></expr></argument>, <argument pos:start="77:59" pos:end="77:66"><expr pos:start="77:59" pos:end="77:66"><name pos:start="77:59" pos:end="77:66">hostname</name></expr></argument>, <argument pos:start="77:69" pos:end="77:72"><expr pos:start="77:69" pos:end="77:72"><name pos:start="77:69" pos:end="77:72">port</name></expr></argument>, <argument pos:start="77:75" pos:end="77:78"><expr pos:start="77:75" pos:end="77:78"><name pos:start="77:75" pos:end="77:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="89:5">else if <condition pos:start="79:15" pos:end="79:39">(<expr pos:start="79:16" pos:end="79:38"><operator pos:start="79:16" pos:end="79:16">!</operator><call pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:22">strcmp</name><argument_list pos:start="79:23" pos:end="79:38">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28">proto</name></expr></argument>, <argument pos:start="79:31" pos:end="79:37"><expr pos:start="79:31" pos:end="79:37"><literal type="string" pos:start="79:31" pos:end="79:37">"rtmps"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:41" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:73">

        <comment type="block" pos:start="81:9" pos:end="81:37">/* open the tls connection */</comment>

        <if_stmt pos:start="83:9" pos:end="85:38"><if pos:start="83:9" pos:end="85:38">if <condition pos:start="83:12" pos:end="83:21">(<expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:16">port</name> <operator pos:start="83:18" pos:end="83:18">&lt;</operator> <literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:38"><block_content pos:start="85:13" pos:end="85:38">

            <expr_stmt pos:start="85:13" pos:end="85:38"><expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:16">port</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:37">RTMPS_DEFAULT_PORT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:73"><expr pos:start="87:9" pos:end="87:72"><call pos:start="87:9" pos:end="87:72"><name pos:start="87:9" pos:end="87:19">ff_url_join</name><argument_list pos:start="87:20" pos:end="87:72">(<argument pos:start="87:21" pos:end="87:23"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">buf</name></expr></argument>, <argument pos:start="87:26" pos:end="87:36"><expr pos:start="87:26" pos:end="87:36"><sizeof pos:start="87:26" pos:end="87:36">sizeof<argument_list pos:start="87:32" pos:end="87:36">(<argument pos:start="87:33" pos:end="87:35"><expr pos:start="87:33" pos:end="87:35"><name pos:start="87:33" pos:end="87:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="87:39" pos:end="87:43"><expr pos:start="87:39" pos:end="87:43"><literal type="string" pos:start="87:39" pos:end="87:43">"tls"</literal></expr></argument>, <argument pos:start="87:46" pos:end="87:49"><expr pos:start="87:46" pos:end="87:49"><name pos:start="87:46" pos:end="87:49">NULL</name></expr></argument>, <argument pos:start="87:52" pos:end="87:59"><expr pos:start="87:52" pos:end="87:59"><name pos:start="87:52" pos:end="87:59">hostname</name></expr></argument>, <argument pos:start="87:62" pos:end="87:65"><expr pos:start="87:62" pos:end="87:65"><name pos:start="87:62" pos:end="87:65">port</name></expr></argument>, <argument pos:start="87:68" pos:end="87:71"><expr pos:start="87:68" pos:end="87:71"><name pos:start="87:68" pos:end="87:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="103:5">else if <condition pos:start="89:15" pos:end="89:69">(<expr pos:start="89:16" pos:end="89:68"><operator pos:start="89:16" pos:end="89:16">!</operator><call pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:22">strcmp</name><argument_list pos:start="89:23" pos:end="89:38">(<argument pos:start="89:24" pos:end="89:28"><expr pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:28">proto</name></expr></argument>, <argument pos:start="89:31" pos:end="89:37"><expr pos:start="89:31" pos:end="89:37"><literal type="string" pos:start="89:31" pos:end="89:37">"rtmpe"</literal></expr></argument>)</argument_list></call> <operator pos:start="89:40" pos:end="89:41">||</operator> <operator pos:start="89:43" pos:end="89:43">(</operator><operator pos:start="89:44" pos:end="89:44">!</operator><call pos:start="89:45" pos:end="89:67"><name pos:start="89:45" pos:end="89:50">strcmp</name><argument_list pos:start="89:51" pos:end="89:67">(<argument pos:start="89:52" pos:end="89:56"><expr pos:start="89:52" pos:end="89:56"><name pos:start="89:52" pos:end="89:56">proto</name></expr></argument>, <argument pos:start="89:59" pos:end="89:66"><expr pos:start="89:59" pos:end="89:66"><literal type="string" pos:start="89:59" pos:end="89:66">"rtmpte"</literal></expr></argument>)</argument_list></call><operator pos:start="89:68" pos:end="89:68">)</operator></expr>)</condition> <block pos:start="89:71" pos:end="103:5">{<block_content pos:start="91:9" pos:end="101:26">

        <if_stmt pos:start="91:9" pos:end="93:64"><if pos:start="91:9" pos:end="93:64">if <condition pos:start="91:12" pos:end="91:37">(<expr pos:start="91:13" pos:end="91:36"><operator pos:start="91:13" pos:end="91:13">!</operator><call pos:start="91:14" pos:end="91:36"><name pos:start="91:14" pos:end="91:19">strcmp</name><argument_list pos:start="91:20" pos:end="91:36">(<argument pos:start="91:21" pos:end="91:25"><expr pos:start="91:21" pos:end="91:25"><name pos:start="91:21" pos:end="91:25">proto</name></expr></argument>, <argument pos:start="91:28" pos:end="91:35"><expr pos:start="91:28" pos:end="91:35"><literal type="string" pos:start="91:28" pos:end="91:35">"rtmpte"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:64"><block_content pos:start="93:13" pos:end="93:64">

            <expr_stmt pos:start="93:13" pos:end="93:64"><expr pos:start="93:13" pos:end="93:63"><call pos:start="93:13" pos:end="93:63"><name pos:start="93:13" pos:end="93:23">av_dict_set</name><argument_list pos:start="93:24" pos:end="93:63">(<argument pos:start="93:25" pos:end="93:29"><expr pos:start="93:25" pos:end="93:29"><operator pos:start="93:25" pos:end="93:25">&amp;</operator><name pos:start="93:26" pos:end="93:29">opts</name></expr></argument>, <argument pos:start="93:32" pos:end="93:54"><expr pos:start="93:32" pos:end="93:54"><literal type="string" pos:start="93:32" pos:end="93:54">"ffrtmpcrypt_tunneling"</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:59"><expr pos:start="93:57" pos:end="93:59"><literal type="string" pos:start="93:57" pos:end="93:59">"1"</literal></expr></argument>, <argument pos:start="93:62" pos:end="93:62"><expr pos:start="93:62" pos:end="93:62"><literal type="number" pos:start="93:62" pos:end="93:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="97:9" pos:end="97:43">/* open the encrypted connection */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:81"><expr pos:start="99:9" pos:end="99:80"><call pos:start="99:9" pos:end="99:80"><name pos:start="99:9" pos:end="99:19">ff_url_join</name><argument_list pos:start="99:20" pos:end="99:80">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">buf</name></expr></argument>, <argument pos:start="99:26" pos:end="99:36"><expr pos:start="99:26" pos:end="99:36"><sizeof pos:start="99:26" pos:end="99:36">sizeof<argument_list pos:start="99:32" pos:end="99:36">(<argument pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="99:39" pos:end="99:51"><expr pos:start="99:39" pos:end="99:51"><literal type="string" pos:start="99:39" pos:end="99:51">"ffrtmpcrypt"</literal></expr></argument>, <argument pos:start="99:54" pos:end="99:57"><expr pos:start="99:54" pos:end="99:57"><name pos:start="99:54" pos:end="99:57">NULL</name></expr></argument>, <argument pos:start="99:60" pos:end="99:67"><expr pos:start="99:60" pos:end="99:67"><name pos:start="99:60" pos:end="99:67">hostname</name></expr></argument>, <argument pos:start="99:70" pos:end="99:73"><expr pos:start="99:70" pos:end="99:73"><name pos:start="99:70" pos:end="99:73">port</name></expr></argument>, <argument pos:start="99:76" pos:end="99:79"><expr pos:start="99:76" pos:end="99:79"><name pos:start="99:76" pos:end="99:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:10">rt</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:21">encrypted</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="123:5">else <block pos:start="103:12" pos:end="123:5">{<block_content pos:start="107:9" pos:end="121:77">

        <comment type="block" pos:start="105:9" pos:end="105:37">/* open the tcp connection */</comment>

        <if_stmt pos:start="107:9" pos:end="109:37"><if pos:start="107:9" pos:end="109:37">if <condition pos:start="107:12" pos:end="107:21">(<expr pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:16">port</name> <operator pos:start="107:18" pos:end="107:18">&lt;</operator> <literal type="number" pos:start="107:20" pos:end="107:20">0</literal></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:37"><block_content pos:start="109:13" pos:end="109:37">

            <expr_stmt pos:start="109:13" pos:end="109:37"><expr pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:16">port</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:36">RTMP_DEFAULT_PORT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="121:77"><if pos:start="111:9" pos:end="117:51">if <condition pos:start="111:12" pos:end="111:23">(<expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:14">rt</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:22">listen</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="117:51"><block_content pos:start="113:13" pos:end="117:51">

            <expr_stmt pos:start="113:13" pos:end="117:51"><expr pos:start="113:13" pos:end="117:50"><call pos:start="113:13" pos:end="117:50"><name pos:start="113:13" pos:end="113:23">ff_url_join</name><argument_list pos:start="113:24" pos:end="117:50">(<argument pos:start="113:25" pos:end="113:27"><expr pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">buf</name></expr></argument>, <argument pos:start="113:30" pos:end="113:40"><expr pos:start="113:30" pos:end="113:40"><sizeof pos:start="113:30" pos:end="113:40">sizeof<argument_list pos:start="113:36" pos:end="113:40">(<argument pos:start="113:37" pos:end="113:39"><expr pos:start="113:37" pos:end="113:39"><name pos:start="113:37" pos:end="113:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="113:43" pos:end="113:47"><expr pos:start="113:43" pos:end="113:47"><literal type="string" pos:start="113:43" pos:end="113:47">"tcp"</literal></expr></argument>, <argument pos:start="113:50" pos:end="113:53"><expr pos:start="113:50" pos:end="113:53"><name pos:start="113:50" pos:end="113:53">NULL</name></expr></argument>, <argument pos:start="113:56" pos:end="113:63"><expr pos:start="113:56" pos:end="113:63"><name pos:start="113:56" pos:end="113:63">hostname</name></expr></argument>, <argument pos:start="113:66" pos:end="113:69"><expr pos:start="113:66" pos:end="113:69"><name pos:start="113:66" pos:end="113:69">port</name></expr></argument>,

                        <argument pos:start="115:25" pos:end="115:51"><expr pos:start="115:25" pos:end="115:51"><literal type="string" pos:start="115:25" pos:end="115:51">"?listen&amp;listen_timeout=%d"</literal></expr></argument>,

                        <argument pos:start="117:25" pos:end="117:49"><expr pos:start="117:25" pos:end="117:49"><name pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:26">rt</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:42">listen_timeout</name></name> <operator pos:start="117:44" pos:end="117:44">*</operator> <literal type="number" pos:start="117:46" pos:end="117:49">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="119:9" pos:end="121:77">else<block type="pseudo" pos:start="121:13" pos:end="121:77"><block_content pos:start="121:13" pos:end="121:77">

            <expr_stmt pos:start="121:13" pos:end="121:77"><expr pos:start="121:13" pos:end="121:76"><call pos:start="121:13" pos:end="121:76"><name pos:start="121:13" pos:end="121:23">ff_url_join</name><argument_list pos:start="121:24" pos:end="121:76">(<argument pos:start="121:25" pos:end="121:27"><expr pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:27">buf</name></expr></argument>, <argument pos:start="121:30" pos:end="121:40"><expr pos:start="121:30" pos:end="121:40"><sizeof pos:start="121:30" pos:end="121:40">sizeof<argument_list pos:start="121:36" pos:end="121:40">(<argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="121:43" pos:end="121:47"><expr pos:start="121:43" pos:end="121:47"><literal type="string" pos:start="121:43" pos:end="121:47">"tcp"</literal></expr></argument>, <argument pos:start="121:50" pos:end="121:53"><expr pos:start="121:50" pos:end="121:53"><name pos:start="121:50" pos:end="121:53">NULL</name></expr></argument>, <argument pos:start="121:56" pos:end="121:63"><expr pos:start="121:56" pos:end="121:63"><name pos:start="121:56" pos:end="121:63">hostname</name></expr></argument>, <argument pos:start="121:66" pos:end="121:69"><expr pos:start="121:66" pos:end="121:69"><name pos:start="121:66" pos:end="121:69">port</name></expr></argument>, <argument pos:start="121:72" pos:end="121:75"><expr pos:start="121:72" pos:end="121:75"><name pos:start="121:72" pos:end="121:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="127:1" pos:end="127:10"><name pos:start="127:1" pos:end="127:9">reconnect</name>:</label>

    <if_stmt pos:start="129:5" pos:end="137:5"><if pos:start="129:5" pos:end="137:5">if <condition pos:start="129:8" pos:end="131:62">(<expr pos:start="129:9" pos:end="131:61"><operator pos:start="129:9" pos:end="129:9">(</operator><name pos:start="129:10" pos:end="129:12">ret</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <call pos:start="129:16" pos:end="131:56"><name pos:start="129:16" pos:end="129:25">ffurl_open</name><argument_list pos:start="129:26" pos:end="131:56">(<argument pos:start="129:27" pos:end="129:37"><expr pos:start="129:27" pos:end="129:37"><operator pos:start="129:27" pos:end="129:27">&amp;</operator><name pos:start="129:28" pos:end="129:37"><name pos:start="129:28" pos:end="129:29">rt</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:37">stream</name></name></expr></argument>, <argument pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><name pos:start="129:40" pos:end="129:42">buf</name></expr></argument>, <argument pos:start="129:45" pos:end="129:64"><expr pos:start="129:45" pos:end="129:64"><name pos:start="129:45" pos:end="129:64">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                          <argument pos:start="131:27" pos:end="131:48"><expr pos:start="131:27" pos:end="131:48"><operator pos:start="131:27" pos:end="131:27">&amp;</operator><name pos:start="131:28" pos:end="131:48"><name pos:start="131:28" pos:end="131:28">s</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:48">interrupt_callback</name></name></expr></argument>, <argument pos:start="131:51" pos:end="131:55"><expr pos:start="131:51" pos:end="131:55"><operator pos:start="131:51" pos:end="131:51">&amp;</operator><name pos:start="131:52" pos:end="131:55">opts</name></expr></argument>)</argument_list></call><operator pos:start="131:57" pos:end="131:57">)</operator> <operator pos:start="131:59" pos:end="131:59">&lt;</operator> <literal type="number" pos:start="131:61" pos:end="131:61">0</literal></expr>)</condition> <block pos:start="131:64" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:18">

        <expr_stmt pos:start="133:9" pos:end="133:69"><expr pos:start="133:9" pos:end="133:68"><call pos:start="133:9" pos:end="133:68"><name pos:start="133:9" pos:end="133:14">av_log</name><argument_list pos:start="133:15" pos:end="133:68">(<argument pos:start="133:16" pos:end="133:16"><expr pos:start="133:16" pos:end="133:16"><name pos:start="133:16" pos:end="133:16">s</name></expr></argument> , <argument pos:start="133:20" pos:end="133:31"><expr pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:34" pos:end="133:62"><expr pos:start="133:34" pos:end="133:62"><literal type="string" pos:start="133:34" pos:end="133:62">"Cannot open connection %s\n"</literal></expr></argument>, <argument pos:start="133:65" pos:end="133:67"><expr pos:start="133:65" pos:end="133:67"><name pos:start="133:65" pos:end="133:67">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:18">goto <name pos:start="135:14" pos:end="135:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:22">(<expr pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:10">rt</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:21">swfverify</name></name></expr>)</condition> <block pos:start="141:24" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:22">

        <if_stmt pos:start="143:9" pos:end="145:22"><if pos:start="143:9" pos:end="145:22">if <condition pos:start="143:12" pos:end="143:45">(<expr pos:start="143:13" pos:end="143:44"><operator pos:start="143:13" pos:end="143:13">(</operator><name pos:start="143:14" pos:end="143:16">ret</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <call pos:start="143:20" pos:end="143:39"><name pos:start="143:20" pos:end="143:36">rtmp_calc_swfhash</name><argument_list pos:start="143:37" pos:end="143:39">(<argument pos:start="143:38" pos:end="143:38"><expr pos:start="143:38" pos:end="143:38"><name pos:start="143:38" pos:end="143:38">s</name></expr></argument>)</argument_list></call><operator pos:start="143:40" pos:end="143:40">)</operator> <operator pos:start="143:42" pos:end="143:42">&lt;</operator> <literal type="number" pos:start="143:44" pos:end="143:44">0</literal></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:22"><block_content pos:start="145:13" pos:end="145:22">

            <goto pos:start="145:13" pos:end="145:22">goto <name pos:start="145:18" pos:end="145:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:13"><name pos:start="151:5" pos:end="151:6">rt</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:13">state</name></name> <operator pos:start="151:15" pos:end="151:15">=</operator> <name pos:start="151:17" pos:end="151:27">STATE_START</name></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="155:18"><if pos:start="153:5" pos:end="155:18">if <condition pos:start="153:8" pos:end="153:57">(<expr pos:start="153:9" pos:end="153:56"><operator pos:start="153:9" pos:end="153:9">!</operator><name pos:start="153:10" pos:end="153:19"><name pos:start="153:10" pos:end="153:11">rt</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:19">listen</name></name> <operator pos:start="153:21" pos:end="153:22">&amp;&amp;</operator> <operator pos:start="153:24" pos:end="153:24">(</operator><name pos:start="153:25" pos:end="153:27">ret</name> <operator pos:start="153:29" pos:end="153:29">=</operator> <call pos:start="153:31" pos:end="153:51"><name pos:start="153:31" pos:end="153:44">rtmp_handshake</name><argument_list pos:start="153:45" pos:end="153:51">(<argument pos:start="153:46" pos:end="153:46"><expr pos:start="153:46" pos:end="153:46"><name pos:start="153:46" pos:end="153:46">s</name></expr></argument>, <argument pos:start="153:49" pos:end="153:50"><expr pos:start="153:49" pos:end="153:50"><name pos:start="153:49" pos:end="153:50">rt</name></expr></argument>)</argument_list></call><operator pos:start="153:52" pos:end="153:52">)</operator> <operator pos:start="153:54" pos:end="153:54">&lt;</operator> <literal type="number" pos:start="153:56" pos:end="153:56">0</literal></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:18"><block_content pos:start="155:9" pos:end="155:18">

        <goto pos:start="155:9" pos:end="155:18">goto <name pos:start="155:14" pos:end="155:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="159:18"><if pos:start="157:5" pos:end="159:18">if <condition pos:start="157:8" pos:end="157:63">(<expr pos:start="157:9" pos:end="157:62"><name pos:start="157:9" pos:end="157:18"><name pos:start="157:9" pos:end="157:10">rt</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:18">listen</name></name> <operator pos:start="157:20" pos:end="157:21">&amp;&amp;</operator> <operator pos:start="157:23" pos:end="157:23">(</operator><name pos:start="157:24" pos:end="157:26">ret</name> <operator pos:start="157:28" pos:end="157:28">=</operator> <call pos:start="157:30" pos:end="157:57"><name pos:start="157:30" pos:end="157:50">rtmp_server_handshake</name><argument_list pos:start="157:51" pos:end="157:57">(<argument pos:start="157:52" pos:end="157:52"><expr pos:start="157:52" pos:end="157:52"><name pos:start="157:52" pos:end="157:52">s</name></expr></argument>, <argument pos:start="157:55" pos:end="157:56"><expr pos:start="157:55" pos:end="157:56"><name pos:start="157:55" pos:end="157:56">rt</name></expr></argument>)</argument_list></call><operator pos:start="157:58" pos:end="157:58">)</operator> <operator pos:start="157:60" pos:end="157:60">&lt;</operator> <literal type="number" pos:start="157:62" pos:end="157:62">0</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:18"><block_content pos:start="159:9" pos:end="159:18">

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:29"><expr pos:start="163:5" pos:end="163:28"><name pos:start="163:5" pos:end="163:22"><name pos:start="163:5" pos:end="163:6">rt</name><operator pos:start="163:7" pos:end="163:8">-&gt;</operator><name pos:start="163:9" pos:end="163:22">out_chunk_size</name></name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:28">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:29"><expr pos:start="165:5" pos:end="165:28"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:6">rt</name><operator pos:start="165:7" pos:end="165:8">-&gt;</operator><name pos:start="165:9" pos:end="165:21">in_chunk_size</name></name>  <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:28">128</literal></expr>;</expr_stmt> <comment type="line" pos:start="165:31" pos:end="165:59">// Probably overwritten later</comment>

    <expr_stmt pos:start="167:5" pos:end="167:33"><expr pos:start="167:5" pos:end="167:32"><name pos:start="167:5" pos:end="167:13"><name pos:start="167:5" pos:end="167:6">rt</name><operator pos:start="167:7" pos:end="167:8">-&gt;</operator><name pos:start="167:9" pos:end="167:13">state</name></name> <operator pos:start="167:15" pos:end="167:15">=</operator> <name pos:start="167:17" pos:end="167:32">STATE_HANDSHAKED</name></expr>;</expr_stmt>



    <comment type="line" pos:start="171:5" pos:end="171:70">// Keep the application name when it has been defined by the user.</comment>

    <expr_stmt pos:start="173:5" pos:end="173:22"><expr pos:start="173:5" pos:end="173:21"><name pos:start="173:5" pos:end="173:11">old_app</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <name pos:start="173:15" pos:end="173:21"><name pos:start="173:15" pos:end="173:16">rt</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:21">app</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:40"><expr pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:11"><name pos:start="177:5" pos:end="177:6">rt</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:11">app</name></name> <operator pos:start="177:13" pos:end="177:13">=</operator> <call pos:start="177:15" pos:end="177:39"><name pos:start="177:15" pos:end="177:23">av_malloc</name><argument_list pos:start="177:24" pos:end="177:39">(<argument pos:start="177:25" pos:end="177:38"><expr pos:start="177:25" pos:end="177:38"><name pos:start="177:25" pos:end="177:38">APP_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="185:5"><if pos:start="179:5" pos:end="185:5">if <condition pos:start="179:8" pos:end="179:17">(<expr pos:start="179:9" pos:end="179:16"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:16"><name pos:start="179:10" pos:end="179:11">rt</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:16">app</name></name></expr>)</condition> <block pos:start="179:19" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:18">

        <expr_stmt pos:start="181:9" pos:end="181:30"><expr pos:start="181:9" pos:end="181:29"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="181:29"><name pos:start="181:15" pos:end="181:21">AVERROR</name><argument_list pos:start="181:22" pos:end="181:29">(<argument pos:start="181:23" pos:end="181:28"><expr pos:start="181:23" pos:end="181:28"><name pos:start="181:23" pos:end="181:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="183:9" pos:end="183:18">goto <name pos:start="183:14" pos:end="183:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="189:5" pos:end="189:34">//extract "app" part from path</comment>

    <if_stmt pos:start="191:5" pos:end="233:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:41">(<expr pos:start="191:9" pos:end="191:40"><operator pos:start="191:9" pos:end="191:9">!</operator><call pos:start="191:10" pos:end="191:40"><name pos:start="191:10" pos:end="191:16">strncmp</name><argument_list pos:start="191:17" pos:end="191:40">(<argument pos:start="191:18" pos:end="191:21"><expr pos:start="191:18" pos:end="191:21"><name pos:start="191:18" pos:end="191:21">path</name></expr></argument>, <argument pos:start="191:24" pos:end="191:35"><expr pos:start="191:24" pos:end="191:35"><literal type="string" pos:start="191:24" pos:end="191:35">"/ondemand/"</literal></expr></argument>, <argument pos:start="191:38" pos:end="191:39"><expr pos:start="191:38" pos:end="191:39"><literal type="number" pos:start="191:38" pos:end="191:39">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:43" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:39">

        <expr_stmt pos:start="193:9" pos:end="193:26"><expr pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:13">fname</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <name pos:start="193:17" pos:end="193:20">path</name> <operator pos:start="193:22" pos:end="193:22">+</operator> <literal type="number" pos:start="193:24" pos:end="193:25">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:39"><expr pos:start="195:9" pos:end="195:38"><call pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:14">memcpy</name><argument_list pos:start="195:15" pos:end="195:38">(<argument pos:start="195:16" pos:end="195:22"><expr pos:start="195:16" pos:end="195:22"><name pos:start="195:16" pos:end="195:22"><name pos:start="195:16" pos:end="195:17">rt</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:22">app</name></name></expr></argument>, <argument pos:start="195:25" pos:end="195:34"><expr pos:start="195:25" pos:end="195:34"><literal type="string" pos:start="195:25" pos:end="195:34">"ondemand"</literal></expr></argument>, <argument pos:start="195:37" pos:end="195:37"><expr pos:start="195:37" pos:end="195:37"><literal type="number" pos:start="195:37" pos:end="195:37">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="197:7" pos:end="233:5">else <block pos:start="197:12" pos:end="233:5">{<block_content pos:start="199:9" pos:end="231:9">

        <decl_stmt pos:start="199:9" pos:end="199:45"><decl pos:start="199:9" pos:end="199:44"><type pos:start="199:9" pos:end="199:14"><name pos:start="199:9" pos:end="199:12">char</name> <modifier pos:start="199:14" pos:end="199:14">*</modifier></type><name pos:start="199:15" pos:end="199:18">next</name> <init pos:start="199:20" pos:end="199:44">= <expr pos:start="199:22" pos:end="199:44"><ternary pos:start="199:22" pos:end="199:44"><condition pos:start="199:22" pos:end="199:28"><expr pos:start="199:22" pos:end="199:26"><operator pos:start="199:22" pos:end="199:22">*</operator><name pos:start="199:23" pos:end="199:26">path</name></expr> ?</condition><then pos:start="199:30" pos:end="199:37"> <expr pos:start="199:30" pos:end="199:37"><name pos:start="199:30" pos:end="199:33">path</name> <operator pos:start="199:35" pos:end="199:35">+</operator> <literal type="number" pos:start="199:37" pos:end="199:37">1</literal></expr> </then><else pos:start="199:39" pos:end="199:44">: <expr pos:start="199:41" pos:end="199:44"><name pos:start="199:41" pos:end="199:44">path</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="201:9" pos:end="201:36"><decl pos:start="201:9" pos:end="201:35"><type pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:12">char</name> <modifier pos:start="201:14" pos:end="201:14">*</modifier></type><name pos:start="201:15" pos:end="201:15">p</name> <init pos:start="201:17" pos:end="201:35">= <expr pos:start="201:19" pos:end="201:35"><call pos:start="201:19" pos:end="201:35"><name pos:start="201:19" pos:end="201:24">strchr</name><argument_list pos:start="201:25" pos:end="201:35">(<argument pos:start="201:26" pos:end="201:29"><expr pos:start="201:26" pos:end="201:29"><name pos:start="201:26" pos:end="201:29">next</name></expr></argument>, <argument pos:start="201:32" pos:end="201:34"><expr pos:start="201:32" pos:end="201:34"><literal type="char" pos:start="201:32" pos:end="201:34">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="203:9" pos:end="231:9"><if pos:start="203:9" pos:end="209:9">if <condition pos:start="203:12" pos:end="203:15">(<expr pos:start="203:13" pos:end="203:14"><operator pos:start="203:13" pos:end="203:13">!</operator><name pos:start="203:14" pos:end="203:14">p</name></expr>)</condition> <block pos:start="203:17" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:30">

            <expr_stmt pos:start="205:13" pos:end="205:25"><expr pos:start="205:13" pos:end="205:24"><name pos:start="205:13" pos:end="205:17">fname</name> <operator pos:start="205:19" pos:end="205:19">=</operator> <name pos:start="205:21" pos:end="205:24">next</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:30"><expr pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:22"><name pos:start="207:13" pos:end="207:14">rt</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:19">app</name><index pos:start="207:20" pos:end="207:22">[<expr pos:start="207:21" pos:end="207:21"><literal type="number" pos:start="207:21" pos:end="207:21">0</literal></expr>]</index></name> <operator pos:start="207:24" pos:end="207:24">=</operator> <literal type="char" pos:start="207:26" pos:end="207:29">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="231:9">else <block pos:start="209:16" pos:end="231:9">{<block_content pos:start="213:13" pos:end="229:13">

            <comment type="line" pos:start="211:13" pos:end="211:82">// make sure we do not mismatch a playpath for an application instance</comment>

            <decl_stmt pos:start="213:13" pos:end="213:41"><decl pos:start="213:13" pos:end="213:40"><type pos:start="213:13" pos:end="213:18"><name pos:start="213:13" pos:end="213:16">char</name> <modifier pos:start="213:18" pos:end="213:18">*</modifier></type><name pos:start="213:19" pos:end="213:19">c</name> <init pos:start="213:21" pos:end="213:40">= <expr pos:start="213:23" pos:end="213:40"><call pos:start="213:23" pos:end="213:40"><name pos:start="213:23" pos:end="213:28">strchr</name><argument_list pos:start="213:29" pos:end="213:40">(<argument pos:start="213:30" pos:end="213:34"><expr pos:start="213:30" pos:end="213:34"><name pos:start="213:30" pos:end="213:30">p</name> <operator pos:start="213:32" pos:end="213:32">+</operator> <literal type="number" pos:start="213:34" pos:end="213:34">1</literal></expr></argument>, <argument pos:start="213:37" pos:end="213:39"><expr pos:start="213:37" pos:end="213:39"><literal type="char" pos:start="213:37" pos:end="213:39">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:39"><expr pos:start="215:13" pos:end="215:38"><name pos:start="215:13" pos:end="215:17">fname</name> <operator pos:start="215:19" pos:end="215:19">=</operator> <call pos:start="215:21" pos:end="215:38"><name pos:start="215:21" pos:end="215:26">strchr</name><argument_list pos:start="215:27" pos:end="215:38">(<argument pos:start="215:28" pos:end="215:32"><expr pos:start="215:28" pos:end="215:32"><name pos:start="215:28" pos:end="215:28">p</name> <operator pos:start="215:30" pos:end="215:30">+</operator> <literal type="number" pos:start="215:32" pos:end="215:32">1</literal></expr></argument>, <argument pos:start="215:35" pos:end="215:37"><expr pos:start="215:35" pos:end="215:37"><literal type="char" pos:start="215:35" pos:end="215:37">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="229:13"><if pos:start="217:13" pos:end="223:13">if <condition pos:start="217:16" pos:end="217:43">(<expr pos:start="217:17" pos:end="217:42"><operator pos:start="217:17" pos:end="217:17">!</operator><name pos:start="217:18" pos:end="217:22">fname</name> <operator pos:start="217:24" pos:end="217:25">||</operator> <operator pos:start="217:27" pos:end="217:27">(</operator><name pos:start="217:28" pos:end="217:28">c</name> <operator pos:start="217:30" pos:end="217:31">&amp;&amp;</operator> <name pos:start="217:33" pos:end="217:33">c</name> <operator pos:start="217:35" pos:end="217:35">&lt;</operator> <name pos:start="217:37" pos:end="217:41">fname</name><operator pos:start="217:42" pos:end="217:42">)</operator></expr>)</condition> <block pos:start="217:45" pos:end="223:13">{<block_content pos:start="219:17" pos:end="221:56">

                <expr_stmt pos:start="219:17" pos:end="219:30"><expr pos:start="219:17" pos:end="219:29"><name pos:start="219:17" pos:end="219:21">fname</name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:25">p</name> <operator pos:start="219:27" pos:end="219:27">+</operator> <literal type="number" pos:start="219:29" pos:end="219:29">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:56"><expr pos:start="221:17" pos:end="221:55"><call pos:start="221:17" pos:end="221:55"><name pos:start="221:17" pos:end="221:26">av_strlcpy</name><argument_list pos:start="221:27" pos:end="221:55">(<argument pos:start="221:28" pos:end="221:34"><expr pos:start="221:28" pos:end="221:34"><name pos:start="221:28" pos:end="221:34"><name pos:start="221:28" pos:end="221:29">rt</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:34">app</name></name></expr></argument>, <argument pos:start="221:37" pos:end="221:44"><expr pos:start="221:37" pos:end="221:44"><name pos:start="221:37" pos:end="221:40">path</name> <operator pos:start="221:42" pos:end="221:42">+</operator> <literal type="number" pos:start="221:44" pos:end="221:44">1</literal></expr></argument>, <argument pos:start="221:47" pos:end="221:54"><expr pos:start="221:47" pos:end="221:54"><name pos:start="221:47" pos:end="221:47">p</name> <operator pos:start="221:49" pos:end="221:49">-</operator> <name pos:start="221:51" pos:end="221:54">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="223:15" pos:end="229:13">else <block pos:start="223:20" pos:end="229:13">{<block_content pos:start="225:17" pos:end="227:64">

                <expr_stmt pos:start="225:17" pos:end="225:24"><expr pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:21">fname</name><operator pos:start="225:22" pos:end="225:23">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:64"><expr pos:start="227:17" pos:end="227:63"><call pos:start="227:17" pos:end="227:63"><name pos:start="227:17" pos:end="227:26">av_strlcpy</name><argument_list pos:start="227:27" pos:end="227:63">(<argument pos:start="227:28" pos:end="227:34"><expr pos:start="227:28" pos:end="227:34"><name pos:start="227:28" pos:end="227:34"><name pos:start="227:28" pos:end="227:29">rt</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:34">app</name></name></expr></argument>, <argument pos:start="227:37" pos:end="227:44"><expr pos:start="227:37" pos:end="227:44"><name pos:start="227:37" pos:end="227:40">path</name> <operator pos:start="227:42" pos:end="227:42">+</operator> <literal type="number" pos:start="227:44" pos:end="227:44">1</literal></expr></argument>, <argument pos:start="227:47" pos:end="227:62"><expr pos:start="227:47" pos:end="227:62"><name pos:start="227:47" pos:end="227:51">fname</name> <operator pos:start="227:53" pos:end="227:53">-</operator> <name pos:start="227:55" pos:end="227:58">path</name> <operator pos:start="227:60" pos:end="227:60">-</operator> <literal type="number" pos:start="227:62" pos:end="227:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="237:5" pos:end="245:5"><if pos:start="237:5" pos:end="245:5">if <condition pos:start="237:8" pos:end="237:16">(<expr pos:start="237:9" pos:end="237:15"><name pos:start="237:9" pos:end="237:15">old_app</name></expr>)</condition> <block pos:start="237:18" pos:end="245:5">{<block_content pos:start="241:9" pos:end="243:26">

        <comment type="line" pos:start="239:9" pos:end="239:77">// The name of application has been defined by the user, override it.</comment>

        <expr_stmt pos:start="241:9" pos:end="241:25"><expr pos:start="241:9" pos:end="241:24"><call pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:15">av_free</name><argument_list pos:start="241:16" pos:end="241:24">(<argument pos:start="241:17" pos:end="241:23"><expr pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:18">rt</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:23">app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:26"><expr pos:start="243:9" pos:end="243:25"><name pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:10">rt</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:15">app</name></name> <operator pos:start="243:17" pos:end="243:17">=</operator> <name pos:start="243:19" pos:end="243:25">old_app</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="249:5" pos:end="287:5"><if pos:start="249:5" pos:end="287:5">if <condition pos:start="249:8" pos:end="249:22">(<expr pos:start="249:9" pos:end="249:21"><operator pos:start="249:9" pos:end="249:9">!</operator><name pos:start="249:10" pos:end="249:21"><name pos:start="249:10" pos:end="249:11">rt</name><operator pos:start="249:12" pos:end="249:13">-&gt;</operator><name pos:start="249:14" pos:end="249:21">playpath</name></name></expr>)</condition> <block pos:start="249:24" pos:end="287:5">{<block_content pos:start="251:9" pos:end="285:61">

        <decl_stmt pos:start="251:9" pos:end="251:32"><decl pos:start="251:9" pos:end="251:31"><type pos:start="251:9" pos:end="251:11"><name pos:start="251:9" pos:end="251:11">int</name></type> <name pos:start="251:13" pos:end="251:15">len</name> <init pos:start="251:17" pos:end="251:31">= <expr pos:start="251:19" pos:end="251:31"><call pos:start="251:19" pos:end="251:31"><name pos:start="251:19" pos:end="251:24">strlen</name><argument_list pos:start="251:25" pos:end="251:31">(<argument pos:start="251:26" pos:end="251:30"><expr pos:start="251:26" pos:end="251:30"><name pos:start="251:26" pos:end="251:30">fname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:54"><expr pos:start="255:9" pos:end="255:53"><name pos:start="255:9" pos:end="255:20"><name pos:start="255:9" pos:end="255:10">rt</name><operator pos:start="255:11" pos:end="255:12">-&gt;</operator><name pos:start="255:13" pos:end="255:20">playpath</name></name> <operator pos:start="255:22" pos:end="255:22">=</operator> <call pos:start="255:24" pos:end="255:53"><name pos:start="255:24" pos:end="255:32">av_malloc</name><argument_list pos:start="255:33" pos:end="255:53">(<argument pos:start="255:34" pos:end="255:52"><expr pos:start="255:34" pos:end="255:52"><name pos:start="255:34" pos:end="255:52">PLAYPATH_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="263:9"><if pos:start="257:9" pos:end="263:9">if <condition pos:start="257:12" pos:end="257:26">(<expr pos:start="257:13" pos:end="257:25"><operator pos:start="257:13" pos:end="257:13">!</operator><name pos:start="257:14" pos:end="257:25"><name pos:start="257:14" pos:end="257:15">rt</name><operator pos:start="257:16" pos:end="257:17">-&gt;</operator><name pos:start="257:18" pos:end="257:25">playpath</name></name></expr>)</condition> <block pos:start="257:28" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:22">

            <expr_stmt pos:start="259:13" pos:end="259:34"><expr pos:start="259:13" pos:end="259:33"><name pos:start="259:13" pos:end="259:15">ret</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <call pos:start="259:19" pos:end="259:33"><name pos:start="259:19" pos:end="259:25">AVERROR</name><argument_list pos:start="259:26" pos:end="259:33">(<argument pos:start="259:27" pos:end="259:32"><expr pos:start="259:27" pos:end="259:32"><name pos:start="259:27" pos:end="259:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="261:13" pos:end="261:22">goto <name pos:start="261:18" pos:end="261:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="267:9" pos:end="283:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="271:47">(<expr pos:start="267:13" pos:end="271:46"><operator pos:start="267:13" pos:end="267:13">!</operator><call pos:start="267:14" pos:end="267:31"><name pos:start="267:14" pos:end="267:19">strchr</name><argument_list pos:start="267:20" pos:end="267:31">(<argument pos:start="267:21" pos:end="267:25"><expr pos:start="267:21" pos:end="267:25"><name pos:start="267:21" pos:end="267:25">fname</name></expr></argument>, <argument pos:start="267:28" pos:end="267:30"><expr pos:start="267:28" pos:end="267:30"><literal type="char" pos:start="267:28" pos:end="267:30">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="267:33" pos:end="267:34">&amp;&amp;</operator> <name pos:start="267:36" pos:end="267:38">len</name> <operator pos:start="267:40" pos:end="267:41">&gt;=</operator> <literal type="number" pos:start="267:43" pos:end="267:43">4</literal> <operator pos:start="267:45" pos:end="267:46">&amp;&amp;</operator>

            <operator pos:start="269:13" pos:end="269:13">(</operator><operator pos:start="269:14" pos:end="269:14">!</operator><call pos:start="269:15" pos:end="269:45"><name pos:start="269:15" pos:end="269:20">strcmp</name><argument_list pos:start="269:21" pos:end="269:45">(<argument pos:start="269:22" pos:end="269:36"><expr pos:start="269:22" pos:end="269:36"><name pos:start="269:22" pos:end="269:26">fname</name> <operator pos:start="269:28" pos:end="269:28">+</operator> <name pos:start="269:30" pos:end="269:32">len</name> <operator pos:start="269:34" pos:end="269:34">-</operator> <literal type="number" pos:start="269:36" pos:end="269:36">4</literal></expr></argument>, <argument pos:start="269:39" pos:end="269:44"><expr pos:start="269:39" pos:end="269:44"><literal type="string" pos:start="269:39" pos:end="269:44">".f4v"</literal></expr></argument>)</argument_list></call> <operator pos:start="269:47" pos:end="269:48">||</operator>

             <operator pos:start="271:14" pos:end="271:14">!</operator><call pos:start="271:15" pos:end="271:45"><name pos:start="271:15" pos:end="271:20">strcmp</name><argument_list pos:start="271:21" pos:end="271:45">(<argument pos:start="271:22" pos:end="271:36"><expr pos:start="271:22" pos:end="271:36"><name pos:start="271:22" pos:end="271:26">fname</name> <operator pos:start="271:28" pos:end="271:28">+</operator> <name pos:start="271:30" pos:end="271:32">len</name> <operator pos:start="271:34" pos:end="271:34">-</operator> <literal type="number" pos:start="271:36" pos:end="271:36">4</literal></expr></argument>, <argument pos:start="271:39" pos:end="271:44"><expr pos:start="271:39" pos:end="271:44"><literal type="string" pos:start="271:39" pos:end="271:44">".mp4"</literal></expr></argument>)</argument_list></call><operator pos:start="271:46" pos:end="271:46">)</operator></expr>)</condition> <block pos:start="271:49" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:44">

            <expr_stmt pos:start="273:13" pos:end="273:44"><expr pos:start="273:13" pos:end="273:43"><call pos:start="273:13" pos:end="273:43"><name pos:start="273:13" pos:end="273:18">memcpy</name><argument_list pos:start="273:19" pos:end="273:43">(<argument pos:start="273:20" pos:end="273:31"><expr pos:start="273:20" pos:end="273:31"><name pos:start="273:20" pos:end="273:31"><name pos:start="273:20" pos:end="273:21">rt</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:31">playpath</name></name></expr></argument>, <argument pos:start="273:34" pos:end="273:39"><expr pos:start="273:34" pos:end="273:39"><literal type="string" pos:start="273:34" pos:end="273:39">"mp4:"</literal></expr></argument>, <argument pos:start="273:42" pos:end="273:42"><expr pos:start="273:42" pos:end="273:42"><literal type="number" pos:start="273:42" pos:end="273:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="279:9">else if <condition pos:start="275:19" pos:end="275:64">(<expr pos:start="275:20" pos:end="275:63"><name pos:start="275:20" pos:end="275:22">len</name> <operator pos:start="275:24" pos:end="275:25">&gt;=</operator> <literal type="number" pos:start="275:27" pos:end="275:27">4</literal> <operator pos:start="275:29" pos:end="275:30">&amp;&amp;</operator> <operator pos:start="275:32" pos:end="275:32">!</operator><call pos:start="275:33" pos:end="275:63"><name pos:start="275:33" pos:end="275:38">strcmp</name><argument_list pos:start="275:39" pos:end="275:63">(<argument pos:start="275:40" pos:end="275:54"><expr pos:start="275:40" pos:end="275:54"><name pos:start="275:40" pos:end="275:44">fname</name> <operator pos:start="275:46" pos:end="275:46">+</operator> <name pos:start="275:48" pos:end="275:50">len</name> <operator pos:start="275:52" pos:end="275:52">-</operator> <literal type="number" pos:start="275:54" pos:end="275:54">4</literal></expr></argument>, <argument pos:start="275:57" pos:end="275:62"><expr pos:start="275:57" pos:end="275:62"><literal type="string" pos:start="275:57" pos:end="275:62">".flv"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="275:66" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:34">

            <expr_stmt pos:start="277:13" pos:end="277:34"><expr pos:start="277:13" pos:end="277:33"><name pos:start="277:13" pos:end="277:26"><name pos:start="277:13" pos:end="277:17">fname</name><index pos:start="277:18" pos:end="277:26">[<expr pos:start="277:19" pos:end="277:25"><name pos:start="277:19" pos:end="277:21">len</name> <operator pos:start="277:23" pos:end="277:23">-</operator> <literal type="number" pos:start="277:25" pos:end="277:25">4</literal></expr>]</index></name> <operator pos:start="277:28" pos:end="277:28">=</operator> <literal type="char" pos:start="277:30" pos:end="277:33">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="279:11" pos:end="283:9">else <block pos:start="279:16" pos:end="283:9">{<block_content pos:start="281:13" pos:end="281:32">

            <expr_stmt pos:start="281:13" pos:end="281:32"><expr pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:27"><name pos:start="281:13" pos:end="281:14">rt</name><operator pos:start="281:15" pos:end="281:16">-&gt;</operator><name pos:start="281:17" pos:end="281:24">playpath</name><index pos:start="281:25" pos:end="281:27">[<expr pos:start="281:26" pos:end="281:26"><literal type="number" pos:start="281:26" pos:end="281:26">0</literal></expr>]</index></name> <operator pos:start="281:29" pos:end="281:29">=</operator> <literal type="number" pos:start="281:31" pos:end="281:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:61"><expr pos:start="285:9" pos:end="285:60"><call pos:start="285:9" pos:end="285:60"><name pos:start="285:9" pos:end="285:18">av_strlcat</name><argument_list pos:start="285:19" pos:end="285:60">(<argument pos:start="285:20" pos:end="285:31"><expr pos:start="285:20" pos:end="285:31"><name pos:start="285:20" pos:end="285:31"><name pos:start="285:20" pos:end="285:21">rt</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:31">playpath</name></name></expr></argument>, <argument pos:start="285:34" pos:end="285:38"><expr pos:start="285:34" pos:end="285:38"><name pos:start="285:34" pos:end="285:38">fname</name></expr></argument>, <argument pos:start="285:41" pos:end="285:59"><expr pos:start="285:41" pos:end="285:59"><name pos:start="285:41" pos:end="285:59">PLAYPATH_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="291:5" pos:end="307:5"><if pos:start="291:5" pos:end="307:5">if <condition pos:start="291:8" pos:end="291:19">(<expr pos:start="291:9" pos:end="291:18"><operator pos:start="291:9" pos:end="291:9">!</operator><name pos:start="291:10" pos:end="291:18"><name pos:start="291:10" pos:end="291:11">rt</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:18">tcurl</name></name></expr>)</condition> <block pos:start="291:21" pos:end="307:5">{<block_content pos:start="293:9" pos:end="305:42">

        <expr_stmt pos:start="293:9" pos:end="293:48"><expr pos:start="293:9" pos:end="293:47"><name pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:10">rt</name><operator pos:start="293:11" pos:end="293:12">-&gt;</operator><name pos:start="293:13" pos:end="293:17">tcurl</name></name> <operator pos:start="293:19" pos:end="293:19">=</operator> <call pos:start="293:21" pos:end="293:47"><name pos:start="293:21" pos:end="293:29">av_malloc</name><argument_list pos:start="293:30" pos:end="293:47">(<argument pos:start="293:31" pos:end="293:46"><expr pos:start="293:31" pos:end="293:46"><name pos:start="293:31" pos:end="293:46">TCURL_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="301:9"><if pos:start="295:9" pos:end="301:9">if <condition pos:start="295:12" pos:end="295:23">(<expr pos:start="295:13" pos:end="295:22"><operator pos:start="295:13" pos:end="295:13">!</operator><name pos:start="295:14" pos:end="295:22"><name pos:start="295:14" pos:end="295:15">rt</name><operator pos:start="295:16" pos:end="295:17">-&gt;</operator><name pos:start="295:18" pos:end="295:22">tcurl</name></name></expr>)</condition> <block pos:start="295:25" pos:end="301:9">{<block_content pos:start="297:13" pos:end="299:22">

            <expr_stmt pos:start="297:13" pos:end="297:34"><expr pos:start="297:13" pos:end="297:33"><name pos:start="297:13" pos:end="297:15">ret</name> <operator pos:start="297:17" pos:end="297:17">=</operator> <call pos:start="297:19" pos:end="297:33"><name pos:start="297:19" pos:end="297:25">AVERROR</name><argument_list pos:start="297:26" pos:end="297:33">(<argument pos:start="297:27" pos:end="297:32"><expr pos:start="297:27" pos:end="297:32"><name pos:start="297:27" pos:end="297:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="299:13" pos:end="299:22">goto <name pos:start="299:18" pos:end="299:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="305:42"><expr pos:start="303:9" pos:end="305:41"><call pos:start="303:9" pos:end="305:41"><name pos:start="303:9" pos:end="303:19">ff_url_join</name><argument_list pos:start="303:20" pos:end="305:41">(<argument pos:start="303:21" pos:end="303:29"><expr pos:start="303:21" pos:end="303:29"><name pos:start="303:21" pos:end="303:29"><name pos:start="303:21" pos:end="303:22">rt</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:29">tcurl</name></name></expr></argument>, <argument pos:start="303:32" pos:end="303:47"><expr pos:start="303:32" pos:end="303:47"><name pos:start="303:32" pos:end="303:47">TCURL_MAX_LENGTH</name></expr></argument>, <argument pos:start="303:50" pos:end="303:54"><expr pos:start="303:50" pos:end="303:54"><name pos:start="303:50" pos:end="303:54">proto</name></expr></argument>, <argument pos:start="303:57" pos:end="303:60"><expr pos:start="303:57" pos:end="303:60"><name pos:start="303:57" pos:end="303:60">NULL</name></expr></argument>, <argument pos:start="303:63" pos:end="303:70"><expr pos:start="303:63" pos:end="303:70"><name pos:start="303:63" pos:end="303:70">hostname</name></expr></argument>,

                    <argument pos:start="305:21" pos:end="305:24"><expr pos:start="305:21" pos:end="305:24"><name pos:start="305:21" pos:end="305:24">port</name></expr></argument>, <argument pos:start="305:27" pos:end="305:31"><expr pos:start="305:27" pos:end="305:31"><literal type="string" pos:start="305:27" pos:end="305:31">"/%s"</literal></expr></argument>, <argument pos:start="305:34" pos:end="305:40"><expr pos:start="305:34" pos:end="305:40"><name pos:start="305:34" pos:end="305:40"><name pos:start="305:34" pos:end="305:35">rt</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:40">app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="339:5"><if pos:start="311:5" pos:end="339:5">if <condition pos:start="311:8" pos:end="311:22">(<expr pos:start="311:9" pos:end="311:21"><operator pos:start="311:9" pos:end="311:9">!</operator><name pos:start="311:10" pos:end="311:21"><name pos:start="311:10" pos:end="311:11">rt</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:21">flashver</name></name></expr>)</condition> <block pos:start="311:24" pos:end="339:5">{<block_content pos:start="313:9" pos:end="337:9">

        <expr_stmt pos:start="313:9" pos:end="313:54"><expr pos:start="313:9" pos:end="313:53"><name pos:start="313:9" pos:end="313:20"><name pos:start="313:9" pos:end="313:10">rt</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:20">flashver</name></name> <operator pos:start="313:22" pos:end="313:22">=</operator> <call pos:start="313:24" pos:end="313:53"><name pos:start="313:24" pos:end="313:32">av_malloc</name><argument_list pos:start="313:33" pos:end="313:53">(<argument pos:start="313:34" pos:end="313:52"><expr pos:start="313:34" pos:end="313:52"><name pos:start="313:34" pos:end="313:52">FLASHVER_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="321:9"><if pos:start="315:9" pos:end="321:9">if <condition pos:start="315:12" pos:end="315:26">(<expr pos:start="315:13" pos:end="315:25"><operator pos:start="315:13" pos:end="315:13">!</operator><name pos:start="315:14" pos:end="315:25"><name pos:start="315:14" pos:end="315:15">rt</name><operator pos:start="315:16" pos:end="315:17">-&gt;</operator><name pos:start="315:18" pos:end="315:25">flashver</name></name></expr>)</condition> <block pos:start="315:28" pos:end="321:9">{<block_content pos:start="317:13" pos:end="319:22">

            <expr_stmt pos:start="317:13" pos:end="317:34"><expr pos:start="317:13" pos:end="317:33"><name pos:start="317:13" pos:end="317:15">ret</name> <operator pos:start="317:17" pos:end="317:17">=</operator> <call pos:start="317:19" pos:end="317:33"><name pos:start="317:19" pos:end="317:25">AVERROR</name><argument_list pos:start="317:26" pos:end="317:33">(<argument pos:start="317:27" pos:end="317:32"><expr pos:start="317:27" pos:end="317:32"><name pos:start="317:27" pos:end="317:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="319:13" pos:end="319:22">goto <name pos:start="319:18" pos:end="319:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="323:9" pos:end="337:9"><if pos:start="323:9" pos:end="331:9">if <condition pos:start="323:12" pos:end="323:25">(<expr pos:start="323:13" pos:end="323:24"><name pos:start="323:13" pos:end="323:24"><name pos:start="323:13" pos:end="323:14">rt</name><operator pos:start="323:15" pos:end="323:16">-&gt;</operator><name pos:start="323:17" pos:end="323:24">is_input</name></name></expr>)</condition> <block pos:start="323:27" pos:end="331:9">{<block_content pos:start="325:13" pos:end="329:56">

            <expr_stmt pos:start="325:13" pos:end="329:56"><expr pos:start="325:13" pos:end="329:55"><call pos:start="325:13" pos:end="329:55"><name pos:start="325:13" pos:end="325:20">snprintf</name><argument_list pos:start="325:21" pos:end="329:55">(<argument pos:start="325:22" pos:end="325:33"><expr pos:start="325:22" pos:end="325:33"><name pos:start="325:22" pos:end="325:33"><name pos:start="325:22" pos:end="325:23">rt</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:33">flashver</name></name></expr></argument>, <argument pos:start="325:36" pos:end="325:54"><expr pos:start="325:36" pos:end="325:54"><name pos:start="325:36" pos:end="325:54">FLASHVER_MAX_LENGTH</name></expr></argument>, <argument pos:start="325:57" pos:end="325:72"><expr pos:start="325:57" pos:end="325:72"><literal type="string" pos:start="325:57" pos:end="325:72">"%s %d,%d,%d,%d"</literal></expr></argument>,

                    <argument pos:start="327:21" pos:end="327:40"><expr pos:start="327:21" pos:end="327:40"><name pos:start="327:21" pos:end="327:40">RTMP_CLIENT_PLATFORM</name></expr></argument>, <argument pos:start="327:43" pos:end="327:58"><expr pos:start="327:43" pos:end="327:58"><name pos:start="327:43" pos:end="327:58">RTMP_CLIENT_VER1</name></expr></argument>, <argument pos:start="327:61" pos:end="327:76"><expr pos:start="327:61" pos:end="327:76"><name pos:start="327:61" pos:end="327:76">RTMP_CLIENT_VER2</name></expr></argument>,

                    <argument pos:start="329:21" pos:end="329:36"><expr pos:start="329:21" pos:end="329:36"><name pos:start="329:21" pos:end="329:36">RTMP_CLIENT_VER3</name></expr></argument>, <argument pos:start="329:39" pos:end="329:54"><expr pos:start="329:39" pos:end="329:54"><name pos:start="329:39" pos:end="329:54">RTMP_CLIENT_VER4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="331:11" pos:end="337:9">else <block pos:start="331:16" pos:end="337:9">{<block_content pos:start="333:13" pos:end="335:68">

            <expr_stmt pos:start="333:13" pos:end="335:68"><expr pos:start="333:13" pos:end="335:67"><call pos:start="333:13" pos:end="335:67"><name pos:start="333:13" pos:end="333:20">snprintf</name><argument_list pos:start="333:21" pos:end="335:67">(<argument pos:start="333:22" pos:end="333:33"><expr pos:start="333:22" pos:end="333:33"><name pos:start="333:22" pos:end="333:33"><name pos:start="333:22" pos:end="333:23">rt</name><operator pos:start="333:24" pos:end="333:25">-&gt;</operator><name pos:start="333:26" pos:end="333:33">flashver</name></name></expr></argument>, <argument pos:start="333:36" pos:end="333:54"><expr pos:start="333:36" pos:end="333:54"><name pos:start="333:36" pos:end="333:54">FLASHVER_MAX_LENGTH</name></expr></argument>,

                    <argument pos:start="335:21" pos:end="335:47"><expr pos:start="335:21" pos:end="335:47"><literal type="string" pos:start="335:21" pos:end="335:47">"FMLE/3.0 (compatible; %s)"</literal></expr></argument>, <argument pos:start="335:50" pos:end="335:66"><expr pos:start="335:50" pos:end="335:66"><name pos:start="335:50" pos:end="335:66">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="343:5" pos:end="343:37"><expr pos:start="343:5" pos:end="343:36"><name pos:start="343:5" pos:end="343:26"><name pos:start="343:5" pos:end="343:6">rt</name><operator pos:start="343:7" pos:end="343:8">-&gt;</operator><name pos:start="343:9" pos:end="343:26">client_report_size</name></name> <operator pos:start="343:28" pos:end="343:28">=</operator> <literal type="number" pos:start="343:30" pos:end="343:36">1048576</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:23"><expr pos:start="345:5" pos:end="345:22"><name pos:start="345:5" pos:end="345:18"><name pos:start="345:5" pos:end="345:6">rt</name><operator pos:start="345:7" pos:end="345:8">-&gt;</operator><name pos:start="345:9" pos:end="345:18">bytes_read</name></name> <operator pos:start="345:20" pos:end="345:20">=</operator> <literal type="number" pos:start="345:22" pos:end="345:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:28"><expr pos:start="347:5" pos:end="347:27"><name pos:start="347:5" pos:end="347:23"><name pos:start="347:5" pos:end="347:6">rt</name><operator pos:start="347:7" pos:end="347:8">-&gt;</operator><name pos:start="347:9" pos:end="347:23">last_bytes_read</name></name> <operator pos:start="347:25" pos:end="347:25">=</operator> <literal type="number" pos:start="347:27" pos:end="347:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:28"><expr pos:start="349:5" pos:end="349:27"><name pos:start="349:5" pos:end="349:17"><name pos:start="349:5" pos:end="349:6">rt</name><operator pos:start="349:7" pos:end="349:8">-&gt;</operator><name pos:start="349:9" pos:end="349:17">server_bw</name></name> <operator pos:start="349:19" pos:end="349:19">=</operator> <literal type="number" pos:start="349:21" pos:end="349:27">2500000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="353:5" pos:end="355:47"><expr pos:start="353:5" pos:end="355:46"><call pos:start="353:5" pos:end="355:46"><name pos:start="353:5" pos:end="353:10">av_log</name><argument_list pos:start="353:11" pos:end="355:46">(<argument pos:start="353:12" pos:end="353:12"><expr pos:start="353:12" pos:end="353:12"><name pos:start="353:12" pos:end="353:12">s</name></expr></argument>, <argument pos:start="353:15" pos:end="353:26"><expr pos:start="353:15" pos:end="353:26"><name pos:start="353:15" pos:end="353:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="353:29" pos:end="353:75"><expr pos:start="353:29" pos:end="353:75"><literal type="string" pos:start="353:29" pos:end="353:75">"Proto = %s, path = %s, app = %s, fname = %s\n"</literal></expr></argument>,

           <argument pos:start="355:12" pos:end="355:16"><expr pos:start="355:12" pos:end="355:16"><name pos:start="355:12" pos:end="355:16">proto</name></expr></argument>, <argument pos:start="355:19" pos:end="355:22"><expr pos:start="355:19" pos:end="355:22"><name pos:start="355:19" pos:end="355:22">path</name></expr></argument>, <argument pos:start="355:25" pos:end="355:31"><expr pos:start="355:25" pos:end="355:31"><name pos:start="355:25" pos:end="355:31"><name pos:start="355:25" pos:end="355:26">rt</name><operator pos:start="355:27" pos:end="355:28">-&gt;</operator><name pos:start="355:29" pos:end="355:31">app</name></name></expr></argument>, <argument pos:start="355:34" pos:end="355:45"><expr pos:start="355:34" pos:end="355:45"><name pos:start="355:34" pos:end="355:45"><name pos:start="355:34" pos:end="355:35">rt</name><operator pos:start="355:36" pos:end="355:37">-&gt;</operator><name pos:start="355:38" pos:end="355:45">playpath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="357:5" pos:end="371:5"><if pos:start="357:5" pos:end="363:5">if <condition pos:start="357:8" pos:end="357:20">(<expr pos:start="357:9" pos:end="357:19"><operator pos:start="357:9" pos:end="357:9">!</operator><name pos:start="357:10" pos:end="357:19"><name pos:start="357:10" pos:end="357:11">rt</name><operator pos:start="357:12" pos:end="357:13">-&gt;</operator><name pos:start="357:14" pos:end="357:19">listen</name></name></expr>)</condition> <block pos:start="357:22" pos:end="363:5">{<block_content pos:start="359:9" pos:end="361:22">

        <if_stmt pos:start="359:9" pos:end="361:22"><if pos:start="359:9" pos:end="361:22">if <condition pos:start="359:12" pos:end="359:43">(<expr pos:start="359:13" pos:end="359:42"><operator pos:start="359:13" pos:end="359:13">(</operator><name pos:start="359:14" pos:end="359:16">ret</name> <operator pos:start="359:18" pos:end="359:18">=</operator> <call pos:start="359:20" pos:end="359:37"><name pos:start="359:20" pos:end="359:30">gen_connect</name><argument_list pos:start="359:31" pos:end="359:37">(<argument pos:start="359:32" pos:end="359:32"><expr pos:start="359:32" pos:end="359:32"><name pos:start="359:32" pos:end="359:32">s</name></expr></argument>, <argument pos:start="359:35" pos:end="359:36"><expr pos:start="359:35" pos:end="359:36"><name pos:start="359:35" pos:end="359:36">rt</name></expr></argument>)</argument_list></call><operator pos:start="359:38" pos:end="359:38">)</operator> <operator pos:start="359:40" pos:end="359:40">&lt;</operator> <literal type="number" pos:start="359:42" pos:end="359:42">0</literal></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="361:22"><block_content pos:start="361:13" pos:end="361:22">

            <goto pos:start="361:13" pos:end="361:22">goto <name pos:start="361:18" pos:end="361:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="363:7" pos:end="371:5">else <block pos:start="363:12" pos:end="371:5">{<block_content pos:start="365:9" pos:end="369:25">

        <if_stmt pos:start="365:9" pos:end="367:22"><if pos:start="365:9" pos:end="367:22">if <condition pos:start="365:12" pos:end="365:46">(<expr pos:start="365:13" pos:end="365:45"><call pos:start="365:13" pos:end="365:41"><name pos:start="365:13" pos:end="365:24">read_connect</name><argument_list pos:start="365:25" pos:end="365:41">(<argument pos:start="365:26" pos:end="365:26"><expr pos:start="365:26" pos:end="365:26"><name pos:start="365:26" pos:end="365:26">s</name></expr></argument>, <argument pos:start="365:29" pos:end="365:40"><expr pos:start="365:29" pos:end="365:40"><name pos:start="365:29" pos:end="365:40"><name pos:start="365:29" pos:end="365:29">s</name><operator pos:start="365:30" pos:end="365:31">-&gt;</operator><name pos:start="365:32" pos:end="365:40">priv_data</name></name></expr></argument>)</argument_list></call> <operator pos:start="365:43" pos:end="365:43">&lt;</operator> <literal type="number" pos:start="365:45" pos:end="365:45">0</literal></expr>)</condition><block type="pseudo" pos:start="367:13" pos:end="367:22"><block_content pos:start="367:13" pos:end="367:22">

            <goto pos:start="367:13" pos:end="367:22">goto <name pos:start="367:18" pos:end="367:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:25"><expr pos:start="369:9" pos:end="369:24"><name pos:start="369:9" pos:end="369:20"><name pos:start="369:9" pos:end="369:10">rt</name><operator pos:start="369:11" pos:end="369:12">-&gt;</operator><name pos:start="369:13" pos:end="369:20">is_input</name></name> <operator pos:start="369:22" pos:end="369:22">=</operator> <literal type="number" pos:start="369:24" pos:end="369:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <do pos:start="375:5" pos:end="379:28">do <block pos:start="375:8" pos:end="379:5">{<block_content pos:start="377:9" pos:end="377:31">

        <expr_stmt pos:start="377:9" pos:end="377:31"><expr pos:start="377:9" pos:end="377:30"><name pos:start="377:9" pos:end="377:11">ret</name> <operator pos:start="377:13" pos:end="377:13">=</operator> <call pos:start="377:15" pos:end="377:30"><name pos:start="377:15" pos:end="377:24">get_packet</name><argument_list pos:start="377:25" pos:end="377:30">(<argument pos:start="377:26" pos:end="377:26"><expr pos:start="377:26" pos:end="377:26"><name pos:start="377:26" pos:end="377:26">s</name></expr></argument>, <argument pos:start="377:29" pos:end="377:29"><expr pos:start="377:29" pos:end="377:29"><literal type="number" pos:start="377:29" pos:end="377:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="379:13" pos:end="379:27">(<expr pos:start="379:14" pos:end="379:26"><name pos:start="379:14" pos:end="379:16">ret</name> <operator pos:start="379:18" pos:end="379:19">==</operator> <name pos:start="379:21" pos:end="379:26">EAGAIN</name></expr>)</condition>;</do>

    <if_stmt pos:start="381:5" pos:end="383:18"><if pos:start="381:5" pos:end="383:18">if <condition pos:start="381:8" pos:end="381:16">(<expr pos:start="381:9" pos:end="381:15"><name pos:start="381:9" pos:end="381:11">ret</name> <operator pos:start="381:13" pos:end="381:13">&lt;</operator> <literal type="number" pos:start="381:15" pos:end="381:15">0</literal></expr>)</condition><block type="pseudo" pos:start="383:9" pos:end="383:18"><block_content pos:start="383:9" pos:end="383:18">

        <goto pos:start="383:9" pos:end="383:18">goto <name pos:start="383:14" pos:end="383:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="403:5"><if pos:start="387:5" pos:end="403:5">if <condition pos:start="387:8" pos:end="387:25">(<expr pos:start="387:9" pos:end="387:24"><name pos:start="387:9" pos:end="387:24"><name pos:start="387:9" pos:end="387:10">rt</name><operator pos:start="387:11" pos:end="387:12">-&gt;</operator><name pos:start="387:13" pos:end="387:24">do_reconnect</name></name></expr>)</condition> <block pos:start="387:27" pos:end="403:5">{<block_content pos:start="389:9" pos:end="401:23">

        <expr_stmt pos:start="389:9" pos:end="389:32"><expr pos:start="389:9" pos:end="389:31"><call pos:start="389:9" pos:end="389:31"><name pos:start="389:9" pos:end="389:19">ffurl_close</name><argument_list pos:start="389:20" pos:end="389:31">(<argument pos:start="389:21" pos:end="389:30"><expr pos:start="389:21" pos:end="389:30"><name pos:start="389:21" pos:end="389:30"><name pos:start="389:21" pos:end="389:22">rt</name><operator pos:start="389:23" pos:end="389:24">-&gt;</operator><name pos:start="389:25" pos:end="389:30">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:32"><expr pos:start="391:9" pos:end="391:31"><name pos:start="391:9" pos:end="391:18"><name pos:start="391:9" pos:end="391:10">rt</name><operator pos:start="391:11" pos:end="391:12">-&gt;</operator><name pos:start="391:13" pos:end="391:18">stream</name></name>       <operator pos:start="391:26" pos:end="391:26">=</operator> <name pos:start="391:28" pos:end="391:31">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:29"><expr pos:start="393:9" pos:end="393:28"><name pos:start="393:9" pos:end="393:24"><name pos:start="393:9" pos:end="393:10">rt</name><operator pos:start="393:11" pos:end="393:12">-&gt;</operator><name pos:start="393:13" pos:end="393:24">do_reconnect</name></name> <operator pos:start="393:26" pos:end="393:26">=</operator> <literal type="number" pos:start="393:28" pos:end="393:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:29"><expr pos:start="395:9" pos:end="395:28"><name pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:10">rt</name><operator pos:start="395:11" pos:end="395:12">-&gt;</operator><name pos:start="395:13" pos:end="395:22">nb_invokes</name></name>   <operator pos:start="395:26" pos:end="395:26">=</operator> <literal type="number" pos:start="395:28" pos:end="395:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:54"><expr pos:start="397:9" pos:end="397:53"><call pos:start="397:9" pos:end="397:53"><name pos:start="397:9" pos:end="397:14">memset</name><argument_list pos:start="397:15" pos:end="397:53">(<argument pos:start="397:16" pos:end="397:27"><expr pos:start="397:16" pos:end="397:27"><name pos:start="397:16" pos:end="397:27"><name pos:start="397:16" pos:end="397:17">rt</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:27">prev_pkt</name></name></expr></argument>, <argument pos:start="397:30" pos:end="397:30"><expr pos:start="397:30" pos:end="397:30"><literal type="number" pos:start="397:30" pos:end="397:30">0</literal></expr></argument>, <argument pos:start="397:33" pos:end="397:52"><expr pos:start="397:33" pos:end="397:52"><sizeof pos:start="397:33" pos:end="397:52">sizeof<argument_list pos:start="397:39" pos:end="397:52">(<argument pos:start="397:40" pos:end="397:51"><expr pos:start="397:40" pos:end="397:51"><name pos:start="397:40" pos:end="397:51"><name pos:start="397:40" pos:end="397:41">rt</name><operator pos:start="397:42" pos:end="397:43">-&gt;</operator><name pos:start="397:44" pos:end="397:51">prev_pkt</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:33"><expr pos:start="399:9" pos:end="399:32"><call pos:start="399:9" pos:end="399:32"><name pos:start="399:9" pos:end="399:28">free_tracked_methods</name><argument_list pos:start="399:29" pos:end="399:32">(<argument pos:start="399:30" pos:end="399:31"><expr pos:start="399:30" pos:end="399:31"><name pos:start="399:30" pos:end="399:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="401:9" pos:end="401:23">goto <name pos:start="401:14" pos:end="401:22">reconnect</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="407:5" pos:end="429:5"><if pos:start="407:5" pos:end="419:5">if <condition pos:start="407:8" pos:end="407:21">(<expr pos:start="407:9" pos:end="407:20"><name pos:start="407:9" pos:end="407:20"><name pos:start="407:9" pos:end="407:10">rt</name><operator pos:start="407:11" pos:end="407:12">-&gt;</operator><name pos:start="407:13" pos:end="407:20">is_input</name></name></expr>)</condition> <block pos:start="407:23" pos:end="419:5">{<block_content pos:start="411:9" pos:end="417:72">

        <comment type="line" pos:start="409:9" pos:end="409:42">// generate FLV header for demuxer</comment>

        <expr_stmt pos:start="411:9" pos:end="411:26"><expr pos:start="411:9" pos:end="411:25"><name pos:start="411:9" pos:end="411:20"><name pos:start="411:9" pos:end="411:10">rt</name><operator pos:start="411:11" pos:end="411:12">-&gt;</operator><name pos:start="411:13" pos:end="411:20">flv_size</name></name> <operator pos:start="411:22" pos:end="411:22">=</operator> <literal type="number" pos:start="411:24" pos:end="411:25">13</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:62"><expr pos:start="413:9" pos:end="413:61"><name pos:start="413:9" pos:end="413:20"><name pos:start="413:9" pos:end="413:10">rt</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:20">flv_data</name></name> <operator pos:start="413:22" pos:end="413:22">=</operator> <call pos:start="413:24" pos:end="413:61"><name pos:start="413:24" pos:end="413:33">av_realloc</name><argument_list pos:start="413:34" pos:end="413:61">(<argument pos:start="413:35" pos:end="413:46"><expr pos:start="413:35" pos:end="413:46"><name pos:start="413:35" pos:end="413:46"><name pos:start="413:35" pos:end="413:36">rt</name><operator pos:start="413:37" pos:end="413:38">-&gt;</operator><name pos:start="413:39" pos:end="413:46">flv_data</name></name></expr></argument>, <argument pos:start="413:49" pos:end="413:60"><expr pos:start="413:49" pos:end="413:60"><name pos:start="413:49" pos:end="413:60"><name pos:start="413:49" pos:end="413:50">rt</name><operator pos:start="413:51" pos:end="413:52">-&gt;</operator><name pos:start="413:53" pos:end="413:60">flv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:25"><expr pos:start="415:9" pos:end="415:24"><name pos:start="415:9" pos:end="415:19"><name pos:start="415:9" pos:end="415:10">rt</name><operator pos:start="415:11" pos:end="415:12">-&gt;</operator><name pos:start="415:13" pos:end="415:19">flv_off</name></name>  <operator pos:start="415:22" pos:end="415:22">=</operator> <literal type="number" pos:start="415:24" pos:end="415:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:72"><expr pos:start="417:9" pos:end="417:71"><call pos:start="417:9" pos:end="417:71"><name pos:start="417:9" pos:end="417:14">memcpy</name><argument_list pos:start="417:15" pos:end="417:71">(<argument pos:start="417:16" pos:end="417:27"><expr pos:start="417:16" pos:end="417:27"><name pos:start="417:16" pos:end="417:27"><name pos:start="417:16" pos:end="417:17">rt</name><operator pos:start="417:18" pos:end="417:19">-&gt;</operator><name pos:start="417:20" pos:end="417:27">flv_data</name></name></expr></argument>, <argument pos:start="417:30" pos:end="417:56"><expr pos:start="417:30" pos:end="417:56"><literal type="string" pos:start="417:30" pos:end="417:56">"FLV\1\5\0\0\0\011\0\0\0\0"</literal></expr></argument>, <argument pos:start="417:59" pos:end="417:70"><expr pos:start="417:59" pos:end="417:70"><name pos:start="417:59" pos:end="417:70"><name pos:start="417:59" pos:end="417:60">rt</name><operator pos:start="417:61" pos:end="417:62">-&gt;</operator><name pos:start="417:63" pos:end="417:70">flv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="419:7" pos:end="429:5">else <block pos:start="419:12" pos:end="429:5">{<block_content pos:start="421:9" pos:end="427:28">

        <expr_stmt pos:start="421:9" pos:end="421:25"><expr pos:start="421:9" pos:end="421:24"><name pos:start="421:9" pos:end="421:20"><name pos:start="421:9" pos:end="421:10">rt</name><operator pos:start="421:11" pos:end="421:12">-&gt;</operator><name pos:start="421:13" pos:end="421:20">flv_size</name></name> <operator pos:start="421:22" pos:end="421:22">=</operator> <literal type="number" pos:start="421:24" pos:end="421:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:28"><expr pos:start="423:9" pos:end="423:27"><name pos:start="423:9" pos:end="423:20"><name pos:start="423:9" pos:end="423:10">rt</name><operator pos:start="423:11" pos:end="423:12">-&gt;</operator><name pos:start="423:13" pos:end="423:20">flv_data</name></name> <operator pos:start="423:22" pos:end="423:22">=</operator> <name pos:start="423:24" pos:end="423:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:25"><expr pos:start="425:9" pos:end="425:24"><name pos:start="425:9" pos:end="425:19"><name pos:start="425:9" pos:end="425:10">rt</name><operator pos:start="425:11" pos:end="425:12">-&gt;</operator><name pos:start="425:13" pos:end="425:19">flv_off</name></name>  <operator pos:start="425:22" pos:end="425:22">=</operator> <literal type="number" pos:start="425:24" pos:end="425:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:28"><expr pos:start="427:9" pos:end="427:27"><name pos:start="427:9" pos:end="427:22"><name pos:start="427:9" pos:end="427:10">rt</name><operator pos:start="427:11" pos:end="427:12">-&gt;</operator><name pos:start="427:13" pos:end="427:22">skip_bytes</name></name> <operator pos:start="427:24" pos:end="427:24">=</operator> <literal type="number" pos:start="427:26" pos:end="427:27">13</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="433:5" pos:end="433:53"><expr pos:start="433:5" pos:end="433:52"><name pos:start="433:5" pos:end="433:22"><name pos:start="433:5" pos:end="433:5">s</name><operator pos:start="433:6" pos:end="433:7">-&gt;</operator><name pos:start="433:8" pos:end="433:22">max_packet_size</name></name> <operator pos:start="433:24" pos:end="433:24">=</operator> <name pos:start="433:26" pos:end="433:52"><name pos:start="433:26" pos:end="433:27">rt</name><operator pos:start="433:28" pos:end="433:29">-&gt;</operator><name pos:start="433:30" pos:end="433:35">stream</name><operator pos:start="433:36" pos:end="433:37">-&gt;</operator><name pos:start="433:38" pos:end="433:52">max_packet_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:27"><expr pos:start="435:5" pos:end="435:26"><name pos:start="435:5" pos:end="435:18"><name pos:start="435:5" pos:end="435:5">s</name><operator pos:start="435:6" pos:end="435:7">-&gt;</operator><name pos:start="435:8" pos:end="435:18">is_streamed</name></name>     <operator pos:start="435:24" pos:end="435:24">=</operator> <literal type="number" pos:start="435:26" pos:end="435:26">1</literal></expr>;</expr_stmt>

    <return pos:start="437:5" pos:end="437:13">return <expr pos:start="437:12" pos:end="437:12"><literal type="number" pos:start="437:12" pos:end="437:12">0</literal></expr>;</return>



<label pos:start="441:1" pos:end="441:5"><name pos:start="441:1" pos:end="441:4">fail</name>:</label>

    <expr_stmt pos:start="443:5" pos:end="443:24"><expr pos:start="443:5" pos:end="443:23"><call pos:start="443:5" pos:end="443:23"><name pos:start="443:5" pos:end="443:16">av_dict_free</name><argument_list pos:start="443:17" pos:end="443:23">(<argument pos:start="443:18" pos:end="443:22"><expr pos:start="443:18" pos:end="443:22"><operator pos:start="443:18" pos:end="443:18">&amp;</operator><name pos:start="443:19" pos:end="443:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:18"><expr pos:start="445:5" pos:end="445:17"><call pos:start="445:5" pos:end="445:17"><name pos:start="445:5" pos:end="445:14">rtmp_close</name><argument_list pos:start="445:15" pos:end="445:17">(<argument pos:start="445:16" pos:end="445:16"><expr pos:start="445:16" pos:end="445:16"><name pos:start="445:16" pos:end="445:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="447:5" pos:end="447:15">return <expr pos:start="447:12" pos:end="447:14"><name pos:start="447:12" pos:end="447:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
