<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25288.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">socket_listen</name><parameter_list pos:start="1:18" pos:end="1:52">(<parameter pos:start="1:19" pos:end="1:37"><decl pos:start="1:19" pos:end="1:37"><type pos:start="1:19" pos:end="1:37"><name pos:start="1:19" pos:end="1:31">SocketAddress</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">addr</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:44">Error</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:69"><expr pos:start="11:5" pos:end="11:68"><name pos:start="11:5" pos:end="11:8">opts</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:68"><name pos:start="11:12" pos:end="11:27">qemu_opts_create</name><argument_list pos:start="11:28" pos:end="11:68">(<argument pos:start="11:29" pos:end="11:44"><expr pos:start="11:29" pos:end="11:44"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:44">socket_optslist</name></expr></argument>, <argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">NULL</name></expr></argument>, <argument pos:start="11:53" pos:end="11:53"><expr pos:start="11:53" pos:end="11:53"><literal type="number" pos:start="11:53" pos:end="11:53">0</literal></expr></argument>, <argument pos:start="11:56" pos:end="11:67"><expr pos:start="11:56" pos:end="11:67"><operator pos:start="11:56" pos:end="11:56">&amp;</operator><name pos:start="11:57" pos:end="11:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="47:5">switch <condition pos:start="13:12" pos:end="13:23">(<expr pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:16">addr</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:22">kind</name></name></expr>)</condition> <block pos:start="13:25" pos:end="47:5">{<block_content pos:start="15:5" pos:end="45:16">

    <case pos:start="15:5" pos:end="15:34">case <expr pos:start="15:10" pos:end="15:33"><name pos:start="15:10" pos:end="15:33">SOCKET_ADDRESS_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><call pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:25">inet_addr_to_opts</name><argument_list pos:start="17:26" pos:end="17:43">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">opts</name></expr></argument>, <argument pos:start="17:33" pos:end="17:42"><expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:36">addr</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:42">inet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:10">fd</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:44"><name pos:start="19:14" pos:end="19:29">inet_listen_opts</name><argument_list pos:start="19:30" pos:end="19:44">(<argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">opts</name></expr></argument>, <argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>



    <case pos:start="25:5" pos:end="25:34">case <expr pos:start="25:10" pos:end="25:33"><name pos:start="25:10" pos:end="25:33">SOCKET_ADDRESS_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:20">qemu_opt_set</name><argument_list pos:start="27:21" pos:end="27:68">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">opts</name></expr></argument>, <argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><literal type="string" pos:start="27:28" pos:end="27:33">"path"</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:53"><expr pos:start="27:36" pos:end="27:53"><name pos:start="27:36" pos:end="27:53"><name pos:start="27:36" pos:end="27:39">addr</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">q_unix</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:53">path</name></name></expr></argument>, <argument pos:start="27:56" pos:end="27:67"><expr pos:start="27:56" pos:end="27:67"><operator pos:start="27:56" pos:end="27:56">&amp;</operator><name pos:start="27:57" pos:end="27:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:10">fd</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:41"><name pos:start="29:14" pos:end="29:29">unix_listen_opts</name><argument_list pos:start="29:30" pos:end="29:41">(<argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">opts</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>



    <case pos:start="35:5" pos:end="35:32">case <expr pos:start="35:10" pos:end="35:31"><name pos:start="35:10" pos:end="35:31">SOCKET_ADDRESS_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:58"><expr pos:start="37:9" pos:end="37:57"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:57"><name pos:start="37:14" pos:end="37:27">monitor_get_fd</name><argument_list pos:start="37:28" pos:end="37:57">(<argument pos:start="37:29" pos:end="37:35"><expr pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:35">cur_mon</name></expr></argument>, <argument pos:start="37:38" pos:end="37:50"><expr pos:start="37:38" pos:end="37:50"><name pos:start="37:38" pos:end="37:50"><name pos:start="37:38" pos:end="37:41">addr</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:45">fd</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:50">str</name></name></expr></argument>, <argument pos:start="37:53" pos:end="37:56"><expr pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:56">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <default pos:start="43:5" pos:end="43:12">default:</default>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:13">abort</name><argument_list pos:start="45:14" pos:end="45:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:17">qemu_opts_del</name><argument_list pos:start="49:18" pos:end="49:23">(<argument pos:start="49:19" pos:end="49:22"><expr pos:start="49:19" pos:end="49:22"><name pos:start="49:19" pos:end="49:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:14">return <expr pos:start="51:12" pos:end="51:13"><name pos:start="51:12" pos:end="51:13">fd</name></expr>;</return>

</block_content>}</block></function>
</unit>
