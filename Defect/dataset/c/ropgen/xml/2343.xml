<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2343.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:23">get_cmd</name><parameter_list pos:start="1:24" pos:end="1:50">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">ESPState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:19">dmalen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">target</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:61"><expr pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:10">dmalen</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:31"><name pos:start="11:14" pos:end="11:14">s</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:21">rregs</name><index pos:start="11:22" pos:end="11:31">[<expr pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:30">ESP_TCLO</name></expr>]</index></name> <operator pos:start="11:33" pos:end="11:33">|</operator> <operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:54"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:43">rregs</name><index pos:start="11:44" pos:end="11:54">[<expr pos:start="11:45" pos:end="11:53"><name pos:start="11:45" pos:end="11:53">ESP_TCMID</name></expr>]</index></name> <operator pos:start="11:56" pos:end="11:57">&lt;&lt;</operator> <literal type="number" pos:start="11:59" pos:end="11:59">8</literal><operator pos:start="11:60" pos:end="11:60">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">target</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:33"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:21">wregs</name><index pos:start="13:22" pos:end="13:33">[<expr pos:start="13:23" pos:end="13:32"><name pos:start="13:23" pos:end="13:32">ESP_WBUSID</name></expr>]</index></name> <operator pos:start="13:35" pos:end="13:35">&amp;</operator> <literal type="number" pos:start="13:37" pos:end="13:37">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><call pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:58">(<argument pos:start="15:13" pos:end="15:41"><expr pos:start="15:13" pos:end="15:41"><literal type="string" pos:start="15:13" pos:end="15:41">"get_cmd: len %d target %d\n"</literal></expr></argument>, <argument pos:start="15:44" pos:end="15:49"><expr pos:start="15:44" pos:end="15:49"><name pos:start="15:44" pos:end="15:49">dmalen</name></expr></argument>, <argument pos:start="15:52" pos:end="15:57"><expr pos:start="15:52" pos:end="15:57"><name pos:start="15:52" pos:end="15:57">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">dma</name></name></expr>)</condition> <block pos:start="17:17" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:55">

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:26">dma_memory_read</name></name><argument_list pos:start="19:27" pos:end="19:54">(<argument pos:start="19:28" pos:end="19:40"><expr pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:40">dma_opaque</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><name pos:start="19:43" pos:end="19:45">buf</name></expr></argument>, <argument pos:start="19:48" pos:end="19:53"><expr pos:start="19:48" pos:end="19:53"><name pos:start="19:48" pos:end="19:53">dmalen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="29:5">else <block pos:start="21:12" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:17">

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">buf</name><index pos:start="23:12" pos:end="23:14">[<expr pos:start="23:13" pos:end="23:13"><literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>]</index></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:42">(<argument pos:start="25:16" pos:end="25:22"><expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:19">buf</name><index pos:start="25:20" pos:end="25:22">[<expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:25" pos:end="25:33"><expr pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:33">ti_buf</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:41"><expr pos:start="25:36" pos:end="25:41"><name pos:start="25:36" pos:end="25:41">dmalen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:14">dmalen</name><operator pos:start="27:15" pos:end="27:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">ti_size</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">ti_rptr</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">ti_wptr</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:22">current_dev</name></name></expr>)</condition> <block pos:start="41:25" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:25">

        <comment type="block" pos:start="43:9" pos:end="43:77">/* Started a new command before the old one finished.  Cancel it.  */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:53"><expr pos:start="45:9" pos:end="45:52"><call pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">current_dev</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:33">cancel_io</name></name><argument_list pos:start="45:34" pos:end="45:52">(<argument pos:start="45:35" pos:end="45:48"><expr pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:48">current_dev</name></name></expr></argument>, <argument pos:start="45:51" pos:end="45:51"><expr pos:start="45:51" pos:end="45:51"><literal type="number" pos:start="45:51" pos:end="45:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:25"><expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">async_len</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="67:5"><if pos:start="53:5" pos:end="67:5">if <condition pos:start="53:8" pos:end="53:55">(<expr pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:14">target</name> <operator pos:start="53:16" pos:end="53:17">&gt;=</operator> <name pos:start="53:19" pos:end="53:30">ESP_MAX_DEVS</name> <operator pos:start="53:32" pos:end="53:33">||</operator> <operator pos:start="53:35" pos:end="53:35">!</operator><name pos:start="53:36" pos:end="53:54"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:46">scsi_dev</name><index pos:start="53:47" pos:end="53:54">[<expr pos:start="53:48" pos:end="53:53"><name pos:start="53:48" pos:end="53:53">target</name></expr>]</index></name></expr>)</condition> <block pos:start="53:57" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:17">

        <comment type="line" pos:start="55:9" pos:end="55:24">// No such drive</comment>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:16">rregs</name><index pos:start="57:17" pos:end="57:27">[<expr pos:start="57:18" pos:end="57:26"><name pos:start="57:18" pos:end="57:26">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">rregs</name><index pos:start="59:17" pos:end="59:27">[<expr pos:start="59:18" pos:end="59:26"><name pos:start="59:18" pos:end="59:26">ESP_RINTR</name></expr>]</index></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:37">INTR_DC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:16">rregs</name><index pos:start="61:17" pos:end="61:26">[<expr pos:start="61:18" pos:end="61:25"><name pos:start="61:18" pos:end="61:25">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:34">SEQ_0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><call pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:21">esp_raise_irq</name><argument_list pos:start="63:22" pos:end="63:24">(<argument pos:start="63:23" pos:end="63:23"><expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:18">current_dev</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:32">scsi_dev</name><index pos:start="69:33" pos:end="69:40">[<expr pos:start="69:34" pos:end="69:39"><name pos:start="69:34" pos:end="69:39">target</name></expr>]</index></name></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:18">return <expr pos:start="71:12" pos:end="71:17"><name pos:start="71:12" pos:end="71:17">dmalen</name></expr>;</return>

</block_content>}</block></function>
</unit>
