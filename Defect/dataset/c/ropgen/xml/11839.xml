<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11839.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">smbios_build_type_0_fields</name><parameter_list pos:start="1:39" pos:end="1:54">(<parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:47">QemuOpts</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:23">major</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:17"/><name pos:start="7:26" pos:end="7:30">minor</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:7">val</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:38"><name pos:start="11:11" pos:end="11:22">qemu_opt_get</name><argument_list pos:start="11:23" pos:end="11:38">(<argument pos:start="11:24" pos:end="11:27"><expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">opts</name></expr></argument>, <argument pos:start="11:30" pos:end="11:37"><expr pos:start="11:30" pos:end="11:37"><literal type="string" pos:start="11:30" pos:end="11:37">"vendor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">val</name></expr>)</condition> <block pos:start="13:14" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:47">

        <expr_stmt pos:start="15:9" pos:end="17:47"><expr pos:start="15:9" pos:end="17:46"><call pos:start="15:9" pos:end="17:46"><name pos:start="15:9" pos:end="15:24">smbios_add_field</name><argument_list pos:start="15:25" pos:end="17:46">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></argument>, <argument pos:start="15:29" pos:end="15:70"><expr pos:start="15:29" pos:end="15:70"><call pos:start="15:29" pos:end="15:70"><name pos:start="15:29" pos:end="15:36">offsetof</name><argument_list pos:start="15:37" pos:end="15:70">(<argument pos:start="15:38" pos:end="15:57"><expr pos:start="15:38" pos:end="15:57">struct <name pos:start="15:45" pos:end="15:57">smbios_type_0</name></expr></argument>, <argument pos:start="15:60" pos:end="15:69"><expr pos:start="15:60" pos:end="15:69"><name pos:start="15:60" pos:end="15:69">vendor_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">val</name></expr></argument>, <argument pos:start="17:31" pos:end="17:45"><expr pos:start="17:31" pos:end="17:45"><call pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:36">strlen</name><argument_list pos:start="17:37" pos:end="17:41">(<argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">val</name></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:43">+</operator> <literal type="number" pos:start="17:45" pos:end="17:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:7">val</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:39"><name pos:start="21:11" pos:end="21:22">qemu_opt_get</name><argument_list pos:start="21:23" pos:end="21:39">(<argument pos:start="21:24" pos:end="21:27"><expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">opts</name></expr></argument>, <argument pos:start="21:30" pos:end="21:38"><expr pos:start="21:30" pos:end="21:38"><literal type="string" pos:start="21:30" pos:end="21:38">"version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">val</name></expr>)</condition> <block pos:start="23:14" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:47">

        <expr_stmt pos:start="25:9" pos:end="27:47"><expr pos:start="25:9" pos:end="27:46"><call pos:start="25:9" pos:end="27:46"><name pos:start="25:9" pos:end="25:24">smbios_add_field</name><argument_list pos:start="25:25" pos:end="27:46">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr></argument>, <argument pos:start="25:29" pos:end="25:76"><expr pos:start="25:29" pos:end="25:76"><call pos:start="25:29" pos:end="25:76"><name pos:start="25:29" pos:end="25:36">offsetof</name><argument_list pos:start="25:37" pos:end="25:76">(<argument pos:start="25:38" pos:end="25:57"><expr pos:start="25:38" pos:end="25:57">struct <name pos:start="25:45" pos:end="25:57">smbios_type_0</name></expr></argument>, <argument pos:start="25:60" pos:end="25:75"><expr pos:start="25:60" pos:end="25:75"><name pos:start="25:60" pos:end="25:75">bios_version_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">val</name></expr></argument>, <argument pos:start="27:31" pos:end="27:45"><expr pos:start="27:31" pos:end="27:45"><call pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:36">strlen</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">val</name></expr></argument>)</argument_list></call> <operator pos:start="27:43" pos:end="27:43">+</operator> <literal type="number" pos:start="27:45" pos:end="27:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:7">val</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:36"><name pos:start="31:11" pos:end="31:22">qemu_opt_get</name><argument_list pos:start="31:23" pos:end="31:36">(<argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><name pos:start="31:24" pos:end="31:27">opts</name></expr></argument>, <argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><literal type="string" pos:start="31:30" pos:end="31:35">"date"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:12">(<expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">val</name></expr>)</condition> <block pos:start="33:14" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:47">

        <expr_stmt pos:start="35:9" pos:end="39:47"><expr pos:start="35:9" pos:end="39:46"><call pos:start="35:9" pos:end="39:46"><name pos:start="35:9" pos:end="35:24">smbios_add_field</name><argument_list pos:start="35:25" pos:end="39:46">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr></argument>, <argument pos:start="35:29" pos:end="37:59"><expr pos:start="35:29" pos:end="37:59"><call pos:start="35:29" pos:end="37:59"><name pos:start="35:29" pos:end="35:36">offsetof</name><argument_list pos:start="35:37" pos:end="37:59">(<argument pos:start="35:38" pos:end="35:57"><expr pos:start="35:38" pos:end="35:57">struct <name pos:start="35:45" pos:end="35:57">smbios_type_0</name></expr></argument>,

                                     <argument pos:start="37:38" pos:end="37:58"><expr pos:start="37:38" pos:end="37:58"><name pos:start="37:38" pos:end="37:58">bios_release_date_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><name pos:start="39:26" pos:end="39:28">val</name></expr></argument>, <argument pos:start="39:31" pos:end="39:45"><expr pos:start="39:31" pos:end="39:45"><call pos:start="39:31" pos:end="39:41"><name pos:start="39:31" pos:end="39:36">strlen</name><argument_list pos:start="39:37" pos:end="39:41">(<argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">val</name></expr></argument>)</argument_list></call> <operator pos:start="39:43" pos:end="39:43">+</operator> <literal type="number" pos:start="39:45" pos:end="39:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:7">val</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:39"><name pos:start="43:11" pos:end="43:22">qemu_opt_get</name><argument_list pos:start="43:23" pos:end="43:39">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">opts</name></expr></argument>, <argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><literal type="string" pos:start="43:30" pos:end="43:38">"release"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="67:5"><if pos:start="45:5" pos:end="67:5">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">val</name></expr>)</condition> <block pos:start="45:14" pos:end="67:5">{<block_content pos:start="47:9" pos:end="65:36">

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:58">(<expr pos:start="47:13" pos:end="47:57"><call pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:18">sscanf</name><argument_list pos:start="47:19" pos:end="47:52">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">val</name></expr></argument>, <argument pos:start="47:25" pos:end="47:35"><expr pos:start="47:25" pos:end="47:35"><literal type="string" pos:start="47:25" pos:end="47:35">"%hhu.%hhu"</literal></expr></argument>, <argument pos:start="47:38" pos:end="47:43"><expr pos:start="47:38" pos:end="47:43"><operator pos:start="47:38" pos:end="47:38">&amp;</operator><name pos:start="47:39" pos:end="47:43">major</name></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:51">minor</name></expr></argument>)</argument_list></call> <operator pos:start="47:54" pos:end="47:55">!=</operator> <literal type="number" pos:start="47:57" pos:end="47:57">2</literal></expr>)</condition> <block pos:start="47:60" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:20">

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:24">error_report</name><argument_list pos:start="49:25" pos:end="49:43">(<argument pos:start="49:26" pos:end="49:42"><expr pos:start="49:26" pos:end="49:42"><literal type="string" pos:start="49:26" pos:end="49:42">"Invalid release"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:19"><call pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:16">exit</name><argument_list pos:start="51:17" pos:end="51:19">(<argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="59:36"><expr pos:start="55:9" pos:end="59:35"><call pos:start="55:9" pos:end="59:35"><name pos:start="55:9" pos:end="55:24">smbios_add_field</name><argument_list pos:start="55:25" pos:end="59:35">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr></argument>, <argument pos:start="55:29" pos:end="57:63"><expr pos:start="55:29" pos:end="57:63"><call pos:start="55:29" pos:end="57:63"><name pos:start="55:29" pos:end="55:36">offsetof</name><argument_list pos:start="55:37" pos:end="57:63">(<argument pos:start="55:38" pos:end="55:57"><expr pos:start="55:38" pos:end="55:57">struct <name pos:start="55:45" pos:end="55:57">smbios_type_0</name></expr></argument>,

                                     <argument pos:start="57:38" pos:end="57:62"><expr pos:start="57:38" pos:end="57:62"><name pos:start="57:38" pos:end="57:62">system_bios_major_release</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="59:26" pos:end="59:31"><expr pos:start="59:26" pos:end="59:31"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:31">major</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="65:36"><expr pos:start="61:9" pos:end="65:35"><call pos:start="61:9" pos:end="65:35"><name pos:start="61:9" pos:end="61:24">smbios_add_field</name><argument_list pos:start="61:25" pos:end="65:35">(<argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr></argument>, <argument pos:start="61:29" pos:end="63:63"><expr pos:start="61:29" pos:end="63:63"><call pos:start="61:29" pos:end="63:63"><name pos:start="61:29" pos:end="61:36">offsetof</name><argument_list pos:start="61:37" pos:end="63:63">(<argument pos:start="61:38" pos:end="61:57"><expr pos:start="61:38" pos:end="61:57">struct <name pos:start="61:45" pos:end="61:57">smbios_type_0</name></expr></argument>,

                                     <argument pos:start="63:38" pos:end="63:62"><expr pos:start="63:38" pos:end="63:62"><name pos:start="63:38" pos:end="63:62">system_bios_minor_release</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="65:26" pos:end="65:31"><expr pos:start="65:26" pos:end="65:31"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:31">minor</name></expr></argument>, <argument pos:start="65:34" pos:end="65:34"><expr pos:start="65:34" pos:end="65:34"><literal type="number" pos:start="65:34" pos:end="65:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
