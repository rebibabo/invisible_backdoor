<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12861.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">libspeex_decode_init</name><parameter_list pos:start="1:40" pos:end="1:62">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">LibSpeexContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:19">SpeexMode</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">mode</name></decl>;</decl_stmt>



    <comment type="line" pos:start="11:5" pos:end="11:47">// defaults in the case of a missing header</comment>

    <if_stmt pos:start="13:5" pos:end="23:31"><if pos:start="13:5" pos:end="15:30">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:26">sample_rate</name></name> <operator pos:start="13:28" pos:end="13:29">&lt;=</operator> <literal type="number" pos:start="13:31" pos:end="13:34">8000</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:30"><block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:12">mode</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">&amp;</operator><name pos:start="15:17" pos:end="15:29">speex_nb_mode</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="17:5" pos:end="19:30">else if <condition pos:start="17:13" pos:end="17:41">(<expr pos:start="17:14" pos:end="17:40"><name pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:18">avctx</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:31">sample_rate</name></name> <operator pos:start="17:33" pos:end="17:34">&lt;=</operator> <literal type="number" pos:start="17:36" pos:end="17:40">16000</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:12">mode</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <operator pos:start="19:16" pos:end="19:16">&amp;</operator><name pos:start="19:17" pos:end="19:29">speex_wb_mode</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:31">else<block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:12">mode</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:30">speex_uwb_mode</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:84"><if pos:start="27:5" pos:end="29:84">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:29">extradata_size</name></name> <operator pos:start="27:31" pos:end="27:32">&gt;=</operator> <literal type="number" pos:start="27:34" pos:end="27:35">80</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:84"><block_content pos:start="29:9" pos:end="29:84">

        <expr_stmt pos:start="29:9" pos:end="29:84"><expr pos:start="29:9" pos:end="29:83"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">header</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:83"><name pos:start="29:21" pos:end="29:42">speex_packet_to_header</name><argument_list pos:start="29:43" pos:end="29:83">(<argument pos:start="29:44" pos:end="29:59"><expr pos:start="29:44" pos:end="29:59"><name pos:start="29:44" pos:end="29:59"><name pos:start="29:44" pos:end="29:48">avctx</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:59">extradata</name></name></expr></argument>, <argument pos:start="29:62" pos:end="29:82"><expr pos:start="29:62" pos:end="29:82"><name pos:start="29:62" pos:end="29:82"><name pos:start="29:62" pos:end="29:66">avctx</name><operator pos:start="29:67" pos:end="29:68">-&gt;</operator><name pos:start="29:69" pos:end="29:82">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">sample_fmt</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="57:81"><if pos:start="35:5" pos:end="55:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">header</name></name></expr>)</condition> <block pos:start="35:20" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:9">

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:13">avctx</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:26">sample_rate</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:38">header</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:44">rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">channels</name></name>    <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:51"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:38">header</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:51">nb_channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">frame_size</name></name>      <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:50"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:38">header</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:50">frame_size</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:12">mode</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:50"><name pos:start="45:16" pos:end="45:33">speex_lib_get_mode</name><argument_list pos:start="45:34" pos:end="45:50">(<argument pos:start="45:35" pos:end="45:49"><expr pos:start="45:35" pos:end="45:49"><name pos:start="45:35" pos:end="45:49"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:43">header</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:49">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:18">(<expr pos:start="47:13" pos:end="47:17"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:17">mode</name></expr>)</condition> <block pos:start="47:20" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:39">

            <expr_stmt pos:start="49:13" pos:end="49:82"><expr pos:start="49:13" pos:end="49:81"><call pos:start="49:13" pos:end="49:81"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:81">(<argument pos:start="49:20" pos:end="49:24"><expr pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:24">avctx</name></expr></argument>, <argument pos:start="49:27" pos:end="49:38"><expr pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:41" pos:end="49:63"><expr pos:start="49:41" pos:end="49:63"><literal type="string" pos:start="49:41" pos:end="49:63">"Unknown Speex mode %d"</literal></expr></argument>, <argument pos:start="49:66" pos:end="49:80"><expr pos:start="49:66" pos:end="49:80"><name pos:start="49:66" pos:end="49:80"><name pos:start="49:66" pos:end="49:66">s</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:74">header</name><operator pos:start="49:75" pos:end="49:76">-&gt;</operator><name pos:start="49:77" pos:end="49:80">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="57:81">else<block type="pseudo" pos:start="57:9" pos:end="57:81"><block_content pos:start="57:9" pos:end="57:81">

        <expr_stmt pos:start="57:9" pos:end="57:81"><expr pos:start="57:9" pos:end="57:80"><call pos:start="57:9" pos:end="57:80"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:80">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">avctx</name></expr></argument>, <argument pos:start="57:23" pos:end="57:33"><expr pos:start="57:23" pos:end="57:33"><name pos:start="57:23" pos:end="57:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="57:36" pos:end="57:79"><expr pos:start="57:36" pos:end="57:79"><literal type="string" pos:start="57:36" pos:end="57:79">"Missing Speex header, assuming defaults.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:28">(<expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:13">avctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:23">channels</name></name> <operator pos:start="61:25" pos:end="61:25">&gt;</operator> <literal type="number" pos:start="61:27" pos:end="61:27">2</literal></expr>)</condition> <block pos:start="61:30" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:31">

        <expr_stmt pos:start="63:9" pos:end="63:77"><expr pos:start="63:9" pos:end="63:76"><call pos:start="63:9" pos:end="63:76"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:76">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">avctx</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:75"><expr pos:start="63:37" pos:end="63:75"><literal type="string" pos:start="63:37" pos:end="63:75">"Only stereo and mono are supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:31">return <expr pos:start="65:16" pos:end="65:30"><call pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:30"><expr pos:start="71:5" pos:end="71:29"><call pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:19">speex_bits_init</name><argument_list pos:start="71:20" pos:end="71:29">(<argument pos:start="71:21" pos:end="71:28"><expr pos:start="71:21" pos:end="71:28"><operator pos:start="71:21" pos:end="71:21">&amp;</operator><name pos:start="71:22" pos:end="71:28"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:28">bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:16">dec_state</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:43"><name pos:start="73:20" pos:end="73:37">speex_decoder_init</name><argument_list pos:start="73:38" pos:end="73:43">(<argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><name pos:start="73:39" pos:end="73:42">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:21"><name pos:start="75:10" pos:end="75:10">s</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:21">dec_state</name></name></expr>)</condition> <block pos:start="75:24" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:78"><expr pos:start="77:9" pos:end="77:77"><call pos:start="77:9" pos:end="77:77"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:77">(<argument pos:start="77:16" pos:end="77:20"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:20">avctx</name></expr></argument>, <argument pos:start="77:23" pos:end="77:34"><expr pos:start="77:23" pos:end="77:34"><name pos:start="77:23" pos:end="77:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:37" pos:end="77:76"><expr pos:start="77:37" pos:end="77:76"><literal type="string" pos:start="77:37" pos:end="77:76">"Error initializing libspeex decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:18">return <expr pos:start="79:16" pos:end="79:17"><operator pos:start="79:16" pos:end="79:16">-</operator><literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:18"><name pos:start="85:10" pos:end="85:10">s</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:18">header</name></name></expr>)</condition> <block pos:start="85:21" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:78">

        <expr_stmt pos:start="87:9" pos:end="87:78"><expr pos:start="87:9" pos:end="87:77"><call pos:start="87:9" pos:end="87:77"><name pos:start="87:9" pos:end="87:25">speex_decoder_ctl</name><argument_list pos:start="87:26" pos:end="87:77">(<argument pos:start="87:27" pos:end="87:38"><expr pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:38">dec_state</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:60"><expr pos:start="87:41" pos:end="87:60"><name pos:start="87:41" pos:end="87:60">SPEEX_GET_FRAME_SIZE</name></expr></argument>, <argument pos:start="87:63" pos:end="87:76"><expr pos:start="87:63" pos:end="87:76"><operator pos:start="87:63" pos:end="87:63">&amp;</operator><name pos:start="87:64" pos:end="87:76"><name pos:start="87:64" pos:end="87:64">s</name><operator pos:start="87:65" pos:end="87:66">-&gt;</operator><name pos:start="87:67" pos:end="87:76">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="107:5"><if pos:start="93:5" pos:end="107:5">if <condition pos:start="93:8" pos:end="93:29">(<expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:23">channels</name></name> <operator pos:start="93:25" pos:end="93:26">==</operator> <literal type="number" pos:start="93:28" pos:end="93:28">2</literal></expr>)</condition> <block pos:start="93:31" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:70">

        <decl_stmt pos:start="95:9" pos:end="95:31"><decl pos:start="95:9" pos:end="95:30"><type pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:21">SpeexCallback</name></type> <name pos:start="95:23" pos:end="95:30">callback</name></decl>;</decl_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:51"><expr pos:start="97:9" pos:end="97:50"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:16">callback</name><operator pos:start="97:17" pos:end="97:17">.</operator><name pos:start="97:18" pos:end="97:28">callback_id</name></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <name pos:start="97:32" pos:end="97:50">SPEEX_INBAND_STEREO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:57"><expr pos:start="99:9" pos:end="99:56"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:16">callback</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:21">func</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:56">speex_std_stereo_request_handler</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:35"><expr pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:16">callback</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:21">data</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <operator pos:start="101:25" pos:end="101:25">&amp;</operator><name pos:start="101:26" pos:end="101:34"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:34">stereo</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:62"><expr pos:start="103:9" pos:end="103:61"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:17">stereo</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:37">SpeexStereoState</name><operator pos:start="103:38" pos:end="103:38">)</operator><name pos:start="103:39" pos:end="103:61">SPEEX_STEREO_STATE_INIT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:70"><expr pos:start="105:9" pos:end="105:69"><call pos:start="105:9" pos:end="105:69"><name pos:start="105:9" pos:end="105:25">speex_decoder_ctl</name><argument_list pos:start="105:26" pos:end="105:69">(<argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:27">s</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:38">dec_state</name></name></expr></argument>, <argument pos:start="105:41" pos:end="105:57"><expr pos:start="105:41" pos:end="105:57"><name pos:start="105:41" pos:end="105:57">SPEEX_SET_HANDLER</name></expr></argument>, <argument pos:start="105:60" pos:end="105:68"><expr pos:start="105:60" pos:end="105:68"><operator pos:start="105:60" pos:end="105:60">&amp;</operator><name pos:start="105:61" pos:end="105:68">callback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:42"><expr pos:start="111:5" pos:end="111:41"><call pos:start="111:5" pos:end="111:41"><name pos:start="111:5" pos:end="111:30">avcodec_get_frame_defaults</name><argument_list pos:start="111:31" pos:end="111:41">(<argument pos:start="111:32" pos:end="111:40"><expr pos:start="111:32" pos:end="111:40"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:40"><name pos:start="111:33" pos:end="111:33">s</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:9">avctx</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:22">coded_frame</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">&amp;</operator><name pos:start="113:27" pos:end="113:34"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:34">frame</name></name></expr>;</expr_stmt>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
