<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3686.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">vhost_dev_cleanup</name><parameter_list pos:start="1:23" pos:end="1:46">(<parameter pos:start="1:24" pos:end="1:45"><decl pos:start="1:24" pos:end="1:45"><type pos:start="1:24" pos:end="1:45"><name pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:39">vhost_dev</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">hdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="30:1">{<block_content pos:start="5:5" pos:end="27:49">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="11:5">for <control pos:start="7:9" pos:end="7:36">(<init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:31"><expr pos:start="7:17" pos:end="7:30"><name pos:start="7:17" pos:end="7:17">i</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <name pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:24">hdev</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:30">nvqs</name></name></expr>;</condition> <incr pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><operator pos:start="7:33" pos:end="7:34">++</operator><name pos:start="7:35" pos:end="7:35">i</name></expr></incr>)</control> <block pos:start="7:38" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:47">

        <expr_stmt pos:start="9:9" pos:end="9:47"><expr pos:start="9:9" pos:end="9:46"><call pos:start="9:9" pos:end="9:46"><name pos:start="9:9" pos:end="9:31">vhost_virtqueue_cleanup</name><argument_list pos:start="9:32" pos:end="9:46">(<argument pos:start="9:33" pos:end="9:45"><expr pos:start="9:33" pos:end="9:45"><name pos:start="9:33" pos:end="9:41"><name pos:start="9:33" pos:end="9:36">hdev</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:41">vqs</name></name> <operator pos:start="9:43" pos:end="9:43">+</operator> <name pos:start="9:45" pos:end="9:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><call pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:30">memory_listener_unregister</name><argument_list pos:start="13:31" pos:end="13:54">(<argument pos:start="13:32" pos:end="13:53"><expr pos:start="13:32" pos:end="13:53"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:53"><name pos:start="13:33" pos:end="13:36">hdev</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:53">memory_listener</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:12">hdev</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:31">migration_blocker</name></name></expr>)</condition> <block pos:start="15:34" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:44">

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:27">migrate_del_blocker</name><argument_list pos:start="17:28" pos:end="17:52">(<argument pos:start="17:29" pos:end="17:51"><expr pos:start="17:29" pos:end="17:51"><name pos:start="17:29" pos:end="17:51"><name pos:start="17:29" pos:end="17:32">hdev</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:51">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:18">error_free</name><argument_list pos:start="19:19" pos:end="19:43">(<argument pos:start="19:20" pos:end="19:42"><expr pos:start="19:20" pos:end="19:42"><name pos:start="19:20" pos:end="19:42"><name pos:start="19:20" pos:end="19:23">hdev</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:42">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">g_free</name><argument_list pos:start="23:11" pos:end="23:21">(<argument pos:start="23:12" pos:end="23:20"><expr pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:15">hdev</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:10">g_free</name><argument_list pos:start="25:11" pos:end="25:30">(<argument pos:start="25:12" pos:end="25:29"><expr pos:start="25:12" pos:end="25:29"><name pos:start="25:12" pos:end="25:29"><name pos:start="25:12" pos:end="25:15">hdev</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:29">mem_sections</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:8">hdev</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:19">vhost_ops</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:42">vhost_backend_cleanup</name></name><argument_list pos:start="27:43" pos:end="27:48">(<argument pos:start="27:44" pos:end="27:47"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:47">hdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


</block_content>}</block></function></unit>
