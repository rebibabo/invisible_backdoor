<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17586.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vc1_decode_b_mb</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">VC1Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:18" pos:end="13:41">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">mb_has_coeffs</name> <init pos:start="19:23" pos:end="19:25">= <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="19:28" pos:end="19:42">/* last_flag */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">index</name></decl>, <decl pos:start="21:16" pos:end="21:21"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="21:24" pos:end="21:40">/* LUT indexes */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">val</name></decl>, <decl pos:start="23:14" pos:end="23:17"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:14" pos:end="23:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="23:20" pos:end="23:36">/* temp values */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:19">first_block</name> <init pos:start="25:21" pos:end="25:23">= <expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:21"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:15">dst_idx</name></decl>, <decl pos:start="27:18" pos:end="27:20"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:18" pos:end="27:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:15">skipped</name></decl>, <decl pos:start="29:18" pos:end="29:23"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:18" pos:end="29:23">direct</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:16"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:13">dmv_x</name><index pos:start="31:14" pos:end="31:16">[<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">2</literal></expr>]</index></name></decl>, <decl pos:start="31:19" pos:end="31:26"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:23">dmv_y</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:36"><decl pos:start="33:5" pos:end="33:35"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:15">bmvtype</name> <init pos:start="33:17" pos:end="33:35">= <expr pos:start="33:19" pos:end="33:35"><name pos:start="33:19" pos:end="33:35">BMV_TYPE_BACKWARD</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:10">mquant</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">v</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:18">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="37:21" pos:end="37:46">/* Loosy initialization */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:15">mb_intra</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:44"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:22">(<expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">v</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">dmb_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:14">direct</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:26">get_bits1</name><argument_list pos:start="45:27" pos:end="45:30">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:44">else<block type="pseudo" pos:start="49:9" pos:end="49:44"><block_content pos:start="49:9" pos:end="49:44">

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:14">direct</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:43"><name pos:start="49:18" pos:end="49:18">v</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:35">direct_mb_plane</name><index pos:start="49:36" pos:end="49:43">[<expr pos:start="49:37" pos:end="49:42"><name pos:start="49:37" pos:end="49:42">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="51:5" pos:end="57:44"><if pos:start="51:5" pos:end="53:32">if <condition pos:start="51:8" pos:end="51:23">(<expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:9">v</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">skip_is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:32"><block_content pos:start="53:9" pos:end="53:32">

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:15">skipped</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:27">get_bits1</name><argument_list pos:start="53:28" pos:end="53:31">(<argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><name pos:start="53:29" pos:end="53:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:44">else<block type="pseudo" pos:start="57:9" pos:end="57:44"><block_content pos:start="57:9" pos:end="57:44">

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:15">skipped</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:43"><name pos:start="57:19" pos:end="57:19">v</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:35">mbskip_table</name><index pos:start="57:36" pos:end="57:43">[<expr pos:start="57:37" pos:end="57:42"><name pos:start="57:37" pos:end="57:42">mb_pos</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:9">dmv_x</name><index pos:start="61:10" pos:end="61:12">[<expr pos:start="61:11" pos:end="61:11"><literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>]</index></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:20">dmv_x</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">1</literal></expr>]</index></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:34"><name pos:start="61:27" pos:end="61:31">dmv_y</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>]</index></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:45"><name pos:start="61:38" pos:end="61:42">dmv_y</name><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name> <operator pos:start="61:47" pos:end="61:47">=</operator> <literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="69:5">for<control pos:start="63:8" pos:end="63:26">(<init pos:start="63:9" pos:end="63:14"><expr pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:13">0</literal></expr>;</init> <condition pos:start="63:16" pos:end="63:21"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:16">i</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <literal type="number" pos:start="63:20" pos:end="63:20">6</literal></expr>;</condition> <incr pos:start="63:23" pos:end="63:25"><expr pos:start="63:23" pos:end="63:25"><name pos:start="63:23" pos:end="63:23">i</name><operator pos:start="63:24" pos:end="63:25">++</operator></expr></incr>)</control> <block pos:start="63:28" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:44">

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:9">v</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:18">mb_type</name><index pos:start="65:19" pos:end="65:21">[<expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>]</index><index pos:start="65:22" pos:end="65:40">[<expr pos:start="65:23" pos:end="65:39"><name pos:start="65:23" pos:end="65:39"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:36">block_index</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="65:42" pos:end="65:42">=</operator> <literal type="number" pos:start="65:44" pos:end="65:44">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:17">dc_val</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>]</index><index pos:start="67:21" pos:end="67:39">[<expr pos:start="67:22" pos:end="67:38"><name pos:start="67:22" pos:end="67:38"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:35">block_index</name><index pos:start="67:36" pos:end="67:38">[<expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="67:41" pos:end="67:41">=</operator> <literal type="number" pos:start="67:43" pos:end="67:43">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:43"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:22">current_picture</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:35">qscale_table</name><index pos:start="71:36" pos:end="71:43">[<expr pos:start="71:37" pos:end="71:42"><name pos:start="71:37" pos:end="71:42">mb_pos</name></expr>]</index></name> <operator pos:start="71:45" pos:end="71:45">=</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="115:5"><if pos:start="75:5" pos:end="115:5">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:15">direct</name></expr>)</condition> <block pos:start="75:18" pos:end="115:5">{<block_content pos:start="77:9" pos:end="113:9">

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="85:9">if <condition pos:start="77:12" pos:end="77:21">(<expr pos:start="77:13" pos:end="77:20"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:20">skipped</name></expr>)</condition> <block pos:start="77:23" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:32">

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><call pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:22">GET_MVDATA</name><argument_list pos:start="79:23" pos:end="79:42">(<argument pos:start="79:24" pos:end="79:31"><expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:28">dmv_x</name><index pos:start="79:29" pos:end="79:31">[<expr pos:start="79:30" pos:end="79:30"><literal type="number" pos:start="79:30" pos:end="79:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:34" pos:end="79:41"><expr pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:38">dmv_y</name><index pos:start="79:39" pos:end="79:41">[<expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:32"><expr pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:17">dmv_x</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">1</literal></expr>]</index></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:28">dmv_x</name><index pos:start="81:29" pos:end="81:31">[<expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:17">dmv_y</name><index pos:start="83:18" pos:end="83:20">[<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr>]</index></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:31"><name pos:start="83:24" pos:end="83:28">dmv_y</name><index pos:start="83:29" pos:end="83:31">[<expr pos:start="83:30" pos:end="83:30"><literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="113:9"><if pos:start="87:9" pos:end="113:9">if<condition pos:start="87:11" pos:end="87:35">(<expr pos:start="87:12" pos:end="87:34"><name pos:start="87:12" pos:end="87:18">skipped</name> <operator pos:start="87:20" pos:end="87:21">||</operator> <operator pos:start="87:23" pos:end="87:23">!</operator><name pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:34">mb_intra</name></name></expr>)</condition> <block pos:start="87:37" pos:end="113:9">{<block_content pos:start="89:13" pos:end="111:13">

            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:19">bmvtype</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:35"><name pos:start="89:23" pos:end="89:31">decode012</name><argument_list pos:start="89:32" pos:end="89:35">(<argument pos:start="89:33" pos:end="89:34"><expr pos:start="89:33" pos:end="89:34"><name pos:start="89:33" pos:end="89:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="91:13" pos:end="111:13">switch<condition pos:start="91:19" pos:end="91:27">(<expr pos:start="91:20" pos:end="91:26"><name pos:start="91:20" pos:end="91:26">bmvtype</name></expr>)</condition> <block pos:start="91:29" pos:end="111:13">{<block_content pos:start="93:13" pos:end="109:40">

            <case pos:start="93:13" pos:end="93:19">case <expr pos:start="93:18" pos:end="93:18"><literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>:</case>

                <expr_stmt pos:start="95:17" pos:end="95:102"><expr pos:start="95:17" pos:end="95:101"><name pos:start="95:17" pos:end="95:23">bmvtype</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <ternary pos:start="95:27" pos:end="95:101"><condition pos:start="95:27" pos:end="95:64"><expr pos:start="95:27" pos:end="95:62"><operator pos:start="95:27" pos:end="95:27">(</operator><name pos:start="95:28" pos:end="95:39"><name pos:start="95:28" pos:end="95:28">v</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:39">bfraction</name></name> <operator pos:start="95:41" pos:end="95:42">&gt;=</operator> <operator pos:start="95:44" pos:end="95:44">(</operator><name pos:start="95:45" pos:end="95:58">B_FRACTION_DEN</name><operator pos:start="95:59" pos:end="95:59">/</operator><literal type="number" pos:start="95:60" pos:end="95:60">2</literal><operator pos:start="95:61" pos:end="95:61">)</operator><operator pos:start="95:62" pos:end="95:62">)</operator></expr> ?</condition><then pos:start="95:66" pos:end="95:82"> <expr pos:start="95:66" pos:end="95:82"><name pos:start="95:66" pos:end="95:82">BMV_TYPE_BACKWARD</name></expr> </then><else pos:start="95:84" pos:end="95:101">: <expr pos:start="95:86" pos:end="95:101"><name pos:start="95:86" pos:end="95:101">BMV_TYPE_FORWARD</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            <case pos:start="99:13" pos:end="99:19">case <expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">1</literal></expr>:</case>

                <expr_stmt pos:start="101:17" pos:end="101:102"><expr pos:start="101:17" pos:end="101:101"><name pos:start="101:17" pos:end="101:23">bmvtype</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <ternary pos:start="101:27" pos:end="101:101"><condition pos:start="101:27" pos:end="101:64"><expr pos:start="101:27" pos:end="101:62"><operator pos:start="101:27" pos:end="101:27">(</operator><name pos:start="101:28" pos:end="101:39"><name pos:start="101:28" pos:end="101:28">v</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:39">bfraction</name></name> <operator pos:start="101:41" pos:end="101:42">&gt;=</operator> <operator pos:start="101:44" pos:end="101:44">(</operator><name pos:start="101:45" pos:end="101:58">B_FRACTION_DEN</name><operator pos:start="101:59" pos:end="101:59">/</operator><literal type="number" pos:start="101:60" pos:end="101:60">2</literal><operator pos:start="101:61" pos:end="101:61">)</operator><operator pos:start="101:62" pos:end="101:62">)</operator></expr> ?</condition><then pos:start="101:66" pos:end="101:81"> <expr pos:start="101:66" pos:end="101:81"><name pos:start="101:66" pos:end="101:81">BMV_TYPE_FORWARD</name></expr> </then><else pos:start="101:83" pos:end="101:101">: <expr pos:start="101:85" pos:end="101:101"><name pos:start="101:85" pos:end="101:101">BMV_TYPE_BACKWARD</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:19">case <expr pos:start="105:18" pos:end="105:18"><literal type="number" pos:start="105:18" pos:end="105:18">2</literal></expr>:</case>

                <expr_stmt pos:start="107:17" pos:end="107:48"><expr pos:start="107:17" pos:end="107:47"><name pos:start="107:17" pos:end="107:23">bmvtype</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:47">BMV_TYPE_INTERPOLATED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:21">dmv_x</name><index pos:start="109:22" pos:end="109:24">[<expr pos:start="109:23" pos:end="109:23"><literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>]</index></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:32">dmv_y</name><index pos:start="109:33" pos:end="109:35">[<expr pos:start="109:34" pos:end="109:34"><literal type="number" pos:start="109:34" pos:end="109:34">0</literal></expr>]</index></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <literal type="number" pos:start="109:39" pos:end="109:39">0</literal></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="117:5" pos:end="119:55">for<control pos:start="117:8" pos:end="117:26">(<init pos:start="117:9" pos:end="117:14"><expr pos:start="117:9" pos:end="117:13"><name pos:start="117:9" pos:end="117:9">i</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <literal type="number" pos:start="117:13" pos:end="117:13">0</literal></expr>;</init> <condition pos:start="117:16" pos:end="117:21"><expr pos:start="117:16" pos:end="117:20"><name pos:start="117:16" pos:end="117:16">i</name> <operator pos:start="117:18" pos:end="117:18">&lt;</operator> <literal type="number" pos:start="117:20" pos:end="117:20">6</literal></expr>;</condition> <incr pos:start="117:23" pos:end="117:25"><expr pos:start="117:23" pos:end="117:25"><name pos:start="117:23" pos:end="117:23">i</name><operator pos:start="117:24" pos:end="117:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:9" pos:end="119:55"><block_content pos:start="119:9" pos:end="119:55">

        <expr_stmt pos:start="119:9" pos:end="119:55"><expr pos:start="119:9" pos:end="119:54"><name pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:9">v</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:18">mb_type</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>]</index><index pos:start="119:22" pos:end="119:40">[<expr pos:start="119:23" pos:end="119:39"><name pos:start="119:23" pos:end="119:39"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:36">block_index</name><index pos:start="119:37" pos:end="119:39">[<expr pos:start="119:38" pos:end="119:38"><name pos:start="119:38" pos:end="119:38">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="119:42" pos:end="119:42">=</operator> <name pos:start="119:44" pos:end="119:54"><name pos:start="119:44" pos:end="119:44">s</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:54">mb_intra</name></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:16">(<expr pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:15">skipped</name></expr>)</condition> <block pos:start="123:18" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:15">

        <if_stmt pos:start="125:9" pos:end="125:51"><if pos:start="125:9" pos:end="125:51">if<condition pos:start="125:11" pos:end="125:18">(<expr pos:start="125:12" pos:end="125:17"><name pos:start="125:12" pos:end="125:17">direct</name></expr>)</condition><block type="pseudo" pos:start="125:20" pos:end="125:51"><block_content pos:start="125:20" pos:end="125:51"> <expr_stmt pos:start="125:20" pos:end="125:51"><expr pos:start="125:20" pos:end="125:50"><name pos:start="125:20" pos:end="125:26">bmvtype</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:50">BMV_TYPE_INTERPOLATED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:56"><expr pos:start="127:9" pos:end="127:55"><call pos:start="127:9" pos:end="127:55"><name pos:start="127:9" pos:end="127:21">vc1_pred_b_mv</name><argument_list pos:start="127:22" pos:end="127:55">(<argument pos:start="127:23" pos:end="127:23"><expr pos:start="127:23" pos:end="127:23"><name pos:start="127:23" pos:end="127:23">v</name></expr></argument>, <argument pos:start="127:26" pos:end="127:30"><expr pos:start="127:26" pos:end="127:30"><name pos:start="127:26" pos:end="127:30">dmv_x</name></expr></argument>, <argument pos:start="127:33" pos:end="127:37"><expr pos:start="127:33" pos:end="127:37"><name pos:start="127:33" pos:end="127:37">dmv_y</name></expr></argument>, <argument pos:start="127:40" pos:end="127:45"><expr pos:start="127:40" pos:end="127:45"><name pos:start="127:40" pos:end="127:45">direct</name></expr></argument>, <argument pos:start="127:48" pos:end="127:54"><expr pos:start="127:48" pos:end="127:54"><name pos:start="127:48" pos:end="127:54">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:51"><expr pos:start="129:9" pos:end="129:50"><call pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:16">vc1_b_mc</name><argument_list pos:start="129:17" pos:end="129:50">(<argument pos:start="129:18" pos:end="129:18"><expr pos:start="129:18" pos:end="129:18"><name pos:start="129:18" pos:end="129:18">v</name></expr></argument>, <argument pos:start="129:21" pos:end="129:25"><expr pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:25">dmv_x</name></expr></argument>, <argument pos:start="129:28" pos:end="129:32"><expr pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:32">dmv_y</name></expr></argument>, <argument pos:start="129:35" pos:end="129:40"><expr pos:start="129:35" pos:end="129:40"><name pos:start="129:35" pos:end="129:40">direct</name></expr></argument>, <argument pos:start="129:43" pos:end="129:49"><expr pos:start="129:43" pos:end="129:49"><name pos:start="129:43" pos:end="129:49">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="225:5"><if pos:start="135:5" pos:end="155:5">if <condition pos:start="135:8" pos:end="135:15">(<expr pos:start="135:9" pos:end="135:14"><name pos:start="135:9" pos:end="135:14">direct</name></expr>)</condition> <block pos:start="135:17" pos:end="155:5">{<block_content pos:start="137:9" pos:end="153:51">

        <expr_stmt pos:start="137:9" pos:end="137:79"><expr pos:start="137:9" pos:end="137:78"><name pos:start="137:9" pos:end="137:11">cbp</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:78"><name pos:start="137:15" pos:end="137:22">get_vlc2</name><argument_list pos:start="137:23" pos:end="137:78">(<argument pos:start="137:24" pos:end="137:31"><expr pos:start="137:24" pos:end="137:31"><operator pos:start="137:24" pos:end="137:24">&amp;</operator><name pos:start="137:25" pos:end="137:31"><name pos:start="137:25" pos:end="137:25">v</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:29">.</operator><name pos:start="137:30" pos:end="137:31">gb</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:52"><expr pos:start="137:34" pos:end="137:52"><name pos:start="137:34" pos:end="137:52"><name pos:start="137:34" pos:end="137:34">v</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:45">cbpcy_vlc</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:52">table</name></name></expr></argument>, <argument pos:start="137:55" pos:end="137:74"><expr pos:start="137:55" pos:end="137:74"><name pos:start="137:55" pos:end="137:74">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="137:77" pos:end="137:77"><expr pos:start="137:77" pos:end="137:77"><literal type="number" pos:start="137:77" pos:end="137:77">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:21"><expr pos:start="139:9" pos:end="139:20"><call pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:18">GET_MQUANT</name><argument_list pos:start="139:19" pos:end="139:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:24"><expr pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:19">mb_intra</name></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <literal type="number" pos:start="141:23" pos:end="141:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:57"><expr pos:start="143:9" pos:end="143:56"><name pos:start="143:9" pos:end="143:47"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:26">current_picture</name><operator pos:start="143:27" pos:end="143:27">.</operator><name pos:start="143:28" pos:end="143:39">qscale_table</name><index pos:start="143:40" pos:end="143:47">[<expr pos:start="143:41" pos:end="143:46"><name pos:start="143:41" pos:end="143:46">mb_pos</name></expr>]</index></name> <operator pos:start="143:49" pos:end="143:49">=</operator> <name pos:start="143:51" pos:end="143:56">mquant</name></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="147:90"><if pos:start="145:9" pos:end="147:90">if<condition pos:start="145:11" pos:end="145:21">(<expr pos:start="145:12" pos:end="145:20"><operator pos:start="145:12" pos:end="145:12">!</operator><name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:13">v</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:90"><block_content pos:start="147:13" pos:end="147:90">

            <expr_stmt pos:start="147:13" pos:end="147:90"><expr pos:start="147:13" pos:end="147:89"><name pos:start="147:13" pos:end="147:16">ttmb</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <call pos:start="147:20" pos:end="147:89"><name pos:start="147:20" pos:end="147:27">get_vlc2</name><argument_list pos:start="147:28" pos:end="147:89">(<argument pos:start="147:29" pos:end="147:30"><expr pos:start="147:29" pos:end="147:30"><name pos:start="147:29" pos:end="147:30">gb</name></expr></argument>, <argument pos:start="147:33" pos:end="147:66"><expr pos:start="147:33" pos:end="147:66"><name pos:start="147:33" pos:end="147:60"><name pos:start="147:33" pos:end="147:47">ff_vc1_ttmb_vlc</name><index pos:start="147:48" pos:end="147:60">[<expr pos:start="147:49" pos:end="147:59"><name pos:start="147:49" pos:end="147:59"><name pos:start="147:49" pos:end="147:49">v</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:59">tt_index</name></name></expr>]</index></name><operator pos:start="147:61" pos:end="147:61">.</operator><name pos:start="147:62" pos:end="147:66">table</name></expr></argument>, <argument pos:start="147:69" pos:end="147:85"><expr pos:start="147:69" pos:end="147:85"><name pos:start="147:69" pos:end="147:85">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="147:88" pos:end="147:88"><expr pos:start="147:88" pos:end="147:88"><literal type="number" pos:start="147:88" pos:end="147:88">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:54"><expr pos:start="149:9" pos:end="149:53"><name pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:13">dmv_x</name><index pos:start="149:14" pos:end="149:16">[<expr pos:start="149:15" pos:end="149:15"><literal type="number" pos:start="149:15" pos:end="149:15">0</literal></expr>]</index></name> <operator pos:start="149:18" pos:end="149:18">=</operator> <name pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:24">dmv_y</name><index pos:start="149:25" pos:end="149:27">[<expr pos:start="149:26" pos:end="149:26"><literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr>]</index></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <name pos:start="149:31" pos:end="149:38"><name pos:start="149:31" pos:end="149:35">dmv_x</name><index pos:start="149:36" pos:end="149:38">[<expr pos:start="149:37" pos:end="149:37"><literal type="number" pos:start="149:37" pos:end="149:37">1</literal></expr>]</index></name> <operator pos:start="149:40" pos:end="149:40">=</operator> <name pos:start="149:42" pos:end="149:49"><name pos:start="149:42" pos:end="149:46">dmv_y</name><index pos:start="149:47" pos:end="149:49">[<expr pos:start="149:48" pos:end="149:48"><literal type="number" pos:start="149:48" pos:end="149:48">1</literal></expr>]</index></name> <operator pos:start="149:51" pos:end="149:51">=</operator> <literal type="number" pos:start="149:53" pos:end="149:53">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:56"><expr pos:start="151:9" pos:end="151:55"><call pos:start="151:9" pos:end="151:55"><name pos:start="151:9" pos:end="151:21">vc1_pred_b_mv</name><argument_list pos:start="151:22" pos:end="151:55">(<argument pos:start="151:23" pos:end="151:23"><expr pos:start="151:23" pos:end="151:23"><name pos:start="151:23" pos:end="151:23">v</name></expr></argument>, <argument pos:start="151:26" pos:end="151:30"><expr pos:start="151:26" pos:end="151:30"><name pos:start="151:26" pos:end="151:30">dmv_x</name></expr></argument>, <argument pos:start="151:33" pos:end="151:37"><expr pos:start="151:33" pos:end="151:37"><name pos:start="151:33" pos:end="151:37">dmv_y</name></expr></argument>, <argument pos:start="151:40" pos:end="151:45"><expr pos:start="151:40" pos:end="151:45"><name pos:start="151:40" pos:end="151:45">direct</name></expr></argument>, <argument pos:start="151:48" pos:end="151:54"><expr pos:start="151:48" pos:end="151:54"><name pos:start="151:48" pos:end="151:54">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:51"><expr pos:start="153:9" pos:end="153:50"><call pos:start="153:9" pos:end="153:50"><name pos:start="153:9" pos:end="153:16">vc1_b_mc</name><argument_list pos:start="153:17" pos:end="153:50">(<argument pos:start="153:18" pos:end="153:18"><expr pos:start="153:18" pos:end="153:18"><name pos:start="153:18" pos:end="153:18">v</name></expr></argument>, <argument pos:start="153:21" pos:end="153:25"><expr pos:start="153:21" pos:end="153:25"><name pos:start="153:21" pos:end="153:25">dmv_x</name></expr></argument>, <argument pos:start="153:28" pos:end="153:32"><expr pos:start="153:28" pos:end="153:32"><name pos:start="153:28" pos:end="153:32">dmv_y</name></expr></argument>, <argument pos:start="153:35" pos:end="153:40"><expr pos:start="153:35" pos:end="153:40"><name pos:start="153:35" pos:end="153:40">direct</name></expr></argument>, <argument pos:start="153:43" pos:end="153:49"><expr pos:start="153:43" pos:end="153:49"><name pos:start="153:43" pos:end="153:49">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="155:7" pos:end="225:5">else <block pos:start="155:12" pos:end="225:5">{<block_content pos:start="157:9" pos:end="223:9">

        <if_stmt pos:start="157:9" pos:end="167:9"><if pos:start="157:9" pos:end="167:9">if<condition pos:start="157:11" pos:end="157:42">(<expr pos:start="157:12" pos:end="157:41"><operator pos:start="157:12" pos:end="157:12">!</operator><name pos:start="157:13" pos:end="157:25">mb_has_coeffs</name> <operator pos:start="157:27" pos:end="157:28">&amp;&amp;</operator> <operator pos:start="157:30" pos:end="157:30">!</operator><name pos:start="157:31" pos:end="157:41"><name pos:start="157:31" pos:end="157:31">s</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:41">mb_intra</name></name></expr>)</condition> <block pos:start="157:44" pos:end="167:9">{<block_content pos:start="161:13" pos:end="165:19">

            <comment type="block" pos:start="159:13" pos:end="159:55">/* no coded blocks - effectively skipped */</comment>

            <expr_stmt pos:start="161:13" pos:end="161:60"><expr pos:start="161:13" pos:end="161:59"><call pos:start="161:13" pos:end="161:59"><name pos:start="161:13" pos:end="161:25">vc1_pred_b_mv</name><argument_list pos:start="161:26" pos:end="161:59">(<argument pos:start="161:27" pos:end="161:27"><expr pos:start="161:27" pos:end="161:27"><name pos:start="161:27" pos:end="161:27">v</name></expr></argument>, <argument pos:start="161:30" pos:end="161:34"><expr pos:start="161:30" pos:end="161:34"><name pos:start="161:30" pos:end="161:34">dmv_x</name></expr></argument>, <argument pos:start="161:37" pos:end="161:41"><expr pos:start="161:37" pos:end="161:41"><name pos:start="161:37" pos:end="161:41">dmv_y</name></expr></argument>, <argument pos:start="161:44" pos:end="161:49"><expr pos:start="161:44" pos:end="161:49"><name pos:start="161:44" pos:end="161:49">direct</name></expr></argument>, <argument pos:start="161:52" pos:end="161:58"><expr pos:start="161:52" pos:end="161:58"><name pos:start="161:52" pos:end="161:58">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:55"><expr pos:start="163:13" pos:end="163:54"><call pos:start="163:13" pos:end="163:54"><name pos:start="163:13" pos:end="163:20">vc1_b_mc</name><argument_list pos:start="163:21" pos:end="163:54">(<argument pos:start="163:22" pos:end="163:22"><expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">v</name></expr></argument>, <argument pos:start="163:25" pos:end="163:29"><expr pos:start="163:25" pos:end="163:29"><name pos:start="163:25" pos:end="163:29">dmv_x</name></expr></argument>, <argument pos:start="163:32" pos:end="163:36"><expr pos:start="163:32" pos:end="163:36"><name pos:start="163:32" pos:end="163:36">dmv_y</name></expr></argument>, <argument pos:start="163:39" pos:end="163:44"><expr pos:start="163:39" pos:end="163:44"><name pos:start="163:39" pos:end="163:44">direct</name></expr></argument>, <argument pos:start="163:47" pos:end="163:53"><expr pos:start="163:47" pos:end="163:53"><name pos:start="163:47" pos:end="163:53">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="165:13" pos:end="165:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="223:9"><if pos:start="169:9" pos:end="181:9">if<condition pos:start="169:11" pos:end="169:41">(<expr pos:start="169:12" pos:end="169:40"><name pos:start="169:12" pos:end="169:22"><name pos:start="169:12" pos:end="169:12">s</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:22">mb_intra</name></name> <operator pos:start="169:24" pos:end="169:25">&amp;&amp;</operator> <operator pos:start="169:27" pos:end="169:27">!</operator><name pos:start="169:28" pos:end="169:40">mb_has_coeffs</name></expr>)</condition> <block pos:start="169:43" pos:end="181:9">{<block_content pos:start="171:13" pos:end="179:60">

            <expr_stmt pos:start="171:13" pos:end="171:25"><expr pos:start="171:13" pos:end="171:24"><call pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:22">GET_MQUANT</name><argument_list pos:start="171:23" pos:end="171:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:61"><expr pos:start="173:13" pos:end="173:60"><name pos:start="173:13" pos:end="173:51"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:30">current_picture</name><operator pos:start="173:31" pos:end="173:31">.</operator><name pos:start="173:32" pos:end="173:43">qscale_table</name><index pos:start="173:44" pos:end="173:51">[<expr pos:start="173:45" pos:end="173:50"><name pos:start="173:45" pos:end="173:50">mb_pos</name></expr>]</index></name> <operator pos:start="173:53" pos:end="173:53">=</operator> <name pos:start="173:55" pos:end="173:60">mquant</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:39"><expr pos:start="175:13" pos:end="175:38"><name pos:start="175:13" pos:end="175:22"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:22">ac_pred</name></name> <operator pos:start="175:24" pos:end="175:24">=</operator> <call pos:start="175:26" pos:end="175:38"><name pos:start="175:26" pos:end="175:34">get_bits1</name><argument_list pos:start="175:35" pos:end="175:38">(<argument pos:start="175:36" pos:end="175:37"><expr pos:start="175:36" pos:end="175:37"><name pos:start="175:36" pos:end="175:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:20"><expr pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:15">cbp</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <literal type="number" pos:start="177:19" pos:end="177:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:60"><expr pos:start="179:13" pos:end="179:59"><call pos:start="179:13" pos:end="179:59"><name pos:start="179:13" pos:end="179:25">vc1_pred_b_mv</name><argument_list pos:start="179:26" pos:end="179:59">(<argument pos:start="179:27" pos:end="179:27"><expr pos:start="179:27" pos:end="179:27"><name pos:start="179:27" pos:end="179:27">v</name></expr></argument>, <argument pos:start="179:30" pos:end="179:34"><expr pos:start="179:30" pos:end="179:34"><name pos:start="179:30" pos:end="179:34">dmv_x</name></expr></argument>, <argument pos:start="179:37" pos:end="179:41"><expr pos:start="179:37" pos:end="179:41"><name pos:start="179:37" pos:end="179:41">dmv_y</name></expr></argument>, <argument pos:start="179:44" pos:end="179:49"><expr pos:start="179:44" pos:end="179:49"><name pos:start="179:44" pos:end="179:49">direct</name></expr></argument>, <argument pos:start="179:52" pos:end="179:58"><expr pos:start="179:52" pos:end="179:58"><name pos:start="179:52" pos:end="179:58">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="181:11" pos:end="223:9">else <block pos:start="181:16" pos:end="223:9">{<block_content pos:start="183:13" pos:end="221:94">

            <if_stmt pos:start="183:13" pos:end="199:13"><if pos:start="183:13" pos:end="199:13">if<condition pos:start="183:15" pos:end="183:48">(<expr pos:start="183:16" pos:end="183:47"><name pos:start="183:16" pos:end="183:22">bmvtype</name> <operator pos:start="183:24" pos:end="183:25">==</operator> <name pos:start="183:27" pos:end="183:47">BMV_TYPE_INTERPOLATED</name></expr>)</condition> <block pos:start="183:50" pos:end="199:13">{<block_content pos:start="185:17" pos:end="197:17">

                <expr_stmt pos:start="185:17" pos:end="185:47"><expr pos:start="185:17" pos:end="185:46"><call pos:start="185:17" pos:end="185:46"><name pos:start="185:17" pos:end="185:26">GET_MVDATA</name><argument_list pos:start="185:27" pos:end="185:46">(<argument pos:start="185:28" pos:end="185:35"><expr pos:start="185:28" pos:end="185:35"><name pos:start="185:28" pos:end="185:35"><name pos:start="185:28" pos:end="185:32">dmv_x</name><index pos:start="185:33" pos:end="185:35">[<expr pos:start="185:34" pos:end="185:34"><literal type="number" pos:start="185:34" pos:end="185:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:38" pos:end="185:45"><expr pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:42">dmv_y</name><index pos:start="185:43" pos:end="185:45">[<expr pos:start="185:44" pos:end="185:44"><literal type="number" pos:start="185:44" pos:end="185:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="197:17"><if pos:start="187:17" pos:end="197:17">if<condition pos:start="187:19" pos:end="187:34">(<expr pos:start="187:20" pos:end="187:33"><operator pos:start="187:20" pos:end="187:20">!</operator><name pos:start="187:21" pos:end="187:33">mb_has_coeffs</name></expr>)</condition> <block pos:start="187:36" pos:end="197:17">{<block_content pos:start="191:21" pos:end="195:27">

                    <comment type="block" pos:start="189:21" pos:end="189:52">/* interpolated skipped block */</comment>

                    <expr_stmt pos:start="191:21" pos:end="191:68"><expr pos:start="191:21" pos:end="191:67"><call pos:start="191:21" pos:end="191:67"><name pos:start="191:21" pos:end="191:33">vc1_pred_b_mv</name><argument_list pos:start="191:34" pos:end="191:67">(<argument pos:start="191:35" pos:end="191:35"><expr pos:start="191:35" pos:end="191:35"><name pos:start="191:35" pos:end="191:35">v</name></expr></argument>, <argument pos:start="191:38" pos:end="191:42"><expr pos:start="191:38" pos:end="191:42"><name pos:start="191:38" pos:end="191:42">dmv_x</name></expr></argument>, <argument pos:start="191:45" pos:end="191:49"><expr pos:start="191:45" pos:end="191:49"><name pos:start="191:45" pos:end="191:49">dmv_y</name></expr></argument>, <argument pos:start="191:52" pos:end="191:57"><expr pos:start="191:52" pos:end="191:57"><name pos:start="191:52" pos:end="191:57">direct</name></expr></argument>, <argument pos:start="191:60" pos:end="191:66"><expr pos:start="191:60" pos:end="191:66"><name pos:start="191:60" pos:end="191:66">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:63"><expr pos:start="193:21" pos:end="193:62"><call pos:start="193:21" pos:end="193:62"><name pos:start="193:21" pos:end="193:28">vc1_b_mc</name><argument_list pos:start="193:29" pos:end="193:62">(<argument pos:start="193:30" pos:end="193:30"><expr pos:start="193:30" pos:end="193:30"><name pos:start="193:30" pos:end="193:30">v</name></expr></argument>, <argument pos:start="193:33" pos:end="193:37"><expr pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:37">dmv_x</name></expr></argument>, <argument pos:start="193:40" pos:end="193:44"><expr pos:start="193:40" pos:end="193:44"><name pos:start="193:40" pos:end="193:44">dmv_y</name></expr></argument>, <argument pos:start="193:47" pos:end="193:52"><expr pos:start="193:47" pos:end="193:52"><name pos:start="193:47" pos:end="193:52">direct</name></expr></argument>, <argument pos:start="193:55" pos:end="193:61"><expr pos:start="193:55" pos:end="193:61"><name pos:start="193:55" pos:end="193:61">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="195:21" pos:end="195:27">return;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:60"><expr pos:start="201:13" pos:end="201:59"><call pos:start="201:13" pos:end="201:59"><name pos:start="201:13" pos:end="201:25">vc1_pred_b_mv</name><argument_list pos:start="201:26" pos:end="201:59">(<argument pos:start="201:27" pos:end="201:27"><expr pos:start="201:27" pos:end="201:27"><name pos:start="201:27" pos:end="201:27">v</name></expr></argument>, <argument pos:start="201:30" pos:end="201:34"><expr pos:start="201:30" pos:end="201:34"><name pos:start="201:30" pos:end="201:34">dmv_x</name></expr></argument>, <argument pos:start="201:37" pos:end="201:41"><expr pos:start="201:37" pos:end="201:41"><name pos:start="201:37" pos:end="201:41">dmv_y</name></expr></argument>, <argument pos:start="201:44" pos:end="201:49"><expr pos:start="201:44" pos:end="201:49"><name pos:start="201:44" pos:end="201:49">direct</name></expr></argument>, <argument pos:start="201:52" pos:end="201:58"><expr pos:start="201:52" pos:end="201:58"><name pos:start="201:52" pos:end="201:58">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="207:13"><if pos:start="203:13" pos:end="207:13">if<condition pos:start="203:15" pos:end="203:28">(<expr pos:start="203:16" pos:end="203:27"><operator pos:start="203:16" pos:end="203:16">!</operator><name pos:start="203:17" pos:end="203:27"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:27">mb_intra</name></name></expr>)</condition> <block pos:start="203:30" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:59">

                <expr_stmt pos:start="205:17" pos:end="205:59"><expr pos:start="205:17" pos:end="205:58"><call pos:start="205:17" pos:end="205:58"><name pos:start="205:17" pos:end="205:24">vc1_b_mc</name><argument_list pos:start="205:25" pos:end="205:58">(<argument pos:start="205:26" pos:end="205:26"><expr pos:start="205:26" pos:end="205:26"><name pos:start="205:26" pos:end="205:26">v</name></expr></argument>, <argument pos:start="205:29" pos:end="205:33"><expr pos:start="205:29" pos:end="205:33"><name pos:start="205:29" pos:end="205:33">dmv_x</name></expr></argument>, <argument pos:start="205:36" pos:end="205:40"><expr pos:start="205:36" pos:end="205:40"><name pos:start="205:36" pos:end="205:40">dmv_y</name></expr></argument>, <argument pos:start="205:43" pos:end="205:48"><expr pos:start="205:43" pos:end="205:48"><name pos:start="205:43" pos:end="205:48">direct</name></expr></argument>, <argument pos:start="205:51" pos:end="205:57"><expr pos:start="205:51" pos:end="205:57"><name pos:start="205:51" pos:end="205:57">bmvtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="209:13" pos:end="211:43"><if pos:start="209:13" pos:end="211:43">if<condition pos:start="209:15" pos:end="209:27">(<expr pos:start="209:16" pos:end="209:26"><name pos:start="209:16" pos:end="209:26"><name pos:start="209:16" pos:end="209:16">s</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:26">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:43"><block_content pos:start="211:17" pos:end="211:43">

                <expr_stmt pos:start="211:17" pos:end="211:43"><expr pos:start="211:17" pos:end="211:42"><name pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:26">ac_pred</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <call pos:start="211:30" pos:end="211:42"><name pos:start="211:30" pos:end="211:38">get_bits1</name><argument_list pos:start="211:39" pos:end="211:42">(<argument pos:start="211:40" pos:end="211:41"><expr pos:start="211:40" pos:end="211:41"><name pos:start="211:40" pos:end="211:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:83"><expr pos:start="213:13" pos:end="213:82"><name pos:start="213:13" pos:end="213:15">cbp</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:82"><name pos:start="213:19" pos:end="213:26">get_vlc2</name><argument_list pos:start="213:27" pos:end="213:82">(<argument pos:start="213:28" pos:end="213:35"><expr pos:start="213:28" pos:end="213:35"><operator pos:start="213:28" pos:end="213:28">&amp;</operator><name pos:start="213:29" pos:end="213:35"><name pos:start="213:29" pos:end="213:29">v</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:32">s</name><operator pos:start="213:33" pos:end="213:33">.</operator><name pos:start="213:34" pos:end="213:35">gb</name></name></expr></argument>, <argument pos:start="213:38" pos:end="213:56"><expr pos:start="213:38" pos:end="213:56"><name pos:start="213:38" pos:end="213:56"><name pos:start="213:38" pos:end="213:38">v</name><operator pos:start="213:39" pos:end="213:40">-&gt;</operator><name pos:start="213:41" pos:end="213:49">cbpcy_vlc</name><operator pos:start="213:50" pos:end="213:51">-&gt;</operator><name pos:start="213:52" pos:end="213:56">table</name></name></expr></argument>, <argument pos:start="213:59" pos:end="213:78"><expr pos:start="213:59" pos:end="213:78"><name pos:start="213:59" pos:end="213:78">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="213:81" pos:end="213:81"><expr pos:start="213:81" pos:end="213:81"><literal type="number" pos:start="213:81" pos:end="213:81">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:25"><expr pos:start="215:13" pos:end="215:24"><call pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:22">GET_MQUANT</name><argument_list pos:start="215:23" pos:end="215:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:61"><expr pos:start="217:13" pos:end="217:60"><name pos:start="217:13" pos:end="217:51"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:30">current_picture</name><operator pos:start="217:31" pos:end="217:31">.</operator><name pos:start="217:32" pos:end="217:43">qscale_table</name><index pos:start="217:44" pos:end="217:51">[<expr pos:start="217:45" pos:end="217:50"><name pos:start="217:45" pos:end="217:50">mb_pos</name></expr>]</index></name> <operator pos:start="217:53" pos:end="217:53">=</operator> <name pos:start="217:55" pos:end="217:60">mquant</name></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="221:94"><if pos:start="219:13" pos:end="221:94">if<condition pos:start="219:15" pos:end="219:58">(<expr pos:start="219:16" pos:end="219:57"><operator pos:start="219:16" pos:end="219:16">!</operator><name pos:start="219:17" pos:end="219:24"><name pos:start="219:17" pos:end="219:17">v</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:24">ttmbf</name></name> <operator pos:start="219:26" pos:end="219:27">&amp;&amp;</operator> <operator pos:start="219:29" pos:end="219:29">!</operator><name pos:start="219:30" pos:end="219:40"><name pos:start="219:30" pos:end="219:30">s</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:40">mb_intra</name></name> <operator pos:start="219:42" pos:end="219:43">&amp;&amp;</operator> <name pos:start="219:45" pos:end="219:57">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:94"><block_content pos:start="221:17" pos:end="221:94">

                <expr_stmt pos:start="221:17" pos:end="221:94"><expr pos:start="221:17" pos:end="221:93"><name pos:start="221:17" pos:end="221:20">ttmb</name> <operator pos:start="221:22" pos:end="221:22">=</operator> <call pos:start="221:24" pos:end="221:93"><name pos:start="221:24" pos:end="221:31">get_vlc2</name><argument_list pos:start="221:32" pos:end="221:93">(<argument pos:start="221:33" pos:end="221:34"><expr pos:start="221:33" pos:end="221:34"><name pos:start="221:33" pos:end="221:34">gb</name></expr></argument>, <argument pos:start="221:37" pos:end="221:70"><expr pos:start="221:37" pos:end="221:70"><name pos:start="221:37" pos:end="221:64"><name pos:start="221:37" pos:end="221:51">ff_vc1_ttmb_vlc</name><index pos:start="221:52" pos:end="221:64">[<expr pos:start="221:53" pos:end="221:63"><name pos:start="221:53" pos:end="221:63"><name pos:start="221:53" pos:end="221:53">v</name><operator pos:start="221:54" pos:end="221:55">-&gt;</operator><name pos:start="221:56" pos:end="221:63">tt_index</name></name></expr>]</index></name><operator pos:start="221:65" pos:end="221:65">.</operator><name pos:start="221:66" pos:end="221:70">table</name></expr></argument>, <argument pos:start="221:73" pos:end="221:89"><expr pos:start="221:73" pos:end="221:89"><name pos:start="221:73" pos:end="221:89">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="221:92" pos:end="221:92"><expr pos:start="221:92" pos:end="221:92"><literal type="number" pos:start="221:92" pos:end="221:92">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:16"><expr pos:start="227:5" pos:end="227:15"><name pos:start="227:5" pos:end="227:11">dst_idx</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <literal type="number" pos:start="227:15" pos:end="227:15">0</literal></expr>;</expr_stmt>

    <for pos:start="229:5" pos:end="279:5">for <control pos:start="229:9" pos:end="229:23">(<init pos:start="229:10" pos:end="229:13"><expr pos:start="229:10" pos:end="229:12"><name pos:start="229:10" pos:end="229:10">i</name><operator pos:start="229:11" pos:end="229:11">=</operator><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</init> <condition pos:start="229:15" pos:end="229:18"><expr pos:start="229:15" pos:end="229:17"><name pos:start="229:15" pos:end="229:15">i</name><operator pos:start="229:16" pos:end="229:16">&lt;</operator><literal type="number" pos:start="229:17" pos:end="229:17">6</literal></expr>;</condition> <incr pos:start="229:20" pos:end="229:22"><expr pos:start="229:20" pos:end="229:22"><name pos:start="229:20" pos:end="229:20">i</name><operator pos:start="229:21" pos:end="229:22">++</operator></expr></incr>)</control>

    <block pos:start="231:5" pos:end="279:5">{<block_content pos:start="233:9" pos:end="277:9">

        <expr_stmt pos:start="233:9" pos:end="233:44"><expr pos:start="233:9" pos:end="233:43"><name pos:start="233:9" pos:end="233:39"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:17">dc_val</name><index pos:start="233:18" pos:end="233:20">[<expr pos:start="233:19" pos:end="233:19"><literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>]</index><index pos:start="233:21" pos:end="233:39">[<expr pos:start="233:22" pos:end="233:38"><name pos:start="233:22" pos:end="233:38"><name pos:start="233:22" pos:end="233:22">s</name><operator pos:start="233:23" pos:end="233:24">-&gt;</operator><name pos:start="233:25" pos:end="233:35">block_index</name><index pos:start="233:36" pos:end="233:38">[<expr pos:start="233:37" pos:end="233:37"><name pos:start="233:37" pos:end="233:37">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="233:41" pos:end="233:41">=</operator> <literal type="number" pos:start="233:43" pos:end="233:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:26"><expr pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:15">dst_idx</name> <operator pos:start="235:17" pos:end="235:18">+=</operator> <name pos:start="235:20" pos:end="235:20">i</name> <operator pos:start="235:22" pos:end="235:23">&gt;&gt;</operator> <literal type="number" pos:start="235:25" pos:end="235:25">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:37"><expr pos:start="237:9" pos:end="237:36"><name pos:start="237:9" pos:end="237:11">val</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <operator pos:start="237:15" pos:end="237:15">(</operator><operator pos:start="237:16" pos:end="237:16">(</operator><name pos:start="237:17" pos:end="237:19">cbp</name> <operator pos:start="237:21" pos:end="237:22">&gt;&gt;</operator> <operator pos:start="237:24" pos:end="237:24">(</operator><literal type="number" pos:start="237:25" pos:end="237:27">5</literal> <operator pos:start="237:27" pos:end="237:27">-</operator> <name pos:start="237:29" pos:end="237:29">i</name><operator pos:start="237:30" pos:end="237:30">)</operator><operator pos:start="237:31" pos:end="237:31">)</operator> <operator pos:start="237:33" pos:end="237:33">&amp;</operator> <literal type="number" pos:start="237:35" pos:end="237:35">1</literal><operator pos:start="237:36" pos:end="237:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:70"><expr pos:start="239:9" pos:end="239:69"><name pos:start="239:9" pos:end="239:11">off</name> <operator pos:start="239:13" pos:end="239:13">=</operator> <ternary pos:start="239:15" pos:end="239:69"><condition pos:start="239:15" pos:end="239:23"><expr pos:start="239:15" pos:end="239:21"><operator pos:start="239:15" pos:end="239:15">(</operator><name pos:start="239:16" pos:end="239:16">i</name> <operator pos:start="239:18" pos:end="239:18">&amp;</operator> <literal type="number" pos:start="239:20" pos:end="239:20">4</literal><operator pos:start="239:21" pos:end="239:21">)</operator></expr> ?</condition><then pos:start="239:25" pos:end="239:25"> <expr pos:start="239:25" pos:end="239:25"><literal type="number" pos:start="239:25" pos:end="239:25">0</literal></expr> </then><else pos:start="239:27" pos:end="239:69">: <expr pos:start="239:29" pos:end="239:69"><operator pos:start="239:29" pos:end="239:29">(</operator><operator pos:start="239:30" pos:end="239:30">(</operator><name pos:start="239:31" pos:end="239:31">i</name> <operator pos:start="239:33" pos:end="239:33">&amp;</operator> <literal type="number" pos:start="239:35" pos:end="239:35">1</literal><operator pos:start="239:36" pos:end="239:36">)</operator> <operator pos:start="239:38" pos:end="239:38">*</operator> <literal type="number" pos:start="239:40" pos:end="239:42">8</literal> <operator pos:start="239:42" pos:end="239:42">+</operator> <operator pos:start="239:44" pos:end="239:44">(</operator><name pos:start="239:45" pos:end="239:45">i</name> <operator pos:start="239:47" pos:end="239:47">&amp;</operator> <literal type="number" pos:start="239:49" pos:end="239:49">2</literal><operator pos:start="239:50" pos:end="239:50">)</operator> <operator pos:start="239:52" pos:end="239:52">*</operator> <literal type="number" pos:start="239:54" pos:end="239:54">4</literal> <operator pos:start="239:56" pos:end="239:56">*</operator> <name pos:start="239:58" pos:end="239:68"><name pos:start="239:58" pos:end="239:58">s</name><operator pos:start="239:59" pos:end="239:60">-&gt;</operator><name pos:start="239:61" pos:end="239:68">linesize</name></name><operator pos:start="239:69" pos:end="239:69">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:55"><expr pos:start="241:9" pos:end="241:54"><name pos:start="241:9" pos:end="241:40"><name pos:start="241:9" pos:end="241:9">v</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:18">mb_type</name><index pos:start="241:19" pos:end="241:21">[<expr pos:start="241:20" pos:end="241:20"><literal type="number" pos:start="241:20" pos:end="241:20">0</literal></expr>]</index><index pos:start="241:22" pos:end="241:40">[<expr pos:start="241:23" pos:end="241:39"><name pos:start="241:23" pos:end="241:39"><name pos:start="241:23" pos:end="241:23">s</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:36">block_index</name><index pos:start="241:37" pos:end="241:39">[<expr pos:start="241:38" pos:end="241:38"><name pos:start="241:38" pos:end="241:38">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="241:42" pos:end="241:42">=</operator> <name pos:start="241:44" pos:end="241:54"><name pos:start="241:44" pos:end="241:44">s</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:54">mb_intra</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="277:9"><if pos:start="243:9" pos:end="269:9">if<condition pos:start="243:11" pos:end="243:23">(<expr pos:start="243:12" pos:end="243:22"><name pos:start="243:12" pos:end="243:22"><name pos:start="243:12" pos:end="243:12">s</name><operator pos:start="243:13" pos:end="243:14">-&gt;</operator><name pos:start="243:15" pos:end="243:22">mb_intra</name></name></expr>)</condition> <block pos:start="243:25" pos:end="269:9">{<block_content pos:start="247:13" pos:end="267:119">

            <comment type="block" pos:start="245:13" pos:end="245:66">/* check if prediction blocks A and C are available */</comment>

            <expr_stmt pos:start="247:13" pos:end="247:40"><expr pos:start="247:13" pos:end="247:39"><name pos:start="247:13" pos:end="247:22"><name pos:start="247:13" pos:end="247:13">v</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:22">a_avail</name></name> <operator pos:start="247:24" pos:end="247:24">=</operator> <name pos:start="247:26" pos:end="247:35"><name pos:start="247:26" pos:end="247:26">v</name><operator pos:start="247:27" pos:end="247:28">-&gt;</operator><name pos:start="247:29" pos:end="247:35">c_avail</name></name> <operator pos:start="247:37" pos:end="247:37">=</operator> <literal type="number" pos:start="247:39" pos:end="247:39">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="249:13" pos:end="251:81"><if pos:start="249:13" pos:end="251:81">if<condition pos:start="249:15" pos:end="249:56">(<expr pos:start="249:16" pos:end="249:55"><name pos:start="249:16" pos:end="249:16">i</name> <operator pos:start="249:18" pos:end="249:19">==</operator> <literal type="number" pos:start="249:21" pos:end="249:21">2</literal> <operator pos:start="249:23" pos:end="249:24">||</operator> <name pos:start="249:26" pos:end="249:26">i</name> <operator pos:start="249:28" pos:end="249:29">==</operator> <literal type="number" pos:start="249:31" pos:end="249:31">3</literal> <operator pos:start="249:33" pos:end="249:34">||</operator> <operator pos:start="249:36" pos:end="249:36">!</operator><name pos:start="249:37" pos:end="249:55"><name pos:start="249:37" pos:end="249:37">s</name><operator pos:start="249:38" pos:end="249:39">-&gt;</operator><name pos:start="249:40" pos:end="249:55">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:81"><block_content pos:start="251:17" pos:end="251:81">

                <expr_stmt pos:start="251:17" pos:end="251:81"><expr pos:start="251:17" pos:end="251:80"><name pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:17">v</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:26">a_avail</name></name> <operator pos:start="251:28" pos:end="251:28">=</operator> <name pos:start="251:30" pos:end="251:80"><name pos:start="251:30" pos:end="251:30">v</name><operator pos:start="251:31" pos:end="251:32">-&gt;</operator><name pos:start="251:33" pos:end="251:39">mb_type</name><index pos:start="251:40" pos:end="251:42">[<expr pos:start="251:41" pos:end="251:41"><literal type="number" pos:start="251:41" pos:end="251:41">0</literal></expr>]</index><index pos:start="251:43" pos:end="251:80">[<expr pos:start="251:44" pos:end="251:79"><name pos:start="251:44" pos:end="251:60"><name pos:start="251:44" pos:end="251:44">s</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:57">block_index</name><index pos:start="251:58" pos:end="251:60">[<expr pos:start="251:59" pos:end="251:59"><name pos:start="251:59" pos:end="251:59">i</name></expr>]</index></name> <operator pos:start="251:62" pos:end="251:62">-</operator> <name pos:start="251:64" pos:end="251:79"><name pos:start="251:64" pos:end="251:64">s</name><operator pos:start="251:65" pos:end="251:66">-&gt;</operator><name pos:start="251:67" pos:end="251:76">block_wrap</name><index pos:start="251:77" pos:end="251:79">[<expr pos:start="251:78" pos:end="251:78"><name pos:start="251:78" pos:end="251:78">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="253:13" pos:end="255:66"><if pos:start="253:13" pos:end="255:66">if<condition pos:start="253:15" pos:end="253:43">(<expr pos:start="253:16" pos:end="253:42"><name pos:start="253:16" pos:end="253:16">i</name> <operator pos:start="253:18" pos:end="253:19">==</operator> <literal type="number" pos:start="253:21" pos:end="253:21">1</literal> <operator pos:start="253:23" pos:end="253:24">||</operator> <name pos:start="253:26" pos:end="253:26">i</name> <operator pos:start="253:28" pos:end="253:29">==</operator> <literal type="number" pos:start="253:31" pos:end="253:31">3</literal> <operator pos:start="253:33" pos:end="253:34">||</operator> <name pos:start="253:36" pos:end="253:42"><name pos:start="253:36" pos:end="253:36">s</name><operator pos:start="253:37" pos:end="253:38">-&gt;</operator><name pos:start="253:39" pos:end="253:42">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="255:66"><block_content pos:start="255:17" pos:end="255:66">

                <expr_stmt pos:start="255:17" pos:end="255:66"><expr pos:start="255:17" pos:end="255:65"><name pos:start="255:17" pos:end="255:26"><name pos:start="255:17" pos:end="255:17">v</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:26">c_avail</name></name> <operator pos:start="255:28" pos:end="255:28">=</operator> <name pos:start="255:30" pos:end="255:65"><name pos:start="255:30" pos:end="255:30">v</name><operator pos:start="255:31" pos:end="255:32">-&gt;</operator><name pos:start="255:33" pos:end="255:39">mb_type</name><index pos:start="255:40" pos:end="255:42">[<expr pos:start="255:41" pos:end="255:41"><literal type="number" pos:start="255:41" pos:end="255:41">0</literal></expr>]</index><index pos:start="255:43" pos:end="255:65">[<expr pos:start="255:44" pos:end="255:64"><name pos:start="255:44" pos:end="255:60"><name pos:start="255:44" pos:end="255:44">s</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:57">block_index</name><index pos:start="255:58" pos:end="255:60">[<expr pos:start="255:59" pos:end="255:59"><name pos:start="255:59" pos:end="255:59">i</name></expr>]</index></name> <operator pos:start="255:62" pos:end="255:62">-</operator> <literal type="number" pos:start="255:64" pos:end="255:64">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="259:13" pos:end="259:101"><expr pos:start="259:13" pos:end="259:100"><call pos:start="259:13" pos:end="259:100"><name pos:start="259:13" pos:end="259:34">vc1_decode_intra_block</name><argument_list pos:start="259:35" pos:end="259:100">(<argument pos:start="259:36" pos:end="259:36"><expr pos:start="259:36" pos:end="259:36"><name pos:start="259:36" pos:end="259:36">v</name></expr></argument>, <argument pos:start="259:39" pos:end="259:49"><expr pos:start="259:39" pos:end="259:49"><name pos:start="259:39" pos:end="259:49"><name pos:start="259:39" pos:end="259:39">s</name><operator pos:start="259:40" pos:end="259:41">-&gt;</operator><name pos:start="259:42" pos:end="259:46">block</name><index pos:start="259:47" pos:end="259:49">[<expr pos:start="259:48" pos:end="259:48"><name pos:start="259:48" pos:end="259:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="259:52" pos:end="259:52"><expr pos:start="259:52" pos:end="259:52"><name pos:start="259:52" pos:end="259:52">i</name></expr></argument>, <argument pos:start="259:55" pos:end="259:57"><expr pos:start="259:55" pos:end="259:57"><name pos:start="259:55" pos:end="259:57">val</name></expr></argument>, <argument pos:start="259:60" pos:end="259:65"><expr pos:start="259:60" pos:end="259:65"><name pos:start="259:60" pos:end="259:65">mquant</name></expr></argument>, <argument pos:start="259:68" pos:end="259:99"><expr pos:start="259:68" pos:end="259:99"><ternary pos:start="259:68" pos:end="259:99"><condition pos:start="259:68" pos:end="259:73"><expr pos:start="259:68" pos:end="259:72"><operator pos:start="259:68" pos:end="259:68">(</operator><name pos:start="259:69" pos:end="259:69">i</name><operator pos:start="259:70" pos:end="259:70">&amp;</operator><literal type="number" pos:start="259:71" pos:end="259:71">4</literal><operator pos:start="259:72" pos:end="259:72">)</operator></expr>?</condition><then pos:start="259:74" pos:end="259:86"><expr pos:start="259:74" pos:end="259:86"><name pos:start="259:74" pos:end="259:86"><name pos:start="259:74" pos:end="259:74">v</name><operator pos:start="259:75" pos:end="259:76">-&gt;</operator><name pos:start="259:77" pos:end="259:86">codingset2</name></name></expr></then><else pos:start="259:87" pos:end="259:99">:<expr pos:start="259:88" pos:end="259:99"><name pos:start="259:88" pos:end="259:99"><name pos:start="259:88" pos:end="259:88">v</name><operator pos:start="259:89" pos:end="259:90">-&gt;</operator><name pos:start="259:91" pos:end="259:99">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="261:63"><if pos:start="261:13" pos:end="261:63">if<condition pos:start="261:15" pos:end="261:53">(<expr pos:start="261:16" pos:end="261:52"><operator pos:start="261:16" pos:end="261:16">(</operator><name pos:start="261:17" pos:end="261:17">i</name><operator pos:start="261:18" pos:end="261:18">&gt;</operator><literal type="number" pos:start="261:19" pos:end="261:19">3</literal><operator pos:start="261:20" pos:end="261:20">)</operator> <operator pos:start="261:22" pos:end="261:23">&amp;&amp;</operator> <operator pos:start="261:25" pos:end="261:25">(</operator><name pos:start="261:26" pos:end="261:33"><name pos:start="261:26" pos:end="261:26">s</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:33">flags</name></name> <operator pos:start="261:35" pos:end="261:35">&amp;</operator> <name pos:start="261:37" pos:end="261:51">CODEC_FLAG_GRAY</name><operator pos:start="261:52" pos:end="261:52">)</operator></expr>)</condition><block type="pseudo" pos:start="261:55" pos:end="261:63"><block_content pos:start="261:55" pos:end="261:63"> <continue pos:start="261:55" pos:end="261:63">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:53"><expr pos:start="263:13" pos:end="263:52"><call pos:start="263:13" pos:end="263:52"><name pos:start="263:13" pos:end="263:39"><name pos:start="263:13" pos:end="263:13">v</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:21">vc1dsp</name><operator pos:start="263:22" pos:end="263:22">.</operator><name pos:start="263:23" pos:end="263:39">vc1_inv_trans_8x8</name></name><argument_list pos:start="263:40" pos:end="263:52">(<argument pos:start="263:41" pos:end="263:51"><expr pos:start="263:41" pos:end="263:51"><name pos:start="263:41" pos:end="263:51"><name pos:start="263:41" pos:end="263:41">s</name><operator pos:start="263:42" pos:end="263:43">-&gt;</operator><name pos:start="263:44" pos:end="263:48">block</name><index pos:start="263:49" pos:end="263:51">[<expr pos:start="263:50" pos:end="263:50"><name pos:start="263:50" pos:end="263:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="265:13" pos:end="265:76"><if pos:start="265:13" pos:end="265:76">if<condition pos:start="265:15" pos:end="265:30">(<expr pos:start="265:16" pos:end="265:29"><name pos:start="265:16" pos:end="265:29"><name pos:start="265:16" pos:end="265:16">v</name><operator pos:start="265:17" pos:end="265:18">-&gt;</operator><name pos:start="265:19" pos:end="265:29">rangeredfrm</name></name></expr>)</condition><block type="pseudo" pos:start="265:32" pos:end="265:76"><block_content pos:start="265:32" pos:end="265:76"> <for pos:start="265:32" pos:end="265:76">for<control pos:start="265:35" pos:end="265:54">(<init pos:start="265:36" pos:end="265:41"><expr pos:start="265:36" pos:end="265:40"><name pos:start="265:36" pos:end="265:36">j</name> <operator pos:start="265:38" pos:end="265:38">=</operator> <literal type="number" pos:start="265:40" pos:end="265:40">0</literal></expr>;</init> <condition pos:start="265:43" pos:end="265:49"><expr pos:start="265:43" pos:end="265:48"><name pos:start="265:43" pos:end="265:43">j</name> <operator pos:start="265:45" pos:end="265:45">&lt;</operator> <literal type="number" pos:start="265:47" pos:end="265:48">64</literal></expr>;</condition> <incr pos:start="265:51" pos:end="265:53"><expr pos:start="265:51" pos:end="265:53"><name pos:start="265:51" pos:end="265:51">j</name><operator pos:start="265:52" pos:end="265:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="265:56" pos:end="265:76"><block_content pos:start="265:56" pos:end="265:76"> <expr_stmt pos:start="265:56" pos:end="265:76"><expr pos:start="265:56" pos:end="265:75"><name pos:start="265:56" pos:end="265:69"><name pos:start="265:56" pos:end="265:56">s</name><operator pos:start="265:57" pos:end="265:58">-&gt;</operator><name pos:start="265:59" pos:end="265:63">block</name><index pos:start="265:64" pos:end="265:66">[<expr pos:start="265:65" pos:end="265:65"><name pos:start="265:65" pos:end="265:65">i</name></expr>]</index><index pos:start="265:67" pos:end="265:69">[<expr pos:start="265:68" pos:end="265:68"><name pos:start="265:68" pos:end="265:68">j</name></expr>]</index></name> <operator pos:start="265:71" pos:end="265:73">&lt;&lt;=</operator> <literal type="number" pos:start="265:75" pos:end="265:75">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:119"><expr pos:start="267:13" pos:end="267:118"><call pos:start="267:13" pos:end="267:118"><name pos:start="267:13" pos:end="267:44"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:18">dsp</name><operator pos:start="267:19" pos:end="267:19">.</operator><name pos:start="267:20" pos:end="267:44">put_signed_pixels_clamped</name></name><argument_list pos:start="267:45" pos:end="267:118">(<argument pos:start="267:46" pos:end="267:56"><expr pos:start="267:46" pos:end="267:56"><name pos:start="267:46" pos:end="267:56"><name pos:start="267:46" pos:end="267:46">s</name><operator pos:start="267:47" pos:end="267:48">-&gt;</operator><name pos:start="267:49" pos:end="267:53">block</name><index pos:start="267:54" pos:end="267:56">[<expr pos:start="267:55" pos:end="267:55"><name pos:start="267:55" pos:end="267:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="267:59" pos:end="267:80"><expr pos:start="267:59" pos:end="267:80"><name pos:start="267:59" pos:end="267:74"><name pos:start="267:59" pos:end="267:59">s</name><operator pos:start="267:60" pos:end="267:61">-&gt;</operator><name pos:start="267:62" pos:end="267:65">dest</name><index pos:start="267:66" pos:end="267:74">[<expr pos:start="267:67" pos:end="267:73"><name pos:start="267:67" pos:end="267:73">dst_idx</name></expr>]</index></name> <operator pos:start="267:76" pos:end="267:76">+</operator> <name pos:start="267:78" pos:end="267:80">off</name></expr></argument>, <argument pos:start="267:83" pos:end="267:117"><expr pos:start="267:83" pos:end="267:117"><ternary pos:start="267:83" pos:end="267:117"><condition pos:start="267:83" pos:end="267:89"><expr pos:start="267:83" pos:end="267:87"><name pos:start="267:83" pos:end="267:83">i</name> <operator pos:start="267:85" pos:end="267:85">&amp;</operator> <literal type="number" pos:start="267:87" pos:end="267:87">4</literal></expr> ?</condition><then pos:start="267:91" pos:end="267:103"> <expr pos:start="267:91" pos:end="267:103"><name pos:start="267:91" pos:end="267:103"><name pos:start="267:91" pos:end="267:91">s</name><operator pos:start="267:92" pos:end="267:93">-&gt;</operator><name pos:start="267:94" pos:end="267:103">uvlinesize</name></name></expr> </then><else pos:start="267:105" pos:end="267:117">: <expr pos:start="267:107" pos:end="267:117"><name pos:start="267:107" pos:end="267:117"><name pos:start="267:107" pos:end="267:107">s</name><operator pos:start="267:108" pos:end="267:109">-&gt;</operator><name pos:start="267:110" pos:end="267:117">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="269:11" pos:end="277:9">else if<condition pos:start="269:18" pos:end="269:22">(<expr pos:start="269:19" pos:end="269:21"><name pos:start="269:19" pos:end="269:21">val</name></expr>)</condition> <block pos:start="269:24" pos:end="277:9">{<block_content pos:start="271:13" pos:end="275:28">

            <expr_stmt pos:start="271:13" pos:end="271:182"><expr pos:start="271:13" pos:end="271:181"><call pos:start="271:13" pos:end="271:181"><name pos:start="271:13" pos:end="271:30">vc1_decode_p_block</name><argument_list pos:start="271:31" pos:end="271:181">(<argument pos:start="271:32" pos:end="271:32"><expr pos:start="271:32" pos:end="271:32"><name pos:start="271:32" pos:end="271:32">v</name></expr></argument>, <argument pos:start="271:35" pos:end="271:45"><expr pos:start="271:35" pos:end="271:45"><name pos:start="271:35" pos:end="271:45"><name pos:start="271:35" pos:end="271:35">s</name><operator pos:start="271:36" pos:end="271:37">-&gt;</operator><name pos:start="271:38" pos:end="271:42">block</name><index pos:start="271:43" pos:end="271:45">[<expr pos:start="271:44" pos:end="271:44"><name pos:start="271:44" pos:end="271:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="271:48" pos:end="271:48"><expr pos:start="271:48" pos:end="271:48"><name pos:start="271:48" pos:end="271:48">i</name></expr></argument>, <argument pos:start="271:51" pos:end="271:56"><expr pos:start="271:51" pos:end="271:56"><name pos:start="271:51" pos:end="271:56">mquant</name></expr></argument>, <argument pos:start="271:59" pos:end="271:62"><expr pos:start="271:59" pos:end="271:62"><name pos:start="271:59" pos:end="271:62">ttmb</name></expr></argument>, <argument pos:start="271:65" pos:end="271:75"><expr pos:start="271:65" pos:end="271:75"><name pos:start="271:65" pos:end="271:75">first_block</name></expr></argument>, <argument pos:start="271:78" pos:end="271:99"><expr pos:start="271:78" pos:end="271:99"><name pos:start="271:78" pos:end="271:93"><name pos:start="271:78" pos:end="271:78">s</name><operator pos:start="271:79" pos:end="271:80">-&gt;</operator><name pos:start="271:81" pos:end="271:84">dest</name><index pos:start="271:85" pos:end="271:93">[<expr pos:start="271:86" pos:end="271:92"><name pos:start="271:86" pos:end="271:92">dst_idx</name></expr>]</index></name> <operator pos:start="271:95" pos:end="271:95">+</operator> <name pos:start="271:97" pos:end="271:99">off</name></expr></argument>, <argument pos:start="271:102" pos:end="271:132"><expr pos:start="271:102" pos:end="271:132"><ternary pos:start="271:102" pos:end="271:132"><condition pos:start="271:102" pos:end="271:107"><expr pos:start="271:102" pos:end="271:106"><operator pos:start="271:102" pos:end="271:102">(</operator><name pos:start="271:103" pos:end="271:103">i</name><operator pos:start="271:104" pos:end="271:104">&amp;</operator><literal type="number" pos:start="271:105" pos:end="271:105">4</literal><operator pos:start="271:106" pos:end="271:106">)</operator></expr>?</condition><then pos:start="271:108" pos:end="271:120"><expr pos:start="271:108" pos:end="271:120"><name pos:start="271:108" pos:end="271:120"><name pos:start="271:108" pos:end="271:108">s</name><operator pos:start="271:109" pos:end="271:110">-&gt;</operator><name pos:start="271:111" pos:end="271:120">uvlinesize</name></name></expr></then><else pos:start="271:121" pos:end="271:132">:<expr pos:start="271:122" pos:end="271:132"><name pos:start="271:122" pos:end="271:132"><name pos:start="271:122" pos:end="271:122">s</name><operator pos:start="271:123" pos:end="271:124">-&gt;</operator><name pos:start="271:125" pos:end="271:132">linesize</name></name></expr></else></ternary></expr></argument>, <argument pos:start="271:135" pos:end="271:171"><expr pos:start="271:135" pos:end="271:171"><operator pos:start="271:135" pos:end="271:135">(</operator><name pos:start="271:136" pos:end="271:136">i</name><operator pos:start="271:137" pos:end="271:137">&amp;</operator><literal type="number" pos:start="271:138" pos:end="271:138">4</literal><operator pos:start="271:139" pos:end="271:139">)</operator> <operator pos:start="271:141" pos:end="271:142">&amp;&amp;</operator> <operator pos:start="271:144" pos:end="271:144">(</operator><name pos:start="271:145" pos:end="271:152"><name pos:start="271:145" pos:end="271:145">s</name><operator pos:start="271:146" pos:end="271:147">-&gt;</operator><name pos:start="271:148" pos:end="271:152">flags</name></name> <operator pos:start="271:154" pos:end="271:154">&amp;</operator> <name pos:start="271:156" pos:end="271:170">CODEC_FLAG_GRAY</name><operator pos:start="271:171" pos:end="271:171">)</operator></expr></argument>, <argument pos:start="271:174" pos:end="271:174"><expr pos:start="271:174" pos:end="271:174"><literal type="number" pos:start="271:174" pos:end="271:174">0</literal></expr></argument>, <argument pos:start="271:177" pos:end="271:177"><expr pos:start="271:177" pos:end="271:177"><literal type="number" pos:start="271:177" pos:end="271:177">0</literal></expr></argument>, <argument pos:start="271:180" pos:end="271:180"><expr pos:start="271:180" pos:end="271:180"><literal type="number" pos:start="271:180" pos:end="271:180">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="273:13" pos:end="273:48"><if pos:start="273:13" pos:end="273:48">if<condition pos:start="273:15" pos:end="273:37">(<expr pos:start="273:16" pos:end="273:36"><operator pos:start="273:16" pos:end="273:16">!</operator><name pos:start="273:17" pos:end="273:24"><name pos:start="273:17" pos:end="273:17">v</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:24">ttmbf</name></name> <operator pos:start="273:26" pos:end="273:27">&amp;&amp;</operator> <name pos:start="273:29" pos:end="273:32">ttmb</name> <operator pos:start="273:34" pos:end="273:34">&lt;</operator> <literal type="number" pos:start="273:36" pos:end="273:36">8</literal></expr>)</condition><block type="pseudo" pos:start="273:39" pos:end="273:48"><block_content pos:start="273:39" pos:end="273:48"> <expr_stmt pos:start="273:39" pos:end="273:48"><expr pos:start="273:39" pos:end="273:47"><name pos:start="273:39" pos:end="273:42">ttmb</name> <operator pos:start="273:44" pos:end="273:44">=</operator> <operator pos:start="273:46" pos:end="273:46">-</operator><literal type="number" pos:start="273:47" pos:end="273:47">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:28"><expr pos:start="275:13" pos:end="275:27"><name pos:start="275:13" pos:end="275:23">first_block</name> <operator pos:start="275:25" pos:end="275:25">=</operator> <literal type="number" pos:start="275:27" pos:end="275:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
