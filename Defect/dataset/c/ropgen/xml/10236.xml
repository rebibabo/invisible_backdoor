<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10236.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">qdev_unplug</name><parameter_list pos:start="1:17" pos:end="1:48">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><name pos:start="1:18" pos:end="1:28">DeviceState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">dev</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:40">Error</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier><modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">dc</name> <init pos:start="5:21" pos:end="5:43">= <expr pos:start="5:23" pos:end="5:43"><call pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:38">DEVICE_GET_CLASS</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:40">(<expr pos:start="9:9" pos:end="9:39"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:39"><name pos:start="9:10" pos:end="9:12">dev</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:24">parent_bus</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:39">allow_hotplug</name></name></expr>)</condition> <block pos:start="9:42" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:68"><expr pos:start="11:9" pos:end="11:67"><call pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:17">error_set</name><argument_list pos:start="11:18" pos:end="11:67">(<argument pos:start="11:19" pos:end="11:22"><expr pos:start="11:19" pos:end="11:22"><name pos:start="11:19" pos:end="11:22">errp</name></expr></argument>, <argument pos:start="11:25" pos:end="11:43"><expr pos:start="11:25" pos:end="11:43"><name pos:start="11:25" pos:end="11:43">QERR_BUS_NO_HOTPLUG</name></expr></argument>, <argument pos:start="11:46" pos:end="11:66"><expr pos:start="11:46" pos:end="11:66"><name pos:start="11:46" pos:end="11:66"><name pos:start="11:46" pos:end="11:48">dev</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:60">parent_bus</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:66">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:30">(<argument pos:start="17:12" pos:end="17:29"><expr pos:start="17:12" pos:end="17:29"><name pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:13">dc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:21">unplug</name></name> <operator pos:start="17:23" pos:end="17:24">!=</operator> <name pos:start="17:26" pos:end="17:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:20">qdev_hot_removed</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:27">true</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:28">(<expr pos:start="25:9" pos:end="25:27"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">dc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">unplug</name></name><argument_list pos:start="25:19" pos:end="25:23">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">dev</name></expr></argument>)</argument_list></call> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>)</condition> <block pos:start="25:30" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:17">error_set</name><argument_list pos:start="27:18" pos:end="27:45">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">errp</name></expr></argument>, <argument pos:start="27:25" pos:end="27:44"><expr pos:start="27:25" pos:end="27:44"><name pos:start="27:25" pos:end="27:44">QERR_UNDEFINED_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
