<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8358.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_mdhd</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:20"><name pos:start="11:10" pos:end="11:17">language</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">4</literal></expr>]</index></name> <init pos:start="11:22" pos:end="11:26">= <expr pos:start="11:24" pos:end="11:26"><block pos:start="11:24" pos:end="11:26">{<expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">lang</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:25">creation_time</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">fc</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">nb_streams</name></name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <literal type="number" pos:start="19:29" pos:end="19:29">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:6">st</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:44"><name pos:start="23:10" pos:end="23:10">c</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:14">fc</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:23">streams</name><index pos:start="23:24" pos:end="23:44">[<expr pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:25">c</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:29">fc</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:41">nb_streams</name></name><operator pos:start="23:42" pos:end="23:42">-</operator><literal type="number" pos:start="23:43" pos:end="23:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:6">sc</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:11">st</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">priv_data</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:10">sc</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:22">time_scale</name></name></expr>)</condition> <block pos:start="29:25" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:35">

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><call pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:55">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:16">c</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:20">fc</name></name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><literal type="string" pos:start="31:37" pos:end="31:54">"Multiple mdhd?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:11">version</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:25"><name pos:start="39:15" pos:end="39:21">avio_r8</name><argument_list pos:start="39:22" pos:end="39:25">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:15">version</name> <operator pos:start="41:17" pos:end="41:17">&gt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>)</condition> <block pos:start="41:22" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:36">

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><call pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:29">avpriv_request_sample</name><argument_list pos:start="43:30" pos:end="43:59">(<argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:31">c</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:35">fc</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:49"><expr pos:start="43:38" pos:end="43:49"><literal type="string" pos:start="43:38" pos:end="43:49">"Version %d"</literal></expr></argument>, <argument pos:start="43:52" pos:end="43:58"><expr pos:start="43:52" pos:end="43:58"><name pos:start="43:52" pos:end="43:58">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:36">return <expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:18"><expr pos:start="49:5" pos:end="49:17"><call pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:13">avio_rb24</name><argument_list pos:start="49:14" pos:end="49:17">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:20" pos:end="49:30">/* flags */</comment>

    <if_stmt pos:start="51:5" pos:end="63:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:15">version</name> <operator pos:start="51:17" pos:end="51:18">==</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>)</condition> <block pos:start="51:23" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:22">

        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:21">creation_time</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <call pos:start="53:25" pos:end="53:37"><name pos:start="53:25" pos:end="53:33">avio_rb64</name><argument_list pos:start="53:34" pos:end="53:37">(<argument pos:start="53:35" pos:end="53:36"><expr pos:start="53:35" pos:end="53:36"><name pos:start="53:35" pos:end="53:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17">avio_rb64</name><argument_list pos:start="55:18" pos:end="55:21">(<argument pos:start="55:19" pos:end="55:20"><expr pos:start="55:19" pos:end="55:20"><name pos:start="55:19" pos:end="55:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="63:5">else <block pos:start="57:12" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:22">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:21">creation_time</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:33">avio_rb32</name><argument_list pos:start="59:34" pos:end="59:37">(<argument pos:start="59:35" pos:end="59:36"><expr pos:start="59:35" pos:end="59:36"><name pos:start="59:35" pos:end="59:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><call pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:17">avio_rb32</name><argument_list pos:start="61:18" pos:end="61:21">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:24" pos:end="61:46">/* modification time */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:61"><expr pos:start="65:5" pos:end="65:60"><call pos:start="65:5" pos:end="65:60"><name pos:start="65:5" pos:end="65:30">mov_metadata_creation_time</name><argument_list pos:start="65:31" pos:end="65:60">(<argument pos:start="65:32" pos:end="65:44"><expr pos:start="65:32" pos:end="65:44"><operator pos:start="65:32" pos:end="65:32">&amp;</operator><name pos:start="65:33" pos:end="65:44"><name pos:start="65:33" pos:end="65:34">st</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:44">metadata</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:59"><expr pos:start="65:47" pos:end="65:59"><name pos:start="65:47" pos:end="65:59">creation_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:6">sc</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:18">time_scale</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:34"><name pos:start="69:22" pos:end="69:30">avio_rb32</name><argument_list pos:start="69:31" pos:end="69:34">(<argument pos:start="69:32" pos:end="69:33"><expr pos:start="69:32" pos:end="69:33"><name pos:start="69:32" pos:end="69:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:28">(<expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:10">sc</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:22">time_scale</name></name> <operator pos:start="71:24" pos:end="71:25">&lt;=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>)</condition> <block pos:start="71:30" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:35">

        <expr_stmt pos:start="73:9" pos:end="73:84"><expr pos:start="73:9" pos:end="73:83"><call pos:start="73:9" pos:end="73:83"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:83">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:16">c</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:20">fc</name></name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:66"><expr pos:start="73:37" pos:end="73:66"><literal type="string" pos:start="73:37" pos:end="73:66">"Invalid mdhd time scale %d\n"</literal></expr></argument>, <argument pos:start="73:69" pos:end="73:82"><expr pos:start="73:69" pos:end="73:82"><name pos:start="73:69" pos:end="73:82"><name pos:start="73:69" pos:end="73:70">sc</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:82">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:35">return <expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:66"><expr pos:start="79:5" pos:end="79:65"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:6">st</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:16">duration</name></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <ternary pos:start="79:20" pos:end="79:65"><condition pos:start="79:20" pos:end="79:35"><expr pos:start="79:20" pos:end="79:33"><operator pos:start="79:20" pos:end="79:20">(</operator><name pos:start="79:21" pos:end="79:27">version</name> <operator pos:start="79:29" pos:end="79:30">==</operator> <literal type="number" pos:start="79:32" pos:end="79:32">1</literal><operator pos:start="79:33" pos:end="79:33">)</operator></expr> ?</condition><then pos:start="79:37" pos:end="79:49"> <expr pos:start="79:37" pos:end="79:49"><call pos:start="79:37" pos:end="79:49"><name pos:start="79:37" pos:end="79:45">avio_rb64</name><argument_list pos:start="79:46" pos:end="79:49">(<argument pos:start="79:47" pos:end="79:48"><expr pos:start="79:47" pos:end="79:48"><name pos:start="79:47" pos:end="79:48">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="79:51" pos:end="79:65">: <expr pos:start="79:53" pos:end="79:65"><call pos:start="79:53" pos:end="79:65"><name pos:start="79:53" pos:end="79:61">avio_rb32</name><argument_list pos:start="79:62" pos:end="79:65">(<argument pos:start="79:63" pos:end="79:64"><expr pos:start="79:63" pos:end="79:64"><name pos:start="79:63" pos:end="79:64">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="79:68" pos:end="79:81">/* duration */</comment>



    <expr_stmt pos:start="83:5" pos:end="83:25"><expr pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:8">lang</name> <operator pos:start="83:10" pos:end="83:10">=</operator> <call pos:start="83:12" pos:end="83:24"><name pos:start="83:12" pos:end="83:20">avio_rb16</name><argument_list pos:start="83:21" pos:end="83:24">(<argument pos:start="83:22" pos:end="83:23"><expr pos:start="83:22" pos:end="83:23"><name pos:start="83:22" pos:end="83:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:27" pos:end="83:40">/* language */</comment>

    <if_stmt pos:start="85:5" pos:end="87:60"><if pos:start="85:5" pos:end="87:60">if <condition pos:start="85:8" pos:end="85:46">(<expr pos:start="85:9" pos:end="85:45"><call pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:29">ff_mov_lang_to_iso639</name><argument_list pos:start="85:30" pos:end="85:45">(<argument pos:start="85:31" pos:end="85:34"><expr pos:start="85:31" pos:end="85:34"><name pos:start="85:31" pos:end="85:34">lang</name></expr></argument>, <argument pos:start="85:37" pos:end="85:44"><expr pos:start="85:37" pos:end="85:44"><name pos:start="85:37" pos:end="85:44">language</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:60"><block_content pos:start="87:9" pos:end="87:60">

        <expr_stmt pos:start="87:9" pos:end="87:60"><expr pos:start="87:9" pos:end="87:59"><call pos:start="87:9" pos:end="87:59"><name pos:start="87:9" pos:end="87:19">av_dict_set</name><argument_list pos:start="87:20" pos:end="87:59">(<argument pos:start="87:21" pos:end="87:33"><expr pos:start="87:21" pos:end="87:33"><operator pos:start="87:21" pos:end="87:21">&amp;</operator><name pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:23">st</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:33">metadata</name></name></expr></argument>, <argument pos:start="87:36" pos:end="87:45"><expr pos:start="87:36" pos:end="87:45"><literal type="string" pos:start="87:36" pos:end="87:45">"language"</literal></expr></argument>, <argument pos:start="87:48" pos:end="87:55"><expr pos:start="87:48" pos:end="87:55"><name pos:start="87:48" pos:end="87:55">language</name></expr></argument>, <argument pos:start="87:58" pos:end="87:58"><expr pos:start="87:58" pos:end="87:58"><literal type="number" pos:start="87:58" pos:end="87:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:18"><expr pos:start="89:5" pos:end="89:17"><call pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:13">avio_rb16</name><argument_list pos:start="89:14" pos:end="89:17">(<argument pos:start="89:15" pos:end="89:16"><expr pos:start="89:15" pos:end="89:16"><name pos:start="89:15" pos:end="89:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:20" pos:end="89:32">/* quality */</comment>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
