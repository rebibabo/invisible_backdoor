<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20519.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:25">rcu_q_reader</name><parameter_list pos:start="1:26" pos:end="1:36">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:16">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:8">long</name> <name pos:start="5:10" pos:end="5:13">long</name></type> <name pos:start="5:15" pos:end="5:15">j</name></decl>, <decl pos:start="5:18" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:18" pos:end="5:30">n_reads_local</name> <init pos:start="5:32" pos:end="5:34">= <expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">list_element</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:27">el</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><operator pos:start="11:5" pos:end="11:5">*</operator><operator pos:start="11:6" pos:end="11:6">(</operator>struct <name pos:start="11:14" pos:end="11:28">rcu_reader_data</name> <operator pos:start="11:30" pos:end="11:30">*</operator><operator pos:start="11:31" pos:end="11:31">*</operator><operator pos:start="11:32" pos:end="11:32">)</operator><name pos:start="11:33" pos:end="11:35">arg</name> <operator pos:start="11:37" pos:end="11:37">=</operator> <operator pos:start="11:39" pos:end="11:39">&amp;</operator><name pos:start="11:40" pos:end="11:49">rcu_reader</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:14">atomic_inc</name><argument_list pos:start="13:15" pos:end="13:32">(<argument pos:start="13:16" pos:end="13:31"><expr pos:start="13:16" pos:end="13:31"><operator pos:start="13:16" pos:end="13:16">&amp;</operator><name pos:start="13:17" pos:end="13:31">nthreadsrunning</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="15:5" pos:end="19:5">while <condition pos:start="15:11" pos:end="15:33">(<expr pos:start="15:12" pos:end="15:32"><name pos:start="15:12" pos:end="15:17">goflag</name> <operator pos:start="15:19" pos:end="15:20">==</operator> <name pos:start="15:22" pos:end="15:32">GOFLAG_INIT</name></expr>)</condition> <block pos:start="15:35" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:23">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><call pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:16">g_usleep</name><argument_list pos:start="17:17" pos:end="17:22">(<argument pos:start="17:18" pos:end="17:21"><expr pos:start="17:18" pos:end="17:21"><literal type="number" pos:start="17:18" pos:end="17:21">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="23:5" pos:end="49:5">while <condition pos:start="23:11" pos:end="23:32">(<expr pos:start="23:12" pos:end="23:31"><name pos:start="23:12" pos:end="23:17">goflag</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <name pos:start="23:22" pos:end="23:31">GOFLAG_RUN</name></expr>)</condition> <block pos:start="23:34" pos:end="49:5">{<block_content pos:start="25:9" pos:end="47:22">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:21">rcu_read_lock</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:25">QLIST_FOREACH_RCU</name><argument_list pos:start="27:26" pos:end="27:50">(<argument pos:start="27:27" pos:end="27:28">el</argument>, <argument pos:start="27:31" pos:end="27:42">&amp;Q_list_head</argument>, <argument pos:start="27:45" pos:end="27:49">entry</argument>)</argument_list></macro> <block pos:start="27:52" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:13">

            <expr_stmt pos:start="29:13" pos:end="29:38"><expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:13">j</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:27">atomic_read</name><argument_list pos:start="29:28" pos:end="29:37">(<argument pos:start="29:29" pos:end="29:36"><expr pos:start="29:29" pos:end="29:36"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:36"><name pos:start="29:30" pos:end="29:31">el</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:36">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:17">void</name><operator pos:start="31:18" pos:end="31:18">)</operator><name pos:start="31:19" pos:end="31:19">j</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:25">n_reads_local</name><operator pos:start="33:26" pos:end="33:27">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:38">(<expr pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:22">goflag</name> <operator pos:start="35:24" pos:end="35:25">==</operator> <name pos:start="35:27" pos:end="35:37">GOFLAG_STOP</name></expr>)</condition> <block pos:start="35:40" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:22">

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:23">rcu_read_unlock</name><argument_list pos:start="43:24" pos:end="43:25">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:16">g_usleep</name><argument_list pos:start="47:17" pos:end="47:21">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><literal type="number" pos:start="47:18" pos:end="47:20">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><call pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:14">atomic_add</name><argument_list pos:start="51:15" pos:end="51:39">(<argument pos:start="51:16" pos:end="51:23"><expr pos:start="51:16" pos:end="51:23"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><name pos:start="51:17" pos:end="51:23">n_reads</name></expr></argument>, <argument pos:start="51:26" pos:end="51:38"><expr pos:start="51:26" pos:end="51:38"><name pos:start="51:26" pos:end="51:38">n_reads_local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:16">return <expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
