<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7855.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:37">nbd_negotiate</name><parameter_list pos:start="1:38" pos:end="1:70">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:47">NBDClient</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">client</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:29"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:29">[<expr pos:start="5:14" pos:end="5:28"><literal type="number" pos:start="5:14" pos:end="5:16">8</literal> <operator pos:start="5:16" pos:end="5:16">+</operator> <literal type="number" pos:start="5:18" pos:end="5:20">8</literal> <operator pos:start="5:20" pos:end="5:20">+</operator> <literal type="number" pos:start="5:22" pos:end="5:24">8</literal> <operator pos:start="5:24" pos:end="5:24">+</operator> <literal type="number" pos:start="5:26" pos:end="5:28">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:58"><decl pos:start="9:5" pos:end="13:57"><type pos:start="9:5" pos:end="9:18"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">uint16_t</name></type> <name pos:start="9:20" pos:end="9:26">myflags</name> <init pos:start="9:28" pos:end="13:57">= <expr pos:start="9:30" pos:end="13:57"><operator pos:start="9:30" pos:end="9:30">(</operator><name pos:start="9:31" pos:end="9:48">NBD_FLAG_HAS_FLAGS</name> <operator pos:start="9:50" pos:end="9:50">|</operator> <name pos:start="9:52" pos:end="9:69">NBD_FLAG_SEND_TRIM</name> <operator pos:start="9:71" pos:end="9:71">|</operator>

                              <name pos:start="11:31" pos:end="11:49">NBD_FLAG_SEND_FLUSH</name> <operator pos:start="11:51" pos:end="11:51">|</operator> <name pos:start="11:53" pos:end="11:69">NBD_FLAG_SEND_FUA</name> <operator pos:start="11:71" pos:end="11:71">|</operator>

                              <name pos:start="13:31" pos:end="13:56">NBD_FLAG_SEND_WRITE_ZEROES</name><operator pos:start="13:57" pos:end="13:57">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:17">oldStyle</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="45:7">/* Old style negotiation header without options

        [ 0 ..   7]   passwd       ("NBDMAGIC")

        [ 8 ..  15]   magic        (NBD_CLIENT_MAGIC)

        [16 ..  23]   size

        [24 ..  25]   server flags (0)

        [26 ..  27]   export flags

        [28 .. 151]   reserved     (0)



       New style negotiation header with options

        [ 0 ..   7]   passwd       ("NBDMAGIC")

        [ 8 ..  15]   magic        (NBD_OPTS_MAGIC)

        [16 ..  17]   server flags (0)

        ....options sent, ending in NBD_OPT_EXPORT_NAME or NBD_OPT_GO....

     */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><call pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:28">qio_channel_set_blocking</name><argument_list pos:start="49:29" pos:end="49:54">(<argument pos:start="49:30" pos:end="49:40"><expr pos:start="49:30" pos:end="49:40"><name pos:start="49:30" pos:end="49:40"><name pos:start="49:30" pos:end="49:35">client</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:40">ioc</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:47"><expr pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:47">false</name></expr></argument>, <argument pos:start="49:50" pos:end="49:53"><expr pos:start="49:50" pos:end="49:53"><name pos:start="49:50" pos:end="49:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:29">trace_nbd_negotiate_begin</name><argument_list pos:start="53:30" pos:end="53:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><call pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:10">memset</name><argument_list pos:start="55:11" pos:end="55:31">(<argument pos:start="55:12" pos:end="55:14"><expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">buf</name></expr></argument>, <argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr></argument>, <argument pos:start="55:20" pos:end="55:30"><expr pos:start="55:20" pos:end="55:30"><sizeof pos:start="55:20" pos:end="55:30">sizeof<argument_list pos:start="55:26" pos:end="55:30">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><call pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:10">memcpy</name><argument_list pos:start="57:11" pos:end="57:30">(<argument pos:start="57:12" pos:end="57:14"><expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">buf</name></expr></argument>, <argument pos:start="57:17" pos:end="57:26"><expr pos:start="57:17" pos:end="57:26"><literal type="string" pos:start="57:17" pos:end="57:26">"NBDMAGIC"</literal></expr></argument>, <argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:56"><expr pos:start="61:5" pos:end="61:55"><name pos:start="61:5" pos:end="61:12">oldStyle</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:21">client</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:26">exp</name></name> <operator pos:start="61:28" pos:end="61:29">!=</operator> <name pos:start="61:31" pos:end="61:34">NULL</name> <operator pos:start="61:36" pos:end="61:37">&amp;&amp;</operator> <operator pos:start="61:39" pos:end="61:39">!</operator><name pos:start="61:40" pos:end="61:55"><name pos:start="61:40" pos:end="61:45">client</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:55">tlscreds</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="115:5"><if pos:start="63:5" pos:end="85:5">if <condition pos:start="63:8" pos:end="63:17">(<expr pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">oldStyle</name></expr>)</condition> <block pos:start="63:19" pos:end="85:5">{<block_content pos:start="65:9" pos:end="83:9">

        <expr_stmt pos:start="65:9" pos:end="67:71"><expr pos:start="65:9" pos:end="67:70"><call pos:start="65:9" pos:end="67:70"><name pos:start="65:9" pos:end="65:37">trace_nbd_negotiate_old_style</name><argument_list pos:start="65:38" pos:end="67:70">(<argument pos:start="65:39" pos:end="65:55"><expr pos:start="65:39" pos:end="65:55"><name pos:start="65:39" pos:end="65:55"><name pos:start="65:39" pos:end="65:44">client</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:49">exp</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:55">size</name></name></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:69"><expr pos:start="67:39" pos:end="67:69"><name pos:start="67:39" pos:end="67:59"><name pos:start="67:39" pos:end="67:44">client</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:49">exp</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:59">nbdflags</name></name> <operator pos:start="67:61" pos:end="67:61">|</operator> <name pos:start="67:63" pos:end="67:69">myflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:16">stq_be_p</name><argument_list pos:start="69:17" pos:end="69:43">(<argument pos:start="69:18" pos:end="69:24"><expr pos:start="69:18" pos:end="69:24"><name pos:start="69:18" pos:end="69:20">buf</name> <operator pos:start="69:22" pos:end="69:22">+</operator> <literal type="number" pos:start="69:24" pos:end="69:24">8</literal></expr></argument>, <argument pos:start="69:27" pos:end="69:42"><expr pos:start="69:27" pos:end="69:42"><name pos:start="69:27" pos:end="69:42">NBD_CLIENT_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:46"><expr pos:start="71:9" pos:end="71:45"><call pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:16">stq_be_p</name><argument_list pos:start="71:17" pos:end="71:45">(<argument pos:start="71:18" pos:end="71:25"><expr pos:start="71:18" pos:end="71:25"><name pos:start="71:18" pos:end="71:20">buf</name> <operator pos:start="71:22" pos:end="71:22">+</operator> <literal type="number" pos:start="71:24" pos:end="71:25">16</literal></expr></argument>, <argument pos:start="71:28" pos:end="71:44"><expr pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:33">client</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:38">exp</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:44">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:60"><expr pos:start="73:9" pos:end="73:59"><call pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:16">stw_be_p</name><argument_list pos:start="73:17" pos:end="73:59">(<argument pos:start="73:18" pos:end="73:25"><expr pos:start="73:18" pos:end="73:25"><name pos:start="73:18" pos:end="73:20">buf</name> <operator pos:start="73:22" pos:end="73:22">+</operator> <literal type="number" pos:start="73:24" pos:end="73:25">26</literal></expr></argument>, <argument pos:start="73:28" pos:end="73:58"><expr pos:start="73:28" pos:end="73:58"><name pos:start="73:28" pos:end="73:48"><name pos:start="73:28" pos:end="73:33">client</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:38">exp</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:48">nbdflags</name></name> <operator pos:start="73:50" pos:end="73:50">|</operator> <name pos:start="73:52" pos:end="73:58">myflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:63">(<expr pos:start="77:13" pos:end="77:62"><call pos:start="77:13" pos:end="77:58"><name pos:start="77:13" pos:end="77:21">nbd_write</name><argument_list pos:start="77:22" pos:end="77:58">(<argument pos:start="77:23" pos:end="77:33"><expr pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:28">client</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:33">ioc</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">buf</name></expr></argument>, <argument pos:start="77:41" pos:end="77:51"><expr pos:start="77:41" pos:end="77:51"><sizeof pos:start="77:41" pos:end="77:51">sizeof<argument_list pos:start="77:47" pos:end="77:51">(<argument pos:start="77:48" pos:end="77:50"><expr pos:start="77:48" pos:end="77:50"><name pos:start="77:48" pos:end="77:50">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:54" pos:end="77:57"><expr pos:start="77:54" pos:end="77:57"><name pos:start="77:54" pos:end="77:57">errp</name></expr></argument>)</argument_list></call> <operator pos:start="77:60" pos:end="77:60">&lt;</operator> <literal type="number" pos:start="77:62" pos:end="77:62">0</literal></expr>)</condition> <block pos:start="77:65" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:27">

            <expr_stmt pos:start="79:13" pos:end="79:50"><expr pos:start="79:13" pos:end="79:49"><call pos:start="79:13" pos:end="79:49"><name pos:start="79:13" pos:end="79:25">error_prepend</name><argument_list pos:start="79:26" pos:end="79:49">(<argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><name pos:start="79:27" pos:end="79:30">errp</name></expr></argument>, <argument pos:start="79:33" pos:end="79:48"><expr pos:start="79:33" pos:end="79:48"><literal type="string" pos:start="79:33" pos:end="79:48">"write failed: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:27">return <expr pos:start="81:20" pos:end="81:26"><operator pos:start="81:20" pos:end="81:20">-</operator><name pos:start="81:21" pos:end="81:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="115:5">else <block pos:start="85:12" pos:end="115:5">{<block_content pos:start="87:9" pos:end="113:9">

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><call pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:16">stq_be_p</name><argument_list pos:start="87:17" pos:end="87:41">(<argument pos:start="87:18" pos:end="87:24"><expr pos:start="87:18" pos:end="87:24"><name pos:start="87:18" pos:end="87:20">buf</name> <operator pos:start="87:22" pos:end="87:22">+</operator> <literal type="number" pos:start="87:24" pos:end="87:24">8</literal></expr></argument>, <argument pos:start="87:27" pos:end="87:40"><expr pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:40">NBD_OPTS_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:73"><expr pos:start="89:9" pos:end="89:72"><call pos:start="89:9" pos:end="89:72"><name pos:start="89:9" pos:end="89:16">stw_be_p</name><argument_list pos:start="89:17" pos:end="89:72">(<argument pos:start="89:18" pos:end="89:25"><expr pos:start="89:18" pos:end="89:25"><name pos:start="89:18" pos:end="89:20">buf</name> <operator pos:start="89:22" pos:end="89:22">+</operator> <literal type="number" pos:start="89:24" pos:end="89:25">16</literal></expr></argument>, <argument pos:start="89:28" pos:end="89:71"><expr pos:start="89:28" pos:end="89:71"><name pos:start="89:28" pos:end="89:50">NBD_FLAG_FIXED_NEWSTYLE</name> <operator pos:start="89:52" pos:end="89:52">|</operator> <name pos:start="89:54" pos:end="89:71">NBD_FLAG_NO_ZEROES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:54">(<expr pos:start="93:13" pos:end="93:53"><call pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:21">nbd_write</name><argument_list pos:start="93:22" pos:end="93:49">(<argument pos:start="93:23" pos:end="93:33"><expr pos:start="93:23" pos:end="93:33"><name pos:start="93:23" pos:end="93:33"><name pos:start="93:23" pos:end="93:28">client</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:33">ioc</name></name></expr></argument>, <argument pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:38">buf</name></expr></argument>, <argument pos:start="93:41" pos:end="93:42"><expr pos:start="93:41" pos:end="93:42"><literal type="number" pos:start="93:41" pos:end="93:42">18</literal></expr></argument>, <argument pos:start="93:45" pos:end="93:48"><expr pos:start="93:45" pos:end="93:48"><name pos:start="93:45" pos:end="93:48">errp</name></expr></argument>)</argument_list></call> <operator pos:start="93:51" pos:end="93:51">&lt;</operator> <literal type="number" pos:start="93:53" pos:end="93:53">0</literal></expr>)</condition> <block pos:start="93:56" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:27">

            <expr_stmt pos:start="95:13" pos:end="95:50"><expr pos:start="95:13" pos:end="95:49"><call pos:start="95:13" pos:end="95:49"><name pos:start="95:13" pos:end="95:25">error_prepend</name><argument_list pos:start="95:26" pos:end="95:49">(<argument pos:start="95:27" pos:end="95:30"><expr pos:start="95:27" pos:end="95:30"><name pos:start="95:27" pos:end="95:30">errp</name></expr></argument>, <argument pos:start="95:33" pos:end="95:48"><expr pos:start="95:33" pos:end="95:48"><literal type="string" pos:start="95:33" pos:end="95:48">"write failed: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:27">return <expr pos:start="97:20" pos:end="97:26"><operator pos:start="97:20" pos:end="97:20">-</operator><name pos:start="97:21" pos:end="97:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:59"><expr pos:start="101:9" pos:end="101:58"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:58"><name pos:start="101:15" pos:end="101:35">nbd_negotiate_options</name><argument_list pos:start="101:36" pos:end="101:58">(<argument pos:start="101:37" pos:end="101:42"><expr pos:start="101:37" pos:end="101:42"><name pos:start="101:37" pos:end="101:42">client</name></expr></argument>, <argument pos:start="101:45" pos:end="101:51"><expr pos:start="101:45" pos:end="101:51"><name pos:start="101:45" pos:end="101:51">myflags</name></expr></argument>, <argument pos:start="101:54" pos:end="101:57"><expr pos:start="101:54" pos:end="101:57"><name pos:start="101:54" pos:end="101:57">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="113:9"><if pos:start="103:9" pos:end="113:9">if <condition pos:start="103:12" pos:end="103:21">(<expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:18">!=</operator> <literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>)</condition> <block pos:start="103:23" pos:end="113:9">{<block_content pos:start="105:13" pos:end="111:23">

            <if_stmt pos:start="105:13" pos:end="109:13"><if pos:start="105:13" pos:end="109:13">if <condition pos:start="105:16" pos:end="105:24">(<expr pos:start="105:17" pos:end="105:23"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:21">&lt;</operator> <literal type="number" pos:start="105:23" pos:end="105:23">0</literal></expr>)</condition> <block pos:start="105:26" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:67">

                <expr_stmt pos:start="107:17" pos:end="107:67"><expr pos:start="107:17" pos:end="107:66"><call pos:start="107:17" pos:end="107:66"><name pos:start="107:17" pos:end="107:29">error_prepend</name><argument_list pos:start="107:30" pos:end="107:66">(<argument pos:start="107:31" pos:end="107:34"><expr pos:start="107:31" pos:end="107:34"><name pos:start="107:31" pos:end="107:34">errp</name></expr></argument>, <argument pos:start="107:37" pos:end="107:65"><expr pos:start="107:37" pos:end="107:65"><literal type="string" pos:start="107:37" pos:end="107:65">"option negotiation failed: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="111:13" pos:end="111:23">return <expr pos:start="111:20" pos:end="111:22"><name pos:start="111:20" pos:end="111:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:34"><expr pos:start="119:5" pos:end="119:33"><call pos:start="119:5" pos:end="119:33"><name pos:start="119:5" pos:end="119:31">trace_nbd_negotiate_success</name><argument_list pos:start="119:32" pos:end="119:33">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
