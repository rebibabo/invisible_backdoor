<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5188.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">qemu_net_queue_append_iov</name><parameter_list pos:start="1:38" pos:end="11:61">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:46">NetQueue</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">queue</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:60"><decl pos:start="3:39" pos:end="3:60"><type pos:start="3:39" pos:end="3:60"><name pos:start="3:39" pos:end="3:52">NetClientState</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:60">sender</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:46">unsigned</name></type> <name pos:start="5:48" pos:end="5:52">flags</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:61"><decl pos:start="7:39" pos:end="7:61"><type pos:start="7:39" pos:end="7:61"><specifier pos:start="7:39" pos:end="7:43">const</specifier> <name pos:start="7:45" pos:end="7:56"><name pos:start="7:45" pos:end="7:50">struct</name> <name pos:start="7:52" pos:end="7:56">iovec</name></name> <modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:61">iov</name></decl></parameter>,

                                      <parameter pos:start="9:39" pos:end="9:48"><decl pos:start="9:39" pos:end="9:48"><type pos:start="9:39" pos:end="9:48"><name pos:start="9:39" pos:end="9:41">int</name></type> <name pos:start="9:43" pos:end="9:48">iovcnt</name></decl></parameter>,

                                      <parameter pos:start="11:39" pos:end="11:60"><decl pos:start="11:39" pos:end="11:60"><type pos:start="11:39" pos:end="11:60"><name pos:start="11:39" pos:end="11:51">NetPacketSent</name> <modifier pos:start="11:53" pos:end="11:53">*</modifier></type><name pos:start="11:54" pos:end="11:60">sent_cb</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="66:1">{<block_content pos:start="15:5" pos:end="64:55">

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">NetPacket</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:21">packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:18">max_len</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:56">(<expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">queue</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">nq_count</name></name> <operator pos:start="23:25" pos:end="23:26">&gt;=</operator> <name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:32">queue</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:43">nq_maxlen</name></name> <operator pos:start="23:45" pos:end="23:46">&amp;&amp;</operator> <operator pos:start="23:48" pos:end="23:48">!</operator><name pos:start="23:49" pos:end="23:55">sent_cb</name></expr>)</condition> <block pos:start="23:58" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return> <comment type="block" pos:start="25:17" pos:end="25:56">/* drop if queue full and no callback */</comment>

    </block_content>}</block></if></if_stmt>

    <for pos:start="29:5" pos:end="33:5">for <control pos:start="29:9" pos:end="29:32">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:27"><expr pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:26">iovcnt</name></expr>;</condition> <incr pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:29">i</name><operator pos:start="29:30" pos:end="29:31">++</operator></expr></incr>)</control> <block pos:start="29:34" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:15">max_len</name> <operator pos:start="31:17" pos:end="31:18">+=</operator> <name pos:start="31:20" pos:end="31:25"><name pos:start="31:20" pos:end="31:22">iov</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">i</name></expr>]</index></name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:33">iov_len</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:10">packet</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:50"><name pos:start="37:14" pos:end="37:21">g_malloc</name><argument_list pos:start="37:22" pos:end="37:50">(<argument pos:start="37:23" pos:end="37:49"><expr pos:start="37:23" pos:end="37:49"><sizeof pos:start="37:23" pos:end="37:39">sizeof<argument_list pos:start="37:29" pos:end="37:39">(<argument pos:start="37:30" pos:end="37:38"><expr pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:38">NetPacket</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:41" pos:end="37:41">+</operator> <name pos:start="37:43" pos:end="37:49">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:10">packet</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:18">sender</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:27">sender</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:10">packet</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">sent_cb</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:29">sent_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:10">packet</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">flags</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:25">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:10">packet</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:16">size</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="59:5">for <control pos:start="49:9" pos:end="49:32">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:27"><expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:26">iovcnt</name></expr>;</condition> <incr pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:29">i</name><operator pos:start="49:30" pos:end="49:31">++</operator></expr></incr>)</control> <block pos:start="49:34" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:28">

        <decl_stmt pos:start="51:9" pos:end="51:36"><decl pos:start="51:9" pos:end="51:35"><type pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:14">size_t</name></type> <name pos:start="51:16" pos:end="51:18">len</name> <init pos:start="51:20" pos:end="51:35">= <expr pos:start="51:22" pos:end="51:35"><name pos:start="51:22" pos:end="51:27"><name pos:start="51:22" pos:end="51:24">iov</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">i</name></expr>]</index></name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:35">iov_len</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:66"><expr pos:start="55:9" pos:end="55:65"><call pos:start="55:9" pos:end="55:65"><name pos:start="55:9" pos:end="55:14">memcpy</name><argument_list pos:start="55:15" pos:end="55:65">(<argument pos:start="55:16" pos:end="55:42"><expr pos:start="55:16" pos:end="55:42"><name pos:start="55:16" pos:end="55:27"><name pos:start="55:16" pos:end="55:21">packet</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:27">data</name></name> <operator pos:start="55:29" pos:end="55:29">+</operator> <name pos:start="55:31" pos:end="55:42"><name pos:start="55:31" pos:end="55:36">packet</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:42">size</name></name></expr></argument>, <argument pos:start="55:45" pos:end="55:59"><expr pos:start="55:45" pos:end="55:59"><name pos:start="55:45" pos:end="55:50"><name pos:start="55:45" pos:end="55:47">iov</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">i</name></expr>]</index></name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:59">iov_base</name></expr></argument>, <argument pos:start="55:62" pos:end="55:64"><expr pos:start="55:62" pos:end="55:64"><name pos:start="55:62" pos:end="55:64">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:14">packet</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">size</name></name> <operator pos:start="57:22" pos:end="57:23">+=</operator> <name pos:start="57:25" pos:end="57:27">len</name></expr>;</expr_stmt>

    </block_content>}</block></for>




    <expr_stmt pos:start="64:5" pos:end="64:55"><expr pos:start="64:5" pos:end="64:54"><call pos:start="64:5" pos:end="64:54"><name pos:start="64:5" pos:end="64:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="64:23" pos:end="64:54">(<argument pos:start="64:24" pos:end="64:38"><expr pos:start="64:24" pos:end="64:38"><operator pos:start="64:24" pos:end="64:24">&amp;</operator><name pos:start="64:25" pos:end="64:38"><name pos:start="64:25" pos:end="64:29">queue</name><operator pos:start="64:30" pos:end="64:31">-&gt;</operator><name pos:start="64:32" pos:end="64:38">packets</name></name></expr></argument>, <argument pos:start="64:41" pos:end="64:46"><expr pos:start="64:41" pos:end="64:46"><name pos:start="64:41" pos:end="64:46">packet</name></expr></argument>, <argument pos:start="64:49" pos:end="64:53"><expr pos:start="64:49" pos:end="64:53"><name pos:start="64:49" pos:end="64:53">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
