<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8309.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:42">ff_h264_decode_ref_pic_list_reordering</name><parameter_list pos:start="1:43" pos:end="1:58">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="229:1">{<block_content pos:start="5:5" pos:end="227:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">list</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">index</name></decl>, <decl pos:start="5:22" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:34">pic_structure</name></decl>, <decl pos:start="5:37" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:37">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">print_short_term</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">print_long_term</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="201:5">for <control pos:start="15:9" pos:end="15:48">(<init pos:start="15:10" pos:end="15:18"><expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:13">list</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>;</init> <condition pos:start="15:20" pos:end="15:40"><expr pos:start="15:20" pos:end="15:39"><name pos:start="15:20" pos:end="15:23">list</name> <operator pos:start="15:25" pos:end="15:25">&lt;</operator> <name pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:27">h</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:39">list_count</name></name></expr>;</condition> <incr pos:start="15:42" pos:end="15:47"><expr pos:start="15:42" pos:end="15:47"><name pos:start="15:42" pos:end="15:45">list</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control> <block pos:start="15:50" pos:end="201:5">{<block_content pos:start="17:9" pos:end="199:9">

        <for pos:start="17:9" pos:end="19:79">for <control pos:start="17:13" pos:end="17:48">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:43"><expr pos:start="17:21" pos:end="17:42"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:42"><name pos:start="17:25" pos:end="17:25">h</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:36">ref_count</name><index pos:start="17:37" pos:end="17:42">[<expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:45">i</name><operator pos:start="17:46" pos:end="17:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:13" pos:end="19:79"><block_content pos:start="19:13" pos:end="19:79">

            <expr_stmt pos:start="19:13" pos:end="19:79"><expr pos:start="19:13" pos:end="19:78"><call pos:start="19:13" pos:end="19:78"><name pos:start="19:13" pos:end="19:24">COPY_PICTURE</name><argument_list pos:start="19:25" pos:end="19:78">(<argument pos:start="19:26" pos:end="19:46"><expr pos:start="19:26" pos:end="19:46"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:46"><name pos:start="19:27" pos:end="19:27">h</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:37">ref_list</name><index pos:start="19:38" pos:end="19:43">[<expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">list</name></expr>]</index><index pos:start="19:44" pos:end="19:46">[<expr pos:start="19:45" pos:end="19:45"><name pos:start="19:45" pos:end="19:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:49" pos:end="19:77"><expr pos:start="19:49" pos:end="19:77"><operator pos:start="19:49" pos:end="19:49">&amp;</operator><name pos:start="19:50" pos:end="19:77"><name pos:start="19:50" pos:end="19:50">h</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:68">default_ref_list</name><index pos:start="19:69" pos:end="19:74">[<expr pos:start="19:70" pos:end="19:73"><name pos:start="19:70" pos:end="19:73">list</name></expr>]</index><index pos:start="19:75" pos:end="19:77">[<expr pos:start="19:76" pos:end="19:76"><name pos:start="19:76" pos:end="19:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="23:9" pos:end="199:9"><if pos:start="23:9" pos:end="199:9">if <condition pos:start="23:12" pos:end="23:30">(<expr pos:start="23:13" pos:end="23:29"><call pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:21">get_bits1</name><argument_list pos:start="23:22" pos:end="23:29">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:24">h</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:32" pos:end="199:9">{<block_content pos:start="25:13" pos:end="197:13">

            <decl_stmt pos:start="25:13" pos:end="25:39"><decl pos:start="25:13" pos:end="25:38"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:20">pred</name> <init pos:start="25:22" pos:end="25:38">= <expr pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:24">h</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:38">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="29:13" pos:end="197:13">for <control pos:start="29:17" pos:end="29:38">(<init pos:start="29:18" pos:end="29:27"><expr pos:start="29:18" pos:end="29:26"><name pos:start="29:18" pos:end="29:22">index</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>;</init> <condition pos:start="29:29" pos:end="29:29">;</condition> <incr pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:35">index</name><operator pos:start="29:36" pos:end="29:37">++</operator></expr></incr>)</control> <block pos:start="29:40" pos:end="197:13">{<block_content pos:start="31:17" pos:end="195:17">

                <decl_stmt pos:start="31:17" pos:end="31:83"><decl pos:start="31:17" pos:end="31:82"><type pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:24">unsigned</name> <name pos:start="31:26" pos:end="31:28">int</name></type> <name pos:start="31:30" pos:end="31:55">reordering_of_pic_nums_idc</name> <init pos:start="31:57" pos:end="31:82">= <expr pos:start="31:59" pos:end="31:82"><call pos:start="31:59" pos:end="31:82"><name pos:start="31:59" pos:end="31:74">get_ue_golomb_31</name><argument_list pos:start="31:75" pos:end="31:82">(<argument pos:start="31:76" pos:end="31:81"><expr pos:start="31:76" pos:end="31:81"><operator pos:start="31:76" pos:end="31:76">&amp;</operator><name pos:start="31:77" pos:end="31:81"><name pos:start="31:77" pos:end="31:77">h</name><operator pos:start="31:78" pos:end="31:79">-&gt;</operator><name pos:start="31:80" pos:end="31:81">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:36"><decl pos:start="33:17" pos:end="33:35"><type pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:24">unsigned</name> <name pos:start="33:26" pos:end="33:28">int</name></type> <name pos:start="33:30" pos:end="33:35">pic_id</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:22"><decl pos:start="35:17" pos:end="35:21"><type pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">int</name></type> <name pos:start="35:21" pos:end="35:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:36"><decl pos:start="37:17" pos:end="37:35"><type pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:23">Picture</name> <modifier pos:start="37:25" pos:end="37:25">*</modifier></type><name pos:start="37:26" pos:end="37:28">ref</name> <init pos:start="37:30" pos:end="37:35">= <expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="41:17" pos:end="43:26"><if pos:start="41:17" pos:end="43:26">if <condition pos:start="41:20" pos:end="41:52">(<expr pos:start="41:21" pos:end="41:51"><name pos:start="41:21" pos:end="41:46">reordering_of_pic_nums_idc</name> <operator pos:start="41:48" pos:end="41:49">==</operator> <literal type="number" pos:start="41:51" pos:end="41:51">3</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:26"><block_content pos:start="43:21" pos:end="43:26">

                    <break pos:start="43:21" pos:end="43:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:48">(<expr pos:start="47:21" pos:end="47:47"><name pos:start="47:21" pos:end="47:25">index</name> <operator pos:start="47:27" pos:end="47:28">&gt;=</operator> <name pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:30">h</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:41">ref_count</name><index pos:start="47:42" pos:end="47:47">[<expr pos:start="47:43" pos:end="47:46"><name pos:start="47:43" pos:end="47:46">list</name></expr>]</index></name></expr>)</condition> <block pos:start="47:50" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:30">

                    <expr_stmt pos:start="49:21" pos:end="49:81"><expr pos:start="49:21" pos:end="49:80"><call pos:start="49:21" pos:end="49:80"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="49:80">(<argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:28">h</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:35">avctx</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:49"><expr pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:52" pos:end="49:79"><expr pos:start="49:52" pos:end="49:79"><literal type="string" pos:start="49:52" pos:end="49:79">"reference count overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="51:21" pos:end="51:30">return <expr pos:start="51:28" pos:end="51:29"><operator pos:start="51:28" pos:end="51:28">-</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="57:17" pos:end="195:17"><if pos:start="57:17" pos:end="189:17">if <condition pos:start="57:20" pos:end="57:51">(<expr pos:start="57:21" pos:end="57:50"><name pos:start="57:21" pos:end="57:46">reordering_of_pic_nums_idc</name> <operator pos:start="57:48" pos:end="57:48">&lt;</operator> <literal type="number" pos:start="57:50" pos:end="57:50">3</literal></expr>)</condition> <block pos:start="57:53" pos:end="189:17">{<block_content pos:start="59:21" pos:end="187:21">

                    <if_stmt pos:start="59:21" pos:end="151:21"><if pos:start="59:21" pos:end="113:21">if <condition pos:start="59:24" pos:end="59:55">(<expr pos:start="59:25" pos:end="59:54"><name pos:start="59:25" pos:end="59:50">reordering_of_pic_nums_idc</name> <operator pos:start="59:52" pos:end="59:52">&lt;</operator> <literal type="number" pos:start="59:54" pos:end="59:54">2</literal></expr>)</condition> <block pos:start="59:57" pos:end="113:21">{<block_content pos:start="61:25" pos:end="111:47">

                        <decl_stmt pos:start="61:25" pos:end="61:88"><decl pos:start="61:25" pos:end="61:87"><type pos:start="61:25" pos:end="61:42"><specifier pos:start="61:25" pos:end="61:29">const</specifier> <name pos:start="61:31" pos:end="61:38">unsigned</name> <name pos:start="61:40" pos:end="61:42">int</name></type> <name pos:start="61:44" pos:end="61:59">abs_diff_pic_num</name> <init pos:start="61:61" pos:end="61:87">= <expr pos:start="61:63" pos:end="61:87"><call pos:start="61:63" pos:end="61:83"><name pos:start="61:63" pos:end="61:75">get_ue_golomb</name><argument_list pos:start="61:76" pos:end="61:83">(<argument pos:start="61:77" pos:end="61:82"><expr pos:start="61:77" pos:end="61:82"><operator pos:start="61:77" pos:end="61:77">&amp;</operator><name pos:start="61:78" pos:end="61:82"><name pos:start="61:78" pos:end="61:78">h</name><operator pos:start="61:79" pos:end="61:80">-&gt;</operator><name pos:start="61:81" pos:end="61:82">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:85" pos:end="61:85">+</operator> <literal type="number" pos:start="61:87" pos:end="61:87">1</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="63:25" pos:end="63:38"><decl pos:start="63:25" pos:end="63:37"><type pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">int</name></type> <name pos:start="63:29" pos:end="63:37">frame_num</name></decl>;</decl_stmt>



                        <if_stmt pos:start="67:25" pos:end="73:25"><if pos:start="67:25" pos:end="73:25">if <condition pos:start="67:28" pos:end="67:62">(<expr pos:start="67:29" pos:end="67:61"><name pos:start="67:29" pos:end="67:44">abs_diff_pic_num</name> <operator pos:start="67:46" pos:end="67:46">&gt;</operator> <name pos:start="67:48" pos:end="67:61"><name pos:start="67:48" pos:end="67:48">h</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:61">max_pic_num</name></name></expr>)</condition> <block pos:start="67:64" pos:end="73:25">{<block_content pos:start="69:29" pos:end="71:38">

                            <expr_stmt pos:start="69:29" pos:end="69:90"><expr pos:start="69:29" pos:end="69:89"><call pos:start="69:29" pos:end="69:89"><name pos:start="69:29" pos:end="69:34">av_log</name><argument_list pos:start="69:35" pos:end="69:89">(<argument pos:start="69:36" pos:end="69:43"><expr pos:start="69:36" pos:end="69:43"><name pos:start="69:36" pos:end="69:43"><name pos:start="69:36" pos:end="69:36">h</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:43">avctx</name></name></expr></argument>, <argument pos:start="69:46" pos:end="69:57"><expr pos:start="69:46" pos:end="69:57"><name pos:start="69:46" pos:end="69:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:60" pos:end="69:88"><expr pos:start="69:60" pos:end="69:88"><literal type="string" pos:start="69:60" pos:end="69:88">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="71:29" pos:end="71:38">return <expr pos:start="71:36" pos:end="71:37"><operator pos:start="71:36" pos:end="71:36">-</operator><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>



                        <if_stmt pos:start="77:25" pos:end="83:53"><if pos:start="77:25" pos:end="79:53">if <condition pos:start="77:28" pos:end="77:60">(<expr pos:start="77:29" pos:end="77:59"><name pos:start="77:29" pos:end="77:54">reordering_of_pic_nums_idc</name> <operator pos:start="77:56" pos:end="77:57">==</operator> <literal type="number" pos:start="77:59" pos:end="77:59">0</literal></expr>)</condition><block type="pseudo" pos:start="79:29" pos:end="79:53"><block_content pos:start="79:29" pos:end="79:53">

                            <expr_stmt pos:start="79:29" pos:end="79:53"><expr pos:start="79:29" pos:end="79:52"><name pos:start="79:29" pos:end="79:32">pred</name> <operator pos:start="79:34" pos:end="79:35">-=</operator> <name pos:start="79:37" pos:end="79:52">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="81:25" pos:end="83:53">else<block type="pseudo" pos:start="83:29" pos:end="83:53"><block_content pos:start="83:29" pos:end="83:53">

                            <expr_stmt pos:start="83:29" pos:end="83:53"><expr pos:start="83:29" pos:end="83:52"><name pos:start="83:29" pos:end="83:32">pred</name> <operator pos:start="83:34" pos:end="83:35">+=</operator> <name pos:start="83:37" pos:end="83:52">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:51"><expr pos:start="85:25" pos:end="85:50"><name pos:start="85:25" pos:end="85:28">pred</name> <operator pos:start="85:30" pos:end="85:31">&amp;=</operator> <name pos:start="85:33" pos:end="85:46"><name pos:start="85:33" pos:end="85:33">h</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:46">max_pic_num</name></name> <operator pos:start="85:48" pos:end="85:48">-</operator> <literal type="number" pos:start="85:50" pos:end="85:50">1</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="89:25" pos:end="89:77"><expr pos:start="89:25" pos:end="89:76"><name pos:start="89:25" pos:end="89:33">frame_num</name> <operator pos:start="89:35" pos:end="89:35">=</operator> <call pos:start="89:37" pos:end="89:76"><name pos:start="89:37" pos:end="89:51">pic_num_extract</name><argument_list pos:start="89:52" pos:end="89:76">(<argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><name pos:start="89:53" pos:end="89:53">h</name></expr></argument>, <argument pos:start="89:56" pos:end="89:59"><expr pos:start="89:56" pos:end="89:59"><name pos:start="89:56" pos:end="89:59">pred</name></expr></argument>, <argument pos:start="89:62" pos:end="89:75"><expr pos:start="89:62" pos:end="89:75"><operator pos:start="89:62" pos:end="89:62">&amp;</operator><name pos:start="89:63" pos:end="89:75">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <for pos:start="93:25" pos:end="107:25">for <control pos:start="93:29" pos:end="93:69">(<init pos:start="93:30" pos:end="93:56"><expr pos:start="93:30" pos:end="93:55"><name pos:start="93:30" pos:end="93:30">i</name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:51"><name pos:start="93:34" pos:end="93:34">h</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:51">short_ref_count</name></name> <operator pos:start="93:53" pos:end="93:53">-</operator> <literal type="number" pos:start="93:55" pos:end="93:55">1</literal></expr>;</init> <condition pos:start="93:58" pos:end="93:64"><expr pos:start="93:58" pos:end="93:63"><name pos:start="93:58" pos:end="93:58">i</name> <operator pos:start="93:60" pos:end="93:61">&gt;=</operator> <literal type="number" pos:start="93:63" pos:end="93:63">0</literal></expr>;</condition> <incr pos:start="93:66" pos:end="93:68"><expr pos:start="93:66" pos:end="93:68"><name pos:start="93:66" pos:end="93:66">i</name><operator pos:start="93:67" pos:end="93:68">--</operator></expr></incr>)</control> <block pos:start="93:71" pos:end="107:25">{<block_content pos:start="95:29" pos:end="105:38">

                            <expr_stmt pos:start="95:29" pos:end="95:50"><expr pos:start="95:29" pos:end="95:49"><name pos:start="95:29" pos:end="95:31">ref</name> <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:49"><name pos:start="95:35" pos:end="95:35">h</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:46">short_ref</name><index pos:start="95:47" pos:end="95:49">[<expr pos:start="95:48" pos:end="95:48"><name pos:start="95:48" pos:end="95:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="97:29" pos:end="97:51"><expr pos:start="97:29" pos:end="97:50"><call pos:start="97:29" pos:end="97:50"><name pos:start="97:29" pos:end="97:34">assert</name><argument_list pos:start="97:35" pos:end="97:50">(<argument pos:start="97:36" pos:end="97:49"><expr pos:start="97:36" pos:end="97:49"><name pos:start="97:36" pos:end="97:49"><name pos:start="97:36" pos:end="97:38">ref</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:49">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="99:29" pos:end="99:51"><expr pos:start="99:29" pos:end="99:50"><call pos:start="99:29" pos:end="99:50"><name pos:start="99:29" pos:end="99:34">assert</name><argument_list pos:start="99:35" pos:end="99:50">(<argument pos:start="99:36" pos:end="99:49"><expr pos:start="99:36" pos:end="99:49"><operator pos:start="99:36" pos:end="99:36">!</operator><name pos:start="99:37" pos:end="99:49"><name pos:start="99:37" pos:end="99:39">ref</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:49">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="101:29" pos:end="105:38"><if pos:start="101:29" pos:end="105:38">if <condition pos:start="101:32" pos:end="103:65">(<expr pos:start="101:33" pos:end="103:64"><name pos:start="101:33" pos:end="101:46"><name pos:start="101:33" pos:end="101:35">ref</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:46">frame_num</name></name> <operator pos:start="101:48" pos:end="101:49">==</operator> <name pos:start="101:51" pos:end="101:59">frame_num</name> <operator pos:start="101:61" pos:end="101:62">&amp;&amp;</operator>

                                <operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:47"><name pos:start="103:34" pos:end="103:36">ref</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:47">reference</name></name> <operator pos:start="103:49" pos:end="103:49">&amp;</operator> <name pos:start="103:51" pos:end="103:63">pic_structure</name><operator pos:start="103:64" pos:end="103:64">)</operator></expr>)</condition><block type="pseudo" pos:start="105:33" pos:end="105:38"><block_content pos:start="105:33" pos:end="105:38">

                                <break pos:start="105:33" pos:end="105:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <if_stmt pos:start="109:25" pos:end="111:47"><if pos:start="109:25" pos:end="111:47">if <condition pos:start="109:28" pos:end="109:35">(<expr pos:start="109:29" pos:end="109:34"><name pos:start="109:29" pos:end="109:29">i</name> <operator pos:start="109:31" pos:end="109:32">&gt;=</operator> <literal type="number" pos:start="109:34" pos:end="109:34">0</literal></expr>)</condition><block type="pseudo" pos:start="111:29" pos:end="111:47"><block_content pos:start="111:29" pos:end="111:47">

                            <expr_stmt pos:start="111:29" pos:end="111:47"><expr pos:start="111:29" pos:end="111:46"><name pos:start="111:29" pos:end="111:39"><name pos:start="111:29" pos:end="111:31">ref</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:39">pic_id</name></name> <operator pos:start="111:41" pos:end="111:41">=</operator> <name pos:start="111:43" pos:end="111:46">pred</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="113:23" pos:end="151:21">else <block pos:start="113:28" pos:end="151:21">{<block_content pos:start="115:25" pos:end="149:25">

                        <decl_stmt pos:start="115:25" pos:end="115:37"><decl pos:start="115:25" pos:end="115:36"><type pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">int</name></type> <name pos:start="115:29" pos:end="115:36">long_idx</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="117:25" pos:end="117:55"><expr pos:start="117:25" pos:end="117:54"><name pos:start="117:25" pos:end="117:30">pic_id</name> <operator pos:start="117:32" pos:end="117:32">=</operator> <call pos:start="117:34" pos:end="117:54"><name pos:start="117:34" pos:end="117:46">get_ue_golomb</name><argument_list pos:start="117:47" pos:end="117:54">(<argument pos:start="117:48" pos:end="117:53"><expr pos:start="117:48" pos:end="117:53"><operator pos:start="117:48" pos:end="117:48">&amp;</operator><name pos:start="117:49" pos:end="117:53"><name pos:start="117:49" pos:end="117:49">h</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="117:57" pos:end="117:75">//long_term_pic_idx</comment>



                        <expr_stmt pos:start="121:25" pos:end="121:78"><expr pos:start="121:25" pos:end="121:77"><name pos:start="121:25" pos:end="121:32">long_idx</name> <operator pos:start="121:34" pos:end="121:34">=</operator> <call pos:start="121:36" pos:end="121:77"><name pos:start="121:36" pos:end="121:50">pic_num_extract</name><argument_list pos:start="121:51" pos:end="121:77">(<argument pos:start="121:52" pos:end="121:52"><expr pos:start="121:52" pos:end="121:52"><name pos:start="121:52" pos:end="121:52">h</name></expr></argument>, <argument pos:start="121:55" pos:end="121:60"><expr pos:start="121:55" pos:end="121:60"><name pos:start="121:55" pos:end="121:60">pic_id</name></expr></argument>, <argument pos:start="121:63" pos:end="121:76"><expr pos:start="121:63" pos:end="121:76"><operator pos:start="121:63" pos:end="121:63">&amp;</operator><name pos:start="121:64" pos:end="121:76">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="125:25" pos:end="131:25"><if pos:start="125:25" pos:end="131:25">if <condition pos:start="125:28" pos:end="125:42">(<expr pos:start="125:29" pos:end="125:41"><name pos:start="125:29" pos:end="125:36">long_idx</name> <operator pos:start="125:38" pos:end="125:38">&gt;</operator> <literal type="number" pos:start="125:40" pos:end="125:41">31</literal></expr>)</condition> <block pos:start="125:44" pos:end="131:25">{<block_content pos:start="127:29" pos:end="129:38">

                            <expr_stmt pos:start="127:29" pos:end="127:91"><expr pos:start="127:29" pos:end="127:90"><call pos:start="127:29" pos:end="127:90"><name pos:start="127:29" pos:end="127:34">av_log</name><argument_list pos:start="127:35" pos:end="127:90">(<argument pos:start="127:36" pos:end="127:43"><expr pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:36">h</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:43">avctx</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:57"><expr pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:60" pos:end="127:89"><expr pos:start="127:60" pos:end="127:89"><literal type="string" pos:start="127:60" pos:end="127:89">"long_term_pic_idx overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="129:29" pos:end="129:38">return <expr pos:start="129:36" pos:end="129:37"><operator pos:start="129:36" pos:end="129:36">-</operator><literal type="number" pos:start="129:37" pos:end="129:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="133:25" pos:end="133:52"><expr pos:start="133:25" pos:end="133:51"><name pos:start="133:25" pos:end="133:27">ref</name> <operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:51"><name pos:start="133:31" pos:end="133:31">h</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:41">long_ref</name><index pos:start="133:42" pos:end="133:51">[<expr pos:start="133:43" pos:end="133:50"><name pos:start="133:43" pos:end="133:50">long_idx</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:58"><expr pos:start="135:25" pos:end="135:57"><call pos:start="135:25" pos:end="135:57"><name pos:start="135:25" pos:end="135:30">assert</name><argument_list pos:start="135:31" pos:end="135:57">(<argument pos:start="135:32" pos:end="135:56"><expr pos:start="135:32" pos:end="135:56"><operator pos:start="135:32" pos:end="135:32">!</operator><operator pos:start="135:33" pos:end="135:33">(</operator><name pos:start="135:34" pos:end="135:36">ref</name> <operator pos:start="135:38" pos:end="135:39">&amp;&amp;</operator> <operator pos:start="135:41" pos:end="135:41">!</operator><name pos:start="135:42" pos:end="135:55"><name pos:start="135:42" pos:end="135:44">ref</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:55">reference</name></name><operator pos:start="135:56" pos:end="135:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="137:25" pos:end="149:25"><if pos:start="137:25" pos:end="145:25">if <condition pos:start="137:28" pos:end="137:68">(<expr pos:start="137:29" pos:end="137:67"><name pos:start="137:29" pos:end="137:31">ref</name> <operator pos:start="137:33" pos:end="137:34">&amp;&amp;</operator> <operator pos:start="137:36" pos:end="137:36">(</operator><name pos:start="137:37" pos:end="137:50"><name pos:start="137:37" pos:end="137:39">ref</name><operator pos:start="137:40" pos:end="137:41">-&gt;</operator><name pos:start="137:42" pos:end="137:50">reference</name></name> <operator pos:start="137:52" pos:end="137:52">&amp;</operator> <name pos:start="137:54" pos:end="137:66">pic_structure</name><operator pos:start="137:67" pos:end="137:67">)</operator></expr>)</condition> <block pos:start="137:70" pos:end="145:25">{<block_content pos:start="139:29" pos:end="143:34">

                            <expr_stmt pos:start="139:29" pos:end="139:49"><expr pos:start="139:29" pos:end="139:48"><name pos:start="139:29" pos:end="139:39"><name pos:start="139:29" pos:end="139:31">ref</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:39">pic_id</name></name> <operator pos:start="139:41" pos:end="139:41">=</operator> <name pos:start="139:43" pos:end="139:48">pic_id</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="141:29" pos:end="141:50"><expr pos:start="141:29" pos:end="141:49"><call pos:start="141:29" pos:end="141:49"><name pos:start="141:29" pos:end="141:34">assert</name><argument_list pos:start="141:35" pos:end="141:49">(<argument pos:start="141:36" pos:end="141:48"><expr pos:start="141:36" pos:end="141:48"><name pos:start="141:36" pos:end="141:48"><name pos:start="141:36" pos:end="141:38">ref</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:48">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="143:29" pos:end="143:34"><expr pos:start="143:29" pos:end="143:33"><name pos:start="143:29" pos:end="143:29">i</name> <operator pos:start="143:31" pos:end="143:31">=</operator> <literal type="number" pos:start="143:33" pos:end="143:33">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="145:27" pos:end="149:25">else <block pos:start="145:32" pos:end="149:25">{<block_content pos:start="147:29" pos:end="147:35">

                            <expr_stmt pos:start="147:29" pos:end="147:35"><expr pos:start="147:29" pos:end="147:34"><name pos:start="147:29" pos:end="147:29">i</name> <operator pos:start="147:31" pos:end="147:31">=</operator> <operator pos:start="147:33" pos:end="147:33">-</operator><literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>



                    <if_stmt pos:start="155:21" pos:end="187:21"><if pos:start="155:21" pos:end="161:21">if <condition pos:start="155:24" pos:end="155:30">(<expr pos:start="155:25" pos:end="155:29"><name pos:start="155:25" pos:end="155:25">i</name> <operator pos:start="155:27" pos:end="155:27">&lt;</operator> <literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>)</condition> <block pos:start="155:32" pos:end="161:21">{<block_content pos:start="157:25" pos:end="159:78">

                        <expr_stmt pos:start="157:25" pos:end="157:101"><expr pos:start="157:25" pos:end="157:100"><call pos:start="157:25" pos:end="157:100"><name pos:start="157:25" pos:end="157:30">av_log</name><argument_list pos:start="157:31" pos:end="157:100">(<argument pos:start="157:32" pos:end="157:39"><expr pos:start="157:32" pos:end="157:39"><name pos:start="157:32" pos:end="157:39"><name pos:start="157:32" pos:end="157:32">h</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:39">avctx</name></name></expr></argument>, <argument pos:start="157:42" pos:end="157:53"><expr pos:start="157:42" pos:end="157:53"><name pos:start="157:42" pos:end="157:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:56" pos:end="157:99"><expr pos:start="157:56" pos:end="157:99"><literal type="string" pos:start="157:56" pos:end="157:99">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:78"><expr pos:start="159:25" pos:end="159:77"><call pos:start="159:25" pos:end="159:77"><name pos:start="159:25" pos:end="159:30">memset</name><argument_list pos:start="159:31" pos:end="159:77">(<argument pos:start="159:32" pos:end="159:56"><expr pos:start="159:32" pos:end="159:56"><operator pos:start="159:32" pos:end="159:32">&amp;</operator><name pos:start="159:33" pos:end="159:56"><name pos:start="159:33" pos:end="159:33">h</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:43">ref_list</name><index pos:start="159:44" pos:end="159:49">[<expr pos:start="159:45" pos:end="159:48"><name pos:start="159:45" pos:end="159:48">list</name></expr>]</index><index pos:start="159:50" pos:end="159:56">[<expr pos:start="159:51" pos:end="159:55"><name pos:start="159:51" pos:end="159:55">index</name></expr>]</index></name></expr></argument>, <argument pos:start="159:59" pos:end="159:59"><expr pos:start="159:59" pos:end="159:59"><literal type="number" pos:start="159:59" pos:end="159:59">0</literal></expr></argument>, <argument pos:start="159:62" pos:end="159:76"><expr pos:start="159:62" pos:end="159:76"><sizeof pos:start="159:62" pos:end="159:76">sizeof<argument_list pos:start="159:68" pos:end="159:76">(<argument pos:start="159:69" pos:end="159:75"><expr pos:start="159:69" pos:end="159:75"><name pos:start="159:69" pos:end="159:75">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="159:80" pos:end="159:86">//FIXME</comment>

                    </block_content>}</block></if> <else pos:start="161:23" pos:end="187:21">else <block pos:start="161:28" pos:end="187:21">{<block_content pos:start="163:25" pos:end="185:25">

                        <for pos:start="163:25" pos:end="171:25">for <control pos:start="163:29" pos:end="163:72">(<init pos:start="163:30" pos:end="163:39"><expr pos:start="163:30" pos:end="163:38"><name pos:start="163:30" pos:end="163:30">i</name> <operator pos:start="163:32" pos:end="163:32">=</operator> <name pos:start="163:34" pos:end="163:38">index</name></expr>;</init> <condition pos:start="163:41" pos:end="163:67"><expr pos:start="163:41" pos:end="163:66"><name pos:start="163:41" pos:end="163:41">i</name> <operator pos:start="163:43" pos:end="163:43">+</operator> <literal type="number" pos:start="163:45" pos:end="163:45">1</literal> <operator pos:start="163:47" pos:end="163:47">&lt;</operator> <name pos:start="163:49" pos:end="163:66"><name pos:start="163:49" pos:end="163:49">h</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:60">ref_count</name><index pos:start="163:61" pos:end="163:66">[<expr pos:start="163:62" pos:end="163:65"><name pos:start="163:62" pos:end="163:65">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="163:69" pos:end="163:71"><expr pos:start="163:69" pos:end="163:71"><name pos:start="163:69" pos:end="163:69">i</name><operator pos:start="163:70" pos:end="163:71">++</operator></expr></incr>)</control> <block pos:start="163:74" pos:end="171:25">{<block_content pos:start="165:29" pos:end="169:38">

                            <if_stmt pos:start="165:29" pos:end="169:38"><if pos:start="165:29" pos:end="169:38">if <condition pos:start="165:32" pos:end="167:77">(<expr pos:start="165:33" pos:end="167:76"><name pos:start="165:33" pos:end="165:45"><name pos:start="165:33" pos:end="165:35">ref</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:45">long_ref</name></name> <operator pos:start="165:47" pos:end="165:48">==</operator> <name pos:start="165:50" pos:end="165:69"><name pos:start="165:50" pos:end="165:50">h</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:60">ref_list</name><index pos:start="165:61" pos:end="165:66">[<expr pos:start="165:62" pos:end="165:65"><name pos:start="165:62" pos:end="165:65">list</name></expr>]</index><index pos:start="165:67" pos:end="165:69">[<expr pos:start="165:68" pos:end="165:68"><name pos:start="165:68" pos:end="165:68">i</name></expr>]</index></name><operator pos:start="165:70" pos:end="165:70">.</operator><name pos:start="165:71" pos:end="165:78">long_ref</name> <operator pos:start="165:80" pos:end="165:81">&amp;&amp;</operator>

                                <name pos:start="167:33" pos:end="167:43"><name pos:start="167:33" pos:end="167:35">ref</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:43">pic_id</name></name>   <operator pos:start="167:47" pos:end="167:48">==</operator> <name pos:start="167:50" pos:end="167:69"><name pos:start="167:50" pos:end="167:50">h</name><operator pos:start="167:51" pos:end="167:52">-&gt;</operator><name pos:start="167:53" pos:end="167:60">ref_list</name><index pos:start="167:61" pos:end="167:66">[<expr pos:start="167:62" pos:end="167:65"><name pos:start="167:62" pos:end="167:65">list</name></expr>]</index><index pos:start="167:67" pos:end="167:69">[<expr pos:start="167:68" pos:end="167:68"><name pos:start="167:68" pos:end="167:68">i</name></expr>]</index></name><operator pos:start="167:70" pos:end="167:70">.</operator><name pos:start="167:71" pos:end="167:76">pic_id</name></expr>)</condition><block type="pseudo" pos:start="169:33" pos:end="169:38"><block_content pos:start="169:33" pos:end="169:38">

                                <break pos:start="169:33" pos:end="169:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                        <for pos:start="173:25" pos:end="177:25">for <control pos:start="173:29" pos:end="173:46">(<init pos:start="173:30" pos:end="173:30">;</init> <condition pos:start="173:32" pos:end="173:41"><expr pos:start="173:32" pos:end="173:40"><name pos:start="173:32" pos:end="173:32">i</name> <operator pos:start="173:34" pos:end="173:34">&gt;</operator> <name pos:start="173:36" pos:end="173:40">index</name></expr>;</condition> <incr pos:start="173:43" pos:end="173:45"><expr pos:start="173:43" pos:end="173:45"><name pos:start="173:43" pos:end="173:43">i</name><operator pos:start="173:44" pos:end="173:45">--</operator></expr></incr>)</control> <block pos:start="173:48" pos:end="177:25">{<block_content pos:start="175:29" pos:end="175:91">

                            <expr_stmt pos:start="175:29" pos:end="175:91"><expr pos:start="175:29" pos:end="175:90"><call pos:start="175:29" pos:end="175:90"><name pos:start="175:29" pos:end="175:40">COPY_PICTURE</name><argument_list pos:start="175:41" pos:end="175:90">(<argument pos:start="175:42" pos:end="175:62"><expr pos:start="175:42" pos:end="175:62"><operator pos:start="175:42" pos:end="175:42">&amp;</operator><name pos:start="175:43" pos:end="175:62"><name pos:start="175:43" pos:end="175:43">h</name><operator pos:start="175:44" pos:end="175:45">-&gt;</operator><name pos:start="175:46" pos:end="175:53">ref_list</name><index pos:start="175:54" pos:end="175:59">[<expr pos:start="175:55" pos:end="175:58"><name pos:start="175:55" pos:end="175:58">list</name></expr>]</index><index pos:start="175:60" pos:end="175:62">[<expr pos:start="175:61" pos:end="175:61"><name pos:start="175:61" pos:end="175:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:65" pos:end="175:89"><expr pos:start="175:65" pos:end="175:89"><operator pos:start="175:65" pos:end="175:65">&amp;</operator><name pos:start="175:66" pos:end="175:89"><name pos:start="175:66" pos:end="175:66">h</name><operator pos:start="175:67" pos:end="175:68">-&gt;</operator><name pos:start="175:69" pos:end="175:76">ref_list</name><index pos:start="175:77" pos:end="175:82">[<expr pos:start="175:78" pos:end="175:81"><name pos:start="175:78" pos:end="175:81">list</name></expr>]</index><index pos:start="175:83" pos:end="175:89">[<expr pos:start="175:84" pos:end="175:88"><name pos:start="175:84" pos:end="175:84">i</name> <operator pos:start="175:86" pos:end="175:86">-</operator> <literal type="number" pos:start="175:88" pos:end="175:88">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="179:25" pos:end="179:69"><expr pos:start="179:25" pos:end="179:68"><call pos:start="179:25" pos:end="179:68"><name pos:start="179:25" pos:end="179:36">COPY_PICTURE</name><argument_list pos:start="179:37" pos:end="179:68">(<argument pos:start="179:38" pos:end="179:62"><expr pos:start="179:38" pos:end="179:62"><operator pos:start="179:38" pos:end="179:38">&amp;</operator><name pos:start="179:39" pos:end="179:62"><name pos:start="179:39" pos:end="179:39">h</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:49">ref_list</name><index pos:start="179:50" pos:end="179:55">[<expr pos:start="179:51" pos:end="179:54"><name pos:start="179:51" pos:end="179:54">list</name></expr>]</index><index pos:start="179:56" pos:end="179:62">[<expr pos:start="179:57" pos:end="179:61"><name pos:start="179:57" pos:end="179:61">index</name></expr>]</index></name></expr></argument>, <argument pos:start="179:65" pos:end="179:67"><expr pos:start="179:65" pos:end="179:67"><name pos:start="179:65" pos:end="179:67">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="181:25" pos:end="185:25"><if pos:start="181:25" pos:end="185:25">if <condition pos:start="181:28" pos:end="181:45">(<expr pos:start="181:29" pos:end="181:44"><call pos:start="181:29" pos:end="181:44"><name pos:start="181:29" pos:end="181:41">FIELD_PICTURE</name><argument_list pos:start="181:42" pos:end="181:44">(<argument pos:start="181:43" pos:end="181:43"><expr pos:start="181:43" pos:end="181:43"><name pos:start="181:43" pos:end="181:43">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:47" pos:end="185:25">{<block_content pos:start="183:29" pos:end="183:83">

                            <expr_stmt pos:start="183:29" pos:end="183:83"><expr pos:start="183:29" pos:end="183:82"><call pos:start="183:29" pos:end="183:82"><name pos:start="183:29" pos:end="183:40">pic_as_field</name><argument_list pos:start="183:41" pos:end="183:82">(<argument pos:start="183:42" pos:end="183:66"><expr pos:start="183:42" pos:end="183:66"><operator pos:start="183:42" pos:end="183:42">&amp;</operator><name pos:start="183:43" pos:end="183:66"><name pos:start="183:43" pos:end="183:43">h</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:53">ref_list</name><index pos:start="183:54" pos:end="183:59">[<expr pos:start="183:55" pos:end="183:58"><name pos:start="183:55" pos:end="183:58">list</name></expr>]</index><index pos:start="183:60" pos:end="183:66">[<expr pos:start="183:61" pos:end="183:65"><name pos:start="183:61" pos:end="183:65">index</name></expr>]</index></name></expr></argument>, <argument pos:start="183:69" pos:end="183:81"><expr pos:start="183:69" pos:end="183:81"><name pos:start="183:69" pos:end="183:81">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="189:19" pos:end="195:17">else <block pos:start="189:24" pos:end="195:17">{<block_content pos:start="191:21" pos:end="193:30">

                    <expr_stmt pos:start="191:21" pos:end="191:91"><expr pos:start="191:21" pos:end="191:90"><call pos:start="191:21" pos:end="191:90"><name pos:start="191:21" pos:end="191:26">av_log</name><argument_list pos:start="191:27" pos:end="191:90">(<argument pos:start="191:28" pos:end="191:35"><expr pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:28">h</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:35">avctx</name></name></expr></argument>, <argument pos:start="191:38" pos:end="191:49"><expr pos:start="191:38" pos:end="191:49"><name pos:start="191:38" pos:end="191:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:52" pos:end="191:89"><expr pos:start="191:52" pos:end="191:89"><literal type="string" pos:start="191:52" pos:end="191:89">"illegal reordering_of_pic_nums_idc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="193:21" pos:end="193:30">return <expr pos:start="193:28" pos:end="193:29"><operator pos:start="193:28" pos:end="193:28">-</operator><literal type="number" pos:start="193:29" pos:end="193:29">1</literal></expr>;</return>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="203:5" pos:end="223:5">for <control pos:start="203:9" pos:end="203:48">(<init pos:start="203:10" pos:end="203:18"><expr pos:start="203:10" pos:end="203:17"><name pos:start="203:10" pos:end="203:13">list</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <literal type="number" pos:start="203:17" pos:end="203:17">0</literal></expr>;</init> <condition pos:start="203:20" pos:end="203:40"><expr pos:start="203:20" pos:end="203:39"><name pos:start="203:20" pos:end="203:23">list</name> <operator pos:start="203:25" pos:end="203:25">&lt;</operator> <name pos:start="203:27" pos:end="203:39"><name pos:start="203:27" pos:end="203:27">h</name><operator pos:start="203:28" pos:end="203:29">-&gt;</operator><name pos:start="203:30" pos:end="203:39">list_count</name></name></expr>;</condition> <incr pos:start="203:42" pos:end="203:47"><expr pos:start="203:42" pos:end="203:47"><name pos:start="203:42" pos:end="203:45">list</name><operator pos:start="203:46" pos:end="203:47">++</operator></expr></incr>)</control> <block pos:start="203:50" pos:end="223:5">{<block_content pos:start="205:9" pos:end="221:9">

        <for pos:start="205:9" pos:end="221:9">for <control pos:start="205:13" pos:end="205:60">(<init pos:start="205:14" pos:end="205:23"><expr pos:start="205:14" pos:end="205:22"><name pos:start="205:14" pos:end="205:18">index</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr>;</init> <condition pos:start="205:25" pos:end="205:51"><expr pos:start="205:25" pos:end="205:50"><name pos:start="205:25" pos:end="205:29">index</name> <operator pos:start="205:31" pos:end="205:31">&lt;</operator> <name pos:start="205:33" pos:end="205:50"><name pos:start="205:33" pos:end="205:33">h</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:44">ref_count</name><index pos:start="205:45" pos:end="205:50">[<expr pos:start="205:46" pos:end="205:49"><name pos:start="205:46" pos:end="205:49">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="205:53" pos:end="205:59"><expr pos:start="205:53" pos:end="205:59"><name pos:start="205:53" pos:end="205:57">index</name><operator pos:start="205:58" pos:end="205:59">++</operator></expr></incr>)</control> <block pos:start="205:62" pos:end="221:9">{<block_content pos:start="207:13" pos:end="219:13">

            <if_stmt pos:start="207:13" pos:end="219:13"><if pos:start="207:13" pos:end="219:13">if <condition pos:start="207:16" pos:end="207:52">(<expr pos:start="207:17" pos:end="207:51"><operator pos:start="207:17" pos:end="207:17">!</operator><name pos:start="207:18" pos:end="207:41"><name pos:start="207:18" pos:end="207:18">h</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:28">ref_list</name><index pos:start="207:29" pos:end="207:34">[<expr pos:start="207:30" pos:end="207:33"><name pos:start="207:30" pos:end="207:33">list</name></expr>]</index><index pos:start="207:35" pos:end="207:41">[<expr pos:start="207:36" pos:end="207:40"><name pos:start="207:36" pos:end="207:40">index</name></expr>]</index></name><operator pos:start="207:42" pos:end="207:42">.</operator><name pos:start="207:43" pos:end="207:51"><name pos:start="207:43" pos:end="207:43">f</name><operator pos:start="207:44" pos:end="207:44">.</operator><name pos:start="207:45" pos:end="207:48">data</name><index pos:start="207:49" pos:end="207:51">[<expr pos:start="207:50" pos:end="207:50"><literal type="number" pos:start="207:50" pos:end="207:50">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="207:54" pos:end="219:13">{<block_content pos:start="209:17" pos:end="217:30">

                <expr_stmt pos:start="209:17" pos:end="209:78"><expr pos:start="209:17" pos:end="209:77"><call pos:start="209:17" pos:end="209:77"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="209:77">(<argument pos:start="209:24" pos:end="209:31"><expr pos:start="209:24" pos:end="209:31"><name pos:start="209:24" pos:end="209:31"><name pos:start="209:24" pos:end="209:24">h</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:31">avctx</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:45"><expr pos:start="209:34" pos:end="209:45"><name pos:start="209:34" pos:end="209:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:48" pos:end="209:76"><expr pos:start="209:48" pos:end="209:76"><literal type="string" pos:start="209:48" pos:end="209:76">"Missing reference picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="211:17" pos:end="217:30"><if pos:start="211:17" pos:end="213:91">if <condition pos:start="211:20" pos:end="211:59">(<expr pos:start="211:21" pos:end="211:58"><name pos:start="211:21" pos:end="211:48"><name pos:start="211:21" pos:end="211:21">h</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:39">default_ref_list</name><index pos:start="211:40" pos:end="211:45">[<expr pos:start="211:41" pos:end="211:44"><name pos:start="211:41" pos:end="211:44">list</name></expr>]</index><index pos:start="211:46" pos:end="211:48">[<expr pos:start="211:47" pos:end="211:47"><literal type="number" pos:start="211:47" pos:end="211:47">0</literal></expr>]</index></name><operator pos:start="211:49" pos:end="211:49">.</operator><name pos:start="211:50" pos:end="211:58"><name pos:start="211:50" pos:end="211:50">f</name><operator pos:start="211:51" pos:end="211:51">.</operator><name pos:start="211:52" pos:end="211:55">data</name><index pos:start="211:56" pos:end="211:58">[<expr pos:start="211:57" pos:end="211:57"><literal type="number" pos:start="211:57" pos:end="211:57">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:91"><block_content pos:start="213:21" pos:end="213:91">

                    <expr_stmt pos:start="213:21" pos:end="213:91"><expr pos:start="213:21" pos:end="213:90"><call pos:start="213:21" pos:end="213:90"><name pos:start="213:21" pos:end="213:32">COPY_PICTURE</name><argument_list pos:start="213:33" pos:end="213:90">(<argument pos:start="213:34" pos:end="213:58"><expr pos:start="213:34" pos:end="213:58"><operator pos:start="213:34" pos:end="213:34">&amp;</operator><name pos:start="213:35" pos:end="213:58"><name pos:start="213:35" pos:end="213:35">h</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:45">ref_list</name><index pos:start="213:46" pos:end="213:51">[<expr pos:start="213:47" pos:end="213:50"><name pos:start="213:47" pos:end="213:50">list</name></expr>]</index><index pos:start="213:52" pos:end="213:58">[<expr pos:start="213:53" pos:end="213:57"><name pos:start="213:53" pos:end="213:57">index</name></expr>]</index></name></expr></argument>, <argument pos:start="213:61" pos:end="213:89"><expr pos:start="213:61" pos:end="213:89"><operator pos:start="213:61" pos:end="213:61">&amp;</operator><name pos:start="213:62" pos:end="213:89"><name pos:start="213:62" pos:end="213:62">h</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:80">default_ref_list</name><index pos:start="213:81" pos:end="213:86">[<expr pos:start="213:82" pos:end="213:85"><name pos:start="213:82" pos:end="213:85">list</name></expr>]</index><index pos:start="213:87" pos:end="213:89">[<expr pos:start="213:88" pos:end="213:88"><literal type="number" pos:start="213:88" pos:end="213:88">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="215:17" pos:end="217:30">else<block type="pseudo" pos:start="217:21" pos:end="217:30"><block_content pos:start="217:21" pos:end="217:30">

                    <return pos:start="217:21" pos:end="217:30">return <expr pos:start="217:28" pos:end="217:29"><operator pos:start="217:28" pos:end="217:28">-</operator><literal type="number" pos:start="217:29" pos:end="217:29">1</literal></expr>;</return></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="227:5" pos:end="227:13">return <expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
