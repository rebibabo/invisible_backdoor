<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15539.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">query_facilities</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name></type> <name pos:start="5:19" pos:end="5:23">hwcap</name> <init pos:start="5:25" pos:end="5:50">= <expr pos:start="5:27" pos:end="5:50"><call pos:start="5:27" pos:end="5:50"><name pos:start="5:27" pos:end="5:40">qemu_getauxval</name><argument_list pos:start="5:41" pos:end="5:50">(<argument pos:start="5:42" pos:end="5:49"><expr pos:start="5:42" pos:end="5:49"><name pos:start="5:42" pos:end="5:49">AT_HWCAP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="11:75">/* Is STORE FACILITY LIST EXTENDED available?  Honestly, I believe this

       is present on all 64-bit systems, but let's check for it anyway.  */</comment>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:33">(<expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:13">hwcap</name> <operator pos:start="13:15" pos:end="13:15">&amp;</operator> <name pos:start="13:17" pos:end="13:32">HWCAP_S390_STFLE</name></expr>)</condition> <block pos:start="13:35" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:68">

        <decl_stmt pos:start="15:9" pos:end="15:37"><decl pos:start="15:9" pos:end="15:36"><type pos:start="15:9" pos:end="15:23"><specifier pos:start="15:9" pos:end="15:16">register</specifier> <name pos:start="15:18" pos:end="15:20">int</name> <name pos:start="15:22" pos:end="15:23">r0</name></type> <name pos:start="15:25" pos:end="15:31">__asm__</name><argument_list pos:start="15:32" pos:end="15:36">(<argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><literal type="string" pos:start="15:33" pos:end="15:35">"0"</literal></expr></argument>)</argument_list></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:39"><decl pos:start="17:9" pos:end="17:38"><type pos:start="17:9" pos:end="17:25"><specifier pos:start="17:9" pos:end="17:16">register</specifier> <name pos:start="17:18" pos:end="17:21">void</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier><name pos:start="17:24" pos:end="17:25">r1</name></type> <name pos:start="17:27" pos:end="17:33">__asm__</name><argument_list pos:start="17:34" pos:end="17:38">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><literal type="string" pos:start="17:35" pos:end="17:37">"1"</literal></expr></argument>)</argument_list></decl>;</decl_stmt>



        <comment type="block" pos:start="21:9" pos:end="21:26">/* stfle 0(%r1) */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:10">r1</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:24">facilities</name></expr>;</expr_stmt>

        <asm pos:start="25:9" pos:end="27:68">asm <specifier pos:start="25:13" pos:end="25:20">volatile</specifier>(".word 0xb2b0,0x1000"

                     : "=r"(r0) : "0"(0), "r"(r1) : "memory", "cc");</asm>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
