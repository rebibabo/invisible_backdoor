<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18855.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">BlockAIOCB</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:37">bdrv_aio_rw_vector</name><parameter_list pos:start="1:38" pos:end="13:51">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><name pos:start="3:39" pos:end="3:45">int64_t</name></type> <name pos:start="3:47" pos:end="3:56">sector_num</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:56"><decl pos:start="5:39" pos:end="5:56"><type pos:start="5:39" pos:end="5:56"><name pos:start="5:39" pos:end="5:50">QEMUIOVector</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:56">qiov</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:52"><decl pos:start="7:39" pos:end="7:52"><type pos:start="7:39" pos:end="7:52"><name pos:start="7:39" pos:end="7:41">int</name></type> <name pos:start="7:43" pos:end="7:52">nb_sectors</name></decl></parameter>,

                                      <parameter pos:start="9:39" pos:end="9:61"><decl pos:start="9:39" pos:end="9:61"><type pos:start="9:39" pos:end="9:61"><name pos:start="9:39" pos:end="9:57">BlockCompletionFunc</name> <modifier pos:start="9:59" pos:end="9:59">*</modifier></type><name pos:start="9:60" pos:end="9:61">cb</name></decl></parameter>,

                                      <parameter pos:start="11:39" pos:end="11:50"><decl pos:start="11:39" pos:end="11:50"><type pos:start="11:39" pos:end="11:50"><name pos:start="11:39" pos:end="11:42">void</name> <modifier pos:start="11:44" pos:end="11:44">*</modifier></type><name pos:start="11:45" pos:end="11:50">opaque</name></decl></parameter>,

                                      <parameter pos:start="13:39" pos:end="13:50"><decl pos:start="13:39" pos:end="13:50"><type pos:start="13:39" pos:end="13:50"><name pos:start="13:39" pos:end="13:41">int</name></type> <name pos:start="13:43" pos:end="13:50">is_write</name></decl></parameter>)</parameter_list>



<block pos:start="17:1" pos:end="59:1">{<block_content pos:start="19:5" pos:end="57:24">

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">BlockAIOCBSync</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">acb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:60"><expr pos:start="23:5" pos:end="23:59"><name pos:start="23:5" pos:end="23:7">acb</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:59"><name pos:start="23:11" pos:end="23:22">qemu_aio_get</name><argument_list pos:start="23:23" pos:end="23:59">(<argument pos:start="23:24" pos:end="23:42"><expr pos:start="23:24" pos:end="23:42"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:42">bdrv_em_aiocb_info</name></expr></argument>, <argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">bs</name></expr></argument>, <argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><name pos:start="23:49" pos:end="23:50">cb</name></expr></argument>, <argument pos:start="23:53" pos:end="23:58"><expr pos:start="23:53" pos:end="23:58"><name pos:start="23:53" pos:end="23:58">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">acb</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:17">is_write</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:28">is_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">qiov</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">qiov</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">bounce</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:53"><name pos:start="29:19" pos:end="29:37">qemu_try_blockalign</name><argument_list pos:start="29:38" pos:end="29:53">(<argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">bs</name></expr></argument>, <argument pos:start="29:43" pos:end="29:52"><expr pos:start="29:43" pos:end="29:52"><name pos:start="29:43" pos:end="29:52"><name pos:start="29:43" pos:end="29:46">qiov</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:52">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:72"><expr pos:start="31:5" pos:end="31:71"><name pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:7">acb</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:11">bh</name></name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:71"><name pos:start="31:15" pos:end="31:24">aio_bh_new</name><argument_list pos:start="31:25" pos:end="31:71">(<argument pos:start="31:26" pos:end="31:49"><expr pos:start="31:26" pos:end="31:49"><call pos:start="31:26" pos:end="31:49"><name pos:start="31:26" pos:end="31:45">bdrv_get_aio_context</name><argument_list pos:start="31:46" pos:end="31:49">(<argument pos:start="31:47" pos:end="31:48"><expr pos:start="31:47" pos:end="31:48"><name pos:start="31:47" pos:end="31:48">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:52" pos:end="31:65"><expr pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:65">bdrv_aio_bh_cb</name></expr></argument>, <argument pos:start="31:68" pos:end="31:70"><expr pos:start="31:68" pos:end="31:70"><name pos:start="31:68" pos:end="31:70">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">acb</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:19">bounce</name></name> <operator pos:start="35:21" pos:end="35:22">==</operator> <name pos:start="35:24" pos:end="35:27">NULL</name></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:27">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">acb</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">ret</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">-</operator><name pos:start="37:21" pos:end="37:26">ENOMEM</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="45:5">else if <condition pos:start="39:15" pos:end="39:24">(<expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23">is_write</name></expr>)</condition> <block pos:start="39:26" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:80">

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><call pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:25">qemu_iovec_to_buf</name><argument_list pos:start="41:26" pos:end="41:64">(<argument pos:start="41:27" pos:end="41:35"><expr pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:35"><name pos:start="41:27" pos:end="41:29">acb</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:35">qiov</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:38"><expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:51"><expr pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:43">acb</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:51">bounce</name></name></expr></argument>, <argument pos:start="41:54" pos:end="41:63"><expr pos:start="41:54" pos:end="41:63"><name pos:start="41:54" pos:end="41:63"><name pos:start="41:54" pos:end="41:57">qiov</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:63">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:80"><expr pos:start="43:9" pos:end="43:79"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">acb</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">ret</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:79"><name pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:21">bs</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">drv</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:38">bdrv_write</name></name><argument_list pos:start="43:39" pos:end="43:79">(<argument pos:start="43:40" pos:end="43:41"><expr pos:start="43:40" pos:end="43:41"><name pos:start="43:40" pos:end="43:41">bs</name></expr></argument>, <argument pos:start="43:44" pos:end="43:53"><expr pos:start="43:44" pos:end="43:53"><name pos:start="43:44" pos:end="43:53">sector_num</name></expr></argument>, <argument pos:start="43:56" pos:end="43:66"><expr pos:start="43:56" pos:end="43:66"><name pos:start="43:56" pos:end="43:66"><name pos:start="43:56" pos:end="43:58">acb</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:66">bounce</name></name></expr></argument>, <argument pos:start="43:69" pos:end="43:78"><expr pos:start="43:69" pos:end="43:78"><name pos:start="43:69" pos:end="43:78">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:79">

        <expr_stmt pos:start="47:9" pos:end="47:79"><expr pos:start="47:9" pos:end="47:78"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">acb</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">ret</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:78"><name pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:21">bs</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">drv</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:37">bdrv_read</name></name><argument_list pos:start="47:38" pos:end="47:78">(<argument pos:start="47:39" pos:end="47:40"><expr pos:start="47:39" pos:end="47:40"><name pos:start="47:39" pos:end="47:40">bs</name></expr></argument>, <argument pos:start="47:43" pos:end="47:52"><expr pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:52">sector_num</name></expr></argument>, <argument pos:start="47:55" pos:end="47:65"><expr pos:start="47:55" pos:end="47:65"><name pos:start="47:55" pos:end="47:65"><name pos:start="47:55" pos:end="47:57">acb</name><operator pos:start="47:58" pos:end="47:59">-&gt;</operator><name pos:start="47:60" pos:end="47:65">bounce</name></name></expr></argument>, <argument pos:start="47:68" pos:end="47:77"><expr pos:start="47:68" pos:end="47:77"><name pos:start="47:68" pos:end="47:77">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><call pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:20">qemu_bh_schedule</name><argument_list pos:start="53:21" pos:end="53:29">(<argument pos:start="53:22" pos:end="53:28"><expr pos:start="53:22" pos:end="53:28"><name pos:start="53:22" pos:end="53:28"><name pos:start="53:22" pos:end="53:24">acb</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:28">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:24">return <expr pos:start="57:12" pos:end="57:23"><operator pos:start="57:12" pos:end="57:12">&amp;</operator><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:15">acb</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
