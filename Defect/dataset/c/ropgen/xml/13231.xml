<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13231.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">do_req</name><parameter_list pos:start="1:18" pos:end="3:69">(<parameter pos:start="1:19" pos:end="1:28"><decl pos:start="1:19" pos:end="1:28"><type pos:start="1:19" pos:end="1:28"><name pos:start="1:19" pos:end="1:21">int</name></type> <name pos:start="1:23" pos:end="1:28">sockfd</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:53"><name pos:start="1:31" pos:end="1:40">AioContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:53">aio_context</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:66">SheepdogReq</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">hdr</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:28"><decl pos:start="3:19" pos:end="3:28"><type pos:start="3:19" pos:end="3:28"><name pos:start="3:19" pos:end="3:22">void</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:28">data</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:38">unsigned</name> <name pos:start="3:40" pos:end="3:42">int</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">wlen</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:68"><decl pos:start="3:51" pos:end="3:68"><type pos:start="3:51" pos:end="3:68"><name pos:start="3:51" pos:end="3:58">unsigned</name> <name pos:start="3:60" pos:end="3:62">int</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:68">rlen</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:20">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">Coroutine</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="27:6"><decl pos:start="9:5" pos:end="27:5"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">SheepdogReqCo</name></type> <name pos:start="9:19" pos:end="9:22">srco</name> <init pos:start="9:24" pos:end="27:5">= <expr pos:start="9:26" pos:end="27:5"><block pos:start="9:26" pos:end="27:5">{

        <expr pos:start="11:9" pos:end="11:24"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:15">sockfd</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:24">sockfd</name></expr>,

        <expr pos:start="13:9" pos:end="13:34"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:20">aio_context</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:34">aio_context</name></expr>,

        <expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">hdr</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">hdr</name></expr>,

        <expr pos:start="17:9" pos:end="17:20"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">data</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:20">data</name></expr>,

        <expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">wlen</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">wlen</name></expr>,

        <expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:13">rlen</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">rlen</name></expr>,

        <expr pos:start="23:9" pos:end="23:16"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>,

        <expr pos:start="25:9" pos:end="25:25"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:17">finished</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:25">false</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><call pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:25">qemu_in_coroutine</name><argument_list pos:start="31:26" pos:end="31:27">()</argument_list></call></expr>)</condition> <block pos:start="31:30" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:25">

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:17">do_co_req</name><argument_list pos:start="33:18" pos:end="33:24">(<argument pos:start="33:19" pos:end="33:23"><expr pos:start="33:19" pos:end="33:23"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:23">srco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="47:5">else <block pos:start="35:12" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:10">co</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:45"><name pos:start="37:14" pos:end="37:34">qemu_coroutine_create</name><argument_list pos:start="37:35" pos:end="37:45">(<argument pos:start="37:36" pos:end="37:44"><expr pos:start="37:36" pos:end="37:44"><name pos:start="37:36" pos:end="37:44">do_co_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:28">qemu_coroutine_enter</name><argument_list pos:start="39:29" pos:end="39:39">(<argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><name pos:start="39:30" pos:end="39:31">co</name></expr></argument>, <argument pos:start="39:34" pos:end="39:38"><expr pos:start="39:34" pos:end="39:38"><operator pos:start="39:34" pos:end="39:34">&amp;</operator><name pos:start="39:35" pos:end="39:38">srco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="41:9" pos:end="45:9">while <condition pos:start="41:15" pos:end="41:30">(<expr pos:start="41:16" pos:end="41:29"><operator pos:start="41:16" pos:end="41:16">!</operator><name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:20">srco</name><operator pos:start="41:21" pos:end="41:21">.</operator><name pos:start="41:22" pos:end="41:29">finished</name></name></expr>)</condition> <block pos:start="41:32" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:40">

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:20">aio_poll</name><argument_list pos:start="43:21" pos:end="43:39">(<argument pos:start="43:22" pos:end="43:32"><expr pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:32">aio_context</name></expr></argument>, <argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:38">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>



    <return pos:start="51:5" pos:end="51:20">return <expr pos:start="51:12" pos:end="51:19"><name pos:start="51:12" pos:end="51:19"><name pos:start="51:12" pos:end="51:15">srco</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
