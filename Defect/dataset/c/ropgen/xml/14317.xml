<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14317.c" pos:tabs="8"><function pos:start="1:1" pos:end="691:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_hevc_decode_nal_pps</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="691:1">{<block_content pos:start="5:5" pos:end="689:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">HEVClc</name><operator pos:start="5:35" pos:end="5:35">.</operator><name pos:start="5:36" pos:end="5:37">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:11">HEVCSPS</name>      <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">sps</name> <init pos:start="7:23" pos:end="7:28">= <expr pos:start="7:25" pos:end="7:28"><name pos:start="7:25" pos:end="7:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:67"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">pic_area_in_ctbs</name></decl>, <decl pos:start="9:27" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:45">pic_area_in_min_cbs</name></decl>, <decl pos:start="9:48" pos:end="9:66"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:48" pos:end="9:66">pic_area_in_min_tbs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:33">log2_diff_ctb_min_tb_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">x</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">y</name></decl>, <decl pos:start="13:21" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:31">ctb_addr_rs</name></decl>, <decl pos:start="13:34" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:34" pos:end="13:40">tile_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name>    <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">pps_id</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">AVBufferRef</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:24">pps_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">HEVCPPS</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">pps</name> <init pos:start="23:18" pos:end="23:43">= <expr pos:start="23:20" pos:end="23:43"><call pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:29">av_mallocz</name><argument_list pos:start="23:30" pos:end="23:43">(<argument pos:start="23:31" pos:end="23:42"><expr pos:start="23:31" pos:end="23:42"><sizeof pos:start="23:31" pos:end="23:42">sizeof<argument_list pos:start="23:37" pos:end="23:42">(<argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><operator pos:start="23:38" pos:end="23:38">*</operator><name pos:start="23:39" pos:end="23:41">pps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">pps</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:55"><expr pos:start="33:5" pos:end="35:54"><name pos:start="33:5" pos:end="33:11">pps_buf</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="35:54"><name pos:start="33:15" pos:end="33:30">av_buffer_create</name><argument_list pos:start="33:31" pos:end="35:54">(<argument pos:start="33:32" pos:end="33:45"><expr pos:start="33:32" pos:end="33:45"><operator pos:start="33:32" pos:end="33:32">(</operator><name pos:start="33:33" pos:end="33:39">uint8_t</name> <operator pos:start="33:41" pos:end="33:41">*</operator><operator pos:start="33:42" pos:end="33:42">)</operator><name pos:start="33:43" pos:end="33:45">pps</name></expr></argument>, <argument pos:start="33:48" pos:end="33:59"><expr pos:start="33:48" pos:end="33:59"><sizeof pos:start="33:48" pos:end="33:59">sizeof<argument_list pos:start="33:54" pos:end="33:59">(<argument pos:start="33:55" pos:end="33:58"><expr pos:start="33:55" pos:end="33:58"><operator pos:start="33:55" pos:end="33:55">*</operator><name pos:start="33:56" pos:end="33:58">pps</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:44"><expr pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:44">hevc_pps_free</name></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><name pos:start="35:47" pos:end="35:50">NULL</name></expr></argument>, <argument pos:start="35:53" pos:end="35:53"><expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">pps_buf</name></expr>)</condition> <block pos:start="37:19" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:31">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><call pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:16">av_freep</name><argument_list pos:start="39:17" pos:end="39:22">(<argument pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:21"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:21">pps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:52">(<argument pos:start="47:12" pos:end="47:19"><expr pos:start="47:12" pos:end="47:19"><name pos:start="47:12" pos:end="47:19"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:19">avctx</name></name></expr></argument>, <argument pos:start="47:22" pos:end="47:33"><expr pos:start="47:22" pos:end="47:33"><name pos:start="47:22" pos:end="47:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:36" pos:end="47:51"><expr pos:start="47:36" pos:end="47:51"><literal type="string" pos:start="47:36" pos:end="47:51">"Decoding PPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="51:5" pos:end="51:21">// Default values</comment>

    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:7">pps</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:46">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="53:48" pos:end="53:48">=</operator> <literal type="number" pos:start="53:50" pos:end="53:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:51"><expr pos:start="55:5" pos:end="55:50"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:7">pps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:25">num_tile_columns</name></name>                      <operator pos:start="55:48" pos:end="55:48">=</operator> <literal type="number" pos:start="55:50" pos:end="55:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:51"><expr pos:start="57:5" pos:end="57:50"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:7">pps</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:22">num_tile_rows</name></name>                         <operator pos:start="57:48" pos:end="57:48">=</operator> <literal type="number" pos:start="57:50" pos:end="57:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:7">pps</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:29">uniform_spacing_flag</name></name>                  <operator pos:start="59:48" pos:end="59:48">=</operator> <literal type="number" pos:start="59:50" pos:end="59:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">pps</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:20">disable_dbf</name></name>                           <operator pos:start="61:48" pos:end="61:48">=</operator> <literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">pps</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:20">beta_offset</name></name>                           <operator pos:start="63:48" pos:end="63:48">=</operator> <literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:7">pps</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:18">tc_offset</name></name>                             <operator pos:start="65:48" pos:end="65:48">=</operator> <literal type="number" pos:start="65:50" pos:end="65:50">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:23">// Coded parameters</comment>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:10">pps_id</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:35"><name pos:start="71:14" pos:end="71:31">get_ue_golomb_long</name><argument_list pos:start="71:32" pos:end="71:35">(<argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><name pos:start="71:33" pos:end="71:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:14">pps_id</name> <operator pos:start="73:16" pos:end="73:17">&gt;=</operator> <name pos:start="73:19" pos:end="73:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="73:34" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:17">

        <expr_stmt pos:start="75:9" pos:end="75:76"><expr pos:start="75:9" pos:end="75:75"><call pos:start="75:9" pos:end="75:75"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:75">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">avctx</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:40" pos:end="75:66"><expr pos:start="75:40" pos:end="75:66"><literal type="string" pos:start="75:40" pos:end="75:66">"PPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="75:69" pos:end="75:74"><expr pos:start="75:69" pos:end="75:74"><name pos:start="75:69" pos:end="75:74">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:17">goto <name pos:start="79:14" pos:end="79:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:41"><expr pos:start="83:5" pos:end="83:40"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:7">pps</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:15">sps_id</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:40"><name pos:start="83:19" pos:end="83:36">get_ue_golomb_long</name><argument_list pos:start="83:37" pos:end="83:40">(<argument pos:start="83:38" pos:end="83:39"><expr pos:start="83:38" pos:end="83:39"><name pos:start="83:38" pos:end="83:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:37">(<expr pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:11">pps</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:19">sps_id</name></name> <operator pos:start="85:21" pos:end="85:22">&gt;=</operator> <name pos:start="85:24" pos:end="85:36">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="85:39" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:17">

        <expr_stmt pos:start="87:9" pos:end="87:81"><expr pos:start="87:9" pos:end="87:80"><call pos:start="87:9" pos:end="87:80"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:80">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">avctx</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:40" pos:end="87:66"><expr pos:start="87:40" pos:end="87:66"><literal type="string" pos:start="87:40" pos:end="87:66">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="87:69" pos:end="87:79"><expr pos:start="87:69" pos:end="87:79"><name pos:start="87:69" pos:end="87:79"><name pos:start="87:69" pos:end="87:71">pps</name><operator pos:start="87:72" pos:end="87:73">-&gt;</operator><name pos:start="87:74" pos:end="87:79">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:17">goto <name pos:start="91:14" pos:end="91:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:34">(<expr pos:start="95:9" pos:end="95:33"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:33"><name pos:start="95:10" pos:end="95:10">s</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:20">sps_list</name><index pos:start="95:21" pos:end="95:33">[<expr pos:start="95:22" pos:end="95:32"><name pos:start="95:22" pos:end="95:32"><name pos:start="95:22" pos:end="95:24">pps</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:32">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="95:36" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:17">

        <expr_stmt pos:start="97:9" pos:end="97:80"><expr pos:start="97:9" pos:end="97:79"><call pos:start="97:9" pos:end="97:79"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:79">(<argument pos:start="97:16" pos:end="97:23"><expr pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:23">avctx</name></name></expr></argument>, <argument pos:start="97:26" pos:end="97:37"><expr pos:start="97:26" pos:end="97:37"><name pos:start="97:26" pos:end="97:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:40" pos:end="97:65"><expr pos:start="97:40" pos:end="97:65"><literal type="string" pos:start="97:40" pos:end="97:65">"SPS %u does not exist.\n"</literal></expr></argument>, <argument pos:start="97:68" pos:end="97:78"><expr pos:start="97:68" pos:end="97:78"><name pos:start="97:68" pos:end="97:78"><name pos:start="97:68" pos:end="97:70">pps</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:78">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="101:9" pos:end="101:17">goto <name pos:start="101:14" pos:end="101:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:7">sps</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <operator pos:start="105:11" pos:end="105:11">(</operator><name pos:start="105:12" pos:end="105:18">HEVCSPS</name> <operator pos:start="105:20" pos:end="105:20">*</operator><operator pos:start="105:21" pos:end="105:21">)</operator><name pos:start="105:22" pos:end="105:45"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:32">sps_list</name><index pos:start="105:33" pos:end="105:45">[<expr pos:start="105:34" pos:end="105:44"><name pos:start="105:34" pos:end="105:44"><name pos:start="105:34" pos:end="105:36">pps</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:44">sps_id</name></name></expr>]</index></name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:51">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:63"><expr pos:start="109:5" pos:end="109:62"><name pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:7">pps</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:46">dependent_slice_segments_enabled_flag</name></name> <operator pos:start="109:48" pos:end="109:48">=</operator> <call pos:start="109:50" pos:end="109:62"><name pos:start="109:50" pos:end="109:58">get_bits1</name><argument_list pos:start="109:59" pos:end="109:62">(<argument pos:start="109:60" pos:end="109:61"><expr pos:start="109:60" pos:end="109:61"><name pos:start="109:60" pos:end="109:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:63"><expr pos:start="111:5" pos:end="111:62"><name pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:7">pps</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:33">output_flag_present_flag</name></name>              <operator pos:start="111:48" pos:end="111:48">=</operator> <call pos:start="111:50" pos:end="111:62"><name pos:start="111:50" pos:end="111:58">get_bits1</name><argument_list pos:start="111:59" pos:end="111:62">(<argument pos:start="111:60" pos:end="111:61"><expr pos:start="111:60" pos:end="111:61"><name pos:start="111:60" pos:end="111:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:65"><expr pos:start="113:5" pos:end="113:64"><name pos:start="113:5" pos:end="113:36"><name pos:start="113:5" pos:end="113:7">pps</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:36">num_extra_slice_header_bits</name></name>           <operator pos:start="113:48" pos:end="113:48">=</operator> <call pos:start="113:50" pos:end="113:64"><name pos:start="113:50" pos:end="113:57">get_bits</name><argument_list pos:start="113:58" pos:end="113:64">(<argument pos:start="113:59" pos:end="113:60"><expr pos:start="113:59" pos:end="113:60"><name pos:start="113:59" pos:end="113:60">gb</name></expr></argument>, <argument pos:start="113:63" pos:end="113:63"><expr pos:start="113:63" pos:end="113:63"><literal type="number" pos:start="113:63" pos:end="113:63">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:47"><expr pos:start="117:5" pos:end="117:46"><name pos:start="117:5" pos:end="117:30"><name pos:start="117:5" pos:end="117:7">pps</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:30">sign_data_hiding_flag</name></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <call pos:start="117:34" pos:end="117:46"><name pos:start="117:34" pos:end="117:42">get_bits1</name><argument_list pos:start="117:43" pos:end="117:46">(<argument pos:start="117:44" pos:end="117:45"><expr pos:start="117:44" pos:end="117:45"><name pos:start="117:44" pos:end="117:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:49"><expr pos:start="121:5" pos:end="121:48"><name pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:7">pps</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:32">cabac_init_present_flag</name></name> <operator pos:start="121:34" pos:end="121:34">=</operator> <call pos:start="121:36" pos:end="121:48"><name pos:start="121:36" pos:end="121:44">get_bits1</name><argument_list pos:start="121:45" pos:end="121:48">(<argument pos:start="121:46" pos:end="121:47"><expr pos:start="121:46" pos:end="121:47"><name pos:start="121:46" pos:end="121:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:68"><expr pos:start="125:5" pos:end="125:67"><name pos:start="125:5" pos:end="125:38"><name pos:start="125:5" pos:end="125:7">pps</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:38">num_ref_idx_l0_default_active</name></name> <operator pos:start="125:40" pos:end="125:40">=</operator> <call pos:start="125:42" pos:end="125:63"><name pos:start="125:42" pos:end="125:59">get_ue_golomb_long</name><argument_list pos:start="125:60" pos:end="125:63">(<argument pos:start="125:61" pos:end="125:62"><expr pos:start="125:61" pos:end="125:62"><name pos:start="125:61" pos:end="125:62">gb</name></expr></argument>)</argument_list></call> <operator pos:start="125:65" pos:end="125:65">+</operator> <literal type="number" pos:start="125:67" pos:end="125:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:68"><expr pos:start="127:5" pos:end="127:67"><name pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:7">pps</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:38">num_ref_idx_l1_default_active</name></name> <operator pos:start="127:40" pos:end="127:40">=</operator> <call pos:start="127:42" pos:end="127:63"><name pos:start="127:42" pos:end="127:59">get_ue_golomb_long</name><argument_list pos:start="127:60" pos:end="127:63">(<argument pos:start="127:61" pos:end="127:62"><expr pos:start="127:61" pos:end="127:62"><name pos:start="127:61" pos:end="127:62">gb</name></expr></argument>)</argument_list></call> <operator pos:start="127:65" pos:end="127:65">+</operator> <literal type="number" pos:start="127:67" pos:end="127:67">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:49"><expr pos:start="131:5" pos:end="131:48"><name pos:start="131:5" pos:end="131:28"><name pos:start="131:5" pos:end="131:7">pps</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:28">pic_init_qp_minus26</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <call pos:start="131:32" pos:end="131:48"><name pos:start="131:32" pos:end="131:44">get_se_golomb</name><argument_list pos:start="131:45" pos:end="131:48">(<argument pos:start="131:46" pos:end="131:47"><expr pos:start="131:46" pos:end="131:47"><name pos:start="131:46" pos:end="131:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:53"><expr pos:start="135:5" pos:end="135:52"><name pos:start="135:5" pos:end="135:36"><name pos:start="135:5" pos:end="135:7">pps</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:36">constrained_intra_pred_flag</name></name> <operator pos:start="135:38" pos:end="135:38">=</operator> <call pos:start="135:40" pos:end="135:52"><name pos:start="135:40" pos:end="135:48">get_bits1</name><argument_list pos:start="135:49" pos:end="135:52">(<argument pos:start="135:50" pos:end="135:51"><expr pos:start="135:50" pos:end="135:51"><name pos:start="135:50" pos:end="135:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:53"><expr pos:start="137:5" pos:end="137:52"><name pos:start="137:5" pos:end="137:36"><name pos:start="137:5" pos:end="137:7">pps</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:36">transform_skip_enabled_flag</name></name> <operator pos:start="137:38" pos:end="137:38">=</operator> <call pos:start="137:40" pos:end="137:52"><name pos:start="137:40" pos:end="137:48">get_bits1</name><argument_list pos:start="137:49" pos:end="137:52">(<argument pos:start="137:50" pos:end="137:51"><expr pos:start="137:50" pos:end="137:51"><name pos:start="137:50" pos:end="137:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:7">pps</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:33">cu_qp_delta_enabled_flag</name></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <call pos:start="141:37" pos:end="141:49"><name pos:start="141:37" pos:end="141:45">get_bits1</name><argument_list pos:start="141:46" pos:end="141:49">(<argument pos:start="141:47" pos:end="141:48"><expr pos:start="141:47" pos:end="141:48"><name pos:start="141:47" pos:end="141:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:38"><expr pos:start="143:5" pos:end="143:37"><name pos:start="143:5" pos:end="143:31"><name pos:start="143:5" pos:end="143:7">pps</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:31">diff_cu_qp_delta_depth</name></name>   <operator pos:start="143:35" pos:end="143:35">=</operator> <literal type="number" pos:start="143:37" pos:end="143:37">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:61"><if pos:start="145:5" pos:end="147:61">if <condition pos:start="145:8" pos:end="145:38">(<expr pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:11">pps</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:37">cu_qp_delta_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:61"><block_content pos:start="147:9" pos:end="147:61">

        <expr_stmt pos:start="147:9" pos:end="147:61"><expr pos:start="147:9" pos:end="147:60"><name pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:11">pps</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:35">diff_cu_qp_delta_depth</name></name> <operator pos:start="147:37" pos:end="147:37">=</operator> <call pos:start="147:39" pos:end="147:60"><name pos:start="147:39" pos:end="147:56">get_ue_golomb_long</name><argument_list pos:start="147:57" pos:end="147:60">(<argument pos:start="147:58" pos:end="147:59"><expr pos:start="147:58" pos:end="147:59"><name pos:start="147:58" pos:end="147:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:42"><expr pos:start="151:5" pos:end="151:41"><name pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:7">pps</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:21">cb_qp_offset</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <call pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:37">get_se_golomb</name><argument_list pos:start="151:38" pos:end="151:41">(<argument pos:start="151:39" pos:end="151:40"><expr pos:start="151:39" pos:end="151:40"><name pos:start="151:39" pos:end="151:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="163:5"><if pos:start="153:5" pos:end="163:5">if <condition pos:start="153:8" pos:end="153:58">(<expr pos:start="153:9" pos:end="153:57"><name pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:11">pps</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:25">cb_qp_offset</name></name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <operator pos:start="153:29" pos:end="153:29">-</operator><literal type="number" pos:start="153:30" pos:end="153:31">12</literal> <operator pos:start="153:33" pos:end="153:34">||</operator> <name pos:start="153:36" pos:end="153:52"><name pos:start="153:36" pos:end="153:38">pps</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:52">cb_qp_offset</name></name> <operator pos:start="153:54" pos:end="153:54">&gt;</operator> <literal type="number" pos:start="153:56" pos:end="153:57">12</literal></expr>)</condition> <block pos:start="153:60" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:17">

        <expr_stmt pos:start="155:9" pos:end="157:34"><expr pos:start="155:9" pos:end="157:33"><call pos:start="155:9" pos:end="157:33"><name pos:start="155:9" pos:end="155:14">av_log</name><argument_list pos:start="155:15" pos:end="157:33">(<argument pos:start="155:16" pos:end="155:23"><expr pos:start="155:16" pos:end="155:23"><name pos:start="155:16" pos:end="155:23"><name pos:start="155:16" pos:end="155:16">s</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:23">avctx</name></name></expr></argument>, <argument pos:start="155:26" pos:end="155:37"><expr pos:start="155:26" pos:end="155:37"><name pos:start="155:26" pos:end="155:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:40" pos:end="155:76"><expr pos:start="155:40" pos:end="155:76"><literal type="string" pos:start="155:40" pos:end="155:76">"pps_cb_qp_offset out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="157:16" pos:end="157:32"><expr pos:start="157:16" pos:end="157:32"><name pos:start="157:16" pos:end="157:32"><name pos:start="157:16" pos:end="157:18">pps</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:32">cb_qp_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:34"><expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:17">goto <name pos:start="161:14" pos:end="161:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:42"><expr pos:start="165:5" pos:end="165:41"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:7">pps</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:21">cr_qp_offset</name></name> <operator pos:start="165:23" pos:end="165:23">=</operator> <call pos:start="165:25" pos:end="165:41"><name pos:start="165:25" pos:end="165:37">get_se_golomb</name><argument_list pos:start="165:38" pos:end="165:41">(<argument pos:start="165:39" pos:end="165:40"><expr pos:start="165:39" pos:end="165:40"><name pos:start="165:39" pos:end="165:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="177:5"><if pos:start="167:5" pos:end="177:5">if <condition pos:start="167:8" pos:end="167:58">(<expr pos:start="167:9" pos:end="167:57"><name pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:11">pps</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:25">cr_qp_offset</name></name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <operator pos:start="167:29" pos:end="167:29">-</operator><literal type="number" pos:start="167:30" pos:end="167:31">12</literal> <operator pos:start="167:33" pos:end="167:34">||</operator> <name pos:start="167:36" pos:end="167:52"><name pos:start="167:36" pos:end="167:38">pps</name><operator pos:start="167:39" pos:end="167:40">-&gt;</operator><name pos:start="167:41" pos:end="167:52">cr_qp_offset</name></name> <operator pos:start="167:54" pos:end="167:54">&gt;</operator> <literal type="number" pos:start="167:56" pos:end="167:57">12</literal></expr>)</condition> <block pos:start="167:60" pos:end="177:5">{<block_content pos:start="169:9" pos:end="175:17">

        <expr_stmt pos:start="169:9" pos:end="171:34"><expr pos:start="169:9" pos:end="171:33"><call pos:start="169:9" pos:end="171:33"><name pos:start="169:9" pos:end="169:14">av_log</name><argument_list pos:start="169:15" pos:end="171:33">(<argument pos:start="169:16" pos:end="169:23"><expr pos:start="169:16" pos:end="169:23"><name pos:start="169:16" pos:end="169:23"><name pos:start="169:16" pos:end="169:16">s</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:23">avctx</name></name></expr></argument>, <argument pos:start="169:26" pos:end="169:37"><expr pos:start="169:26" pos:end="169:37"><name pos:start="169:26" pos:end="169:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:40" pos:end="169:76"><expr pos:start="169:40" pos:end="169:76"><literal type="string" pos:start="169:40" pos:end="169:76">"pps_cr_qp_offset out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="171:16" pos:end="171:32"><expr pos:start="171:16" pos:end="171:32"><name pos:start="171:16" pos:end="171:32"><name pos:start="171:16" pos:end="171:18">pps</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:32">cr_qp_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:34"><expr pos:start="173:9" pos:end="173:33"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <name pos:start="173:15" pos:end="173:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="175:9" pos:end="175:17">goto <name pos:start="175:14" pos:end="175:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:72"><expr pos:start="179:5" pos:end="179:71"><name pos:start="179:5" pos:end="179:55"><name pos:start="179:5" pos:end="179:7">pps</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:55">pic_slice_level_chroma_qp_offsets_present_flag</name></name> <operator pos:start="179:57" pos:end="179:57">=</operator> <call pos:start="179:59" pos:end="179:71"><name pos:start="179:59" pos:end="179:67">get_bits1</name><argument_list pos:start="179:68" pos:end="179:71">(<argument pos:start="179:69" pos:end="179:70"><expr pos:start="179:69" pos:end="179:70"><name pos:start="179:69" pos:end="179:70">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:46"><expr pos:start="183:5" pos:end="183:45"><name pos:start="183:5" pos:end="183:27"><name pos:start="183:5" pos:end="183:7">pps</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:27">weighted_pred_flag</name></name>   <operator pos:start="183:31" pos:end="183:31">=</operator> <call pos:start="183:33" pos:end="183:45"><name pos:start="183:33" pos:end="183:41">get_bits1</name><argument_list pos:start="183:42" pos:end="183:45">(<argument pos:start="183:43" pos:end="183:44"><expr pos:start="183:43" pos:end="183:44"><name pos:start="183:43" pos:end="183:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:46"><expr pos:start="185:5" pos:end="185:45"><name pos:start="185:5" pos:end="185:29"><name pos:start="185:5" pos:end="185:7">pps</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:29">weighted_bipred_flag</name></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <call pos:start="185:33" pos:end="185:45"><name pos:start="185:33" pos:end="185:41">get_bits1</name><argument_list pos:start="185:42" pos:end="185:45">(<argument pos:start="185:43" pos:end="185:44"><expr pos:start="185:43" pos:end="185:44"><name pos:start="185:43" pos:end="185:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:58"><expr pos:start="189:5" pos:end="189:57"><name pos:start="189:5" pos:end="189:38"><name pos:start="189:5" pos:end="189:7">pps</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:38">transquant_bypass_enable_flag</name></name>    <operator pos:start="189:43" pos:end="189:43">=</operator> <call pos:start="189:45" pos:end="189:57"><name pos:start="189:45" pos:end="189:53">get_bits1</name><argument_list pos:start="189:54" pos:end="189:57">(<argument pos:start="189:55" pos:end="189:56"><expr pos:start="189:55" pos:end="189:56"><name pos:start="189:55" pos:end="189:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:58"><expr pos:start="191:5" pos:end="191:57"><name pos:start="191:5" pos:end="191:27"><name pos:start="191:5" pos:end="191:7">pps</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:27">tiles_enabled_flag</name></name>               <operator pos:start="191:43" pos:end="191:43">=</operator> <call pos:start="191:45" pos:end="191:57"><name pos:start="191:45" pos:end="191:53">get_bits1</name><argument_list pos:start="191:54" pos:end="191:57">(<argument pos:start="191:55" pos:end="191:56"><expr pos:start="191:55" pos:end="191:56"><name pos:start="191:55" pos:end="191:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:58"><expr pos:start="193:5" pos:end="193:57"><name pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:7">pps</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:41">entropy_coding_sync_enabled_flag</name></name> <operator pos:start="193:43" pos:end="193:43">=</operator> <call pos:start="193:45" pos:end="193:57"><name pos:start="193:45" pos:end="193:53">get_bits1</name><argument_list pos:start="193:54" pos:end="193:57">(<argument pos:start="193:55" pos:end="193:56"><expr pos:start="193:55" pos:end="193:56"><name pos:start="193:55" pos:end="193:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="197:5" pos:end="301:5"><if pos:start="197:5" pos:end="301:5">if <condition pos:start="197:8" pos:end="197:32">(<expr pos:start="197:9" pos:end="197:31"><name pos:start="197:9" pos:end="197:31"><name pos:start="197:9" pos:end="197:11">pps</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:31">tiles_enabled_flag</name></name></expr>)</condition> <block pos:start="197:34" pos:end="301:5">{<block_content pos:start="199:9" pos:end="299:67">

        <expr_stmt pos:start="199:9" pos:end="199:59"><expr pos:start="199:9" pos:end="199:58"><name pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:11">pps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:29">num_tile_columns</name></name> <operator pos:start="199:31" pos:end="199:31">=</operator> <call pos:start="199:33" pos:end="199:54"><name pos:start="199:33" pos:end="199:50">get_ue_golomb_long</name><argument_list pos:start="199:51" pos:end="199:54">(<argument pos:start="199:52" pos:end="199:53"><expr pos:start="199:52" pos:end="199:53"><name pos:start="199:52" pos:end="199:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="199:56" pos:end="199:56">+</operator> <literal type="number" pos:start="199:58" pos:end="199:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:59"><expr pos:start="201:9" pos:end="201:58"><name pos:start="201:9" pos:end="201:26"><name pos:start="201:9" pos:end="201:11">pps</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:26">num_tile_rows</name></name>    <operator pos:start="201:31" pos:end="201:31">=</operator> <call pos:start="201:33" pos:end="201:54"><name pos:start="201:33" pos:end="201:50">get_ue_golomb_long</name><argument_list pos:start="201:51" pos:end="201:54">(<argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="201:56" pos:end="201:56">+</operator> <literal type="number" pos:start="201:58" pos:end="201:58">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="215:9"><if pos:start="203:9" pos:end="215:9">if <condition pos:start="203:12" pos:end="205:48">(<expr pos:start="203:13" pos:end="205:47"><name pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:15">pps</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:33">num_tile_columns</name></name> <operator pos:start="203:35" pos:end="203:36">==</operator> <literal type="number" pos:start="203:38" pos:end="203:38">0</literal> <operator pos:start="203:40" pos:end="203:41">||</operator>

            <name pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:15">pps</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:33">num_tile_columns</name></name> <operator pos:start="205:35" pos:end="205:36">&gt;=</operator> <name pos:start="205:38" pos:end="205:47"><name pos:start="205:38" pos:end="205:40">sps</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:47">width</name></name></expr>)</condition> <block pos:start="205:50" pos:end="215:9">{<block_content pos:start="207:13" pos:end="213:21">

            <expr_stmt pos:start="207:13" pos:end="209:46"><expr pos:start="207:13" pos:end="209:45"><call pos:start="207:13" pos:end="209:45"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="209:45">(<argument pos:start="207:20" pos:end="207:27"><expr pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:20">s</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:27">avctx</name></name></expr></argument>, <argument pos:start="207:30" pos:end="207:41"><expr pos:start="207:30" pos:end="207:41"><name pos:start="207:30" pos:end="207:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:44" pos:end="207:87"><expr pos:start="207:44" pos:end="207:87"><literal type="string" pos:start="207:44" pos:end="207:87">"num_tile_columns_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="209:20" pos:end="209:44"><expr pos:start="209:20" pos:end="209:44"><name pos:start="209:20" pos:end="209:40"><name pos:start="209:20" pos:end="209:22">pps</name><operator pos:start="209:23" pos:end="209:24">-&gt;</operator><name pos:start="209:25" pos:end="209:40">num_tile_columns</name></name> <operator pos:start="209:42" pos:end="209:42">-</operator> <literal type="number" pos:start="209:44" pos:end="209:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:38"><expr pos:start="211:13" pos:end="211:37"><name pos:start="211:13" pos:end="211:15">ret</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <name pos:start="211:19" pos:end="211:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="213:13" pos:end="213:21">goto <name pos:start="213:18" pos:end="213:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="229:9"><if pos:start="217:9" pos:end="229:9">if <condition pos:start="217:12" pos:end="219:46">(<expr pos:start="217:13" pos:end="219:45"><name pos:start="217:13" pos:end="217:30"><name pos:start="217:13" pos:end="217:15">pps</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:30">num_tile_rows</name></name> <operator pos:start="217:32" pos:end="217:33">==</operator> <literal type="number" pos:start="217:35" pos:end="217:35">0</literal> <operator pos:start="217:37" pos:end="217:38">||</operator>

            <name pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:15">pps</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:30">num_tile_rows</name></name> <operator pos:start="219:32" pos:end="219:33">&gt;=</operator> <name pos:start="219:35" pos:end="219:45"><name pos:start="219:35" pos:end="219:37">sps</name><operator pos:start="219:38" pos:end="219:39">-&gt;</operator><name pos:start="219:40" pos:end="219:45">height</name></name></expr>)</condition> <block pos:start="219:48" pos:end="229:9">{<block_content pos:start="221:13" pos:end="227:21">

            <expr_stmt pos:start="221:13" pos:end="223:43"><expr pos:start="221:13" pos:end="223:42"><call pos:start="221:13" pos:end="223:42"><name pos:start="221:13" pos:end="221:18">av_log</name><argument_list pos:start="221:19" pos:end="223:42">(<argument pos:start="221:20" pos:end="221:27"><expr pos:start="221:20" pos:end="221:27"><name pos:start="221:20" pos:end="221:27"><name pos:start="221:20" pos:end="221:20">s</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:27">avctx</name></name></expr></argument>, <argument pos:start="221:30" pos:end="221:41"><expr pos:start="221:30" pos:end="221:41"><name pos:start="221:30" pos:end="221:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="221:44" pos:end="221:84"><expr pos:start="221:44" pos:end="221:84"><literal type="string" pos:start="221:44" pos:end="221:84">"num_tile_rows_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="223:20" pos:end="223:41"><expr pos:start="223:20" pos:end="223:41"><name pos:start="223:20" pos:end="223:37"><name pos:start="223:20" pos:end="223:22">pps</name><operator pos:start="223:23" pos:end="223:24">-&gt;</operator><name pos:start="223:25" pos:end="223:37">num_tile_rows</name></name> <operator pos:start="223:39" pos:end="223:39">-</operator> <literal type="number" pos:start="223:41" pos:end="223:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:38"><expr pos:start="225:13" pos:end="225:37"><name pos:start="225:13" pos:end="225:15">ret</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <name pos:start="225:19" pos:end="225:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="227:13" pos:end="227:21">goto <name pos:start="227:18" pos:end="227:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:95"><expr pos:start="233:9" pos:end="233:94"><name pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:11">pps</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:25">column_width</name></name> <operator pos:start="233:27" pos:end="233:27">=</operator> <call pos:start="233:29" pos:end="233:94"><name pos:start="233:29" pos:end="233:43">av_malloc_array</name><argument_list pos:start="233:44" pos:end="233:94">(<argument pos:start="233:45" pos:end="233:65"><expr pos:start="233:45" pos:end="233:65"><name pos:start="233:45" pos:end="233:65"><name pos:start="233:45" pos:end="233:47">pps</name><operator pos:start="233:48" pos:end="233:49">-&gt;</operator><name pos:start="233:50" pos:end="233:65">num_tile_columns</name></name></expr></argument>, <argument pos:start="233:68" pos:end="233:93"><expr pos:start="233:68" pos:end="233:93"><sizeof pos:start="233:68" pos:end="233:93">sizeof<argument_list pos:start="233:74" pos:end="233:93">(<argument pos:start="233:75" pos:end="233:92"><expr pos:start="233:75" pos:end="233:92"><operator pos:start="233:75" pos:end="233:75">*</operator><name pos:start="233:76" pos:end="233:92"><name pos:start="233:76" pos:end="233:78">pps</name><operator pos:start="233:79" pos:end="233:80">-&gt;</operator><name pos:start="233:81" pos:end="233:92">column_width</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:93"><expr pos:start="235:9" pos:end="235:92"><name pos:start="235:9" pos:end="235:23"><name pos:start="235:9" pos:end="235:11">pps</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:23">row_height</name></name>   <operator pos:start="235:27" pos:end="235:27">=</operator> <call pos:start="235:29" pos:end="235:92"><name pos:start="235:29" pos:end="235:43">av_malloc_array</name><argument_list pos:start="235:44" pos:end="235:92">(<argument pos:start="235:45" pos:end="235:62"><expr pos:start="235:45" pos:end="235:62"><name pos:start="235:45" pos:end="235:62"><name pos:start="235:45" pos:end="235:47">pps</name><operator pos:start="235:48" pos:end="235:49">-&gt;</operator><name pos:start="235:50" pos:end="235:62">num_tile_rows</name></name></expr></argument>,    <argument pos:start="235:68" pos:end="235:91"><expr pos:start="235:68" pos:end="235:91"><sizeof pos:start="235:68" pos:end="235:91">sizeof<argument_list pos:start="235:74" pos:end="235:91">(<argument pos:start="235:75" pos:end="235:90"><expr pos:start="235:75" pos:end="235:90"><operator pos:start="235:75" pos:end="235:75">*</operator><name pos:start="235:76" pos:end="235:90"><name pos:start="235:76" pos:end="235:78">pps</name><operator pos:start="235:79" pos:end="235:80">-&gt;</operator><name pos:start="235:81" pos:end="235:90">row_height</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="243:9"><if pos:start="237:9" pos:end="243:9">if <condition pos:start="237:12" pos:end="237:51">(<expr pos:start="237:13" pos:end="237:50"><operator pos:start="237:13" pos:end="237:13">!</operator><name pos:start="237:14" pos:end="237:30"><name pos:start="237:14" pos:end="237:16">pps</name><operator pos:start="237:17" pos:end="237:18">-&gt;</operator><name pos:start="237:19" pos:end="237:30">column_width</name></name> <operator pos:start="237:32" pos:end="237:33">||</operator> <operator pos:start="237:35" pos:end="237:35">!</operator><name pos:start="237:36" pos:end="237:50"><name pos:start="237:36" pos:end="237:38">pps</name><operator pos:start="237:39" pos:end="237:40">-&gt;</operator><name pos:start="237:41" pos:end="237:50">row_height</name></name></expr>)</condition> <block pos:start="237:53" pos:end="243:9">{<block_content pos:start="239:13" pos:end="241:21">

            <expr_stmt pos:start="239:13" pos:end="239:34"><expr pos:start="239:13" pos:end="239:33"><name pos:start="239:13" pos:end="239:15">ret</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <call pos:start="239:19" pos:end="239:33"><name pos:start="239:19" pos:end="239:25">AVERROR</name><argument_list pos:start="239:26" pos:end="239:33">(<argument pos:start="239:27" pos:end="239:32"><expr pos:start="239:27" pos:end="239:32"><name pos:start="239:27" pos:end="239:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="241:13" pos:end="241:21">goto <name pos:start="241:18" pos:end="241:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:50"><expr pos:start="247:9" pos:end="247:49"><name pos:start="247:9" pos:end="247:33"><name pos:start="247:9" pos:end="247:11">pps</name><operator pos:start="247:12" pos:end="247:13">-&gt;</operator><name pos:start="247:14" pos:end="247:33">uniform_spacing_flag</name></name> <operator pos:start="247:35" pos:end="247:35">=</operator> <call pos:start="247:37" pos:end="247:49"><name pos:start="247:37" pos:end="247:45">get_bits1</name><argument_list pos:start="247:46" pos:end="247:49">(<argument pos:start="247:47" pos:end="247:48"><expr pos:start="247:47" pos:end="247:48"><name pos:start="247:47" pos:end="247:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="297:9"><if pos:start="249:9" pos:end="297:9">if <condition pos:start="249:12" pos:end="249:39">(<expr pos:start="249:13" pos:end="249:38"><operator pos:start="249:13" pos:end="249:13">!</operator><name pos:start="249:14" pos:end="249:38"><name pos:start="249:14" pos:end="249:16">pps</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:38">uniform_spacing_flag</name></name></expr>)</condition> <block pos:start="249:41" pos:end="297:9">{<block_content pos:start="251:13" pos:end="295:76">

            <decl_stmt pos:start="251:13" pos:end="251:29"><decl pos:start="251:13" pos:end="251:28"><type pos:start="251:13" pos:end="251:20"><name pos:start="251:13" pos:end="251:20">uint64_t</name></type> <name pos:start="251:22" pos:end="251:24">sum</name> <init pos:start="251:26" pos:end="251:28">= <expr pos:start="251:28" pos:end="251:28"><literal type="number" pos:start="251:28" pos:end="251:28">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="253:13" pos:end="259:13">for <control pos:start="253:17" pos:end="253:59">(<init pos:start="253:18" pos:end="253:23"><expr pos:start="253:18" pos:end="253:22"><name pos:start="253:18" pos:end="253:18">i</name> <operator pos:start="253:20" pos:end="253:20">=</operator> <literal type="number" pos:start="253:22" pos:end="253:22">0</literal></expr>;</init> <condition pos:start="253:25" pos:end="253:54"><expr pos:start="253:25" pos:end="253:53"><name pos:start="253:25" pos:end="253:25">i</name> <operator pos:start="253:27" pos:end="253:27">&lt;</operator> <name pos:start="253:29" pos:end="253:49"><name pos:start="253:29" pos:end="253:31">pps</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:49">num_tile_columns</name></name> <operator pos:start="253:51" pos:end="253:51">-</operator> <literal type="number" pos:start="253:53" pos:end="253:53">1</literal></expr>;</condition> <incr pos:start="253:56" pos:end="253:58"><expr pos:start="253:56" pos:end="253:58"><name pos:start="253:56" pos:end="253:56">i</name><operator pos:start="253:57" pos:end="253:58">++</operator></expr></incr>)</control> <block pos:start="253:61" pos:end="259:13">{<block_content pos:start="255:17" pos:end="257:60">

                <expr_stmt pos:start="255:17" pos:end="255:66"><expr pos:start="255:17" pos:end="255:65"><name pos:start="255:17" pos:end="255:36"><name pos:start="255:17" pos:end="255:19">pps</name><operator pos:start="255:20" pos:end="255:21">-&gt;</operator><name pos:start="255:22" pos:end="255:33">column_width</name><index pos:start="255:34" pos:end="255:36">[<expr pos:start="255:35" pos:end="255:35"><name pos:start="255:35" pos:end="255:35">i</name></expr>]</index></name> <operator pos:start="255:38" pos:end="255:38">=</operator> <call pos:start="255:40" pos:end="255:61"><name pos:start="255:40" pos:end="255:57">get_ue_golomb_long</name><argument_list pos:start="255:58" pos:end="255:61">(<argument pos:start="255:59" pos:end="255:60"><expr pos:start="255:59" pos:end="255:60"><name pos:start="255:59" pos:end="255:60">gb</name></expr></argument>)</argument_list></call> <operator pos:start="255:63" pos:end="255:63">+</operator> <literal type="number" pos:start="255:65" pos:end="255:65">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:60"><expr pos:start="257:17" pos:end="257:59"><name pos:start="257:17" pos:end="257:19">sum</name>                 <operator pos:start="257:37" pos:end="257:38">+=</operator> <name pos:start="257:40" pos:end="257:59"><name pos:start="257:40" pos:end="257:42">pps</name><operator pos:start="257:43" pos:end="257:44">-&gt;</operator><name pos:start="257:45" pos:end="257:56">column_width</name><index pos:start="257:57" pos:end="257:59">[<expr pos:start="257:58" pos:end="257:58"><name pos:start="257:58" pos:end="257:58">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="261:13" pos:end="269:13"><if pos:start="261:13" pos:end="269:13">if <condition pos:start="261:16" pos:end="261:38">(<expr pos:start="261:17" pos:end="261:37"><name pos:start="261:17" pos:end="261:19">sum</name> <operator pos:start="261:21" pos:end="261:22">&gt;=</operator> <name pos:start="261:24" pos:end="261:37"><name pos:start="261:24" pos:end="261:26">sps</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:37">ctb_width</name></name></expr>)</condition> <block pos:start="261:40" pos:end="269:13">{<block_content pos:start="263:17" pos:end="267:25">

                <expr_stmt pos:start="263:17" pos:end="263:73"><expr pos:start="263:17" pos:end="263:72"><call pos:start="263:17" pos:end="263:72"><name pos:start="263:17" pos:end="263:22">av_log</name><argument_list pos:start="263:23" pos:end="263:72">(<argument pos:start="263:24" pos:end="263:31"><expr pos:start="263:24" pos:end="263:31"><name pos:start="263:24" pos:end="263:31"><name pos:start="263:24" pos:end="263:24">s</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:31">avctx</name></name></expr></argument>, <argument pos:start="263:34" pos:end="263:45"><expr pos:start="263:34" pos:end="263:45"><name pos:start="263:34" pos:end="263:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:48" pos:end="263:71"><expr pos:start="263:48" pos:end="263:71"><literal type="string" pos:start="263:48" pos:end="263:71">"Invalid tile widths.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:42"><expr pos:start="265:17" pos:end="265:41"><name pos:start="265:17" pos:end="265:19">ret</name> <operator pos:start="265:21" pos:end="265:21">=</operator> <name pos:start="265:23" pos:end="265:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="267:17" pos:end="267:25">goto <name pos:start="267:22" pos:end="267:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:80"><expr pos:start="271:13" pos:end="271:79"><name pos:start="271:13" pos:end="271:56"><name pos:start="271:13" pos:end="271:15">pps</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:29">column_width</name><index pos:start="271:30" pos:end="271:56">[<expr pos:start="271:31" pos:end="271:55"><name pos:start="271:31" pos:end="271:51"><name pos:start="271:31" pos:end="271:33">pps</name><operator pos:start="271:34" pos:end="271:35">-&gt;</operator><name pos:start="271:36" pos:end="271:51">num_tile_columns</name></name> <operator pos:start="271:53" pos:end="271:53">-</operator> <literal type="number" pos:start="271:55" pos:end="271:55">1</literal></expr>]</index></name> <operator pos:start="271:58" pos:end="271:58">=</operator> <name pos:start="271:60" pos:end="271:73"><name pos:start="271:60" pos:end="271:62">sps</name><operator pos:start="271:63" pos:end="271:64">-&gt;</operator><name pos:start="271:65" pos:end="271:73">ctb_width</name></name> <operator pos:start="271:75" pos:end="271:75">-</operator> <name pos:start="271:77" pos:end="271:79">sum</name></expr>;</expr_stmt>



            <expr_stmt pos:start="275:13" pos:end="275:20"><expr pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:15">sum</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <literal type="number" pos:start="275:19" pos:end="275:19">0</literal></expr>;</expr_stmt>

            <for pos:start="277:13" pos:end="283:13">for <control pos:start="277:17" pos:end="277:56">(<init pos:start="277:18" pos:end="277:23"><expr pos:start="277:18" pos:end="277:22"><name pos:start="277:18" pos:end="277:18">i</name> <operator pos:start="277:20" pos:end="277:20">=</operator> <literal type="number" pos:start="277:22" pos:end="277:22">0</literal></expr>;</init> <condition pos:start="277:25" pos:end="277:51"><expr pos:start="277:25" pos:end="277:50"><name pos:start="277:25" pos:end="277:25">i</name> <operator pos:start="277:27" pos:end="277:27">&lt;</operator> <name pos:start="277:29" pos:end="277:46"><name pos:start="277:29" pos:end="277:31">pps</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:46">num_tile_rows</name></name> <operator pos:start="277:48" pos:end="277:48">-</operator> <literal type="number" pos:start="277:50" pos:end="277:50">1</literal></expr>;</condition> <incr pos:start="277:53" pos:end="277:55"><expr pos:start="277:53" pos:end="277:55"><name pos:start="277:53" pos:end="277:53">i</name><operator pos:start="277:54" pos:end="277:55">++</operator></expr></incr>)</control> <block pos:start="277:58" pos:end="283:13">{<block_content pos:start="279:17" pos:end="281:56">

                <expr_stmt pos:start="279:17" pos:end="279:64"><expr pos:start="279:17" pos:end="279:63"><name pos:start="279:17" pos:end="279:34"><name pos:start="279:17" pos:end="279:19">pps</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:31">row_height</name><index pos:start="279:32" pos:end="279:34">[<expr pos:start="279:33" pos:end="279:33"><name pos:start="279:33" pos:end="279:33">i</name></expr>]</index></name> <operator pos:start="279:36" pos:end="279:36">=</operator> <call pos:start="279:38" pos:end="279:59"><name pos:start="279:38" pos:end="279:55">get_ue_golomb_long</name><argument_list pos:start="279:56" pos:end="279:59">(<argument pos:start="279:57" pos:end="279:58"><expr pos:start="279:57" pos:end="279:58"><name pos:start="279:57" pos:end="279:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="279:61" pos:end="279:61">+</operator> <literal type="number" pos:start="279:63" pos:end="279:63">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:56"><expr pos:start="281:17" pos:end="281:55"><name pos:start="281:17" pos:end="281:19">sum</name>               <operator pos:start="281:35" pos:end="281:36">+=</operator> <name pos:start="281:38" pos:end="281:55"><name pos:start="281:38" pos:end="281:40">pps</name><operator pos:start="281:41" pos:end="281:42">-&gt;</operator><name pos:start="281:43" pos:end="281:52">row_height</name><index pos:start="281:53" pos:end="281:55">[<expr pos:start="281:54" pos:end="281:54"><name pos:start="281:54" pos:end="281:54">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="285:13" pos:end="293:13"><if pos:start="285:13" pos:end="293:13">if <condition pos:start="285:16" pos:end="285:39">(<expr pos:start="285:17" pos:end="285:38"><name pos:start="285:17" pos:end="285:19">sum</name> <operator pos:start="285:21" pos:end="285:22">&gt;=</operator> <name pos:start="285:24" pos:end="285:38"><name pos:start="285:24" pos:end="285:26">sps</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:38">ctb_height</name></name></expr>)</condition> <block pos:start="285:41" pos:end="293:13">{<block_content pos:start="287:17" pos:end="291:25">

                <expr_stmt pos:start="287:17" pos:end="287:74"><expr pos:start="287:17" pos:end="287:73"><call pos:start="287:17" pos:end="287:73"><name pos:start="287:17" pos:end="287:22">av_log</name><argument_list pos:start="287:23" pos:end="287:73">(<argument pos:start="287:24" pos:end="287:31"><expr pos:start="287:24" pos:end="287:31"><name pos:start="287:24" pos:end="287:31"><name pos:start="287:24" pos:end="287:24">s</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:31">avctx</name></name></expr></argument>, <argument pos:start="287:34" pos:end="287:45"><expr pos:start="287:34" pos:end="287:45"><name pos:start="287:34" pos:end="287:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:48" pos:end="287:72"><expr pos:start="287:48" pos:end="287:72"><literal type="string" pos:start="287:48" pos:end="287:72">"Invalid tile heights.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:42"><expr pos:start="289:17" pos:end="289:41"><name pos:start="289:17" pos:end="289:19">ret</name> <operator pos:start="289:21" pos:end="289:21">=</operator> <name pos:start="289:23" pos:end="289:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="291:17" pos:end="291:25">goto <name pos:start="291:22" pos:end="291:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:76"><expr pos:start="295:13" pos:end="295:75"><name pos:start="295:13" pos:end="295:51"><name pos:start="295:13" pos:end="295:15">pps</name><operator pos:start="295:16" pos:end="295:17">-&gt;</operator><name pos:start="295:18" pos:end="295:27">row_height</name><index pos:start="295:28" pos:end="295:51">[<expr pos:start="295:29" pos:end="295:50"><name pos:start="295:29" pos:end="295:46"><name pos:start="295:29" pos:end="295:31">pps</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:46">num_tile_rows</name></name> <operator pos:start="295:48" pos:end="295:48">-</operator> <literal type="number" pos:start="295:50" pos:end="295:50">1</literal></expr>]</index></name> <operator pos:start="295:53" pos:end="295:53">=</operator> <name pos:start="295:55" pos:end="295:69"><name pos:start="295:55" pos:end="295:57">sps</name><operator pos:start="295:58" pos:end="295:59">-&gt;</operator><name pos:start="295:60" pos:end="295:69">ctb_height</name></name> <operator pos:start="295:71" pos:end="295:71">-</operator> <name pos:start="295:73" pos:end="295:75">sum</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:67"><expr pos:start="299:9" pos:end="299:66"><name pos:start="299:9" pos:end="299:50"><name pos:start="299:9" pos:end="299:11">pps</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:50">loop_filter_across_tiles_enabled_flag</name></name> <operator pos:start="299:52" pos:end="299:52">=</operator> <call pos:start="299:54" pos:end="299:66"><name pos:start="299:54" pos:end="299:62">get_bits1</name><argument_list pos:start="299:63" pos:end="299:66">(<argument pos:start="299:64" pos:end="299:65"><expr pos:start="299:64" pos:end="299:65"><name pos:start="299:64" pos:end="299:65">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="305:5" pos:end="305:68"><expr pos:start="305:5" pos:end="305:67"><name pos:start="305:5" pos:end="305:51"><name pos:start="305:5" pos:end="305:7">pps</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:51">seq_loop_filter_across_slices_enabled_flag</name></name> <operator pos:start="305:53" pos:end="305:53">=</operator> <call pos:start="305:55" pos:end="305:67"><name pos:start="305:55" pos:end="305:63">get_bits1</name><argument_list pos:start="305:64" pos:end="305:67">(<argument pos:start="305:65" pos:end="305:66"><expr pos:start="305:65" pos:end="305:66"><name pos:start="305:65" pos:end="305:66">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:64"><expr pos:start="309:5" pos:end="309:63"><name pos:start="309:5" pos:end="309:47"><name pos:start="309:5" pos:end="309:7">pps</name><operator pos:start="309:8" pos:end="309:9">-&gt;</operator><name pos:start="309:10" pos:end="309:47">deblocking_filter_control_present_flag</name></name> <operator pos:start="309:49" pos:end="309:49">=</operator> <call pos:start="309:51" pos:end="309:63"><name pos:start="309:51" pos:end="309:59">get_bits1</name><argument_list pos:start="309:60" pos:end="309:63">(<argument pos:start="309:61" pos:end="309:62"><expr pos:start="309:61" pos:end="309:62"><name pos:start="309:61" pos:end="309:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="311:5" pos:end="349:5"><if pos:start="311:5" pos:end="349:5">if <condition pos:start="311:8" pos:end="311:52">(<expr pos:start="311:9" pos:end="311:51"><name pos:start="311:9" pos:end="311:51"><name pos:start="311:9" pos:end="311:11">pps</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:51">deblocking_filter_control_present_flag</name></name></expr>)</condition> <block pos:start="311:54" pos:end="349:5">{<block_content pos:start="313:9" pos:end="347:9">

        <expr_stmt pos:start="313:9" pos:end="313:69"><expr pos:start="313:9" pos:end="313:68"><name pos:start="313:9" pos:end="313:52"><name pos:start="313:9" pos:end="313:11">pps</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:52">deblocking_filter_override_enabled_flag</name></name> <operator pos:start="313:54" pos:end="313:54">=</operator> <call pos:start="313:56" pos:end="313:68"><name pos:start="313:56" pos:end="313:64">get_bits1</name><argument_list pos:start="313:65" pos:end="313:68">(<argument pos:start="313:66" pos:end="313:67"><expr pos:start="313:66" pos:end="313:67"><name pos:start="313:66" pos:end="313:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:69"><expr pos:start="315:9" pos:end="315:68"><name pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:11">pps</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:24">disable_dbf</name></name>                             <operator pos:start="315:54" pos:end="315:54">=</operator> <call pos:start="315:56" pos:end="315:68"><name pos:start="315:56" pos:end="315:64">get_bits1</name><argument_list pos:start="315:65" pos:end="315:68">(<argument pos:start="315:66" pos:end="315:67"><expr pos:start="315:66" pos:end="315:67"><name pos:start="315:66" pos:end="315:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="317:9" pos:end="347:9"><if pos:start="317:9" pos:end="347:9">if <condition pos:start="317:12" pos:end="317:30">(<expr pos:start="317:13" pos:end="317:29"><operator pos:start="317:13" pos:end="317:13">!</operator><name pos:start="317:14" pos:end="317:29"><name pos:start="317:14" pos:end="317:16">pps</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:29">disable_dbf</name></name></expr>)</condition> <block pos:start="317:32" pos:end="347:9">{<block_content pos:start="319:13" pos:end="345:13">

            <expr_stmt pos:start="319:13" pos:end="319:53"><expr pos:start="319:13" pos:end="319:52"><name pos:start="319:13" pos:end="319:28"><name pos:start="319:13" pos:end="319:15">pps</name><operator pos:start="319:16" pos:end="319:17">-&gt;</operator><name pos:start="319:18" pos:end="319:28">beta_offset</name></name> <operator pos:start="319:30" pos:end="319:30">=</operator> <call pos:start="319:32" pos:end="319:48"><name pos:start="319:32" pos:end="319:44">get_se_golomb</name><argument_list pos:start="319:45" pos:end="319:48">(<argument pos:start="319:46" pos:end="319:47"><expr pos:start="319:46" pos:end="319:47"><name pos:start="319:46" pos:end="319:47">gb</name></expr></argument>)</argument_list></call> <operator pos:start="319:50" pos:end="319:50">*</operator> <literal type="number" pos:start="319:52" pos:end="319:52">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:51"><expr pos:start="321:13" pos:end="321:50"><name pos:start="321:13" pos:end="321:26"><name pos:start="321:13" pos:end="321:15">pps</name><operator pos:start="321:16" pos:end="321:17">-&gt;</operator><name pos:start="321:18" pos:end="321:26">tc_offset</name></name> <operator pos:start="321:28" pos:end="321:28">=</operator> <call pos:start="321:30" pos:end="321:46"><name pos:start="321:30" pos:end="321:42">get_se_golomb</name><argument_list pos:start="321:43" pos:end="321:46">(<argument pos:start="321:44" pos:end="321:45"><expr pos:start="321:44" pos:end="321:45"><name pos:start="321:44" pos:end="321:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="321:48" pos:end="321:48">*</operator> <literal type="number" pos:start="321:50" pos:end="321:50">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="333:13"><if pos:start="323:13" pos:end="333:13">if <condition pos:start="323:16" pos:end="323:66">(<expr pos:start="323:17" pos:end="323:65"><name pos:start="323:17" pos:end="323:32"><name pos:start="323:17" pos:end="323:19">pps</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:32">beta_offset</name></name><operator pos:start="323:33" pos:end="323:33">/</operator><literal type="number" pos:start="323:34" pos:end="323:34">2</literal> <operator pos:start="323:36" pos:end="323:36">&lt;</operator> <operator pos:start="323:38" pos:end="323:38">-</operator><literal type="number" pos:start="323:39" pos:end="323:39">6</literal> <operator pos:start="323:41" pos:end="323:42">||</operator> <name pos:start="323:44" pos:end="323:59"><name pos:start="323:44" pos:end="323:46">pps</name><operator pos:start="323:47" pos:end="323:48">-&gt;</operator><name pos:start="323:49" pos:end="323:59">beta_offset</name></name><operator pos:start="323:60" pos:end="323:60">/</operator><literal type="number" pos:start="323:61" pos:end="323:61">2</literal> <operator pos:start="323:63" pos:end="323:63">&gt;</operator> <literal type="number" pos:start="323:65" pos:end="323:65">6</literal></expr>)</condition> <block pos:start="323:68" pos:end="333:13">{<block_content pos:start="325:17" pos:end="331:25">

                <expr_stmt pos:start="325:17" pos:end="327:43"><expr pos:start="325:17" pos:end="327:42"><call pos:start="325:17" pos:end="327:42"><name pos:start="325:17" pos:end="325:22">av_log</name><argument_list pos:start="325:23" pos:end="327:42">(<argument pos:start="325:24" pos:end="325:31"><expr pos:start="325:24" pos:end="325:31"><name pos:start="325:24" pos:end="325:31"><name pos:start="325:24" pos:end="325:24">s</name><operator pos:start="325:25" pos:end="325:26">-&gt;</operator><name pos:start="325:27" pos:end="325:31">avctx</name></name></expr></argument>, <argument pos:start="325:34" pos:end="325:45"><expr pos:start="325:34" pos:end="325:45"><name pos:start="325:34" pos:end="325:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="325:48" pos:end="325:88"><expr pos:start="325:48" pos:end="325:88"><literal type="string" pos:start="325:48" pos:end="325:88">"pps_beta_offset_div2 out of range: %d\n"</literal></expr></argument>,

                       <argument pos:start="327:24" pos:end="327:41"><expr pos:start="327:24" pos:end="327:41"><name pos:start="327:24" pos:end="327:39"><name pos:start="327:24" pos:end="327:26">pps</name><operator pos:start="327:27" pos:end="327:28">-&gt;</operator><name pos:start="327:29" pos:end="327:39">beta_offset</name></name><operator pos:start="327:40" pos:end="327:40">/</operator><literal type="number" pos:start="327:41" pos:end="327:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="329:17" pos:end="329:42"><expr pos:start="329:17" pos:end="329:41"><name pos:start="329:17" pos:end="329:19">ret</name> <operator pos:start="329:21" pos:end="329:21">=</operator> <name pos:start="329:23" pos:end="329:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="331:17" pos:end="331:25">goto <name pos:start="331:22" pos:end="331:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="335:13" pos:end="345:13"><if pos:start="335:13" pos:end="345:13">if <condition pos:start="335:16" pos:end="335:62">(<expr pos:start="335:17" pos:end="335:61"><name pos:start="335:17" pos:end="335:30"><name pos:start="335:17" pos:end="335:19">pps</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:30">tc_offset</name></name><operator pos:start="335:31" pos:end="335:31">/</operator><literal type="number" pos:start="335:32" pos:end="335:32">2</literal> <operator pos:start="335:34" pos:end="335:34">&lt;</operator> <operator pos:start="335:36" pos:end="335:36">-</operator><literal type="number" pos:start="335:37" pos:end="335:37">6</literal> <operator pos:start="335:39" pos:end="335:40">||</operator> <name pos:start="335:42" pos:end="335:55"><name pos:start="335:42" pos:end="335:44">pps</name><operator pos:start="335:45" pos:end="335:46">-&gt;</operator><name pos:start="335:47" pos:end="335:55">tc_offset</name></name><operator pos:start="335:56" pos:end="335:56">/</operator><literal type="number" pos:start="335:57" pos:end="335:57">2</literal> <operator pos:start="335:59" pos:end="335:59">&gt;</operator> <literal type="number" pos:start="335:61" pos:end="335:61">6</literal></expr>)</condition> <block pos:start="335:64" pos:end="345:13">{<block_content pos:start="337:17" pos:end="343:25">

                <expr_stmt pos:start="337:17" pos:end="339:41"><expr pos:start="337:17" pos:end="339:40"><call pos:start="337:17" pos:end="339:40"><name pos:start="337:17" pos:end="337:22">av_log</name><argument_list pos:start="337:23" pos:end="339:40">(<argument pos:start="337:24" pos:end="337:31"><expr pos:start="337:24" pos:end="337:31"><name pos:start="337:24" pos:end="337:31"><name pos:start="337:24" pos:end="337:24">s</name><operator pos:start="337:25" pos:end="337:26">-&gt;</operator><name pos:start="337:27" pos:end="337:31">avctx</name></name></expr></argument>, <argument pos:start="337:34" pos:end="337:45"><expr pos:start="337:34" pos:end="337:45"><name pos:start="337:34" pos:end="337:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="337:48" pos:end="337:86"><expr pos:start="337:48" pos:end="337:86"><literal type="string" pos:start="337:48" pos:end="337:86">"pps_tc_offset_div2 out of range: %d\n"</literal></expr></argument>,

                       <argument pos:start="339:24" pos:end="339:39"><expr pos:start="339:24" pos:end="339:39"><name pos:start="339:24" pos:end="339:37"><name pos:start="339:24" pos:end="339:26">pps</name><operator pos:start="339:27" pos:end="339:28">-&gt;</operator><name pos:start="339:29" pos:end="339:37">tc_offset</name></name><operator pos:start="339:38" pos:end="339:38">/</operator><literal type="number" pos:start="339:39" pos:end="339:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:42"><expr pos:start="341:17" pos:end="341:41"><name pos:start="341:17" pos:end="341:19">ret</name> <operator pos:start="341:21" pos:end="341:21">=</operator> <name pos:start="341:23" pos:end="341:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="343:17" pos:end="343:25">goto <name pos:start="343:22" pos:end="343:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="353:5" pos:end="353:56"><expr pos:start="353:5" pos:end="353:55"><name pos:start="353:5" pos:end="353:39"><name pos:start="353:5" pos:end="353:7">pps</name><operator pos:start="353:8" pos:end="353:9">-&gt;</operator><name pos:start="353:10" pos:end="353:39">scaling_list_data_present_flag</name></name> <operator pos:start="353:41" pos:end="353:41">=</operator> <call pos:start="353:43" pos:end="353:55"><name pos:start="353:43" pos:end="353:51">get_bits1</name><argument_list pos:start="353:52" pos:end="353:55">(<argument pos:start="353:53" pos:end="353:54"><expr pos:start="353:53" pos:end="353:54"><name pos:start="353:53" pos:end="353:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="355:5" pos:end="365:5"><if pos:start="355:5" pos:end="365:5">if <condition pos:start="355:8" pos:end="355:44">(<expr pos:start="355:9" pos:end="355:43"><name pos:start="355:9" pos:end="355:43"><name pos:start="355:9" pos:end="355:11">pps</name><operator pos:start="355:12" pos:end="355:13">-&gt;</operator><name pos:start="355:14" pos:end="355:43">scaling_list_data_present_flag</name></name></expr>)</condition> <block pos:start="355:46" pos:end="365:5">{<block_content pos:start="357:9" pos:end="363:21">

        <expr_stmt pos:start="357:9" pos:end="357:58"><expr pos:start="357:9" pos:end="357:57"><call pos:start="357:9" pos:end="357:57"><name pos:start="357:9" pos:end="357:37">set_default_scaling_list_data</name><argument_list pos:start="357:38" pos:end="357:57">(<argument pos:start="357:39" pos:end="357:56"><expr pos:start="357:39" pos:end="357:56"><operator pos:start="357:39" pos:end="357:39">&amp;</operator><name pos:start="357:40" pos:end="357:56"><name pos:start="357:40" pos:end="357:42">pps</name><operator pos:start="357:43" pos:end="357:44">-&gt;</operator><name pos:start="357:45" pos:end="357:56">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:55"><expr pos:start="359:9" pos:end="359:54"><name pos:start="359:9" pos:end="359:11">ret</name> <operator pos:start="359:13" pos:end="359:13">=</operator> <call pos:start="359:15" pos:end="359:54"><name pos:start="359:15" pos:end="359:31">scaling_list_data</name><argument_list pos:start="359:32" pos:end="359:54">(<argument pos:start="359:33" pos:end="359:33"><expr pos:start="359:33" pos:end="359:33"><name pos:start="359:33" pos:end="359:33">s</name></expr></argument>, <argument pos:start="359:36" pos:end="359:53"><expr pos:start="359:36" pos:end="359:53"><operator pos:start="359:36" pos:end="359:36">&amp;</operator><name pos:start="359:37" pos:end="359:53"><name pos:start="359:37" pos:end="359:39">pps</name><operator pos:start="359:40" pos:end="359:41">-&gt;</operator><name pos:start="359:42" pos:end="359:53">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="363:21"><if pos:start="361:9" pos:end="363:21">if <condition pos:start="361:12" pos:end="361:20">(<expr pos:start="361:13" pos:end="361:19"><name pos:start="361:13" pos:end="361:15">ret</name> <operator pos:start="361:17" pos:end="361:17">&lt;</operator> <literal type="number" pos:start="361:19" pos:end="361:19">0</literal></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:21"><block_content pos:start="363:13" pos:end="363:21">

            <goto pos:start="363:13" pos:end="363:21">goto <name pos:start="363:18" pos:end="363:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:57"><expr pos:start="367:5" pos:end="367:56"><name pos:start="367:5" pos:end="367:40"><name pos:start="367:5" pos:end="367:7">pps</name><operator pos:start="367:8" pos:end="367:9">-&gt;</operator><name pos:start="367:10" pos:end="367:40">lists_modification_present_flag</name></name> <operator pos:start="367:42" pos:end="367:42">=</operator> <call pos:start="367:44" pos:end="367:56"><name pos:start="367:44" pos:end="367:52">get_bits1</name><argument_list pos:start="367:53" pos:end="367:56">(<argument pos:start="367:54" pos:end="367:55"><expr pos:start="367:54" pos:end="367:55"><name pos:start="367:54" pos:end="367:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:70"><expr pos:start="369:5" pos:end="369:69"><name pos:start="369:5" pos:end="369:34"><name pos:start="369:5" pos:end="369:7">pps</name><operator pos:start="369:8" pos:end="369:9">-&gt;</operator><name pos:start="369:10" pos:end="369:34">log2_parallel_merge_level</name></name>       <operator pos:start="369:42" pos:end="369:42">=</operator> <call pos:start="369:44" pos:end="369:65"><name pos:start="369:44" pos:end="369:61">get_ue_golomb_long</name><argument_list pos:start="369:62" pos:end="369:65">(<argument pos:start="369:63" pos:end="369:64"><expr pos:start="369:63" pos:end="369:64"><name pos:start="369:63" pos:end="369:64">gb</name></expr></argument>)</argument_list></call> <operator pos:start="369:67" pos:end="369:67">+</operator> <literal type="number" pos:start="369:69" pos:end="369:69">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="371:5" pos:end="381:5"><if pos:start="371:5" pos:end="381:5">if <condition pos:start="371:8" pos:end="371:60">(<expr pos:start="371:9" pos:end="371:59"><name pos:start="371:9" pos:end="371:38"><name pos:start="371:9" pos:end="371:11">pps</name><operator pos:start="371:12" pos:end="371:13">-&gt;</operator><name pos:start="371:14" pos:end="371:38">log2_parallel_merge_level</name></name> <operator pos:start="371:40" pos:end="371:40">&gt;</operator> <name pos:start="371:42" pos:end="371:59"><name pos:start="371:42" pos:end="371:44">sps</name><operator pos:start="371:45" pos:end="371:46">-&gt;</operator><name pos:start="371:47" pos:end="371:59">log2_ctb_size</name></name></expr>)</condition> <block pos:start="371:62" pos:end="381:5">{<block_content pos:start="373:9" pos:end="379:17">

        <expr_stmt pos:start="373:9" pos:end="375:51"><expr pos:start="373:9" pos:end="375:50"><call pos:start="373:9" pos:end="375:50"><name pos:start="373:9" pos:end="373:14">av_log</name><argument_list pos:start="373:15" pos:end="375:50">(<argument pos:start="373:16" pos:end="373:23"><expr pos:start="373:16" pos:end="373:23"><name pos:start="373:16" pos:end="373:23"><name pos:start="373:16" pos:end="373:16">s</name><operator pos:start="373:17" pos:end="373:18">-&gt;</operator><name pos:start="373:19" pos:end="373:23">avctx</name></name></expr></argument>, <argument pos:start="373:26" pos:end="373:37"><expr pos:start="373:26" pos:end="373:37"><name pos:start="373:26" pos:end="373:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="373:40" pos:end="373:92"><expr pos:start="373:40" pos:end="373:92"><literal type="string" pos:start="373:40" pos:end="373:92">"log2_parallel_merge_level_minus2 out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="375:16" pos:end="375:49"><expr pos:start="375:16" pos:end="375:49"><name pos:start="375:16" pos:end="375:45"><name pos:start="375:16" pos:end="375:18">pps</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:45">log2_parallel_merge_level</name></name> <operator pos:start="375:47" pos:end="375:47">-</operator> <literal type="number" pos:start="375:49" pos:end="375:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="377:9" pos:end="377:34"><expr pos:start="377:9" pos:end="377:33"><name pos:start="377:9" pos:end="377:11">ret</name> <operator pos:start="377:13" pos:end="377:13">=</operator> <name pos:start="377:15" pos:end="377:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="379:9" pos:end="379:17">goto <name pos:start="379:14" pos:end="379:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:61"><expr pos:start="385:5" pos:end="385:60"><name pos:start="385:5" pos:end="385:44"><name pos:start="385:5" pos:end="385:7">pps</name><operator pos:start="385:8" pos:end="385:9">-&gt;</operator><name pos:start="385:10" pos:end="385:44">slice_header_extension_present_flag</name></name> <operator pos:start="385:46" pos:end="385:46">=</operator> <call pos:start="385:48" pos:end="385:60"><name pos:start="385:48" pos:end="385:56">get_bits1</name><argument_list pos:start="385:57" pos:end="385:60">(<argument pos:start="385:58" pos:end="385:59"><expr pos:start="385:58" pos:end="385:59"><name pos:start="385:58" pos:end="385:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:19"><expr pos:start="387:5" pos:end="387:18"><call pos:start="387:5" pos:end="387:18"><name pos:start="387:5" pos:end="387:14">skip_bits1</name><argument_list pos:start="387:15" pos:end="387:18">(<argument pos:start="387:16" pos:end="387:17"><expr pos:start="387:16" pos:end="387:17"><name pos:start="387:16" pos:end="387:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="387:25" pos:end="387:45">// pps_extension_flag</comment>



    <comment type="line" pos:start="391:5" pos:end="391:26">// Inferred parameters</comment>

    <expr_stmt pos:start="393:5" pos:end="393:85"><expr pos:start="393:5" pos:end="393:84"><name pos:start="393:5" pos:end="393:15"><name pos:start="393:5" pos:end="393:7">pps</name><operator pos:start="393:8" pos:end="393:9">-&gt;</operator><name pos:start="393:10" pos:end="393:15">col_bd</name></name>   <operator pos:start="393:19" pos:end="393:19">=</operator> <call pos:start="393:21" pos:end="393:84"><name pos:start="393:21" pos:end="393:35">av_malloc_array</name><argument_list pos:start="393:36" pos:end="393:84">(<argument pos:start="393:37" pos:end="393:61"><expr pos:start="393:37" pos:end="393:61"><name pos:start="393:37" pos:end="393:57"><name pos:start="393:37" pos:end="393:39">pps</name><operator pos:start="393:40" pos:end="393:41">-&gt;</operator><name pos:start="393:42" pos:end="393:57">num_tile_columns</name></name> <operator pos:start="393:59" pos:end="393:59">+</operator> <literal type="number" pos:start="393:61" pos:end="393:61">1</literal></expr></argument>, <argument pos:start="393:64" pos:end="393:83"><expr pos:start="393:64" pos:end="393:83"><sizeof pos:start="393:64" pos:end="393:83">sizeof<argument_list pos:start="393:70" pos:end="393:83">(<argument pos:start="393:71" pos:end="393:82"><expr pos:start="393:71" pos:end="393:82"><operator pos:start="393:71" pos:end="393:71">*</operator><name pos:start="393:72" pos:end="393:82"><name pos:start="393:72" pos:end="393:74">pps</name><operator pos:start="393:75" pos:end="393:76">-&gt;</operator><name pos:start="393:77" pos:end="393:82">col_bd</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:85"><expr pos:start="395:5" pos:end="395:84"><name pos:start="395:5" pos:end="395:15"><name pos:start="395:5" pos:end="395:7">pps</name><operator pos:start="395:8" pos:end="395:9">-&gt;</operator><name pos:start="395:10" pos:end="395:15">row_bd</name></name>   <operator pos:start="395:19" pos:end="395:19">=</operator> <call pos:start="395:21" pos:end="395:84"><name pos:start="395:21" pos:end="395:35">av_malloc_array</name><argument_list pos:start="395:36" pos:end="395:84">(<argument pos:start="395:37" pos:end="395:58"><expr pos:start="395:37" pos:end="395:58"><name pos:start="395:37" pos:end="395:54"><name pos:start="395:37" pos:end="395:39">pps</name><operator pos:start="395:40" pos:end="395:41">-&gt;</operator><name pos:start="395:42" pos:end="395:54">num_tile_rows</name></name> <operator pos:start="395:56" pos:end="395:56">+</operator> <literal type="number" pos:start="395:58" pos:end="395:58">1</literal></expr></argument>,    <argument pos:start="395:64" pos:end="395:83"><expr pos:start="395:64" pos:end="395:83"><sizeof pos:start="395:64" pos:end="395:83">sizeof<argument_list pos:start="395:70" pos:end="395:83">(<argument pos:start="395:71" pos:end="395:82"><expr pos:start="395:71" pos:end="395:82"><operator pos:start="395:71" pos:end="395:71">*</operator><name pos:start="395:72" pos:end="395:82"><name pos:start="395:72" pos:end="395:74">pps</name><operator pos:start="395:75" pos:end="395:76">-&gt;</operator><name pos:start="395:77" pos:end="395:82">row_bd</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:79"><expr pos:start="397:5" pos:end="397:78"><name pos:start="397:5" pos:end="397:17"><name pos:start="397:5" pos:end="397:7">pps</name><operator pos:start="397:8" pos:end="397:9">-&gt;</operator><name pos:start="397:10" pos:end="397:17">col_idxX</name></name> <operator pos:start="397:19" pos:end="397:19">=</operator> <call pos:start="397:21" pos:end="397:78"><name pos:start="397:21" pos:end="397:35">av_malloc_array</name><argument_list pos:start="397:36" pos:end="397:78">(<argument pos:start="397:37" pos:end="397:50"><expr pos:start="397:37" pos:end="397:50"><name pos:start="397:37" pos:end="397:50"><name pos:start="397:37" pos:end="397:39">sps</name><operator pos:start="397:40" pos:end="397:41">-&gt;</operator><name pos:start="397:42" pos:end="397:50">ctb_width</name></name></expr></argument>,    <argument pos:start="397:56" pos:end="397:77"><expr pos:start="397:56" pos:end="397:77"><sizeof pos:start="397:56" pos:end="397:77">sizeof<argument_list pos:start="397:62" pos:end="397:77">(<argument pos:start="397:63" pos:end="397:76"><expr pos:start="397:63" pos:end="397:76"><operator pos:start="397:63" pos:end="397:63">*</operator><name pos:start="397:64" pos:end="397:76"><name pos:start="397:64" pos:end="397:66">pps</name><operator pos:start="397:67" pos:end="397:68">-&gt;</operator><name pos:start="397:69" pos:end="397:76">col_idxX</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="399:5" pos:end="405:5"><if pos:start="399:5" pos:end="405:5">if <condition pos:start="399:8" pos:end="399:55">(<expr pos:start="399:9" pos:end="399:54"><operator pos:start="399:9" pos:end="399:9">!</operator><name pos:start="399:10" pos:end="399:20"><name pos:start="399:10" pos:end="399:12">pps</name><operator pos:start="399:13" pos:end="399:14">-&gt;</operator><name pos:start="399:15" pos:end="399:20">col_bd</name></name> <operator pos:start="399:22" pos:end="399:23">||</operator> <operator pos:start="399:25" pos:end="399:25">!</operator><name pos:start="399:26" pos:end="399:36"><name pos:start="399:26" pos:end="399:28">pps</name><operator pos:start="399:29" pos:end="399:30">-&gt;</operator><name pos:start="399:31" pos:end="399:36">row_bd</name></name> <operator pos:start="399:38" pos:end="399:39">||</operator> <operator pos:start="399:41" pos:end="399:41">!</operator><name pos:start="399:42" pos:end="399:54"><name pos:start="399:42" pos:end="399:44">pps</name><operator pos:start="399:45" pos:end="399:46">-&gt;</operator><name pos:start="399:47" pos:end="399:54">col_idxX</name></name></expr>)</condition> <block pos:start="399:57" pos:end="405:5">{<block_content pos:start="401:9" pos:end="403:17">

        <expr_stmt pos:start="401:9" pos:end="401:30"><expr pos:start="401:9" pos:end="401:29"><name pos:start="401:9" pos:end="401:11">ret</name> <operator pos:start="401:13" pos:end="401:13">=</operator> <call pos:start="401:15" pos:end="401:29"><name pos:start="401:15" pos:end="401:21">AVERROR</name><argument_list pos:start="401:22" pos:end="401:29">(<argument pos:start="401:23" pos:end="401:28"><expr pos:start="401:23" pos:end="401:28"><name pos:start="401:23" pos:end="401:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="403:9" pos:end="403:17">goto <name pos:start="403:14" pos:end="403:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="409:5" pos:end="447:5"><if pos:start="409:5" pos:end="447:5">if <condition pos:start="409:8" pos:end="409:34">(<expr pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:11">pps</name><operator pos:start="409:12" pos:end="409:13">-&gt;</operator><name pos:start="409:14" pos:end="409:33">uniform_spacing_flag</name></name></expr>)</condition> <block pos:start="409:36" pos:end="447:5">{<block_content pos:start="411:9" pos:end="445:9">

        <if_stmt pos:start="411:9" pos:end="417:9"><if pos:start="411:9" pos:end="417:9">if <condition pos:start="411:12" pos:end="411:31">(<expr pos:start="411:13" pos:end="411:30"><operator pos:start="411:13" pos:end="411:13">!</operator><name pos:start="411:14" pos:end="411:30"><name pos:start="411:14" pos:end="411:16">pps</name><operator pos:start="411:17" pos:end="411:18">-&gt;</operator><name pos:start="411:19" pos:end="411:30">column_width</name></name></expr>)</condition> <block pos:start="411:33" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:97">

            <expr_stmt pos:start="413:13" pos:end="413:99"><expr pos:start="413:13" pos:end="413:98"><name pos:start="413:13" pos:end="413:29"><name pos:start="413:13" pos:end="413:15">pps</name><operator pos:start="413:16" pos:end="413:17">-&gt;</operator><name pos:start="413:18" pos:end="413:29">column_width</name></name> <operator pos:start="413:31" pos:end="413:31">=</operator> <call pos:start="413:33" pos:end="413:98"><name pos:start="413:33" pos:end="413:47">av_malloc_array</name><argument_list pos:start="413:48" pos:end="413:98">(<argument pos:start="413:49" pos:end="413:69"><expr pos:start="413:49" pos:end="413:69"><name pos:start="413:49" pos:end="413:69"><name pos:start="413:49" pos:end="413:51">pps</name><operator pos:start="413:52" pos:end="413:53">-&gt;</operator><name pos:start="413:54" pos:end="413:69">num_tile_columns</name></name></expr></argument>, <argument pos:start="413:72" pos:end="413:97"><expr pos:start="413:72" pos:end="413:97"><sizeof pos:start="413:72" pos:end="413:97">sizeof<argument_list pos:start="413:78" pos:end="413:97">(<argument pos:start="413:79" pos:end="413:96"><expr pos:start="413:79" pos:end="413:96"><operator pos:start="413:79" pos:end="413:79">*</operator><name pos:start="413:80" pos:end="413:96"><name pos:start="413:80" pos:end="413:82">pps</name><operator pos:start="413:83" pos:end="413:84">-&gt;</operator><name pos:start="413:85" pos:end="413:96">column_width</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:97"><expr pos:start="415:13" pos:end="415:96"><name pos:start="415:13" pos:end="415:27"><name pos:start="415:13" pos:end="415:15">pps</name><operator pos:start="415:16" pos:end="415:17">-&gt;</operator><name pos:start="415:18" pos:end="415:27">row_height</name></name>   <operator pos:start="415:31" pos:end="415:31">=</operator> <call pos:start="415:33" pos:end="415:96"><name pos:start="415:33" pos:end="415:47">av_malloc_array</name><argument_list pos:start="415:48" pos:end="415:96">(<argument pos:start="415:49" pos:end="415:66"><expr pos:start="415:49" pos:end="415:66"><name pos:start="415:49" pos:end="415:66"><name pos:start="415:49" pos:end="415:51">pps</name><operator pos:start="415:52" pos:end="415:53">-&gt;</operator><name pos:start="415:54" pos:end="415:66">num_tile_rows</name></name></expr></argument>,    <argument pos:start="415:72" pos:end="415:95"><expr pos:start="415:72" pos:end="415:95"><sizeof pos:start="415:72" pos:end="415:95">sizeof<argument_list pos:start="415:78" pos:end="415:95">(<argument pos:start="415:79" pos:end="415:94"><expr pos:start="415:79" pos:end="415:94"><operator pos:start="415:79" pos:end="415:79">*</operator><name pos:start="415:80" pos:end="415:94"><name pos:start="415:80" pos:end="415:82">pps</name><operator pos:start="415:83" pos:end="415:84">-&gt;</operator><name pos:start="415:85" pos:end="415:94">row_height</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="419:9" pos:end="425:9"><if pos:start="419:9" pos:end="425:9">if <condition pos:start="419:12" pos:end="419:51">(<expr pos:start="419:13" pos:end="419:50"><operator pos:start="419:13" pos:end="419:13">!</operator><name pos:start="419:14" pos:end="419:30"><name pos:start="419:14" pos:end="419:16">pps</name><operator pos:start="419:17" pos:end="419:18">-&gt;</operator><name pos:start="419:19" pos:end="419:30">column_width</name></name> <operator pos:start="419:32" pos:end="419:33">||</operator> <operator pos:start="419:35" pos:end="419:35">!</operator><name pos:start="419:36" pos:end="419:50"><name pos:start="419:36" pos:end="419:38">pps</name><operator pos:start="419:39" pos:end="419:40">-&gt;</operator><name pos:start="419:41" pos:end="419:50">row_height</name></name></expr>)</condition> <block pos:start="419:53" pos:end="425:9">{<block_content pos:start="421:13" pos:end="423:21">

            <expr_stmt pos:start="421:13" pos:end="421:34"><expr pos:start="421:13" pos:end="421:33"><name pos:start="421:13" pos:end="421:15">ret</name> <operator pos:start="421:17" pos:end="421:17">=</operator> <call pos:start="421:19" pos:end="421:33"><name pos:start="421:19" pos:end="421:25">AVERROR</name><argument_list pos:start="421:26" pos:end="421:33">(<argument pos:start="421:27" pos:end="421:32"><expr pos:start="421:27" pos:end="421:32"><name pos:start="421:27" pos:end="421:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="423:13" pos:end="423:21">goto <name pos:start="423:18" pos:end="423:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="429:9" pos:end="435:9">for <control pos:start="429:13" pos:end="429:51">(<init pos:start="429:14" pos:end="429:19"><expr pos:start="429:14" pos:end="429:18"><name pos:start="429:14" pos:end="429:14">i</name> <operator pos:start="429:16" pos:end="429:16">=</operator> <literal type="number" pos:start="429:18" pos:end="429:18">0</literal></expr>;</init> <condition pos:start="429:21" pos:end="429:46"><expr pos:start="429:21" pos:end="429:45"><name pos:start="429:21" pos:end="429:21">i</name> <operator pos:start="429:23" pos:end="429:23">&lt;</operator> <name pos:start="429:25" pos:end="429:45"><name pos:start="429:25" pos:end="429:27">pps</name><operator pos:start="429:28" pos:end="429:29">-&gt;</operator><name pos:start="429:30" pos:end="429:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="429:48" pos:end="429:50"><expr pos:start="429:48" pos:end="429:50"><name pos:start="429:48" pos:end="429:48">i</name><operator pos:start="429:49" pos:end="429:50">++</operator></expr></incr>)</control> <block pos:start="429:53" pos:end="435:9">{<block_content pos:start="431:13" pos:end="433:80">

            <expr_stmt pos:start="431:13" pos:end="433:80"><expr pos:start="431:13" pos:end="433:79"><name pos:start="431:13" pos:end="431:32"><name pos:start="431:13" pos:end="431:15">pps</name><operator pos:start="431:16" pos:end="431:17">-&gt;</operator><name pos:start="431:18" pos:end="431:29">column_width</name><index pos:start="431:30" pos:end="431:32">[<expr pos:start="431:31" pos:end="431:31"><name pos:start="431:31" pos:end="431:31">i</name></expr>]</index></name> <operator pos:start="431:34" pos:end="431:34">=</operator> <operator pos:start="431:36" pos:end="431:36">(</operator><operator pos:start="431:37" pos:end="431:37">(</operator><name pos:start="431:38" pos:end="431:38">i</name> <operator pos:start="431:40" pos:end="431:40">+</operator> <literal type="number" pos:start="431:42" pos:end="431:42">1</literal><operator pos:start="431:43" pos:end="431:43">)</operator> <operator pos:start="431:45" pos:end="431:45">*</operator> <name pos:start="431:47" pos:end="431:60"><name pos:start="431:47" pos:end="431:49">sps</name><operator pos:start="431:50" pos:end="431:51">-&gt;</operator><name pos:start="431:52" pos:end="431:60">ctb_width</name></name><operator pos:start="431:61" pos:end="431:61">)</operator> <operator pos:start="431:63" pos:end="431:63">/</operator> <name pos:start="431:65" pos:end="431:85"><name pos:start="431:65" pos:end="431:67">pps</name><operator pos:start="431:68" pos:end="431:69">-&gt;</operator><name pos:start="431:70" pos:end="431:85">num_tile_columns</name></name> <operator pos:start="431:87" pos:end="431:87">-</operator>

                                   <operator pos:start="433:36" pos:end="433:36">(</operator><name pos:start="433:37" pos:end="433:37">i</name> <operator pos:start="433:39" pos:end="433:39">*</operator> <name pos:start="433:41" pos:end="433:54"><name pos:start="433:41" pos:end="433:43">sps</name><operator pos:start="433:44" pos:end="433:45">-&gt;</operator><name pos:start="433:46" pos:end="433:54">ctb_width</name></name><operator pos:start="433:55" pos:end="433:55">)</operator> <operator pos:start="433:57" pos:end="433:57">/</operator> <name pos:start="433:59" pos:end="433:79"><name pos:start="433:59" pos:end="433:61">pps</name><operator pos:start="433:62" pos:end="433:63">-&gt;</operator><name pos:start="433:64" pos:end="433:79">num_tile_columns</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="439:9" pos:end="445:9">for <control pos:start="439:13" pos:end="439:48">(<init pos:start="439:14" pos:end="439:19"><expr pos:start="439:14" pos:end="439:18"><name pos:start="439:14" pos:end="439:14">i</name> <operator pos:start="439:16" pos:end="439:16">=</operator> <literal type="number" pos:start="439:18" pos:end="439:18">0</literal></expr>;</init> <condition pos:start="439:21" pos:end="439:43"><expr pos:start="439:21" pos:end="439:42"><name pos:start="439:21" pos:end="439:21">i</name> <operator pos:start="439:23" pos:end="439:23">&lt;</operator> <name pos:start="439:25" pos:end="439:42"><name pos:start="439:25" pos:end="439:27">pps</name><operator pos:start="439:28" pos:end="439:29">-&gt;</operator><name pos:start="439:30" pos:end="439:42">num_tile_rows</name></name></expr>;</condition> <incr pos:start="439:45" pos:end="439:47"><expr pos:start="439:45" pos:end="439:47"><name pos:start="439:45" pos:end="439:45">i</name><operator pos:start="439:46" pos:end="439:47">++</operator></expr></incr>)</control> <block pos:start="439:50" pos:end="445:9">{<block_content pos:start="441:13" pos:end="443:76">

            <expr_stmt pos:start="441:13" pos:end="443:76"><expr pos:start="441:13" pos:end="443:75"><name pos:start="441:13" pos:end="441:30"><name pos:start="441:13" pos:end="441:15">pps</name><operator pos:start="441:16" pos:end="441:17">-&gt;</operator><name pos:start="441:18" pos:end="441:27">row_height</name><index pos:start="441:28" pos:end="441:30">[<expr pos:start="441:29" pos:end="441:29"><name pos:start="441:29" pos:end="441:29">i</name></expr>]</index></name> <operator pos:start="441:32" pos:end="441:32">=</operator> <operator pos:start="441:34" pos:end="441:34">(</operator><operator pos:start="441:35" pos:end="441:35">(</operator><name pos:start="441:36" pos:end="441:36">i</name> <operator pos:start="441:38" pos:end="441:38">+</operator> <literal type="number" pos:start="441:40" pos:end="441:40">1</literal><operator pos:start="441:41" pos:end="441:41">)</operator> <operator pos:start="441:43" pos:end="441:43">*</operator> <name pos:start="441:45" pos:end="441:59"><name pos:start="441:45" pos:end="441:47">sps</name><operator pos:start="441:48" pos:end="441:49">-&gt;</operator><name pos:start="441:50" pos:end="441:59">ctb_height</name></name><operator pos:start="441:60" pos:end="441:60">)</operator> <operator pos:start="441:62" pos:end="441:62">/</operator> <name pos:start="441:64" pos:end="441:81"><name pos:start="441:64" pos:end="441:66">pps</name><operator pos:start="441:67" pos:end="441:68">-&gt;</operator><name pos:start="441:69" pos:end="441:81">num_tile_rows</name></name> <operator pos:start="441:83" pos:end="441:83">-</operator>

                                 <operator pos:start="443:34" pos:end="443:34">(</operator><name pos:start="443:35" pos:end="443:35">i</name> <operator pos:start="443:37" pos:end="443:37">*</operator> <name pos:start="443:39" pos:end="443:53"><name pos:start="443:39" pos:end="443:41">sps</name><operator pos:start="443:42" pos:end="443:43">-&gt;</operator><name pos:start="443:44" pos:end="443:53">ctb_height</name></name><operator pos:start="443:54" pos:end="443:54">)</operator> <operator pos:start="443:56" pos:end="443:56">/</operator> <name pos:start="443:58" pos:end="443:75"><name pos:start="443:58" pos:end="443:60">pps</name><operator pos:start="443:61" pos:end="443:62">-&gt;</operator><name pos:start="443:63" pos:end="443:75">num_tile_rows</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:23"><expr pos:start="451:5" pos:end="451:22"><name pos:start="451:5" pos:end="451:18"><name pos:start="451:5" pos:end="451:7">pps</name><operator pos:start="451:8" pos:end="451:9">-&gt;</operator><name pos:start="451:10" pos:end="451:15">col_bd</name><index pos:start="451:16" pos:end="451:18">[<expr pos:start="451:17" pos:end="451:17"><literal type="number" pos:start="451:17" pos:end="451:17">0</literal></expr>]</index></name> <operator pos:start="451:20" pos:end="451:20">=</operator> <literal type="number" pos:start="451:22" pos:end="451:22">0</literal></expr>;</expr_stmt>

    <for pos:start="453:5" pos:end="455:67">for <control pos:start="453:9" pos:end="453:47">(<init pos:start="453:10" pos:end="453:15"><expr pos:start="453:10" pos:end="453:14"><name pos:start="453:10" pos:end="453:10">i</name> <operator pos:start="453:12" pos:end="453:12">=</operator> <literal type="number" pos:start="453:14" pos:end="453:14">0</literal></expr>;</init> <condition pos:start="453:17" pos:end="453:42"><expr pos:start="453:17" pos:end="453:41"><name pos:start="453:17" pos:end="453:17">i</name> <operator pos:start="453:19" pos:end="453:19">&lt;</operator> <name pos:start="453:21" pos:end="453:41"><name pos:start="453:21" pos:end="453:23">pps</name><operator pos:start="453:24" pos:end="453:25">-&gt;</operator><name pos:start="453:26" pos:end="453:41">num_tile_columns</name></name></expr>;</condition> <incr pos:start="453:44" pos:end="453:46"><expr pos:start="453:44" pos:end="453:46"><name pos:start="453:44" pos:end="453:44">i</name><operator pos:start="453:45" pos:end="453:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="455:9" pos:end="455:67"><block_content pos:start="455:9" pos:end="455:67">

        <expr_stmt pos:start="455:9" pos:end="455:67"><expr pos:start="455:9" pos:end="455:66"><name pos:start="455:9" pos:end="455:26"><name pos:start="455:9" pos:end="455:11">pps</name><operator pos:start="455:12" pos:end="455:13">-&gt;</operator><name pos:start="455:14" pos:end="455:19">col_bd</name><index pos:start="455:20" pos:end="455:26">[<expr pos:start="455:21" pos:end="455:25"><name pos:start="455:21" pos:end="455:21">i</name> <operator pos:start="455:23" pos:end="455:23">+</operator> <literal type="number" pos:start="455:25" pos:end="455:25">1</literal></expr>]</index></name> <operator pos:start="455:28" pos:end="455:28">=</operator> <name pos:start="455:30" pos:end="455:43"><name pos:start="455:30" pos:end="455:32">pps</name><operator pos:start="455:33" pos:end="455:34">-&gt;</operator><name pos:start="455:35" pos:end="455:40">col_bd</name><index pos:start="455:41" pos:end="455:43">[<expr pos:start="455:42" pos:end="455:42"><name pos:start="455:42" pos:end="455:42">i</name></expr>]</index></name> <operator pos:start="455:45" pos:end="455:45">+</operator> <name pos:start="455:47" pos:end="455:66"><name pos:start="455:47" pos:end="455:49">pps</name><operator pos:start="455:50" pos:end="455:51">-&gt;</operator><name pos:start="455:52" pos:end="455:63">column_width</name><index pos:start="455:64" pos:end="455:66">[<expr pos:start="455:65" pos:end="455:65"><name pos:start="455:65" pos:end="455:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="459:5" pos:end="459:23"><expr pos:start="459:5" pos:end="459:22"><name pos:start="459:5" pos:end="459:18"><name pos:start="459:5" pos:end="459:7">pps</name><operator pos:start="459:8" pos:end="459:9">-&gt;</operator><name pos:start="459:10" pos:end="459:15">row_bd</name><index pos:start="459:16" pos:end="459:18">[<expr pos:start="459:17" pos:end="459:17"><literal type="number" pos:start="459:17" pos:end="459:17">0</literal></expr>]</index></name> <operator pos:start="459:20" pos:end="459:20">=</operator> <literal type="number" pos:start="459:22" pos:end="459:22">0</literal></expr>;</expr_stmt>

    <for pos:start="461:5" pos:end="463:65">for <control pos:start="461:9" pos:end="461:44">(<init pos:start="461:10" pos:end="461:15"><expr pos:start="461:10" pos:end="461:14"><name pos:start="461:10" pos:end="461:10">i</name> <operator pos:start="461:12" pos:end="461:12">=</operator> <literal type="number" pos:start="461:14" pos:end="461:14">0</literal></expr>;</init> <condition pos:start="461:17" pos:end="461:39"><expr pos:start="461:17" pos:end="461:38"><name pos:start="461:17" pos:end="461:17">i</name> <operator pos:start="461:19" pos:end="461:19">&lt;</operator> <name pos:start="461:21" pos:end="461:38"><name pos:start="461:21" pos:end="461:23">pps</name><operator pos:start="461:24" pos:end="461:25">-&gt;</operator><name pos:start="461:26" pos:end="461:38">num_tile_rows</name></name></expr>;</condition> <incr pos:start="461:41" pos:end="461:43"><expr pos:start="461:41" pos:end="461:43"><name pos:start="461:41" pos:end="461:41">i</name><operator pos:start="461:42" pos:end="461:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="463:9" pos:end="463:65"><block_content pos:start="463:9" pos:end="463:65">

        <expr_stmt pos:start="463:9" pos:end="463:65"><expr pos:start="463:9" pos:end="463:64"><name pos:start="463:9" pos:end="463:26"><name pos:start="463:9" pos:end="463:11">pps</name><operator pos:start="463:12" pos:end="463:13">-&gt;</operator><name pos:start="463:14" pos:end="463:19">row_bd</name><index pos:start="463:20" pos:end="463:26">[<expr pos:start="463:21" pos:end="463:25"><name pos:start="463:21" pos:end="463:21">i</name> <operator pos:start="463:23" pos:end="463:23">+</operator> <literal type="number" pos:start="463:25" pos:end="463:25">1</literal></expr>]</index></name> <operator pos:start="463:28" pos:end="463:28">=</operator> <name pos:start="463:30" pos:end="463:43"><name pos:start="463:30" pos:end="463:32">pps</name><operator pos:start="463:33" pos:end="463:34">-&gt;</operator><name pos:start="463:35" pos:end="463:40">row_bd</name><index pos:start="463:41" pos:end="463:43">[<expr pos:start="463:42" pos:end="463:42"><name pos:start="463:42" pos:end="463:42">i</name></expr>]</index></name> <operator pos:start="463:45" pos:end="463:45">+</operator> <name pos:start="463:47" pos:end="463:64"><name pos:start="463:47" pos:end="463:49">pps</name><operator pos:start="463:50" pos:end="463:51">-&gt;</operator><name pos:start="463:52" pos:end="463:61">row_height</name><index pos:start="463:62" pos:end="463:64">[<expr pos:start="463:63" pos:end="463:63"><name pos:start="463:63" pos:end="463:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="467:5" pos:end="475:5">for <control pos:start="467:9" pos:end="467:47">(<init pos:start="467:10" pos:end="467:22"><expr pos:start="467:10" pos:end="467:14"><name pos:start="467:10" pos:end="467:10">i</name> <operator pos:start="467:12" pos:end="467:12">=</operator> <literal type="number" pos:start="467:14" pos:end="467:14">0</literal></expr><operator pos:start="467:15" pos:end="467:15">,</operator> <expr pos:start="467:17" pos:end="467:21"><name pos:start="467:17" pos:end="467:17">j</name> <operator pos:start="467:19" pos:end="467:19">=</operator> <literal type="number" pos:start="467:21" pos:end="467:21">0</literal></expr>;</init> <condition pos:start="467:24" pos:end="467:42"><expr pos:start="467:24" pos:end="467:41"><name pos:start="467:24" pos:end="467:24">i</name> <operator pos:start="467:26" pos:end="467:26">&lt;</operator> <name pos:start="467:28" pos:end="467:41"><name pos:start="467:28" pos:end="467:30">sps</name><operator pos:start="467:31" pos:end="467:32">-&gt;</operator><name pos:start="467:33" pos:end="467:41">ctb_width</name></name></expr>;</condition> <incr pos:start="467:44" pos:end="467:46"><expr pos:start="467:44" pos:end="467:46"><name pos:start="467:44" pos:end="467:44">i</name><operator pos:start="467:45" pos:end="467:46">++</operator></expr></incr>)</control> <block pos:start="467:49" pos:end="475:5">{<block_content pos:start="469:9" pos:end="473:29">

        <if_stmt pos:start="469:9" pos:end="471:16"><if pos:start="469:9" pos:end="471:16">if <condition pos:start="469:12" pos:end="469:31">(<expr pos:start="469:13" pos:end="469:30"><name pos:start="469:13" pos:end="469:13">i</name> <operator pos:start="469:15" pos:end="469:15">&gt;</operator> <name pos:start="469:17" pos:end="469:30"><name pos:start="469:17" pos:end="469:19">pps</name><operator pos:start="469:20" pos:end="469:21">-&gt;</operator><name pos:start="469:22" pos:end="469:27">col_bd</name><index pos:start="469:28" pos:end="469:30">[<expr pos:start="469:29" pos:end="469:29"><name pos:start="469:29" pos:end="469:29">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="471:13" pos:end="471:16"><block_content pos:start="471:13" pos:end="471:16">

            <expr_stmt pos:start="471:13" pos:end="471:16"><expr pos:start="471:13" pos:end="471:15"><name pos:start="471:13" pos:end="471:13">j</name><operator pos:start="471:14" pos:end="471:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:29"><expr pos:start="473:9" pos:end="473:28"><name pos:start="473:9" pos:end="473:24"><name pos:start="473:9" pos:end="473:11">pps</name><operator pos:start="473:12" pos:end="473:13">-&gt;</operator><name pos:start="473:14" pos:end="473:21">col_idxX</name><index pos:start="473:22" pos:end="473:24">[<expr pos:start="473:23" pos:end="473:23"><name pos:start="473:23" pos:end="473:23">i</name></expr>]</index></name> <operator pos:start="473:26" pos:end="473:26">=</operator> <name pos:start="473:28" pos:end="473:28">j</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" format="doxygen" pos:start="479:5" pos:end="483:7">/**

     * 6.5

     */</comment>

    <expr_stmt pos:start="485:5" pos:end="485:63"><expr pos:start="485:5" pos:end="485:62"><name pos:start="485:5" pos:end="485:20">pic_area_in_ctbs</name>     <operator pos:start="485:26" pos:end="485:26">=</operator> <name pos:start="485:28" pos:end="485:41"><name pos:start="485:28" pos:end="485:30">sps</name><operator pos:start="485:31" pos:end="485:32">-&gt;</operator><name pos:start="485:33" pos:end="485:41">ctb_width</name></name>    <operator pos:start="485:46" pos:end="485:46">*</operator> <name pos:start="485:48" pos:end="485:62"><name pos:start="485:48" pos:end="485:50">sps</name><operator pos:start="485:51" pos:end="485:52">-&gt;</operator><name pos:start="485:53" pos:end="485:62">ctb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="487:5" pos:end="487:66"><expr pos:start="487:5" pos:end="487:65"><name pos:start="487:5" pos:end="487:23">pic_area_in_min_cbs</name>  <operator pos:start="487:26" pos:end="487:26">=</operator> <name pos:start="487:28" pos:end="487:44"><name pos:start="487:28" pos:end="487:30">sps</name><operator pos:start="487:31" pos:end="487:32">-&gt;</operator><name pos:start="487:33" pos:end="487:44">min_cb_width</name></name> <operator pos:start="487:46" pos:end="487:46">*</operator> <name pos:start="487:48" pos:end="487:65"><name pos:start="487:48" pos:end="487:50">sps</name><operator pos:start="487:51" pos:end="487:52">-&gt;</operator><name pos:start="487:53" pos:end="487:65">min_cb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="489:5" pos:end="489:66"><expr pos:start="489:5" pos:end="489:65"><name pos:start="489:5" pos:end="489:23">pic_area_in_min_tbs</name>  <operator pos:start="489:26" pos:end="489:26">=</operator> <name pos:start="489:28" pos:end="489:44"><name pos:start="489:28" pos:end="489:30">sps</name><operator pos:start="489:31" pos:end="489:32">-&gt;</operator><name pos:start="489:33" pos:end="489:44">min_tb_width</name></name> <operator pos:start="489:46" pos:end="489:46">*</operator> <name pos:start="489:48" pos:end="489:65"><name pos:start="489:48" pos:end="489:50">sps</name><operator pos:start="489:51" pos:end="489:52">-&gt;</operator><name pos:start="489:53" pos:end="489:65">min_tb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="493:5" pos:end="493:99"><expr pos:start="493:5" pos:end="493:98"><name pos:start="493:5" pos:end="493:26"><name pos:start="493:5" pos:end="493:7">pps</name><operator pos:start="493:8" pos:end="493:9">-&gt;</operator><name pos:start="493:10" pos:end="493:26">ctb_addr_rs_to_ts</name></name> <operator pos:start="493:28" pos:end="493:28">=</operator> <call pos:start="493:30" pos:end="493:98"><name pos:start="493:30" pos:end="493:44">av_malloc_array</name><argument_list pos:start="493:45" pos:end="493:98">(<argument pos:start="493:46" pos:end="493:61"><expr pos:start="493:46" pos:end="493:61"><name pos:start="493:46" pos:end="493:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="493:67" pos:end="493:97"><expr pos:start="493:67" pos:end="493:97"><sizeof pos:start="493:67" pos:end="493:97">sizeof<argument_list pos:start="493:73" pos:end="493:97">(<argument pos:start="493:74" pos:end="493:96"><expr pos:start="493:74" pos:end="493:96"><operator pos:start="493:74" pos:end="493:74">*</operator><name pos:start="493:75" pos:end="493:96"><name pos:start="493:75" pos:end="493:77">pps</name><operator pos:start="493:78" pos:end="493:79">-&gt;</operator><name pos:start="493:80" pos:end="493:96">ctb_addr_rs_to_ts</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:99"><expr pos:start="495:5" pos:end="495:98"><name pos:start="495:5" pos:end="495:26"><name pos:start="495:5" pos:end="495:7">pps</name><operator pos:start="495:8" pos:end="495:9">-&gt;</operator><name pos:start="495:10" pos:end="495:26">ctb_addr_ts_to_rs</name></name> <operator pos:start="495:28" pos:end="495:28">=</operator> <call pos:start="495:30" pos:end="495:98"><name pos:start="495:30" pos:end="495:44">av_malloc_array</name><argument_list pos:start="495:45" pos:end="495:98">(<argument pos:start="495:46" pos:end="495:61"><expr pos:start="495:46" pos:end="495:61"><name pos:start="495:46" pos:end="495:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="495:67" pos:end="495:97"><expr pos:start="495:67" pos:end="495:97"><sizeof pos:start="495:67" pos:end="495:97">sizeof<argument_list pos:start="495:73" pos:end="495:97">(<argument pos:start="495:74" pos:end="495:96"><expr pos:start="495:74" pos:end="495:96"><operator pos:start="495:74" pos:end="495:74">*</operator><name pos:start="495:75" pos:end="495:96"><name pos:start="495:75" pos:end="495:77">pps</name><operator pos:start="495:78" pos:end="495:79">-&gt;</operator><name pos:start="495:80" pos:end="495:96">ctb_addr_ts_to_rs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="497:5" pos:end="497:89"><expr pos:start="497:5" pos:end="497:88"><name pos:start="497:5" pos:end="497:16"><name pos:start="497:5" pos:end="497:7">pps</name><operator pos:start="497:8" pos:end="497:9">-&gt;</operator><name pos:start="497:10" pos:end="497:16">tile_id</name></name>           <operator pos:start="497:28" pos:end="497:28">=</operator> <call pos:start="497:30" pos:end="497:88"><name pos:start="497:30" pos:end="497:44">av_malloc_array</name><argument_list pos:start="497:45" pos:end="497:88">(<argument pos:start="497:46" pos:end="497:61"><expr pos:start="497:46" pos:end="497:61"><name pos:start="497:46" pos:end="497:61">pic_area_in_ctbs</name></expr></argument>,    <argument pos:start="497:67" pos:end="497:87"><expr pos:start="497:67" pos:end="497:87"><sizeof pos:start="497:67" pos:end="497:87">sizeof<argument_list pos:start="497:73" pos:end="497:87">(<argument pos:start="497:74" pos:end="497:86"><expr pos:start="497:74" pos:end="497:86"><operator pos:start="497:74" pos:end="497:74">*</operator><name pos:start="497:75" pos:end="497:86"><name pos:start="497:75" pos:end="497:77">pps</name><operator pos:start="497:78" pos:end="497:79">-&gt;</operator><name pos:start="497:80" pos:end="497:86">tile_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:96"><expr pos:start="499:5" pos:end="499:95"><name pos:start="499:5" pos:end="499:23"><name pos:start="499:5" pos:end="499:7">pps</name><operator pos:start="499:8" pos:end="499:9">-&gt;</operator><name pos:start="499:10" pos:end="499:23">min_cb_addr_zs</name></name>    <operator pos:start="499:28" pos:end="499:28">=</operator> <call pos:start="499:30" pos:end="499:95"><name pos:start="499:30" pos:end="499:44">av_malloc_array</name><argument_list pos:start="499:45" pos:end="499:95">(<argument pos:start="499:46" pos:end="499:64"><expr pos:start="499:46" pos:end="499:64"><name pos:start="499:46" pos:end="499:64">pic_area_in_min_cbs</name></expr></argument>, <argument pos:start="499:67" pos:end="499:94"><expr pos:start="499:67" pos:end="499:94"><sizeof pos:start="499:67" pos:end="499:94">sizeof<argument_list pos:start="499:73" pos:end="499:94">(<argument pos:start="499:74" pos:end="499:93"><expr pos:start="499:74" pos:end="499:93"><operator pos:start="499:74" pos:end="499:74">*</operator><name pos:start="499:75" pos:end="499:93"><name pos:start="499:75" pos:end="499:77">pps</name><operator pos:start="499:78" pos:end="499:79">-&gt;</operator><name pos:start="499:80" pos:end="499:93">min_cb_addr_zs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="501:5" pos:end="501:96"><expr pos:start="501:5" pos:end="501:95"><name pos:start="501:5" pos:end="501:23"><name pos:start="501:5" pos:end="501:7">pps</name><operator pos:start="501:8" pos:end="501:9">-&gt;</operator><name pos:start="501:10" pos:end="501:23">min_tb_addr_zs</name></name>    <operator pos:start="501:28" pos:end="501:28">=</operator> <call pos:start="501:30" pos:end="501:95"><name pos:start="501:30" pos:end="501:44">av_malloc_array</name><argument_list pos:start="501:45" pos:end="501:95">(<argument pos:start="501:46" pos:end="501:64"><expr pos:start="501:46" pos:end="501:64"><name pos:start="501:46" pos:end="501:64">pic_area_in_min_tbs</name></expr></argument>, <argument pos:start="501:67" pos:end="501:94"><expr pos:start="501:67" pos:end="501:94"><sizeof pos:start="501:67" pos:end="501:94">sizeof<argument_list pos:start="501:73" pos:end="501:94">(<argument pos:start="501:74" pos:end="501:93"><expr pos:start="501:74" pos:end="501:93"><operator pos:start="501:74" pos:end="501:74">*</operator><name pos:start="501:75" pos:end="501:93"><name pos:start="501:75" pos:end="501:77">pps</name><operator pos:start="501:78" pos:end="501:79">-&gt;</operator><name pos:start="501:80" pos:end="501:93">min_tb_addr_zs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="503:5" pos:end="511:5"><if pos:start="503:5" pos:end="511:5">if <condition pos:start="503:8" pos:end="505:70">(<expr pos:start="503:9" pos:end="505:69"><operator pos:start="503:9" pos:end="503:9">!</operator><name pos:start="503:10" pos:end="503:31"><name pos:start="503:10" pos:end="503:12">pps</name><operator pos:start="503:13" pos:end="503:14">-&gt;</operator><name pos:start="503:15" pos:end="503:31">ctb_addr_rs_to_ts</name></name> <operator pos:start="503:33" pos:end="503:34">||</operator> <operator pos:start="503:36" pos:end="503:36">!</operator><name pos:start="503:37" pos:end="503:58"><name pos:start="503:37" pos:end="503:39">pps</name><operator pos:start="503:40" pos:end="503:41">-&gt;</operator><name pos:start="503:42" pos:end="503:58">ctb_addr_ts_to_rs</name></name> <operator pos:start="503:60" pos:end="503:61">||</operator>

        <operator pos:start="505:9" pos:end="505:9">!</operator><name pos:start="505:10" pos:end="505:21"><name pos:start="505:10" pos:end="505:12">pps</name><operator pos:start="505:13" pos:end="505:14">-&gt;</operator><name pos:start="505:15" pos:end="505:21">tile_id</name></name> <operator pos:start="505:23" pos:end="505:24">||</operator> <operator pos:start="505:26" pos:end="505:26">!</operator><name pos:start="505:27" pos:end="505:45"><name pos:start="505:27" pos:end="505:29">pps</name><operator pos:start="505:30" pos:end="505:31">-&gt;</operator><name pos:start="505:32" pos:end="505:45">min_cb_addr_zs</name></name> <operator pos:start="505:47" pos:end="505:48">||</operator> <operator pos:start="505:50" pos:end="505:50">!</operator><name pos:start="505:51" pos:end="505:69"><name pos:start="505:51" pos:end="505:53">pps</name><operator pos:start="505:54" pos:end="505:55">-&gt;</operator><name pos:start="505:56" pos:end="505:69">min_tb_addr_zs</name></name></expr>)</condition> <block pos:start="505:72" pos:end="511:5">{<block_content pos:start="507:9" pos:end="509:17">

        <expr_stmt pos:start="507:9" pos:end="507:30"><expr pos:start="507:9" pos:end="507:29"><name pos:start="507:9" pos:end="507:11">ret</name> <operator pos:start="507:13" pos:end="507:13">=</operator> <call pos:start="507:15" pos:end="507:29"><name pos:start="507:15" pos:end="507:21">AVERROR</name><argument_list pos:start="507:22" pos:end="507:29">(<argument pos:start="507:23" pos:end="507:28"><expr pos:start="507:23" pos:end="507:28"><name pos:start="507:23" pos:end="507:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="509:9" pos:end="509:17">goto <name pos:start="509:14" pos:end="509:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="515:5" pos:end="577:5">for <control pos:start="515:9" pos:end="515:72">(<init pos:start="515:10" pos:end="515:25"><expr pos:start="515:10" pos:end="515:24"><name pos:start="515:10" pos:end="515:20">ctb_addr_rs</name> <operator pos:start="515:22" pos:end="515:22">=</operator> <literal type="number" pos:start="515:24" pos:end="515:24">0</literal></expr>;</init> <condition pos:start="515:27" pos:end="515:57"><expr pos:start="515:27" pos:end="515:56"><name pos:start="515:27" pos:end="515:37">ctb_addr_rs</name> <operator pos:start="515:39" pos:end="515:39">&lt;</operator> <name pos:start="515:41" pos:end="515:56">pic_area_in_ctbs</name></expr>;</condition> <incr pos:start="515:59" pos:end="515:71"><expr pos:start="515:59" pos:end="515:71"><name pos:start="515:59" pos:end="515:69">ctb_addr_rs</name><operator pos:start="515:70" pos:end="515:71">++</operator></expr></incr>)</control> <block pos:start="515:74" pos:end="577:5">{<block_content pos:start="517:9" pos:end="575:58">

        <decl_stmt pos:start="517:9" pos:end="517:50"><decl pos:start="517:9" pos:end="517:49"><type pos:start="517:9" pos:end="517:11"><name pos:start="517:9" pos:end="517:11">int</name></type> <name pos:start="517:13" pos:end="517:16">tb_x</name>   <init pos:start="517:20" pos:end="517:49">= <expr pos:start="517:22" pos:end="517:49"><name pos:start="517:22" pos:end="517:32">ctb_addr_rs</name> <operator pos:start="517:34" pos:end="517:34">%</operator> <name pos:start="517:36" pos:end="517:49"><name pos:start="517:36" pos:end="517:38">sps</name><operator pos:start="517:39" pos:end="517:40">-&gt;</operator><name pos:start="517:41" pos:end="517:49">ctb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="519:9" pos:end="519:50"><decl pos:start="519:9" pos:end="519:49"><type pos:start="519:9" pos:end="519:11"><name pos:start="519:9" pos:end="519:11">int</name></type> <name pos:start="519:13" pos:end="519:16">tb_y</name>   <init pos:start="519:20" pos:end="519:49">= <expr pos:start="519:22" pos:end="519:49"><name pos:start="519:22" pos:end="519:32">ctb_addr_rs</name> <operator pos:start="519:34" pos:end="519:34">/</operator> <name pos:start="519:36" pos:end="519:49"><name pos:start="519:36" pos:end="519:38">sps</name><operator pos:start="519:39" pos:end="519:40">-&gt;</operator><name pos:start="519:41" pos:end="519:49">ctb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="521:9" pos:end="521:23"><decl pos:start="521:9" pos:end="521:22"><type pos:start="521:9" pos:end="521:11"><name pos:start="521:9" pos:end="521:11">int</name></type> <name pos:start="521:13" pos:end="521:18">tile_x</name> <init pos:start="521:20" pos:end="521:22">= <expr pos:start="521:22" pos:end="521:22"><literal type="number" pos:start="521:22" pos:end="521:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="523:9" pos:end="523:23"><decl pos:start="523:9" pos:end="523:22"><type pos:start="523:9" pos:end="523:11"><name pos:start="523:9" pos:end="523:11">int</name></type> <name pos:start="523:13" pos:end="523:18">tile_y</name> <init pos:start="523:20" pos:end="523:22">= <expr pos:start="523:22" pos:end="523:22"><literal type="number" pos:start="523:22" pos:end="523:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="525:9" pos:end="525:23"><decl pos:start="525:9" pos:end="525:22"><type pos:start="525:9" pos:end="525:11"><name pos:start="525:9" pos:end="525:11">int</name></type> <name pos:start="525:13" pos:end="525:15">val</name>    <init pos:start="525:20" pos:end="525:22">= <expr pos:start="525:22" pos:end="525:22"><literal type="number" pos:start="525:22" pos:end="525:22">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="529:9" pos:end="539:9">for <control pos:start="529:13" pos:end="529:51">(<init pos:start="529:14" pos:end="529:19"><expr pos:start="529:14" pos:end="529:18"><name pos:start="529:14" pos:end="529:14">i</name> <operator pos:start="529:16" pos:end="529:16">=</operator> <literal type="number" pos:start="529:18" pos:end="529:18">0</literal></expr>;</init> <condition pos:start="529:21" pos:end="529:46"><expr pos:start="529:21" pos:end="529:45"><name pos:start="529:21" pos:end="529:21">i</name> <operator pos:start="529:23" pos:end="529:23">&lt;</operator> <name pos:start="529:25" pos:end="529:45"><name pos:start="529:25" pos:end="529:27">pps</name><operator pos:start="529:28" pos:end="529:29">-&gt;</operator><name pos:start="529:30" pos:end="529:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="529:48" pos:end="529:50"><expr pos:start="529:48" pos:end="529:50"><name pos:start="529:48" pos:end="529:48">i</name><operator pos:start="529:49" pos:end="529:50">++</operator></expr></incr>)</control> <block pos:start="529:53" pos:end="539:9">{<block_content pos:start="531:13" pos:end="537:13">

            <if_stmt pos:start="531:13" pos:end="537:13"><if pos:start="531:13" pos:end="537:13">if <condition pos:start="531:16" pos:end="531:42">(<expr pos:start="531:17" pos:end="531:41"><name pos:start="531:17" pos:end="531:20">tb_x</name> <operator pos:start="531:22" pos:end="531:22">&lt;</operator> <name pos:start="531:24" pos:end="531:41"><name pos:start="531:24" pos:end="531:26">pps</name><operator pos:start="531:27" pos:end="531:28">-&gt;</operator><name pos:start="531:29" pos:end="531:34">col_bd</name><index pos:start="531:35" pos:end="531:41">[<expr pos:start="531:36" pos:end="531:40"><name pos:start="531:36" pos:end="531:36">i</name> <operator pos:start="531:38" pos:end="531:38">+</operator> <literal type="number" pos:start="531:40" pos:end="531:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="531:44" pos:end="537:13">{<block_content pos:start="533:17" pos:end="535:22">

                <expr_stmt pos:start="533:17" pos:end="533:27"><expr pos:start="533:17" pos:end="533:26"><name pos:start="533:17" pos:end="533:22">tile_x</name> <operator pos:start="533:24" pos:end="533:24">=</operator> <name pos:start="533:26" pos:end="533:26">i</name></expr>;</expr_stmt>

                <break pos:start="535:17" pos:end="535:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <for pos:start="543:9" pos:end="553:9">for <control pos:start="543:13" pos:end="543:48">(<init pos:start="543:14" pos:end="543:19"><expr pos:start="543:14" pos:end="543:18"><name pos:start="543:14" pos:end="543:14">i</name> <operator pos:start="543:16" pos:end="543:16">=</operator> <literal type="number" pos:start="543:18" pos:end="543:18">0</literal></expr>;</init> <condition pos:start="543:21" pos:end="543:43"><expr pos:start="543:21" pos:end="543:42"><name pos:start="543:21" pos:end="543:21">i</name> <operator pos:start="543:23" pos:end="543:23">&lt;</operator> <name pos:start="543:25" pos:end="543:42"><name pos:start="543:25" pos:end="543:27">pps</name><operator pos:start="543:28" pos:end="543:29">-&gt;</operator><name pos:start="543:30" pos:end="543:42">num_tile_rows</name></name></expr>;</condition> <incr pos:start="543:45" pos:end="543:47"><expr pos:start="543:45" pos:end="543:47"><name pos:start="543:45" pos:end="543:45">i</name><operator pos:start="543:46" pos:end="543:47">++</operator></expr></incr>)</control> <block pos:start="543:50" pos:end="553:9">{<block_content pos:start="545:13" pos:end="551:13">

            <if_stmt pos:start="545:13" pos:end="551:13"><if pos:start="545:13" pos:end="551:13">if <condition pos:start="545:16" pos:end="545:42">(<expr pos:start="545:17" pos:end="545:41"><name pos:start="545:17" pos:end="545:20">tb_y</name> <operator pos:start="545:22" pos:end="545:22">&lt;</operator> <name pos:start="545:24" pos:end="545:41"><name pos:start="545:24" pos:end="545:26">pps</name><operator pos:start="545:27" pos:end="545:28">-&gt;</operator><name pos:start="545:29" pos:end="545:34">row_bd</name><index pos:start="545:35" pos:end="545:41">[<expr pos:start="545:36" pos:end="545:40"><name pos:start="545:36" pos:end="545:36">i</name> <operator pos:start="545:38" pos:end="545:38">+</operator> <literal type="number" pos:start="545:40" pos:end="545:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="545:44" pos:end="551:13">{<block_content pos:start="547:17" pos:end="549:22">

                <expr_stmt pos:start="547:17" pos:end="547:27"><expr pos:start="547:17" pos:end="547:26"><name pos:start="547:17" pos:end="547:22">tile_y</name> <operator pos:start="547:24" pos:end="547:24">=</operator> <name pos:start="547:26" pos:end="547:26">i</name></expr>;</expr_stmt>

                <break pos:start="549:17" pos:end="549:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <for pos:start="557:9" pos:end="559:66">for <control pos:start="557:13" pos:end="557:36">(<init pos:start="557:14" pos:end="557:19"><expr pos:start="557:14" pos:end="557:18"><name pos:start="557:14" pos:end="557:14">i</name> <operator pos:start="557:16" pos:end="557:16">=</operator> <literal type="number" pos:start="557:18" pos:end="557:18">0</literal></expr>;</init> <condition pos:start="557:21" pos:end="557:31"><expr pos:start="557:21" pos:end="557:30"><name pos:start="557:21" pos:end="557:21">i</name> <operator pos:start="557:23" pos:end="557:23">&lt;</operator> <name pos:start="557:25" pos:end="557:30">tile_x</name></expr>;</condition> <incr pos:start="557:33" pos:end="557:35"><expr pos:start="557:33" pos:end="557:35"><name pos:start="557:33" pos:end="557:33">i</name><operator pos:start="557:34" pos:end="557:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="559:13" pos:end="559:66"><block_content pos:start="559:13" pos:end="559:66">

            <expr_stmt pos:start="559:13" pos:end="559:66"><expr pos:start="559:13" pos:end="559:65"><name pos:start="559:13" pos:end="559:15">val</name> <operator pos:start="559:17" pos:end="559:18">+=</operator> <name pos:start="559:20" pos:end="559:42"><name pos:start="559:20" pos:end="559:22">pps</name><operator pos:start="559:23" pos:end="559:24">-&gt;</operator><name pos:start="559:25" pos:end="559:34">row_height</name><index pos:start="559:35" pos:end="559:42">[<expr pos:start="559:36" pos:end="559:41"><name pos:start="559:36" pos:end="559:41">tile_y</name></expr>]</index></name> <operator pos:start="559:44" pos:end="559:44">*</operator> <name pos:start="559:46" pos:end="559:65"><name pos:start="559:46" pos:end="559:48">pps</name><operator pos:start="559:49" pos:end="559:50">-&gt;</operator><name pos:start="559:51" pos:end="559:62">column_width</name><index pos:start="559:63" pos:end="559:65">[<expr pos:start="559:64" pos:end="559:64"><name pos:start="559:64" pos:end="559:64">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="561:9" pos:end="563:55">for <control pos:start="561:13" pos:end="561:36">(<init pos:start="561:14" pos:end="561:19"><expr pos:start="561:14" pos:end="561:18"><name pos:start="561:14" pos:end="561:14">i</name> <operator pos:start="561:16" pos:end="561:16">=</operator> <literal type="number" pos:start="561:18" pos:end="561:18">0</literal></expr>;</init> <condition pos:start="561:21" pos:end="561:31"><expr pos:start="561:21" pos:end="561:30"><name pos:start="561:21" pos:end="561:21">i</name> <operator pos:start="561:23" pos:end="561:23">&lt;</operator> <name pos:start="561:25" pos:end="561:30">tile_y</name></expr>;</condition> <incr pos:start="561:33" pos:end="561:35"><expr pos:start="561:33" pos:end="561:35"><name pos:start="561:33" pos:end="561:33">i</name><operator pos:start="561:34" pos:end="561:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="563:13" pos:end="563:55"><block_content pos:start="563:13" pos:end="563:55">

            <expr_stmt pos:start="563:13" pos:end="563:55"><expr pos:start="563:13" pos:end="563:54"><name pos:start="563:13" pos:end="563:15">val</name> <operator pos:start="563:17" pos:end="563:18">+=</operator> <name pos:start="563:20" pos:end="563:33"><name pos:start="563:20" pos:end="563:22">sps</name><operator pos:start="563:23" pos:end="563:24">-&gt;</operator><name pos:start="563:25" pos:end="563:33">ctb_width</name></name> <operator pos:start="563:35" pos:end="563:35">*</operator> <name pos:start="563:37" pos:end="563:54"><name pos:start="563:37" pos:end="563:39">pps</name><operator pos:start="563:40" pos:end="563:41">-&gt;</operator><name pos:start="563:42" pos:end="563:51">row_height</name><index pos:start="563:52" pos:end="563:54">[<expr pos:start="563:53" pos:end="563:53"><name pos:start="563:53" pos:end="563:53">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="567:9" pos:end="569:42"><expr pos:start="567:9" pos:end="569:41"><name pos:start="567:9" pos:end="567:11">val</name> <operator pos:start="567:13" pos:end="567:14">+=</operator> <operator pos:start="567:16" pos:end="567:16">(</operator><name pos:start="567:17" pos:end="567:20">tb_y</name> <operator pos:start="567:22" pos:end="567:22">-</operator> <name pos:start="567:24" pos:end="567:42"><name pos:start="567:24" pos:end="567:26">pps</name><operator pos:start="567:27" pos:end="567:28">-&gt;</operator><name pos:start="567:29" pos:end="567:34">row_bd</name><index pos:start="567:35" pos:end="567:42">[<expr pos:start="567:36" pos:end="567:41"><name pos:start="567:36" pos:end="567:41">tile_y</name></expr>]</index></name><operator pos:start="567:43" pos:end="567:43">)</operator> <operator pos:start="567:45" pos:end="567:45">*</operator> <name pos:start="567:47" pos:end="567:71"><name pos:start="567:47" pos:end="567:49">pps</name><operator pos:start="567:50" pos:end="567:51">-&gt;</operator><name pos:start="567:52" pos:end="567:63">column_width</name><index pos:start="567:64" pos:end="567:71">[<expr pos:start="567:65" pos:end="567:70"><name pos:start="567:65" pos:end="567:70">tile_x</name></expr>]</index></name> <operator pos:start="567:73" pos:end="567:73">+</operator>

               <name pos:start="569:16" pos:end="569:19">tb_x</name> <operator pos:start="569:21" pos:end="569:21">-</operator> <name pos:start="569:23" pos:end="569:41"><name pos:start="569:23" pos:end="569:25">pps</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:33">col_bd</name><index pos:start="569:34" pos:end="569:41">[<expr pos:start="569:35" pos:end="569:40"><name pos:start="569:35" pos:end="569:40">tile_x</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="573:9" pos:end="573:50"><expr pos:start="573:9" pos:end="573:49"><name pos:start="573:9" pos:end="573:43"><name pos:start="573:9" pos:end="573:11">pps</name><operator pos:start="573:12" pos:end="573:13">-&gt;</operator><name pos:start="573:14" pos:end="573:30">ctb_addr_rs_to_ts</name><index pos:start="573:31" pos:end="573:43">[<expr pos:start="573:32" pos:end="573:42"><name pos:start="573:32" pos:end="573:42">ctb_addr_rs</name></expr>]</index></name> <operator pos:start="573:45" pos:end="573:45">=</operator> <name pos:start="573:47" pos:end="573:49">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:58"><expr pos:start="575:9" pos:end="575:57"><name pos:start="575:9" pos:end="575:35"><name pos:start="575:9" pos:end="575:11">pps</name><operator pos:start="575:12" pos:end="575:13">-&gt;</operator><name pos:start="575:14" pos:end="575:30">ctb_addr_ts_to_rs</name><index pos:start="575:31" pos:end="575:35">[<expr pos:start="575:32" pos:end="575:34"><name pos:start="575:32" pos:end="575:34">val</name></expr>]</index></name>         <operator pos:start="575:45" pos:end="575:45">=</operator> <name pos:start="575:47" pos:end="575:57">ctb_addr_rs</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="581:5" pos:end="589:91">for <control pos:start="581:9" pos:end="581:57">(<init pos:start="581:10" pos:end="581:28"><expr pos:start="581:10" pos:end="581:14"><name pos:start="581:10" pos:end="581:10">j</name> <operator pos:start="581:12" pos:end="581:12">=</operator> <literal type="number" pos:start="581:14" pos:end="581:14">0</literal></expr><operator pos:start="581:15" pos:end="581:15">,</operator> <expr pos:start="581:17" pos:end="581:27"><name pos:start="581:17" pos:end="581:23">tile_id</name> <operator pos:start="581:25" pos:end="581:25">=</operator> <literal type="number" pos:start="581:27" pos:end="581:27">0</literal></expr>;</init> <condition pos:start="581:30" pos:end="581:52"><expr pos:start="581:30" pos:end="581:51"><name pos:start="581:30" pos:end="581:30">j</name> <operator pos:start="581:32" pos:end="581:32">&lt;</operator> <name pos:start="581:34" pos:end="581:51"><name pos:start="581:34" pos:end="581:36">pps</name><operator pos:start="581:37" pos:end="581:38">-&gt;</operator><name pos:start="581:39" pos:end="581:51">num_tile_rows</name></name></expr>;</condition> <incr pos:start="581:54" pos:end="581:56"><expr pos:start="581:54" pos:end="581:56"><name pos:start="581:54" pos:end="581:54">j</name><operator pos:start="581:55" pos:end="581:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="583:9" pos:end="589:91"><block_content pos:start="583:9" pos:end="589:91">

        <for pos:start="583:9" pos:end="589:91">for <control pos:start="583:13" pos:end="583:62">(<init pos:start="583:14" pos:end="583:19"><expr pos:start="583:14" pos:end="583:18"><name pos:start="583:14" pos:end="583:14">i</name> <operator pos:start="583:16" pos:end="583:16">=</operator> <literal type="number" pos:start="583:18" pos:end="583:18">0</literal></expr>;</init> <condition pos:start="583:21" pos:end="583:46"><expr pos:start="583:21" pos:end="583:45"><name pos:start="583:21" pos:end="583:21">i</name> <operator pos:start="583:23" pos:end="583:23">&lt;</operator> <name pos:start="583:25" pos:end="583:45"><name pos:start="583:25" pos:end="583:27">pps</name><operator pos:start="583:28" pos:end="583:29">-&gt;</operator><name pos:start="583:30" pos:end="583:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="583:48" pos:end="583:61"><expr pos:start="583:48" pos:end="583:50"><name pos:start="583:48" pos:end="583:48">i</name><operator pos:start="583:49" pos:end="583:50">++</operator></expr><operator pos:start="583:51" pos:end="583:51">,</operator> <expr pos:start="583:53" pos:end="583:61"><name pos:start="583:53" pos:end="583:59">tile_id</name><operator pos:start="583:60" pos:end="583:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="585:13" pos:end="589:91"><block_content pos:start="585:13" pos:end="589:91">

            <for pos:start="585:13" pos:end="589:91">for <control pos:start="585:17" pos:end="585:65">(<init pos:start="585:18" pos:end="585:36"><expr pos:start="585:18" pos:end="585:35"><name pos:start="585:18" pos:end="585:18">y</name> <operator pos:start="585:20" pos:end="585:20">=</operator> <name pos:start="585:22" pos:end="585:35"><name pos:start="585:22" pos:end="585:24">pps</name><operator pos:start="585:25" pos:end="585:26">-&gt;</operator><name pos:start="585:27" pos:end="585:32">row_bd</name><index pos:start="585:33" pos:end="585:35">[<expr pos:start="585:34" pos:end="585:34"><name pos:start="585:34" pos:end="585:34">j</name></expr>]</index></name></expr>;</init> <condition pos:start="585:38" pos:end="585:60"><expr pos:start="585:38" pos:end="585:59"><name pos:start="585:38" pos:end="585:38">y</name> <operator pos:start="585:40" pos:end="585:40">&lt;</operator> <name pos:start="585:42" pos:end="585:59"><name pos:start="585:42" pos:end="585:44">pps</name><operator pos:start="585:45" pos:end="585:46">-&gt;</operator><name pos:start="585:47" pos:end="585:52">row_bd</name><index pos:start="585:53" pos:end="585:59">[<expr pos:start="585:54" pos:end="585:58"><name pos:start="585:54" pos:end="585:54">j</name> <operator pos:start="585:56" pos:end="585:56">+</operator> <literal type="number" pos:start="585:58" pos:end="585:58">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="585:62" pos:end="585:64"><expr pos:start="585:62" pos:end="585:64"><name pos:start="585:62" pos:end="585:62">y</name><operator pos:start="585:63" pos:end="585:64">++</operator></expr></incr>)</control><block type="pseudo" pos:start="587:17" pos:end="589:91"><block_content pos:start="587:17" pos:end="589:91">

                <for pos:start="587:17" pos:end="589:91">for <control pos:start="587:21" pos:end="587:69">(<init pos:start="587:22" pos:end="587:40"><expr pos:start="587:22" pos:end="587:39"><name pos:start="587:22" pos:end="587:22">x</name> <operator pos:start="587:24" pos:end="587:24">=</operator> <name pos:start="587:26" pos:end="587:39"><name pos:start="587:26" pos:end="587:28">pps</name><operator pos:start="587:29" pos:end="587:30">-&gt;</operator><name pos:start="587:31" pos:end="587:36">col_bd</name><index pos:start="587:37" pos:end="587:39">[<expr pos:start="587:38" pos:end="587:38"><name pos:start="587:38" pos:end="587:38">i</name></expr>]</index></name></expr>;</init> <condition pos:start="587:42" pos:end="587:64"><expr pos:start="587:42" pos:end="587:63"><name pos:start="587:42" pos:end="587:42">x</name> <operator pos:start="587:44" pos:end="587:44">&lt;</operator> <name pos:start="587:46" pos:end="587:63"><name pos:start="587:46" pos:end="587:48">pps</name><operator pos:start="587:49" pos:end="587:50">-&gt;</operator><name pos:start="587:51" pos:end="587:56">col_bd</name><index pos:start="587:57" pos:end="587:63">[<expr pos:start="587:58" pos:end="587:62"><name pos:start="587:58" pos:end="587:58">i</name> <operator pos:start="587:60" pos:end="587:60">+</operator> <literal type="number" pos:start="587:62" pos:end="587:62">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="587:66" pos:end="587:68"><expr pos:start="587:66" pos:end="587:68"><name pos:start="587:66" pos:end="587:66">x</name><operator pos:start="587:67" pos:end="587:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="589:21" pos:end="589:91"><block_content pos:start="589:21" pos:end="589:91">

                    <expr_stmt pos:start="589:21" pos:end="589:91"><expr pos:start="589:21" pos:end="589:90"><name pos:start="589:21" pos:end="589:80"><name pos:start="589:21" pos:end="589:23">pps</name><operator pos:start="589:24" pos:end="589:25">-&gt;</operator><name pos:start="589:26" pos:end="589:32">tile_id</name><index pos:start="589:33" pos:end="589:80">[<expr pos:start="589:34" pos:end="589:79"><name pos:start="589:34" pos:end="589:79"><name pos:start="589:34" pos:end="589:36">pps</name><operator pos:start="589:37" pos:end="589:38">-&gt;</operator><name pos:start="589:39" pos:end="589:55">ctb_addr_rs_to_ts</name><index pos:start="589:56" pos:end="589:79">[<expr pos:start="589:57" pos:end="589:78"><name pos:start="589:57" pos:end="589:57">y</name> <operator pos:start="589:59" pos:end="589:59">*</operator> <name pos:start="589:61" pos:end="589:74"><name pos:start="589:61" pos:end="589:63">sps</name><operator pos:start="589:64" pos:end="589:65">-&gt;</operator><name pos:start="589:66" pos:end="589:74">ctb_width</name></name> <operator pos:start="589:76" pos:end="589:76">+</operator> <name pos:start="589:78" pos:end="589:78">x</name></expr>]</index></name></expr>]</index></name> <operator pos:start="589:82" pos:end="589:82">=</operator> <name pos:start="589:84" pos:end="589:90">tile_id</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for>



    <expr_stmt pos:start="593:5" pos:end="593:75"><expr pos:start="593:5" pos:end="593:74"><name pos:start="593:5" pos:end="593:20"><name pos:start="593:5" pos:end="593:7">pps</name><operator pos:start="593:8" pos:end="593:9">-&gt;</operator><name pos:start="593:10" pos:end="593:20">tile_pos_rs</name></name> <operator pos:start="593:22" pos:end="593:22">=</operator> <call pos:start="593:24" pos:end="593:74"><name pos:start="593:24" pos:end="593:38">av_malloc_array</name><argument_list pos:start="593:39" pos:end="593:74">(<argument pos:start="593:40" pos:end="593:46"><expr pos:start="593:40" pos:end="593:46"><name pos:start="593:40" pos:end="593:46">tile_id</name></expr></argument>, <argument pos:start="593:49" pos:end="593:73"><expr pos:start="593:49" pos:end="593:73"><sizeof pos:start="593:49" pos:end="593:73">sizeof<argument_list pos:start="593:55" pos:end="593:73">(<argument pos:start="593:56" pos:end="593:72"><expr pos:start="593:56" pos:end="593:72"><operator pos:start="593:56" pos:end="593:56">*</operator><name pos:start="593:57" pos:end="593:72"><name pos:start="593:57" pos:end="593:59">pps</name><operator pos:start="593:60" pos:end="593:61">-&gt;</operator><name pos:start="593:62" pos:end="593:72">tile_pos_rs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="595:5" pos:end="601:5"><if pos:start="595:5" pos:end="601:5">if <condition pos:start="595:8" pos:end="595:26">(<expr pos:start="595:9" pos:end="595:25"><operator pos:start="595:9" pos:end="595:9">!</operator><name pos:start="595:10" pos:end="595:25"><name pos:start="595:10" pos:end="595:12">pps</name><operator pos:start="595:13" pos:end="595:14">-&gt;</operator><name pos:start="595:15" pos:end="595:25">tile_pos_rs</name></name></expr>)</condition> <block pos:start="595:28" pos:end="601:5">{<block_content pos:start="597:9" pos:end="599:17">

        <expr_stmt pos:start="597:9" pos:end="597:30"><expr pos:start="597:9" pos:end="597:29"><name pos:start="597:9" pos:end="597:11">ret</name> <operator pos:start="597:13" pos:end="597:13">=</operator> <call pos:start="597:15" pos:end="597:29"><name pos:start="597:15" pos:end="597:21">AVERROR</name><argument_list pos:start="597:22" pos:end="597:29">(<argument pos:start="597:23" pos:end="597:28"><expr pos:start="597:23" pos:end="597:28"><name pos:start="597:23" pos:end="597:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="599:9" pos:end="599:17">goto <name pos:start="599:14" pos:end="599:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="605:5" pos:end="609:111">for <control pos:start="605:9" pos:end="605:44">(<init pos:start="605:10" pos:end="605:15"><expr pos:start="605:10" pos:end="605:14"><name pos:start="605:10" pos:end="605:10">j</name> <operator pos:start="605:12" pos:end="605:12">=</operator> <literal type="number" pos:start="605:14" pos:end="605:14">0</literal></expr>;</init> <condition pos:start="605:17" pos:end="605:39"><expr pos:start="605:17" pos:end="605:38"><name pos:start="605:17" pos:end="605:17">j</name> <operator pos:start="605:19" pos:end="605:19">&lt;</operator> <name pos:start="605:21" pos:end="605:38"><name pos:start="605:21" pos:end="605:23">pps</name><operator pos:start="605:24" pos:end="605:25">-&gt;</operator><name pos:start="605:26" pos:end="605:38">num_tile_rows</name></name></expr>;</condition> <incr pos:start="605:41" pos:end="605:43"><expr pos:start="605:41" pos:end="605:43"><name pos:start="605:41" pos:end="605:41">j</name><operator pos:start="605:42" pos:end="605:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="607:9" pos:end="609:111"><block_content pos:start="607:9" pos:end="609:111">

        <for pos:start="607:9" pos:end="609:111">for <control pos:start="607:13" pos:end="607:51">(<init pos:start="607:14" pos:end="607:19"><expr pos:start="607:14" pos:end="607:18"><name pos:start="607:14" pos:end="607:14">i</name> <operator pos:start="607:16" pos:end="607:16">=</operator> <literal type="number" pos:start="607:18" pos:end="607:18">0</literal></expr>;</init> <condition pos:start="607:21" pos:end="607:46"><expr pos:start="607:21" pos:end="607:45"><name pos:start="607:21" pos:end="607:21">i</name> <operator pos:start="607:23" pos:end="607:23">&lt;</operator> <name pos:start="607:25" pos:end="607:45"><name pos:start="607:25" pos:end="607:27">pps</name><operator pos:start="607:28" pos:end="607:29">-&gt;</operator><name pos:start="607:30" pos:end="607:45">num_tile_columns</name></name></expr>;</condition> <incr pos:start="607:48" pos:end="607:50"><expr pos:start="607:48" pos:end="607:50"><name pos:start="607:48" pos:end="607:48">i</name><operator pos:start="607:49" pos:end="607:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="609:13" pos:end="609:111"><block_content pos:start="609:13" pos:end="609:111">

            <expr_stmt pos:start="609:13" pos:end="609:111"><expr pos:start="609:13" pos:end="609:110"><name pos:start="609:13" pos:end="609:59"><name pos:start="609:13" pos:end="609:15">pps</name><operator pos:start="609:16" pos:end="609:17">-&gt;</operator><name pos:start="609:18" pos:end="609:28">tile_pos_rs</name><index pos:start="609:29" pos:end="609:59">[<expr pos:start="609:30" pos:end="609:58"><name pos:start="609:30" pos:end="609:30">j</name> <operator pos:start="609:32" pos:end="609:32">*</operator> <name pos:start="609:34" pos:end="609:54"><name pos:start="609:34" pos:end="609:36">pps</name><operator pos:start="609:37" pos:end="609:38">-&gt;</operator><name pos:start="609:39" pos:end="609:54">num_tile_columns</name></name> <operator pos:start="609:56" pos:end="609:56">+</operator> <name pos:start="609:58" pos:end="609:58">i</name></expr>]</index></name> <operator pos:start="609:61" pos:end="609:61">=</operator> <name pos:start="609:63" pos:end="609:76"><name pos:start="609:63" pos:end="609:65">pps</name><operator pos:start="609:66" pos:end="609:67">-&gt;</operator><name pos:start="609:68" pos:end="609:73">row_bd</name><index pos:start="609:74" pos:end="609:76">[<expr pos:start="609:75" pos:end="609:75"><name pos:start="609:75" pos:end="609:75">j</name></expr>]</index></name> <operator pos:start="609:78" pos:end="609:78">*</operator> <name pos:start="609:80" pos:end="609:93"><name pos:start="609:80" pos:end="609:82">sps</name><operator pos:start="609:83" pos:end="609:84">-&gt;</operator><name pos:start="609:85" pos:end="609:93">ctb_width</name></name> <operator pos:start="609:95" pos:end="609:95">+</operator> <name pos:start="609:97" pos:end="609:110"><name pos:start="609:97" pos:end="609:99">pps</name><operator pos:start="609:100" pos:end="609:101">-&gt;</operator><name pos:start="609:102" pos:end="609:107">col_bd</name><index pos:start="609:108" pos:end="609:110">[<expr pos:start="609:109" pos:end="609:109"><name pos:start="609:109" pos:end="609:109">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <for pos:start="613:5" pos:end="639:5">for <control pos:start="613:9" pos:end="613:44">(<init pos:start="613:10" pos:end="613:15"><expr pos:start="613:10" pos:end="613:14"><name pos:start="613:10" pos:end="613:10">y</name> <operator pos:start="613:12" pos:end="613:12">=</operator> <literal type="number" pos:start="613:14" pos:end="613:14">0</literal></expr>;</init> <condition pos:start="613:17" pos:end="613:39"><expr pos:start="613:17" pos:end="613:38"><name pos:start="613:17" pos:end="613:17">y</name> <operator pos:start="613:19" pos:end="613:19">&lt;</operator> <name pos:start="613:21" pos:end="613:38"><name pos:start="613:21" pos:end="613:23">sps</name><operator pos:start="613:24" pos:end="613:25">-&gt;</operator><name pos:start="613:26" pos:end="613:38">min_cb_height</name></name></expr>;</condition> <incr pos:start="613:41" pos:end="613:43"><expr pos:start="613:41" pos:end="613:43"><name pos:start="613:41" pos:end="613:41">y</name><operator pos:start="613:42" pos:end="613:43">++</operator></expr></incr>)</control> <block pos:start="613:46" pos:end="639:5">{<block_content pos:start="615:9" pos:end="637:9">

        <for pos:start="615:9" pos:end="637:9">for <control pos:start="615:13" pos:end="615:47">(<init pos:start="615:14" pos:end="615:19"><expr pos:start="615:14" pos:end="615:18"><name pos:start="615:14" pos:end="615:14">x</name> <operator pos:start="615:16" pos:end="615:16">=</operator> <literal type="number" pos:start="615:18" pos:end="615:18">0</literal></expr>;</init> <condition pos:start="615:21" pos:end="615:42"><expr pos:start="615:21" pos:end="615:41"><name pos:start="615:21" pos:end="615:21">x</name> <operator pos:start="615:23" pos:end="615:23">&lt;</operator> <name pos:start="615:25" pos:end="615:41"><name pos:start="615:25" pos:end="615:27">sps</name><operator pos:start="615:28" pos:end="615:29">-&gt;</operator><name pos:start="615:30" pos:end="615:41">min_cb_width</name></name></expr>;</condition> <incr pos:start="615:44" pos:end="615:46"><expr pos:start="615:44" pos:end="615:46"><name pos:start="615:44" pos:end="615:44">x</name><operator pos:start="615:45" pos:end="615:46">++</operator></expr></incr>)</control> <block pos:start="615:49" pos:end="637:9">{<block_content pos:start="617:13" pos:end="635:65">

            <decl_stmt pos:start="617:13" pos:end="617:76"><decl pos:start="617:13" pos:end="617:75"><type pos:start="617:13" pos:end="617:15"><name pos:start="617:13" pos:end="617:15">int</name></type> <name pos:start="617:17" pos:end="617:20">tb_x</name>        <init pos:start="617:29" pos:end="617:75">= <expr pos:start="617:31" pos:end="617:75"><name pos:start="617:31" pos:end="617:31">x</name> <operator pos:start="617:33" pos:end="617:34">&gt;&gt;</operator> <name pos:start="617:36" pos:end="617:75"><name pos:start="617:36" pos:end="617:38">sps</name><operator pos:start="617:39" pos:end="617:40">-&gt;</operator><name pos:start="617:41" pos:end="617:75">log2_diff_max_min_coding_block_size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="619:13" pos:end="619:76"><decl pos:start="619:13" pos:end="619:75"><type pos:start="619:13" pos:end="619:15"><name pos:start="619:13" pos:end="619:15">int</name></type> <name pos:start="619:17" pos:end="619:20">tb_y</name>        <init pos:start="619:29" pos:end="619:75">= <expr pos:start="619:31" pos:end="619:75"><name pos:start="619:31" pos:end="619:31">y</name> <operator pos:start="619:33" pos:end="619:34">&gt;&gt;</operator> <name pos:start="619:36" pos:end="619:75"><name pos:start="619:36" pos:end="619:38">sps</name><operator pos:start="619:39" pos:end="619:40">-&gt;</operator><name pos:start="619:41" pos:end="619:75">log2_diff_max_min_coding_block_size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="621:13" pos:end="621:59"><decl pos:start="621:13" pos:end="621:58"><type pos:start="621:13" pos:end="621:15"><name pos:start="621:13" pos:end="621:15">int</name></type> <name pos:start="621:17" pos:end="621:27">ctb_addr_rs</name> <init pos:start="621:29" pos:end="621:58">= <expr pos:start="621:31" pos:end="621:58"><name pos:start="621:31" pos:end="621:44"><name pos:start="621:31" pos:end="621:33">sps</name><operator pos:start="621:34" pos:end="621:35">-&gt;</operator><name pos:start="621:36" pos:end="621:44">ctb_width</name></name> <operator pos:start="621:46" pos:end="621:46">*</operator> <name pos:start="621:48" pos:end="621:51">tb_y</name> <operator pos:start="621:53" pos:end="621:53">+</operator> <name pos:start="621:55" pos:end="621:58">tb_x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="623:13" pos:end="625:77"><decl pos:start="623:13" pos:end="625:76"><type pos:start="623:13" pos:end="623:15"><name pos:start="623:13" pos:end="623:15">int</name></type> <name pos:start="623:17" pos:end="623:19">val</name>         <init pos:start="623:29" pos:end="625:76">= <expr pos:start="623:31" pos:end="625:76"><name pos:start="623:31" pos:end="623:65"><name pos:start="623:31" pos:end="623:33">pps</name><operator pos:start="623:34" pos:end="623:35">-&gt;</operator><name pos:start="623:36" pos:end="623:52">ctb_addr_rs_to_ts</name><index pos:start="623:53" pos:end="623:65">[<expr pos:start="623:54" pos:end="623:64"><name pos:start="623:54" pos:end="623:64">ctb_addr_rs</name></expr>]</index></name> <operator pos:start="623:67" pos:end="623:68">&lt;&lt;</operator>

                              <operator pos:start="625:31" pos:end="625:31">(</operator><name pos:start="625:32" pos:end="625:71"><name pos:start="625:32" pos:end="625:34">sps</name><operator pos:start="625:35" pos:end="625:36">-&gt;</operator><name pos:start="625:37" pos:end="625:71">log2_diff_max_min_coding_block_size</name></name> <operator pos:start="625:73" pos:end="625:73">*</operator> <literal type="number" pos:start="625:75" pos:end="625:75">2</literal><operator pos:start="625:76" pos:end="625:76">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="627:13" pos:end="633:13">for <control pos:start="627:17" pos:end="627:74">(<init pos:start="627:18" pos:end="627:23"><expr pos:start="627:18" pos:end="627:22"><name pos:start="627:18" pos:end="627:18">i</name> <operator pos:start="627:20" pos:end="627:20">=</operator> <literal type="number" pos:start="627:22" pos:end="627:22">0</literal></expr>;</init> <condition pos:start="627:25" pos:end="627:69"><expr pos:start="627:25" pos:end="627:68"><name pos:start="627:25" pos:end="627:25">i</name> <operator pos:start="627:27" pos:end="627:27">&lt;</operator> <name pos:start="627:29" pos:end="627:68"><name pos:start="627:29" pos:end="627:31">sps</name><operator pos:start="627:32" pos:end="627:33">-&gt;</operator><name pos:start="627:34" pos:end="627:68">log2_diff_max_min_coding_block_size</name></name></expr>;</condition> <incr pos:start="627:71" pos:end="627:73"><expr pos:start="627:71" pos:end="627:73"><name pos:start="627:71" pos:end="627:71">i</name><operator pos:start="627:72" pos:end="627:73">++</operator></expr></incr>)</control> <block pos:start="627:76" pos:end="633:13">{<block_content pos:start="629:17" pos:end="631:69">

                <decl_stmt pos:start="629:17" pos:end="629:31"><decl pos:start="629:17" pos:end="629:30"><type pos:start="629:17" pos:end="629:19"><name pos:start="629:17" pos:end="629:19">int</name></type> <name pos:start="629:21" pos:end="629:21">m</name> <init pos:start="629:23" pos:end="629:30">= <expr pos:start="629:25" pos:end="629:30"><literal type="number" pos:start="629:25" pos:end="629:25">1</literal> <operator pos:start="629:27" pos:end="629:28">&lt;&lt;</operator> <name pos:start="629:30" pos:end="629:30">i</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="631:17" pos:end="631:69"><expr pos:start="631:17" pos:end="631:68"><name pos:start="631:17" pos:end="631:19">val</name> <operator pos:start="631:21" pos:end="631:22">+=</operator> <operator pos:start="631:24" pos:end="631:24">(</operator><ternary pos:start="631:25" pos:end="631:41"><condition pos:start="631:25" pos:end="631:31"><expr pos:start="631:25" pos:end="631:29"><name pos:start="631:25" pos:end="631:25">m</name> <operator pos:start="631:27" pos:end="631:27">&amp;</operator> <name pos:start="631:29" pos:end="631:29">x</name></expr> ?</condition><then pos:start="631:33" pos:end="631:37"> <expr pos:start="631:33" pos:end="631:37"><name pos:start="631:33" pos:end="631:33">m</name> <operator pos:start="631:35" pos:end="631:35">*</operator> <name pos:start="631:37" pos:end="631:37">m</name></expr> </then><else pos:start="631:39" pos:end="631:41">: <expr pos:start="631:41" pos:end="631:41"><literal type="number" pos:start="631:41" pos:end="631:41">0</literal></expr></else></ternary><operator pos:start="631:42" pos:end="631:42">)</operator> <operator pos:start="631:44" pos:end="631:44">+</operator> <operator pos:start="631:46" pos:end="631:46">(</operator><ternary pos:start="631:47" pos:end="631:67"><condition pos:start="631:47" pos:end="631:53"><expr pos:start="631:47" pos:end="631:51"><name pos:start="631:47" pos:end="631:47">m</name> <operator pos:start="631:49" pos:end="631:49">&amp;</operator> <name pos:start="631:51" pos:end="631:51">y</name></expr> ?</condition><then pos:start="631:55" pos:end="631:63"> <expr pos:start="631:55" pos:end="631:63"><literal type="number" pos:start="631:55" pos:end="631:55">2</literal> <operator pos:start="631:57" pos:end="631:57">*</operator> <name pos:start="631:59" pos:end="631:59">m</name> <operator pos:start="631:61" pos:end="631:61">*</operator> <name pos:start="631:63" pos:end="631:63">m</name></expr> </then><else pos:start="631:65" pos:end="631:67">: <expr pos:start="631:67" pos:end="631:67"><literal type="number" pos:start="631:67" pos:end="631:67">0</literal></expr></else></ternary><operator pos:start="631:68" pos:end="631:68">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="635:13" pos:end="635:65"><expr pos:start="635:13" pos:end="635:64"><name pos:start="635:13" pos:end="635:58"><name pos:start="635:13" pos:end="635:15">pps</name><operator pos:start="635:16" pos:end="635:17">-&gt;</operator><name pos:start="635:18" pos:end="635:31">min_cb_addr_zs</name><index pos:start="635:32" pos:end="635:58">[<expr pos:start="635:33" pos:end="635:57"><name pos:start="635:33" pos:end="635:33">y</name> <operator pos:start="635:35" pos:end="635:35">*</operator> <name pos:start="635:37" pos:end="635:53"><name pos:start="635:37" pos:end="635:39">sps</name><operator pos:start="635:40" pos:end="635:41">-&gt;</operator><name pos:start="635:42" pos:end="635:53">min_cb_width</name></name> <operator pos:start="635:55" pos:end="635:55">+</operator> <name pos:start="635:57" pos:end="635:57">x</name></expr>]</index></name> <operator pos:start="635:60" pos:end="635:60">=</operator> <name pos:start="635:62" pos:end="635:64">val</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="643:5" pos:end="643:75"><expr pos:start="643:5" pos:end="643:74"><name pos:start="643:5" pos:end="643:29">log2_diff_ctb_min_tb_size</name> <operator pos:start="643:31" pos:end="643:31">=</operator> <name pos:start="643:33" pos:end="643:50"><name pos:start="643:33" pos:end="643:35">sps</name><operator pos:start="643:36" pos:end="643:37">-&gt;</operator><name pos:start="643:38" pos:end="643:50">log2_ctb_size</name></name> <operator pos:start="643:52" pos:end="643:52">-</operator> <name pos:start="643:54" pos:end="643:74"><name pos:start="643:54" pos:end="643:56">sps</name><operator pos:start="643:57" pos:end="643:58">-&gt;</operator><name pos:start="643:59" pos:end="643:74">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <for pos:start="645:5" pos:end="671:5">for <control pos:start="645:9" pos:end="645:44">(<init pos:start="645:10" pos:end="645:15"><expr pos:start="645:10" pos:end="645:14"><name pos:start="645:10" pos:end="645:10">y</name> <operator pos:start="645:12" pos:end="645:12">=</operator> <literal type="number" pos:start="645:14" pos:end="645:14">0</literal></expr>;</init> <condition pos:start="645:17" pos:end="645:39"><expr pos:start="645:17" pos:end="645:38"><name pos:start="645:17" pos:end="645:17">y</name> <operator pos:start="645:19" pos:end="645:19">&lt;</operator> <name pos:start="645:21" pos:end="645:38"><name pos:start="645:21" pos:end="645:23">sps</name><operator pos:start="645:24" pos:end="645:25">-&gt;</operator><name pos:start="645:26" pos:end="645:38">min_tb_height</name></name></expr>;</condition> <incr pos:start="645:41" pos:end="645:43"><expr pos:start="645:41" pos:end="645:43"><name pos:start="645:41" pos:end="645:41">y</name><operator pos:start="645:42" pos:end="645:43">++</operator></expr></incr>)</control> <block pos:start="645:46" pos:end="671:5">{<block_content pos:start="647:9" pos:end="669:9">

        <for pos:start="647:9" pos:end="669:9">for <control pos:start="647:13" pos:end="647:47">(<init pos:start="647:14" pos:end="647:19"><expr pos:start="647:14" pos:end="647:18"><name pos:start="647:14" pos:end="647:14">x</name> <operator pos:start="647:16" pos:end="647:16">=</operator> <literal type="number" pos:start="647:18" pos:end="647:18">0</literal></expr>;</init> <condition pos:start="647:21" pos:end="647:42"><expr pos:start="647:21" pos:end="647:41"><name pos:start="647:21" pos:end="647:21">x</name> <operator pos:start="647:23" pos:end="647:23">&lt;</operator> <name pos:start="647:25" pos:end="647:41"><name pos:start="647:25" pos:end="647:27">sps</name><operator pos:start="647:28" pos:end="647:29">-&gt;</operator><name pos:start="647:30" pos:end="647:41">min_tb_width</name></name></expr>;</condition> <incr pos:start="647:44" pos:end="647:46"><expr pos:start="647:44" pos:end="647:46"><name pos:start="647:44" pos:end="647:44">x</name><operator pos:start="647:45" pos:end="647:46">++</operator></expr></incr>)</control> <block pos:start="647:49" pos:end="669:9">{<block_content pos:start="649:13" pos:end="667:65">

            <decl_stmt pos:start="649:13" pos:end="649:61"><decl pos:start="649:13" pos:end="649:60"><type pos:start="649:13" pos:end="649:15"><name pos:start="649:13" pos:end="649:15">int</name></type> <name pos:start="649:17" pos:end="649:20">tb_x</name>        <init pos:start="649:29" pos:end="649:60">= <expr pos:start="649:31" pos:end="649:60"><name pos:start="649:31" pos:end="649:31">x</name> <operator pos:start="649:33" pos:end="649:34">&gt;&gt;</operator> <name pos:start="649:36" pos:end="649:60">log2_diff_ctb_min_tb_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="651:13" pos:end="651:61"><decl pos:start="651:13" pos:end="651:60"><type pos:start="651:13" pos:end="651:15"><name pos:start="651:13" pos:end="651:15">int</name></type> <name pos:start="651:17" pos:end="651:20">tb_y</name>        <init pos:start="651:29" pos:end="651:60">= <expr pos:start="651:31" pos:end="651:60"><name pos:start="651:31" pos:end="651:31">y</name> <operator pos:start="651:33" pos:end="651:34">&gt;&gt;</operator> <name pos:start="651:36" pos:end="651:60">log2_diff_ctb_min_tb_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="653:13" pos:end="653:59"><decl pos:start="653:13" pos:end="653:58"><type pos:start="653:13" pos:end="653:15"><name pos:start="653:13" pos:end="653:15">int</name></type> <name pos:start="653:17" pos:end="653:27">ctb_addr_rs</name> <init pos:start="653:29" pos:end="653:58">= <expr pos:start="653:31" pos:end="653:58"><name pos:start="653:31" pos:end="653:44"><name pos:start="653:31" pos:end="653:33">sps</name><operator pos:start="653:34" pos:end="653:35">-&gt;</operator><name pos:start="653:36" pos:end="653:44">ctb_width</name></name> <operator pos:start="653:46" pos:end="653:46">*</operator> <name pos:start="653:48" pos:end="653:51">tb_y</name> <operator pos:start="653:53" pos:end="653:53">+</operator> <name pos:start="653:55" pos:end="653:58">tb_x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="655:13" pos:end="657:62"><decl pos:start="655:13" pos:end="657:61"><type pos:start="655:13" pos:end="655:15"><name pos:start="655:13" pos:end="655:15">int</name></type> <name pos:start="655:17" pos:end="655:19">val</name>         <init pos:start="655:29" pos:end="657:61">= <expr pos:start="655:31" pos:end="657:61"><name pos:start="655:31" pos:end="655:65"><name pos:start="655:31" pos:end="655:33">pps</name><operator pos:start="655:34" pos:end="655:35">-&gt;</operator><name pos:start="655:36" pos:end="655:52">ctb_addr_rs_to_ts</name><index pos:start="655:53" pos:end="655:65">[<expr pos:start="655:54" pos:end="655:64"><name pos:start="655:54" pos:end="655:64">ctb_addr_rs</name></expr>]</index></name> <operator pos:start="655:67" pos:end="655:68">&lt;&lt;</operator>

                              <operator pos:start="657:31" pos:end="657:31">(</operator><name pos:start="657:32" pos:end="657:56">log2_diff_ctb_min_tb_size</name> <operator pos:start="657:58" pos:end="657:58">*</operator> <literal type="number" pos:start="657:60" pos:end="657:60">2</literal><operator pos:start="657:61" pos:end="657:61">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="659:13" pos:end="665:13">for <control pos:start="659:17" pos:end="659:59">(<init pos:start="659:18" pos:end="659:23"><expr pos:start="659:18" pos:end="659:22"><name pos:start="659:18" pos:end="659:18">i</name> <operator pos:start="659:20" pos:end="659:20">=</operator> <literal type="number" pos:start="659:22" pos:end="659:22">0</literal></expr>;</init> <condition pos:start="659:25" pos:end="659:54"><expr pos:start="659:25" pos:end="659:53"><name pos:start="659:25" pos:end="659:25">i</name> <operator pos:start="659:27" pos:end="659:27">&lt;</operator> <name pos:start="659:29" pos:end="659:53">log2_diff_ctb_min_tb_size</name></expr>;</condition> <incr pos:start="659:56" pos:end="659:58"><expr pos:start="659:56" pos:end="659:58"><name pos:start="659:56" pos:end="659:56">i</name><operator pos:start="659:57" pos:end="659:58">++</operator></expr></incr>)</control> <block pos:start="659:61" pos:end="665:13">{<block_content pos:start="661:17" pos:end="663:69">

                <decl_stmt pos:start="661:17" pos:end="661:31"><decl pos:start="661:17" pos:end="661:30"><type pos:start="661:17" pos:end="661:19"><name pos:start="661:17" pos:end="661:19">int</name></type> <name pos:start="661:21" pos:end="661:21">m</name> <init pos:start="661:23" pos:end="661:30">= <expr pos:start="661:25" pos:end="661:30"><literal type="number" pos:start="661:25" pos:end="661:25">1</literal> <operator pos:start="661:27" pos:end="661:28">&lt;&lt;</operator> <name pos:start="661:30" pos:end="661:30">i</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:69"><expr pos:start="663:17" pos:end="663:68"><name pos:start="663:17" pos:end="663:19">val</name> <operator pos:start="663:21" pos:end="663:22">+=</operator> <operator pos:start="663:24" pos:end="663:24">(</operator><ternary pos:start="663:25" pos:end="663:41"><condition pos:start="663:25" pos:end="663:31"><expr pos:start="663:25" pos:end="663:29"><name pos:start="663:25" pos:end="663:25">m</name> <operator pos:start="663:27" pos:end="663:27">&amp;</operator> <name pos:start="663:29" pos:end="663:29">x</name></expr> ?</condition><then pos:start="663:33" pos:end="663:37"> <expr pos:start="663:33" pos:end="663:37"><name pos:start="663:33" pos:end="663:33">m</name> <operator pos:start="663:35" pos:end="663:35">*</operator> <name pos:start="663:37" pos:end="663:37">m</name></expr> </then><else pos:start="663:39" pos:end="663:41">: <expr pos:start="663:41" pos:end="663:41"><literal type="number" pos:start="663:41" pos:end="663:41">0</literal></expr></else></ternary><operator pos:start="663:42" pos:end="663:42">)</operator> <operator pos:start="663:44" pos:end="663:44">+</operator> <operator pos:start="663:46" pos:end="663:46">(</operator><ternary pos:start="663:47" pos:end="663:67"><condition pos:start="663:47" pos:end="663:53"><expr pos:start="663:47" pos:end="663:51"><name pos:start="663:47" pos:end="663:47">m</name> <operator pos:start="663:49" pos:end="663:49">&amp;</operator> <name pos:start="663:51" pos:end="663:51">y</name></expr> ?</condition><then pos:start="663:55" pos:end="663:63"> <expr pos:start="663:55" pos:end="663:63"><literal type="number" pos:start="663:55" pos:end="663:55">2</literal> <operator pos:start="663:57" pos:end="663:57">*</operator> <name pos:start="663:59" pos:end="663:59">m</name> <operator pos:start="663:61" pos:end="663:61">*</operator> <name pos:start="663:63" pos:end="663:63">m</name></expr> </then><else pos:start="663:65" pos:end="663:67">: <expr pos:start="663:67" pos:end="663:67"><literal type="number" pos:start="663:67" pos:end="663:67">0</literal></expr></else></ternary><operator pos:start="663:68" pos:end="663:68">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="667:13" pos:end="667:65"><expr pos:start="667:13" pos:end="667:64"><name pos:start="667:13" pos:end="667:58"><name pos:start="667:13" pos:end="667:15">pps</name><operator pos:start="667:16" pos:end="667:17">-&gt;</operator><name pos:start="667:18" pos:end="667:31">min_tb_addr_zs</name><index pos:start="667:32" pos:end="667:58">[<expr pos:start="667:33" pos:end="667:57"><name pos:start="667:33" pos:end="667:33">y</name> <operator pos:start="667:35" pos:end="667:35">*</operator> <name pos:start="667:37" pos:end="667:53"><name pos:start="667:37" pos:end="667:39">sps</name><operator pos:start="667:40" pos:end="667:41">-&gt;</operator><name pos:start="667:42" pos:end="667:53">min_tb_width</name></name> <operator pos:start="667:55" pos:end="667:55">+</operator> <name pos:start="667:57" pos:end="667:57">x</name></expr>]</index></name> <operator pos:start="667:60" pos:end="667:60">=</operator> <name pos:start="667:62" pos:end="667:64">val</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="675:5" pos:end="675:42"><expr pos:start="675:5" pos:end="675:41"><call pos:start="675:5" pos:end="675:41"><name pos:start="675:5" pos:end="675:19">av_buffer_unref</name><argument_list pos:start="675:20" pos:end="675:41">(<argument pos:start="675:21" pos:end="675:40"><expr pos:start="675:21" pos:end="675:40"><operator pos:start="675:21" pos:end="675:21">&amp;</operator><name pos:start="675:22" pos:end="675:40"><name pos:start="675:22" pos:end="675:22">s</name><operator pos:start="675:23" pos:end="675:24">-&gt;</operator><name pos:start="675:25" pos:end="675:32">pps_list</name><index pos:start="675:33" pos:end="675:40">[<expr pos:start="675:34" pos:end="675:39"><name pos:start="675:34" pos:end="675:39">pps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="677:5" pos:end="677:34"><expr pos:start="677:5" pos:end="677:33"><name pos:start="677:5" pos:end="677:23"><name pos:start="677:5" pos:end="677:5">s</name><operator pos:start="677:6" pos:end="677:7">-&gt;</operator><name pos:start="677:8" pos:end="677:15">pps_list</name><index pos:start="677:16" pos:end="677:23">[<expr pos:start="677:17" pos:end="677:22"><name pos:start="677:17" pos:end="677:22">pps_id</name></expr>]</index></name> <operator pos:start="677:25" pos:end="677:25">=</operator> <name pos:start="677:27" pos:end="677:33">pps_buf</name></expr>;</expr_stmt>



    <return pos:start="681:5" pos:end="681:13">return <expr pos:start="681:12" pos:end="681:12"><literal type="number" pos:start="681:12" pos:end="681:12">0</literal></expr>;</return>



<label pos:start="685:1" pos:end="685:4"><name pos:start="685:1" pos:end="685:3">err</name>:</label>

    <expr_stmt pos:start="687:5" pos:end="687:30"><expr pos:start="687:5" pos:end="687:29"><call pos:start="687:5" pos:end="687:29"><name pos:start="687:5" pos:end="687:19">av_buffer_unref</name><argument_list pos:start="687:20" pos:end="687:29">(<argument pos:start="687:21" pos:end="687:28"><expr pos:start="687:21" pos:end="687:28"><operator pos:start="687:21" pos:end="687:21">&amp;</operator><name pos:start="687:22" pos:end="687:28">pps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="689:5" pos:end="689:15">return <expr pos:start="689:12" pos:end="689:14"><name pos:start="689:12" pos:end="689:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
