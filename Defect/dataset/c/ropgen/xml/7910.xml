<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7910.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flv_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="161:1">{<block_content pos:start="5:5" pos:end="159:21">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">enc</name> <init pos:start="7:25" pos:end="7:62">= <expr pos:start="7:27" pos:end="7:62"><name pos:start="7:27" pos:end="7:55"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">streams</name><index pos:start="7:37" pos:end="7:55">[<expr pos:start="7:38" pos:end="7:54"><name pos:start="7:38" pos:end="7:54"><name pos:start="7:38" pos:end="7:40">pkt</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:54">stream_index</name></name></expr>]</index></name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:62">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">FLVContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">flv</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:15">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name><init pos:start="13:13" pos:end="13:23">= <expr pos:start="13:15" pos:end="13:23"><name pos:start="13:15" pos:end="13:23"><name pos:start="13:15" pos:end="13:17">pkt</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:23">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">data</name><init pos:start="15:18" pos:end="15:23">= <expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">flags</name></decl>, <decl pos:start="17:16" pos:end="17:25"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:25">flags_size</name></decl>;</decl_stmt>



<comment type="line" pos:start="21:1" pos:end="21:100">//    av_log(s, AV_LOG_DEBUG, "type:%d pts: %"PRId64" size:%d\n", enc-&gt;codec_type, timestamp, size);</comment>



    <if_stmt pos:start="25:5" pos:end="37:22"><if pos:start="25:5" pos:end="29:22">if<condition pos:start="25:7" pos:end="27:37">(<expr pos:start="25:8" pos:end="27:36"><name pos:start="25:8" pos:end="25:20"><name pos:start="25:8" pos:end="25:10">enc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:20">codec_id</name></name> <operator pos:start="25:22" pos:end="25:23">==</operator> <name pos:start="25:25" pos:end="25:36">CODEC_ID_VP6</name> <operator pos:start="25:38" pos:end="25:39">||</operator> <name pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:43">enc</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:53">codec_id</name></name> <operator pos:start="25:55" pos:end="25:56">==</operator> <name pos:start="25:58" pos:end="25:70">CODEC_ID_VP6F</name> <operator pos:start="25:72" pos:end="25:73">||</operator>

       <name pos:start="27:8" pos:end="27:20"><name pos:start="27:8" pos:end="27:10">enc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:20">codec_id</name></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:36">CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:22"><block_content pos:start="29:9" pos:end="29:22">

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:18">flags_size</name><operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">2</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="31:5" pos:end="33:22">else if<condition pos:start="31:12" pos:end="31:43">(<expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:15">enc</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:25">codec_id</name></name> <operator pos:start="31:27" pos:end="31:28">==</operator> <name pos:start="31:30" pos:end="31:42">CODEC_ID_H264</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:22"><block_content pos:start="33:9" pos:end="33:22">

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:18">flags_size</name><operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="number" pos:start="33:21" pos:end="33:21">5</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="35:5" pos:end="37:22">else<block type="pseudo" pos:start="37:9" pos:end="37:22"><block_content pos:start="37:9" pos:end="37:22">

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:18">flags_size</name><operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="75:5"><if pos:start="41:5" pos:end="61:5">if <condition pos:start="41:8" pos:end="41:46">(<expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">enc</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">codec_type</name></name> <operator pos:start="41:25" pos:end="41:26">==</operator> <name pos:start="41:28" pos:end="41:45">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="41:48" pos:end="61:5">{<block_content pos:start="43:9" pos:end="59:80">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:15">avio_w8</name><argument_list pos:start="43:16" pos:end="43:39">(<argument pos:start="43:17" pos:end="43:18"><expr pos:start="43:17" pos:end="43:18"><name pos:start="43:17" pos:end="43:18">pb</name></expr></argument>, <argument pos:start="43:21" pos:end="43:38"><expr pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:38">FLV_TAG_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:13">flags</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:19">enc</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:30">codec_tag</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if<condition pos:start="49:11" pos:end="49:22">(<expr pos:start="49:12" pos:end="49:21"><name pos:start="49:12" pos:end="49:16">flags</name> <operator pos:start="49:18" pos:end="49:19">==</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>)</condition> <block pos:start="49:24" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:96"><expr pos:start="51:13" pos:end="51:95"><call pos:start="51:13" pos:end="51:95"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:95">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">enc</name></expr></argument>, <argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:39" pos:end="51:80"><expr pos:start="51:39" pos:end="51:80"><literal type="string" pos:start="51:39" pos:end="51:80">"video codec %X not compatible with flv\n"</literal></expr></argument>,<argument pos:start="51:82" pos:end="51:94"><expr pos:start="51:82" pos:end="51:94"><name pos:start="51:82" pos:end="51:94"><name pos:start="51:82" pos:end="51:84">enc</name><operator pos:start="51:85" pos:end="51:86">-&gt;</operator><name pos:start="51:87" pos:end="51:94">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:80"><expr pos:start="59:9" pos:end="59:79"><name pos:start="59:9" pos:end="59:13">flags</name> <operator pos:start="59:15" pos:end="59:16">|=</operator> <ternary pos:start="59:18" pos:end="59:79"><condition pos:start="59:18" pos:end="59:47"><expr pos:start="59:18" pos:end="59:45"><name pos:start="59:18" pos:end="59:27"><name pos:start="59:18" pos:end="59:20">pkt</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:27">flags</name></name> <operator pos:start="59:29" pos:end="59:29">&amp;</operator> <name pos:start="59:31" pos:end="59:45">AV_PKT_FLAG_KEY</name></expr> ?</condition><then pos:start="59:49" pos:end="59:61"> <expr pos:start="59:49" pos:end="59:61"><name pos:start="59:49" pos:end="59:61">FLV_FRAME_KEY</name></expr> </then><else pos:start="59:63" pos:end="59:79">: <expr pos:start="59:65" pos:end="59:79"><name pos:start="59:65" pos:end="59:79">FLV_FRAME_INTER</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="75:5">else <block pos:start="61:12" pos:end="75:5">{<block_content pos:start="63:9" pos:end="73:40">

        <expr_stmt pos:start="63:9" pos:end="63:54"><expr pos:start="63:9" pos:end="63:53"><call pos:start="63:9" pos:end="63:53"><name pos:start="63:9" pos:end="63:14">assert</name><argument_list pos:start="63:15" pos:end="63:53">(<argument pos:start="63:16" pos:end="63:52"><expr pos:start="63:16" pos:end="63:52"><name pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:18">enc</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:30">codec_type</name></name> <operator pos:start="63:32" pos:end="63:33">==</operator> <name pos:start="63:35" pos:end="63:52">AVMEDIA_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:13">flags</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <call pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:31">get_audio_flags</name><argument_list pos:start="65:32" pos:end="65:36">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><call pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:14">assert</name><argument_list pos:start="69:15" pos:end="69:20">(<argument pos:start="69:16" pos:end="69:19"><expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><call pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:15">avio_w8</name><argument_list pos:start="73:16" pos:end="73:39">(<argument pos:start="73:17" pos:end="73:18"><expr pos:start="73:17" pos:end="73:18"><name pos:start="73:17" pos:end="73:18">pb</name></expr></argument>, <argument pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:38"><name pos:start="73:21" pos:end="73:38">FLV_TAG_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="91:5">if <condition pos:start="79:8" pos:end="79:39">(<expr pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:11">enc</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:21">codec_id</name></name> <operator pos:start="79:23" pos:end="79:24">==</operator> <name pos:start="79:26" pos:end="79:38">CODEC_ID_H264</name></expr>)</condition> <block pos:start="79:41" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:9">

        <comment type="block" pos:start="81:9" pos:end="81:56">/* check if extradata looks like mp4 formated */</comment>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:70">(<expr pos:start="83:13" pos:end="83:69"><name pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:15">enc</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:31">extradata_size</name></name> <operator pos:start="83:33" pos:end="83:33">&gt;</operator> <literal type="number" pos:start="83:35" pos:end="83:35">0</literal> <operator pos:start="83:37" pos:end="83:38">&amp;&amp;</operator> <operator pos:start="83:40" pos:end="83:40">*</operator><operator pos:start="83:41" pos:end="83:41">(</operator><name pos:start="83:42" pos:end="83:48">uint8_t</name><operator pos:start="83:49" pos:end="83:49">*</operator><operator pos:start="83:50" pos:end="83:50">)</operator><name pos:start="83:51" pos:end="83:64"><name pos:start="83:51" pos:end="83:53">enc</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:64">extradata</name></name> <operator pos:start="83:66" pos:end="83:67">!=</operator> <literal type="number" pos:start="83:69" pos:end="83:69">1</literal></expr>)</condition> <block pos:start="83:72" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:26">

            <if_stmt pos:start="85:13" pos:end="87:26"><if pos:start="85:13" pos:end="87:26">if <condition pos:start="85:16" pos:end="85:72">(<expr pos:start="85:17" pos:end="85:71"><call pos:start="85:17" pos:end="85:67"><name pos:start="85:17" pos:end="85:42">ff_avc_parse_nal_units_buf</name><argument_list pos:start="85:43" pos:end="85:67">(<argument pos:start="85:44" pos:end="85:52"><expr pos:start="85:44" pos:end="85:52"><name pos:start="85:44" pos:end="85:52"><name pos:start="85:44" pos:end="85:46">pkt</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:52">data</name></name></expr></argument>, <argument pos:start="85:55" pos:end="85:59"><expr pos:start="85:55" pos:end="85:59"><operator pos:start="85:55" pos:end="85:55">&amp;</operator><name pos:start="85:56" pos:end="85:59">data</name></expr></argument>, <argument pos:start="85:62" pos:end="85:66"><expr pos:start="85:62" pos:end="85:66"><operator pos:start="85:62" pos:end="85:62">&amp;</operator><name pos:start="85:63" pos:end="85:66">size</name></expr></argument>)</argument_list></call> <operator pos:start="85:69" pos:end="85:69">&lt;</operator> <literal type="number" pos:start="85:71" pos:end="85:71">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:26"><block_content pos:start="87:17" pos:end="87:26">

                <return pos:start="87:17" pos:end="87:26">return <expr pos:start="87:24" pos:end="87:25"><operator pos:start="87:24" pos:end="87:24">-</operator><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="95:31"><if pos:start="93:5" pos:end="95:31">if <condition pos:start="93:8" pos:end="93:36">(<expr pos:start="93:9" pos:end="93:35"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:19"><name pos:start="93:10" pos:end="93:12">flv</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:19">delay</name></name> <operator pos:start="93:21" pos:end="93:22">&amp;&amp;</operator> <name pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:26">pkt</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:31">dts</name></name> <operator pos:start="93:33" pos:end="93:33">&lt;</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:31"><block_content pos:start="95:9" pos:end="95:31">

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:11">flv</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:18">delay</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">-</operator><name pos:start="95:23" pos:end="95:30"><name pos:start="95:23" pos:end="95:25">pkt</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:30">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:6">ts</name> <operator pos:start="99:8" pos:end="99:8">=</operator> <name pos:start="99:10" pos:end="99:17"><name pos:start="99:10" pos:end="99:12">pkt</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:17">dts</name></name> <operator pos:start="99:19" pos:end="99:19">+</operator> <name pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:23">flv</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:30">delay</name></name></expr>;</expr_stmt> <comment type="line" pos:start="99:33" pos:end="99:66">// add delay to force positive dts</comment>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:46">(<expr pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:11">enc</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:23">codec_type</name></name> <operator pos:start="101:25" pos:end="101:26">==</operator> <name pos:start="101:28" pos:end="101:45">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="101:48" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:36">

        <if_stmt pos:start="103:9" pos:end="105:36"><if pos:start="103:9" pos:end="105:36">if <condition pos:start="103:12" pos:end="103:36">(<expr pos:start="103:13" pos:end="103:35"><name pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:15">flv</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:30">last_video_ts</name></name> <operator pos:start="103:32" pos:end="103:32">&lt;</operator> <name pos:start="103:34" pos:end="103:35">ts</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:36"><block_content pos:start="105:13" pos:end="105:36">

            <expr_stmt pos:start="105:13" pos:end="105:36"><expr pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:15">flv</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:30">last_video_ts</name></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <name pos:start="105:34" pos:end="105:35">ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:36"><expr pos:start="109:5" pos:end="109:35"><call pos:start="109:5" pos:end="109:35"><name pos:start="109:5" pos:end="109:13">avio_wb24</name><argument_list pos:start="109:14" pos:end="109:35">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>,<argument pos:start="109:18" pos:end="109:34"><expr pos:start="109:18" pos:end="109:34"><name pos:start="109:18" pos:end="109:21">size</name> <operator pos:start="109:23" pos:end="109:23">+</operator> <name pos:start="109:25" pos:end="109:34">flags_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:21"><expr pos:start="111:5" pos:end="111:20"><call pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:13">avio_wb24</name><argument_list pos:start="111:14" pos:end="111:20">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>,<argument pos:start="111:18" pos:end="111:19"><expr pos:start="111:18" pos:end="111:19"><name pos:start="111:18" pos:end="111:19">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><call pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:11">avio_w8</name><argument_list pos:start="113:12" pos:end="113:33">(<argument pos:start="113:13" pos:end="113:14"><expr pos:start="113:13" pos:end="113:14"><name pos:start="113:13" pos:end="113:14">pb</name></expr></argument>,<argument pos:start="113:16" pos:end="113:32"><expr pos:start="113:16" pos:end="113:32"><operator pos:start="113:16" pos:end="113:16">(</operator><name pos:start="113:17" pos:end="113:18">ts</name> <operator pos:start="113:20" pos:end="113:21">&gt;&gt;</operator> <literal type="number" pos:start="113:23" pos:end="113:24">24</literal><operator pos:start="113:25" pos:end="113:25">)</operator> <operator pos:start="113:27" pos:end="113:27">&amp;</operator> <literal type="number" pos:start="113:29" pos:end="113:32">0x7F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="113:36" pos:end="113:68">// timestamps are 32bits _signed_</comment>

    <expr_stmt pos:start="115:5" pos:end="115:32"><expr pos:start="115:5" pos:end="115:31"><call pos:start="115:5" pos:end="115:31"><name pos:start="115:5" pos:end="115:13">avio_wb24</name><argument_list pos:start="115:14" pos:end="115:31">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>,<argument pos:start="115:18" pos:end="115:30"><expr pos:start="115:18" pos:end="115:30"><name pos:start="115:18" pos:end="115:30"><name pos:start="115:18" pos:end="115:20">flv</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:30">reserved</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:22"><expr pos:start="117:5" pos:end="117:21"><call pos:start="117:5" pos:end="117:21"><name pos:start="117:5" pos:end="117:11">avio_w8</name><argument_list pos:start="117:12" pos:end="117:21">(<argument pos:start="117:13" pos:end="117:14"><expr pos:start="117:13" pos:end="117:14"><name pos:start="117:13" pos:end="117:14">pb</name></expr></argument>,<argument pos:start="117:16" pos:end="117:20"><expr pos:start="117:16" pos:end="117:20"><name pos:start="117:16" pos:end="117:20">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:22"><if pos:start="119:5" pos:end="121:22">if <condition pos:start="119:8" pos:end="119:38">(<expr pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:11">enc</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:21">codec_id</name></name> <operator pos:start="119:23" pos:end="119:24">==</operator> <name pos:start="119:26" pos:end="119:37">CODEC_ID_VP6</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:22"><block_content pos:start="121:9" pos:end="121:22">

        <expr_stmt pos:start="121:9" pos:end="121:22"><expr pos:start="121:9" pos:end="121:21"><call pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:15">avio_w8</name><argument_list pos:start="121:16" pos:end="121:21">(<argument pos:start="121:17" pos:end="121:18"><expr pos:start="121:17" pos:end="121:18"><name pos:start="121:17" pos:end="121:18">pb</name></expr></argument>,<argument pos:start="121:20" pos:end="121:20"><expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="137:5"><if pos:start="123:5" pos:end="125:65">if <condition pos:start="123:8" pos:end="123:39">(<expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:11">enc</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:21">codec_id</name></name> <operator pos:start="123:23" pos:end="123:24">==</operator> <name pos:start="123:26" pos:end="123:38">CODEC_ID_VP6F</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:65"><block_content pos:start="125:9" pos:end="125:65">

        <expr_stmt pos:start="125:9" pos:end="125:65"><expr pos:start="125:9" pos:end="125:64"><call pos:start="125:9" pos:end="125:64"><name pos:start="125:9" pos:end="125:15">avio_w8</name><argument_list pos:start="125:16" pos:end="125:64">(<argument pos:start="125:17" pos:end="125:18"><expr pos:start="125:17" pos:end="125:18"><name pos:start="125:17" pos:end="125:18">pb</name></expr></argument>, <argument pos:start="125:21" pos:end="125:63"><expr pos:start="125:21" pos:end="125:63"><ternary pos:start="125:21" pos:end="125:63"><condition pos:start="125:21" pos:end="125:41"><expr pos:start="125:21" pos:end="125:39"><name pos:start="125:21" pos:end="125:39"><name pos:start="125:21" pos:end="125:23">enc</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:39">extradata_size</name></name></expr> ?</condition><then pos:start="125:43" pos:end="125:59"> <expr pos:start="125:43" pos:end="125:59"><name pos:start="125:43" pos:end="125:59"><name pos:start="125:43" pos:end="125:45">enc</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:56">extradata</name><index pos:start="125:57" pos:end="125:59">[<expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">0</literal></expr>]</index></name></expr> </then><else pos:start="125:61" pos:end="125:63">: <expr pos:start="125:63" pos:end="125:63"><literal type="number" pos:start="125:63" pos:end="125:63">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="127:5" pos:end="129:22">else if <condition pos:start="127:13" pos:end="127:43">(<expr pos:start="127:14" pos:end="127:42"><name pos:start="127:14" pos:end="127:26"><name pos:start="127:14" pos:end="127:16">enc</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:26">codec_id</name></name> <operator pos:start="127:28" pos:end="127:29">==</operator> <name pos:start="127:31" pos:end="127:42">CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:22"><block_content pos:start="129:9" pos:end="129:22">

        <expr_stmt pos:start="129:9" pos:end="129:22"><expr pos:start="129:9" pos:end="129:21"><call pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:15">avio_w8</name><argument_list pos:start="129:16" pos:end="129:21">(<argument pos:start="129:17" pos:end="129:18"><expr pos:start="129:17" pos:end="129:18"><name pos:start="129:17" pos:end="129:18">pb</name></expr></argument>,<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><literal type="number" pos:start="129:20" pos:end="129:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="129:24" pos:end="129:33">// AAC raw</comment>

    <if type="elseif" pos:start="131:5" pos:end="137:5">else if <condition pos:start="131:13" pos:end="131:44">(<expr pos:start="131:14" pos:end="131:43"><name pos:start="131:14" pos:end="131:26"><name pos:start="131:14" pos:end="131:16">enc</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:26">codec_id</name></name> <operator pos:start="131:28" pos:end="131:29">==</operator> <name pos:start="131:31" pos:end="131:43">CODEC_ID_H264</name></expr>)</condition> <block pos:start="131:46" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:42">

        <expr_stmt pos:start="133:9" pos:end="133:22"><expr pos:start="133:9" pos:end="133:21"><call pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:15">avio_w8</name><argument_list pos:start="133:16" pos:end="133:21">(<argument pos:start="133:17" pos:end="133:18"><expr pos:start="133:17" pos:end="133:18"><name pos:start="133:17" pos:end="133:18">pb</name></expr></argument>,<argument pos:start="133:20" pos:end="133:20"><expr pos:start="133:20" pos:end="133:20"><literal type="number" pos:start="133:20" pos:end="133:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="133:24" pos:end="133:34">// AVC NALU</comment>

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:17">avio_wb24</name><argument_list pos:start="135:18" pos:end="135:41">(<argument pos:start="135:19" pos:end="135:20"><expr pos:start="135:19" pos:end="135:20"><name pos:start="135:19" pos:end="135:20">pb</name></expr></argument>,<argument pos:start="135:22" pos:end="135:40"><expr pos:start="135:22" pos:end="135:40"><name pos:start="135:22" pos:end="135:29"><name pos:start="135:22" pos:end="135:24">pkt</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:29">pts</name></name> <operator pos:start="135:31" pos:end="135:31">-</operator> <name pos:start="135:33" pos:end="135:40"><name pos:start="135:33" pos:end="135:35">pkt</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:40">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><call pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:14">avio_write</name><argument_list pos:start="141:15" pos:end="141:49">(<argument pos:start="141:16" pos:end="141:17"><expr pos:start="141:16" pos:end="141:17"><name pos:start="141:16" pos:end="141:17">pb</name></expr></argument>, <argument pos:start="141:20" pos:end="141:42"><expr pos:start="141:20" pos:end="141:42"><ternary pos:start="141:20" pos:end="141:42"><condition pos:start="141:20" pos:end="141:25"><expr pos:start="141:20" pos:end="141:23"><name pos:start="141:20" pos:end="141:23">data</name></expr> ?</condition><then pos:start="141:27" pos:end="141:30"> <expr pos:start="141:27" pos:end="141:30"><name pos:start="141:27" pos:end="141:30">data</name></expr> </then><else pos:start="141:32" pos:end="141:42">: <expr pos:start="141:34" pos:end="141:42"><name pos:start="141:34" pos:end="141:42"><name pos:start="141:34" pos:end="141:36">pkt</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:42">data</name></name></expr></else></ternary></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:37"><expr pos:start="145:5" pos:end="145:36"><call pos:start="145:5" pos:end="145:36"><name pos:start="145:5" pos:end="145:13">avio_wb32</name><argument_list pos:start="145:14" pos:end="145:36">(<argument pos:start="145:15" pos:end="145:16"><expr pos:start="145:15" pos:end="145:16"><name pos:start="145:15" pos:end="145:16">pb</name></expr></argument>,<argument pos:start="145:18" pos:end="145:35"><expr pos:start="145:18" pos:end="145:35"><name pos:start="145:18" pos:end="145:21">size</name><operator pos:start="145:22" pos:end="145:22">+</operator><name pos:start="145:23" pos:end="145:32">flags_size</name><operator pos:start="145:33" pos:end="145:33">+</operator><literal type="number" pos:start="145:34" pos:end="145:35">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="145:39" pos:end="145:58">// previous tag size</comment>

    <expr_stmt pos:start="147:5" pos:end="147:80"><expr pos:start="147:5" pos:end="147:79"><name pos:start="147:5" pos:end="147:17"><name pos:start="147:5" pos:end="147:7">flv</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:17">duration</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <call pos:start="147:21" pos:end="147:79"><name pos:start="147:21" pos:end="147:25">FFMAX</name><argument_list pos:start="147:26" pos:end="147:79">(<argument pos:start="147:27" pos:end="147:39"><expr pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:29">flv</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:39">duration</name></name></expr></argument>, <argument pos:start="147:42" pos:end="147:78"><expr pos:start="147:42" pos:end="147:78"><name pos:start="147:42" pos:end="147:49"><name pos:start="147:42" pos:end="147:44">pkt</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:49">pts</name></name> <operator pos:start="147:51" pos:end="147:51">+</operator> <name pos:start="147:53" pos:end="147:62"><name pos:start="147:53" pos:end="147:55">flv</name><operator pos:start="147:56" pos:end="147:57">-&gt;</operator><name pos:start="147:58" pos:end="147:62">delay</name></name> <operator pos:start="147:64" pos:end="147:64">+</operator> <name pos:start="147:66" pos:end="147:78"><name pos:start="147:66" pos:end="147:68">pkt</name><operator pos:start="147:69" pos:end="147:70">-&gt;</operator><name pos:start="147:71" pos:end="147:78">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:19"><expr pos:start="151:5" pos:end="151:18"><call pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:14">avio_flush</name><argument_list pos:start="151:15" pos:end="151:18">(<argument pos:start="151:16" pos:end="151:17"><expr pos:start="151:16" pos:end="151:17"><name pos:start="151:16" pos:end="151:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:18"><expr pos:start="155:5" pos:end="155:17"><call pos:start="155:5" pos:end="155:17"><name pos:start="155:5" pos:end="155:11">av_free</name><argument_list pos:start="155:12" pos:end="155:17">(<argument pos:start="155:13" pos:end="155:16"><expr pos:start="155:13" pos:end="155:16"><name pos:start="155:13" pos:end="155:16">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="159:5" pos:end="159:21">return <expr pos:start="159:12" pos:end="159:20"><name pos:start="159:12" pos:end="159:20"><name pos:start="159:12" pos:end="159:13">pb</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:20">error</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
