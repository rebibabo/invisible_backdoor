<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21922.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">virtio_scsi_hotplug</name><parameter_list pos:start="1:32" pos:end="3:45">(<parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><name pos:start="1:33" pos:end="1:46">HotplugHandler</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:59">hotplug_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><name pos:start="1:62" pos:end="1:72">DeviceState</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">dev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:37">Error</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier><modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:51">= <expr pos:start="7:26" pos:end="7:51"><call pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:38">VIRTIO_DEVICE</name><argument_list pos:start="7:39" pos:end="7:51">(<argument pos:start="7:40" pos:end="7:50"><expr pos:start="7:40" pos:end="7:50"><name pos:start="7:40" pos:end="7:50">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VirtIOSCSI</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:37">= <expr pos:start="9:21" pos:end="9:37"><call pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:31">VIRTIO_SCSI</name><argument_list pos:start="9:32" pos:end="9:37">(<argument pos:start="9:33" pos:end="9:36"><expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">SCSIDevice</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">sd</name> <init pos:start="11:20" pos:end="11:37">= <expr pos:start="11:22" pos:end="11:37"><call pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:32">SCSI_DEVICE</name><argument_list pos:start="11:33" pos:end="11:37">(<argument pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="63:5"><if pos:start="15:5" pos:end="63:5">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">ctx</name></name> <operator pos:start="15:16" pos:end="15:17">&amp;&amp;</operator> <operator pos:start="15:19" pos:end="15:19">!</operator><name pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:40">dataplane_disabled</name></name></expr>)</condition> <block pos:start="15:43" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:72">

        <decl_stmt pos:start="17:9" pos:end="17:71"><decl pos:start="17:9" pos:end="17:52"><type pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:35">VirtIOSCSIBlkChangeNotifier</name> <modifier pos:start="17:37" pos:end="17:37">*</modifier></type><name pos:start="17:38" pos:end="17:52">insert_notifier</name></decl>, <decl pos:start="17:55" pos:end="17:70"><type ref="prev" pos:start="17:9" pos:end="17:37"><modifier pos:start="17:55" pos:end="17:55">*</modifier></type><name pos:start="17:56" pos:end="17:70">remove_notifier</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:75">(<expr pos:start="21:13" pos:end="21:74"><call pos:start="21:13" pos:end="21:74"><name pos:start="21:13" pos:end="21:29">blk_op_is_blocked</name><argument_list pos:start="21:30" pos:end="21:74">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:32">sd</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:38">conf</name><operator pos:start="21:39" pos:end="21:39">.</operator><name pos:start="21:40" pos:end="21:42">blk</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:67"><expr pos:start="21:45" pos:end="21:67"><name pos:start="21:45" pos:end="21:67">BLOCK_OP_TYPE_DATAPLANE</name></expr></argument>, <argument pos:start="21:70" pos:end="21:73"><expr pos:start="21:70" pos:end="21:73"><name pos:start="21:70" pos:end="21:73">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:77" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:19">

            <return pos:start="23:13" pos:end="23:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><call pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:24">blk_op_block_all</name><argument_list pos:start="27:25" pos:end="27:50">(<argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:27">sd</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:33">conf</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:37">blk</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:49"><expr pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:49">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><call pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:27">aio_context_acquire</name><argument_list pos:start="29:28" pos:end="29:35">(<argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:27">blk_set_aio_context</name><argument_list pos:start="31:28" pos:end="31:49">(<argument pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:30">sd</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:36">conf</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:40">blk</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:48"><expr pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:43">s</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:48">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:36"><expr pos:start="33:9" pos:end="33:35"><call pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:27">aio_context_release</name><argument_list pos:start="33:28" pos:end="33:35">(<argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:23">insert_notifier</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:64"><name pos:start="37:27" pos:end="37:32">g_new0</name><argument_list pos:start="37:33" pos:end="37:64">(<argument pos:start="37:34" pos:end="37:60"><expr pos:start="37:34" pos:end="37:60"><name pos:start="37:34" pos:end="37:60">VirtIOSCSIBlkChangeNotifier</name></expr></argument>, <argument pos:start="37:63" pos:end="37:63"><expr pos:start="37:63" pos:end="37:63"><literal type="number" pos:start="37:63" pos:end="37:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:68"><expr pos:start="39:9" pos:end="39:67"><name pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:23">insert_notifier</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:26">n</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:33">notify</name></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <name pos:start="39:37" pos:end="39:67">virtio_scsi_blk_insert_notifier</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:23">insert_notifier</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:26">s</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:30">s</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:23">insert_notifier</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:27">sd</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:32">sd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:70"><expr pos:start="45:9" pos:end="45:69"><call pos:start="45:9" pos:end="45:69"><name pos:start="45:9" pos:end="45:34">blk_add_insert_bs_notifier</name><argument_list pos:start="45:35" pos:end="45:69">(<argument pos:start="45:36" pos:end="45:47"><expr pos:start="45:36" pos:end="45:47"><name pos:start="45:36" pos:end="45:47"><name pos:start="45:36" pos:end="45:37">sd</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:43">conf</name><operator pos:start="45:44" pos:end="45:44">.</operator><name pos:start="45:45" pos:end="45:47">blk</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:68"><expr pos:start="45:50" pos:end="45:68"><operator pos:start="45:50" pos:end="45:50">&amp;</operator><name pos:start="45:51" pos:end="45:68"><name pos:start="45:51" pos:end="45:65">insert_notifier</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:68">n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:72"><expr pos:start="47:9" pos:end="47:71"><call pos:start="47:9" pos:end="47:71"><name pos:start="47:9" pos:end="47:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="47:27" pos:end="47:71">(<argument pos:start="47:28" pos:end="47:47"><expr pos:start="47:28" pos:end="47:47"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:29">s</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:47">insert_notifiers</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:64"><expr pos:start="47:50" pos:end="47:64"><name pos:start="47:50" pos:end="47:64">insert_notifier</name></expr></argument>, <argument pos:start="47:67" pos:end="47:70"><expr pos:start="47:67" pos:end="47:70"><name pos:start="47:67" pos:end="47:70">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:23">remove_notifier</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:64"><name pos:start="51:27" pos:end="51:32">g_new0</name><argument_list pos:start="51:33" pos:end="51:64">(<argument pos:start="51:34" pos:end="51:60"><expr pos:start="51:34" pos:end="51:60"><name pos:start="51:34" pos:end="51:60">VirtIOSCSIBlkChangeNotifier</name></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:23">remove_notifier</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:26">n</name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:33">notify</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <name pos:start="53:37" pos:end="53:67">virtio_scsi_blk_remove_notifier</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:23">remove_notifier</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:26">s</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:30">s</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:23">remove_notifier</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:27">sd</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:32">sd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><call pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:34">blk_add_remove_bs_notifier</name><argument_list pos:start="59:35" pos:end="59:69">(<argument pos:start="59:36" pos:end="59:47"><expr pos:start="59:36" pos:end="59:47"><name pos:start="59:36" pos:end="59:47"><name pos:start="59:36" pos:end="59:37">sd</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:43">conf</name><operator pos:start="59:44" pos:end="59:44">.</operator><name pos:start="59:45" pos:end="59:47">blk</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:68"><expr pos:start="59:50" pos:end="59:68"><operator pos:start="59:50" pos:end="59:50">&amp;</operator><name pos:start="59:51" pos:end="59:68"><name pos:start="59:51" pos:end="59:65">remove_notifier</name><operator pos:start="59:66" pos:end="59:67">-&gt;</operator><name pos:start="59:68" pos:end="59:68">n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:72"><expr pos:start="61:9" pos:end="61:71"><call pos:start="61:9" pos:end="61:71"><name pos:start="61:9" pos:end="61:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="61:27" pos:end="61:71">(<argument pos:start="61:28" pos:end="61:47"><expr pos:start="61:28" pos:end="61:47"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:47"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:47">remove_notifiers</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:64"><expr pos:start="61:50" pos:end="61:64"><name pos:start="61:50" pos:end="61:64">remove_notifier</name></expr></argument>, <argument pos:start="61:67" pos:end="61:70"><expr pos:start="61:67" pos:end="61:70"><name pos:start="61:67" pos:end="61:70">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:61">(<expr pos:start="67:9" pos:end="67:60"><call pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:31">virtio_vdev_has_feature</name><argument_list pos:start="67:32" pos:end="67:60">(<argument pos:start="67:33" pos:end="67:36"><expr pos:start="67:33" pos:end="67:36"><name pos:start="67:33" pos:end="67:36">vdev</name></expr></argument>, <argument pos:start="67:39" pos:end="67:59"><expr pos:start="67:39" pos:end="67:59"><name pos:start="67:39" pos:end="67:59">VIRTIO_SCSI_F_HOTPLUG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:63" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:61">

        <expr_stmt pos:start="69:9" pos:end="73:61"><expr pos:start="69:9" pos:end="73:60"><call pos:start="69:9" pos:end="73:60"><name pos:start="69:9" pos:end="69:30">virtio_scsi_push_event</name><argument_list pos:start="69:31" pos:end="73:60">(<argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">s</name></expr></argument>, <argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">sd</name></expr></argument>,

                               <argument pos:start="71:32" pos:end="71:60"><expr pos:start="71:32" pos:end="71:60"><name pos:start="71:32" pos:end="71:60">VIRTIO_SCSI_T_TRANSPORT_RESET</name></expr></argument>,

                               <argument pos:start="73:32" pos:end="73:59"><expr pos:start="73:32" pos:end="73:59"><name pos:start="73:32" pos:end="73:59">VIRTIO_SCSI_EVT_RESET_RESCAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
