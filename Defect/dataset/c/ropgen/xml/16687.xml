<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16687.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:14"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">qmp_block_resize</name><parameter_list pos:start="1:22" pos:end="3:49">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:26">bool</name></type> <name pos:start="1:28" pos:end="1:37">has_device</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">device</name></decl></parameter>,
                      <parameter pos:start="2:23" pos:end="2:40"><decl pos:start="2:23" pos:end="2:40"><type pos:start="2:23" pos:end="2:40"><name pos:start="2:23" pos:end="2:26">bool</name></type> <name pos:start="2:28" pos:end="2:40">has_node_name</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:63"><decl pos:start="2:43" pos:end="2:63"><type pos:start="2:43" pos:end="2:63"><specifier pos:start="2:43" pos:end="2:47">const</specifier> <name pos:start="2:49" pos:end="2:52">char</name> <modifier pos:start="2:54" pos:end="2:54">*</modifier></type><name pos:start="2:55" pos:end="2:63">node_name</name></decl></parameter>,
                      <parameter pos:start="3:23" pos:end="3:34"><decl pos:start="3:23" pos:end="3:34"><type pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:29">int64_t</name></type> <name pos:start="3:31" pos:end="3:34">size</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:41">Error</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">errp</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="36:14">{<block_content pos:start="5:5" pos:end="36:14">
    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:25"><decl pos:start="6:5" pos:end="6:24"><type pos:start="6:5" pos:end="6:22"><name pos:start="6:5" pos:end="6:20">BlockDriverState</name> <modifier pos:start="6:22" pos:end="6:22">*</modifier></type><name pos:start="6:23" pos:end="6:24">bs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="10:36"><expr pos:start="8:5" pos:end="10:35"><name pos:start="8:5" pos:end="8:6">bs</name> <operator pos:start="8:8" pos:end="8:8">=</operator> <call pos:start="8:10" pos:end="10:35"><name pos:start="8:10" pos:end="8:23">bdrv_lookup_bs</name><argument_list pos:start="8:24" pos:end="10:35">(<argument pos:start="8:25" pos:end="8:50"><expr pos:start="8:25" pos:end="8:50"><ternary pos:start="8:25" pos:end="8:50"><condition pos:start="8:25" pos:end="8:36"><expr pos:start="8:25" pos:end="8:34"><name pos:start="8:25" pos:end="8:34">has_device</name></expr> ?</condition><then pos:start="8:38" pos:end="8:43"> <expr pos:start="8:38" pos:end="8:43"><name pos:start="8:38" pos:end="8:43">device</name></expr> </then><else pos:start="8:45" pos:end="8:50">: <expr pos:start="8:47" pos:end="8:50"><name pos:start="8:47" pos:end="8:50">NULL</name></expr></else></ternary></expr></argument>,
                        <argument pos:start="9:25" pos:end="9:56"><expr pos:start="9:25" pos:end="9:56"><ternary pos:start="9:25" pos:end="9:56"><condition pos:start="9:25" pos:end="9:39"><expr pos:start="9:25" pos:end="9:37"><name pos:start="9:25" pos:end="9:37">has_node_name</name></expr> ?</condition><then pos:start="9:41" pos:end="9:49"> <expr pos:start="9:41" pos:end="9:49"><name pos:start="9:41" pos:end="9:49">node_name</name></expr> </then><else pos:start="9:51" pos:end="9:56">: <expr pos:start="9:53" pos:end="9:56"><name pos:start="9:53" pos:end="9:56">NULL</name></expr></else></ternary></expr></argument>,
                        <argument pos:start="10:25" pos:end="10:34"><expr pos:start="10:25" pos:end="10:34"><operator pos:start="10:25" pos:end="10:25">&amp;</operator><name pos:start="10:26" pos:end="10:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="36:14"><if pos:start="11:5" pos:end="36:14">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17">local_err</name></expr>)</condition> <block pos:start="11:20" pos:end="36:14">{<block_content pos:start="12:9" pos:end="36:14">
        <expr_stmt pos:start="12:9" pos:end="12:41"><expr pos:start="12:9" pos:end="12:40"><call pos:start="12:9" pos:end="12:40"><name pos:start="12:9" pos:end="12:23">error_propagate</name><argument_list pos:start="12:24" pos:end="12:40">(<argument pos:start="12:25" pos:end="12:28"><expr pos:start="12:25" pos:end="12:28"><name pos:start="12:25" pos:end="12:28">errp</name></expr></argument>, <argument pos:start="12:31" pos:end="12:39"><expr pos:start="12:31" pos:end="12:39"><name pos:start="12:31" pos:end="12:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="36:14"><if pos:start="13:5" pos:end="36:14">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:37"><name pos:start="13:10" pos:end="13:33">bdrv_is_first_non_filter</name><argument_list pos:start="13:34" pos:end="13:37">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:40" pos:end="36:14">{<block_content pos:start="14:9" pos:end="36:14">
        <expr_stmt pos:start="14:9" pos:end="14:57"><expr pos:start="14:9" pos:end="14:56"><call pos:start="14:9" pos:end="14:56"><name pos:start="14:9" pos:end="14:17">error_set</name><argument_list pos:start="14:18" pos:end="14:56">(<argument pos:start="14:19" pos:end="14:22"><expr pos:start="14:19" pos:end="14:22"><name pos:start="14:19" pos:end="14:22">errp</name></expr></argument>, <argument pos:start="14:25" pos:end="14:45"><expr pos:start="14:25" pos:end="14:45"><name pos:start="14:25" pos:end="14:45">QERR_FEATURE_DISABLED</name></expr></argument>, <argument pos:start="14:48" pos:end="14:55"><expr pos:start="14:48" pos:end="14:55"><literal type="string" pos:start="14:48" pos:end="14:55">"resize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="36:14"><if pos:start="15:5" pos:end="36:14">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:14">&lt;</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="36:14">{<block_content pos:start="16:9" pos:end="36:14">
        <expr_stmt pos:start="16:9" pos:end="16:75"><expr pos:start="16:9" pos:end="16:74"><call pos:start="16:9" pos:end="16:74"><name pos:start="16:9" pos:end="16:17">error_set</name><argument_list pos:start="16:18" pos:end="16:74">(<argument pos:start="16:19" pos:end="16:22"><expr pos:start="16:19" pos:end="16:22"><name pos:start="16:19" pos:end="16:22">errp</name></expr></argument>, <argument pos:start="16:25" pos:end="16:52"><expr pos:start="16:25" pos:end="16:52"><name pos:start="16:25" pos:end="16:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="16:55" pos:end="16:60"><expr pos:start="16:55" pos:end="16:60"><literal type="string" pos:start="16:55" pos:end="16:60">"size"</literal></expr></argument>, <argument pos:start="16:63" pos:end="16:73"><expr pos:start="16:63" pos:end="16:73"><literal type="string" pos:start="16:63" pos:end="16:73">"a &gt;0 size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="17:5" pos:end="17:70">/* complete all in-flight operations before resizing the device */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:21"><expr pos:start="18:5" pos:end="18:20"><call pos:start="18:5" pos:end="18:20"><name pos:start="18:5" pos:end="18:18">bdrv_drain_all</name><argument_list pos:start="18:19" pos:end="18:20">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:33"><name pos:start="19:11" pos:end="19:23">bdrv_truncate</name><argument_list pos:start="19:24" pos:end="19:33">(<argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><name pos:start="19:25" pos:end="19:26">bs</name></expr></argument>, <argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <switch pos:start="20:5" pos:end="36:14">switch <condition pos:start="20:12" pos:end="20:16">(<expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">ret</name></expr>)</condition> <block pos:start="20:18" pos:end="36:14">{<block_content pos:start="21:5" pos:end="36:14">
    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case>
        <break pos:start="22:9" pos:end="22:14">break;</break>
    <case pos:start="23:5" pos:end="23:20">case <expr pos:start="23:10" pos:end="23:19"><operator pos:start="23:10" pos:end="23:10">-</operator><name pos:start="23:11" pos:end="23:19">ENOMEDIUM</name></expr>:</case>
        <expr_stmt pos:start="24:9" pos:end="24:59"><expr pos:start="24:9" pos:end="24:58"><call pos:start="24:9" pos:end="24:58"><name pos:start="24:9" pos:end="24:17">error_set</name><argument_list pos:start="24:18" pos:end="24:58">(<argument pos:start="24:19" pos:end="24:22"><expr pos:start="24:19" pos:end="24:22"><name pos:start="24:19" pos:end="24:22">errp</name></expr></argument>, <argument pos:start="24:25" pos:end="24:49"><expr pos:start="24:25" pos:end="24:49"><name pos:start="24:25" pos:end="24:49">QERR_DEVICE_HAS_NO_MEDIUM</name></expr></argument>, <argument pos:start="24:52" pos:end="24:57"><expr pos:start="24:52" pos:end="24:57"><name pos:start="24:52" pos:end="24:57">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="25:9" pos:end="25:14">break;</break>
    <case pos:start="26:5" pos:end="26:18">case <expr pos:start="26:10" pos:end="26:17"><operator pos:start="26:10" pos:end="26:10">-</operator><name pos:start="26:11" pos:end="26:17">ENOTSUP</name></expr>:</case>
        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><call pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:17">error_set</name><argument_list pos:start="27:18" pos:end="27:41">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">errp</name></expr></argument>, <argument pos:start="27:25" pos:end="27:40"><expr pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:40">QERR_UNSUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="28:9" pos:end="28:14">break;</break>
    <case pos:start="29:5" pos:end="29:17">case <expr pos:start="29:10" pos:end="29:16"><operator pos:start="29:10" pos:end="29:10">-</operator><name pos:start="29:11" pos:end="29:16">EACCES</name></expr>:</case>
        <expr_stmt pos:start="30:9" pos:end="30:58"><expr pos:start="30:9" pos:end="30:57"><call pos:start="30:9" pos:end="30:57"><name pos:start="30:9" pos:end="30:17">error_set</name><argument_list pos:start="30:18" pos:end="30:57">(<argument pos:start="30:19" pos:end="30:22"><expr pos:start="30:19" pos:end="30:22"><name pos:start="30:19" pos:end="30:22">errp</name></expr></argument>, <argument pos:start="30:25" pos:end="30:48"><expr pos:start="30:25" pos:end="30:48"><name pos:start="30:25" pos:end="30:48">QERR_DEVICE_IS_READ_ONLY</name></expr></argument>, <argument pos:start="30:51" pos:end="30:56"><expr pos:start="30:51" pos:end="30:56"><name pos:start="30:51" pos:end="30:56">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="31:9" pos:end="31:14">break;</break>
    <case pos:start="32:5" pos:end="32:16">case <expr pos:start="32:10" pos:end="32:15"><operator pos:start="32:10" pos:end="32:10">-</operator><name pos:start="32:11" pos:end="32:15">EBUSY</name></expr>:</case>
        <break pos:start="33:9" pos:end="33:14">break;</break>
    <default pos:start="34:5" pos:end="34:12">default:</default>
        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><call pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:24">error_setg_errno</name><argument_list pos:start="35:25" pos:end="35:56">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">errp</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><operator pos:start="35:32" pos:end="35:32">-</operator><name pos:start="35:33" pos:end="35:35">ret</name></expr></argument>, <argument pos:start="35:38" pos:end="35:55"><expr pos:start="35:38" pos:end="35:55"><literal type="string" pos:start="35:38" pos:end="35:55">"Could not resize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="36:9" pos:end="36:14">break;</break></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
