<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23904.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">gen_mtmsrd</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:35">DisasContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="56:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:16">unlikely</name><argument_list pos:start="11:17" pos:end="11:25">(<argument pos:start="11:18" pos:end="11:24"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:20">ctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:28" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:27">gen_inval_exception</name><argument_list pos:start="13:28" pos:end="13:55">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">ctx</name></expr></argument>, <argument pos:start="13:34" pos:end="13:54"><expr pos:start="13:34" pos:end="13:54"><name pos:start="13:34" pos:end="13:54">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="56:0"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">opcode</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:32">0x00010000</literal></expr>)</condition> <block pos:start="19:35" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:26">

        <comment type="block" pos:start="21:9" pos:end="21:65">/* Special form that does not need any synchronisation */</comment>

        <decl_stmt pos:start="23:9" pos:end="23:33"><decl pos:start="23:9" pos:end="23:32"><type pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">TCGv</name></type> <name pos:start="23:14" pos:end="23:15">t0</name> <init pos:start="23:17" pos:end="23:32">= <expr pos:start="23:19" pos:end="23:32"><call pos:start="23:19" pos:end="23:32"><name pos:start="23:19" pos:end="23:30">tcg_temp_new</name><argument_list pos:start="23:31" pos:end="23:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:85"><expr pos:start="25:9" pos:end="25:84"><call pos:start="25:9" pos:end="25:84"><name pos:start="25:9" pos:end="25:23">tcg_gen_andi_tl</name><argument_list pos:start="25:24" pos:end="25:84">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">t0</name></expr></argument>, <argument pos:start="25:29" pos:end="25:52"><expr pos:start="25:29" pos:end="25:52"><name pos:start="25:29" pos:end="25:52"><name pos:start="25:29" pos:end="25:35">cpu_gpr</name><index pos:start="25:36" pos:end="25:52">[<expr pos:start="25:37" pos:end="25:51"><call pos:start="25:37" pos:end="25:51"><name pos:start="25:37" pos:end="25:38">rS</name><argument_list pos:start="25:39" pos:end="25:51">(<argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:42">ctx</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="25:55" pos:end="25:83"><expr pos:start="25:55" pos:end="25:83"><operator pos:start="25:55" pos:end="25:55">(</operator><literal type="number" pos:start="25:56" pos:end="25:56">1</literal> <operator pos:start="25:58" pos:end="25:59">&lt;&lt;</operator> <name pos:start="25:61" pos:end="25:66">MSR_RI</name><operator pos:start="25:67" pos:end="25:67">)</operator> <operator pos:start="25:69" pos:end="25:69">|</operator> <operator pos:start="25:71" pos:end="25:71">(</operator><literal type="number" pos:start="25:72" pos:end="25:72">1</literal> <operator pos:start="25:74" pos:end="25:75">&lt;&lt;</operator> <name pos:start="25:77" pos:end="25:82">MSR_EE</name><operator pos:start="25:83" pos:end="25:83">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:90"><expr pos:start="27:9" pos:end="27:89"><call pos:start="27:9" pos:end="27:89"><name pos:start="27:9" pos:end="27:23">tcg_gen_andi_tl</name><argument_list pos:start="27:24" pos:end="27:89">(<argument pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:31">cpu_msr</name></expr></argument>, <argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">cpu_msr</name></expr></argument>, <argument pos:start="27:43" pos:end="27:88"><expr pos:start="27:43" pos:end="27:88"><operator pos:start="27:43" pos:end="27:43">~</operator><operator pos:start="27:44" pos:end="27:44">(</operator><name pos:start="27:45" pos:end="27:56">target_ulong</name><operator pos:start="27:57" pos:end="27:57">)</operator><operator pos:start="27:58" pos:end="27:58">(</operator><operator pos:start="27:59" pos:end="27:59">(</operator><literal type="number" pos:start="27:60" pos:end="27:60">1</literal> <operator pos:start="27:62" pos:end="27:63">&lt;&lt;</operator> <name pos:start="27:65" pos:end="27:70">MSR_RI</name><operator pos:start="27:71" pos:end="27:71">)</operator> <operator pos:start="27:73" pos:end="27:73">|</operator> <operator pos:start="27:75" pos:end="27:75">(</operator><literal type="number" pos:start="27:76" pos:end="27:76">1</literal> <operator pos:start="27:78" pos:end="27:79">&lt;&lt;</operator> <name pos:start="27:81" pos:end="27:86">MSR_EE</name><operator pos:start="27:87" pos:end="27:87">)</operator><operator pos:start="27:88" pos:end="27:88">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:21">tcg_gen_or_tl</name><argument_list pos:start="29:22" pos:end="29:43">(<argument pos:start="29:23" pos:end="29:29"><expr pos:start="29:23" pos:end="29:29"><name pos:start="29:23" pos:end="29:29">cpu_msr</name></expr></argument>, <argument pos:start="29:32" pos:end="29:38"><expr pos:start="29:32" pos:end="29:38"><name pos:start="29:32" pos:end="29:38">cpu_msr</name></expr></argument>, <argument pos:start="29:41" pos:end="29:42"><expr pos:start="29:41" pos:end="29:42"><name pos:start="29:41" pos:end="29:42">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:21">tcg_temp_free</name><argument_list pos:start="31:22" pos:end="31:25">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="56:0">else <block pos:start="33:12" pos:end="56:0">{<block_content pos:start="43:9" pos:end="51:32">

        <comment type="block" pos:start="35:9" pos:end="41:11">/* XXX: we need to update nip before the store

         *      if we enter power saving mode, we will exit the loop

         *      directly from ppc_store_msr

         */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><call pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:22">gen_update_nip</name><argument_list pos:start="43:23" pos:end="43:37">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">ctx</name></expr></argument>, <argument pos:start="43:29" pos:end="43:36"><expr pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:31">ctx</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:36">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:64"><expr pos:start="45:9" pos:end="45:63"><call pos:start="45:9" pos:end="45:63"><name pos:start="45:9" pos:end="45:28">gen_helper_store_msr</name><argument_list pos:start="45:29" pos:end="45:63">(<argument pos:start="45:30" pos:end="45:36"><expr pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:36">cpu_env</name></expr></argument>, <argument pos:start="45:39" pos:end="45:62"><expr pos:start="45:39" pos:end="45:62"><name pos:start="45:39" pos:end="45:62"><name pos:start="45:39" pos:end="45:45">cpu_gpr</name><index pos:start="45:46" pos:end="45:62">[<expr pos:start="45:47" pos:end="45:61"><call pos:start="45:47" pos:end="45:61"><name pos:start="45:47" pos:end="45:48">rS</name><argument_list pos:start="45:49" pos:end="45:61">(<argument pos:start="45:50" pos:end="45:60"><expr pos:start="45:50" pos:end="45:60"><name pos:start="45:50" pos:end="45:60"><name pos:start="45:50" pos:end="45:52">ctx</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:60">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:75">/* Must stop the translation as machine state (may have) changed */</comment>

        <comment type="block" pos:start="49:9" pos:end="49:76">/* Note that mtmsr is not always defined as context-synchronizing */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><call pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:26">gen_stop_exception</name><argument_list pos:start="51:27" pos:end="51:31">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
