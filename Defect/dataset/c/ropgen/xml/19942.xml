<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19942.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_init</name><parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MJpegDecodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name></type> <name pos:start="7:20" pos:end="7:21">s2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:46">/* ugly way to get the idct &amp; scantable */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><call pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:42">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><name pos:start="17:13" pos:end="17:14">s2</name></expr></argument>, <argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></argument>, <argument pos:start="17:20" pos:end="17:41"><expr pos:start="17:20" pos:end="17:41"><sizeof pos:start="17:20" pos:end="17:41">sizeof<argument_list pos:start="17:26" pos:end="17:41">(<argument pos:start="17:27" pos:end="17:40"><expr pos:start="17:27" pos:end="17:40"><name pos:start="17:27" pos:end="17:40">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:6">s2</name><operator pos:start="19:7" pos:end="19:7">.</operator><name pos:start="19:8" pos:end="19:12">flags</name></name><operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:19">avctx</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:6">s2</name><operator pos:start="21:7" pos:end="21:7">.</operator><name pos:start="21:8" pos:end="21:12">avctx</name></name><operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:19">avctx</name></expr>;</expr_stmt>

<comment type="line" pos:start="23:1" pos:end="23:33">//    s2-&gt;out_format = FMT_MJPEG;</comment>

    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:6">s2</name><operator pos:start="25:7" pos:end="25:7">.</operator><name pos:start="25:8" pos:end="25:12">width</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:6">s2</name><operator pos:start="27:7" pos:end="27:7">.</operator><name pos:start="27:8" pos:end="27:13">height</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:33">(<expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:23">MPV_common_init</name><argument_list pos:start="29:24" pos:end="29:28">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:27">s2</name></expr></argument>)</argument_list></call> <operator pos:start="29:30" pos:end="29:30">&lt;</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>)</condition><block type="pseudo" pos:start="31:8" pos:end="31:17"><block_content pos:start="31:8" pos:end="31:17">

       <return pos:start="31:8" pos:end="31:17">return <expr pos:start="31:15" pos:end="31:16"><operator pos:start="31:15" pos:end="31:15">-</operator><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">scantable</name></name><operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:36"><name pos:start="33:19" pos:end="33:20">s2</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:36">intra_scantable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">idct_put</name></name><operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:19">s2</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:28">idct_put</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:18">MPV_common_end</name><argument_list pos:start="37:19" pos:end="37:23">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:22">s2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:29">mpeg_enc_ctx_allocated</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:18">buffer_size</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:27">102400</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:30" pos:end="45:78">/* smaller buffer should be enough,

				but photojpg files could ahive bigger sizes */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:13">buffer</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:25">av_malloc</name><argument_list pos:start="47:26" pos:end="47:41">(<argument pos:start="47:27" pos:end="47:40"><expr pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:40">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:19">(<expr pos:start="49:9" pos:end="49:18"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:18"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:18">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

	<return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">start_code</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">-</operator><literal type="number" pos:start="53:22" pos:end="53:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:20">first_picture</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">org_width</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:24">avctx</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:31">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">org_height</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:25">avctx</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:33">height</name></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="63:5" pos:end="63:71"><expr pos:start="63:5" pos:end="63:70"><call pos:start="63:5" pos:end="63:70"><name pos:start="63:5" pos:end="63:13">build_vlc</name><argument_list pos:start="63:14" pos:end="63:70">(<argument pos:start="63:15" pos:end="63:28"><expr pos:start="63:15" pos:end="63:28"><operator pos:start="63:15" pos:end="63:15">&amp;</operator><name pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">vlcs</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>]</index><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:31" pos:end="63:47"><expr pos:start="63:31" pos:end="63:47"><name pos:start="63:31" pos:end="63:47">bits_dc_luminance</name></expr></argument>, <argument pos:start="63:50" pos:end="63:65"><expr pos:start="63:50" pos:end="63:65"><name pos:start="63:50" pos:end="63:65">val_dc_luminance</name></expr></argument>, <argument pos:start="63:68" pos:end="63:69"><expr pos:start="63:68" pos:end="63:69"><literal type="number" pos:start="63:68" pos:end="63:69">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:75"><expr pos:start="65:5" pos:end="65:74"><call pos:start="65:5" pos:end="65:74"><name pos:start="65:5" pos:end="65:13">build_vlc</name><argument_list pos:start="65:14" pos:end="65:74">(<argument pos:start="65:15" pos:end="65:28"><expr pos:start="65:15" pos:end="65:28"><operator pos:start="65:15" pos:end="65:15">&amp;</operator><name pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:22">vlcs</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>]</index><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:31" pos:end="65:49"><expr pos:start="65:31" pos:end="65:49"><name pos:start="65:31" pos:end="65:49">bits_dc_chrominance</name></expr></argument>, <argument pos:start="65:52" pos:end="65:69"><expr pos:start="65:52" pos:end="65:69"><name pos:start="65:52" pos:end="65:69">val_dc_chrominance</name></expr></argument>, <argument pos:start="65:72" pos:end="65:73"><expr pos:start="65:72" pos:end="65:73"><literal type="number" pos:start="65:72" pos:end="65:73">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:72"><expr pos:start="67:5" pos:end="67:71"><call pos:start="67:5" pos:end="67:71"><name pos:start="67:5" pos:end="67:13">build_vlc</name><argument_list pos:start="67:14" pos:end="67:71">(<argument pos:start="67:15" pos:end="67:28"><expr pos:start="67:15" pos:end="67:28"><operator pos:start="67:15" pos:end="67:15">&amp;</operator><name pos:start="67:16" pos:end="67:28"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">vlcs</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr>]</index><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:31" pos:end="67:47"><expr pos:start="67:31" pos:end="67:47"><name pos:start="67:31" pos:end="67:47">bits_ac_luminance</name></expr></argument>, <argument pos:start="67:50" pos:end="67:65"><expr pos:start="67:50" pos:end="67:65"><name pos:start="67:50" pos:end="67:65">val_ac_luminance</name></expr></argument>, <argument pos:start="67:68" pos:end="67:70"><expr pos:start="67:68" pos:end="67:70"><literal type="number" pos:start="67:68" pos:end="67:70">251</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:76"><expr pos:start="69:5" pos:end="69:75"><call pos:start="69:5" pos:end="69:75"><name pos:start="69:5" pos:end="69:13">build_vlc</name><argument_list pos:start="69:14" pos:end="69:75">(<argument pos:start="69:15" pos:end="69:28"><expr pos:start="69:15" pos:end="69:28"><operator pos:start="69:15" pos:end="69:15">&amp;</operator><name pos:start="69:16" pos:end="69:28"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">vlcs</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">1</literal></expr>]</index><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:31" pos:end="69:49"><expr pos:start="69:31" pos:end="69:49"><name pos:start="69:31" pos:end="69:49">bits_ac_chrominance</name></expr></argument>, <argument pos:start="69:52" pos:end="69:69"><expr pos:start="69:52" pos:end="69:69"><name pos:start="69:52" pos:end="69:69">val_ac_chrominance</name></expr></argument>, <argument pos:start="69:72" pos:end="69:74"><expr pos:start="69:72" pos:end="69:74"><literal type="number" pos:start="69:72" pos:end="69:74">251</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:46">(<expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:13">avctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:20">flags</name></name> <operator pos:start="73:22" pos:end="73:22">&amp;</operator> <name pos:start="73:24" pos:end="73:45">CODEC_FLAG_EXTERN_HUFF</name></expr>)</condition>

    <block pos:start="75:5" pos:end="85:5">{<block_content pos:start="77:9" pos:end="81:28">

	<expr_stmt pos:start="77:9" pos:end="77:56"><expr pos:start="77:9" pos:end="77:55"><call pos:start="77:9" pos:end="77:55"><name pos:start="77:9" pos:end="77:14">printf</name><argument_list pos:start="77:15" pos:end="77:55">(<argument pos:start="77:16" pos:end="77:54"><expr pos:start="77:16" pos:end="77:54"><literal type="string" pos:start="77:16" pos:end="77:54">"mjpeg: using external huffman table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><call pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:21">init_get_bits</name><argument_list pos:start="79:22" pos:end="79:70">(<argument pos:start="79:23" pos:end="79:28"><expr pos:start="79:23" pos:end="79:28"><operator pos:start="79:23" pos:end="79:23">&amp;</operator><name pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:28">gb</name></name></expr></argument>, <argument pos:start="79:31" pos:end="79:46"><expr pos:start="79:31" pos:end="79:46"><name pos:start="79:31" pos:end="79:46"><name pos:start="79:31" pos:end="79:35">avctx</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:46">extradata</name></name></expr></argument>, <argument pos:start="79:49" pos:end="79:69"><expr pos:start="79:49" pos:end="79:69"><name pos:start="79:49" pos:end="79:69"><name pos:start="79:49" pos:end="79:53">avctx</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:69">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:24">mjpeg_decode_dht</name><argument_list pos:start="81:25" pos:end="81:27">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block" pos:start="83:9" pos:end="83:48">/* should check for error - but dunno */</comment>

    </block_content>}</block></if></if_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
