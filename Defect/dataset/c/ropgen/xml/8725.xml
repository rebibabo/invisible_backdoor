<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8725.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int32_t</name></type> <name pos:start="1:16" pos:end="1:35">ahci_dma_prepare_buf</name><parameter_list pos:start="1:36" pos:end="1:62">(<parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:42">IDEDMA</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dma</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:29">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AHCIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">ad</name> <init pos:start="5:20" pos:end="5:52">= <expr pos:start="5:22" pos:end="5:52"><call pos:start="5:22" pos:end="5:52"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:52">(<argument pos:start="5:32" pos:end="5:41"><expr pos:start="5:32" pos:end="5:41"><name pos:start="5:32" pos:end="5:41">AHCIDevice</name></expr></argument>, <argument pos:start="5:44" pos:end="5:46"><expr pos:start="5:44" pos:end="5:46"><name pos:start="5:44" pos:end="5:46">dma</name></expr></argument>, <argument pos:start="5:49" pos:end="5:51"><expr pos:start="5:49" pos:end="5:51"><name pos:start="5:49" pos:end="5:51">dma</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:34">= <expr pos:start="7:19" pos:end="7:34"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:34"><name pos:start="7:20" pos:end="7:21">ad</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:27">port</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:31">ifs</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:68">(<expr pos:start="11:9" pos:end="11:67"><call pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:28">ahci_populate_sglist</name><argument_list pos:start="11:29" pos:end="11:61">(<argument pos:start="11:30" pos:end="11:31"><expr pos:start="11:30" pos:end="11:31"><name pos:start="11:30" pos:end="11:31">ad</name></expr></argument>, <argument pos:start="11:34" pos:end="11:39"><expr pos:start="11:34" pos:end="11:39"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:39">sg</name></name></expr></argument>, <argument pos:start="11:42" pos:end="11:60"><expr pos:start="11:42" pos:end="11:60"><name pos:start="11:42" pos:end="11:60"><name pos:start="11:42" pos:end="11:42">s</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:60">io_buffer_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:63" pos:end="11:64">==</operator> <operator pos:start="11:66" pos:end="11:66">-</operator><literal type="number" pos:start="11:67" pos:end="11:67">1</literal></expr>)</condition> <block pos:start="11:70" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:63"><expr pos:start="13:9" pos:end="13:62"><call pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:15">DPRINTF</name><argument_list pos:start="13:16" pos:end="13:62">(<argument pos:start="13:17" pos:end="13:27"><expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:18">ad</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:27">port_no</name></name></expr></argument>, <argument pos:start="13:30" pos:end="13:61"><expr pos:start="13:30" pos:end="13:61"><literal type="string" pos:start="13:30" pos:end="13:61">"ahci_dma_prepare_buf failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:21">io_buffer_size</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">sg</name><operator pos:start="19:30" pos:end="19:30">.</operator><name pos:start="19:31" pos:end="19:34">size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:11">DPRINTF</name><argument_list pos:start="23:12" pos:end="23:56">(<argument pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:14">ad</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:23">port_no</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:36"><expr pos:start="23:26" pos:end="23:36"><literal type="string" pos:start="23:26" pos:end="23:36">"len=%#x\n"</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:55"><expr pos:start="23:39" pos:end="23:55"><name pos:start="23:39" pos:end="23:55"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:55">io_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:29">return <expr pos:start="25:12" pos:end="25:28"><name pos:start="25:12" pos:end="25:28"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:28">io_buffer_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
