<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10040.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ioinst_handle_rchp</name><parameter_list pos:start="1:24" pos:end="1:52">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">S390CPU</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">cpu</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint64_t</name></type> <name pos:start="1:48" pos:end="1:51">reg1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:19">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">cc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:17">cssid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:17">chpid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">CPUS390XState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">env</name> <init pos:start="13:24" pos:end="13:34">= <expr pos:start="13:26" pos:end="13:34"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:34"><name pos:start="13:27" pos:end="13:29">cpu</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">env</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:21">RCHP_REG1_RES</name><argument_list pos:start="17:22" pos:end="17:27">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">reg1</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:30" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:47"><expr pos:start="19:9" pos:end="19:46"><call pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:25">program_interrupt</name><argument_list pos:start="19:26" pos:end="19:46">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">env</name></expr></argument>, <argument pos:start="19:32" pos:end="19:42"><expr pos:start="19:32" pos:end="19:42"><name pos:start="19:32" pos:end="19:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="19:45" pos:end="19:45"><expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:9">cssid</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:27">RCHP_REG1_CSSID</name><argument_list pos:start="27:28" pos:end="27:33">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">reg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:9">chpid</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:27">RCHP_REG1_CHPID</name><argument_list pos:start="29:28" pos:end="29:33">(<argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">reg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:23">trace_ioinst_chp_id</name><argument_list pos:start="33:24" pos:end="33:45">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><literal type="string" pos:start="33:25" pos:end="33:30">"rchp"</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37">cssid</name></expr></argument>, <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">chpid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:35"><name pos:start="37:11" pos:end="37:21">css_do_rchp</name><argument_list pos:start="37:22" pos:end="37:35">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27">cssid</name></expr></argument>, <argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:34">chpid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="41:5" pos:end="69:5">switch <condition pos:start="41:12" pos:end="41:16">(<expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">ret</name></expr>)</condition> <block pos:start="41:18" pos:end="69:5">{<block_content pos:start="43:5" pos:end="67:15">

    <case pos:start="43:5" pos:end="43:17">case <expr pos:start="43:10" pos:end="43:16"><operator pos:start="43:10" pos:end="43:10">-</operator><name pos:start="43:11" pos:end="43:16">ENODEV</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:10">cc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">3</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:16">case <expr pos:start="49:10" pos:end="49:15"><operator pos:start="49:10" pos:end="49:10">-</operator><name pos:start="49:11" pos:end="49:15">EBUSY</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:15"><expr pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:10">cc</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">2</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">0</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:15"><expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:10">cc</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <comment type="block" pos:start="63:9" pos:end="63:40">/* Invalid channel subsystem. */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:47"><expr pos:start="65:9" pos:end="65:46"><call pos:start="65:9" pos:end="65:46"><name pos:start="65:9" pos:end="65:25">program_interrupt</name><argument_list pos:start="65:26" pos:end="65:46">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">env</name></expr></argument>, <argument pos:start="65:32" pos:end="65:42"><expr pos:start="65:32" pos:end="65:42"><name pos:start="65:32" pos:end="65:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><literal type="number" pos:start="65:45" pos:end="65:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><call pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:9">setcc</name><argument_list pos:start="71:10" pos:end="71:18">(<argument pos:start="71:11" pos:end="71:13"><expr pos:start="71:11" pos:end="71:13"><name pos:start="71:11" pos:end="71:13">cpu</name></expr></argument>, <argument pos:start="71:16" pos:end="71:17"><expr pos:start="71:16" pos:end="71:17"><name pos:start="71:16" pos:end="71:17">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
