<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14179.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:45">qmp_chardev_open_file</name><parameter_list pos:start="1:46" pos:end="1:78">(<parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:57">ChardevFile</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">file</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:37">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>, <decl pos:start="5:16" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">in</name> <init pos:start="5:19" pos:end="5:22">= <expr pos:start="5:21" pos:end="5:22"><operator pos:start="5:21" pos:end="5:21">-</operator><literal type="number" pos:start="5:22" pos:end="5:22">1</literal></expr></init></decl>, <decl pos:start="5:25" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:27">out</name> <init pos:start="5:29" pos:end="5:32">= <expr pos:start="5:31" pos:end="5:32"><operator pos:start="5:31" pos:end="5:31">-</operator><literal type="number" pos:start="5:32" pos:end="5:32">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:52"><expr pos:start="9:5" pos:end="9:51"><name pos:start="9:5" pos:end="9:9">flags</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <name pos:start="9:13" pos:end="9:20">O_WRONLY</name> <operator pos:start="9:22" pos:end="9:22">|</operator> <name pos:start="9:24" pos:end="9:30">O_TRUNC</name> <operator pos:start="9:32" pos:end="9:32">|</operator> <name pos:start="9:34" pos:end="9:40">O_CREAT</name> <operator pos:start="9:42" pos:end="9:42">|</operator> <name pos:start="9:44" pos:end="9:51">O_BINARY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:63"><expr pos:start="11:5" pos:end="11:62"><name pos:start="11:5" pos:end="11:7">out</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:62"><name pos:start="11:11" pos:end="11:38">qmp_chardev_open_file_source</name><argument_list pos:start="11:39" pos:end="11:62">(<argument pos:start="11:40" pos:end="11:48"><expr pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:43">file</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:48">out</name></name></expr></argument>, <argument pos:start="11:51" pos:end="11:55"><expr pos:start="11:51" pos:end="11:55"><name pos:start="11:51" pos:end="11:55">flags</name></expr></argument>, <argument pos:start="11:58" pos:end="11:61"><expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:20">error_is_set</name><argument_list pos:start="13:21" pos:end="13:26">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:12">file</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:20">has_in</name></name></expr>)</condition> <block pos:start="21:23" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:24">O_RDONLY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:10">in</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:64"><name pos:start="25:14" pos:end="25:41">qmp_chardev_open_file_source</name><argument_list pos:start="25:42" pos:end="25:64">(<argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:46">file</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:50">in</name></name></expr></argument>, <argument pos:start="25:53" pos:end="25:57"><expr pos:start="25:53" pos:end="25:57"><name pos:start="25:53" pos:end="25:57">flags</name></expr></argument>, <argument pos:start="25:60" pos:end="25:63"><expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:63">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:31">(<expr pos:start="27:13" pos:end="27:30"><call pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:24">error_is_set</name><argument_list pos:start="27:25" pos:end="27:30">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:33" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:24">

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><call pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:22">qemu_close</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:24">return <expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:37">return <expr pos:start="39:12" pos:end="39:36"><call pos:start="39:12" pos:end="39:36"><name pos:start="39:12" pos:end="39:27">qemu_chr_open_fd</name><argument_list pos:start="39:28" pos:end="39:36">(<argument pos:start="39:29" pos:end="39:30"><expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">in</name></expr></argument>, <argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">out</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
