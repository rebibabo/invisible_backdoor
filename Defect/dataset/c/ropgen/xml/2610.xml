<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2610.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">avpriv_ac3_parse_header</name><parameter_list pos:start="1:28" pos:end="1:67">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:41">GetBitContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">gbc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:61">AC3HeaderInfo</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">hdr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:23">frame_size_code</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:32">(<argument pos:start="9:12" pos:end="9:14"><expr pos:start="9:12" pos:end="9:14"><name pos:start="9:12" pos:end="9:14">hdr</name></expr></argument>, <argument pos:start="9:17" pos:end="9:17"><expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></argument>, <argument pos:start="9:20" pos:end="9:31"><expr pos:start="9:20" pos:end="9:31"><sizeof pos:start="9:20" pos:end="9:31">sizeof<argument_list pos:start="9:26" pos:end="9:31">(<argument pos:start="9:27" pos:end="9:30"><expr pos:start="9:27" pos:end="9:30"><operator pos:start="9:27" pos:end="9:27">*</operator><name pos:start="9:28" pos:end="9:30">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">hdr</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:18">sync_word</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:38"><name pos:start="13:22" pos:end="13:29">get_bits</name><argument_list pos:start="13:30" pos:end="13:38">(<argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><name pos:start="13:31" pos:end="13:33">gbc</name></expr></argument>, <argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><literal type="number" pos:start="13:36" pos:end="13:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:40"><if pos:start="15:5" pos:end="17:40">if<condition pos:start="15:7" pos:end="15:32">(<expr pos:start="15:8" pos:end="15:31"><name pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:10">hdr</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">sync_word</name></name> <operator pos:start="15:23" pos:end="15:24">!=</operator> <literal type="number" pos:start="15:26" pos:end="15:31">0x0B77</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:40"><block_content pos:start="17:9" pos:end="17:40">

        <return pos:start="17:9" pos:end="17:40">return <expr pos:start="17:16" pos:end="17:39"><name pos:start="17:16" pos:end="17:39">AAC_AC3_PARSE_ERROR_SYNC</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:67">/* read ahead to bsid to distinguish between AC-3 and E-AC-3 */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:7">hdr</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:21">bitstream_id</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:47"><name pos:start="23:25" pos:end="23:38">show_bits_long</name><argument_list pos:start="23:39" pos:end="23:47">(<argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">gbc</name></expr></argument>, <argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><literal type="number" pos:start="23:45" pos:end="23:46">29</literal></expr></argument>)</argument_list></call> <operator pos:start="23:49" pos:end="23:49">&amp;</operator> <literal type="number" pos:start="23:51" pos:end="23:54">0x1F</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:40"><if pos:start="25:5" pos:end="27:40">if<condition pos:start="25:7" pos:end="25:30">(<expr pos:start="25:8" pos:end="25:29"><name pos:start="25:8" pos:end="25:24"><name pos:start="25:8" pos:end="25:10">hdr</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:24">bitstream_id</name></name> <operator pos:start="25:26" pos:end="25:26">&gt;</operator> <literal type="number" pos:start="25:28" pos:end="25:29">16</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:40"><block_content pos:start="27:9" pos:end="27:40">

        <return pos:start="27:9" pos:end="27:40">return <expr pos:start="27:16" pos:end="27:39"><name pos:start="27:16" pos:end="27:39">AAC_AC3_PARSE_ERROR_BSID</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:7">hdr</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:19">num_blocks</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <literal type="number" pos:start="31:23" pos:end="31:23">6</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:32">/* set default mix levels */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">hdr</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:25">center_mix_level</name></name>   <operator pos:start="37:29" pos:end="37:29">=</operator> <literal type="number" pos:start="37:31" pos:end="37:31">1</literal></expr>;</expr_stmt>  <comment type="line" pos:start="37:35" pos:end="37:43">// -4.5dB</comment>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:7">hdr</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:27">surround_mix_level</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <literal type="number" pos:start="39:31" pos:end="39:31">1</literal></expr>;</expr_stmt>  <comment type="line" pos:start="39:35" pos:end="39:43">// -6.0dB</comment>



    <if_stmt pos:start="43:5" pos:end="173:5"><if pos:start="43:5" pos:end="109:5">if<condition pos:start="43:7" pos:end="43:31">(<expr pos:start="43:8" pos:end="43:30"><name pos:start="43:8" pos:end="43:24"><name pos:start="43:8" pos:end="43:10">hdr</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:24">bitstream_id</name></name> <operator pos:start="43:26" pos:end="43:27">&lt;=</operator> <literal type="number" pos:start="43:29" pos:end="43:30">10</literal></expr>)</condition> <block pos:start="43:33" pos:end="109:5">{<block_content pos:start="47:9" pos:end="107:29">

        <comment type="block" pos:start="45:9" pos:end="45:25">/* Normal AC-3 */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:11">hdr</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:17">crc1</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:37"><name pos:start="47:21" pos:end="47:28">get_bits</name><argument_list pos:start="47:29" pos:end="47:37">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">gbc</name></expr></argument>, <argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><literal type="number" pos:start="47:35" pos:end="47:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:11">hdr</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:20">sr_code</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <call pos:start="49:24" pos:end="49:39"><name pos:start="49:24" pos:end="49:31">get_bits</name><argument_list pos:start="49:32" pos:end="49:39">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">gbc</name></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:51"><if pos:start="51:9" pos:end="53:51">if<condition pos:start="51:11" pos:end="51:29">(<expr pos:start="51:12" pos:end="51:28"><name pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:14">hdr</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">sr_code</name></name> <operator pos:start="51:25" pos:end="51:26">==</operator> <literal type="number" pos:start="51:28" pos:end="51:28">3</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:51"><block_content pos:start="53:13" pos:end="53:51">

            <return pos:start="53:13" pos:end="53:51">return <expr pos:start="53:20" pos:end="53:50"><name pos:start="53:20" pos:end="53:50">AAC_AC3_PARSE_ERROR_SAMPLE_RATE</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:23">frame_size_code</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:42"><name pos:start="57:27" pos:end="57:34">get_bits</name><argument_list pos:start="57:35" pos:end="57:42">(<argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">gbc</name></expr></argument>, <argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:50"><if pos:start="59:9" pos:end="61:50">if<condition pos:start="59:11" pos:end="59:32">(<expr pos:start="59:12" pos:end="59:31"><name pos:start="59:12" pos:end="59:26">frame_size_code</name> <operator pos:start="59:28" pos:end="59:28">&gt;</operator> <literal type="number" pos:start="59:30" pos:end="59:31">37</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:50"><block_content pos:start="61:13" pos:end="61:50">

            <return pos:start="61:13" pos:end="61:50">return <expr pos:start="61:20" pos:end="61:49"><name pos:start="61:20" pos:end="61:49">AAC_AC3_PARSE_ERROR_FRAME_SIZE</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><call pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:17">skip_bits</name><argument_list pos:start="65:18" pos:end="65:25">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:21">gbc</name></expr></argument>, <argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:28" pos:end="65:55">// skip bsid, already got it</comment>



        <expr_stmt pos:start="69:9" pos:end="69:47"><expr pos:start="69:9" pos:end="69:46"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:11">hdr</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:27">bitstream_mode</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:46"><name pos:start="69:31" pos:end="69:38">get_bits</name><argument_list pos:start="69:39" pos:end="69:46">(<argument pos:start="69:40" pos:end="69:42"><expr pos:start="69:40" pos:end="69:42"><name pos:start="69:40" pos:end="69:42">gbc</name></expr></argument>, <argument pos:start="69:45" pos:end="69:45"><expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:11">hdr</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:25">channel_mode</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:44"><name pos:start="71:29" pos:end="71:36">get_bits</name><argument_list pos:start="71:37" pos:end="71:44">(<argument pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:40">gbc</name></expr></argument>, <argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><literal type="number" pos:start="71:43" pos:end="71:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="89:9"><if pos:start="75:9" pos:end="79:9">if<condition pos:start="75:11" pos:end="75:50">(<expr pos:start="75:12" pos:end="75:49"><name pos:start="75:12" pos:end="75:28"><name pos:start="75:12" pos:end="75:14">hdr</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:28">channel_mode</name></name> <operator pos:start="75:30" pos:end="75:31">==</operator> <name pos:start="75:33" pos:end="75:49">AC3_CHMODE_STEREO</name></expr>)</condition> <block pos:start="75:52" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:30">

            <expr_stmt pos:start="77:13" pos:end="77:30"><expr pos:start="77:13" pos:end="77:29"><call pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:21">skip_bits</name><argument_list pos:start="77:22" pos:end="77:29">(<argument pos:start="77:23" pos:end="77:25"><expr pos:start="77:23" pos:end="77:25"><name pos:start="77:23" pos:end="77:25">gbc</name></expr></argument>, <argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="77:32" pos:end="77:46">// skip dsurmod</comment>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="89:9">else <block pos:start="79:16" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:59">

            <if_stmt pos:start="81:13" pos:end="83:57"><if pos:start="81:13" pos:end="83:57">if<condition pos:start="81:15" pos:end="81:79">(<expr pos:start="81:16" pos:end="81:78"><operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:19">hdr</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:33">channel_mode</name></name> <operator pos:start="81:35" pos:end="81:35">&amp;</operator> <literal type="number" pos:start="81:37" pos:end="81:37">1</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:41">&amp;&amp;</operator> <name pos:start="81:43" pos:end="81:59"><name pos:start="81:43" pos:end="81:45">hdr</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:59">channel_mode</name></name> <operator pos:start="81:61" pos:end="81:62">!=</operator> <name pos:start="81:64" pos:end="81:78">AC3_CHMODE_MONO</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:57"><block_content pos:start="83:17" pos:end="83:57">

                <expr_stmt pos:start="83:17" pos:end="83:57"><expr pos:start="83:17" pos:end="83:56"><name pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:19">hdr</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:37">center_mix_level</name></name> <operator pos:start="83:39" pos:end="83:39">=</operator> <call pos:start="83:41" pos:end="83:56"><name pos:start="83:41" pos:end="83:48">get_bits</name><argument_list pos:start="83:49" pos:end="83:56">(<argument pos:start="83:50" pos:end="83:52"><expr pos:start="83:50" pos:end="83:52"><name pos:start="83:50" pos:end="83:52">gbc</name></expr></argument>, <argument pos:start="83:55" pos:end="83:55"><expr pos:start="83:55" pos:end="83:55"><literal type="number" pos:start="83:55" pos:end="83:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:59"><if pos:start="85:13" pos:end="87:59">if<condition pos:start="85:15" pos:end="85:37">(<expr pos:start="85:16" pos:end="85:36"><name pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:18">hdr</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:32">channel_mode</name></name> <operator pos:start="85:34" pos:end="85:34">&amp;</operator> <literal type="number" pos:start="85:36" pos:end="85:36">4</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:59"><block_content pos:start="87:17" pos:end="87:59">

                <expr_stmt pos:start="87:17" pos:end="87:59"><expr pos:start="87:17" pos:end="87:58"><name pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:19">hdr</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:39">surround_mix_level</name></name> <operator pos:start="87:41" pos:end="87:41">=</operator> <call pos:start="87:43" pos:end="87:58"><name pos:start="87:43" pos:end="87:50">get_bits</name><argument_list pos:start="87:51" pos:end="87:58">(<argument pos:start="87:52" pos:end="87:54"><expr pos:start="87:52" pos:end="87:54"><name pos:start="87:52" pos:end="87:54">gbc</name></expr></argument>, <argument pos:start="87:57" pos:end="87:57"><expr pos:start="87:57" pos:end="87:57"><literal type="number" pos:start="87:57" pos:end="87:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:11">hdr</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:19">lfe_on</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <call pos:start="91:23" pos:end="91:36"><name pos:start="91:23" pos:end="91:31">get_bits1</name><argument_list pos:start="91:32" pos:end="91:36">(<argument pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:35">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:56"><expr pos:start="95:9" pos:end="95:55"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:11">hdr</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:21">sr_shift</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:51"><name pos:start="95:25" pos:end="95:29">FFMAX</name><argument_list pos:start="95:30" pos:end="95:51">(<argument pos:start="95:31" pos:end="95:47"><expr pos:start="95:31" pos:end="95:47"><name pos:start="95:31" pos:end="95:47"><name pos:start="95:31" pos:end="95:33">hdr</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:47">bitstream_id</name></name></expr></argument>, <argument pos:start="95:50" pos:end="95:50"><expr pos:start="95:50" pos:end="95:50"><literal type="number" pos:start="95:50" pos:end="95:50">8</literal></expr></argument>)</argument_list></call> <operator pos:start="95:53" pos:end="95:53">-</operator> <literal type="number" pos:start="95:55" pos:end="95:55">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:81"><expr pos:start="97:9" pos:end="97:80"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:11">hdr</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:24">sample_rate</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:63"><name pos:start="97:28" pos:end="97:49">ff_ac3_sample_rate_tab</name><index pos:start="97:50" pos:end="97:63">[<expr pos:start="97:51" pos:end="97:62"><name pos:start="97:51" pos:end="97:62"><name pos:start="97:51" pos:end="97:53">hdr</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:62">sr_code</name></name></expr>]</index></name> <operator pos:start="97:65" pos:end="97:66">&gt;&gt;</operator> <name pos:start="97:68" pos:end="97:80"><name pos:start="97:68" pos:end="97:70">hdr</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:80">sr_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:89"><expr pos:start="99:9" pos:end="99:88"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">hdr</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">bit_rate</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <operator pos:start="99:25" pos:end="99:25">(</operator><name pos:start="99:26" pos:end="99:63"><name pos:start="99:26" pos:end="99:43">ff_ac3_bitrate_tab</name><index pos:start="99:44" pos:end="99:63">[<expr pos:start="99:45" pos:end="99:62"><name pos:start="99:45" pos:end="99:59">frame_size_code</name><operator pos:start="99:60" pos:end="99:61">&gt;&gt;</operator><literal type="number" pos:start="99:62" pos:end="99:62">1</literal></expr>]</index></name> <operator pos:start="99:65" pos:end="99:65">*</operator> <literal type="number" pos:start="99:67" pos:end="99:70">1000</literal><operator pos:start="99:71" pos:end="99:71">)</operator> <operator pos:start="99:73" pos:end="99:74">&gt;&gt;</operator> <name pos:start="99:76" pos:end="99:88"><name pos:start="99:76" pos:end="99:78">hdr</name><operator pos:start="99:79" pos:end="99:80">-&gt;</operator><name pos:start="99:81" pos:end="99:88">sr_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:77"><expr pos:start="101:9" pos:end="101:76"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:11">hdr</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:21">channels</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:62"><name pos:start="101:25" pos:end="101:43">ff_ac3_channels_tab</name><index pos:start="101:44" pos:end="101:62">[<expr pos:start="101:45" pos:end="101:61"><name pos:start="101:45" pos:end="101:61"><name pos:start="101:45" pos:end="101:47">hdr</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:61">channel_mode</name></name></expr>]</index></name> <operator pos:start="101:64" pos:end="101:64">+</operator> <name pos:start="101:66" pos:end="101:76"><name pos:start="101:66" pos:end="101:68">hdr</name><operator pos:start="101:69" pos:end="101:70">-&gt;</operator><name pos:start="101:71" pos:end="101:76">lfe_on</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:83"><expr pos:start="103:9" pos:end="103:82"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:11">hdr</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:23">frame_size</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:78"><name pos:start="103:27" pos:end="103:47">ff_ac3_frame_size_tab</name><index pos:start="103:48" pos:end="103:64">[<expr pos:start="103:49" pos:end="103:63"><name pos:start="103:49" pos:end="103:63">frame_size_code</name></expr>]</index><index pos:start="103:65" pos:end="103:78">[<expr pos:start="103:66" pos:end="103:77"><name pos:start="103:66" pos:end="103:77"><name pos:start="103:66" pos:end="103:68">hdr</name><operator pos:start="103:69" pos:end="103:70">-&gt;</operator><name pos:start="103:71" pos:end="103:77">sr_code</name></name></expr>]</index></name> <operator pos:start="103:80" pos:end="103:80">*</operator> <literal type="number" pos:start="103:82" pos:end="103:82">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:54"><expr pos:start="105:9" pos:end="105:53"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:11">hdr</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:23">frame_type</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:53">EAC3_FRAME_TYPE_AC3_CONVERT</name></expr>;</expr_stmt> <comment type="line" pos:start="105:56" pos:end="105:85">//EAC3_FRAME_TYPE_INDEPENDENT;</comment>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:11">hdr</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:24">substreamid</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <literal type="number" pos:start="107:28" pos:end="107:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="173:5">else <block pos:start="109:12" pos:end="173:5">{<block_content pos:start="113:9" pos:end="171:77">

        <comment type="block" pos:start="111:9" pos:end="111:27">/* Enhanced AC-3 */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:22"><expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:11">hdr</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:17">crc1</name></name> <operator pos:start="113:19" pos:end="113:19">=</operator> <literal type="number" pos:start="113:21" pos:end="113:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:43"><expr pos:start="115:9" pos:end="115:42"><name pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:11">hdr</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:23">frame_type</name></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <call pos:start="115:27" pos:end="115:42"><name pos:start="115:27" pos:end="115:34">get_bits</name><argument_list pos:start="115:35" pos:end="115:42">(<argument pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:38">gbc</name></expr></argument>, <argument pos:start="115:41" pos:end="115:41"><expr pos:start="115:41" pos:end="115:41"><literal type="number" pos:start="115:41" pos:end="115:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:50"><if pos:start="117:9" pos:end="119:50">if<condition pos:start="117:11" pos:end="117:55">(<expr pos:start="117:12" pos:end="117:54"><name pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:14">hdr</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:26">frame_type</name></name> <operator pos:start="117:28" pos:end="117:29">==</operator> <name pos:start="117:31" pos:end="117:54">EAC3_FRAME_TYPE_RESERVED</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:50"><block_content pos:start="119:13" pos:end="119:50">

            <return pos:start="119:13" pos:end="119:50">return <expr pos:start="119:20" pos:end="119:49"><name pos:start="119:20" pos:end="119:49">AAC_AC3_PARSE_ERROR_FRAME_TYPE</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:44"><expr pos:start="123:9" pos:end="123:43"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:11">hdr</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:24">substreamid</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:43"><name pos:start="123:28" pos:end="123:35">get_bits</name><argument_list pos:start="123:36" pos:end="123:43">(<argument pos:start="123:37" pos:end="123:39"><expr pos:start="123:37" pos:end="123:39"><name pos:start="123:37" pos:end="123:39">gbc</name></expr></argument>, <argument pos:start="123:42" pos:end="123:42"><expr pos:start="123:42" pos:end="123:42"><literal type="number" pos:start="123:42" pos:end="123:42">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:55"><expr pos:start="127:9" pos:end="127:54"><name pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:11">hdr</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:23">frame_size</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <operator pos:start="127:27" pos:end="127:27">(</operator><call pos:start="127:28" pos:end="127:44"><name pos:start="127:28" pos:end="127:35">get_bits</name><argument_list pos:start="127:36" pos:end="127:44">(<argument pos:start="127:37" pos:end="127:39"><expr pos:start="127:37" pos:end="127:39"><name pos:start="127:37" pos:end="127:39">gbc</name></expr></argument>, <argument pos:start="127:42" pos:end="127:43"><expr pos:start="127:42" pos:end="127:43"><literal type="number" pos:start="127:42" pos:end="127:43">11</literal></expr></argument>)</argument_list></call> <operator pos:start="127:46" pos:end="127:46">+</operator> <literal type="number" pos:start="127:48" pos:end="127:48">1</literal><operator pos:start="127:49" pos:end="127:49">)</operator> <operator pos:start="127:51" pos:end="127:52">&lt;&lt;</operator> <literal type="number" pos:start="127:54" pos:end="127:54">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:50"><if pos:start="129:9" pos:end="131:50">if<condition pos:start="129:11" pos:end="129:45">(<expr pos:start="129:12" pos:end="129:44"><name pos:start="129:12" pos:end="129:26"><name pos:start="129:12" pos:end="129:14">hdr</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:26">frame_size</name></name> <operator pos:start="129:28" pos:end="129:28">&lt;</operator> <name pos:start="129:30" pos:end="129:44">AC3_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:50"><block_content pos:start="131:13" pos:end="131:50">

            <return pos:start="131:13" pos:end="131:50">return <expr pos:start="131:20" pos:end="131:49"><name pos:start="131:20" pos:end="131:49">AAC_AC3_PARSE_ERROR_FRAME_SIZE</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:11">hdr</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:20">sr_code</name></name> <operator pos:start="135:22" pos:end="135:22">=</operator> <call pos:start="135:24" pos:end="135:39"><name pos:start="135:24" pos:end="135:31">get_bits</name><argument_list pos:start="135:32" pos:end="135:39">(<argument pos:start="135:33" pos:end="135:35"><expr pos:start="135:33" pos:end="135:35"><name pos:start="135:33" pos:end="135:35">gbc</name></expr></argument>, <argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><literal type="number" pos:start="135:38" pos:end="135:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="157:9"><if pos:start="137:9" pos:end="149:9">if <condition pos:start="137:12" pos:end="137:30">(<expr pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:15">hdr</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:24">sr_code</name></name> <operator pos:start="137:26" pos:end="137:27">==</operator> <literal type="number" pos:start="137:29" pos:end="137:29">3</literal></expr>)</condition> <block pos:start="137:32" pos:end="149:9">{<block_content pos:start="139:13" pos:end="147:30">

            <decl_stmt pos:start="139:13" pos:end="139:44"><decl pos:start="139:13" pos:end="139:43"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:24">sr_code2</name> <init pos:start="139:26" pos:end="139:43">= <expr pos:start="139:28" pos:end="139:43"><call pos:start="139:28" pos:end="139:43"><name pos:start="139:28" pos:end="139:35">get_bits</name><argument_list pos:start="139:36" pos:end="139:43">(<argument pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:39">gbc</name></expr></argument>, <argument pos:start="139:42" pos:end="139:42"><expr pos:start="139:42" pos:end="139:42"><literal type="number" pos:start="139:42" pos:end="139:42">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="141:13" pos:end="143:55"><if pos:start="141:13" pos:end="143:55">if<condition pos:start="141:15" pos:end="141:29">(<expr pos:start="141:16" pos:end="141:28"><name pos:start="141:16" pos:end="141:23">sr_code2</name> <operator pos:start="141:25" pos:end="141:26">==</operator> <literal type="number" pos:start="141:28" pos:end="141:28">3</literal></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:55"><block_content pos:start="143:17" pos:end="143:55">

                <return pos:start="143:17" pos:end="143:55">return <expr pos:start="143:24" pos:end="143:54"><name pos:start="143:24" pos:end="143:54">AAC_AC3_PARSE_ERROR_SAMPLE_RATE</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:15">hdr</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:28">sample_rate</name></name> <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:63"><name pos:start="145:32" pos:end="145:53">ff_ac3_sample_rate_tab</name><index pos:start="145:54" pos:end="145:63">[<expr pos:start="145:55" pos:end="145:62"><name pos:start="145:55" pos:end="145:62">sr_code2</name></expr>]</index></name> <operator pos:start="145:65" pos:end="145:65">/</operator> <literal type="number" pos:start="145:67" pos:end="145:67">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:15">hdr</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:25">sr_shift</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <literal type="number" pos:start="147:29" pos:end="147:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="149:11" pos:end="157:9">else <block pos:start="149:16" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:30">

            <expr_stmt pos:start="151:13" pos:end="151:60"><expr pos:start="151:13" pos:end="151:59"><name pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:15">hdr</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:27">num_blocks</name></name> <operator pos:start="151:29" pos:end="151:29">=</operator> <name pos:start="151:31" pos:end="151:59"><name pos:start="151:31" pos:end="151:41">eac3_blocks</name><index pos:start="151:42" pos:end="151:59">[<expr pos:start="151:43" pos:end="151:58"><call pos:start="151:43" pos:end="151:58"><name pos:start="151:43" pos:end="151:50">get_bits</name><argument_list pos:start="151:51" pos:end="151:58">(<argument pos:start="151:52" pos:end="151:54"><expr pos:start="151:52" pos:end="151:54"><name pos:start="151:52" pos:end="151:54">gbc</name></expr></argument>, <argument pos:start="151:57" pos:end="151:57"><expr pos:start="151:57" pos:end="151:57"><literal type="number" pos:start="151:57" pos:end="151:57">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:68"><expr pos:start="153:13" pos:end="153:67"><name pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:15">hdr</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:28">sample_rate</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:67"><name pos:start="153:32" pos:end="153:53">ff_ac3_sample_rate_tab</name><index pos:start="153:54" pos:end="153:67">[<expr pos:start="153:55" pos:end="153:66"><name pos:start="153:55" pos:end="153:66"><name pos:start="153:55" pos:end="153:57">hdr</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:66">sr_code</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:30"><expr pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:15">hdr</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:25">sr_shift</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:45"><expr pos:start="161:9" pos:end="161:44"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:11">hdr</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:25">channel_mode</name></name> <operator pos:start="161:27" pos:end="161:27">=</operator> <call pos:start="161:29" pos:end="161:44"><name pos:start="161:29" pos:end="161:36">get_bits</name><argument_list pos:start="161:37" pos:end="161:44">(<argument pos:start="161:38" pos:end="161:40"><expr pos:start="161:38" pos:end="161:40"><name pos:start="161:38" pos:end="161:40">gbc</name></expr></argument>, <argument pos:start="161:43" pos:end="161:43"><expr pos:start="161:43" pos:end="161:43"><literal type="number" pos:start="161:43" pos:end="161:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:37"><expr pos:start="163:9" pos:end="163:36"><name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:11">hdr</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:19">lfe_on</name></name> <operator pos:start="163:21" pos:end="163:21">=</operator> <call pos:start="163:23" pos:end="163:36"><name pos:start="163:23" pos:end="163:31">get_bits1</name><argument_list pos:start="163:32" pos:end="163:36">(<argument pos:start="163:33" pos:end="163:35"><expr pos:start="163:33" pos:end="163:35"><name pos:start="163:33" pos:end="163:35">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="169:51"><expr pos:start="167:9" pos:end="169:50"><name pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:11">hdr</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:21">bit_rate</name></name> <operator pos:start="167:23" pos:end="167:23">=</operator> <operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:33">uint32_t</name><operator pos:start="167:34" pos:end="167:34">)</operator><operator pos:start="167:35" pos:end="167:35">(</operator><literal type="number" pos:start="167:36" pos:end="167:38">8.0</literal> <operator pos:start="167:40" pos:end="167:40">*</operator> <name pos:start="167:42" pos:end="167:56"><name pos:start="167:42" pos:end="167:44">hdr</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:56">frame_size</name></name> <operator pos:start="167:58" pos:end="167:58">*</operator> <name pos:start="167:60" pos:end="167:75"><name pos:start="167:60" pos:end="167:62">hdr</name><operator pos:start="167:63" pos:end="167:64">-&gt;</operator><name pos:start="167:65" pos:end="167:75">sample_rate</name></name> <operator pos:start="167:77" pos:end="167:77">/</operator>

                        <operator pos:start="169:25" pos:end="169:25">(</operator><name pos:start="169:26" pos:end="169:40"><name pos:start="169:26" pos:end="169:28">hdr</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:40">num_blocks</name></name> <operator pos:start="169:42" pos:end="169:42">*</operator> <literal type="number" pos:start="169:44" pos:end="169:48">256.0</literal><operator pos:start="169:49" pos:end="169:49">)</operator><operator pos:start="169:50" pos:end="169:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:77"><expr pos:start="171:9" pos:end="171:76"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:11">hdr</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:21">channels</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:62"><name pos:start="171:25" pos:end="171:43">ff_ac3_channels_tab</name><index pos:start="171:44" pos:end="171:62">[<expr pos:start="171:45" pos:end="171:61"><name pos:start="171:45" pos:end="171:61"><name pos:start="171:45" pos:end="171:47">hdr</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:61">channel_mode</name></name></expr>]</index></name> <operator pos:start="171:64" pos:end="171:64">+</operator> <name pos:start="171:66" pos:end="171:76"><name pos:start="171:66" pos:end="171:68">hdr</name><operator pos:start="171:69" pos:end="171:70">-&gt;</operator><name pos:start="171:71" pos:end="171:76">lfe_on</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:71"><expr pos:start="175:5" pos:end="175:70"><name pos:start="175:5" pos:end="175:23"><name pos:start="175:5" pos:end="175:7">hdr</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:23">channel_layout</name></name> <operator pos:start="175:25" pos:end="175:25">=</operator> <name pos:start="175:27" pos:end="175:70"><name pos:start="175:27" pos:end="175:51">ff_ac3_channel_layout_tab</name><index pos:start="175:52" pos:end="175:70">[<expr pos:start="175:53" pos:end="175:69"><name pos:start="175:53" pos:end="175:69"><name pos:start="175:53" pos:end="175:55">hdr</name><operator pos:start="175:56" pos:end="175:57">-&gt;</operator><name pos:start="175:58" pos:end="175:69">channel_mode</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="179:51"><if pos:start="177:5" pos:end="179:51">if <condition pos:start="177:8" pos:end="177:20">(<expr pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:11">hdr</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:19">lfe_on</name></name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:51"><block_content pos:start="179:9" pos:end="179:51">

        <expr_stmt pos:start="179:9" pos:end="179:51"><expr pos:start="179:9" pos:end="179:50"><name pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:11">hdr</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:27">channel_layout</name></name> <operator pos:start="179:29" pos:end="179:30">|=</operator> <name pos:start="179:32" pos:end="179:50">AV_CH_LOW_FREQUENCY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
