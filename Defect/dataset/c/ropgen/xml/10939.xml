<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10939.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:51">hl_decode_mb_idct_luma</name><parameter_list pos:start="1:52" pos:end="13:75">(<parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:63">H264Context</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">h</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:79"><decl pos:start="1:69" pos:end="1:79"><type pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:79">mb_type</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:63"><decl pos:start="3:53" pos:end="3:63"><type pos:start="3:53" pos:end="3:63"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:63">is_h264</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:75"><decl pos:start="3:66" pos:end="3:75"><type pos:start="3:66" pos:end="3:75"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:75">simple</name></decl></parameter>,

                                                    <parameter pos:start="5:53" pos:end="5:72"><decl pos:start="5:53" pos:end="5:72"><type pos:start="5:53" pos:end="5:72"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:72">transform_bypass</name></decl></parameter>,

                                                    <parameter pos:start="7:53" pos:end="7:67"><decl pos:start="7:53" pos:end="7:67"><type pos:start="7:53" pos:end="7:67"><name pos:start="7:53" pos:end="7:55">int</name></type> <name pos:start="7:57" pos:end="7:67">pixel_shift</name></decl></parameter>,

                                                    <parameter pos:start="9:53" pos:end="9:69"><decl pos:start="9:53" pos:end="9:69"><type pos:start="9:53" pos:end="9:69"><name pos:start="9:53" pos:end="9:55">int</name> <modifier pos:start="9:57" pos:end="9:57">*</modifier></type><name pos:start="9:58" pos:end="9:69">block_offset</name></decl></parameter>,

                                                    <parameter pos:start="11:53" pos:end="11:64"><decl pos:start="11:53" pos:end="11:64"><type pos:start="11:53" pos:end="11:64"><name pos:start="11:53" pos:end="11:55">int</name></type> <name pos:start="11:57" pos:end="11:64">linesize</name></decl></parameter>,

                                                    <parameter pos:start="13:53" pos:end="13:67"><decl pos:start="13:53" pos:end="13:67"><type pos:start="13:53" pos:end="13:67"><name pos:start="13:53" pos:end="13:59">uint8_t</name> <modifier pos:start="13:61" pos:end="13:61">*</modifier></type><name pos:start="13:62" pos:end="13:67">dest_y</name></decl></parameter>, <parameter pos:start="13:70" pos:end="13:74"><decl pos:start="13:70" pos:end="13:74"><type pos:start="13:70" pos:end="13:74"><name pos:start="13:70" pos:end="13:72">int</name></type> <name pos:start="13:74" pos:end="13:74">p</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="137:1">{<block_content pos:start="17:5" pos:end="135:5">

    <function_decl pos:start="17:5" pos:end="17:63"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">void</name></type> (<modifier pos:start="17:11" pos:end="17:11">*</modifier><name pos:start="17:12" pos:end="17:19">idct_add</name>)<parameter_list pos:start="17:21" pos:end="17:62">(<parameter pos:start="17:22" pos:end="17:33"><decl pos:start="17:22" pos:end="17:33"><type pos:start="17:22" pos:end="17:33"><name pos:start="17:22" pos:end="17:28">uint8_t</name> <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:33">dst</name></decl></parameter>, <parameter pos:start="17:36" pos:end="17:49"><decl pos:start="17:36" pos:end="17:49"><type pos:start="17:36" pos:end="17:49"><name pos:start="17:36" pos:end="17:42">int16_t</name> <modifier pos:start="17:44" pos:end="17:44">*</modifier></type><name pos:start="17:45" pos:end="17:49">block</name></decl></parameter>, <parameter pos:start="17:52" pos:end="17:61"><decl pos:start="17:52" pos:end="17:61"><type pos:start="17:52" pos:end="17:61"><name pos:start="17:52" pos:end="17:54">int</name></type> <name pos:start="17:56" pos:end="17:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:16">block_offset</name> <operator pos:start="21:18" pos:end="21:19">+=</operator> <literal type="number" pos:start="21:21" pos:end="21:22">16</literal> <operator pos:start="21:24" pos:end="21:24">*</operator> <name pos:start="21:26" pos:end="21:26">p</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="135:5"><if pos:start="23:5" pos:end="135:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:20">IS_INTRA4x4</name><argument_list pos:start="23:21" pos:end="23:29">(<argument pos:start="23:22" pos:end="23:28"><expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:32" pos:end="135:5">{<block_content pos:start="25:9" pos:end="133:9">

        <if_stmt pos:start="25:9" pos:end="133:9"><if pos:start="25:9" pos:end="117:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">is_h264</name></expr>)</condition> <block pos:start="25:22" pos:end="117:9">{<block_content pos:start="27:13" pos:end="115:13">

            <if_stmt pos:start="27:13" pos:end="115:13"><if pos:start="27:13" pos:end="71:13">if <condition pos:start="27:16" pos:end="27:39">(<expr pos:start="27:17" pos:end="27:38"><call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:29">IS_INTRA16x16</name><argument_list pos:start="27:30" pos:end="27:38">(<argument pos:start="27:31" pos:end="27:37"><expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:37">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:41" pos:end="71:13">{<block_content pos:start="29:17" pos:end="69:17">

                <if_stmt pos:start="29:17" pos:end="69:17"><if pos:start="29:17" pos:end="59:17">if <condition pos:start="29:20" pos:end="29:37">(<expr pos:start="29:21" pos:end="29:36"><name pos:start="29:21" pos:end="29:36">transform_bypass</name></expr>)</condition> <block pos:start="29:39" pos:end="59:17">{<block_content pos:start="31:21" pos:end="57:21">

                    <if_stmt pos:start="31:21" pos:end="57:21"><if pos:start="31:21" pos:end="43:21">if <condition pos:start="31:24" pos:end="35:65">(<expr pos:start="31:25" pos:end="35:64"><name pos:start="31:25" pos:end="31:42"><name pos:start="31:25" pos:end="31:25">h</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:30">sps</name><operator pos:start="31:31" pos:end="31:31">.</operator><name pos:start="31:32" pos:end="31:42">profile_idc</name></name> <operator pos:start="31:44" pos:end="31:45">==</operator> <literal type="number" pos:start="31:47" pos:end="31:49">244</literal> <operator pos:start="31:51" pos:end="31:52">&amp;&amp;</operator>

                        <operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:48"><name pos:start="33:26" pos:end="33:26">h</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:48">intra16x16_pred_mode</name></name> <operator pos:start="33:50" pos:end="33:51">==</operator> <name pos:start="33:53" pos:end="33:64">VERT_PRED8x8</name> <operator pos:start="33:66" pos:end="33:67">||</operator>

                         <name pos:start="35:26" pos:end="35:48"><name pos:start="35:26" pos:end="35:26">h</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:48">intra16x16_pred_mode</name></name> <operator pos:start="35:50" pos:end="35:51">==</operator> <name pos:start="35:53" pos:end="35:63">HOR_PRED8x8</name><operator pos:start="35:64" pos:end="35:64">)</operator></expr>)</condition> <block pos:start="35:67" pos:end="43:21">{<block_content pos:start="37:25" pos:end="41:80">

                        <expr_stmt pos:start="37:25" pos:end="41:80"><expr pos:start="37:25" pos:end="41:79"><name pos:start="37:25" pos:end="37:69"><name pos:start="37:25" pos:end="37:25">h</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:30">hpc</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:44">pred16x16_add</name><index pos:start="37:45" pos:end="37:69">[<expr pos:start="37:46" pos:end="37:68"><name pos:start="37:46" pos:end="37:68"><name pos:start="37:46" pos:end="37:46">h</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:68">intra16x16_pred_mode</name></name></expr>]</index></name><operator pos:start="37:70" pos:end="37:70">(</operator><name pos:start="37:71" pos:end="37:76">dest_y</name><operator pos:start="37:77" pos:end="37:77">,</operator> <name pos:start="37:79" pos:end="37:90">block_offset</name><operator pos:start="37:91" pos:end="37:91">,</operator>

                                                                      <name pos:start="39:71" pos:end="39:75"><name pos:start="39:71" pos:end="39:71">h</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:75">mb</name></name> <operator pos:start="39:77" pos:end="39:77">+</operator> <operator pos:start="39:79" pos:end="39:79">(</operator><name pos:start="39:80" pos:end="39:80">p</name> <operator pos:start="39:82" pos:end="39:82">*</operator> <literal type="number" pos:start="39:84" pos:end="39:86">256</literal> <operator pos:start="39:88" pos:end="39:89">&lt;&lt;</operator> <name pos:start="39:91" pos:end="39:101">pixel_shift</name><operator pos:start="39:102" pos:end="39:102">)</operator><operator pos:start="39:103" pos:end="39:103">,</operator>

                                                                      <name pos:start="41:71" pos:end="41:78">linesize</name><operator pos:start="41:79" pos:end="41:79">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="43:23" pos:end="57:21">else <block pos:start="43:28" pos:end="57:21">{<block_content pos:start="45:25" pos:end="55:70">

                        <for pos:start="45:25" pos:end="55:70">for <control pos:start="45:29" pos:end="45:48">(<init pos:start="45:30" pos:end="45:35"><expr pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:30">i</name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>;</init> <condition pos:start="45:37" pos:end="45:43"><expr pos:start="45:37" pos:end="45:42"><name pos:start="45:37" pos:end="45:37">i</name> <operator pos:start="45:39" pos:end="45:39">&lt;</operator> <literal type="number" pos:start="45:41" pos:end="45:42">16</literal></expr>;</condition> <incr pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:45">i</name><operator pos:start="45:46" pos:end="45:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:29" pos:end="55:70"><block_content pos:start="47:29" pos:end="55:70">

                            <if_stmt pos:start="47:29" pos:end="55:70"><if pos:start="47:29" pos:end="55:70">if <condition pos:start="47:32" pos:end="49:82">(<expr pos:start="47:33" pos:end="49:81"><name pos:start="47:33" pos:end="47:74"><name pos:start="47:33" pos:end="47:33">h</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:55">non_zero_count_cache</name><index pos:start="47:56" pos:end="47:74">[<expr pos:start="47:57" pos:end="47:73"><name pos:start="47:57" pos:end="47:73"><name pos:start="47:57" pos:end="47:61">scan8</name><index pos:start="47:62" pos:end="47:73">[<expr pos:start="47:63" pos:end="47:72"><name pos:start="47:63" pos:end="47:63">i</name> <operator pos:start="47:65" pos:end="47:65">+</operator> <name pos:start="47:67" pos:end="47:67">p</name> <operator pos:start="47:69" pos:end="47:69">*</operator> <literal type="number" pos:start="47:71" pos:end="47:72">16</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="47:76" pos:end="47:77">||</operator>

                                <call pos:start="49:33" pos:end="49:81"><name pos:start="49:33" pos:end="49:43">dctcoef_get</name><argument_list pos:start="49:44" pos:end="49:81">(<argument pos:start="49:45" pos:end="49:49"><expr pos:start="49:45" pos:end="49:49"><name pos:start="49:45" pos:end="49:49"><name pos:start="49:45" pos:end="49:45">h</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:49">mb</name></name></expr></argument>, <argument pos:start="49:52" pos:end="49:62"><expr pos:start="49:52" pos:end="49:62"><name pos:start="49:52" pos:end="49:62">pixel_shift</name></expr></argument>, <argument pos:start="49:65" pos:end="49:80"><expr pos:start="49:65" pos:end="49:80"><name pos:start="49:65" pos:end="49:65">i</name> <operator pos:start="49:67" pos:end="49:67">*</operator> <literal type="number" pos:start="49:69" pos:end="49:72">16</literal> <operator pos:start="49:72" pos:end="49:72">+</operator> <name pos:start="49:74" pos:end="49:74">p</name> <operator pos:start="49:76" pos:end="49:76">*</operator> <literal type="number" pos:start="49:78" pos:end="49:80">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:33" pos:end="55:70"><block_content pos:start="51:33" pos:end="55:70">

                                <expr_stmt pos:start="51:33" pos:end="55:70"><expr pos:start="51:33" pos:end="55:69"><call pos:start="51:33" pos:end="55:69"><name pos:start="51:33" pos:end="51:59"><name pos:start="51:33" pos:end="51:33">h</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:42">h264dsp</name><operator pos:start="51:43" pos:end="51:43">.</operator><name pos:start="51:44" pos:end="51:59">h264_add_pixels4</name></name><argument_list pos:start="51:60" pos:end="55:69">(<argument pos:start="51:61" pos:end="51:84"><expr pos:start="51:61" pos:end="51:84"><name pos:start="51:61" pos:end="51:66">dest_y</name> <operator pos:start="51:68" pos:end="51:68">+</operator> <name pos:start="51:70" pos:end="51:84"><name pos:start="51:70" pos:end="51:81">block_offset</name><index pos:start="51:82" pos:end="51:84">[<expr pos:start="51:83" pos:end="51:83"><name pos:start="51:83" pos:end="51:83">i</name></expr>]</index></name></expr></argument>,

                                                            <argument pos:start="53:61" pos:end="53:101"><expr pos:start="53:61" pos:end="53:101"><name pos:start="53:61" pos:end="53:65"><name pos:start="53:61" pos:end="53:61">h</name><operator pos:start="53:62" pos:end="53:63">-&gt;</operator><name pos:start="53:64" pos:end="53:65">mb</name></name> <operator pos:start="53:67" pos:end="53:67">+</operator> <operator pos:start="53:69" pos:end="53:69">(</operator><name pos:start="53:70" pos:end="53:70">i</name> <operator pos:start="53:72" pos:end="53:72">*</operator> <literal type="number" pos:start="53:74" pos:end="53:77">16</literal> <operator pos:start="53:77" pos:end="53:77">+</operator> <name pos:start="53:79" pos:end="53:79">p</name> <operator pos:start="53:81" pos:end="53:81">*</operator> <literal type="number" pos:start="53:83" pos:end="53:85">256</literal> <operator pos:start="53:87" pos:end="53:88">&lt;&lt;</operator> <name pos:start="53:90" pos:end="53:100">pixel_shift</name><operator pos:start="53:101" pos:end="53:101">)</operator></expr></argument>,

                                                            <argument pos:start="55:61" pos:end="55:68"><expr pos:start="55:61" pos:end="55:68"><name pos:start="55:61" pos:end="55:68">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="59:19" pos:end="69:17">else <block pos:start="59:24" pos:end="69:17">{<block_content pos:start="61:21" pos:end="67:89">

                    <expr_stmt pos:start="61:21" pos:end="67:89"><expr pos:start="61:21" pos:end="67:88"><call pos:start="61:21" pos:end="67:88"><name pos:start="61:21" pos:end="61:51"><name pos:start="61:21" pos:end="61:21">h</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:30">h264dsp</name><operator pos:start="61:31" pos:end="61:31">.</operator><name pos:start="61:32" pos:end="61:51">h264_idct_add16intra</name></name><argument_list pos:start="61:52" pos:end="67:88">(<argument pos:start="61:53" pos:end="61:58"><expr pos:start="61:53" pos:end="61:58"><name pos:start="61:53" pos:end="61:58">dest_y</name></expr></argument>, <argument pos:start="61:61" pos:end="61:72"><expr pos:start="61:61" pos:end="61:72"><name pos:start="61:61" pos:end="61:72">block_offset</name></expr></argument>,

                                                    <argument pos:start="63:53" pos:end="63:84"><expr pos:start="63:53" pos:end="63:84"><name pos:start="63:53" pos:end="63:57"><name pos:start="63:53" pos:end="63:53">h</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:57">mb</name></name> <operator pos:start="63:59" pos:end="63:59">+</operator> <operator pos:start="63:61" pos:end="63:61">(</operator><name pos:start="63:62" pos:end="63:62">p</name> <operator pos:start="63:64" pos:end="63:64">*</operator> <literal type="number" pos:start="63:66" pos:end="63:68">256</literal> <operator pos:start="63:70" pos:end="63:71">&lt;&lt;</operator> <name pos:start="63:73" pos:end="63:83">pixel_shift</name><operator pos:start="63:84" pos:end="63:84">)</operator></expr></argument>,

                                                    <argument pos:start="65:53" pos:end="65:60"><expr pos:start="65:53" pos:end="65:60"><name pos:start="65:53" pos:end="65:60">linesize</name></expr></argument>,

                                                    <argument pos:start="67:53" pos:end="67:87"><expr pos:start="67:53" pos:end="67:87"><name pos:start="67:53" pos:end="67:75"><name pos:start="67:53" pos:end="67:53">h</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:75">non_zero_count_cache</name></name> <operator pos:start="67:77" pos:end="67:77">+</operator> <name pos:start="67:79" pos:end="67:79">p</name> <operator pos:start="67:81" pos:end="67:81">*</operator> <literal type="number" pos:start="67:83" pos:end="67:83">5</literal> <operator pos:start="67:85" pos:end="67:85">*</operator> <literal type="number" pos:start="67:87" pos:end="67:87">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="71:15" pos:end="115:13">else if <condition pos:start="71:23" pos:end="71:35">(<expr pos:start="71:24" pos:end="71:34"><name pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:24">h</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:29">cbp</name></name> <operator pos:start="71:31" pos:end="71:31">&amp;</operator> <literal type="number" pos:start="71:33" pos:end="71:34">15</literal></expr>)</condition> <block pos:start="71:37" pos:end="115:13">{<block_content pos:start="73:17" pos:end="113:17">

                <if_stmt pos:start="73:17" pos:end="113:17"><if pos:start="73:17" pos:end="91:17">if <condition pos:start="73:20" pos:end="73:37">(<expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:36">transform_bypass</name></expr>)</condition> <block pos:start="73:39" pos:end="91:17">{<block_content pos:start="75:21" pos:end="89:47">

                    <decl_stmt pos:start="75:21" pos:end="75:62"><decl pos:start="75:21" pos:end="75:61"><type pos:start="75:21" pos:end="75:29"><specifier pos:start="75:21" pos:end="75:25">const</specifier> <name pos:start="75:27" pos:end="75:29">int</name></type> <name pos:start="75:31" pos:end="75:32">di</name> <init pos:start="75:34" pos:end="75:61">= <expr pos:start="75:36" pos:end="75:61"><ternary pos:start="75:36" pos:end="75:61"><condition pos:start="75:36" pos:end="75:55"><expr pos:start="75:36" pos:end="75:53"><call pos:start="75:36" pos:end="75:53"><name pos:start="75:36" pos:end="75:44">IS_8x8DCT</name><argument_list pos:start="75:45" pos:end="75:53">(<argument pos:start="75:46" pos:end="75:52"><expr pos:start="75:46" pos:end="75:52"><name pos:start="75:46" pos:end="75:52">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="75:57" pos:end="75:57"> <expr pos:start="75:57" pos:end="75:57"><literal type="number" pos:start="75:57" pos:end="75:57">4</literal></expr> </then><else pos:start="75:59" pos:end="75:61">: <expr pos:start="75:61" pos:end="75:61"><literal type="number" pos:start="75:61" pos:end="75:61">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="77:21" pos:end="79:80"><expr pos:start="77:21" pos:end="79:79"><name pos:start="77:21" pos:end="77:28">idct_add</name> <operator pos:start="77:30" pos:end="77:30">=</operator> <ternary pos:start="77:32" pos:end="79:79"><condition pos:start="77:32" pos:end="77:51"><expr pos:start="77:32" pos:end="77:49"><call pos:start="77:32" pos:end="77:49"><name pos:start="77:32" pos:end="77:40">IS_8x8DCT</name><argument_list pos:start="77:41" pos:end="77:49">(<argument pos:start="77:42" pos:end="77:48"><expr pos:start="77:42" pos:end="77:48"><name pos:start="77:42" pos:end="77:48">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="77:53" pos:end="77:79"> <expr pos:start="77:53" pos:end="77:79"><name pos:start="77:53" pos:end="77:79"><name pos:start="77:53" pos:end="77:53">h</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:62">h264dsp</name><operator pos:start="77:63" pos:end="77:63">.</operator><name pos:start="77:64" pos:end="77:79">h264_add_pixels8</name></name></expr>

                                                  </then><else pos:start="79:51" pos:end="79:79">: <expr pos:start="79:53" pos:end="79:79"><name pos:start="79:53" pos:end="79:79"><name pos:start="79:53" pos:end="79:53">h</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:62">h264dsp</name><operator pos:start="79:63" pos:end="79:63">.</operator><name pos:start="79:64" pos:end="79:79">h264_add_pixels4</name></name></expr></else></ternary></expr>;</expr_stmt>

                    <for pos:start="81:21" pos:end="89:47">for <control pos:start="81:25" pos:end="81:48">(<init pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:30"><name pos:start="81:26" pos:end="81:26">i</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr>;</init> <condition pos:start="81:33" pos:end="81:39"><expr pos:start="81:33" pos:end="81:38"><name pos:start="81:33" pos:end="81:33">i</name> <operator pos:start="81:35" pos:end="81:35">&lt;</operator> <literal type="number" pos:start="81:37" pos:end="81:38">16</literal></expr>;</condition> <incr pos:start="81:41" pos:end="81:47"><expr pos:start="81:41" pos:end="81:47"><name pos:start="81:41" pos:end="81:41">i</name> <operator pos:start="81:43" pos:end="81:44">+=</operator> <name pos:start="81:46" pos:end="81:47">di</name></expr></incr>)</control><block type="pseudo" pos:start="83:25" pos:end="89:47"><block_content pos:start="83:25" pos:end="89:47">

                        <if_stmt pos:start="83:25" pos:end="89:47"><if pos:start="83:25" pos:end="89:47">if <condition pos:start="83:28" pos:end="83:71">(<expr pos:start="83:29" pos:end="83:70"><name pos:start="83:29" pos:end="83:70"><name pos:start="83:29" pos:end="83:29">h</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:51">non_zero_count_cache</name><index pos:start="83:52" pos:end="83:70">[<expr pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:57">scan8</name><index pos:start="83:58" pos:end="83:69">[<expr pos:start="83:59" pos:end="83:68"><name pos:start="83:59" pos:end="83:59">i</name> <operator pos:start="83:61" pos:end="83:61">+</operator> <name pos:start="83:63" pos:end="83:63">p</name> <operator pos:start="83:65" pos:end="83:65">*</operator> <literal type="number" pos:start="83:67" pos:end="83:68">16</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="85:29" pos:end="89:47"><block_content pos:start="85:29" pos:end="89:47">

                            <expr_stmt pos:start="85:29" pos:end="89:47"><expr pos:start="85:29" pos:end="89:46"><call pos:start="85:29" pos:end="89:46"><name pos:start="85:29" pos:end="85:36">idct_add</name><argument_list pos:start="85:37" pos:end="89:46">(<argument pos:start="85:38" pos:end="85:61"><expr pos:start="85:38" pos:end="85:61"><name pos:start="85:38" pos:end="85:43">dest_y</name> <operator pos:start="85:45" pos:end="85:45">+</operator> <name pos:start="85:47" pos:end="85:61"><name pos:start="85:47" pos:end="85:58">block_offset</name><index pos:start="85:59" pos:end="85:61">[<expr pos:start="85:60" pos:end="85:60"><name pos:start="85:60" pos:end="85:60">i</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="87:38" pos:end="87:78"><expr pos:start="87:38" pos:end="87:78"><name pos:start="87:38" pos:end="87:42"><name pos:start="87:38" pos:end="87:38">h</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:42">mb</name></name> <operator pos:start="87:44" pos:end="87:44">+</operator> <operator pos:start="87:46" pos:end="87:46">(</operator><name pos:start="87:47" pos:end="87:47">i</name> <operator pos:start="87:49" pos:end="87:49">*</operator> <literal type="number" pos:start="87:51" pos:end="87:54">16</literal> <operator pos:start="87:54" pos:end="87:54">+</operator> <name pos:start="87:56" pos:end="87:56">p</name> <operator pos:start="87:58" pos:end="87:58">*</operator> <literal type="number" pos:start="87:60" pos:end="87:62">256</literal> <operator pos:start="87:64" pos:end="87:65">&lt;&lt;</operator> <name pos:start="87:67" pos:end="87:77">pixel_shift</name><operator pos:start="87:78" pos:end="87:78">)</operator></expr></argument>,

                                     <argument pos:start="89:38" pos:end="89:45"><expr pos:start="89:38" pos:end="89:45"><name pos:start="89:38" pos:end="89:45">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="91:19" pos:end="113:17">else <block pos:start="91:24" pos:end="113:17">{<block_content pos:start="93:21" pos:end="111:88">

                    <if_stmt pos:start="93:21" pos:end="111:88"><if pos:start="93:21" pos:end="101:88">if <condition pos:start="93:24" pos:end="93:43">(<expr pos:start="93:25" pos:end="93:42"><call pos:start="93:25" pos:end="93:42"><name pos:start="93:25" pos:end="93:33">IS_8x8DCT</name><argument_list pos:start="93:34" pos:end="93:42">(<argument pos:start="93:35" pos:end="93:41"><expr pos:start="93:35" pos:end="93:41"><name pos:start="93:35" pos:end="93:41">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:25" pos:end="101:88"><block_content pos:start="95:25" pos:end="101:88">

                        <expr_stmt pos:start="95:25" pos:end="101:88"><expr pos:start="95:25" pos:end="101:87"><call pos:start="95:25" pos:end="101:87"><name pos:start="95:25" pos:end="95:50"><name pos:start="95:25" pos:end="95:25">h</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:34">h264dsp</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:50">h264_idct8_add4</name></name><argument_list pos:start="95:51" pos:end="101:87">(<argument pos:start="95:52" pos:end="95:57"><expr pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:57">dest_y</name></expr></argument>, <argument pos:start="95:60" pos:end="95:71"><expr pos:start="95:60" pos:end="95:71"><name pos:start="95:60" pos:end="95:71">block_offset</name></expr></argument>,

                                                   <argument pos:start="97:52" pos:end="97:83"><expr pos:start="97:52" pos:end="97:83"><name pos:start="97:52" pos:end="97:56"><name pos:start="97:52" pos:end="97:52">h</name><operator pos:start="97:53" pos:end="97:54">-&gt;</operator><name pos:start="97:55" pos:end="97:56">mb</name></name> <operator pos:start="97:58" pos:end="97:58">+</operator> <operator pos:start="97:60" pos:end="97:60">(</operator><name pos:start="97:61" pos:end="97:61">p</name> <operator pos:start="97:63" pos:end="97:63">*</operator> <literal type="number" pos:start="97:65" pos:end="97:67">256</literal> <operator pos:start="97:69" pos:end="97:70">&lt;&lt;</operator> <name pos:start="97:72" pos:end="97:82">pixel_shift</name><operator pos:start="97:83" pos:end="97:83">)</operator></expr></argument>,

                                                   <argument pos:start="99:52" pos:end="99:59"><expr pos:start="99:52" pos:end="99:59"><name pos:start="99:52" pos:end="99:59">linesize</name></expr></argument>,

                                                   <argument pos:start="101:52" pos:end="101:86"><expr pos:start="101:52" pos:end="101:86"><name pos:start="101:52" pos:end="101:74"><name pos:start="101:52" pos:end="101:52">h</name><operator pos:start="101:53" pos:end="101:54">-&gt;</operator><name pos:start="101:55" pos:end="101:74">non_zero_count_cache</name></name> <operator pos:start="101:76" pos:end="101:76">+</operator> <name pos:start="101:78" pos:end="101:78">p</name> <operator pos:start="101:80" pos:end="101:80">*</operator> <literal type="number" pos:start="101:82" pos:end="101:82">5</literal> <operator pos:start="101:84" pos:end="101:84">*</operator> <literal type="number" pos:start="101:86" pos:end="101:86">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="103:21" pos:end="111:88">else<block type="pseudo" pos:start="105:25" pos:end="111:88"><block_content pos:start="105:25" pos:end="111:88">

                        <expr_stmt pos:start="105:25" pos:end="111:88"><expr pos:start="105:25" pos:end="111:87"><call pos:start="105:25" pos:end="111:87"><name pos:start="105:25" pos:end="105:50"><name pos:start="105:25" pos:end="105:25">h</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:34">h264dsp</name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:50">h264_idct_add16</name></name><argument_list pos:start="105:51" pos:end="111:87">(<argument pos:start="105:52" pos:end="105:57"><expr pos:start="105:52" pos:end="105:57"><name pos:start="105:52" pos:end="105:57">dest_y</name></expr></argument>, <argument pos:start="105:60" pos:end="105:71"><expr pos:start="105:60" pos:end="105:71"><name pos:start="105:60" pos:end="105:71">block_offset</name></expr></argument>,

                                                   <argument pos:start="107:52" pos:end="107:83"><expr pos:start="107:52" pos:end="107:83"><name pos:start="107:52" pos:end="107:56"><name pos:start="107:52" pos:end="107:52">h</name><operator pos:start="107:53" pos:end="107:54">-&gt;</operator><name pos:start="107:55" pos:end="107:56">mb</name></name> <operator pos:start="107:58" pos:end="107:58">+</operator> <operator pos:start="107:60" pos:end="107:60">(</operator><name pos:start="107:61" pos:end="107:61">p</name> <operator pos:start="107:63" pos:end="107:63">*</operator> <literal type="number" pos:start="107:65" pos:end="107:67">256</literal> <operator pos:start="107:69" pos:end="107:70">&lt;&lt;</operator> <name pos:start="107:72" pos:end="107:82">pixel_shift</name><operator pos:start="107:83" pos:end="107:83">)</operator></expr></argument>,

                                                   <argument pos:start="109:52" pos:end="109:59"><expr pos:start="109:52" pos:end="109:59"><name pos:start="109:52" pos:end="109:59">linesize</name></expr></argument>,

                                                   <argument pos:start="111:52" pos:end="111:86"><expr pos:start="111:52" pos:end="111:86"><name pos:start="111:52" pos:end="111:74"><name pos:start="111:52" pos:end="111:52">h</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:74">non_zero_count_cache</name></name> <operator pos:start="111:76" pos:end="111:76">+</operator> <name pos:start="111:78" pos:end="111:78">p</name> <operator pos:start="111:80" pos:end="111:80">*</operator> <literal type="number" pos:start="111:82" pos:end="111:82">5</literal> <operator pos:start="111:84" pos:end="111:84">*</operator> <literal type="number" pos:start="111:86" pos:end="111:86">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="133:9">else if <condition pos:start="117:19" pos:end="117:39">(<expr pos:start="117:20" pos:end="117:38"><name pos:start="117:20" pos:end="117:38">CONFIG_SVQ3_DECODER</name></expr>)</condition> <block pos:start="117:41" pos:end="133:9">{<block_content pos:start="119:13" pos:end="131:17">

            <for pos:start="119:13" pos:end="131:17">for <control pos:start="119:17" pos:end="119:36">(<init pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:22"><name pos:start="119:18" pos:end="119:18">i</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</init> <condition pos:start="119:25" pos:end="119:31"><expr pos:start="119:25" pos:end="119:30"><name pos:start="119:25" pos:end="119:25">i</name> <operator pos:start="119:27" pos:end="119:27">&lt;</operator> <literal type="number" pos:start="119:29" pos:end="119:30">16</literal></expr>;</condition> <incr pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:33">i</name><operator pos:start="119:34" pos:end="119:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:17" pos:end="131:17"><block_content pos:start="121:17" pos:end="131:17">

                <if_stmt pos:start="121:17" pos:end="131:17"><if pos:start="121:17" pos:end="131:17">if <condition pos:start="121:20" pos:end="121:90">(<expr pos:start="121:21" pos:end="121:89"><name pos:start="121:21" pos:end="121:62"><name pos:start="121:21" pos:end="121:21">h</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:43">non_zero_count_cache</name><index pos:start="121:44" pos:end="121:62">[<expr pos:start="121:45" pos:end="121:61"><name pos:start="121:45" pos:end="121:61"><name pos:start="121:45" pos:end="121:49">scan8</name><index pos:start="121:50" pos:end="121:61">[<expr pos:start="121:51" pos:end="121:60"><name pos:start="121:51" pos:end="121:51">i</name> <operator pos:start="121:53" pos:end="121:53">+</operator> <name pos:start="121:55" pos:end="121:55">p</name> <operator pos:start="121:57" pos:end="121:57">*</operator> <literal type="number" pos:start="121:59" pos:end="121:60">16</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="121:64" pos:end="121:65">||</operator> <name pos:start="121:67" pos:end="121:89"><name pos:start="121:67" pos:end="121:67">h</name><operator pos:start="121:68" pos:end="121:69">-&gt;</operator><name pos:start="121:70" pos:end="121:71">mb</name><index pos:start="121:72" pos:end="121:89">[<expr pos:start="121:73" pos:end="121:88"><name pos:start="121:73" pos:end="121:73">i</name> <operator pos:start="121:75" pos:end="121:75">*</operator> <literal type="number" pos:start="121:77" pos:end="121:80">16</literal> <operator pos:start="121:80" pos:end="121:80">+</operator> <name pos:start="121:82" pos:end="121:82">p</name> <operator pos:start="121:84" pos:end="121:84">*</operator> <literal type="number" pos:start="121:86" pos:end="121:88">256</literal></expr>]</index></name></expr>)</condition> <block pos:start="121:92" pos:end="131:17">{<block_content pos:start="125:21" pos:end="129:77">

                    <comment type="line" pos:start="123:21" pos:end="123:58">// FIXME benchmark weird rule, &amp; below</comment>

                    <decl_stmt pos:start="125:21" pos:end="125:66"><decl pos:start="125:21" pos:end="125:65"><type pos:start="125:21" pos:end="125:34"><name pos:start="125:21" pos:end="125:27">uint8_t</name> <modifier pos:start="125:29" pos:end="125:29">*</modifier><specifier pos:start="125:30" pos:end="125:34">const</specifier></type> <name pos:start="125:36" pos:end="125:38">ptr</name> <init pos:start="125:40" pos:end="125:65">= <expr pos:start="125:42" pos:end="125:65"><name pos:start="125:42" pos:end="125:47">dest_y</name> <operator pos:start="125:49" pos:end="125:49">+</operator> <name pos:start="125:51" pos:end="125:65"><name pos:start="125:51" pos:end="125:62">block_offset</name><index pos:start="125:63" pos:end="125:65">[<expr pos:start="125:64" pos:end="125:64"><name pos:start="125:64" pos:end="125:64">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="127:21" pos:end="129:77"><expr pos:start="127:21" pos:end="129:76"><call pos:start="127:21" pos:end="129:76"><name pos:start="127:21" pos:end="127:38">ff_svq3_add_idct_c</name><argument_list pos:start="127:39" pos:end="129:76">(<argument pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:42">ptr</name></expr></argument>, <argument pos:start="127:45" pos:end="127:68"><expr pos:start="127:45" pos:end="127:68"><name pos:start="127:45" pos:end="127:49"><name pos:start="127:45" pos:end="127:45">h</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:49">mb</name></name> <operator pos:start="127:51" pos:end="127:51">+</operator> <name pos:start="127:53" pos:end="127:53">i</name> <operator pos:start="127:55" pos:end="127:55">*</operator> <literal type="number" pos:start="127:57" pos:end="127:60">16</literal> <operator pos:start="127:60" pos:end="127:60">+</operator> <name pos:start="127:62" pos:end="127:62">p</name> <operator pos:start="127:64" pos:end="127:64">*</operator> <literal type="number" pos:start="127:66" pos:end="127:68">256</literal></expr></argument>, <argument pos:start="127:71" pos:end="127:78"><expr pos:start="127:71" pos:end="127:78"><name pos:start="127:71" pos:end="127:78">linesize</name></expr></argument>,

                                       <argument pos:start="129:40" pos:end="129:48"><expr pos:start="129:40" pos:end="129:48"><name pos:start="129:40" pos:end="129:48"><name pos:start="129:40" pos:end="129:40">h</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:48">qscale</name></name></expr></argument>, <argument pos:start="129:51" pos:end="129:75"><expr pos:start="129:51" pos:end="129:75"><ternary pos:start="129:51" pos:end="129:75"><condition pos:start="129:51" pos:end="129:69"><expr pos:start="129:51" pos:end="129:67"><call pos:start="129:51" pos:end="129:67"><name pos:start="129:51" pos:end="129:58">IS_INTRA</name><argument_list pos:start="129:59" pos:end="129:67">(<argument pos:start="129:60" pos:end="129:66"><expr pos:start="129:60" pos:end="129:66"><name pos:start="129:60" pos:end="129:66">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="129:71" pos:end="129:71"> <expr pos:start="129:71" pos:end="129:71"><literal type="number" pos:start="129:71" pos:end="129:71">1</literal></expr> </then><else pos:start="129:73" pos:end="129:75">: <expr pos:start="129:75" pos:end="129:75"><literal type="number" pos:start="129:75" pos:end="129:75">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
