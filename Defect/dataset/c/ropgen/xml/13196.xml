<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13196.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">msmpeg4_decode_dc</name><parameter_list pos:start="1:29" pos:end="1:69">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:43">MpegEncContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:54"><decl pos:start="1:50" pos:end="1:54"><type pos:start="1:50" pos:end="1:54"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:54">n</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">dir_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:17">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:19">pred</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="65:5"><if pos:start="9:5" pos:end="27:5">if<condition pos:start="9:7" pos:end="9:29">(<expr pos:start="9:8" pos:end="9:28"><name pos:start="9:8" pos:end="9:25"><name pos:start="9:8" pos:end="9:8">s</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:25">msmpeg4_version</name></name><operator pos:start="9:26" pos:end="9:27">&lt;=</operator><literal type="number" pos:start="9:28" pos:end="9:28">2</literal></expr>)</condition><block pos:start="9:30" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:19">

        <if_stmt pos:start="11:9" pos:end="19:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:18">(<expr pos:start="11:13" pos:end="11:17"><name pos:start="11:13" pos:end="11:13">n</name> <operator pos:start="11:15" pos:end="11:15">&lt;</operator> <literal type="number" pos:start="11:17" pos:end="11:17">4</literal></expr>)</condition> <block pos:start="11:20" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:74">

            <expr_stmt pos:start="13:13" pos:end="13:74"><expr pos:start="13:13" pos:end="13:73"><name pos:start="13:13" pos:end="13:17">level</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:73"><name pos:start="13:21" pos:end="13:28">get_vlc2</name><argument_list pos:start="13:29" pos:end="13:73">(<argument pos:start="13:30" pos:end="13:35"><expr pos:start="13:30" pos:end="13:35"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:35">gb</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:56"><expr pos:start="13:38" pos:end="13:56"><name pos:start="13:38" pos:end="13:56"><name pos:start="13:38" pos:end="13:50">v2_dc_lum_vlc</name><operator pos:start="13:51" pos:end="13:51">.</operator><name pos:start="13:52" pos:end="13:56">table</name></name></expr></argument>, <argument pos:start="13:59" pos:end="13:69"><expr pos:start="13:59" pos:end="13:69"><name pos:start="13:59" pos:end="13:69">DC_VLC_BITS</name></expr></argument>, <argument pos:start="13:72" pos:end="13:72"><expr pos:start="13:72" pos:end="13:72"><literal type="number" pos:start="13:72" pos:end="13:72">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="15:11" pos:end="19:9">else <block pos:start="15:16" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:77">

            <expr_stmt pos:start="17:13" pos:end="17:77"><expr pos:start="17:13" pos:end="17:76"><name pos:start="17:13" pos:end="17:17">level</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:76"><name pos:start="17:21" pos:end="17:28">get_vlc2</name><argument_list pos:start="17:29" pos:end="17:76">(<argument pos:start="17:30" pos:end="17:35"><expr pos:start="17:30" pos:end="17:35"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:31">s</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:35">gb</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:59"><expr pos:start="17:38" pos:end="17:59"><name pos:start="17:38" pos:end="17:59"><name pos:start="17:38" pos:end="17:53">v2_dc_chroma_vlc</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:59">table</name></name></expr></argument>, <argument pos:start="17:62" pos:end="17:72"><expr pos:start="17:62" pos:end="17:72"><name pos:start="17:62" pos:end="17:72">DC_VLC_BITS</name></expr></argument>, <argument pos:start="17:75" pos:end="17:75"><expr pos:start="17:75" pos:end="17:75"><literal type="number" pos:start="17:75" pos:end="17:75">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:17">level</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:13">level</name><operator pos:start="25:14" pos:end="25:15">-=</operator><literal type="number" pos:start="25:16" pos:end="25:18">256</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="27:6" pos:end="65:5">else<block pos:start="27:10" pos:end="65:5">{<block_content pos:start="29:9" pos:end="63:9">  <comment type="line" pos:start="27:13" pos:end="27:55">//FIXME optimize use unified tables &amp; index</comment>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">4</literal></expr>)</condition> <block pos:start="29:20" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:100">

            <expr_stmt pos:start="31:13" pos:end="31:100"><expr pos:start="31:13" pos:end="31:99"><name pos:start="31:13" pos:end="31:17">level</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:99"><name pos:start="31:21" pos:end="31:28">get_vlc2</name><argument_list pos:start="31:29" pos:end="31:99">(<argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">gb</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:82"><expr pos:start="31:38" pos:end="31:82"><name pos:start="31:38" pos:end="31:76"><name pos:start="31:38" pos:end="31:57">ff_msmp4_dc_luma_vlc</name><index pos:start="31:58" pos:end="31:76">[<expr pos:start="31:59" pos:end="31:75"><name pos:start="31:59" pos:end="31:75"><name pos:start="31:59" pos:end="31:59">s</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:75">dc_table_index</name></name></expr>]</index></name><operator pos:start="31:77" pos:end="31:77">.</operator><name pos:start="31:78" pos:end="31:82">table</name></expr></argument>, <argument pos:start="31:85" pos:end="31:95"><expr pos:start="31:85" pos:end="31:95"><name pos:start="31:85" pos:end="31:95">DC_VLC_BITS</name></expr></argument>, <argument pos:start="31:98" pos:end="31:98"><expr pos:start="31:98" pos:end="31:98"><literal type="number" pos:start="31:98" pos:end="31:98">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:102">

            <expr_stmt pos:start="35:13" pos:end="35:102"><expr pos:start="35:13" pos:end="35:101"><name pos:start="35:13" pos:end="35:17">level</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:101"><name pos:start="35:21" pos:end="35:28">get_vlc2</name><argument_list pos:start="35:29" pos:end="35:101">(<argument pos:start="35:30" pos:end="35:35"><expr pos:start="35:30" pos:end="35:35"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">gb</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:84"><expr pos:start="35:38" pos:end="35:84"><name pos:start="35:38" pos:end="35:78"><name pos:start="35:38" pos:end="35:59">ff_msmp4_dc_chroma_vlc</name><index pos:start="35:60" pos:end="35:78">[<expr pos:start="35:61" pos:end="35:77"><name pos:start="35:61" pos:end="35:77"><name pos:start="35:61" pos:end="35:61">s</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:77">dc_table_index</name></name></expr>]</index></name><operator pos:start="35:79" pos:end="35:79">.</operator><name pos:start="35:80" pos:end="35:84">table</name></expr></argument>, <argument pos:start="35:87" pos:end="35:97"><expr pos:start="35:87" pos:end="35:97"><name pos:start="35:87" pos:end="35:97">DC_VLC_BITS</name></expr></argument>, <argument pos:start="35:100" pos:end="35:100"><expr pos:start="35:100" pos:end="35:100"><literal type="number" pos:start="35:100" pos:end="35:100">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:17">level</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>)</condition><block pos:start="39:23" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:22">

            <expr_stmt pos:start="41:13" pos:end="41:63"><expr pos:start="41:13" pos:end="41:62"><call pos:start="41:13" pos:end="41:62"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="41:62">(<argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">avctx</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:41"><expr pos:start="41:30" pos:end="41:41"><name pos:start="41:30" pos:end="41:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:44" pos:end="41:61"><expr pos:start="41:44" pos:end="41:61"><literal type="string" pos:start="41:44" pos:end="41:61">"illegal dc vlc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="63:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:28">(<expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:17">level</name> <operator pos:start="49:19" pos:end="49:20">==</operator> <name pos:start="49:22" pos:end="49:27">DC_MAX</name></expr>)</condition> <block pos:start="49:30" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:31">

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:17">level</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:28">get_bits</name><argument_list pos:start="51:29" pos:end="51:39">(<argument pos:start="51:30" pos:end="51:35"><expr pos:start="51:30" pos:end="51:35"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">gb</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:31"><if pos:start="53:13" pos:end="55:31">if <condition pos:start="53:16" pos:end="53:34">(<expr pos:start="53:17" pos:end="53:33"><call pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:25">get_bits1</name><argument_list pos:start="53:26" pos:end="53:33">(<argument pos:start="53:27" pos:end="53:32"><expr pos:start="53:27" pos:end="53:32"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:31"><block_content pos:start="55:17" pos:end="55:31">

                <expr_stmt pos:start="55:17" pos:end="55:31"><expr pos:start="55:17" pos:end="55:30"><name pos:start="55:17" pos:end="55:21">level</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <operator pos:start="55:25" pos:end="55:25">-</operator><name pos:start="55:26" pos:end="55:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="63:9">else if <condition pos:start="57:19" pos:end="57:30">(<expr pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:24">level</name> <operator pos:start="57:26" pos:end="57:27">!=</operator> <literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr>)</condition> <block pos:start="57:32" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:31">

            <if_stmt pos:start="59:13" pos:end="61:31"><if pos:start="59:13" pos:end="61:31">if <condition pos:start="59:16" pos:end="59:34">(<expr pos:start="59:17" pos:end="59:33"><call pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:25">get_bits1</name><argument_list pos:start="59:26" pos:end="59:33">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:31"><block_content pos:start="61:17" pos:end="61:31">

                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:21">level</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <operator pos:start="61:25" pos:end="61:25">-</operator><name pos:start="61:26" pos:end="61:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="105:5"><if pos:start="69:5" pos:end="83:5">if<condition pos:start="69:7" pos:end="69:29">(<expr pos:start="69:8" pos:end="69:28"><name pos:start="69:8" pos:end="69:25"><name pos:start="69:8" pos:end="69:8">s</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:25">msmpeg4_version</name></name><operator pos:start="69:26" pos:end="69:27">==</operator><literal type="number" pos:start="69:28" pos:end="69:28">1</literal></expr>)</condition><block pos:start="69:30" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:23">

        <decl_stmt pos:start="71:9" pos:end="71:24"><decl pos:start="71:9" pos:end="71:23"><type pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:15">int32_t</name> <modifier pos:start="71:17" pos:end="71:17">*</modifier></type><name pos:start="71:18" pos:end="71:23">dc_val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:12">pred</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:47"><name pos:start="73:16" pos:end="73:32">msmpeg4v1_pred_dc</name><argument_list pos:start="73:33" pos:end="73:47">(<argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><name pos:start="73:34" pos:end="73:34">s</name></expr></argument>, <argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><name pos:start="73:37" pos:end="73:37">n</name></expr></argument>, <argument pos:start="73:40" pos:end="73:46"><expr pos:start="73:40" pos:end="73:46"><operator pos:start="73:40" pos:end="73:40">&amp;</operator><name pos:start="73:41" pos:end="73:46">dc_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:13">level</name> <operator pos:start="75:15" pos:end="75:16">+=</operator> <name pos:start="75:18" pos:end="75:21">pred</name></expr>;</expr_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:30">/* update predictor */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:15">dc_val</name><operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:22">level</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="83:6" pos:end="105:5">else<block pos:start="83:10" pos:end="105:5">{<block_content pos:start="85:9" pos:end="103:9">

        <decl_stmt pos:start="85:9" pos:end="85:24"><decl pos:start="85:9" pos:end="85:23"><type pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:15">int16_t</name> <modifier pos:start="85:17" pos:end="85:17">*</modifier></type><name pos:start="85:18" pos:end="85:23">dc_val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:60"><expr pos:start="87:9" pos:end="87:59"><name pos:start="87:9" pos:end="87:12">pred</name>   <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:59"><name pos:start="87:18" pos:end="87:35">ff_msmpeg4_pred_dc</name><argument_list pos:start="87:36" pos:end="87:59">(<argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">s</name></expr></argument>, <argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">n</name></expr></argument>, <argument pos:start="87:43" pos:end="87:49"><expr pos:start="87:43" pos:end="87:49"><operator pos:start="87:43" pos:end="87:43">&amp;</operator><name pos:start="87:44" pos:end="87:49">dc_val</name></expr></argument>, <argument pos:start="87:52" pos:end="87:58"><expr pos:start="87:52" pos:end="87:58"><name pos:start="87:52" pos:end="87:58">dir_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:22"><expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:13">level</name> <operator pos:start="89:15" pos:end="89:16">+=</operator> <name pos:start="89:18" pos:end="89:21">pred</name></expr>;</expr_stmt>



        <comment type="block" pos:start="93:9" pos:end="93:30">/* update predictor */</comment>

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:18">(<expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:13">n</name> <operator pos:start="95:15" pos:end="95:15">&lt;</operator> <literal type="number" pos:start="95:17" pos:end="95:17">4</literal></expr>)</condition> <block pos:start="95:20" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:44">

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:19">dc_val</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:27">level</name> <operator pos:start="97:29" pos:end="97:29">*</operator> <name pos:start="97:31" pos:end="97:43"><name pos:start="97:31" pos:end="97:31">s</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:43">y_dc_scale</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="103:9">else <block pos:start="99:16" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:44">

            <expr_stmt pos:start="101:13" pos:end="101:44"><expr pos:start="101:13" pos:end="101:43"><operator pos:start="101:13" pos:end="101:13">*</operator><name pos:start="101:14" pos:end="101:19">dc_val</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:27">level</name> <operator pos:start="101:29" pos:end="101:29">*</operator> <name pos:start="101:31" pos:end="101:43"><name pos:start="101:31" pos:end="101:31">s</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:43">c_dc_scale</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="109:5" pos:end="109:17">return <expr pos:start="109:12" pos:end="109:16"><name pos:start="109:12" pos:end="109:16">level</name></expr>;</return>

</block_content>}</block></function>
</unit>
