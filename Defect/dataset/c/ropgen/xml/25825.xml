<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25825.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">gen_intermediate_code_internal</name><parameter_list pos:start="1:36" pos:end="3:73">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:45">XtensaCPU</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">cpu</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:56"><decl pos:start="3:37" pos:end="3:56"><type pos:start="3:37" pos:end="3:56"><name pos:start="3:37" pos:end="3:52">TranslationBlock</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:56">tb</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:62">bool</name></type> <name pos:start="3:64" pos:end="3:72">search_pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="275:1">{<block_content pos:start="7:5" pos:end="273:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">CPUXtensaState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">env</name> <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:30">cpu</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">DisasContext</name></type> <name pos:start="11:18" pos:end="11:19">dc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">insn_count</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">j</name></decl>, <decl pos:start="15:12" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:13">lj</name> <init pos:start="15:15" pos:end="15:18">= <expr pos:start="15:17" pos:end="15:18"><operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:63"><decl pos:start="17:5" pos:end="17:62"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint16_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:25">gen_opc_end</name> <init pos:start="17:27" pos:end="17:62">= <expr pos:start="17:29" pos:end="17:62"><name pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:35">tcg_ctx</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:47">gen_opc_buf</name></name> <operator pos:start="17:49" pos:end="17:49">+</operator> <name pos:start="17:51" pos:end="17:62">OPC_MAX_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:47"><decl pos:start="19:5" pos:end="19:46"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">max_insns</name> <init pos:start="19:19" pos:end="19:46">= <expr pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:30"><name pos:start="19:21" pos:end="19:22">tb</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:30">cflags</name></name> <operator pos:start="19:32" pos:end="19:32">&amp;</operator> <name pos:start="19:34" pos:end="19:46">CF_COUNT_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:21">pc_start</name> <init pos:start="21:23" pos:end="21:30">= <expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:26">tb</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:30">pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="25:57"><decl pos:start="23:5" pos:end="25:56"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:28">next_page_start</name> <init pos:start="23:30" pos:end="25:56">=

        <expr pos:start="25:9" pos:end="25:56"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:17">pc_start</name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <name pos:start="25:21" pos:end="25:36">TARGET_PAGE_MASK</name><operator pos:start="25:37" pos:end="25:37">)</operator> <operator pos:start="25:39" pos:end="25:39">+</operator> <name pos:start="25:41" pos:end="25:56">TARGET_PAGE_SIZE</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">max_insns</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition> <block pos:start="29:25" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:17">max_insns</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:6">dc</name><operator pos:start="37:7" pos:end="37:7">.</operator><name pos:start="37:8" pos:end="37:13">config</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:19">env</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:27">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:6">dc</name><operator pos:start="39:7" pos:end="39:7">.</operator><name pos:start="39:8" pos:end="39:25">singlestep_enabled</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:50"><name pos:start="39:29" pos:end="39:30">cs</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:50">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:15"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:7">.</operator><name pos:start="41:8" pos:end="41:9">tb</name></name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:14">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:7">.</operator><name pos:start="43:8" pos:end="43:9">pc</name></name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:20">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:50"><expr pos:start="45:5" pos:end="45:49"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:7">.</operator><name pos:start="45:8" pos:end="45:11">ring</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:23"><name pos:start="45:15" pos:end="45:16">tb</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">flags</name></name> <operator pos:start="45:25" pos:end="45:25">&amp;</operator> <name pos:start="45:27" pos:end="45:49">XTENSA_TBFLAG_RING_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:62"><expr pos:start="47:5" pos:end="47:61"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:7">.</operator><name pos:start="47:8" pos:end="47:12">cring</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <ternary pos:start="47:16" pos:end="47:61"><condition pos:start="47:16" pos:end="47:49"><expr pos:start="47:16" pos:end="47:47"><operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:18">tb</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">flags</name></name> <operator pos:start="47:27" pos:end="47:27">&amp;</operator> <name pos:start="47:29" pos:end="47:46">XTENSA_TBFLAG_EXCM</name><operator pos:start="47:47" pos:end="47:47">)</operator></expr> ?</condition><then pos:start="47:51" pos:end="47:51"> <expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">0</literal></expr> </then><else pos:start="47:53" pos:end="47:61">: <expr pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:56">dc</name><operator pos:start="47:57" pos:end="47:57">.</operator><name pos:start="47:58" pos:end="47:61">ring</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:7">.</operator><name pos:start="49:8" pos:end="49:11">lbeg</name></name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:30"><name pos:start="49:15" pos:end="49:17">env</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:24">sregs</name><index pos:start="49:25" pos:end="49:30">[<expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">LBEG</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:7">.</operator><name pos:start="51:8" pos:end="51:11">lend</name></name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:30"><name pos:start="51:15" pos:end="51:17">env</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">sregs</name><index pos:start="51:25" pos:end="51:30">[<expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">LEND</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:6">dc</name><operator pos:start="53:7" pos:end="53:7">.</operator><name pos:start="53:8" pos:end="53:13">is_jmp</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:26">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:6">dc</name><operator pos:start="55:7" pos:end="55:7">.</operator><name pos:start="55:8" pos:end="55:19">ccount_delta</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:7">.</operator><name pos:start="57:8" pos:end="57:12">debug</name></name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:17">tb</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">flags</name></name> <operator pos:start="57:26" pos:end="57:26">&amp;</operator> <name pos:start="57:28" pos:end="57:46">XTENSA_TBFLAG_DEBUG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:7">.</operator><name pos:start="59:8" pos:end="59:13">icount</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:18">tb</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:25">flags</name></name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <name pos:start="59:29" pos:end="59:48">XTENSA_TBFLAG_ICOUNT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:37"><expr pos:start="61:5" pos:end="63:36"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:6">dc</name><operator pos:start="61:7" pos:end="61:7">.</operator><name pos:start="61:8" pos:end="61:15">cpenable</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <operator pos:start="61:19" pos:end="61:19">(</operator><name pos:start="61:20" pos:end="61:28"><name pos:start="61:20" pos:end="61:21">tb</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:28">flags</name></name> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <name pos:start="61:32" pos:end="61:58">XTENSA_TBFLAG_CPENABLE_MASK</name><operator pos:start="61:59" pos:end="61:59">)</operator> <operator pos:start="61:61" pos:end="61:62">&gt;&gt;</operator>

        <name pos:start="63:9" pos:end="63:36">XTENSA_TBFLAG_CPENABLE_SHIFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><call pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:16">init_litbase</name><argument_list pos:start="67:17" pos:end="67:21">(<argument pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:20">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><call pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:20">init_sar_tracker</name><argument_list pos:start="69:21" pos:end="69:25">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:24">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><call pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:21">reset_used_window</name><argument_list pos:start="71:22" pos:end="71:26">(<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:25">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:10">dc</name><operator pos:start="73:11" pos:end="73:11">.</operator><name pos:start="73:12" pos:end="73:17">icount</name></name></expr>)</condition> <block pos:start="73:20" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:50">

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:10">dc</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:22">next_icount</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <call pos:start="75:26" pos:end="75:49"><name pos:start="75:26" pos:end="75:47">tcg_temp_local_new_i32</name><argument_list pos:start="75:48" pos:end="75:49">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:19"><expr pos:start="81:5" pos:end="81:18"><call pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:16">gen_tb_start</name><argument_list pos:start="81:17" pos:end="81:18">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:44">(<expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:10">tb</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:17">flags</name></name> <operator pos:start="85:19" pos:end="85:19">&amp;</operator> <name pos:start="85:21" pos:end="85:43">XTENSA_TBFLAG_EXCEPTION</name></expr>)</condition> <block pos:start="85:46" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:39">

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><call pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:24">tcg_gen_movi_i32</name><argument_list pos:start="87:25" pos:end="87:39">(<argument pos:start="87:26" pos:end="87:31"><expr pos:start="87:26" pos:end="87:31"><name pos:start="87:26" pos:end="87:31">cpu_pc</name></expr></argument>, <argument pos:start="87:34" pos:end="87:38"><expr pos:start="87:34" pos:end="87:38"><name pos:start="87:34" pos:end="87:38"><name pos:start="87:34" pos:end="87:35">dc</name><operator pos:start="87:36" pos:end="87:36">.</operator><name pos:start="87:37" pos:end="87:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><call pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:21">gen_exception</name><argument_list pos:start="89:22" pos:end="89:38">(<argument pos:start="89:23" pos:end="89:25"><expr pos:start="89:23" pos:end="89:25"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:25">dc</name></expr></argument>, <argument pos:start="89:28" pos:end="89:37"><expr pos:start="89:28" pos:end="89:37"><name pos:start="89:28" pos:end="89:37">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <do pos:start="95:5" pos:end="207:47">do <block pos:start="95:8" pos:end="199:5">{<block_content pos:start="97:9" pos:end="197:9">

        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><call pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:24">check_breakpoint</name><argument_list pos:start="97:25" pos:end="97:34">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><name pos:start="97:26" pos:end="97:28">env</name></expr></argument>, <argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="123:9"><if pos:start="101:9" pos:end="123:9">if <condition pos:start="101:12" pos:end="101:22">(<expr pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:21">search_pc</name></expr>)</condition> <block pos:start="101:24" pos:end="123:9">{<block_content pos:start="103:13" pos:end="121:52">

            <expr_stmt pos:start="103:13" pos:end="103:58"><expr pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:13">j</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:23">tcg_ctx</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:35">gen_opc_ptr</name></name> <operator pos:start="103:37" pos:end="103:37">-</operator> <name pos:start="103:39" pos:end="103:57"><name pos:start="103:39" pos:end="103:45">tcg_ctx</name><operator pos:start="103:46" pos:end="103:46">.</operator><name pos:start="103:47" pos:end="103:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="115:13"><if pos:start="105:13" pos:end="115:13">if <condition pos:start="105:16" pos:end="105:23">(<expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:18">lj</name> <operator pos:start="105:20" pos:end="105:20">&lt;</operator> <name pos:start="105:22" pos:end="105:22">j</name></expr>)</condition> <block pos:start="105:25" pos:end="115:13">{<block_content pos:start="107:17" pos:end="113:17">

                <expr_stmt pos:start="107:17" pos:end="107:21"><expr pos:start="107:17" pos:end="107:20"><name pos:start="107:17" pos:end="107:18">lj</name><operator pos:start="107:19" pos:end="107:20">++</operator></expr>;</expr_stmt>

                <while pos:start="109:17" pos:end="113:17">while <condition pos:start="109:23" pos:end="109:30">(<expr pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:25">lj</name> <operator pos:start="109:27" pos:end="109:27">&lt;</operator> <name pos:start="109:29" pos:end="109:29">j</name></expr>)</condition> <block pos:start="109:32" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:58">

                    <expr_stmt pos:start="111:21" pos:end="111:58"><expr pos:start="111:21" pos:end="111:57"><name pos:start="111:21" pos:end="111:53"><name pos:start="111:21" pos:end="111:27">tcg_ctx</name><operator pos:start="111:28" pos:end="111:28">.</operator><name pos:start="111:29" pos:end="111:47">gen_opc_instr_start</name><index pos:start="111:48" pos:end="111:53">[<expr pos:start="111:49" pos:end="111:52"><name pos:start="111:49" pos:end="111:50">lj</name><operator pos:start="111:51" pos:end="111:52">++</operator></expr>]</index></name> <operator pos:start="111:55" pos:end="111:55">=</operator> <literal type="number" pos:start="111:57" pos:end="111:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:43"><expr pos:start="117:13" pos:end="117:42"><name pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:19">tcg_ctx</name><operator pos:start="117:20" pos:end="117:20">.</operator><name pos:start="117:21" pos:end="117:30">gen_opc_pc</name><index pos:start="117:31" pos:end="117:34">[<expr pos:start="117:32" pos:end="117:33"><name pos:start="117:32" pos:end="117:33">lj</name></expr>]</index></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <name pos:start="117:38" pos:end="117:42"><name pos:start="117:38" pos:end="117:39">dc</name><operator pos:start="117:40" pos:end="117:40">.</operator><name pos:start="117:41" pos:end="117:42">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:48"><expr pos:start="119:13" pos:end="119:47"><name pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:19">tcg_ctx</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:39">gen_opc_instr_start</name><index pos:start="119:40" pos:end="119:43">[<expr pos:start="119:41" pos:end="119:42"><name pos:start="119:41" pos:end="119:42">lj</name></expr>]</index></name> <operator pos:start="119:45" pos:end="119:45">=</operator> <literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:52"><expr pos:start="121:13" pos:end="121:51"><name pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:19">tcg_ctx</name><operator pos:start="121:20" pos:end="121:20">.</operator><name pos:start="121:21" pos:end="121:34">gen_opc_icount</name><index pos:start="121:35" pos:end="121:38">[<expr pos:start="121:36" pos:end="121:37"><name pos:start="121:36" pos:end="121:37">lj</name></expr>]</index></name> <operator pos:start="121:40" pos:end="121:40">=</operator> <name pos:start="121:42" pos:end="121:51">insn_count</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="127:9" pos:end="131:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:76">(<expr pos:start="127:13" pos:end="127:75"><call pos:start="127:13" pos:end="127:75"><name pos:start="127:13" pos:end="127:20">unlikely</name><argument_list pos:start="127:21" pos:end="127:75">(<argument pos:start="127:22" pos:end="127:74"><expr pos:start="127:22" pos:end="127:74"><call pos:start="127:22" pos:end="127:74"><name pos:start="127:22" pos:end="127:39">qemu_loglevel_mask</name><argument_list pos:start="127:40" pos:end="127:74">(<argument pos:start="127:41" pos:end="127:73"><expr pos:start="127:41" pos:end="127:73"><name pos:start="127:41" pos:end="127:53">CPU_LOG_TB_OP</name> <operator pos:start="127:55" pos:end="127:55">|</operator> <name pos:start="127:57" pos:end="127:73">CPU_LOG_TB_OP_OPT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:78" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:44">

            <expr_stmt pos:start="129:13" pos:end="129:44"><expr pos:start="129:13" pos:end="129:43"><call pos:start="129:13" pos:end="129:43"><name pos:start="129:13" pos:end="129:36">tcg_gen_debug_insn_start</name><argument_list pos:start="129:37" pos:end="129:43">(<argument pos:start="129:38" pos:end="129:42"><expr pos:start="129:38" pos:end="129:42"><name pos:start="129:38" pos:end="129:42"><name pos:start="129:38" pos:end="129:39">dc</name><operator pos:start="129:40" pos:end="129:40">.</operator><name pos:start="129:41" pos:end="129:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:26"><expr pos:start="135:9" pos:end="135:25"><operator pos:start="135:9" pos:end="135:10">++</operator><name pos:start="135:11" pos:end="135:25"><name pos:start="135:11" pos:end="135:12">dc</name><operator pos:start="135:13" pos:end="135:13">.</operator><name pos:start="135:14" pos:end="135:25">ccount_delta</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:69">(<expr pos:start="139:13" pos:end="139:68"><name pos:start="139:13" pos:end="139:22">insn_count</name> <operator pos:start="139:24" pos:end="139:24">+</operator> <literal type="number" pos:start="139:26" pos:end="139:26">1</literal> <operator pos:start="139:28" pos:end="139:29">==</operator> <name pos:start="139:31" pos:end="139:39">max_insns</name> <operator pos:start="139:41" pos:end="139:42">&amp;&amp;</operator> <operator pos:start="139:44" pos:end="139:44">(</operator><name pos:start="139:45" pos:end="139:54"><name pos:start="139:45" pos:end="139:46">tb</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:54">cflags</name></name> <operator pos:start="139:56" pos:end="139:56">&amp;</operator> <name pos:start="139:58" pos:end="139:67">CF_LAST_IO</name><operator pos:start="139:68" pos:end="139:68">)</operator></expr>)</condition> <block pos:start="139:71" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:27">

            <expr_stmt pos:start="141:13" pos:end="141:27"><expr pos:start="141:13" pos:end="141:26"><call pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:24">gen_io_start</name><argument_list pos:start="141:25" pos:end="141:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="147:9" pos:end="167:9"><if pos:start="147:9" pos:end="167:9">if <condition pos:start="147:12" pos:end="147:22">(<expr pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:14">dc</name><operator pos:start="147:15" pos:end="147:15">.</operator><name pos:start="147:16" pos:end="147:21">icount</name></name></expr>)</condition> <block pos:start="147:24" pos:end="167:9">{<block_content pos:start="149:13" pos:end="165:33">

            <decl_stmt pos:start="149:13" pos:end="149:40"><decl pos:start="149:13" pos:end="149:39"><type pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">int</name></type> <name pos:start="149:17" pos:end="149:21">label</name> <init pos:start="149:23" pos:end="149:39">= <expr pos:start="149:25" pos:end="149:39"><call pos:start="149:25" pos:end="149:39"><name pos:start="149:25" pos:end="149:37">gen_new_label</name><argument_list pos:start="149:38" pos:end="149:39">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:64"><expr pos:start="153:13" pos:end="153:63"><call pos:start="153:13" pos:end="153:63"><name pos:start="153:13" pos:end="153:28">tcg_gen_addi_i32</name><argument_list pos:start="153:29" pos:end="153:63">(<argument pos:start="153:30" pos:end="153:43"><expr pos:start="153:30" pos:end="153:43"><name pos:start="153:30" pos:end="153:43"><name pos:start="153:30" pos:end="153:31">dc</name><operator pos:start="153:32" pos:end="153:32">.</operator><name pos:start="153:33" pos:end="153:43">next_icount</name></name></expr></argument>, <argument pos:start="153:46" pos:end="153:59"><expr pos:start="153:46" pos:end="153:59"><name pos:start="153:46" pos:end="153:59"><name pos:start="153:46" pos:end="153:51">cpu_SR</name><index pos:start="153:52" pos:end="153:59">[<expr pos:start="153:53" pos:end="153:58"><name pos:start="153:53" pos:end="153:58">ICOUNT</name></expr>]</index></name></expr></argument>, <argument pos:start="153:62" pos:end="153:62"><expr pos:start="153:62" pos:end="153:62"><literal type="number" pos:start="153:62" pos:end="153:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:71"><expr pos:start="155:13" pos:end="155:70"><call pos:start="155:13" pos:end="155:70"><name pos:start="155:13" pos:end="155:31">tcg_gen_brcondi_i32</name><argument_list pos:start="155:32" pos:end="155:70">(<argument pos:start="155:33" pos:end="155:43"><expr pos:start="155:33" pos:end="155:43"><name pos:start="155:33" pos:end="155:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="155:46" pos:end="155:59"><expr pos:start="155:46" pos:end="155:59"><name pos:start="155:46" pos:end="155:59"><name pos:start="155:46" pos:end="155:47">dc</name><operator pos:start="155:48" pos:end="155:48">.</operator><name pos:start="155:49" pos:end="155:59">next_icount</name></name></expr></argument>, <argument pos:start="155:62" pos:end="155:62"><expr pos:start="155:62" pos:end="155:62"><literal type="number" pos:start="155:62" pos:end="155:62">0</literal></expr></argument>, <argument pos:start="155:65" pos:end="155:69"><expr pos:start="155:65" pos:end="155:69"><name pos:start="155:65" pos:end="155:69">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:60"><expr pos:start="157:13" pos:end="157:59"><call pos:start="157:13" pos:end="157:59"><name pos:start="157:13" pos:end="157:27">tcg_gen_mov_i32</name><argument_list pos:start="157:28" pos:end="157:59">(<argument pos:start="157:29" pos:end="157:42"><expr pos:start="157:29" pos:end="157:42"><name pos:start="157:29" pos:end="157:42"><name pos:start="157:29" pos:end="157:30">dc</name><operator pos:start="157:31" pos:end="157:31">.</operator><name pos:start="157:32" pos:end="157:42">next_icount</name></name></expr></argument>, <argument pos:start="157:45" pos:end="157:58"><expr pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:50">cpu_SR</name><index pos:start="157:51" pos:end="157:58">[<expr pos:start="157:52" pos:end="157:57"><name pos:start="157:52" pos:end="157:57">ICOUNT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="163:13"><if pos:start="159:13" pos:end="163:13">if <condition pos:start="159:16" pos:end="159:25">(<expr pos:start="159:17" pos:end="159:24"><name pos:start="159:17" pos:end="159:24"><name pos:start="159:17" pos:end="159:18">dc</name><operator pos:start="159:19" pos:end="159:19">.</operator><name pos:start="159:20" pos:end="159:24">debug</name></name></expr>)</condition> <block pos:start="159:27" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:56">

                <expr_stmt pos:start="161:17" pos:end="161:56"><expr pos:start="161:17" pos:end="161:55"><call pos:start="161:17" pos:end="161:55"><name pos:start="161:17" pos:end="161:35">gen_debug_exception</name><argument_list pos:start="161:36" pos:end="161:55">(<argument pos:start="161:37" pos:end="161:39"><expr pos:start="161:37" pos:end="161:39"><operator pos:start="161:37" pos:end="161:37">&amp;</operator><name pos:start="161:38" pos:end="161:39">dc</name></expr></argument>, <argument pos:start="161:42" pos:end="161:54"><expr pos:start="161:42" pos:end="161:54"><name pos:start="161:42" pos:end="161:54">DEBUGCAUSE_IC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:33"><expr pos:start="165:13" pos:end="165:32"><call pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:25">gen_set_label</name><argument_list pos:start="165:26" pos:end="165:32">(<argument pos:start="165:27" pos:end="165:31"><expr pos:start="165:27" pos:end="165:31"><name pos:start="165:27" pos:end="165:31">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="171:9" pos:end="175:9"><if pos:start="171:9" pos:end="175:9">if <condition pos:start="171:12" pos:end="171:21">(<expr pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:14">dc</name><operator pos:start="171:15" pos:end="171:15">.</operator><name pos:start="171:16" pos:end="171:20">debug</name></name></expr>)</condition> <block pos:start="171:23" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:39">

            <expr_stmt pos:start="173:13" pos:end="173:39"><expr pos:start="173:13" pos:end="173:38"><call pos:start="173:13" pos:end="173:38"><name pos:start="173:13" pos:end="173:28">gen_ibreak_check</name><argument_list pos:start="173:29" pos:end="173:38">(<argument pos:start="173:30" pos:end="173:32"><expr pos:start="173:30" pos:end="173:32"><name pos:start="173:30" pos:end="173:32">env</name></expr></argument>, <argument pos:start="173:35" pos:end="173:37"><expr pos:start="173:35" pos:end="173:37"><operator pos:start="173:35" pos:end="173:35">&amp;</operator><name pos:start="173:36" pos:end="173:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:36"><expr pos:start="179:9" pos:end="179:35"><call pos:start="179:9" pos:end="179:35"><name pos:start="179:9" pos:end="179:25">disas_xtensa_insn</name><argument_list pos:start="179:26" pos:end="179:35">(<argument pos:start="179:27" pos:end="179:29"><expr pos:start="179:27" pos:end="179:29"><name pos:start="179:27" pos:end="179:29">env</name></expr></argument>, <argument pos:start="179:32" pos:end="179:34"><expr pos:start="179:32" pos:end="179:34"><operator pos:start="179:32" pos:end="179:32">&amp;</operator><name pos:start="179:33" pos:end="179:34">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:21"><expr pos:start="181:9" pos:end="181:20"><operator pos:start="181:9" pos:end="181:10">++</operator><name pos:start="181:11" pos:end="181:20">insn_count</name></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:22">(<expr pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:14">dc</name><operator pos:start="183:15" pos:end="183:15">.</operator><name pos:start="183:16" pos:end="183:21">icount</name></name></expr>)</condition> <block pos:start="183:24" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:60">

            <expr_stmt pos:start="185:13" pos:end="185:60"><expr pos:start="185:13" pos:end="185:59"><call pos:start="185:13" pos:end="185:59"><name pos:start="185:13" pos:end="185:27">tcg_gen_mov_i32</name><argument_list pos:start="185:28" pos:end="185:59">(<argument pos:start="185:29" pos:end="185:42"><expr pos:start="185:29" pos:end="185:42"><name pos:start="185:29" pos:end="185:42"><name pos:start="185:29" pos:end="185:34">cpu_SR</name><index pos:start="185:35" pos:end="185:42">[<expr pos:start="185:36" pos:end="185:41"><name pos:start="185:36" pos:end="185:41">ICOUNT</name></expr>]</index></name></expr></argument>, <argument pos:start="185:45" pos:end="185:58"><expr pos:start="185:45" pos:end="185:58"><name pos:start="185:45" pos:end="185:58"><name pos:start="185:45" pos:end="185:46">dc</name><operator pos:start="185:47" pos:end="185:47">.</operator><name pos:start="185:48" pos:end="185:58">next_icount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="197:9"><if pos:start="189:9" pos:end="197:9">if <condition pos:start="189:12" pos:end="189:35">(<expr pos:start="189:13" pos:end="189:34"><name pos:start="189:13" pos:end="189:34"><name pos:start="189:13" pos:end="189:14">cs</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:34">singlestep_enabled</name></name></expr>)</condition> <block pos:start="189:37" pos:end="197:9">{<block_content pos:start="191:13" pos:end="195:18">

            <expr_stmt pos:start="191:13" pos:end="191:44"><expr pos:start="191:13" pos:end="191:43"><call pos:start="191:13" pos:end="191:43"><name pos:start="191:13" pos:end="191:28">tcg_gen_movi_i32</name><argument_list pos:start="191:29" pos:end="191:43">(<argument pos:start="191:30" pos:end="191:35"><expr pos:start="191:30" pos:end="191:35"><name pos:start="191:30" pos:end="191:35">cpu_pc</name></expr></argument>, <argument pos:start="191:38" pos:end="191:42"><expr pos:start="191:38" pos:end="191:42"><name pos:start="191:38" pos:end="191:42"><name pos:start="191:38" pos:end="191:39">dc</name><operator pos:start="191:40" pos:end="191:40">.</operator><name pos:start="191:41" pos:end="191:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:43"><expr pos:start="193:13" pos:end="193:42"><call pos:start="193:13" pos:end="193:42"><name pos:start="193:13" pos:end="193:25">gen_exception</name><argument_list pos:start="193:26" pos:end="193:42">(<argument pos:start="193:27" pos:end="193:29"><expr pos:start="193:27" pos:end="193:29"><operator pos:start="193:27" pos:end="193:27">&amp;</operator><name pos:start="193:28" pos:end="193:29">dc</name></expr></argument>, <argument pos:start="193:32" pos:end="193:41"><expr pos:start="193:32" pos:end="193:41"><name pos:start="193:32" pos:end="193:41">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="199:13" pos:end="207:46">(<expr pos:start="199:14" pos:end="207:45"><name pos:start="199:14" pos:end="199:22"><name pos:start="199:14" pos:end="199:15">dc</name><operator pos:start="199:16" pos:end="199:16">.</operator><name pos:start="199:17" pos:end="199:22">is_jmp</name></name> <operator pos:start="199:24" pos:end="199:25">==</operator> <name pos:start="199:27" pos:end="199:36">DISAS_NEXT</name> <operator pos:start="199:38" pos:end="199:39">&amp;&amp;</operator>

            <name pos:start="201:13" pos:end="201:22">insn_count</name> <operator pos:start="201:24" pos:end="201:24">&lt;</operator> <name pos:start="201:26" pos:end="201:34">max_insns</name> <operator pos:start="201:36" pos:end="201:37">&amp;&amp;</operator>

            <name pos:start="203:13" pos:end="203:17"><name pos:start="203:13" pos:end="203:14">dc</name><operator pos:start="203:15" pos:end="203:15">.</operator><name pos:start="203:16" pos:end="203:17">pc</name></name> <operator pos:start="203:19" pos:end="203:19">&lt;</operator> <name pos:start="203:21" pos:end="203:35">next_page_start</name> <operator pos:start="203:37" pos:end="203:38">&amp;&amp;</operator>

            <name pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:14">dc</name><operator pos:start="205:15" pos:end="205:15">.</operator><name pos:start="205:16" pos:end="205:17">pc</name></name> <operator pos:start="205:19" pos:end="205:19">+</operator> <call pos:start="205:21" pos:end="205:45"><name pos:start="205:21" pos:end="205:35">xtensa_insn_len</name><argument_list pos:start="205:36" pos:end="205:45">(<argument pos:start="205:37" pos:end="205:39"><expr pos:start="205:37" pos:end="205:39"><name pos:start="205:37" pos:end="205:39">env</name></expr></argument>, <argument pos:start="205:42" pos:end="205:44"><expr pos:start="205:42" pos:end="205:44"><operator pos:start="205:42" pos:end="205:42">&amp;</operator><name pos:start="205:43" pos:end="205:44">dc</name></expr></argument>)</argument_list></call> <operator pos:start="205:47" pos:end="205:48">&lt;=</operator> <name pos:start="205:50" pos:end="205:64">next_page_start</name> <operator pos:start="205:66" pos:end="205:67">&amp;&amp;</operator>

            <name pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:19">tcg_ctx</name><operator pos:start="207:20" pos:end="207:20">.</operator><name pos:start="207:21" pos:end="207:31">gen_opc_ptr</name></name> <operator pos:start="207:33" pos:end="207:33">&lt;</operator> <name pos:start="207:35" pos:end="207:45">gen_opc_end</name></expr>)</condition>;</do>



    <expr_stmt pos:start="211:5" pos:end="211:23"><expr pos:start="211:5" pos:end="211:22"><call pos:start="211:5" pos:end="211:22"><name pos:start="211:5" pos:end="211:17">reset_litbase</name><argument_list pos:start="211:18" pos:end="211:22">(<argument pos:start="211:19" pos:end="211:21"><expr pos:start="211:19" pos:end="211:21"><operator pos:start="211:19" pos:end="211:19">&amp;</operator><name pos:start="211:20" pos:end="211:21">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:27"><expr pos:start="213:5" pos:end="213:26"><call pos:start="213:5" pos:end="213:26"><name pos:start="213:5" pos:end="213:21">reset_sar_tracker</name><argument_list pos:start="213:22" pos:end="213:26">(<argument pos:start="213:23" pos:end="213:25"><expr pos:start="213:23" pos:end="213:25"><operator pos:start="213:23" pos:end="213:23">&amp;</operator><name pos:start="213:24" pos:end="213:25">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:18">(<expr pos:start="215:9" pos:end="215:17"><name pos:start="215:9" pos:end="215:17"><name pos:start="215:9" pos:end="215:10">dc</name><operator pos:start="215:11" pos:end="215:11">.</operator><name pos:start="215:12" pos:end="215:17">icount</name></name></expr>)</condition> <block pos:start="215:20" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:38">

        <expr_stmt pos:start="217:9" pos:end="217:38"><expr pos:start="217:9" pos:end="217:37"><call pos:start="217:9" pos:end="217:37"><name pos:start="217:9" pos:end="217:21">tcg_temp_free</name><argument_list pos:start="217:22" pos:end="217:37">(<argument pos:start="217:23" pos:end="217:36"><expr pos:start="217:23" pos:end="217:36"><name pos:start="217:23" pos:end="217:36"><name pos:start="217:23" pos:end="217:24">dc</name><operator pos:start="217:25" pos:end="217:25">.</operator><name pos:start="217:26" pos:end="217:36">next_icount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:32">(<expr pos:start="223:9" pos:end="223:31"><name pos:start="223:9" pos:end="223:18"><name pos:start="223:9" pos:end="223:10">tb</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:18">cflags</name></name> <operator pos:start="223:20" pos:end="223:20">&amp;</operator> <name pos:start="223:22" pos:end="223:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="223:34" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:21">

        <expr_stmt pos:start="225:9" pos:end="225:21"><expr pos:start="225:9" pos:end="225:20"><call pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:18">gen_io_end</name><argument_list pos:start="225:19" pos:end="225:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="235:5"><if pos:start="231:5" pos:end="235:5">if <condition pos:start="231:8" pos:end="231:32">(<expr pos:start="231:9" pos:end="231:31"><name pos:start="231:9" pos:end="231:17"><name pos:start="231:9" pos:end="231:10">dc</name><operator pos:start="231:11" pos:end="231:11">.</operator><name pos:start="231:12" pos:end="231:17">is_jmp</name></name> <operator pos:start="231:19" pos:end="231:20">==</operator> <name pos:start="231:22" pos:end="231:31">DISAS_NEXT</name></expr>)</condition> <block pos:start="231:34" pos:end="235:5">{<block_content pos:start="233:9" pos:end="233:33">

        <expr_stmt pos:start="233:9" pos:end="233:33"><expr pos:start="233:9" pos:end="233:32"><call pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:17">gen_jumpi</name><argument_list pos:start="233:18" pos:end="233:32">(<argument pos:start="233:19" pos:end="233:21"><expr pos:start="233:19" pos:end="233:21"><operator pos:start="233:19" pos:end="233:19">&amp;</operator><name pos:start="233:20" pos:end="233:21">dc</name></expr></argument>, <argument pos:start="233:24" pos:end="233:28"><expr pos:start="233:24" pos:end="233:28"><name pos:start="233:24" pos:end="233:28"><name pos:start="233:24" pos:end="233:25">dc</name><operator pos:start="233:26" pos:end="233:26">.</operator><name pos:start="233:27" pos:end="233:28">pc</name></name></expr></argument>, <argument pos:start="233:31" pos:end="233:31"><expr pos:start="233:31" pos:end="233:31"><literal type="number" pos:start="233:31" pos:end="233:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:31"><expr pos:start="237:5" pos:end="237:30"><call pos:start="237:5" pos:end="237:30"><name pos:start="237:5" pos:end="237:14">gen_tb_end</name><argument_list pos:start="237:15" pos:end="237:30">(<argument pos:start="237:16" pos:end="237:17"><expr pos:start="237:16" pos:end="237:17"><name pos:start="237:16" pos:end="237:17">tb</name></expr></argument>, <argument pos:start="237:20" pos:end="237:29"><expr pos:start="237:20" pos:end="237:29"><name pos:start="237:20" pos:end="237:29">insn_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="244:0"><expr pos:start="239:5" pos:end="239:39"><operator pos:start="239:5" pos:end="239:5">*</operator><name pos:start="239:6" pos:end="239:24"><name pos:start="239:6" pos:end="239:12">tcg_ctx</name><operator pos:start="239:13" pos:end="239:13">.</operator><name pos:start="239:14" pos:end="239:24">gen_opc_ptr</name></name> <operator pos:start="239:26" pos:end="239:26">=</operator> <name pos:start="239:28" pos:end="239:39">INDEX_op_end</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="243:1" pos:end="243:18">#<cpp:directive pos:start="243:2" pos:end="243:6">ifdef</cpp:directive> <name pos:start="243:8" pos:end="243:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="245:5" pos:end="258:0"><if pos:start="245:5" pos:end="258:0">if <condition pos:start="245:8" pos:end="245:46">(<expr pos:start="245:9" pos:end="245:45"><call pos:start="245:9" pos:end="245:45"><name pos:start="245:9" pos:end="245:26">qemu_loglevel_mask</name><argument_list pos:start="245:27" pos:end="245:45">(<argument pos:start="245:28" pos:end="245:44"><expr pos:start="245:28" pos:end="245:44"><name pos:start="245:28" pos:end="245:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="245:48" pos:end="258:0">{<block_content pos:start="247:9" pos:end="253:23">

        <expr_stmt pos:start="247:9" pos:end="247:39"><expr pos:start="247:9" pos:end="247:38"><call pos:start="247:9" pos:end="247:38"><name pos:start="247:9" pos:end="247:16">qemu_log</name><argument_list pos:start="247:17" pos:end="247:38">(<argument pos:start="247:18" pos:end="247:37"><expr pos:start="247:18" pos:end="247:37"><literal type="string" pos:start="247:18" pos:end="247:37">"----------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:54"><expr pos:start="249:9" pos:end="249:53"><call pos:start="249:9" pos:end="249:53"><name pos:start="249:9" pos:end="249:16">qemu_log</name><argument_list pos:start="249:17" pos:end="249:53">(<argument pos:start="249:18" pos:end="249:27"><expr pos:start="249:18" pos:end="249:27"><literal type="string" pos:start="249:18" pos:end="249:27">"IN: %s\n"</literal></expr></argument>, <argument pos:start="249:30" pos:end="249:52"><expr pos:start="249:30" pos:end="249:52"><call pos:start="249:30" pos:end="249:52"><name pos:start="249:30" pos:end="249:42">lookup_symbol</name><argument_list pos:start="249:43" pos:end="249:52">(<argument pos:start="249:44" pos:end="249:51"><expr pos:start="249:44" pos:end="249:51"><name pos:start="249:44" pos:end="249:51">pc_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:61"><expr pos:start="251:9" pos:end="251:60"><call pos:start="251:9" pos:end="251:60"><name pos:start="251:9" pos:end="251:24">log_target_disas</name><argument_list pos:start="251:25" pos:end="251:60">(<argument pos:start="251:26" pos:end="251:28"><expr pos:start="251:26" pos:end="251:28"><name pos:start="251:26" pos:end="251:28">env</name></expr></argument>, <argument pos:start="251:31" pos:end="251:38"><expr pos:start="251:31" pos:end="251:38"><name pos:start="251:31" pos:end="251:38">pc_start</name></expr></argument>, <argument pos:start="251:41" pos:end="251:56"><expr pos:start="251:41" pos:end="251:56"><name pos:start="251:41" pos:end="251:45"><name pos:start="251:41" pos:end="251:42">dc</name><operator pos:start="251:43" pos:end="251:43">.</operator><name pos:start="251:44" pos:end="251:45">pc</name></name> <operator pos:start="251:47" pos:end="251:47">-</operator> <name pos:start="251:49" pos:end="251:56">pc_start</name></expr></argument>, <argument pos:start="251:59" pos:end="251:59"><expr pos:start="251:59" pos:end="251:59"><literal type="number" pos:start="251:59" pos:end="251:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:23"><expr pos:start="253:9" pos:end="253:22"><call pos:start="253:9" pos:end="253:22"><name pos:start="253:9" pos:end="253:16">qemu_log</name><argument_list pos:start="253:17" pos:end="253:22">(<argument pos:start="253:18" pos:end="253:21"><expr pos:start="253:18" pos:end="253:21"><literal type="string" pos:start="253:18" pos:end="253:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="257:1" pos:end="257:6">#<cpp:directive pos:start="257:2" pos:end="257:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="259:5" pos:end="273:5"><if pos:start="259:5" pos:end="267:5">if <condition pos:start="259:8" pos:end="259:18">(<expr pos:start="259:9" pos:end="259:17"><name pos:start="259:9" pos:end="259:17">search_pc</name></expr>)</condition> <block pos:start="259:20" pos:end="267:5">{<block_content pos:start="261:9" pos:end="265:67">

        <expr_stmt pos:start="261:9" pos:end="261:54"><expr pos:start="261:9" pos:end="261:53"><name pos:start="261:9" pos:end="261:9">j</name> <operator pos:start="261:11" pos:end="261:11">=</operator> <name pos:start="261:13" pos:end="261:31"><name pos:start="261:13" pos:end="261:19">tcg_ctx</name><operator pos:start="261:20" pos:end="261:20">.</operator><name pos:start="261:21" pos:end="261:31">gen_opc_ptr</name></name> <operator pos:start="261:33" pos:end="261:33">-</operator> <name pos:start="261:35" pos:end="261:53"><name pos:start="261:35" pos:end="261:41">tcg_ctx</name><operator pos:start="261:42" pos:end="261:42">.</operator><name pos:start="261:43" pos:end="261:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="265:67"><expr pos:start="263:9" pos:end="265:66"><call pos:start="263:9" pos:end="265:66"><name pos:start="263:9" pos:end="263:14">memset</name><argument_list pos:start="263:15" pos:end="265:66">(<argument pos:start="263:16" pos:end="263:51"><expr pos:start="263:16" pos:end="263:51"><name pos:start="263:16" pos:end="263:42"><name pos:start="263:16" pos:end="263:22">tcg_ctx</name><operator pos:start="263:23" pos:end="263:23">.</operator><name pos:start="263:24" pos:end="263:42">gen_opc_instr_start</name></name> <operator pos:start="263:44" pos:end="263:44">+</operator> <name pos:start="263:46" pos:end="263:47">lj</name> <operator pos:start="263:49" pos:end="263:49">+</operator> <literal type="number" pos:start="263:51" pos:end="263:51">1</literal></expr></argument>, <argument pos:start="263:54" pos:end="263:54"><expr pos:start="263:54" pos:end="263:54"><literal type="number" pos:start="263:54" pos:end="263:54">0</literal></expr></argument>,

                <argument pos:start="265:17" pos:end="265:65"><expr pos:start="265:17" pos:end="265:65"><operator pos:start="265:17" pos:end="265:17">(</operator><name pos:start="265:18" pos:end="265:18">j</name> <operator pos:start="265:20" pos:end="265:20">-</operator> <name pos:start="265:22" pos:end="265:23">lj</name><operator pos:start="265:24" pos:end="265:24">)</operator> <operator pos:start="265:26" pos:end="265:26">*</operator> <sizeof pos:start="265:28" pos:end="265:65">sizeof<argument_list pos:start="265:34" pos:end="265:65">(<argument pos:start="265:35" pos:end="265:64"><expr pos:start="265:35" pos:end="265:64"><name pos:start="265:35" pos:end="265:64"><name pos:start="265:35" pos:end="265:41">tcg_ctx</name><operator pos:start="265:42" pos:end="265:42">.</operator><name pos:start="265:43" pos:end="265:61">gen_opc_instr_start</name><index pos:start="265:62" pos:end="265:64">[<expr pos:start="265:63" pos:end="265:63"><literal type="number" pos:start="265:63" pos:end="265:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="267:7" pos:end="273:5">else <block pos:start="267:12" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:32">

        <expr_stmt pos:start="269:9" pos:end="269:36"><expr pos:start="269:9" pos:end="269:35"><name pos:start="269:9" pos:end="269:16"><name pos:start="269:9" pos:end="269:10">tb</name><operator pos:start="269:11" pos:end="269:12">-&gt;</operator><name pos:start="269:13" pos:end="269:16">size</name></name> <operator pos:start="269:18" pos:end="269:18">=</operator> <name pos:start="269:20" pos:end="269:24"><name pos:start="269:20" pos:end="269:21">dc</name><operator pos:start="269:22" pos:end="269:22">.</operator><name pos:start="269:23" pos:end="269:24">pc</name></name> <operator pos:start="269:26" pos:end="269:26">-</operator> <name pos:start="269:28" pos:end="269:35">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:32"><expr pos:start="271:9" pos:end="271:31"><name pos:start="271:9" pos:end="271:18"><name pos:start="271:9" pos:end="271:10">tb</name><operator pos:start="271:11" pos:end="271:12">-&gt;</operator><name pos:start="271:13" pos:end="271:18">icount</name></name> <operator pos:start="271:20" pos:end="271:20">=</operator> <name pos:start="271:22" pos:end="271:31">insn_count</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
