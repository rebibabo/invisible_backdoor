<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9336.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">virtio_device_realize</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="52:1">{<block_content pos:start="5:5" pos:end="50:60">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:43">= <expr pos:start="5:26" pos:end="5:43"><call pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">VirtioDeviceClass</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">vdc</name> <init pos:start="7:28" pos:end="7:57">= <expr pos:start="7:30" pos:end="7:57"><call pos:start="7:30" pos:end="7:57"><name pos:start="7:30" pos:end="7:52">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="7:53" pos:end="7:57">(<argument pos:start="7:54" pos:end="7:56"><expr pos:start="7:54" pos:end="7:56"><name pos:start="7:54" pos:end="7:56">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:65">/* Devices should either use vmsd or the load/save methods */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:36">(<argument pos:start="15:12" pos:end="15:35"><expr pos:start="15:12" pos:end="15:35"><operator pos:start="15:12" pos:end="15:12">!</operator><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">vdc</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">vmsd</name></name> <operator pos:start="15:23" pos:end="15:24">||</operator> <operator pos:start="15:26" pos:end="15:26">!</operator><name pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:29">vdc</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">load</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:11">vdc</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:20">realize</name></name> <operator pos:start="19:22" pos:end="19:23">!=</operator> <name pos:start="19:25" pos:end="19:28">NULL</name></expr>)</condition> <block pos:start="19:31" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">vdc</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:20">realize</name></name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">dev</name></expr></argument>, <argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:30">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:24">(<expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:15">err</name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <name pos:start="23:20" pos:end="23:23">NULL</name></expr>)</condition> <block pos:start="23:26" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:19">

            <expr_stmt pos:start="25:13" pos:end="25:39"><expr pos:start="25:13" pos:end="25:38"><call pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:27">error_propagate</name><argument_list pos:start="25:28" pos:end="25:38">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">errp</name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:29">virtio_bus_device_plugged</name><argument_list pos:start="35:30" pos:end="35:41">(<argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">vdev</name></expr></argument>, <argument pos:start="35:37" pos:end="35:40"><expr pos:start="35:37" pos:end="35:40"><operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:40">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="44:5"><if pos:start="37:5" pos:end="44:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:14">!=</operator> <name pos:start="37:16" pos:end="37:19">NULL</name></expr>)</condition> <block pos:start="37:22" pos:end="44:5">{<block_content pos:start="39:9" pos:end="42:15">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><call pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:23">error_propagate</name><argument_list pos:start="39:24" pos:end="39:34">(<argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">errp</name></expr></argument>, <argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="42:9" pos:end="42:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="48:5" pos:end="48:58"><expr pos:start="48:5" pos:end="48:57"><name pos:start="48:5" pos:end="48:25"><name pos:start="48:5" pos:end="48:8">vdev</name><operator pos:start="48:9" pos:end="48:10">-&gt;</operator><name pos:start="48:11" pos:end="48:18">listener</name><operator pos:start="48:19" pos:end="48:19">.</operator><name pos:start="48:20" pos:end="48:25">commit</name></name> <operator pos:start="48:27" pos:end="48:27">=</operator> <name pos:start="48:29" pos:end="48:57">virtio_memory_listener_commit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="50:5" pos:end="50:60"><expr pos:start="50:5" pos:end="50:59"><call pos:start="50:5" pos:end="50:59"><name pos:start="50:5" pos:end="50:28">memory_listener_register</name><argument_list pos:start="50:29" pos:end="50:59">(<argument pos:start="50:30" pos:end="50:44"><expr pos:start="50:30" pos:end="50:44"><operator pos:start="50:30" pos:end="50:30">&amp;</operator><name pos:start="50:31" pos:end="50:44"><name pos:start="50:31" pos:end="50:34">vdev</name><operator pos:start="50:35" pos:end="50:36">-&gt;</operator><name pos:start="50:37" pos:end="50:44">listener</name></name></expr></argument>, <argument pos:start="50:47" pos:end="50:58"><expr pos:start="50:47" pos:end="50:58"><name pos:start="50:47" pos:end="50:58"><name pos:start="50:47" pos:end="50:50">vdev</name><operator pos:start="50:51" pos:end="50:52">-&gt;</operator><name pos:start="50:53" pos:end="50:58">dma_as</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
