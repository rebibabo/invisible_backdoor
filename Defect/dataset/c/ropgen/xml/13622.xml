<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13622.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">audio_init</name> <parameter_list pos:start="1:24" pos:end="1:55">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:30">PCIBus</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:39">pci_bus</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">qemu_irq</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">pic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">soundhw</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">audio_enabled</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="15:5">for <control pos:start="11:9" pos:end="11:53">(<init pos:start="11:10" pos:end="11:21"><expr pos:start="11:10" pos:end="11:20"><name pos:start="11:10" pos:end="11:10">c</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:20">soundhw</name></expr>;</init> <condition pos:start="11:23" pos:end="11:48"><expr pos:start="11:23" pos:end="11:47"><operator pos:start="11:23" pos:end="11:23">!</operator><name pos:start="11:24" pos:end="11:36">audio_enabled</name> <operator pos:start="11:38" pos:end="11:39">&amp;&amp;</operator> <name pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:41">c</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:47">name</name></name></expr>;</condition> <incr pos:start="11:50" pos:end="11:52"><expr pos:start="11:50" pos:end="11:52"><operator pos:start="11:50" pos:end="11:51">++</operator><name pos:start="11:52" pos:end="11:52">c</name></expr></incr>)</control> <block pos:start="11:55" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:35">

        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:21">audio_enabled</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:25">c</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">enabled</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="19:5" pos:end="55:5"><if pos:start="19:5" pos:end="55:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:21">audio_enabled</name></expr>)</condition> <block pos:start="19:24" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:9">

        <decl_stmt pos:start="21:9" pos:end="21:22"><decl pos:start="21:9" pos:end="21:21"><type pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:18">AudioState</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:21">s</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:9">s</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:20">AUD_init</name> <argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="53:9"><if pos:start="27:9" pos:end="53:9">if <condition pos:start="27:12" pos:end="27:14">(<expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">s</name></expr>)</condition> <block pos:start="27:16" pos:end="53:9">{<block_content pos:start="29:13" pos:end="51:13">

            <for pos:start="29:13" pos:end="51:13">for <control pos:start="29:17" pos:end="29:43">(<init pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:18">c</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:28">soundhw</name></expr>;</init> <condition pos:start="29:31" pos:end="29:38"><expr pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:31">c</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">name</name></name></expr>;</condition> <incr pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><operator pos:start="29:40" pos:end="29:41">++</operator><name pos:start="29:42" pos:end="29:42">c</name></expr></incr>)</control> <block pos:start="29:45" pos:end="51:13">{<block_content pos:start="31:17" pos:end="49:17">

                <if_stmt pos:start="31:17" pos:end="49:17"><if pos:start="31:17" pos:end="49:17">if <condition pos:start="31:20" pos:end="31:31">(<expr pos:start="31:21" pos:end="31:30"><name pos:start="31:21" pos:end="31:30"><name pos:start="31:21" pos:end="31:21">c</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:30">enabled</name></name></expr>)</condition> <block pos:start="31:33" pos:end="49:17">{<block_content pos:start="33:21" pos:end="47:21">

                    <if_stmt pos:start="33:21" pos:end="47:21"><if pos:start="33:21" pos:end="37:21">if <condition pos:start="33:24" pos:end="33:31">(<expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:25">c</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">isa</name></name></expr>)</condition> <block pos:start="33:33" pos:end="37:21">{<block_content pos:start="35:25" pos:end="35:50">

                        <expr_stmt pos:start="35:25" pos:end="35:50"><expr pos:start="35:25" pos:end="35:49"><call pos:start="35:25" pos:end="35:49"><name pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:25">c</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:31">init</name><operator pos:start="35:32" pos:end="35:32">.</operator><name pos:start="35:33" pos:end="35:40">init_isa</name></name> <argument_list pos:start="35:42" pos:end="35:49">(<argument pos:start="35:43" pos:end="35:43"><expr pos:start="35:43" pos:end="35:43"><name pos:start="35:43" pos:end="35:43">s</name></expr></argument>, <argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <else pos:start="39:21" pos:end="47:21">else <block pos:start="39:26" pos:end="47:21">{<block_content pos:start="41:25" pos:end="45:25">

                        <if_stmt pos:start="41:25" pos:end="45:25"><if pos:start="41:25" pos:end="45:25">if <condition pos:start="41:28" pos:end="41:36">(<expr pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:35">pci_bus</name></expr>)</condition> <block pos:start="41:38" pos:end="45:25">{<block_content pos:start="43:29" pos:end="43:58">

                            <expr_stmt pos:start="43:29" pos:end="43:58"><expr pos:start="43:29" pos:end="43:57"><call pos:start="43:29" pos:end="43:57"><name pos:start="43:29" pos:end="43:44"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:35">init</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:44">init_pci</name></name> <argument_list pos:start="43:46" pos:end="43:57">(<argument pos:start="43:47" pos:end="43:53"><expr pos:start="43:47" pos:end="43:53"><name pos:start="43:47" pos:end="43:53">pci_bus</name></expr></argument>, <argument pos:start="43:56" pos:end="43:56"><expr pos:start="43:56" pos:end="43:56"><name pos:start="43:56" pos:end="43:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
