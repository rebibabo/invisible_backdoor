<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/290.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">sd_write_data</name><parameter_list pos:start="1:19" pos:end="1:46">(<parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:26">SDState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:30">sd</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:39">uint8_t</name></type> <name pos:start="1:41" pos:end="1:45">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:64">(<expr pos:start="9:9" pos:end="9:63"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:11">sd</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:17">bdrv</name></name> <operator pos:start="9:19" pos:end="9:20">||</operator> <operator pos:start="9:22" pos:end="9:22">!</operator><call pos:start="9:23" pos:end="9:48"><name pos:start="9:23" pos:end="9:38">bdrv_is_inserted</name><argument_list pos:start="9:39" pos:end="9:48">(<argument pos:start="9:40" pos:end="9:47"><expr pos:start="9:40" pos:end="9:47"><name pos:start="9:40" pos:end="9:47"><name pos:start="9:40" pos:end="9:41">sd</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:47">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:50" pos:end="9:51">||</operator> <operator pos:start="9:53" pos:end="9:53">!</operator><name pos:start="9:54" pos:end="9:63"><name pos:start="9:54" pos:end="9:55">sd</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:63">enable</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:10">sd</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">state</name></name> <operator pos:start="15:19" pos:end="15:20">!=</operator> <name pos:start="15:22" pos:end="15:43">sd_receivingdata_state</name></expr>)</condition> <block pos:start="15:46" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:72"><expr pos:start="17:9" pos:end="17:71"><call pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:71">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:70"><expr pos:start="17:25" pos:end="17:70"><literal type="string" pos:start="17:25" pos:end="17:70">"sd_write_data: not in Receiving-Data state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:15"><if pos:start="25:5" pos:end="27:15">if <condition pos:start="25:8" pos:end="25:57">(<expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:10">sd</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:23">card_status</name></name> <operator pos:start="25:25" pos:end="25:25">&amp;</operator> <operator pos:start="25:27" pos:end="25:27">(</operator><name pos:start="25:28" pos:end="25:40">ADDRESS_ERROR</name> <operator pos:start="25:42" pos:end="25:42">|</operator> <name pos:start="25:44" pos:end="25:55">WP_VIOLATION</name><operator pos:start="25:56" pos:end="25:56">)</operator></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return></block_content></block></if></if_stmt>



    <switch pos:start="31:5" pos:end="243:5">switch <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:14">sd</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:27">current_cmd</name></name></expr>)</condition> <block pos:start="31:30" pos:end="243:5">{<block_content pos:start="33:5" pos:end="241:14">

    <case pos:start="33:5" pos:end="33:12">case <expr pos:start="33:10" pos:end="33:11"><literal type="number" pos:start="33:10" pos:end="33:11">24</literal></expr>:</case>	<comment type="block" pos:start="33:17" pos:end="33:48">/* CMD24:  WRITE_SINGLE_BLOCK */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:10">sd</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:16">data</name><index pos:start="35:17" pos:end="35:36">[<expr pos:start="35:18" pos:end="35:35"><name pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:19">sd</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:32">data_offset</name></name> <operator pos:start="35:34" pos:end="35:35">++</operator></expr>]</index></name> <operator pos:start="35:38" pos:end="35:38">=</operator> <name pos:start="35:40" pos:end="35:44">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="53:9"><if pos:start="37:9" pos:end="53:9">if <condition pos:start="37:12" pos:end="37:43">(<expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:14">sd</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:27">data_offset</name></name> <operator pos:start="37:29" pos:end="37:30">&gt;=</operator> <name pos:start="37:32" pos:end="37:42"><name pos:start="37:32" pos:end="37:33">sd</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">blk_len</name></name></expr>)</condition> <block pos:start="37:45" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:42">

            <comment type="block" pos:start="39:13" pos:end="39:51">/* TODO: Check CRC before committing */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:45"><expr pos:start="41:13" pos:end="41:44"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">sd</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">state</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:61"><expr pos:start="43:13" pos:end="43:60"><call pos:start="43:13" pos:end="43:60"><name pos:start="43:13" pos:end="43:27">BLK_WRITE_BLOCK</name><argument_list pos:start="43:28" pos:end="43:60">(<argument pos:start="43:29" pos:end="43:42"><expr pos:start="43:29" pos:end="43:42"><name pos:start="43:29" pos:end="43:42"><name pos:start="43:29" pos:end="43:30">sd</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:42">data_start</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:59"><expr pos:start="43:45" pos:end="43:59"><name pos:start="43:45" pos:end="43:59"><name pos:start="43:45" pos:end="43:46">sd</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:59">data_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:14">sd</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:27">blk_written</name></name> <operator pos:start="45:29" pos:end="45:30">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:14">sd</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:19">csd</name><index pos:start="47:20" pos:end="47:23">[<expr pos:start="47:21" pos:end="47:22"><literal type="number" pos:start="47:21" pos:end="47:22">14</literal></expr>]</index></name> <operator pos:start="47:25" pos:end="47:26">|=</operator> <literal type="number" pos:start="47:28" pos:end="47:31">0x40</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:14">sd</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">state</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:41">sd_transfer_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <case pos:start="59:5" pos:end="59:12">case <expr pos:start="59:10" pos:end="59:11"><literal type="number" pos:start="59:10" pos:end="59:11">25</literal></expr>:</case>	<comment type="block" pos:start="59:17" pos:end="59:50">/* CMD25:  WRITE_MULTIPLE_BLOCK */</comment>

        <if_stmt pos:start="61:9" pos:end="81:9"><if pos:start="61:9" pos:end="81:9">if <condition pos:start="61:12" pos:end="61:33">(<expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:14">sd</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:27">data_offset</name></name> <operator pos:start="61:29" pos:end="61:30">==</operator> <literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr>)</condition> <block pos:start="61:35" pos:end="81:9">{<block_content pos:start="65:13" pos:end="79:13">

            <comment type="block" pos:start="63:13" pos:end="63:71">/* Start of the block - let's check the address is valid */</comment>

            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:56">(<expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:18">sd</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:30">data_start</name></name> <operator pos:start="65:32" pos:end="65:32">+</operator> <name pos:start="65:34" pos:end="65:44"><name pos:start="65:34" pos:end="65:35">sd</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:44">blk_len</name></name> <operator pos:start="65:46" pos:end="65:46">&gt;</operator> <name pos:start="65:48" pos:end="65:55"><name pos:start="65:48" pos:end="65:49">sd</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:55">size</name></name></expr>)</condition> <block pos:start="65:58" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:22">

                <expr_stmt pos:start="67:17" pos:end="67:49"><expr pos:start="67:17" pos:end="67:48"><name pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:18">sd</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:31">card_status</name></name> <operator pos:start="67:33" pos:end="67:34">|=</operator> <name pos:start="67:36" pos:end="67:48">ADDRESS_ERROR</name></expr>;</expr_stmt>

                <break pos:start="69:17" pos:end="69:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:47">(<expr pos:start="73:17" pos:end="73:46"><call pos:start="73:17" pos:end="73:46"><name pos:start="73:17" pos:end="73:26">sd_wp_addr</name><argument_list pos:start="73:27" pos:end="73:46">(<argument pos:start="73:28" pos:end="73:29"><expr pos:start="73:28" pos:end="73:29"><name pos:start="73:28" pos:end="73:29">sd</name></expr></argument>, <argument pos:start="73:32" pos:end="73:45"><expr pos:start="73:32" pos:end="73:45"><name pos:start="73:32" pos:end="73:45"><name pos:start="73:32" pos:end="73:33">sd</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:45">data_start</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:49" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:22">

                <expr_stmt pos:start="75:17" pos:end="75:48"><expr pos:start="75:17" pos:end="75:47"><name pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:18">sd</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:31">card_status</name></name> <operator pos:start="75:33" pos:end="75:34">|=</operator> <name pos:start="75:36" pos:end="75:47">WP_VIOLATION</name></expr>;</expr_stmt>

                <break pos:start="77:17" pos:end="77:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:10">sd</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:16">data</name><index pos:start="83:17" pos:end="83:35">[<expr pos:start="83:18" pos:end="83:34"><name pos:start="83:18" pos:end="83:32"><name pos:start="83:18" pos:end="83:19">sd</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:32">data_offset</name></name><operator pos:start="83:33" pos:end="83:34">++</operator></expr>]</index></name> <operator pos:start="83:37" pos:end="83:37">=</operator> <name pos:start="83:39" pos:end="83:43">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="107:9"><if pos:start="85:9" pos:end="107:9">if <condition pos:start="85:12" pos:end="85:43">(<expr pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:14">sd</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:27">data_offset</name></name> <operator pos:start="85:29" pos:end="85:30">&gt;=</operator> <name pos:start="85:32" pos:end="85:42"><name pos:start="85:32" pos:end="85:33">sd</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:42">blk_len</name></name></expr>)</condition> <block pos:start="85:45" pos:end="107:9">{<block_content pos:start="89:13" pos:end="105:47">

            <comment type="block" pos:start="87:13" pos:end="87:51">/* TODO: Check CRC before committing */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:45"><expr pos:start="89:13" pos:end="89:44"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">sd</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:21">state</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:61"><expr pos:start="91:13" pos:end="91:60"><call pos:start="91:13" pos:end="91:60"><name pos:start="91:13" pos:end="91:27">BLK_WRITE_BLOCK</name><argument_list pos:start="91:28" pos:end="91:60">(<argument pos:start="91:29" pos:end="91:42"><expr pos:start="91:29" pos:end="91:42"><name pos:start="91:29" pos:end="91:42"><name pos:start="91:29" pos:end="91:30">sd</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:42">data_start</name></name></expr></argument>, <argument pos:start="91:45" pos:end="91:59"><expr pos:start="91:45" pos:end="91:59"><name pos:start="91:45" pos:end="91:59"><name pos:start="91:45" pos:end="91:46">sd</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:59">data_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:14">sd</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:27">blk_written</name></name><operator pos:start="93:28" pos:end="93:29">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:14">sd</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:26">data_start</name></name> <operator pos:start="95:28" pos:end="95:29">+=</operator> <name pos:start="95:31" pos:end="95:41"><name pos:start="95:31" pos:end="95:32">sd</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:41">blk_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:32"><expr pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:27"><name pos:start="97:13" pos:end="97:14">sd</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:27">data_offset</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:32"><expr pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:14">sd</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:19">csd</name><index pos:start="99:20" pos:end="99:23">[<expr pos:start="99:21" pos:end="99:22"><literal type="number" pos:start="99:21" pos:end="99:22">14</literal></expr>]</index></name> <operator pos:start="99:25" pos:end="99:26">|=</operator> <literal type="number" pos:start="99:28" pos:end="99:31">0x40</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="103:13" pos:end="103:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:14">sd</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:21">state</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:46">sd_receivingdata_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>



    <case pos:start="113:5" pos:end="113:12">case <expr pos:start="113:10" pos:end="113:11"><literal type="number" pos:start="113:10" pos:end="113:11">26</literal></expr>:</case>	<comment type="block" pos:start="113:17" pos:end="113:41">/* CMD26:  PROGRAM_CID */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:45"><expr pos:start="115:9" pos:end="115:44"><name pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:10">sd</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:16">data</name><index pos:start="115:17" pos:end="115:36">[<expr pos:start="115:18" pos:end="115:35"><name pos:start="115:18" pos:end="115:32"><name pos:start="115:18" pos:end="115:19">sd</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:32">data_offset</name></name> <operator pos:start="115:34" pos:end="115:35">++</operator></expr>]</index></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <name pos:start="115:40" pos:end="115:44">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="145:9"><if pos:start="117:9" pos:end="145:9">if <condition pos:start="117:12" pos:end="117:47">(<expr pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:14">sd</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:27">data_offset</name></name> <operator pos:start="117:29" pos:end="117:30">&gt;=</operator> <sizeof pos:start="117:32" pos:end="117:46">sizeof<argument_list pos:start="117:38" pos:end="117:46">(<argument pos:start="117:39" pos:end="117:45"><expr pos:start="117:39" pos:end="117:45"><name pos:start="117:39" pos:end="117:45"><name pos:start="117:39" pos:end="117:40">sd</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:45">cid</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="117:49" pos:end="145:9">{<block_content pos:start="121:13" pos:end="143:42">

            <comment type="block" pos:start="119:13" pos:end="119:51">/* TODO: Check CRC before committing */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:45"><expr pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:14">sd</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:21">state</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:44">sd_programming_state</name></expr>;</expr_stmt>

            <for pos:start="123:13" pos:end="127:57">for <control pos:start="123:17" pos:end="123:50">(<init pos:start="123:18" pos:end="123:23"><expr pos:start="123:18" pos:end="123:22"><name pos:start="123:18" pos:end="123:18">i</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <literal type="number" pos:start="123:22" pos:end="123:22">0</literal></expr>;</init> <condition pos:start="123:25" pos:end="123:44"><expr pos:start="123:25" pos:end="123:43"><name pos:start="123:25" pos:end="123:25">i</name> <operator pos:start="123:27" pos:end="123:27">&lt;</operator> <sizeof pos:start="123:29" pos:end="123:43">sizeof<argument_list pos:start="123:35" pos:end="123:43">(<argument pos:start="123:36" pos:end="123:42"><expr pos:start="123:36" pos:end="123:42"><name pos:start="123:36" pos:end="123:42"><name pos:start="123:36" pos:end="123:37">sd</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:42">cid</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="123:46" pos:end="123:49"><expr pos:start="123:46" pos:end="123:49"><name pos:start="123:46" pos:end="123:46">i</name> <operator pos:start="123:48" pos:end="123:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:17" pos:end="127:57"><block_content pos:start="125:17" pos:end="127:57">

                <if_stmt pos:start="125:17" pos:end="127:57"><if pos:start="125:17" pos:end="127:57">if <condition pos:start="125:20" pos:end="125:55">(<expr pos:start="125:21" pos:end="125:54"><operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:31"><name pos:start="125:22" pos:end="125:23">sd</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:28">cid</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">i</name></expr>]</index></name> <operator pos:start="125:33" pos:end="125:33">|</operator> <literal type="number" pos:start="125:35" pos:end="125:38">0x00</literal><operator pos:start="125:39" pos:end="125:39">)</operator> <operator pos:start="125:41" pos:end="125:42">!=</operator> <name pos:start="125:44" pos:end="125:54"><name pos:start="125:44" pos:end="125:45">sd</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:51">data</name><index pos:start="125:52" pos:end="125:54">[<expr pos:start="125:53" pos:end="125:53"><name pos:start="125:53" pos:end="125:53">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:57"><block_content pos:start="127:21" pos:end="127:57">

                    <expr_stmt pos:start="127:21" pos:end="127:57"><expr pos:start="127:21" pos:end="127:56"><name pos:start="127:21" pos:end="127:35"><name pos:start="127:21" pos:end="127:22">sd</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:35">card_status</name></name> <operator pos:start="127:37" pos:end="127:38">|=</operator> <name pos:start="127:40" pos:end="127:56">CID_CSD_OVERWRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



            <if_stmt pos:start="131:13" pos:end="139:17"><if pos:start="131:13" pos:end="139:17">if <condition pos:start="131:16" pos:end="131:55">(<expr pos:start="131:17" pos:end="131:54"><operator pos:start="131:17" pos:end="131:17">!</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:33"><name pos:start="131:19" pos:end="131:20">sd</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:33">card_status</name></name> <operator pos:start="131:35" pos:end="131:35">&amp;</operator> <name pos:start="131:37" pos:end="131:53">CID_CSD_OVERWRITE</name><operator pos:start="131:54" pos:end="131:54">)</operator></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="139:17"><block_content pos:start="133:17" pos:end="139:17">

                <for pos:start="133:17" pos:end="139:17">for <control pos:start="133:21" pos:end="133:54">(<init pos:start="133:22" pos:end="133:27"><expr pos:start="133:22" pos:end="133:26"><name pos:start="133:22" pos:end="133:22">i</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal></expr>;</init> <condition pos:start="133:29" pos:end="133:48"><expr pos:start="133:29" pos:end="133:47"><name pos:start="133:29" pos:end="133:29">i</name> <operator pos:start="133:31" pos:end="133:31">&lt;</operator> <sizeof pos:start="133:33" pos:end="133:47">sizeof<argument_list pos:start="133:39" pos:end="133:47">(<argument pos:start="133:40" pos:end="133:46"><expr pos:start="133:40" pos:end="133:46"><name pos:start="133:40" pos:end="133:46"><name pos:start="133:40" pos:end="133:41">sd</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:46">cid</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="133:50" pos:end="133:53"><expr pos:start="133:50" pos:end="133:53"><name pos:start="133:50" pos:end="133:50">i</name> <operator pos:start="133:52" pos:end="133:53">++</operator></expr></incr>)</control> <block pos:start="133:56" pos:end="139:17">{<block_content pos:start="135:21" pos:end="137:46">

                    <expr_stmt pos:start="135:21" pos:end="135:39"><expr pos:start="135:21" pos:end="135:38"><name pos:start="135:21" pos:end="135:30"><name pos:start="135:21" pos:end="135:22">sd</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:27">cid</name><index pos:start="135:28" pos:end="135:30">[<expr pos:start="135:29" pos:end="135:29"><name pos:start="135:29" pos:end="135:29">i</name></expr>]</index></name> <operator pos:start="135:32" pos:end="135:33">|=</operator> <literal type="number" pos:start="135:35" pos:end="135:38">0x00</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:46"><expr pos:start="137:21" pos:end="137:45"><name pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:22">sd</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:27">cid</name><index pos:start="137:28" pos:end="137:30">[<expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">i</name></expr>]</index></name> <operator pos:start="137:32" pos:end="137:33">&amp;=</operator> <name pos:start="137:35" pos:end="137:45"><name pos:start="137:35" pos:end="137:36">sd</name><operator pos:start="137:37" pos:end="137:38">-&gt;</operator><name pos:start="137:39" pos:end="137:42">data</name><index pos:start="137:43" pos:end="137:45">[<expr pos:start="137:44" pos:end="137:44"><name pos:start="137:44" pos:end="137:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></if></if_stmt>

            <comment type="block" pos:start="141:13" pos:end="141:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:42"><expr pos:start="143:13" pos:end="143:41"><name pos:start="143:13" pos:end="143:21"><name pos:start="143:13" pos:end="143:14">sd</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">state</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <name pos:start="143:25" pos:end="143:41">sd_transfer_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>



    <case pos:start="151:5" pos:end="151:12">case <expr pos:start="151:10" pos:end="151:11"><literal type="number" pos:start="151:10" pos:end="151:11">27</literal></expr>:</case>	<comment type="block" pos:start="151:17" pos:end="151:41">/* CMD27:  PROGRAM_CSD */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:45"><expr pos:start="153:9" pos:end="153:44"><name pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:10">sd</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:16">data</name><index pos:start="153:17" pos:end="153:36">[<expr pos:start="153:18" pos:end="153:35"><name pos:start="153:18" pos:end="153:32"><name pos:start="153:18" pos:end="153:19">sd</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:32">data_offset</name></name> <operator pos:start="153:34" pos:end="153:35">++</operator></expr>]</index></name> <operator pos:start="153:38" pos:end="153:38">=</operator> <name pos:start="153:40" pos:end="153:44">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="193:9"><if pos:start="155:9" pos:end="193:9">if <condition pos:start="155:12" pos:end="155:47">(<expr pos:start="155:13" pos:end="155:46"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:14">sd</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:27">data_offset</name></name> <operator pos:start="155:29" pos:end="155:30">&gt;=</operator> <sizeof pos:start="155:32" pos:end="155:46">sizeof<argument_list pos:start="155:38" pos:end="155:46">(<argument pos:start="155:39" pos:end="155:45"><expr pos:start="155:39" pos:end="155:45"><name pos:start="155:39" pos:end="155:45"><name pos:start="155:39" pos:end="155:40">sd</name><operator pos:start="155:41" pos:end="155:42">-&gt;</operator><name pos:start="155:43" pos:end="155:45">csd</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="155:49" pos:end="193:9">{<block_content pos:start="159:13" pos:end="191:42">

            <comment type="block" pos:start="157:13" pos:end="157:51">/* TODO: Check CRC before committing */</comment>

            <expr_stmt pos:start="159:13" pos:end="159:45"><expr pos:start="159:13" pos:end="159:44"><name pos:start="159:13" pos:end="159:21"><name pos:start="159:13" pos:end="159:14">sd</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:21">state</name></name> <operator pos:start="159:23" pos:end="159:23">=</operator> <name pos:start="159:25" pos:end="159:44">sd_programming_state</name></expr>;</expr_stmt>

            <for pos:start="161:13" pos:end="167:57">for <control pos:start="161:17" pos:end="161:50">(<init pos:start="161:18" pos:end="161:23"><expr pos:start="161:18" pos:end="161:22"><name pos:start="161:18" pos:end="161:18">i</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</init> <condition pos:start="161:25" pos:end="161:44"><expr pos:start="161:25" pos:end="161:43"><name pos:start="161:25" pos:end="161:25">i</name> <operator pos:start="161:27" pos:end="161:27">&lt;</operator> <sizeof pos:start="161:29" pos:end="161:43">sizeof<argument_list pos:start="161:35" pos:end="161:43">(<argument pos:start="161:36" pos:end="161:42"><expr pos:start="161:36" pos:end="161:42"><name pos:start="161:36" pos:end="161:42"><name pos:start="161:36" pos:end="161:37">sd</name><operator pos:start="161:38" pos:end="161:39">-&gt;</operator><name pos:start="161:40" pos:end="161:42">csd</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="161:46" pos:end="161:49"><expr pos:start="161:46" pos:end="161:49"><name pos:start="161:46" pos:end="161:46">i</name> <operator pos:start="161:48" pos:end="161:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="163:17" pos:end="167:57"><block_content pos:start="163:17" pos:end="167:57">

                <if_stmt pos:start="163:17" pos:end="167:57"><if pos:start="163:17" pos:end="167:57">if <condition pos:start="163:20" pos:end="165:54">(<expr pos:start="163:21" pos:end="165:53"><operator pos:start="163:21" pos:end="163:21">(</operator><name pos:start="163:22" pos:end="163:31"><name pos:start="163:22" pos:end="163:23">sd</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:28">csd</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">i</name></expr>]</index></name> <operator pos:start="163:33" pos:end="163:33">|</operator> <name pos:start="163:35" pos:end="163:51"><name pos:start="163:35" pos:end="163:48">sd_csd_rw_mask</name><index pos:start="163:49" pos:end="163:51">[<expr pos:start="163:50" pos:end="163:50"><name pos:start="163:50" pos:end="163:50">i</name></expr>]</index></name><operator pos:start="163:52" pos:end="163:52">)</operator> <operator pos:start="163:54" pos:end="163:55">!=</operator>

                    <operator pos:start="165:21" pos:end="165:21">(</operator><name pos:start="165:22" pos:end="165:32"><name pos:start="165:22" pos:end="165:23">sd</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:29">data</name><index pos:start="165:30" pos:end="165:32">[<expr pos:start="165:31" pos:end="165:31"><name pos:start="165:31" pos:end="165:31">i</name></expr>]</index></name> <operator pos:start="165:34" pos:end="165:34">|</operator> <name pos:start="165:36" pos:end="165:52"><name pos:start="165:36" pos:end="165:49">sd_csd_rw_mask</name><index pos:start="165:50" pos:end="165:52">[<expr pos:start="165:51" pos:end="165:51"><name pos:start="165:51" pos:end="165:51">i</name></expr>]</index></name><operator pos:start="165:53" pos:end="165:53">)</operator></expr>)</condition><block type="pseudo" pos:start="167:21" pos:end="167:57"><block_content pos:start="167:21" pos:end="167:57">

                    <expr_stmt pos:start="167:21" pos:end="167:57"><expr pos:start="167:21" pos:end="167:56"><name pos:start="167:21" pos:end="167:35"><name pos:start="167:21" pos:end="167:22">sd</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:35">card_status</name></name> <operator pos:start="167:37" pos:end="167:38">|=</operator> <name pos:start="167:40" pos:end="167:56">CID_CSD_OVERWRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



            <comment type="block" pos:start="171:13" pos:end="171:59">/* Copy flag (OTP) &amp; Permanent write protect */</comment>

            <if_stmt pos:start="173:13" pos:end="175:53"><if pos:start="173:13" pos:end="175:53">if <condition pos:start="173:16" pos:end="173:51">(<expr pos:start="173:17" pos:end="173:50"><name pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:18">sd</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:23">csd</name><index pos:start="173:24" pos:end="173:27">[<expr pos:start="173:25" pos:end="173:26"><literal type="number" pos:start="173:25" pos:end="173:26">14</literal></expr>]</index></name> <operator pos:start="173:29" pos:end="173:29">&amp;</operator> <operator pos:start="173:31" pos:end="173:31">~</operator><name pos:start="173:32" pos:end="173:43"><name pos:start="173:32" pos:end="173:33">sd</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:39">data</name><index pos:start="173:40" pos:end="173:43">[<expr pos:start="173:41" pos:end="173:42"><literal type="number" pos:start="173:41" pos:end="173:42">14</literal></expr>]</index></name> <operator pos:start="173:45" pos:end="173:45">&amp;</operator> <literal type="number" pos:start="173:47" pos:end="173:50">0x60</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:53"><block_content pos:start="175:17" pos:end="175:53">

                <expr_stmt pos:start="175:17" pos:end="175:53"><expr pos:start="175:17" pos:end="175:52"><name pos:start="175:17" pos:end="175:31"><name pos:start="175:17" pos:end="175:18">sd</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:31">card_status</name></name> <operator pos:start="175:33" pos:end="175:34">|=</operator> <name pos:start="175:36" pos:end="175:52">CID_CSD_OVERWRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="179:13" pos:end="187:17"><if pos:start="179:13" pos:end="187:17">if <condition pos:start="179:16" pos:end="179:55">(<expr pos:start="179:17" pos:end="179:54"><operator pos:start="179:17" pos:end="179:17">!</operator><operator pos:start="179:18" pos:end="179:18">(</operator><name pos:start="179:19" pos:end="179:33"><name pos:start="179:19" pos:end="179:20">sd</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:33">card_status</name></name> <operator pos:start="179:35" pos:end="179:35">&amp;</operator> <name pos:start="179:37" pos:end="179:53">CID_CSD_OVERWRITE</name><operator pos:start="179:54" pos:end="179:54">)</operator></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="187:17"><block_content pos:start="181:17" pos:end="187:17">

                <for pos:start="181:17" pos:end="187:17">for <control pos:start="181:21" pos:end="181:54">(<init pos:start="181:22" pos:end="181:27"><expr pos:start="181:22" pos:end="181:26"><name pos:start="181:22" pos:end="181:22">i</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>;</init> <condition pos:start="181:29" pos:end="181:48"><expr pos:start="181:29" pos:end="181:47"><name pos:start="181:29" pos:end="181:29">i</name> <operator pos:start="181:31" pos:end="181:31">&lt;</operator> <sizeof pos:start="181:33" pos:end="181:47">sizeof<argument_list pos:start="181:39" pos:end="181:47">(<argument pos:start="181:40" pos:end="181:46"><expr pos:start="181:40" pos:end="181:46"><name pos:start="181:40" pos:end="181:46"><name pos:start="181:40" pos:end="181:41">sd</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:46">csd</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="181:50" pos:end="181:53"><expr pos:start="181:50" pos:end="181:53"><name pos:start="181:50" pos:end="181:50">i</name> <operator pos:start="181:52" pos:end="181:53">++</operator></expr></incr>)</control> <block pos:start="181:56" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:46">

                    <expr_stmt pos:start="183:21" pos:end="183:52"><expr pos:start="183:21" pos:end="183:51"><name pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:22">sd</name><operator pos:start="183:23" pos:end="183:24">-&gt;</operator><name pos:start="183:25" pos:end="183:27">csd</name><index pos:start="183:28" pos:end="183:30">[<expr pos:start="183:29" pos:end="183:29"><name pos:start="183:29" pos:end="183:29">i</name></expr>]</index></name> <operator pos:start="183:32" pos:end="183:33">|=</operator> <name pos:start="183:35" pos:end="183:51"><name pos:start="183:35" pos:end="183:48">sd_csd_rw_mask</name><index pos:start="183:49" pos:end="183:51">[<expr pos:start="183:50" pos:end="183:50"><name pos:start="183:50" pos:end="183:50">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:46"><expr pos:start="185:21" pos:end="185:45"><name pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:22">sd</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:27">csd</name><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><name pos:start="185:29" pos:end="185:29">i</name></expr>]</index></name> <operator pos:start="185:32" pos:end="185:33">&amp;=</operator> <name pos:start="185:35" pos:end="185:45"><name pos:start="185:35" pos:end="185:36">sd</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:42">data</name><index pos:start="185:43" pos:end="185:45">[<expr pos:start="185:44" pos:end="185:44"><name pos:start="185:44" pos:end="185:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></if></if_stmt>

            <comment type="block" pos:start="189:13" pos:end="189:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:42"><expr pos:start="191:13" pos:end="191:41"><name pos:start="191:13" pos:end="191:21"><name pos:start="191:13" pos:end="191:14">sd</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:21">state</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:41">sd_transfer_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>



    <case pos:start="199:5" pos:end="199:12">case <expr pos:start="199:10" pos:end="199:11"><literal type="number" pos:start="199:10" pos:end="199:11">42</literal></expr>:</case>	<comment type="block" pos:start="199:17" pos:end="199:41">/* CMD42:  LOCK_UNLOCK */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:45"><expr pos:start="201:9" pos:end="201:44"><name pos:start="201:9" pos:end="201:36"><name pos:start="201:9" pos:end="201:10">sd</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:16">data</name><index pos:start="201:17" pos:end="201:36">[<expr pos:start="201:18" pos:end="201:35"><name pos:start="201:18" pos:end="201:32"><name pos:start="201:18" pos:end="201:19">sd</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:32">data_offset</name></name> <operator pos:start="201:34" pos:end="201:35">++</operator></expr>]</index></name> <operator pos:start="201:38" pos:end="201:38">=</operator> <name pos:start="201:40" pos:end="201:44">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="215:9"><if pos:start="203:9" pos:end="215:9">if <condition pos:start="203:12" pos:end="203:43">(<expr pos:start="203:13" pos:end="203:42"><name pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:14">sd</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:27">data_offset</name></name> <operator pos:start="203:29" pos:end="203:30">&gt;=</operator> <name pos:start="203:32" pos:end="203:42"><name pos:start="203:32" pos:end="203:33">sd</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:42">blk_len</name></name></expr>)</condition> <block pos:start="203:45" pos:end="215:9">{<block_content pos:start="207:13" pos:end="213:42">

            <comment type="block" pos:start="205:13" pos:end="205:51">/* TODO: Check CRC before committing */</comment>

            <expr_stmt pos:start="207:13" pos:end="207:45"><expr pos:start="207:13" pos:end="207:44"><name pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:14">sd</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:21">state</name></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:44">sd_programming_state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:32"><expr pos:start="209:13" pos:end="209:31"><call pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:27">sd_lock_command</name><argument_list pos:start="209:28" pos:end="209:31">(<argument pos:start="209:29" pos:end="209:30"><expr pos:start="209:29" pos:end="209:30"><name pos:start="209:29" pos:end="209:30">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="211:13" pos:end="211:54">/* Bzzzzzzztt .... Operation complete.  */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:42"><expr pos:start="213:13" pos:end="213:41"><name pos:start="213:13" pos:end="213:21"><name pos:start="213:13" pos:end="213:14">sd</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:21">state</name></name> <operator pos:start="213:23" pos:end="213:23">=</operator> <name pos:start="213:25" pos:end="213:41">sd_transfer_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="217:9" pos:end="217:14">break;</break>



    <case pos:start="221:5" pos:end="221:12">case <expr pos:start="221:10" pos:end="221:11"><literal type="number" pos:start="221:10" pos:end="221:11">56</literal></expr>:</case>	<comment type="block" pos:start="221:17" pos:end="221:37">/* CMD56:  GEN_CMD */</comment>

        <expr_stmt pos:start="223:9" pos:end="223:45"><expr pos:start="223:9" pos:end="223:44"><name pos:start="223:9" pos:end="223:36"><name pos:start="223:9" pos:end="223:10">sd</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:16">data</name><index pos:start="223:17" pos:end="223:36">[<expr pos:start="223:18" pos:end="223:35"><name pos:start="223:18" pos:end="223:32"><name pos:start="223:18" pos:end="223:19">sd</name><operator pos:start="223:20" pos:end="223:21">-&gt;</operator><name pos:start="223:22" pos:end="223:32">data_offset</name></name> <operator pos:start="223:34" pos:end="223:35">++</operator></expr>]</index></name> <operator pos:start="223:38" pos:end="223:38">=</operator> <name pos:start="223:40" pos:end="223:44">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="225:9" pos:end="231:9"><if pos:start="225:9" pos:end="231:9">if <condition pos:start="225:12" pos:end="225:43">(<expr pos:start="225:13" pos:end="225:42"><name pos:start="225:13" pos:end="225:27"><name pos:start="225:13" pos:end="225:14">sd</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:27">data_offset</name></name> <operator pos:start="225:29" pos:end="225:30">&gt;=</operator> <name pos:start="225:32" pos:end="225:42"><name pos:start="225:32" pos:end="225:33">sd</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:42">blk_len</name></name></expr>)</condition> <block pos:start="225:45" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:42">

            <expr_stmt pos:start="227:13" pos:end="227:61"><expr pos:start="227:13" pos:end="227:60"><call pos:start="227:13" pos:end="227:60"><name pos:start="227:13" pos:end="227:27">APP_WRITE_BLOCK</name><argument_list pos:start="227:28" pos:end="227:60">(<argument pos:start="227:29" pos:end="227:42"><expr pos:start="227:29" pos:end="227:42"><name pos:start="227:29" pos:end="227:42"><name pos:start="227:29" pos:end="227:30">sd</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:42">data_start</name></name></expr></argument>, <argument pos:start="227:45" pos:end="227:59"><expr pos:start="227:45" pos:end="227:59"><name pos:start="227:45" pos:end="227:59"><name pos:start="227:45" pos:end="227:46">sd</name><operator pos:start="227:47" pos:end="227:48">-&gt;</operator><name pos:start="227:49" pos:end="227:59">data_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:42"><expr pos:start="229:13" pos:end="229:41"><name pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:14">sd</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:21">state</name></name> <operator pos:start="229:23" pos:end="229:23">=</operator> <name pos:start="229:25" pos:end="229:41">sd_transfer_state</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>



    <default pos:start="237:5" pos:end="237:12">default:</default>

        <expr_stmt pos:start="239:9" pos:end="239:60"><expr pos:start="239:9" pos:end="239:59"><call pos:start="239:9" pos:end="239:59"><name pos:start="239:9" pos:end="239:15">fprintf</name><argument_list pos:start="239:16" pos:end="239:59">(<argument pos:start="239:17" pos:end="239:22"><expr pos:start="239:17" pos:end="239:22"><name pos:start="239:17" pos:end="239:22">stderr</name></expr></argument>, <argument pos:start="239:25" pos:end="239:58"><expr pos:start="239:25" pos:end="239:58"><literal type="string" pos:start="239:25" pos:end="239:58">"sd_write_data: unknown command\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="241:9" pos:end="241:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
