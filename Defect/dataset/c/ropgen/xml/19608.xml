<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19608.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:33">ff_mpeg1_encode_init</name><parameter_list pos:start="1:34" pos:end="1:52">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:55">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:19">done</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><literal type="number" pos:start="5:23" pos:end="5:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><call pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:25">ff_mpeg12_common_init</name><argument_list pos:start="9:26" pos:end="9:28">(<argument pos:start="9:27" pos:end="9:27"><expr pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="155:5"><if pos:start="13:5" pos:end="155:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">done</name></expr>)</condition> <block pos:start="13:16" pos:end="155:5">{<block_content pos:start="15:9" pos:end="153:48">

        <decl_stmt pos:start="15:9" pos:end="15:19"><decl pos:start="15:9" pos:end="15:18"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:18">f_code</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:15"><decl pos:start="17:9" pos:end="17:14"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:14">mv</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:14"><decl pos:start="19:9" pos:end="19:13"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:12">done</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:69"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:18">ff_rl_init</name><argument_list pos:start="25:19" pos:end="25:68">(<argument pos:start="25:20" pos:end="25:31"><expr pos:start="25:20" pos:end="25:31"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:31">ff_rl_mpeg1</name></expr></argument>, <argument pos:start="25:34" pos:end="25:67"><expr pos:start="25:34" pos:end="25:67"><name pos:start="25:34" pos:end="25:67"><name pos:start="25:34" pos:end="25:64">ff_mpeg12_static_rl_table_store</name><index pos:start="25:65" pos:end="25:67">[<expr pos:start="25:66" pos:end="25:66"><literal type="number" pos:start="25:66" pos:end="25:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:18">ff_rl_init</name><argument_list pos:start="27:19" pos:end="27:68">(<argument pos:start="27:20" pos:end="27:31"><expr pos:start="27:20" pos:end="27:31"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:31">ff_rl_mpeg2</name></expr></argument>, <argument pos:start="27:34" pos:end="27:67"><expr pos:start="27:34" pos:end="27:67"><name pos:start="27:34" pos:end="27:67"><name pos:start="27:34" pos:end="27:64">ff_mpeg12_static_rl_table_store</name><index pos:start="27:65" pos:end="27:67">[<expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="31:9" pos:end="37:9">for <control pos:start="31:13" pos:end="31:32">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:27"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:26">64</literal></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control> <block pos:start="31:34" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:64">

            <expr_stmt pos:start="33:13" pos:end="33:64"><expr pos:start="33:13" pos:end="33:63"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:27">mpeg1_max_level</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>]</index><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <name pos:start="33:37" pos:end="33:63"><name pos:start="33:37" pos:end="33:47">ff_rl_mpeg1</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:57">max_level</name><index pos:start="33:58" pos:end="33:60">[<expr pos:start="33:59" pos:end="33:59"><literal type="number" pos:start="33:59" pos:end="33:59">0</literal></expr>]</index><index pos:start="33:61" pos:end="33:63">[<expr pos:start="33:62" pos:end="33:62"><name pos:start="33:62" pos:end="33:62">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:27">mpeg1_index_run</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">0</literal></expr>]</index><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr>]</index></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:63"><name pos:start="35:37" pos:end="35:47">ff_rl_mpeg1</name><operator pos:start="35:48" pos:end="35:48">.</operator><name pos:start="35:49" pos:end="35:57">index_run</name><index pos:start="35:58" pos:end="35:60">[<expr pos:start="35:59" pos:end="35:59"><literal type="number" pos:start="35:59" pos:end="35:59">0</literal></expr>]</index><index pos:start="35:61" pos:end="35:63">[<expr pos:start="35:62" pos:end="35:62"><name pos:start="35:62" pos:end="35:62">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:23">init_uni_ac_vlc</name><argument_list pos:start="41:24" pos:end="41:59">(<argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:36">ff_rl_mpeg1</name></expr></argument>, <argument pos:start="41:39" pos:end="41:58"><expr pos:start="41:39" pos:end="41:58"><name pos:start="41:39" pos:end="41:58">uni_mpeg1_ac_vlc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:64"><if pos:start="43:9" pos:end="45:64">if <condition pos:start="43:12" pos:end="43:32">(<expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:31">intra_vlc_format</name></name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:64"><block_content pos:start="45:13" pos:end="45:64">

            <expr_stmt pos:start="45:13" pos:end="45:64"><expr pos:start="45:13" pos:end="45:63"><call pos:start="45:13" pos:end="45:63"><name pos:start="45:13" pos:end="45:27">init_uni_ac_vlc</name><argument_list pos:start="45:28" pos:end="45:63">(<argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:40">ff_rl_mpeg2</name></expr></argument>, <argument pos:start="45:43" pos:end="45:62"><expr pos:start="45:43" pos:end="45:62"><name pos:start="45:43" pos:end="45:62">uni_mpeg2_ac_vlc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:46">/* build unified dc encoding tables */</comment>

        <for pos:start="51:9" pos:end="89:9">for <control pos:start="51:13" pos:end="51:36">(<init pos:start="51:14" pos:end="51:22"><expr pos:start="51:14" pos:end="51:21"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <operator pos:start="51:18" pos:end="51:18">-</operator><literal type="number" pos:start="51:19" pos:end="51:21">255</literal></expr>;</init> <condition pos:start="51:24" pos:end="51:31"><expr pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:24">i</name> <operator pos:start="51:26" pos:end="51:26">&lt;</operator> <literal type="number" pos:start="51:28" pos:end="51:30">256</literal></expr>;</condition> <incr pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">i</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr></incr>)</control> <block pos:start="51:38" pos:end="89:9">{<block_content pos:start="53:13" pos:end="87:59">

            <decl_stmt pos:start="53:13" pos:end="53:29"><decl pos:start="53:13" pos:end="53:21"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:21">adiff</name></decl>, <decl pos:start="53:24" pos:end="53:28"><type ref="prev" pos:start="53:13" pos:end="53:15"/><name pos:start="53:24" pos:end="53:28">index</name></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:27"><decl pos:start="55:13" pos:end="55:20"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:20">bits</name></decl>, <decl pos:start="55:23" pos:end="55:26"><type ref="prev" pos:start="55:13" pos:end="55:15"/><name pos:start="55:23" pos:end="55:26">code</name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:25"><decl pos:start="57:13" pos:end="57:24"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:20">diff</name> <init pos:start="57:22" pos:end="57:24">= <expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">i</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:32"><expr pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:17">adiff</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:31"><name pos:start="61:21" pos:end="61:25">FFABS</name><argument_list pos:start="61:26" pos:end="61:31">(<argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><name pos:start="61:27" pos:end="61:30">diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:23"><if pos:start="63:13" pos:end="65:23">if <condition pos:start="63:16" pos:end="63:25">(<expr pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:20">diff</name> <operator pos:start="63:22" pos:end="63:22">&lt;</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:23"><block_content pos:start="65:17" pos:end="65:23">

                <expr_stmt pos:start="65:17" pos:end="65:23"><expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:20">diff</name><operator pos:start="65:21" pos:end="65:22">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:39"><expr pos:start="67:13" pos:end="67:38"><name pos:start="67:13" pos:end="67:17">index</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <call pos:start="67:21" pos:end="67:38"><name pos:start="67:21" pos:end="67:27">av_log2</name><argument_list pos:start="67:28" pos:end="67:38">(<argument pos:start="67:29" pos:end="67:37"><expr pos:start="67:29" pos:end="67:37"><literal type="number" pos:start="67:29" pos:end="67:29">2</literal> <operator pos:start="67:31" pos:end="67:31">*</operator> <name pos:start="67:33" pos:end="67:37">adiff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:60"><expr pos:start="71:13" pos:end="71:59"><name pos:start="71:13" pos:end="71:16">bits</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:51"><name pos:start="71:20" pos:end="71:44">ff_mpeg12_vlc_dc_lum_bits</name><index pos:start="71:45" pos:end="71:51">[<expr pos:start="71:46" pos:end="71:50"><name pos:start="71:46" pos:end="71:50">index</name></expr>]</index></name> <operator pos:start="71:53" pos:end="71:53">+</operator> <name pos:start="71:55" pos:end="71:59">index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:47"><expr pos:start="73:13" pos:end="75:46"><name pos:start="73:13" pos:end="73:16">code</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <operator pos:start="73:20" pos:end="73:20">(</operator><name pos:start="73:21" pos:end="73:52"><name pos:start="73:21" pos:end="73:45">ff_mpeg12_vlc_dc_lum_code</name><index pos:start="73:46" pos:end="73:52">[<expr pos:start="73:47" pos:end="73:51"><name pos:start="73:47" pos:end="73:51">index</name></expr>]</index></name> <operator pos:start="73:54" pos:end="73:55">&lt;&lt;</operator> <name pos:start="73:57" pos:end="73:61">index</name><operator pos:start="73:62" pos:end="73:62">)</operator> <operator pos:start="73:64" pos:end="73:64">+</operator>

                    <call pos:start="75:21" pos:end="75:46"><name pos:start="75:21" pos:end="75:33">av_mod_uintp2</name><argument_list pos:start="75:34" pos:end="75:46">(<argument pos:start="75:35" pos:end="75:38"><expr pos:start="75:35" pos:end="75:38"><name pos:start="75:35" pos:end="75:38">diff</name></expr></argument>, <argument pos:start="75:41" pos:end="75:45"><expr pos:start="75:41" pos:end="75:45"><name pos:start="75:41" pos:end="75:45">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:59"><expr pos:start="77:13" pos:end="77:58"><name pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:28">mpeg1_lum_dc_uni</name><index pos:start="77:29" pos:end="77:37">[<expr pos:start="77:30" pos:end="77:36"><name pos:start="77:30" pos:end="77:30">i</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <literal type="number" pos:start="77:34" pos:end="77:36">255</literal></expr>]</index></name> <operator pos:start="77:39" pos:end="77:39">=</operator> <name pos:start="77:41" pos:end="77:44">bits</name> <operator pos:start="77:46" pos:end="77:46">+</operator> <operator pos:start="77:48" pos:end="77:48">(</operator><name pos:start="77:49" pos:end="77:52">code</name> <operator pos:start="77:54" pos:end="77:55">&lt;&lt;</operator> <literal type="number" pos:start="77:57" pos:end="77:57">8</literal><operator pos:start="77:58" pos:end="77:58">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:63"><expr pos:start="81:13" pos:end="81:62"><name pos:start="81:13" pos:end="81:16">bits</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:54"><name pos:start="81:20" pos:end="81:47">ff_mpeg12_vlc_dc_chroma_bits</name><index pos:start="81:48" pos:end="81:54">[<expr pos:start="81:49" pos:end="81:53"><name pos:start="81:49" pos:end="81:53">index</name></expr>]</index></name> <operator pos:start="81:56" pos:end="81:56">+</operator> <name pos:start="81:58" pos:end="81:62">index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="85:47"><expr pos:start="83:13" pos:end="85:46"><name pos:start="83:13" pos:end="83:16">code</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <operator pos:start="83:20" pos:end="83:20">(</operator><name pos:start="83:21" pos:end="83:55"><name pos:start="83:21" pos:end="83:48">ff_mpeg12_vlc_dc_chroma_code</name><index pos:start="83:49" pos:end="83:55">[<expr pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:54">index</name></expr>]</index></name> <operator pos:start="83:57" pos:end="83:58">&lt;&lt;</operator> <name pos:start="83:60" pos:end="83:64">index</name><operator pos:start="83:65" pos:end="83:65">)</operator> <operator pos:start="83:67" pos:end="83:67">+</operator>

                    <call pos:start="85:21" pos:end="85:46"><name pos:start="85:21" pos:end="85:33">av_mod_uintp2</name><argument_list pos:start="85:34" pos:end="85:46">(<argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><name pos:start="85:35" pos:end="85:38">diff</name></expr></argument>, <argument pos:start="85:41" pos:end="85:45"><expr pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:45">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:59"><expr pos:start="87:13" pos:end="87:58"><name pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:28">mpeg1_chr_dc_uni</name><index pos:start="87:29" pos:end="87:37">[<expr pos:start="87:30" pos:end="87:36"><name pos:start="87:30" pos:end="87:30">i</name> <operator pos:start="87:32" pos:end="87:32">+</operator> <literal type="number" pos:start="87:34" pos:end="87:36">255</literal></expr>]</index></name> <operator pos:start="87:39" pos:end="87:39">=</operator> <name pos:start="87:41" pos:end="87:44">bits</name> <operator pos:start="87:46" pos:end="87:46">+</operator> <operator pos:start="87:48" pos:end="87:48">(</operator><name pos:start="87:49" pos:end="87:52">code</name> <operator pos:start="87:54" pos:end="87:55">&lt;&lt;</operator> <literal type="number" pos:start="87:57" pos:end="87:57">8</literal><operator pos:start="87:58" pos:end="87:58">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="93:9" pos:end="143:13">for <control pos:start="93:13" pos:end="93:55">(<init pos:start="93:14" pos:end="93:24"><expr pos:start="93:14" pos:end="93:23"><name pos:start="93:14" pos:end="93:19">f_code</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <literal type="number" pos:start="93:23" pos:end="93:23">1</literal></expr>;</init> <condition pos:start="93:26" pos:end="93:45"><expr pos:start="93:26" pos:end="93:44"><name pos:start="93:26" pos:end="93:31">f_code</name> <operator pos:start="93:33" pos:end="93:34">&lt;=</operator> <name pos:start="93:36" pos:end="93:44">MAX_FCODE</name></expr>;</condition> <incr pos:start="93:47" pos:end="93:54"><expr pos:start="93:47" pos:end="93:54"><name pos:start="93:47" pos:end="93:52">f_code</name><operator pos:start="93:53" pos:end="93:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:13" pos:end="143:13"><block_content pos:start="95:13" pos:end="143:13">

            <for pos:start="95:13" pos:end="143:13">for <control pos:start="95:17" pos:end="95:50">(<init pos:start="95:18" pos:end="95:30"><expr pos:start="95:18" pos:end="95:29"><name pos:start="95:18" pos:end="95:19">mv</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <operator pos:start="95:23" pos:end="95:23">-</operator><name pos:start="95:24" pos:end="95:29">MAX_MV</name></expr>;</init> <condition pos:start="95:32" pos:end="95:44"><expr pos:start="95:32" pos:end="95:43"><name pos:start="95:32" pos:end="95:33">mv</name> <operator pos:start="95:35" pos:end="95:36">&lt;=</operator> <name pos:start="95:38" pos:end="95:43">MAX_MV</name></expr>;</condition> <incr pos:start="95:46" pos:end="95:49"><expr pos:start="95:46" pos:end="95:49"><name pos:start="95:46" pos:end="95:47">mv</name><operator pos:start="95:48" pos:end="95:49">++</operator></expr></incr>)</control> <block pos:start="95:52" pos:end="143:13">{<block_content pos:start="97:17" pos:end="141:54">

                <decl_stmt pos:start="97:17" pos:end="97:24"><decl pos:start="97:17" pos:end="97:23"><type pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">int</name></type> <name pos:start="97:21" pos:end="97:23">len</name></decl>;</decl_stmt>



                <if_stmt pos:start="101:17" pos:end="137:17"><if pos:start="101:17" pos:end="105:17">if <condition pos:start="101:20" pos:end="101:28">(<expr pos:start="101:21" pos:end="101:27"><name pos:start="101:21" pos:end="101:22">mv</name> <operator pos:start="101:24" pos:end="101:25">==</operator> <literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr>)</condition> <block pos:start="101:30" pos:end="105:17">{<block_content pos:start="103:21" pos:end="103:62">

                    <expr_stmt pos:start="103:21" pos:end="103:62"><expr pos:start="103:21" pos:end="103:61"><name pos:start="103:21" pos:end="103:23">len</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:61"><name pos:start="103:27" pos:end="103:55">ff_mpeg12_mbMotionVectorTable</name><index pos:start="103:56" pos:end="103:58">[<expr pos:start="103:57" pos:end="103:57"><literal type="number" pos:start="103:57" pos:end="103:57">0</literal></expr>]</index><index pos:start="103:59" pos:end="103:61">[<expr pos:start="103:60" pos:end="103:60"><literal type="number" pos:start="103:60" pos:end="103:60">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="105:19" pos:end="137:17">else <block pos:start="105:24" pos:end="137:17">{<block_content pos:start="107:21" pos:end="135:43">

                    <decl_stmt pos:start="107:21" pos:end="107:44"><decl pos:start="107:21" pos:end="107:27"><type pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">int</name></type> <name pos:start="107:25" pos:end="107:27">val</name></decl>, <decl pos:start="107:30" pos:end="107:37"><type ref="prev" pos:start="107:21" pos:end="107:23"/><name pos:start="107:30" pos:end="107:37">bit_size</name></decl>, <decl pos:start="107:40" pos:end="107:43"><type ref="prev" pos:start="107:21" pos:end="107:23"/><name pos:start="107:40" pos:end="107:43">code</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="111:21" pos:end="111:42"><expr pos:start="111:21" pos:end="111:41"><name pos:start="111:21" pos:end="111:28">bit_size</name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:37">f_code</name> <operator pos:start="111:39" pos:end="111:39">-</operator> <literal type="number" pos:start="111:41" pos:end="111:41">1</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="115:21" pos:end="115:29"><expr pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:23">val</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:28">mv</name></expr>;</expr_stmt>

                    <if_stmt pos:start="117:21" pos:end="119:35"><if pos:start="117:21" pos:end="119:35">if <condition pos:start="117:24" pos:end="117:32">(<expr pos:start="117:25" pos:end="117:31"><name pos:start="117:25" pos:end="117:27">val</name> <operator pos:start="117:29" pos:end="117:29">&lt;</operator> <literal type="number" pos:start="117:31" pos:end="117:31">0</literal></expr>)</condition><block type="pseudo" pos:start="119:25" pos:end="119:35"><block_content pos:start="119:25" pos:end="119:35">

                        <expr_stmt pos:start="119:25" pos:end="119:35"><expr pos:start="119:25" pos:end="119:34"><name pos:start="119:25" pos:end="119:27">val</name> <operator pos:start="119:29" pos:end="119:29">=</operator> <operator pos:start="119:31" pos:end="119:31">-</operator><name pos:start="119:32" pos:end="119:34">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:26"><expr pos:start="121:21" pos:end="121:25"><name pos:start="121:21" pos:end="121:23">val</name><operator pos:start="121:24" pos:end="121:25">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:49"><expr pos:start="123:21" pos:end="123:48"><name pos:start="123:21" pos:end="123:24">code</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <operator pos:start="123:28" pos:end="123:28">(</operator><name pos:start="123:29" pos:end="123:31">val</name> <operator pos:start="123:33" pos:end="123:34">&gt;&gt;</operator> <name pos:start="123:36" pos:end="123:43">bit_size</name><operator pos:start="123:44" pos:end="123:44">)</operator> <operator pos:start="123:46" pos:end="123:46">+</operator> <literal type="number" pos:start="123:48" pos:end="123:48">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="125:21" pos:end="135:43"><if pos:start="125:21" pos:end="129:43">if <condition pos:start="125:24" pos:end="125:34">(<expr pos:start="125:25" pos:end="125:33"><name pos:start="125:25" pos:end="125:28">code</name> <operator pos:start="125:30" pos:end="125:30">&lt;</operator> <literal type="number" pos:start="125:32" pos:end="125:33">17</literal></expr>)</condition><block type="pseudo" pos:start="127:25" pos:end="129:43"><block_content pos:start="127:25" pos:end="129:43">

                        <expr_stmt pos:start="127:25" pos:end="129:43"><expr pos:start="127:25" pos:end="129:42"><name pos:start="127:25" pos:end="127:27">len</name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:68"><name pos:start="127:31" pos:end="127:59">ff_mpeg12_mbMotionVectorTable</name><index pos:start="127:60" pos:end="127:65">[<expr pos:start="127:61" pos:end="127:64"><name pos:start="127:61" pos:end="127:64">code</name></expr>]</index><index pos:start="127:66" pos:end="127:68">[<expr pos:start="127:67" pos:end="127:67"><literal type="number" pos:start="127:67" pos:end="127:67">1</literal></expr>]</index></name> <operator pos:start="127:70" pos:end="127:70">+</operator>

                              <literal type="number" pos:start="129:31" pos:end="129:33">1</literal> <operator pos:start="129:33" pos:end="129:33">+</operator> <name pos:start="129:35" pos:end="129:42">bit_size</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="131:21" pos:end="135:43">else<block type="pseudo" pos:start="133:25" pos:end="135:43"><block_content pos:start="133:25" pos:end="135:43">

                        <expr_stmt pos:start="133:25" pos:end="135:43"><expr pos:start="133:25" pos:end="135:42"><name pos:start="133:25" pos:end="133:27">len</name> <operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:66"><name pos:start="133:31" pos:end="133:59">ff_mpeg12_mbMotionVectorTable</name><index pos:start="133:60" pos:end="133:63">[<expr pos:start="133:61" pos:end="133:62"><literal type="number" pos:start="133:61" pos:end="133:62">16</literal></expr>]</index><index pos:start="133:64" pos:end="133:66">[<expr pos:start="133:65" pos:end="133:65"><literal type="number" pos:start="133:65" pos:end="133:65">1</literal></expr>]</index></name> <operator pos:start="133:68" pos:end="133:68">+</operator>

                              <literal type="number" pos:start="135:31" pos:end="135:33">2</literal> <operator pos:start="135:33" pos:end="135:33">+</operator> <name pos:start="135:35" pos:end="135:42">bit_size</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="141:17" pos:end="141:54"><expr pos:start="141:17" pos:end="141:53"><name pos:start="141:17" pos:end="141:47"><name pos:start="141:17" pos:end="141:26">mv_penalty</name><index pos:start="141:27" pos:end="141:34">[<expr pos:start="141:28" pos:end="141:33"><name pos:start="141:28" pos:end="141:33">f_code</name></expr>]</index><index pos:start="141:35" pos:end="141:47">[<expr pos:start="141:36" pos:end="141:46"><name pos:start="141:36" pos:end="141:37">mv</name> <operator pos:start="141:39" pos:end="141:39">+</operator> <name pos:start="141:41" pos:end="141:46">MAX_MV</name></expr>]</index></name> <operator pos:start="141:49" pos:end="141:49">=</operator> <name pos:start="141:51" pos:end="141:53">len</name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>





        <for pos:start="149:9" pos:end="153:48">for <control pos:start="149:13" pos:end="149:54">(<init pos:start="149:14" pos:end="149:32"><expr pos:start="149:14" pos:end="149:31"><name pos:start="149:14" pos:end="149:19">f_code</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <name pos:start="149:23" pos:end="149:31">MAX_FCODE</name></expr>;</init> <condition pos:start="149:34" pos:end="149:44"><expr pos:start="149:34" pos:end="149:43"><name pos:start="149:34" pos:end="149:39">f_code</name> <operator pos:start="149:41" pos:end="149:41">&gt;</operator> <literal type="number" pos:start="149:43" pos:end="149:43">0</literal></expr>;</condition> <incr pos:start="149:46" pos:end="149:53"><expr pos:start="149:46" pos:end="149:53"><name pos:start="149:46" pos:end="149:51">f_code</name><operator pos:start="149:52" pos:end="149:53">--</operator></expr></incr>)</control><block type="pseudo" pos:start="151:13" pos:end="153:48"><block_content pos:start="151:13" pos:end="153:48">

            <for pos:start="151:13" pos:end="153:48">for <control pos:start="151:17" pos:end="151:63">(<init pos:start="151:18" pos:end="151:37"><expr pos:start="151:18" pos:end="151:36"><name pos:start="151:18" pos:end="151:19">mv</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <operator pos:start="151:23" pos:end="151:23">-</operator><operator pos:start="151:24" pos:end="151:24">(</operator><literal type="number" pos:start="151:25" pos:end="151:25">8</literal> <operator pos:start="151:27" pos:end="151:28">&lt;&lt;</operator> <name pos:start="151:30" pos:end="151:35">f_code</name><operator pos:start="151:36" pos:end="151:36">)</operator></expr>;</init> <condition pos:start="151:39" pos:end="151:57"><expr pos:start="151:39" pos:end="151:56"><name pos:start="151:39" pos:end="151:40">mv</name> <operator pos:start="151:42" pos:end="151:42">&lt;</operator> <operator pos:start="151:44" pos:end="151:44">(</operator><literal type="number" pos:start="151:45" pos:end="151:45">8</literal> <operator pos:start="151:47" pos:end="151:48">&lt;&lt;</operator> <name pos:start="151:50" pos:end="151:55">f_code</name><operator pos:start="151:56" pos:end="151:56">)</operator></expr>;</condition> <incr pos:start="151:59" pos:end="151:62"><expr pos:start="151:59" pos:end="151:62"><name pos:start="151:59" pos:end="151:60">mv</name><operator pos:start="151:61" pos:end="151:62">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:17" pos:end="153:48"><block_content pos:start="153:17" pos:end="153:48">

                <expr_stmt pos:start="153:17" pos:end="153:48"><expr pos:start="153:17" pos:end="153:47"><name pos:start="153:17" pos:end="153:38"><name pos:start="153:17" pos:end="153:25">fcode_tab</name><index pos:start="153:26" pos:end="153:38">[<expr pos:start="153:27" pos:end="153:37"><name pos:start="153:27" pos:end="153:28">mv</name> <operator pos:start="153:30" pos:end="153:30">+</operator> <name pos:start="153:32" pos:end="153:37">MAX_MV</name></expr>]</index></name> <operator pos:start="153:40" pos:end="153:40">=</operator> <name pos:start="153:42" pos:end="153:47">f_code</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:34"><expr pos:start="157:5" pos:end="157:33"><name pos:start="157:5" pos:end="157:20"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:9">me</name><operator pos:start="157:10" pos:end="157:10">.</operator><name pos:start="157:11" pos:end="157:20">mv_penalty</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:33">mv_penalty</name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:33"><expr pos:start="159:5" pos:end="159:32"><name pos:start="159:5" pos:end="159:16"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:16">fcode_tab</name></name>     <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:32">fcode_tab</name></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="173:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:46">(<expr pos:start="161:9" pos:end="161:45"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">codec_id</name></name> <operator pos:start="161:21" pos:end="161:22">==</operator> <name pos:start="161:24" pos:end="161:45">AV_CODEC_ID_MPEG1VIDEO</name></expr>)</condition> <block pos:start="161:48" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:28">

        <expr_stmt pos:start="163:9" pos:end="163:29"><expr pos:start="163:9" pos:end="163:28"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:21">min_qcoeff</name></name> <operator pos:start="163:23" pos:end="163:23">=</operator> <operator pos:start="163:25" pos:end="163:25">-</operator><literal type="number" pos:start="163:26" pos:end="163:28">255</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:28"><expr pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:21"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:21">max_qcoeff</name></name> <operator pos:start="165:23" pos:end="165:23">=</operator> <literal type="number" pos:start="165:25" pos:end="165:27">255</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="173:5">else <block pos:start="167:12" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:29">

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:21">min_qcoeff</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <operator pos:start="169:25" pos:end="169:25">-</operator><literal type="number" pos:start="169:26" pos:end="169:29">2047</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:29"><expr pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:21">max_qcoeff</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <literal type="number" pos:start="171:25" pos:end="171:28">2047</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="175:5" pos:end="187:5"><if pos:start="175:5" pos:end="181:5">if <condition pos:start="175:8" pos:end="175:28">(<expr pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:27">intra_vlc_format</name></name></expr>)</condition> <block pos:start="175:30" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:59">

        <expr_stmt pos:start="177:9" pos:end="179:59"><expr pos:start="177:9" pos:end="179:58"><name pos:start="177:9" pos:end="177:30"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:30">intra_ac_vlc_length</name></name>      <operator pos:start="177:37" pos:end="177:37">=</operator>

        <name pos:start="179:9" pos:end="179:35"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:35">intra_ac_vlc_last_length</name></name> <operator pos:start="179:37" pos:end="179:37">=</operator> <name pos:start="179:39" pos:end="179:58">uni_mpeg2_ac_vlc_len</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="181:7" pos:end="187:5">else <block pos:start="181:12" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:59">

        <expr_stmt pos:start="183:9" pos:end="185:59"><expr pos:start="183:9" pos:end="185:58"><name pos:start="183:9" pos:end="183:30"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:30">intra_ac_vlc_length</name></name>      <operator pos:start="183:37" pos:end="183:37">=</operator>

        <name pos:start="185:9" pos:end="185:35"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:35">intra_ac_vlc_last_length</name></name> <operator pos:start="185:37" pos:end="185:37">=</operator> <name pos:start="185:39" pos:end="185:58">uni_mpeg1_ac_vlc_len</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="191:55"><expr pos:start="189:5" pos:end="191:54"><name pos:start="189:5" pos:end="189:26"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:26">inter_ac_vlc_length</name></name>      <operator pos:start="189:33" pos:end="189:33">=</operator>

    <name pos:start="191:5" pos:end="191:31"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:31">inter_ac_vlc_last_length</name></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <name pos:start="191:35" pos:end="191:54">uni_mpeg1_ac_vlc_len</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
