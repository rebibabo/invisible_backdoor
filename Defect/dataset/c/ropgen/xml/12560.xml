<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12560.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_slice</name><parameter_list pos:start="1:29" pos:end="3:63">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:41">Mpeg1Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">s1</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:55"><decl pos:start="1:48" pos:end="1:55"><type pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:55">mb_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">buf</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:62">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="347:1">{<block_content pos:start="7:5" pos:end="345:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:41">= <expr pos:start="7:25" pos:end="7:41"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:27">s1</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">avctx</name><init pos:start="9:26" pos:end="9:35">= <expr pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:59"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:23">field_pic</name><init pos:start="13:24" pos:end="13:59">= <expr pos:start="13:26" pos:end="13:59"><name pos:start="13:26" pos:end="13:45"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:45">picture_structure</name></name> <operator pos:start="13:47" pos:end="13:48">!=</operator> <name pos:start="13:50" pos:end="13:59">PICT_FRAME</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:23"><expr pos:start="17:5" pos:end="19:22"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">resync_mb_x</name></name><operator pos:start="17:19" pos:end="17:19">=</operator>

    <name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:18">resync_mb_y</name></name><operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">-</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:12">mb_y</name> <operator pos:start="23:14" pos:end="23:15">&gt;=</operator> <name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">mb_height</name></name></expr>)</condition><block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:96"><expr pos:start="25:9" pos:end="25:95"><call pos:start="25:9" pos:end="25:95"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:95">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:71"><expr pos:start="25:40" pos:end="25:71"><literal type="string" pos:start="25:40" pos:end="25:71">"slice below image (%d &gt;= %d)\n"</literal></expr></argument>, <argument pos:start="25:74" pos:end="25:80"><expr pos:start="25:74" pos:end="25:80"><name pos:start="25:74" pos:end="25:80"><name pos:start="25:74" pos:end="25:74">s</name><operator pos:start="25:75" pos:end="25:76">-&gt;</operator><name pos:start="25:77" pos:end="25:80">mb_y</name></name></expr></argument>, <argument pos:start="25:83" pos:end="25:94"><expr pos:start="25:83" pos:end="25:94"><name pos:start="25:83" pos:end="25:94"><name pos:start="25:83" pos:end="25:83">s</name><operator pos:start="25:84" pos:end="25:85">-&gt;</operator><name pos:start="25:86" pos:end="25:94">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:17">init_get_bits</name><argument_list pos:start="33:18" pos:end="33:43">(<argument pos:start="33:19" pos:end="33:24"><expr pos:start="33:19" pos:end="33:24"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:24">gb</name></name></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><operator pos:start="33:27" pos:end="33:27">*</operator><name pos:start="33:28" pos:end="33:30">buf</name></expr></argument>, <argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:40">buf_size</name><operator pos:start="33:41" pos:end="33:41">*</operator><literal type="number" pos:start="33:42" pos:end="33:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:26">ff_mpeg1_clean_buffers</name><argument_list pos:start="37:27" pos:end="37:29">(<argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:21">interlaced_dct</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">qscale</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:26">get_qscale</name><argument_list pos:start="43:27" pos:end="43:29">(<argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><name pos:start="43:28" pos:end="43:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:22">(<expr pos:start="47:8" pos:end="47:21"><name pos:start="47:8" pos:end="47:16"><name pos:start="47:8" pos:end="47:8">s</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:16">qscale</name></name> <operator pos:start="47:18" pos:end="47:19">==</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>)</condition><block pos:start="47:23" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:55">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:54"><expr pos:start="49:40" pos:end="49:54"><literal type="string" pos:start="49:40" pos:end="49:54">"qscale == 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="57:5" pos:end="57:26">/* extra slice info */</comment>

    <while pos:start="59:5" pos:end="63:5">while <condition pos:start="59:11" pos:end="59:34">(<expr pos:start="59:12" pos:end="59:33"><call pos:start="59:12" pos:end="59:28"><name pos:start="59:12" pos:end="59:20">get_bits1</name><argument_list pos:start="59:21" pos:end="59:28">(<argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:30" pos:end="59:31">!=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>)</condition> <block pos:start="59:36" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:29">

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><call pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:17">skip_bits</name><argument_list pos:start="61:18" pos:end="61:28">(<argument pos:start="61:19" pos:end="61:24"><expr pos:start="61:19" pos:end="61:24"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:24">gb</name></name></expr></argument>, <argument pos:start="61:27" pos:end="61:27"><expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    

    <expr_stmt pos:start="67:5" pos:end="67:14"><expr pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:11">mb_x</name></name><operator pos:start="67:12" pos:end="67:12">=</operator><literal type="number" pos:start="67:13" pos:end="67:13">0</literal></expr>;</expr_stmt>



    <for pos:start="71:5" pos:end="101:5">for<control pos:start="71:8" pos:end="71:11">(<init pos:start="71:9" pos:end="71:9">;</init><condition pos:start="71:10" pos:end="71:10">;</condition><incr/>)</control> <block pos:start="71:13" pos:end="101:5">{<block_content pos:start="73:9" pos:end="99:9">

        <decl_stmt pos:start="73:9" pos:end="73:74"><decl pos:start="73:9" pos:end="73:73"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:16">code</name> <init pos:start="73:18" pos:end="73:73">= <expr pos:start="73:20" pos:end="73:73"><call pos:start="73:20" pos:end="73:73"><name pos:start="73:20" pos:end="73:27">get_vlc2</name><argument_list pos:start="73:28" pos:end="73:73">(<argument pos:start="73:29" pos:end="73:34"><expr pos:start="73:29" pos:end="73:34"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:34">gb</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:52"><expr pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:46">mbincr_vlc</name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:52">table</name></name></expr></argument>, <argument pos:start="73:55" pos:end="73:69"><expr pos:start="73:55" pos:end="73:69"><name pos:start="73:55" pos:end="73:69">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="73:72" pos:end="73:72"><expr pos:start="73:72" pos:end="73:72"><literal type="number" pos:start="73:72" pos:end="73:72">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:21">(<expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:16">code</name> <operator pos:start="75:18" pos:end="75:18">&lt;</operator> <literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>)</condition><block pos:start="75:22" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:22">

            <expr_stmt pos:start="77:13" pos:end="77:70"><expr pos:start="77:13" pos:end="77:69"><call pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:69">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:44" pos:end="77:68"><expr pos:start="77:44" pos:end="77:68"><literal type="string" pos:start="77:44" pos:end="77:68">"first mb_incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:16">code</name> <operator pos:start="83:18" pos:end="83:19">&gt;=</operator> <literal type="number" pos:start="83:21" pos:end="83:22">33</literal></expr>)</condition> <block pos:start="83:25" pos:end="93:9">{<block_content pos:start="85:13" pos:end="89:13">

            <if_stmt pos:start="85:13" pos:end="89:13"><if pos:start="85:13" pos:end="89:13">if <condition pos:start="85:16" pos:end="85:27">(<expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:20">code</name> <operator pos:start="85:22" pos:end="85:23">==</operator> <literal type="number" pos:start="85:25" pos:end="85:26">33</literal></expr>)</condition> <block pos:start="85:29" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:30">

                <expr_stmt pos:start="87:17" pos:end="87:30"><expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:23">mb_x</name></name> <operator pos:start="87:25" pos:end="87:26">+=</operator> <literal type="number" pos:start="87:28" pos:end="87:29">33</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="91:13" pos:end="91:52">/* otherwise, stuffing, nothing to do */</comment>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="99:9">else <block pos:start="93:16" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:18">

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:19">mb_x</name></name> <operator pos:start="95:21" pos:end="95:22">+=</operator> <name pos:start="95:24" pos:end="95:27">code</name></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="105:5" pos:end="105:28"><expr pos:start="105:5" pos:end="105:27"><name pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:18">resync_mb_x</name></name><operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:27">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:34"><expr pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:18">resync_mb_y</name></name><operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:27"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:27">mb_y</name></name><operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:33">mb_y</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:22"><expr pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:18">mb_skip_run</name></name><operator pos:start="109:19" pos:end="109:19">=</operator> <literal type="number" pos:start="109:21" pos:end="109:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:27"><expr pos:start="111:5" pos:end="111:26"><call pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:23">ff_init_block_index</name><argument_list pos:start="111:24" pos:end="111:26">(<argument pos:start="111:25" pos:end="111:25"><expr pos:start="111:25" pos:end="111:25"><name pos:start="111:25" pos:end="111:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="133:5"><if pos:start="115:5" pos:end="133:5">if <condition pos:start="115:8" pos:end="115:89">(<expr pos:start="115:9" pos:end="115:88"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:15">mb_y</name></name><operator pos:start="115:16" pos:end="115:17">==</operator><literal type="number" pos:start="115:18" pos:end="115:18">0</literal> <operator pos:start="115:20" pos:end="115:21">&amp;&amp;</operator> <name pos:start="115:23" pos:end="115:29"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:29">mb_x</name></name><operator pos:start="115:30" pos:end="115:31">==</operator><literal type="number" pos:start="115:32" pos:end="115:32">0</literal> <operator pos:start="115:34" pos:end="115:35">&amp;&amp;</operator> <operator pos:start="115:37" pos:end="115:37">(</operator><name pos:start="115:38" pos:end="115:51"><name pos:start="115:38" pos:end="115:38">s</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:51">first_field</name></name> <operator pos:start="115:53" pos:end="115:54">||</operator> <name pos:start="115:56" pos:end="115:75"><name pos:start="115:56" pos:end="115:56">s</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:75">picture_structure</name></name><operator pos:start="115:76" pos:end="115:77">==</operator><name pos:start="115:78" pos:end="115:87">PICT_FRAME</name><operator pos:start="115:88" pos:end="115:88">)</operator></expr>)</condition> <block pos:start="115:91" pos:end="133:5">{<block_content pos:start="117:9" pos:end="131:9">

        <if_stmt pos:start="117:9" pos:end="131:9"><if pos:start="117:9" pos:end="131:9">if<condition pos:start="117:11" pos:end="117:46">(<expr pos:start="117:12" pos:end="117:45"><name pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:12">s</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:19">avctx</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">debug</name></name><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:45">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="117:47" pos:end="131:9">{<block_content pos:start="119:14" pos:end="129:110">

             <expr_stmt pos:start="119:14" pos:end="129:110"><expr pos:start="119:14" pos:end="129:109"><call pos:start="119:14" pos:end="129:109"><name pos:start="119:14" pos:end="119:19">av_log</name><argument_list pos:start="119:20" pos:end="129:109">(<argument pos:start="119:21" pos:end="119:28"><expr pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:28">avctx</name></name></expr></argument>, <argument pos:start="119:31" pos:end="119:42"><expr pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="119:45" pos:end="119:143"><expr pos:start="119:45" pos:end="119:143"><literal type="string" pos:start="119:45" pos:end="119:143">"qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n"</literal></expr></argument>, 

                 <argument pos:start="121:18" pos:end="121:26"><expr pos:start="121:18" pos:end="121:26"><name pos:start="121:18" pos:end="121:26"><name pos:start="121:18" pos:end="121:18">s</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:26">qscale</name></name></expr></argument>, <argument pos:start="121:29" pos:end="121:48"><expr pos:start="121:29" pos:end="121:48"><name pos:start="121:29" pos:end="121:48"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:42">mpeg_f_code</name><index pos:start="121:43" pos:end="121:45">[<expr pos:start="121:44" pos:end="121:44"><literal type="number" pos:start="121:44" pos:end="121:44">0</literal></expr>]</index><index pos:start="121:46" pos:end="121:48">[<expr pos:start="121:47" pos:end="121:47"><literal type="number" pos:start="121:47" pos:end="121:47">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="121:50" pos:end="121:69"><expr pos:start="121:50" pos:end="121:69"><name pos:start="121:50" pos:end="121:69"><name pos:start="121:50" pos:end="121:50">s</name><operator pos:start="121:51" pos:end="121:52">-&gt;</operator><name pos:start="121:53" pos:end="121:63">mpeg_f_code</name><index pos:start="121:64" pos:end="121:66">[<expr pos:start="121:65" pos:end="121:65"><literal type="number" pos:start="121:65" pos:end="121:65">0</literal></expr>]</index><index pos:start="121:67" pos:end="121:69">[<expr pos:start="121:68" pos:end="121:68"><literal type="number" pos:start="121:68" pos:end="121:68">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="121:71" pos:end="121:90"><expr pos:start="121:71" pos:end="121:90"><name pos:start="121:71" pos:end="121:90"><name pos:start="121:71" pos:end="121:71">s</name><operator pos:start="121:72" pos:end="121:73">-&gt;</operator><name pos:start="121:74" pos:end="121:84">mpeg_f_code</name><index pos:start="121:85" pos:end="121:87">[<expr pos:start="121:86" pos:end="121:86"><literal type="number" pos:start="121:86" pos:end="121:86">1</literal></expr>]</index><index pos:start="121:88" pos:end="121:90">[<expr pos:start="121:89" pos:end="121:89"><literal type="number" pos:start="121:89" pos:end="121:89">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="121:92" pos:end="121:111"><expr pos:start="121:92" pos:end="121:111"><name pos:start="121:92" pos:end="121:111"><name pos:start="121:92" pos:end="121:92">s</name><operator pos:start="121:93" pos:end="121:94">-&gt;</operator><name pos:start="121:95" pos:end="121:105">mpeg_f_code</name><index pos:start="121:106" pos:end="121:108">[<expr pos:start="121:107" pos:end="121:107"><literal type="number" pos:start="121:107" pos:end="121:107">1</literal></expr>]</index><index pos:start="121:109" pos:end="121:111">[<expr pos:start="121:110" pos:end="121:110"><literal type="number" pos:start="121:110" pos:end="121:110">1</literal></expr>]</index></name></expr></argument>,

                 <argument pos:start="123:18" pos:end="123:117"><expr pos:start="123:18" pos:end="123:117"><ternary pos:start="123:18" pos:end="123:117"><condition pos:start="123:18" pos:end="123:41"><expr pos:start="123:18" pos:end="123:39"><name pos:start="123:18" pos:end="123:29"><name pos:start="123:18" pos:end="123:18">s</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:29">pict_type</name></name> <operator pos:start="123:31" pos:end="123:32">==</operator> <name pos:start="123:34" pos:end="123:39">I_TYPE</name></expr> ?</condition><then pos:start="123:43" pos:end="123:45"> <expr pos:start="123:43" pos:end="123:45"><literal type="string" pos:start="123:43" pos:end="123:45">"I"</literal></expr> </then><else pos:start="123:47" pos:end="123:117">: <expr pos:start="123:49" pos:end="123:117"><operator pos:start="123:49" pos:end="123:49">(</operator><ternary pos:start="123:50" pos:end="123:116"><condition pos:start="123:50" pos:end="123:73"><expr pos:start="123:50" pos:end="123:71"><name pos:start="123:50" pos:end="123:61"><name pos:start="123:50" pos:end="123:50">s</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:61">pict_type</name></name> <operator pos:start="123:63" pos:end="123:64">==</operator> <name pos:start="123:66" pos:end="123:71">P_TYPE</name></expr> ?</condition><then pos:start="123:75" pos:end="123:77"> <expr pos:start="123:75" pos:end="123:77"><literal type="string" pos:start="123:75" pos:end="123:77">"P"</literal></expr> </then><else pos:start="123:79" pos:end="123:116">: <expr pos:start="123:81" pos:end="123:116"><operator pos:start="123:81" pos:end="123:81">(</operator><ternary pos:start="123:82" pos:end="123:115"><condition pos:start="123:82" pos:end="123:105"><expr pos:start="123:82" pos:end="123:103"><name pos:start="123:82" pos:end="123:93"><name pos:start="123:82" pos:end="123:82">s</name><operator pos:start="123:83" pos:end="123:84">-&gt;</operator><name pos:start="123:85" pos:end="123:93">pict_type</name></name> <operator pos:start="123:95" pos:end="123:96">==</operator> <name pos:start="123:98" pos:end="123:103">B_TYPE</name></expr> ?</condition><then pos:start="123:107" pos:end="123:109"> <expr pos:start="123:107" pos:end="123:109"><literal type="string" pos:start="123:107" pos:end="123:109">"B"</literal></expr> </then><else pos:start="123:111" pos:end="123:115">: <expr pos:start="123:113" pos:end="123:115"><literal type="string" pos:start="123:113" pos:end="123:115">"S"</literal></expr></else></ternary><operator pos:start="123:116" pos:end="123:116">)</operator></expr></else></ternary><operator pos:start="123:117" pos:end="123:117">)</operator></expr></else></ternary></expr></argument>, 

                 <argument pos:start="125:18" pos:end="125:51"><expr pos:start="125:18" pos:end="125:51"><ternary pos:start="125:18" pos:end="125:51"><condition pos:start="125:18" pos:end="125:42"><expr pos:start="125:18" pos:end="125:40"><name pos:start="125:18" pos:end="125:40"><name pos:start="125:18" pos:end="125:18">s</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:40">progressive_sequence</name></name></expr> ?</condition><then pos:start="125:44" pos:end="125:47"> <expr pos:start="125:44" pos:end="125:47"><literal type="string" pos:start="125:44" pos:end="125:47">"ps"</literal></expr> </then><else pos:start="125:49" pos:end="125:51">:<expr pos:start="125:50" pos:end="125:51"><literal type="string" pos:start="125:50" pos:end="125:51">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="125:54" pos:end="125:85"><expr pos:start="125:54" pos:end="125:85"><ternary pos:start="125:54" pos:end="125:85"><condition pos:start="125:54" pos:end="125:75"><expr pos:start="125:54" pos:end="125:73"><name pos:start="125:54" pos:end="125:73"><name pos:start="125:54" pos:end="125:54">s</name><operator pos:start="125:55" pos:end="125:56">-&gt;</operator><name pos:start="125:57" pos:end="125:73">progressive_frame</name></name></expr> ?</condition><then pos:start="125:77" pos:end="125:80"> <expr pos:start="125:77" pos:end="125:80"><literal type="string" pos:start="125:77" pos:end="125:80">"pf"</literal></expr> </then><else pos:start="125:82" pos:end="125:85">: <expr pos:start="125:84" pos:end="125:85"><literal type="string" pos:start="125:84" pos:end="125:85">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="125:88" pos:end="125:116"><expr pos:start="125:88" pos:end="125:116"><ternary pos:start="125:88" pos:end="125:116"><condition pos:start="125:88" pos:end="125:106"><expr pos:start="125:88" pos:end="125:104"><name pos:start="125:88" pos:end="125:104"><name pos:start="125:88" pos:end="125:88">s</name><operator pos:start="125:89" pos:end="125:90">-&gt;</operator><name pos:start="125:91" pos:end="125:104">alternate_scan</name></name></expr> ?</condition><then pos:start="125:108" pos:end="125:112"> <expr pos:start="125:108" pos:end="125:112"><literal type="string" pos:start="125:108" pos:end="125:112">"alt"</literal></expr> </then><else pos:start="125:114" pos:end="125:116">:<expr pos:start="125:115" pos:end="125:116"><literal type="string" pos:start="125:115" pos:end="125:116">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="125:119" pos:end="125:148"><expr pos:start="125:119" pos:end="125:148"><ternary pos:start="125:119" pos:end="125:148"><condition pos:start="125:119" pos:end="125:138"><expr pos:start="125:119" pos:end="125:136"><name pos:start="125:119" pos:end="125:136"><name pos:start="125:119" pos:end="125:119">s</name><operator pos:start="125:120" pos:end="125:121">-&gt;</operator><name pos:start="125:122" pos:end="125:136">top_field_first</name></name></expr> ?</condition><then pos:start="125:140" pos:end="125:144"> <expr pos:start="125:140" pos:end="125:144"><literal type="string" pos:start="125:140" pos:end="125:144">"top"</literal></expr> </then><else pos:start="125:146" pos:end="125:148">:<expr pos:start="125:147" pos:end="125:148"><literal type="string" pos:start="125:147" pos:end="125:148">""</literal></expr></else></ternary></expr></argument>, 

                 <argument pos:start="127:18" pos:end="127:38"><expr pos:start="127:18" pos:end="127:38"><name pos:start="127:18" pos:end="127:38"><name pos:start="127:18" pos:end="127:18">s</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:38">intra_dc_precision</name></name></expr></argument>, <argument pos:start="127:41" pos:end="127:60"><expr pos:start="127:41" pos:end="127:60"><name pos:start="127:41" pos:end="127:60"><name pos:start="127:41" pos:end="127:41">s</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:60">picture_structure</name></name></expr></argument>, <argument pos:start="127:63" pos:end="127:85"><expr pos:start="127:63" pos:end="127:85"><name pos:start="127:63" pos:end="127:85"><name pos:start="127:63" pos:end="127:63">s</name><operator pos:start="127:64" pos:end="127:65">-&gt;</operator><name pos:start="127:66" pos:end="127:85">frame_pred_frame_dct</name></name></expr></argument>, <argument pos:start="127:88" pos:end="127:116"><expr pos:start="127:88" pos:end="127:116"><name pos:start="127:88" pos:end="127:116"><name pos:start="127:88" pos:end="127:88">s</name><operator pos:start="127:89" pos:end="127:90">-&gt;</operator><name pos:start="127:91" pos:end="127:116">concealment_motion_vectors</name></name></expr></argument>,

                 <argument pos:start="129:18" pos:end="129:32"><expr pos:start="129:18" pos:end="129:32"><name pos:start="129:18" pos:end="129:32"><name pos:start="129:18" pos:end="129:18">s</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:32">q_scale_type</name></name></expr></argument>, <argument pos:start="129:35" pos:end="129:53"><expr pos:start="129:35" pos:end="129:53"><name pos:start="129:35" pos:end="129:53"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:53">intra_vlc_format</name></name></expr></argument>, <argument pos:start="129:56" pos:end="129:76"><expr pos:start="129:56" pos:end="129:76"><name pos:start="129:56" pos:end="129:76"><name pos:start="129:56" pos:end="129:56">s</name><operator pos:start="129:57" pos:end="129:58">-&gt;</operator><name pos:start="129:59" pos:end="129:76">repeat_first_field</name></name></expr></argument>, <argument pos:start="129:79" pos:end="129:108"><expr pos:start="129:79" pos:end="129:108"><ternary pos:start="129:79" pos:end="129:108"><condition pos:start="129:79" pos:end="129:98"><expr pos:start="129:79" pos:end="129:96"><name pos:start="129:79" pos:end="129:96"><name pos:start="129:79" pos:end="129:79">s</name><operator pos:start="129:80" pos:end="129:81">-&gt;</operator><name pos:start="129:82" pos:end="129:96">chroma_420_type</name></name></expr> ?</condition><then pos:start="129:100" pos:end="129:104"> <expr pos:start="129:100" pos:end="129:104"><literal type="string" pos:start="129:100" pos:end="129:104">"420"</literal></expr> </then><else pos:start="129:106" pos:end="129:108">:<expr pos:start="129:107" pos:end="129:108"><literal type="string" pos:start="129:107" pos:end="129:108">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>    

    

    <for pos:start="137:5" pos:end="337:5">for<control pos:start="137:8" pos:end="137:11">(<init pos:start="137:9" pos:end="137:9">;</init><condition pos:start="137:10" pos:end="137:10">;</condition><incr/>)</control> <block pos:start="137:13" pos:end="337:5">{<block_content pos:start="143:9" pos:end="335:9">

<cpp:ifdef pos:start="139:1" pos:end="139:16">#<cpp:directive pos:start="139:2" pos:end="139:6">ifdef</cpp:directive> <name pos:start="139:8" pos:end="139:16">HAVE_XVMC</name></cpp:ifdef>

        <comment type="line" pos:start="141:9" pos:end="141:45">//one 1 we memcpy blocks in xvmcvideo</comment>

        <if_stmt pos:start="143:9" pos:end="148:0"><if pos:start="143:9" pos:end="148:0">if<condition pos:start="143:11" pos:end="143:43">(<expr pos:start="143:12" pos:end="143:42"><name pos:start="143:12" pos:end="143:38"><name pos:start="143:12" pos:end="143:12">s</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:19">avctx</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:38">xvmc_acceleration</name></name> <operator pos:start="143:40" pos:end="143:40">&gt;</operator> <literal type="number" pos:start="143:42" pos:end="143:42">1</literal></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="148:0"><block_content pos:start="145:13" pos:end="148:0">

            <expr_stmt pos:start="145:13" pos:end="148:0"><expr pos:start="145:13" pos:end="145:30"><call pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:27">XVMC_init_block</name><argument_list pos:start="145:28" pos:end="145:30">(<argument pos:start="145:29" pos:end="145:29"><expr pos:start="145:29" pos:end="145:29"><name pos:start="145:29" pos:end="145:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt><comment type="line" pos:start="145:32" pos:end="145:45">//set s-&gt;block</comment>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>



	<expr_stmt pos:start="151:9" pos:end="151:41"><expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:14">dsp</name><operator pos:start="151:15" pos:end="151:15">.</operator><name pos:start="151:16" pos:end="151:27">clear_blocks</name></name><argument_list pos:start="151:28" pos:end="151:40">(<argument pos:start="151:29" pos:end="151:39"><expr pos:start="151:29" pos:end="151:39"><name pos:start="151:29" pos:end="151:39"><name pos:start="151:29" pos:end="151:29">s</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:36">block</name><index pos:start="151:37" pos:end="151:39">[<expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:42"><expr pos:start="155:9" pos:end="155:41"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:41"><name pos:start="155:15" pos:end="155:28">mpeg_decode_mb</name><argument_list pos:start="155:29" pos:end="155:41">(<argument pos:start="155:30" pos:end="155:30"><expr pos:start="155:30" pos:end="155:30"><name pos:start="155:30" pos:end="155:30">s</name></expr></argument>, <argument pos:start="155:33" pos:end="155:40"><expr pos:start="155:33" pos:end="155:40"><name pos:start="155:33" pos:end="155:40"><name pos:start="155:33" pos:end="155:33">s</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:40">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:36"><expr pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:24">chroma_qscale</name></name><operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:35"><name pos:start="157:27" pos:end="157:27">s</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:35">qscale</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:33"><expr pos:start="161:9" pos:end="161:32"><call pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:15">dprintf</name><argument_list pos:start="161:16" pos:end="161:32">(<argument pos:start="161:17" pos:end="161:26"><expr pos:start="161:17" pos:end="161:26"><literal type="string" pos:start="161:17" pos:end="161:26">"ret=%d\n"</literal></expr></argument>, <argument pos:start="161:29" pos:end="161:31"><expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:31">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:22"><if pos:start="163:9" pos:end="165:22">if <condition pos:start="163:12" pos:end="163:20">(<expr pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:17">&lt;</operator> <literal type="number" pos:start="163:19" pos:end="163:19">0</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:22"><block_content pos:start="165:13" pos:end="165:22">

            <return pos:start="165:13" pos:end="165:22">return <expr pos:start="165:20" pos:end="165:21"><operator pos:start="165:20" pos:end="165:20">-</operator><literal type="number" pos:start="165:21" pos:end="165:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="169:9" pos:end="225:9"><if pos:start="169:9" pos:end="225:9">if<condition pos:start="169:11" pos:end="169:60">(<expr pos:start="169:12" pos:end="169:59"><name pos:start="169:12" pos:end="169:43"><name pos:start="169:12" pos:end="169:12">s</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:29">current_picture</name><operator pos:start="169:30" pos:end="169:30">.</operator><name pos:start="169:31" pos:end="169:40">motion_val</name><index pos:start="169:41" pos:end="169:43">[<expr pos:start="169:42" pos:end="169:42"><literal type="number" pos:start="169:42" pos:end="169:42">0</literal></expr>]</index></name> <operator pos:start="169:45" pos:end="169:46">&amp;&amp;</operator> <operator pos:start="169:48" pos:end="169:48">!</operator><name pos:start="169:49" pos:end="169:59"><name pos:start="169:49" pos:end="169:49">s</name><operator pos:start="169:50" pos:end="169:51">-&gt;</operator><name pos:start="169:52" pos:end="169:59">encoding</name></name></expr>)</condition><block pos:start="169:61" pos:end="225:9">{<block_content pos:start="171:13" pos:end="223:13"> <comment type="line" pos:start="169:63" pos:end="169:130">//note motion_val is normally NULL unless we want to extract the MVs</comment>

            <decl_stmt pos:start="171:13" pos:end="171:71"><decl pos:start="171:13" pos:end="171:70"><type pos:start="171:13" pos:end="171:21"><specifier pos:start="171:13" pos:end="171:17">const</specifier> <name pos:start="171:19" pos:end="171:21">int</name></type> <name pos:start="171:23" pos:end="171:26">wrap</name> <init pos:start="171:28" pos:end="171:70">= <expr pos:start="171:30" pos:end="171:70"><ternary pos:start="171:30" pos:end="171:70"><condition pos:start="171:30" pos:end="171:40"><expr pos:start="171:30" pos:end="171:38"><name pos:start="171:30" pos:end="171:38">field_pic</name></expr> ?</condition><then pos:start="171:42" pos:end="171:55"> <expr pos:start="171:42" pos:end="171:55"><literal type="number" pos:start="171:42" pos:end="171:42">2</literal><operator pos:start="171:43" pos:end="171:43">*</operator><name pos:start="171:44" pos:end="171:55"><name pos:start="171:44" pos:end="171:44">s</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:55">b8_stride</name></name></expr> </then><else pos:start="171:57" pos:end="171:70">: <expr pos:start="171:59" pos:end="171:70"><name pos:start="171:59" pos:end="171:70"><name pos:start="171:59" pos:end="171:59">s</name><operator pos:start="171:60" pos:end="171:61">-&gt;</operator><name pos:start="171:62" pos:end="171:70">b8_stride</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:48"><decl pos:start="173:13" pos:end="173:47"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:18">xy</name> <init pos:start="173:20" pos:end="173:47">= <expr pos:start="173:22" pos:end="173:47"><name pos:start="173:22" pos:end="173:28"><name pos:start="173:22" pos:end="173:22">s</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:28">mb_x</name></name><operator pos:start="173:29" pos:end="173:29">*</operator><literal type="number" pos:start="173:30" pos:end="173:32">2</literal> <operator pos:start="173:32" pos:end="173:32">+</operator> <name pos:start="173:34" pos:end="173:40"><name pos:start="173:34" pos:end="173:34">s</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:40">mb_y</name></name><operator pos:start="173:41" pos:end="173:41">*</operator><literal type="number" pos:start="173:42" pos:end="173:42">2</literal><operator pos:start="173:43" pos:end="173:43">*</operator><name pos:start="173:44" pos:end="173:47">wrap</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:43"><decl pos:start="175:13" pos:end="175:24"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:24">motion_x</name></decl>, <decl pos:start="175:27" pos:end="175:34"><type ref="prev" pos:start="175:13" pos:end="175:15"/><name pos:start="175:27" pos:end="175:34">motion_y</name></decl>, <decl pos:start="175:37" pos:end="175:39"><type ref="prev" pos:start="175:13" pos:end="175:15"/><name pos:start="175:37" pos:end="175:39">dir</name></decl>, <decl pos:start="175:42" pos:end="175:42"><type ref="prev" pos:start="175:13" pos:end="175:15"/><name pos:start="175:42" pos:end="175:42">i</name></decl>;</decl_stmt>

            <if_stmt pos:start="177:13" pos:end="179:29"><if pos:start="177:13" pos:end="179:29">if<condition pos:start="177:15" pos:end="177:44">(<expr pos:start="177:16" pos:end="177:43"><name pos:start="177:16" pos:end="177:24">field_pic</name> <operator pos:start="177:26" pos:end="177:27">&amp;&amp;</operator> <operator pos:start="177:29" pos:end="177:29">!</operator><name pos:start="177:30" pos:end="177:43"><name pos:start="177:30" pos:end="177:30">s</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:43">first_field</name></name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:29"><block_content pos:start="179:17" pos:end="179:29">

                <expr_stmt pos:start="179:17" pos:end="179:29"><expr pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:18">xy</name> <operator pos:start="179:20" pos:end="179:21">+=</operator> <name pos:start="179:23" pos:end="179:26">wrap</name><operator pos:start="179:27" pos:end="179:27">/</operator><literal type="number" pos:start="179:28" pos:end="179:28">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <for pos:start="183:13" pos:end="223:13">for<control pos:start="183:16" pos:end="183:30">(<init pos:start="183:17" pos:end="183:20"><expr pos:start="183:17" pos:end="183:19"><name pos:start="183:17" pos:end="183:17">i</name><operator pos:start="183:18" pos:end="183:18">=</operator><literal type="number" pos:start="183:19" pos:end="183:19">0</literal></expr>;</init> <condition pos:start="183:22" pos:end="183:25"><expr pos:start="183:22" pos:end="183:24"><name pos:start="183:22" pos:end="183:22">i</name><operator pos:start="183:23" pos:end="183:23">&lt;</operator><literal type="number" pos:start="183:24" pos:end="183:24">2</literal></expr>;</condition> <incr pos:start="183:27" pos:end="183:29"><expr pos:start="183:27" pos:end="183:29"><name pos:start="183:27" pos:end="183:27">i</name><operator pos:start="183:28" pos:end="183:29">++</operator></expr></incr>)</control><block pos:start="183:31" pos:end="223:13">{<block_content pos:start="185:17" pos:end="221:27">

                <for pos:start="185:17" pos:end="219:17">for<control pos:start="185:20" pos:end="185:40">(<init pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:23">dir</name><operator pos:start="185:24" pos:end="185:24">=</operator><literal type="number" pos:start="185:25" pos:end="185:25">0</literal></expr>;</init> <condition pos:start="185:28" pos:end="185:33"><expr pos:start="185:28" pos:end="185:32"><name pos:start="185:28" pos:end="185:30">dir</name><operator pos:start="185:31" pos:end="185:31">&lt;</operator><literal type="number" pos:start="185:32" pos:end="185:32">2</literal></expr>;</condition> <incr pos:start="185:35" pos:end="185:39"><expr pos:start="185:35" pos:end="185:39"><name pos:start="185:35" pos:end="185:37">dir</name><operator pos:start="185:38" pos:end="185:39">++</operator></expr></incr>)</control><block pos:start="185:41" pos:end="219:17">{<block_content pos:start="187:21" pos:end="217:88">

                    <if_stmt pos:start="187:21" pos:end="203:21"><if pos:start="187:21" pos:end="191:21">if <condition pos:start="187:24" pos:end="187:74">(<expr pos:start="187:25" pos:end="187:73"><name pos:start="187:25" pos:end="187:35"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:35">mb_intra</name></name> <operator pos:start="187:37" pos:end="187:38">||</operator> <operator pos:start="187:40" pos:end="187:40">(</operator><name pos:start="187:41" pos:end="187:43">dir</name><operator pos:start="187:44" pos:end="187:45">==</operator><literal type="number" pos:start="187:46" pos:end="187:46">1</literal> <operator pos:start="187:48" pos:end="187:49">&amp;&amp;</operator> <name pos:start="187:51" pos:end="187:62"><name pos:start="187:51" pos:end="187:51">s</name><operator pos:start="187:52" pos:end="187:53">-&gt;</operator><name pos:start="187:54" pos:end="187:62">pict_type</name></name> <operator pos:start="187:64" pos:end="187:65">!=</operator> <name pos:start="187:67" pos:end="187:72">B_TYPE</name><operator pos:start="187:73" pos:end="187:73">)</operator></expr>)</condition> <block pos:start="187:76" pos:end="191:21">{<block_content pos:start="189:25" pos:end="189:48">

                        <expr_stmt pos:start="189:25" pos:end="189:48"><expr pos:start="189:25" pos:end="189:47"><name pos:start="189:25" pos:end="189:32">motion_x</name> <operator pos:start="189:34" pos:end="189:34">=</operator> <name pos:start="189:36" pos:end="189:43">motion_y</name> <operator pos:start="189:45" pos:end="189:45">=</operator> <literal type="number" pos:start="189:47" pos:end="189:47">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><if type="elseif" pos:start="191:22" pos:end="197:21">else if <condition pos:start="191:30" pos:end="191:104">(<expr pos:start="191:31" pos:end="191:103"><name pos:start="191:31" pos:end="191:40"><name pos:start="191:31" pos:end="191:31">s</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:40">mv_type</name></name> <operator pos:start="191:42" pos:end="191:43">==</operator> <name pos:start="191:45" pos:end="191:57">MV_TYPE_16X16</name> <operator pos:start="191:59" pos:end="191:60">||</operator> <operator pos:start="191:62" pos:end="191:62">(</operator><name pos:start="191:63" pos:end="191:72"><name pos:start="191:63" pos:end="191:63">s</name><operator pos:start="191:64" pos:end="191:65">-&gt;</operator><name pos:start="191:66" pos:end="191:72">mv_type</name></name> <operator pos:start="191:74" pos:end="191:75">==</operator> <name pos:start="191:77" pos:end="191:89">MV_TYPE_FIELD</name> <operator pos:start="191:91" pos:end="191:92">&amp;&amp;</operator> <name pos:start="191:94" pos:end="191:102">field_pic</name><operator pos:start="191:103" pos:end="191:103">)</operator></expr>)</condition><block pos:start="191:105" pos:end="197:21">{<block_content pos:start="193:25" pos:end="195:52">

                        <expr_stmt pos:start="193:25" pos:end="193:52"><expr pos:start="193:25" pos:end="193:51"><name pos:start="193:25" pos:end="193:32">motion_x</name> <operator pos:start="193:34" pos:end="193:34">=</operator> <name pos:start="193:36" pos:end="193:51"><name pos:start="193:36" pos:end="193:36">s</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:40">mv</name><index pos:start="193:41" pos:end="193:45">[<expr pos:start="193:42" pos:end="193:44"><name pos:start="193:42" pos:end="193:44">dir</name></expr>]</index><index pos:start="193:46" pos:end="193:48">[<expr pos:start="193:47" pos:end="193:47"><literal type="number" pos:start="193:47" pos:end="193:47">0</literal></expr>]</index><index pos:start="193:49" pos:end="193:51">[<expr pos:start="193:50" pos:end="193:50"><literal type="number" pos:start="193:50" pos:end="193:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:52"><expr pos:start="195:25" pos:end="195:51"><name pos:start="195:25" pos:end="195:32">motion_y</name> <operator pos:start="195:34" pos:end="195:34">=</operator> <name pos:start="195:36" pos:end="195:51"><name pos:start="195:36" pos:end="195:36">s</name><operator pos:start="195:37" pos:end="195:38">-&gt;</operator><name pos:start="195:39" pos:end="195:40">mv</name><index pos:start="195:41" pos:end="195:45">[<expr pos:start="195:42" pos:end="195:44"><name pos:start="195:42" pos:end="195:44">dir</name></expr>]</index><index pos:start="195:46" pos:end="195:48">[<expr pos:start="195:47" pos:end="195:47"><literal type="number" pos:start="195:47" pos:end="195:47">0</literal></expr>]</index><index pos:start="195:49" pos:end="195:51">[<expr pos:start="195:50" pos:end="195:50"><literal type="number" pos:start="195:50" pos:end="195:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="197:23" pos:end="203:21">else <comment type="block" pos:start="197:28" pos:end="197:97">/*if ((s-&gt;mv_type == MV_TYPE_FIELD) || (s-&gt;mv_type == MV_TYPE_16X8))*/</comment> <block pos:start="197:99" pos:end="203:21">{<block_content pos:start="199:25" pos:end="201:52">

                        <expr_stmt pos:start="199:25" pos:end="199:52"><expr pos:start="199:25" pos:end="199:51"><name pos:start="199:25" pos:end="199:32">motion_x</name> <operator pos:start="199:34" pos:end="199:34">=</operator> <name pos:start="199:36" pos:end="199:51"><name pos:start="199:36" pos:end="199:36">s</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:40">mv</name><index pos:start="199:41" pos:end="199:45">[<expr pos:start="199:42" pos:end="199:44"><name pos:start="199:42" pos:end="199:44">dir</name></expr>]</index><index pos:start="199:46" pos:end="199:48">[<expr pos:start="199:47" pos:end="199:47"><name pos:start="199:47" pos:end="199:47">i</name></expr>]</index><index pos:start="199:49" pos:end="199:51">[<expr pos:start="199:50" pos:end="199:50"><literal type="number" pos:start="199:50" pos:end="199:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:52"><expr pos:start="201:25" pos:end="201:51"><name pos:start="201:25" pos:end="201:32">motion_y</name> <operator pos:start="201:34" pos:end="201:34">=</operator> <name pos:start="201:36" pos:end="201:51"><name pos:start="201:36" pos:end="201:36">s</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:40">mv</name><index pos:start="201:41" pos:end="201:45">[<expr pos:start="201:42" pos:end="201:44"><name pos:start="201:42" pos:end="201:44">dir</name></expr>]</index><index pos:start="201:46" pos:end="201:48">[<expr pos:start="201:47" pos:end="201:47"><name pos:start="201:47" pos:end="201:47">i</name></expr>]</index><index pos:start="201:49" pos:end="201:51">[<expr pos:start="201:50" pos:end="201:50"><literal type="number" pos:start="201:50" pos:end="201:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="207:21" pos:end="207:77"><expr pos:start="207:21" pos:end="207:76"><name pos:start="207:21" pos:end="207:65"><name pos:start="207:21" pos:end="207:21">s</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:38">current_picture</name><operator pos:start="207:39" pos:end="207:39">.</operator><name pos:start="207:40" pos:end="207:49">motion_val</name><index pos:start="207:50" pos:end="207:54">[<expr pos:start="207:51" pos:end="207:53"><name pos:start="207:51" pos:end="207:53">dir</name></expr>]</index><index pos:start="207:55" pos:end="207:62">[<expr pos:start="207:56" pos:end="207:57"><name pos:start="207:56" pos:end="207:57">xy</name></expr>    ]</index><index pos:start="207:63" pos:end="207:65">[<expr pos:start="207:64" pos:end="207:64"><literal type="number" pos:start="207:64" pos:end="207:64">0</literal></expr>]</index></name> <operator pos:start="207:67" pos:end="207:67">=</operator> <name pos:start="207:69" pos:end="207:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:77"><expr pos:start="209:21" pos:end="209:76"><name pos:start="209:21" pos:end="209:65"><name pos:start="209:21" pos:end="209:21">s</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:38">current_picture</name><operator pos:start="209:39" pos:end="209:39">.</operator><name pos:start="209:40" pos:end="209:49">motion_val</name><index pos:start="209:50" pos:end="209:54">[<expr pos:start="209:51" pos:end="209:53"><name pos:start="209:51" pos:end="209:53">dir</name></expr>]</index><index pos:start="209:55" pos:end="209:62">[<expr pos:start="209:56" pos:end="209:57"><name pos:start="209:56" pos:end="209:57">xy</name></expr>    ]</index><index pos:start="209:63" pos:end="209:65">[<expr pos:start="209:64" pos:end="209:64"><literal type="number" pos:start="209:64" pos:end="209:64">1</literal></expr>]</index></name> <operator pos:start="209:67" pos:end="209:67">=</operator> <name pos:start="209:69" pos:end="209:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:77"><expr pos:start="211:21" pos:end="211:76"><name pos:start="211:21" pos:end="211:65"><name pos:start="211:21" pos:end="211:21">s</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:38">current_picture</name><operator pos:start="211:39" pos:end="211:39">.</operator><name pos:start="211:40" pos:end="211:49">motion_val</name><index pos:start="211:50" pos:end="211:54">[<expr pos:start="211:51" pos:end="211:53"><name pos:start="211:51" pos:end="211:53">dir</name></expr>]</index><index pos:start="211:55" pos:end="211:62">[<expr pos:start="211:56" pos:end="211:61"><name pos:start="211:56" pos:end="211:57">xy</name> <operator pos:start="211:59" pos:end="211:59">+</operator> <literal type="number" pos:start="211:61" pos:end="211:61">1</literal></expr>]</index><index pos:start="211:63" pos:end="211:65">[<expr pos:start="211:64" pos:end="211:64"><literal type="number" pos:start="211:64" pos:end="211:64">0</literal></expr>]</index></name> <operator pos:start="211:67" pos:end="211:67">=</operator> <name pos:start="211:69" pos:end="211:76">motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:77"><expr pos:start="213:21" pos:end="213:76"><name pos:start="213:21" pos:end="213:65"><name pos:start="213:21" pos:end="213:21">s</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:38">current_picture</name><operator pos:start="213:39" pos:end="213:39">.</operator><name pos:start="213:40" pos:end="213:49">motion_val</name><index pos:start="213:50" pos:end="213:54">[<expr pos:start="213:51" pos:end="213:53"><name pos:start="213:51" pos:end="213:53">dir</name></expr>]</index><index pos:start="213:55" pos:end="213:62">[<expr pos:start="213:56" pos:end="213:61"><name pos:start="213:56" pos:end="213:57">xy</name> <operator pos:start="213:59" pos:end="213:59">+</operator> <literal type="number" pos:start="213:61" pos:end="213:61">1</literal></expr>]</index><index pos:start="213:63" pos:end="213:65">[<expr pos:start="213:64" pos:end="213:64"><literal type="number" pos:start="213:64" pos:end="213:64">1</literal></expr>]</index></name> <operator pos:start="213:67" pos:end="213:67">=</operator> <name pos:start="213:69" pos:end="213:76">motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="217:88"><expr pos:start="215:21" pos:end="217:87"><name pos:start="215:21" pos:end="215:62"><name pos:start="215:21" pos:end="215:21">s</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:38">current_picture</name><operator pos:start="215:39" pos:end="215:39">.</operator><name pos:start="215:40" pos:end="215:48">ref_index</name> <index pos:start="215:50" pos:end="215:54">[<expr pos:start="215:51" pos:end="215:53"><name pos:start="215:51" pos:end="215:53">dir</name></expr>]</index><index pos:start="215:55" pos:end="215:62">[<expr pos:start="215:56" pos:end="215:57"><name pos:start="215:56" pos:end="215:57">xy</name></expr>    ]</index></name><operator pos:start="215:63" pos:end="215:63">=</operator>

                    <name pos:start="217:21" pos:end="217:62"><name pos:start="217:21" pos:end="217:21">s</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:38">current_picture</name><operator pos:start="217:39" pos:end="217:39">.</operator><name pos:start="217:40" pos:end="217:48">ref_index</name> <index pos:start="217:50" pos:end="217:54">[<expr pos:start="217:51" pos:end="217:53"><name pos:start="217:51" pos:end="217:53">dir</name></expr>]</index><index pos:start="217:55" pos:end="217:62">[<expr pos:start="217:56" pos:end="217:61"><name pos:start="217:56" pos:end="217:57">xy</name> <operator pos:start="217:59" pos:end="217:59">+</operator> <literal type="number" pos:start="217:61" pos:end="217:61">1</literal></expr>]</index></name><operator pos:start="217:63" pos:end="217:63">=</operator> <name pos:start="217:65" pos:end="217:87"><name pos:start="217:65" pos:end="217:65">s</name><operator pos:start="217:66" pos:end="217:67">-&gt;</operator><name pos:start="217:68" pos:end="217:79">field_select</name><index pos:start="217:80" pos:end="217:84">[<expr pos:start="217:81" pos:end="217:83"><name pos:start="217:81" pos:end="217:83">dir</name></expr>]</index><index pos:start="217:85" pos:end="217:87">[<expr pos:start="217:86" pos:end="217:86"><name pos:start="217:86" pos:end="217:86">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="221:17" pos:end="221:27"><expr pos:start="221:17" pos:end="221:26"><name pos:start="221:17" pos:end="221:18">xy</name> <operator pos:start="221:20" pos:end="221:21">+=</operator> <name pos:start="221:23" pos:end="221:26">wrap</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="229:9" pos:end="229:25"><expr pos:start="229:9" pos:end="229:24"><name pos:start="229:9" pos:end="229:18"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:15">dest</name><index pos:start="229:16" pos:end="229:18">[<expr pos:start="229:17" pos:end="229:17"><literal type="number" pos:start="229:17" pos:end="229:17">0</literal></expr>]</index></name> <operator pos:start="229:20" pos:end="229:21">+=</operator> <literal type="number" pos:start="229:23" pos:end="229:24">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:24"><expr pos:start="231:9" pos:end="231:23"><name pos:start="231:9" pos:end="231:18"><name pos:start="231:9" pos:end="231:9">s</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:15">dest</name><index pos:start="231:16" pos:end="231:18">[<expr pos:start="231:17" pos:end="231:17"><literal type="number" pos:start="231:17" pos:end="231:17">1</literal></expr>]</index></name> <operator pos:start="231:20" pos:end="231:21">+=</operator> <literal type="number" pos:start="231:23" pos:end="231:23">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:24"><expr pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:18"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:15">dest</name><index pos:start="233:16" pos:end="233:18">[<expr pos:start="233:17" pos:end="233:17"><literal type="number" pos:start="233:17" pos:end="233:17">2</literal></expr>]</index></name> <operator pos:start="233:20" pos:end="233:21">+=</operator> <literal type="number" pos:start="233:23" pos:end="233:23">8</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="237:9" pos:end="237:35"><expr pos:start="237:9" pos:end="237:34"><call pos:start="237:9" pos:end="237:34"><name pos:start="237:9" pos:end="237:21">MPV_decode_mb</name><argument_list pos:start="237:22" pos:end="237:34">(<argument pos:start="237:23" pos:end="237:23"><expr pos:start="237:23" pos:end="237:23"><name pos:start="237:23" pos:end="237:23">s</name></expr></argument>, <argument pos:start="237:26" pos:end="237:33"><expr pos:start="237:26" pos:end="237:33"><name pos:start="237:26" pos:end="237:33"><name pos:start="237:26" pos:end="237:26">s</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:33">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="241:9" pos:end="279:9"><if pos:start="241:9" pos:end="279:9">if <condition pos:start="241:12" pos:end="241:37">(<expr pos:start="241:13" pos:end="241:36"><operator pos:start="241:13" pos:end="241:14">++</operator><name pos:start="241:15" pos:end="241:21"><name pos:start="241:15" pos:end="241:15">s</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:21">mb_x</name></name> <operator pos:start="241:23" pos:end="241:24">&gt;=</operator> <name pos:start="241:26" pos:end="241:36"><name pos:start="241:26" pos:end="241:26">s</name><operator pos:start="241:27" pos:end="241:28">-&gt;</operator><name pos:start="241:29" pos:end="241:36">mb_width</name></name></expr>)</condition> <block pos:start="241:39" pos:end="279:9">{<block_content pos:start="245:13" pos:end="277:35">



            <expr_stmt pos:start="245:13" pos:end="245:50"><expr pos:start="245:13" pos:end="245:49"><call pos:start="245:13" pos:end="245:49"><name pos:start="245:13" pos:end="245:30">ff_draw_horiz_band</name><argument_list pos:start="245:31" pos:end="245:49">(<argument pos:start="245:32" pos:end="245:32"><expr pos:start="245:32" pos:end="245:32"><name pos:start="245:32" pos:end="245:32">s</name></expr></argument>, <argument pos:start="245:35" pos:end="245:44"><expr pos:start="245:35" pos:end="245:44"><literal type="number" pos:start="245:35" pos:end="245:36">16</literal><operator pos:start="245:37" pos:end="245:37">*</operator><name pos:start="245:38" pos:end="245:44"><name pos:start="245:38" pos:end="245:38">s</name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:44">mb_y</name></name></expr></argument>, <argument pos:start="245:47" pos:end="245:48"><expr pos:start="245:47" pos:end="245:48"><literal type="number" pos:start="245:47" pos:end="245:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="249:13" pos:end="249:24"><expr pos:start="249:13" pos:end="249:23"><name pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:19">mb_x</name></name> <operator pos:start="249:21" pos:end="249:21">=</operator> <literal type="number" pos:start="249:23" pos:end="249:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:22"><expr pos:start="251:13" pos:end="251:21"><name pos:start="251:13" pos:end="251:19"><name pos:start="251:13" pos:end="251:13">s</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:19">mb_y</name></name><operator pos:start="251:20" pos:end="251:21">++</operator></expr>;</expr_stmt>



            <if_stmt pos:start="255:13" pos:end="273:13"><if pos:start="255:13" pos:end="273:13">if<condition pos:start="255:15" pos:end="255:50">(<expr pos:start="255:16" pos:end="255:49"><name pos:start="255:16" pos:end="255:22"><name pos:start="255:16" pos:end="255:16">s</name><operator pos:start="255:17" pos:end="255:18">-&gt;</operator><name pos:start="255:19" pos:end="255:22">mb_y</name></name><operator pos:start="255:23" pos:end="255:24">&lt;&lt;</operator><name pos:start="255:25" pos:end="255:33">field_pic</name> <operator pos:start="255:35" pos:end="255:36">&gt;=</operator> <name pos:start="255:38" pos:end="255:49"><name pos:start="255:38" pos:end="255:38">s</name><operator pos:start="255:39" pos:end="255:40">-&gt;</operator><name pos:start="255:41" pos:end="255:49">mb_height</name></name></expr>)</condition><block pos:start="255:51" pos:end="273:13">{<block_content pos:start="257:17" pos:end="271:29">

                <decl_stmt pos:start="257:17" pos:end="257:70"><decl pos:start="257:17" pos:end="257:69"><type pos:start="257:17" pos:end="257:19"><name pos:start="257:17" pos:end="257:19">int</name></type> <name pos:start="257:21" pos:end="257:24">left</name><init pos:start="257:25" pos:end="257:69">= <expr pos:start="257:27" pos:end="257:69"><name pos:start="257:27" pos:end="257:44"><name pos:start="257:27" pos:end="257:27">s</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:31">gb</name><operator pos:start="257:32" pos:end="257:32">.</operator><name pos:start="257:33" pos:end="257:44">size_in_bits</name></name> <operator pos:start="257:46" pos:end="257:46">-</operator> <call pos:start="257:48" pos:end="257:69"><name pos:start="257:48" pos:end="257:61">get_bits_count</name><argument_list pos:start="257:62" pos:end="257:69">(<argument pos:start="257:63" pos:end="257:68"><expr pos:start="257:63" pos:end="257:68"><operator pos:start="257:63" pos:end="257:63">&amp;</operator><name pos:start="257:64" pos:end="257:68"><name pos:start="257:64" pos:end="257:64">s</name><operator pos:start="257:65" pos:end="257:66">-&gt;</operator><name pos:start="257:67" pos:end="257:68">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="261:17" pos:end="271:29"><if pos:start="261:17" pos:end="269:17">if<condition pos:start="261:19" pos:end="263:78">(<expr pos:start="261:20" pos:end="263:77"><name pos:start="261:20" pos:end="261:23">left</name> <operator pos:start="261:25" pos:end="261:25">&lt;</operator> <literal type="number" pos:start="261:27" pos:end="261:27">0</literal> <operator pos:start="261:29" pos:end="261:30">||</operator> <operator pos:start="261:32" pos:end="261:32">(</operator><name pos:start="261:33" pos:end="261:36">left</name> <operator pos:start="261:38" pos:end="261:39">&amp;&amp;</operator> <call pos:start="261:41" pos:end="261:74"><name pos:start="261:41" pos:end="261:49">show_bits</name><argument_list pos:start="261:50" pos:end="261:74">(<argument pos:start="261:51" pos:end="261:56"><expr pos:start="261:51" pos:end="261:56"><operator pos:start="261:51" pos:end="261:51">&amp;</operator><name pos:start="261:52" pos:end="261:56"><name pos:start="261:52" pos:end="261:52">s</name><operator pos:start="261:53" pos:end="261:54">-&gt;</operator><name pos:start="261:55" pos:end="261:56">gb</name></name></expr></argument>, <argument pos:start="261:59" pos:end="261:73"><expr pos:start="261:59" pos:end="261:73"><call pos:start="261:59" pos:end="261:73"><name pos:start="261:59" pos:end="261:63">FFMIN</name><argument_list pos:start="261:64" pos:end="261:73">(<argument pos:start="261:65" pos:end="261:68"><expr pos:start="261:65" pos:end="261:68"><name pos:start="261:65" pos:end="261:68">left</name></expr></argument>, <argument pos:start="261:71" pos:end="261:72"><expr pos:start="261:71" pos:end="261:72"><literal type="number" pos:start="261:71" pos:end="261:72">23</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="261:75" pos:end="261:75">)</operator>

                   <operator pos:start="263:20" pos:end="263:21">||</operator> <operator pos:start="263:23" pos:end="263:23">(</operator><name pos:start="263:24" pos:end="263:46"><name pos:start="263:24" pos:end="263:28">avctx</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:46">error_resilience</name></name> <operator pos:start="263:48" pos:end="263:49">&gt;=</operator> <name pos:start="263:51" pos:end="263:66">FF_ER_AGGRESSIVE</name> <operator pos:start="263:68" pos:end="263:69">&amp;&amp;</operator> <name pos:start="263:71" pos:end="263:74">left</name><operator pos:start="263:75" pos:end="263:75">&gt;</operator><literal type="number" pos:start="263:76" pos:end="263:76">8</literal><operator pos:start="263:77" pos:end="263:77">)</operator></expr>)</condition><block pos:start="263:79" pos:end="269:17">{<block_content pos:start="265:21" pos:end="267:30">

                    <expr_stmt pos:start="265:21" pos:end="265:80"><expr pos:start="265:21" pos:end="265:79"><call pos:start="265:21" pos:end="265:79"><name pos:start="265:21" pos:end="265:26">av_log</name><argument_list pos:start="265:27" pos:end="265:79">(<argument pos:start="265:28" pos:end="265:32"><expr pos:start="265:28" pos:end="265:32"><name pos:start="265:28" pos:end="265:32">avctx</name></expr></argument>, <argument pos:start="265:35" pos:end="265:46"><expr pos:start="265:35" pos:end="265:46"><name pos:start="265:35" pos:end="265:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:49" pos:end="265:72"><expr pos:start="265:49" pos:end="265:72"><literal type="string" pos:start="265:49" pos:end="265:72">"end mismatch left=%d\n"</literal></expr></argument>, <argument pos:start="265:75" pos:end="265:78"><expr pos:start="265:75" pos:end="265:78"><name pos:start="265:75" pos:end="265:78">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="267:21" pos:end="267:30">return <expr pos:start="267:28" pos:end="267:29"><operator pos:start="267:28" pos:end="267:28">-</operator><literal type="number" pos:start="267:29" pos:end="267:29">1</literal></expr>;</return>

                </block_content>}</block></if><else pos:start="269:18" pos:end="271:29">else<block type="pseudo" pos:start="271:21" pos:end="271:29"><block_content pos:start="271:21" pos:end="271:29">

                    <goto pos:start="271:21" pos:end="271:29">goto <name pos:start="271:26" pos:end="271:28">eos</name>;</goto></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            

            <expr_stmt pos:start="277:13" pos:end="277:35"><expr pos:start="277:13" pos:end="277:34"><call pos:start="277:13" pos:end="277:34"><name pos:start="277:13" pos:end="277:31">ff_init_block_index</name><argument_list pos:start="277:32" pos:end="277:34">(<argument pos:start="277:33" pos:end="277:33"><expr pos:start="277:33" pos:end="277:33"><name pos:start="277:33" pos:end="277:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="283:9" pos:end="283:30">/* skip mb handling */</comment>

        <if_stmt pos:start="285:9" pos:end="335:9"><if pos:start="285:9" pos:end="335:9">if <condition pos:start="285:12" pos:end="285:33">(<expr pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:26"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:26">mb_skip_run</name></name> <operator pos:start="285:28" pos:end="285:29">==</operator> <operator pos:start="285:31" pos:end="285:31">-</operator><literal type="number" pos:start="285:32" pos:end="285:32">1</literal></expr>)</condition> <block pos:start="285:35" pos:end="335:9">{<block_content pos:start="289:13" pos:end="333:13">

            <comment type="block" pos:start="287:13" pos:end="287:38">/* read again increment */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:31"><expr pos:start="289:13" pos:end="289:30"><name pos:start="289:13" pos:end="289:26"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:26">mb_skip_run</name></name> <operator pos:start="289:28" pos:end="289:28">=</operator> <literal type="number" pos:start="289:30" pos:end="289:30">0</literal></expr>;</expr_stmt>

            <for pos:start="291:13" pos:end="333:13">for<control pos:start="291:16" pos:end="291:19">(<init pos:start="291:17" pos:end="291:17">;</init><condition pos:start="291:18" pos:end="291:18">;</condition><incr/>)</control> <block pos:start="291:21" pos:end="333:13">{<block_content pos:start="293:17" pos:end="331:17">

                <decl_stmt pos:start="293:17" pos:end="293:82"><decl pos:start="293:17" pos:end="293:81"><type pos:start="293:17" pos:end="293:19"><name pos:start="293:17" pos:end="293:19">int</name></type> <name pos:start="293:21" pos:end="293:24">code</name> <init pos:start="293:26" pos:end="293:81">= <expr pos:start="293:28" pos:end="293:81"><call pos:start="293:28" pos:end="293:81"><name pos:start="293:28" pos:end="293:35">get_vlc2</name><argument_list pos:start="293:36" pos:end="293:81">(<argument pos:start="293:37" pos:end="293:42"><expr pos:start="293:37" pos:end="293:42"><operator pos:start="293:37" pos:end="293:37">&amp;</operator><name pos:start="293:38" pos:end="293:42"><name pos:start="293:38" pos:end="293:38">s</name><operator pos:start="293:39" pos:end="293:40">-&gt;</operator><name pos:start="293:41" pos:end="293:42">gb</name></name></expr></argument>, <argument pos:start="293:45" pos:end="293:60"><expr pos:start="293:45" pos:end="293:60"><name pos:start="293:45" pos:end="293:60"><name pos:start="293:45" pos:end="293:54">mbincr_vlc</name><operator pos:start="293:55" pos:end="293:55">.</operator><name pos:start="293:56" pos:end="293:60">table</name></name></expr></argument>, <argument pos:start="293:63" pos:end="293:77"><expr pos:start="293:63" pos:end="293:77"><name pos:start="293:63" pos:end="293:77">MBINCR_VLC_BITS</name></expr></argument>, <argument pos:start="293:80" pos:end="293:80"><expr pos:start="293:80" pos:end="293:80"><literal type="number" pos:start="293:80" pos:end="293:80">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="295:17" pos:end="301:17"><if pos:start="295:17" pos:end="301:17">if <condition pos:start="295:20" pos:end="295:29">(<expr pos:start="295:21" pos:end="295:28"><name pos:start="295:21" pos:end="295:24">code</name> <operator pos:start="295:26" pos:end="295:26">&lt;</operator> <literal type="number" pos:start="295:28" pos:end="295:28">0</literal></expr>)</condition><block pos:start="295:30" pos:end="301:17">{<block_content pos:start="297:21" pos:end="299:30">

                    <expr_stmt pos:start="297:21" pos:end="297:72"><expr pos:start="297:21" pos:end="297:71"><call pos:start="297:21" pos:end="297:71"><name pos:start="297:21" pos:end="297:26">av_log</name><argument_list pos:start="297:27" pos:end="297:71">(<argument pos:start="297:28" pos:end="297:35"><expr pos:start="297:28" pos:end="297:35"><name pos:start="297:28" pos:end="297:35"><name pos:start="297:28" pos:end="297:28">s</name><operator pos:start="297:29" pos:end="297:30">-&gt;</operator><name pos:start="297:31" pos:end="297:35">avctx</name></name></expr></argument>, <argument pos:start="297:38" pos:end="297:49"><expr pos:start="297:38" pos:end="297:49"><name pos:start="297:38" pos:end="297:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="297:52" pos:end="297:70"><expr pos:start="297:52" pos:end="297:70"><literal type="string" pos:start="297:52" pos:end="297:70">"mb incr damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="299:21" pos:end="299:30">return <expr pos:start="299:28" pos:end="299:29"><operator pos:start="299:28" pos:end="299:28">-</operator><literal type="number" pos:start="299:29" pos:end="299:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="303:17" pos:end="331:17"><if pos:start="303:17" pos:end="325:17">if <condition pos:start="303:20" pos:end="303:31">(<expr pos:start="303:21" pos:end="303:30"><name pos:start="303:21" pos:end="303:24">code</name> <operator pos:start="303:26" pos:end="303:27">&gt;=</operator> <literal type="number" pos:start="303:29" pos:end="303:30">33</literal></expr>)</condition> <block pos:start="303:33" pos:end="325:17">{<block_content pos:start="305:21" pos:end="321:21">

                    <if_stmt pos:start="305:21" pos:end="321:21"><if pos:start="305:21" pos:end="309:21">if <condition pos:start="305:24" pos:end="305:35">(<expr pos:start="305:25" pos:end="305:34"><name pos:start="305:25" pos:end="305:28">code</name> <operator pos:start="305:30" pos:end="305:31">==</operator> <literal type="number" pos:start="305:33" pos:end="305:34">33</literal></expr>)</condition> <block pos:start="305:37" pos:end="309:21">{<block_content pos:start="307:25" pos:end="307:45">

                        <expr_stmt pos:start="307:25" pos:end="307:45"><expr pos:start="307:25" pos:end="307:44"><name pos:start="307:25" pos:end="307:38"><name pos:start="307:25" pos:end="307:25">s</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:38">mb_skip_run</name></name> <operator pos:start="307:40" pos:end="307:41">+=</operator> <literal type="number" pos:start="307:43" pos:end="307:44">33</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><if type="elseif" pos:start="309:22" pos:end="321:21">else if<condition pos:start="309:29" pos:end="309:40">(<expr pos:start="309:30" pos:end="309:39"><name pos:start="309:30" pos:end="309:33">code</name> <operator pos:start="309:35" pos:end="309:36">==</operator> <literal type="number" pos:start="309:38" pos:end="309:39">35</literal></expr>)</condition><block pos:start="309:41" pos:end="321:21">{<block_content pos:start="311:25" pos:end="319:33">

                        <if_stmt pos:start="311:25" pos:end="317:25"><if pos:start="311:25" pos:end="317:25">if<condition pos:start="311:27" pos:end="311:77">(<expr pos:start="311:28" pos:end="311:76"><name pos:start="311:28" pos:end="311:41"><name pos:start="311:28" pos:end="311:28">s</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:41">mb_skip_run</name></name> <operator pos:start="311:43" pos:end="311:44">!=</operator> <literal type="number" pos:start="311:46" pos:end="311:46">0</literal> <operator pos:start="311:48" pos:end="311:49">||</operator> <call pos:start="311:51" pos:end="311:71"><name pos:start="311:51" pos:end="311:59">show_bits</name><argument_list pos:start="311:60" pos:end="311:71">(<argument pos:start="311:61" pos:end="311:66"><expr pos:start="311:61" pos:end="311:66"><operator pos:start="311:61" pos:end="311:61">&amp;</operator><name pos:start="311:62" pos:end="311:66"><name pos:start="311:62" pos:end="311:62">s</name><operator pos:start="311:63" pos:end="311:64">-&gt;</operator><name pos:start="311:65" pos:end="311:66">gb</name></name></expr></argument>, <argument pos:start="311:69" pos:end="311:70"><expr pos:start="311:69" pos:end="311:70"><literal type="number" pos:start="311:69" pos:end="311:70">15</literal></expr></argument>)</argument_list></call> <operator pos:start="311:73" pos:end="311:74">!=</operator> <literal type="number" pos:start="311:76" pos:end="311:76">0</literal></expr>)</condition><block pos:start="311:78" pos:end="317:25">{<block_content pos:start="313:29" pos:end="315:38">

                            <expr_stmt pos:start="313:29" pos:end="313:79"><expr pos:start="313:29" pos:end="313:78"><call pos:start="313:29" pos:end="313:78"><name pos:start="313:29" pos:end="313:34">av_log</name><argument_list pos:start="313:35" pos:end="313:78">(<argument pos:start="313:36" pos:end="313:43"><expr pos:start="313:36" pos:end="313:43"><name pos:start="313:36" pos:end="313:43"><name pos:start="313:36" pos:end="313:36">s</name><operator pos:start="313:37" pos:end="313:38">-&gt;</operator><name pos:start="313:39" pos:end="313:43">avctx</name></name></expr></argument>, <argument pos:start="313:46" pos:end="313:57"><expr pos:start="313:46" pos:end="313:57"><name pos:start="313:46" pos:end="313:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:60" pos:end="313:77"><expr pos:start="313:60" pos:end="313:77"><literal type="string" pos:start="313:60" pos:end="313:77">"slice mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="315:29" pos:end="315:38">return <expr pos:start="315:36" pos:end="315:37"><operator pos:start="315:36" pos:end="315:36">-</operator><literal type="number" pos:start="315:37" pos:end="315:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <goto pos:start="319:25" pos:end="319:33">goto <name pos:start="319:30" pos:end="319:32">eos</name>;</goto> <comment type="block" pos:start="319:35" pos:end="319:52">/* end of slice */</comment>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="323:21" pos:end="323:60">/* otherwise, stuffing, nothing to do */</comment>

                </block_content>}</block></if> <else pos:start="325:19" pos:end="331:17">else <block pos:start="325:24" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:26">

                    <expr_stmt pos:start="327:21" pos:end="327:43"><expr pos:start="327:21" pos:end="327:42"><name pos:start="327:21" pos:end="327:34"><name pos:start="327:21" pos:end="327:21">s</name><operator pos:start="327:22" pos:end="327:23">-&gt;</operator><name pos:start="327:24" pos:end="327:34">mb_skip_run</name></name> <operator pos:start="327:36" pos:end="327:37">+=</operator> <name pos:start="327:39" pos:end="327:42">code</name></expr>;</expr_stmt>

                    <break pos:start="329:21" pos:end="329:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="339:1" pos:end="339:4"><name pos:start="339:1" pos:end="339:3">eos</name>:</label> <comment type="line" pos:start="339:6" pos:end="339:20">// end of slice</comment>

    <expr_stmt pos:start="341:5" pos:end="341:41"><expr pos:start="341:5" pos:end="341:40"><operator pos:start="341:5" pos:end="341:5">*</operator><name pos:start="341:6" pos:end="341:8">buf</name> <operator pos:start="341:10" pos:end="341:11">+=</operator> <call pos:start="341:13" pos:end="341:34"><name pos:start="341:13" pos:end="341:26">get_bits_count</name><argument_list pos:start="341:27" pos:end="341:34">(<argument pos:start="341:28" pos:end="341:33"><expr pos:start="341:28" pos:end="341:33"><operator pos:start="341:28" pos:end="341:28">&amp;</operator><name pos:start="341:29" pos:end="341:33"><name pos:start="341:29" pos:end="341:29">s</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:33">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="341:35" pos:end="341:35">/</operator><literal type="number" pos:start="341:36" pos:end="341:38">8</literal> <operator pos:start="341:38" pos:end="341:38">-</operator> <literal type="number" pos:start="341:40" pos:end="341:40">1</literal></expr>;</expr_stmt>

<comment type="line" pos:start="343:1" pos:end="343:78">//printf("y %d %d %d %d\n", s-&gt;resync_mb_x, s-&gt;resync_mb_y, s-&gt;mb_x, s-&gt;mb_y);</comment>

    <return pos:start="345:5" pos:end="345:13">return <expr pos:start="345:12" pos:end="345:12"><literal type="number" pos:start="345:12" pos:end="345:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
