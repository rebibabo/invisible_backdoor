<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11435.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">mszh_decomp</name><parameter_list pos:start="1:23" pos:end="1:83">(<parameter pos:start="1:24" pos:end="1:45"><decl pos:start="1:24" pos:end="1:45"><type pos:start="1:24" pos:end="1:45"><name pos:start="1:24" pos:end="1:31">unsigned</name> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:45">srcptr</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">srclen</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:82"><decl pos:start="1:60" pos:end="1:82"><type pos:start="1:60" pos:end="1:82"><name pos:start="1:60" pos:end="1:67">unsigned</name> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type> <name pos:start="1:76" pos:end="1:82">destptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:35">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:30">destptr_bak</name> <init pos:start="5:32" pos:end="5:40">= <expr pos:start="5:34" pos:end="5:40"><name pos:start="5:34" pos:end="5:40">destptr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:22">mask</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:25">maskbit</name> <init pos:start="9:27" pos:end="9:29">= <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">ofs</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:23" pos:end="11:25">cnt</name></decl>;</decl_stmt>

  

    <while pos:start="15:5" pos:end="65:5">while <condition pos:start="15:11" pos:end="15:22">(<expr pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:17">srclen</name> <operator pos:start="15:19" pos:end="15:19">&gt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>)</condition> <block pos:start="15:24" pos:end="65:5">{<block_content pos:start="17:9" pos:end="63:9">

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:25">(<expr pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:19">maskbit</name> <operator pos:start="17:21" pos:end="17:22">==</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>)</condition> <block pos:start="17:27" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:21">

            <expr_stmt pos:start="19:13" pos:end="19:31"><expr pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:16">mask</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <operator pos:start="19:20" pos:end="19:20">*</operator><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:27">srcptr</name><operator pos:start="19:28" pos:end="19:29">++</operator><operator pos:start="19:30" pos:end="19:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:19">maskbit</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:18">srclen</name><operator pos:start="23:19" pos:end="23:20">--</operator></expr>;</expr_stmt>

            <continue pos:start="25:13" pos:end="25:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="63:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:45">(<expr pos:start="29:13" pos:end="29:44"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:17">mask</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><literal type="number" pos:start="29:22" pos:end="29:22">1</literal> <operator pos:start="29:24" pos:end="29:25">&lt;&lt;</operator> <operator pos:start="29:27" pos:end="29:27">(</operator><operator pos:start="29:28" pos:end="29:29">--</operator><name pos:start="29:30" pos:end="29:36">maskbit</name><operator pos:start="29:37" pos:end="29:37">)</operator><operator pos:start="29:38" pos:end="29:38">)</operator><operator pos:start="29:39" pos:end="29:39">)</operator> <operator pos:start="29:41" pos:end="29:42">==</operator> <literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr>)</condition> <block pos:start="29:47" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:24">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><operator pos:start="31:13" pos:end="31:13">*</operator><operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:17">int</name><operator pos:start="31:18" pos:end="31:18">*</operator><operator pos:start="31:19" pos:end="31:19">)</operator><name pos:start="31:20" pos:end="31:26">destptr</name> <operator pos:start="31:28" pos:end="31:28">=</operator> <operator pos:start="31:30" pos:end="31:30">*</operator><operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:34">int</name><operator pos:start="31:35" pos:end="31:35">*</operator><operator pos:start="31:36" pos:end="31:36">)</operator><name pos:start="31:37" pos:end="31:42">srcptr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:18">srclen</name> <operator pos:start="33:20" pos:end="33:21">-=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:19">destptr</name> <operator pos:start="35:21" pos:end="35:22">+=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">srcptr</name> <operator pos:start="37:20" pos:end="37:21">+=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="63:9">else <block pos:start="39:16" pos:end="63:9">{<block_content pos:start="41:13" pos:end="61:13">

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:15">ofs</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <operator pos:start="41:19" pos:end="41:19">*</operator><operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:26">srcptr</name><operator pos:start="41:27" pos:end="41:28">++</operator><operator pos:start="41:29" pos:end="41:29">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:15">cnt</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <operator pos:start="43:19" pos:end="43:19">*</operator><operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:26">srcptr</name><operator pos:start="43:27" pos:end="43:28">++</operator><operator pos:start="43:29" pos:end="43:29">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">ofs</name> <operator pos:start="45:17" pos:end="45:18">+=</operator> <name pos:start="45:20" pos:end="45:22">cnt</name> <operator pos:start="45:24" pos:end="45:24">*</operator> <literal type="number" pos:start="45:26" pos:end="45:28">256</literal></expr>;</expr_stmt><empty_stmt pos:start="45:30" pos:end="45:30">;</empty_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:15">cnt</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:23">cnt</name> <operator pos:start="47:25" pos:end="47:26">&gt;&gt;</operator> <literal type="number" pos:start="47:28" pos:end="47:28">3</literal><operator pos:start="47:29" pos:end="47:29">)</operator> <operator pos:start="47:31" pos:end="47:31">&amp;</operator> <literal type="number" pos:start="47:33" pos:end="47:36">0x1f</literal><operator pos:start="47:37" pos:end="47:37">)</operator> <operator pos:start="47:39" pos:end="47:39">+</operator> <literal type="number" pos:start="47:41" pos:end="47:41">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:15">ofs</name> <operator pos:start="49:17" pos:end="49:18">&amp;=</operator> <literal type="number" pos:start="49:20" pos:end="49:24">0x7ff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:18">srclen</name> <operator pos:start="51:20" pos:end="51:21">-=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">cnt</name> <operator pos:start="53:17" pos:end="53:18">*=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">4</literal></expr>;</expr_stmt>

            <for pos:start="55:13" pos:end="61:13">for <control pos:start="55:17" pos:end="55:34">(<init pos:start="55:18" pos:end="55:18">;</init> <condition pos:start="55:20" pos:end="55:27"><expr pos:start="55:20" pos:end="55:26"><name pos:start="55:20" pos:end="55:22">cnt</name> <operator pos:start="55:24" pos:end="55:24">&gt;</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>;</condition> <incr pos:start="55:29" pos:end="55:33"><expr pos:start="55:29" pos:end="55:33"><name pos:start="55:29" pos:end="55:31">cnt</name><operator pos:start="55:32" pos:end="55:33">--</operator></expr></incr>)</control> <block pos:start="55:36" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:26">

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><operator pos:start="57:17" pos:end="57:17">*</operator><operator pos:start="57:18" pos:end="57:18">(</operator><name pos:start="57:19" pos:end="57:25">destptr</name><operator pos:start="57:26" pos:end="57:26">)</operator> <operator pos:start="57:28" pos:end="57:28">=</operator> <operator pos:start="57:30" pos:end="57:30">*</operator><operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:38">destptr</name> <operator pos:start="57:40" pos:end="57:40">-</operator> <name pos:start="57:42" pos:end="57:44">ofs</name><operator pos:start="57:45" pos:end="57:45">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:26"><expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:23">destptr</name><operator pos:start="59:24" pos:end="59:25">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="69:5" pos:end="69:35">return <expr pos:start="69:12" pos:end="69:34"><operator pos:start="69:12" pos:end="69:12">(</operator><name pos:start="69:13" pos:end="69:19">destptr</name> <operator pos:start="69:21" pos:end="69:21">-</operator> <name pos:start="69:23" pos:end="69:33">destptr_bak</name><operator pos:start="69:34" pos:end="69:34">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
