<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11550.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ast_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">type</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:23">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:27"><if pos:start="13:5" pos:end="15:27">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:17">avio_feof</name><argument_list pos:start="13:18" pos:end="13:24">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:27"><block_content pos:start="15:9" pos:end="15:27">

        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:7">pos</name>  <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:27"><name pos:start="19:12" pos:end="19:20">avio_tell</name><argument_list pos:start="19:21" pos:end="19:27">(<argument pos:start="19:22" pos:end="19:26"><expr pos:start="19:22" pos:end="19:26"><name pos:start="19:22" pos:end="19:26"><name pos:start="19:22" pos:end="19:22">s</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:8">type</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:27"><name pos:start="21:12" pos:end="21:20">avio_rl32</name><argument_list pos:start="21:21" pos:end="21:27">(<argument pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:22">s</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:8">size</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:27"><name pos:start="23:12" pos:end="23:20">avio_rb32</name><argument_list pos:start="23:21" pos:end="23:27">(<argument pos:start="23:22" pos:end="23:26"><expr pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:22">s</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:59">(<expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:12">size</name> <operator pos:start="25:14" pos:end="25:14">&gt;</operator> <name pos:start="25:16" pos:end="25:22">INT_MAX</name> <operator pos:start="25:24" pos:end="25:24">/</operator> <name pos:start="25:26" pos:end="25:38"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:35">streams</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>]</index></name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:58"><name pos:start="25:41" pos:end="25:48">codecpar</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:58">channels</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:8">size</name> <operator pos:start="31:10" pos:end="31:11">*=</operator> <name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">streams</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>]</index></name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:45"><name pos:start="31:28" pos:end="31:35">codecpar</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:45">channels</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:19"><if pos:start="33:5" pos:end="35:19">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">ret</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:35"><name pos:start="33:16" pos:end="33:24">avio_skip</name><argument_list pos:start="33:25" pos:end="33:35">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">pb</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><literal type="number" pos:start="33:33" pos:end="33:34">24</literal></expr></argument>)</argument_list></call><operator pos:start="33:36" pos:end="33:36">)</operator> <operator pos:start="33:38" pos:end="33:38">&lt;</operator> <literal type="number" pos:start="33:40" pos:end="33:40">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19"> <comment type="line" pos:start="33:43" pos:end="33:52">// padding</comment>

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:39">(<expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:12">type</name> <operator pos:start="39:14" pos:end="39:15">==</operator> <call pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:21">MKTAG</name><argument_list pos:start="39:22" pos:end="39:38">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><literal type="char" pos:start="39:23" pos:end="39:25">'B'</literal></expr></argument>,<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><literal type="char" pos:start="39:27" pos:end="39:29">'L'</literal></expr></argument>,<argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><literal type="char" pos:start="39:31" pos:end="39:33">'C'</literal></expr></argument>,<argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><literal type="char" pos:start="39:35" pos:end="39:37">'K'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:41" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:23">

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:45"><name pos:start="41:15" pos:end="41:27">av_get_packet</name><argument_list pos:start="41:28" pos:end="41:45">(<argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:33">pb</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">pkt</name></expr></argument>, <argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><name pos:start="41:41" pos:end="41:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:11">pkt</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:25">stream_index</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">pos</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:22">pos</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="55:5">else <block pos:start="47:12" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:34">

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:59">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">s</name></expr></argument>, <argument pos:start="49:19" pos:end="49:30"><expr pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:33" pos:end="49:52"><expr pos:start="49:33" pos:end="49:52"><literal type="string" pos:start="49:33" pos:end="49:52">"unknown chunk %x\n"</literal></expr></argument>, <argument pos:start="49:55" pos:end="49:58"><expr pos:start="49:55" pos:end="49:58"><name pos:start="49:55" pos:end="49:58">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:17">avio_skip</name><argument_list pos:start="51:18" pos:end="51:30">(<argument pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">pb</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
