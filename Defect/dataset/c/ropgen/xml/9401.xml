<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9401.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_chap</name><parameter_list pos:start="1:22" pos:end="1:70">(<parameter pos:start="1:23" pos:end="1:49"><decl pos:start="1:23" pos:end="1:49"><type pos:start="1:23" pos:end="1:49"><name pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:42">iscsi_context</name></name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">iscsi</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">target</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QemuOptsList</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">user</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">password</name> <init pos:start="11:26" pos:end="11:31">= <expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">list</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:25">qemu_find_opts</name><argument_list pos:start="15:26" pos:end="15:34">(<argument pos:start="15:27" pos:end="15:33"><expr pos:start="15:27" pos:end="15:33"><literal type="string" pos:start="15:27" pos:end="15:33">"iscsi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">list</name></expr>)</condition> <block pos:start="17:16" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:8">opts</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:39"><name pos:start="25:12" pos:end="25:25">qemu_opts_find</name><argument_list pos:start="25:26" pos:end="25:39">(<argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">list</name></expr></argument>, <argument pos:start="25:33" pos:end="25:38"><expr pos:start="25:33" pos:end="25:38"><name pos:start="25:33" pos:end="25:38">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">opts</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:20">NULL</name></expr>)</condition> <block pos:start="27:23" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:12">opts</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:40"><name pos:start="29:16" pos:end="29:27">QTAILQ_FIRST</name><argument_list pos:start="29:28" pos:end="29:40">(<argument pos:start="29:29" pos:end="29:39"><expr pos:start="29:29" pos:end="29:39"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:39"><name pos:start="29:30" pos:end="29:33">list</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:39">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:18">(<expr pos:start="31:13" pos:end="31:17"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:17">opts</name></expr>)</condition> <block pos:start="31:20" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:8">user</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:37"><name pos:start="41:12" pos:end="41:23">qemu_opt_get</name><argument_list pos:start="41:24" pos:end="41:37">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">opts</name></expr></argument>, <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><literal type="string" pos:start="41:31" pos:end="41:36">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:13">user</name></expr>)</condition> <block pos:start="43:16" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:17">

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:12">password</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:45"><name pos:start="51:16" pos:end="51:27">qemu_opt_get</name><argument_list pos:start="51:28" pos:end="51:45">(<argument pos:start="51:29" pos:end="51:32"><expr pos:start="51:29" pos:end="51:32"><name pos:start="51:29" pos:end="51:32">opts</name></expr></argument>, <argument pos:start="51:35" pos:end="51:44"><expr pos:start="51:35" pos:end="51:44"><literal type="string" pos:start="51:35" pos:end="51:44">"password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:17">password</name></expr>)</condition> <block pos:start="53:20" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:74"><expr pos:start="55:9" pos:end="55:73"><call pos:start="55:9" pos:end="55:73"><name pos:start="55:9" pos:end="55:20">error_report</name><argument_list pos:start="55:21" pos:end="55:73">(<argument pos:start="55:22" pos:end="55:72"><expr pos:start="55:22" pos:end="55:72"><literal type="string" pos:start="55:22" pos:end="55:72">"CHAP username specified but no password was given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:64">(<expr pos:start="63:9" pos:end="63:63"><call pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:40">iscsi_set_initiator_username_pwd</name><argument_list pos:start="63:41" pos:end="63:63">(<argument pos:start="63:42" pos:end="63:46"><expr pos:start="63:42" pos:end="63:46"><name pos:start="63:42" pos:end="63:46">iscsi</name></expr></argument>, <argument pos:start="63:49" pos:end="63:52"><expr pos:start="63:49" pos:end="63:52"><name pos:start="63:49" pos:end="63:52">user</name></expr></argument>, <argument pos:start="63:55" pos:end="63:62"><expr pos:start="63:55" pos:end="63:62"><name pos:start="63:55" pos:end="63:62">password</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:66" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:18">

        <expr_stmt pos:start="65:9" pos:end="65:70"><expr pos:start="65:9" pos:end="65:69"><call pos:start="65:9" pos:end="65:69"><name pos:start="65:9" pos:end="65:20">error_report</name><argument_list pos:start="65:21" pos:end="65:69">(<argument pos:start="65:22" pos:end="65:68"><expr pos:start="65:22" pos:end="65:68"><literal type="string" pos:start="65:22" pos:end="65:68">"Failed to set initiator username and password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
