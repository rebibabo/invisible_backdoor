<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23217.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:6">PROTO4</name><argument_list pos:start="1:7" pos:end="1:18">(<argument pos:start="1:8" pos:end="1:17">_pack_2ch_</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:18"><name pos:start="3:1" pos:end="3:6">PROTO4</name><argument_list pos:start="3:7" pos:end="3:18">(<argument pos:start="3:8" pos:end="3:17">_pack_6ch_</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="5:20"><name pos:start="5:1" pos:end="5:6">PROTO4</name><argument_list pos:start="5:7" pos:end="5:20">(<argument pos:start="5:8" pos:end="5:19">_unpack_2ch_</argument>)</argument_list></macro>



<function pos:start="9:1" pos:end="223:1"><type pos:start="9:1" pos:end="9:12"><name pos:start="9:1" pos:end="9:7">av_cold</name> <name pos:start="9:9" pos:end="9:12">void</name></type> <name pos:start="9:14" pos:end="9:40">swri_audio_convert_init_x86</name><parameter_list pos:start="9:41" pos:end="15:46">(<parameter pos:start="9:42" pos:end="9:64"><decl pos:start="9:42" pos:end="9:64"><type pos:start="9:42" pos:end="9:64"><name pos:start="9:42" pos:end="9:60"><name pos:start="9:42" pos:end="9:47">struct</name> <name pos:start="9:49" pos:end="9:60">AudioConvert</name></name> <modifier pos:start="9:62" pos:end="9:62">*</modifier></type><name pos:start="9:63" pos:end="9:64">ac</name></decl></parameter>,

                                 <parameter pos:start="11:34" pos:end="11:60"><decl pos:start="11:34" pos:end="11:60"><type pos:start="11:34" pos:end="11:60"><name pos:start="11:34" pos:end="11:52"><name pos:start="11:34" pos:end="11:37">enum</name> <name pos:start="11:39" pos:end="11:52">AVSampleFormat</name></name></type> <name pos:start="11:54" pos:end="11:60">out_fmt</name></decl></parameter>,

                                 <parameter pos:start="13:34" pos:end="13:59"><decl pos:start="13:34" pos:end="13:59"><type pos:start="13:34" pos:end="13:59"><name pos:start="13:34" pos:end="13:52"><name pos:start="13:34" pos:end="13:37">enum</name> <name pos:start="13:39" pos:end="13:52">AVSampleFormat</name></name></type> <name pos:start="13:54" pos:end="13:59">in_fmt</name></decl></parameter>,

                                 <parameter pos:start="15:34" pos:end="15:45"><decl pos:start="15:34" pos:end="15:45"><type pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:36">int</name></type> <name pos:start="15:38" pos:end="15:45">channels</name></decl></parameter>)</parameter_list><block pos:start="15:47" pos:end="223:1">{<block_content pos:start="17:5" pos:end="221:5">

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">mm_flags</name> <init pos:start="17:18" pos:end="17:37">= <expr pos:start="17:20" pos:end="17:37"><call pos:start="17:20" pos:end="17:37"><name pos:start="17:20" pos:end="17:35">av_get_cpu_flags</name><argument_list pos:start="17:36" pos:end="17:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="42:0"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:6">ac</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:14">simd_f</name></name><operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">NULL</name></expr>;</expr_stmt>



<comment type="line" pos:start="25:1" pos:end="25:23">//FIXME add memcpy case</comment>



<cpp:define pos:start="29:1" pos:end="41:5">#<cpp:directive pos:start="29:2" pos:end="29:7">define</cpp:directive> <cpp:macro pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:23">MULTI_CAPS_FUNC</name><parameter_list pos:start="29:24" pos:end="29:34">(<parameter pos:start="29:25" pos:end="29:28"><type pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">flag</name></type></parameter>, <parameter pos:start="29:31" pos:end="29:33"><type pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">cap</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="31:5" pos:end="41:5">if (mm_flags &amp; flag) {\

        if(   out_fmt == AV_SAMPLE_FMT_S32  &amp;&amp; in_fmt == AV_SAMPLE_FMT_S16 || out_fmt == AV_SAMPLE_FMT_S32P &amp;&amp; in_fmt == AV_SAMPLE_FMT_S16P)\

            ac-&gt;simd_f =  ff_int16_to_int32_a_ ## cap;\

        if(   out_fmt == AV_SAMPLE_FMT_S16  &amp;&amp; in_fmt == AV_SAMPLE_FMT_S32 || out_fmt == AV_SAMPLE_FMT_S16P &amp;&amp; in_fmt == AV_SAMPLE_FMT_S32P)\

            ac-&gt;simd_f =  ff_int32_to_int16_a_ ## cap;\

    }</cpp:value></cpp:define>



<macro pos:start="45:1" pos:end="45:37"><name pos:start="45:1" pos:end="45:15">MULTI_CAPS_FUNC</name><argument_list pos:start="45:16" pos:end="45:37">(<argument pos:start="45:17" pos:end="45:31">AV_CPU_FLAG_MMX</argument>, <argument pos:start="45:34" pos:end="45:36">mmx</argument>)</argument_list></macro>

<macro pos:start="47:1" pos:end="47:39"><name pos:start="47:1" pos:end="47:15">MULTI_CAPS_FUNC</name><argument_list pos:start="47:16" pos:end="47:39">(<argument pos:start="47:17" pos:end="47:32">AV_CPU_FLAG_SSE2</argument>, <argument pos:start="47:35" pos:end="47:38">sse2</argument>)</argument_list></macro>



    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if<condition pos:start="51:7" pos:end="51:34">(<expr pos:start="51:8" pos:end="51:33"><name pos:start="51:8" pos:end="51:15">mm_flags</name> <operator pos:start="51:17" pos:end="51:17">&amp;</operator> <name pos:start="51:19" pos:end="51:33">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="51:36" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:9">

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if<condition pos:start="53:11" pos:end="53:25">(<expr pos:start="53:12" pos:end="53:24"><name pos:start="53:12" pos:end="53:19">channels</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <literal type="number" pos:start="53:24" pos:end="53:24">6</literal></expr>)</condition> <block pos:start="53:27" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:63">

            <if_stmt pos:start="55:13" pos:end="57:63"><if pos:start="55:13" pos:end="57:63">if<condition pos:start="55:15" pos:end="55:144">(   <expr pos:start="55:19" pos:end="55:143"><name pos:start="55:19" pos:end="55:25">out_fmt</name> <operator pos:start="55:27" pos:end="55:28">==</operator> <name pos:start="55:30" pos:end="55:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="55:49" pos:end="55:50">&amp;&amp;</operator> <name pos:start="55:52" pos:end="55:57">in_fmt</name> <operator pos:start="55:59" pos:end="55:60">==</operator> <name pos:start="55:62" pos:end="55:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="55:81" pos:end="55:82">||</operator> <name pos:start="55:84" pos:end="55:90">out_fmt</name> <operator pos:start="55:92" pos:end="55:93">==</operator> <name pos:start="55:95" pos:end="55:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="55:113" pos:end="55:114">&amp;&amp;</operator> <name pos:start="55:116" pos:end="55:121">in_fmt</name> <operator pos:start="55:123" pos:end="55:124">==</operator> <name pos:start="55:126" pos:end="55:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:63"><block_content pos:start="57:17" pos:end="57:63">

                <expr_stmt pos:start="57:17" pos:end="57:63"><expr pos:start="57:17" pos:end="57:62"><name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:18">ac</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:26">simd_f</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator>  <name pos:start="57:31" pos:end="57:62">ff_pack_6ch_float_to_float_a_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="157:5"><if pos:start="65:5" pos:end="157:5">if<condition pos:start="65:7" pos:end="65:35">(<expr pos:start="65:8" pos:end="65:34"><name pos:start="65:8" pos:end="65:15">mm_flags</name> <operator pos:start="65:17" pos:end="65:17">&amp;</operator> <name pos:start="65:19" pos:end="65:34">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="65:37" pos:end="157:5">{<block_content pos:start="67:9" pos:end="155:9">

        <if_stmt pos:start="67:9" pos:end="69:51"><if pos:start="67:9" pos:end="69:51">if<condition pos:start="67:11" pos:end="67:140">(   <expr pos:start="67:15" pos:end="67:139"><name pos:start="67:15" pos:end="67:21">out_fmt</name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="67:45" pos:end="67:46">&amp;&amp;</operator> <name pos:start="67:48" pos:end="67:53">in_fmt</name> <operator pos:start="67:55" pos:end="67:56">==</operator> <name pos:start="67:58" pos:end="67:74">AV_SAMPLE_FMT_S32</name> <operator pos:start="67:76" pos:end="67:77">||</operator> <name pos:start="67:79" pos:end="67:85">out_fmt</name> <operator pos:start="67:87" pos:end="67:88">==</operator> <name pos:start="67:90" pos:end="67:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="67:109" pos:end="67:110">&amp;&amp;</operator> <name pos:start="67:112" pos:end="67:117">in_fmt</name> <operator pos:start="67:119" pos:end="67:120">==</operator> <name pos:start="67:122" pos:end="67:139">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:51"><block_content pos:start="69:13" pos:end="69:51">

            <expr_stmt pos:start="69:13" pos:end="69:51"><expr pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:14">ac</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:22">simd_f</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator>  <name pos:start="69:27" pos:end="69:50">ff_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="73:51"><if pos:start="71:9" pos:end="73:51">if<condition pos:start="71:11" pos:end="71:140">(   <expr pos:start="71:15" pos:end="71:139"><name pos:start="71:15" pos:end="71:21">out_fmt</name> <operator pos:start="71:23" pos:end="71:24">==</operator> <name pos:start="71:26" pos:end="71:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="71:45" pos:end="71:46">&amp;&amp;</operator> <name pos:start="71:48" pos:end="71:53">in_fmt</name> <operator pos:start="71:55" pos:end="71:56">==</operator> <name pos:start="71:58" pos:end="71:74">AV_SAMPLE_FMT_S16</name> <operator pos:start="71:76" pos:end="71:77">||</operator> <name pos:start="71:79" pos:end="71:85">out_fmt</name> <operator pos:start="71:87" pos:end="71:88">==</operator> <name pos:start="71:90" pos:end="71:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="71:109" pos:end="71:110">&amp;&amp;</operator> <name pos:start="71:112" pos:end="71:117">in_fmt</name> <operator pos:start="71:119" pos:end="71:120">==</operator> <name pos:start="71:122" pos:end="71:139">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:51"><block_content pos:start="73:13" pos:end="73:51">

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:14">ac</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:22">simd_f</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator>  <name pos:start="73:27" pos:end="73:50">ff_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="77:51"><if pos:start="75:9" pos:end="77:51">if<condition pos:start="75:11" pos:end="75:140">(   <expr pos:start="75:15" pos:end="75:139"><name pos:start="75:15" pos:end="75:21">out_fmt</name> <operator pos:start="75:23" pos:end="75:24">==</operator> <name pos:start="75:26" pos:end="75:42">AV_SAMPLE_FMT_S32</name>  <operator pos:start="75:45" pos:end="75:46">&amp;&amp;</operator> <name pos:start="75:48" pos:end="75:53">in_fmt</name> <operator pos:start="75:55" pos:end="75:56">==</operator> <name pos:start="75:58" pos:end="75:74">AV_SAMPLE_FMT_FLT</name> <operator pos:start="75:76" pos:end="75:77">||</operator> <name pos:start="75:79" pos:end="75:85">out_fmt</name> <operator pos:start="75:87" pos:end="75:88">==</operator> <name pos:start="75:90" pos:end="75:107">AV_SAMPLE_FMT_S32P</name> <operator pos:start="75:109" pos:end="75:110">&amp;&amp;</operator> <name pos:start="75:112" pos:end="75:117">in_fmt</name> <operator pos:start="75:119" pos:end="75:120">==</operator> <name pos:start="75:122" pos:end="75:139">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:51"><block_content pos:start="77:13" pos:end="77:51">

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:14">ac</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:22">simd_f</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator>  <name pos:start="77:27" pos:end="77:50">ff_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="81:51"><if pos:start="79:9" pos:end="81:51">if<condition pos:start="79:11" pos:end="79:140">(   <expr pos:start="79:15" pos:end="79:139"><name pos:start="79:15" pos:end="79:21">out_fmt</name> <operator pos:start="79:23" pos:end="79:24">==</operator> <name pos:start="79:26" pos:end="79:42">AV_SAMPLE_FMT_S16</name>  <operator pos:start="79:45" pos:end="79:46">&amp;&amp;</operator> <name pos:start="79:48" pos:end="79:53">in_fmt</name> <operator pos:start="79:55" pos:end="79:56">==</operator> <name pos:start="79:58" pos:end="79:74">AV_SAMPLE_FMT_FLT</name> <operator pos:start="79:76" pos:end="79:77">||</operator> <name pos:start="79:79" pos:end="79:85">out_fmt</name> <operator pos:start="79:87" pos:end="79:88">==</operator> <name pos:start="79:90" pos:end="79:107">AV_SAMPLE_FMT_S16P</name> <operator pos:start="79:109" pos:end="79:110">&amp;&amp;</operator> <name pos:start="79:112" pos:end="79:117">in_fmt</name> <operator pos:start="79:119" pos:end="79:120">==</operator> <name pos:start="79:122" pos:end="79:139">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:51"><block_content pos:start="81:13" pos:end="81:51">

            <expr_stmt pos:start="81:13" pos:end="81:51"><expr pos:start="81:13" pos:end="81:50"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:14">ac</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:22">simd_f</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator>  <name pos:start="81:27" pos:end="81:50">ff_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="85:9" pos:end="155:9"><if pos:start="85:9" pos:end="155:9">if<condition pos:start="85:11" pos:end="85:25">(<expr pos:start="85:12" pos:end="85:24"><name pos:start="85:12" pos:end="85:19">channels</name> <operator pos:start="85:21" pos:end="85:22">==</operator> <literal type="number" pos:start="85:24" pos:end="85:24">2</literal></expr>)</condition> <block pos:start="85:27" pos:end="155:9">{<block_content pos:start="87:13" pos:end="153:66">

            <if_stmt pos:start="87:13" pos:end="89:64"><if pos:start="87:13" pos:end="89:64">if<condition pos:start="87:15" pos:end="87:144">(   <expr pos:start="87:19" pos:end="87:143"><name pos:start="87:19" pos:end="87:25">out_fmt</name> <operator pos:start="87:27" pos:end="87:28">==</operator> <name pos:start="87:30" pos:end="87:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="87:49" pos:end="87:50">&amp;&amp;</operator> <name pos:start="87:52" pos:end="87:57">in_fmt</name> <operator pos:start="87:59" pos:end="87:60">==</operator> <name pos:start="87:62" pos:end="87:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="87:81" pos:end="87:82">||</operator> <name pos:start="87:84" pos:end="87:90">out_fmt</name> <operator pos:start="87:92" pos:end="87:93">==</operator> <name pos:start="87:95" pos:end="87:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="87:113" pos:end="87:114">&amp;&amp;</operator> <name pos:start="87:116" pos:end="87:121">in_fmt</name> <operator pos:start="87:123" pos:end="87:124">==</operator> <name pos:start="87:126" pos:end="87:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:64"><block_content pos:start="89:17" pos:end="89:64">

                <expr_stmt pos:start="89:17" pos:end="89:64"><expr pos:start="89:17" pos:end="89:63"><name pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:18">ac</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:26">simd_f</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator>  <name pos:start="89:31" pos:end="89:63">ff_pack_2ch_int32_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="93:64"><if pos:start="91:13" pos:end="93:64">if<condition pos:start="91:15" pos:end="91:80">(   <expr pos:start="91:19" pos:end="91:79"><name pos:start="91:19" pos:end="91:25">out_fmt</name> <operator pos:start="91:27" pos:end="91:28">==</operator> <name pos:start="91:30" pos:end="91:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="91:49" pos:end="91:50">&amp;&amp;</operator> <name pos:start="91:52" pos:end="91:57">in_fmt</name> <operator pos:start="91:59" pos:end="91:60">==</operator> <name pos:start="91:62" pos:end="91:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:64"><block_content pos:start="93:17" pos:end="93:64">

                <expr_stmt pos:start="93:17" pos:end="93:64"><expr pos:start="93:17" pos:end="93:63"><name pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:18">ac</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:26">simd_f</name></name> <operator pos:start="93:28" pos:end="93:28">=</operator>  <name pos:start="93:31" pos:end="93:63">ff_pack_2ch_int16_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="95:13" pos:end="97:64"><if pos:start="95:13" pos:end="97:64">if<condition pos:start="95:15" pos:end="95:80">(   <expr pos:start="95:19" pos:end="95:79"><name pos:start="95:19" pos:end="95:25">out_fmt</name> <operator pos:start="95:27" pos:end="95:28">==</operator> <name pos:start="95:30" pos:end="95:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="95:49" pos:end="95:50">&amp;&amp;</operator> <name pos:start="95:52" pos:end="95:57">in_fmt</name> <operator pos:start="95:59" pos:end="95:60">==</operator> <name pos:start="95:62" pos:end="95:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:64"><block_content pos:start="97:17" pos:end="97:64">

                <expr_stmt pos:start="97:17" pos:end="97:64"><expr pos:start="97:17" pos:end="97:63"><name pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:18">ac</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:26">simd_f</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator>  <name pos:start="97:31" pos:end="97:63">ff_pack_2ch_int16_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="101:64"><if pos:start="99:13" pos:end="101:64">if<condition pos:start="99:15" pos:end="99:80">(   <expr pos:start="99:19" pos:end="99:79"><name pos:start="99:19" pos:end="99:25">out_fmt</name> <operator pos:start="99:27" pos:end="99:28">==</operator> <name pos:start="99:30" pos:end="99:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="99:49" pos:end="99:50">&amp;&amp;</operator> <name pos:start="99:52" pos:end="99:57">in_fmt</name> <operator pos:start="99:59" pos:end="99:60">==</operator> <name pos:start="99:62" pos:end="99:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:64"><block_content pos:start="101:17" pos:end="101:64">

                <expr_stmt pos:start="101:17" pos:end="101:64"><expr pos:start="101:17" pos:end="101:63"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:18">ac</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:26">simd_f</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator>  <name pos:start="101:31" pos:end="101:63">ff_pack_2ch_int32_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="105:13" pos:end="107:66"><if pos:start="105:13" pos:end="107:66">if<condition pos:start="105:15" pos:end="105:144">(   <expr pos:start="105:19" pos:end="105:143"><name pos:start="105:19" pos:end="105:25">out_fmt</name> <operator pos:start="105:27" pos:end="105:28">==</operator> <name pos:start="105:30" pos:end="105:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="105:50" pos:end="105:51">&amp;&amp;</operator> <name pos:start="105:53" pos:end="105:58">in_fmt</name> <operator pos:start="105:60" pos:end="105:61">==</operator> <name pos:start="105:63" pos:end="105:79">AV_SAMPLE_FMT_FLT</name> <operator pos:start="105:81" pos:end="105:82">||</operator> <name pos:start="105:84" pos:end="105:90">out_fmt</name> <operator pos:start="105:92" pos:end="105:93">==</operator> <name pos:start="105:95" pos:end="105:112">AV_SAMPLE_FMT_S32P</name> <operator pos:start="105:114" pos:end="105:115">&amp;&amp;</operator> <name pos:start="105:117" pos:end="105:122">in_fmt</name> <operator pos:start="105:124" pos:end="105:125">==</operator> <name pos:start="105:127" pos:end="105:143">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:66"><block_content pos:start="107:17" pos:end="107:66">

                <expr_stmt pos:start="107:17" pos:end="107:66"><expr pos:start="107:17" pos:end="107:65"><name pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:18">ac</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:26">simd_f</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator>  <name pos:start="107:31" pos:end="107:65">ff_unpack_2ch_int32_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="111:66"><if pos:start="109:13" pos:end="111:66">if<condition pos:start="109:15" pos:end="109:80">(   <expr pos:start="109:19" pos:end="109:79"><name pos:start="109:19" pos:end="109:25">out_fmt</name> <operator pos:start="109:27" pos:end="109:28">==</operator> <name pos:start="109:30" pos:end="109:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="109:50" pos:end="109:51">&amp;&amp;</operator> <name pos:start="109:53" pos:end="109:58">in_fmt</name> <operator pos:start="109:60" pos:end="109:61">==</operator> <name pos:start="109:63" pos:end="109:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:66"><block_content pos:start="111:17" pos:end="111:66">

                <expr_stmt pos:start="111:17" pos:end="111:66"><expr pos:start="111:17" pos:end="111:65"><name pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:18">ac</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:26">simd_f</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator>  <name pos:start="111:31" pos:end="111:65">ff_unpack_2ch_int16_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="113:13" pos:end="115:66"><if pos:start="113:13" pos:end="115:66">if<condition pos:start="113:15" pos:end="113:80">(   <expr pos:start="113:19" pos:end="113:79"><name pos:start="113:19" pos:end="113:25">out_fmt</name> <operator pos:start="113:27" pos:end="113:28">==</operator> <name pos:start="113:30" pos:end="113:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="113:50" pos:end="113:51">&amp;&amp;</operator> <name pos:start="113:53" pos:end="113:58">in_fmt</name> <operator pos:start="113:60" pos:end="113:61">==</operator> <name pos:start="113:63" pos:end="113:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:66"><block_content pos:start="115:17" pos:end="115:66">

                <expr_stmt pos:start="115:17" pos:end="115:66"><expr pos:start="115:17" pos:end="115:65"><name pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:18">ac</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:26">simd_f</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator>  <name pos:start="115:31" pos:end="115:65">ff_unpack_2ch_int16_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="117:13" pos:end="119:66"><if pos:start="117:13" pos:end="119:66">if<condition pos:start="117:15" pos:end="117:80">(   <expr pos:start="117:19" pos:end="117:79"><name pos:start="117:19" pos:end="117:25">out_fmt</name> <operator pos:start="117:27" pos:end="117:28">==</operator> <name pos:start="117:30" pos:end="117:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="117:50" pos:end="117:51">&amp;&amp;</operator> <name pos:start="117:53" pos:end="117:58">in_fmt</name> <operator pos:start="117:60" pos:end="117:61">==</operator> <name pos:start="117:63" pos:end="117:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:66"><block_content pos:start="119:17" pos:end="119:66">

                <expr_stmt pos:start="119:17" pos:end="119:66"><expr pos:start="119:17" pos:end="119:65"><name pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:18">ac</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:26">simd_f</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator>  <name pos:start="119:31" pos:end="119:65">ff_unpack_2ch_int32_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="123:13" pos:end="125:64"><if pos:start="123:13" pos:end="125:64">if<condition pos:start="123:15" pos:end="123:80">(   <expr pos:start="123:19" pos:end="123:79"><name pos:start="123:19" pos:end="123:25">out_fmt</name> <operator pos:start="123:27" pos:end="123:28">==</operator> <name pos:start="123:30" pos:end="123:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="123:49" pos:end="123:50">&amp;&amp;</operator> <name pos:start="123:52" pos:end="123:57">in_fmt</name> <operator pos:start="123:59" pos:end="123:60">==</operator> <name pos:start="123:62" pos:end="123:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:64"><block_content pos:start="125:17" pos:end="125:64">

                <expr_stmt pos:start="125:17" pos:end="125:64"><expr pos:start="125:17" pos:end="125:63"><name pos:start="125:17" pos:end="125:26"><name pos:start="125:17" pos:end="125:18">ac</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:26">simd_f</name></name> <operator pos:start="125:28" pos:end="125:28">=</operator>  <name pos:start="125:31" pos:end="125:63">ff_pack_2ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="127:13" pos:end="129:64"><if pos:start="127:13" pos:end="129:64">if<condition pos:start="127:15" pos:end="127:80">(   <expr pos:start="127:19" pos:end="127:79"><name pos:start="127:19" pos:end="127:25">out_fmt</name> <operator pos:start="127:27" pos:end="127:28">==</operator> <name pos:start="127:30" pos:end="127:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="127:49" pos:end="127:50">&amp;&amp;</operator> <name pos:start="127:52" pos:end="127:57">in_fmt</name> <operator pos:start="127:59" pos:end="127:60">==</operator> <name pos:start="127:62" pos:end="127:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:64"><block_content pos:start="129:17" pos:end="129:64">

                <expr_stmt pos:start="129:17" pos:end="129:64"><expr pos:start="129:17" pos:end="129:63"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:18">ac</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:26">simd_f</name></name> <operator pos:start="129:28" pos:end="129:28">=</operator>  <name pos:start="129:31" pos:end="129:63">ff_pack_2ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="133:64"><if pos:start="131:13" pos:end="133:64">if<condition pos:start="131:15" pos:end="131:80">(   <expr pos:start="131:19" pos:end="131:79"><name pos:start="131:19" pos:end="131:25">out_fmt</name> <operator pos:start="131:27" pos:end="131:28">==</operator> <name pos:start="131:30" pos:end="131:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="131:49" pos:end="131:50">&amp;&amp;</operator> <name pos:start="131:52" pos:end="131:57">in_fmt</name> <operator pos:start="131:59" pos:end="131:60">==</operator> <name pos:start="131:62" pos:end="131:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:64"><block_content pos:start="133:17" pos:end="133:64">

                <expr_stmt pos:start="133:17" pos:end="133:64"><expr pos:start="133:17" pos:end="133:63"><name pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:18">ac</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:26">simd_f</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator>  <name pos:start="133:31" pos:end="133:63">ff_pack_2ch_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="135:13" pos:end="137:64"><if pos:start="135:13" pos:end="137:64">if<condition pos:start="135:15" pos:end="135:80">(   <expr pos:start="135:19" pos:end="135:79"><name pos:start="135:19" pos:end="135:25">out_fmt</name> <operator pos:start="135:27" pos:end="135:28">==</operator> <name pos:start="135:30" pos:end="135:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="135:49" pos:end="135:50">&amp;&amp;</operator> <name pos:start="135:52" pos:end="135:57">in_fmt</name> <operator pos:start="135:59" pos:end="135:60">==</operator> <name pos:start="135:62" pos:end="135:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:64"><block_content pos:start="137:17" pos:end="137:64">

                <expr_stmt pos:start="137:17" pos:end="137:64"><expr pos:start="137:17" pos:end="137:63"><name pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:18">ac</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:26">simd_f</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator>  <name pos:start="137:31" pos:end="137:63">ff_pack_2ch_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="141:66"><if pos:start="139:13" pos:end="141:66">if<condition pos:start="139:15" pos:end="139:80">(   <expr pos:start="139:19" pos:end="139:79"><name pos:start="139:19" pos:end="139:25">out_fmt</name> <operator pos:start="139:27" pos:end="139:28">==</operator> <name pos:start="139:30" pos:end="139:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="139:50" pos:end="139:51">&amp;&amp;</operator> <name pos:start="139:53" pos:end="139:58">in_fmt</name> <operator pos:start="139:60" pos:end="139:61">==</operator> <name pos:start="139:63" pos:end="139:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:66"><block_content pos:start="141:17" pos:end="141:66">

                <expr_stmt pos:start="141:17" pos:end="141:66"><expr pos:start="141:17" pos:end="141:65"><name pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:18">ac</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:26">simd_f</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator>  <name pos:start="141:31" pos:end="141:65">ff_unpack_2ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="143:13" pos:end="145:66"><if pos:start="143:13" pos:end="145:66">if<condition pos:start="143:15" pos:end="143:80">(   <expr pos:start="143:19" pos:end="143:79"><name pos:start="143:19" pos:end="143:25">out_fmt</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <name pos:start="143:30" pos:end="143:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="143:50" pos:end="143:51">&amp;&amp;</operator> <name pos:start="143:53" pos:end="143:58">in_fmt</name> <operator pos:start="143:60" pos:end="143:61">==</operator> <name pos:start="143:63" pos:end="143:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:66"><block_content pos:start="145:17" pos:end="145:66">

                <expr_stmt pos:start="145:17" pos:end="145:66"><expr pos:start="145:17" pos:end="145:65"><name pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:18">ac</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:26">simd_f</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator>  <name pos:start="145:31" pos:end="145:65">ff_unpack_2ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="147:13" pos:end="149:66"><if pos:start="147:13" pos:end="149:66">if<condition pos:start="147:15" pos:end="147:80">(   <expr pos:start="147:19" pos:end="147:79"><name pos:start="147:19" pos:end="147:25">out_fmt</name> <operator pos:start="147:27" pos:end="147:28">==</operator> <name pos:start="147:30" pos:end="147:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="147:50" pos:end="147:51">&amp;&amp;</operator> <name pos:start="147:53" pos:end="147:58">in_fmt</name> <operator pos:start="147:60" pos:end="147:61">==</operator> <name pos:start="147:63" pos:end="147:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:66"><block_content pos:start="149:17" pos:end="149:66">

                <expr_stmt pos:start="149:17" pos:end="149:66"><expr pos:start="149:17" pos:end="149:65"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:18">ac</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:26">simd_f</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator>  <name pos:start="149:31" pos:end="149:65">ff_unpack_2ch_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="151:13" pos:end="153:66"><if pos:start="151:13" pos:end="153:66">if<condition pos:start="151:15" pos:end="151:80">(   <expr pos:start="151:19" pos:end="151:79"><name pos:start="151:19" pos:end="151:25">out_fmt</name> <operator pos:start="151:27" pos:end="151:28">==</operator> <name pos:start="151:30" pos:end="151:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="151:50" pos:end="151:51">&amp;&amp;</operator> <name pos:start="151:53" pos:end="151:58">in_fmt</name> <operator pos:start="151:60" pos:end="151:61">==</operator> <name pos:start="151:63" pos:end="151:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:66"><block_content pos:start="153:17" pos:end="153:66">

                <expr_stmt pos:start="153:17" pos:end="153:66"><expr pos:start="153:17" pos:end="153:65"><name pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:18">ac</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:26">simd_f</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator>  <name pos:start="153:31" pos:end="153:65">ff_unpack_2ch_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="177:5"><if pos:start="159:5" pos:end="177:5">if<condition pos:start="159:7" pos:end="159:36">(<expr pos:start="159:8" pos:end="159:35"><name pos:start="159:8" pos:end="159:15">mm_flags</name> <operator pos:start="159:17" pos:end="159:17">&amp;</operator> <name pos:start="159:19" pos:end="159:35">AV_CPU_FLAG_SSSE3</name></expr>)</condition> <block pos:start="159:38" pos:end="177:5">{<block_content pos:start="161:9" pos:end="175:9">

        <if_stmt pos:start="161:9" pos:end="175:9"><if pos:start="161:9" pos:end="175:9">if<condition pos:start="161:11" pos:end="161:25">(<expr pos:start="161:12" pos:end="161:24"><name pos:start="161:12" pos:end="161:19">channels</name> <operator pos:start="161:21" pos:end="161:22">==</operator> <literal type="number" pos:start="161:24" pos:end="161:24">2</literal></expr>)</condition> <block pos:start="161:27" pos:end="175:9">{<block_content pos:start="163:13" pos:end="173:67">

            <if_stmt pos:start="163:13" pos:end="165:67"><if pos:start="163:13" pos:end="165:67">if<condition pos:start="163:15" pos:end="163:80">(   <expr pos:start="163:19" pos:end="163:79"><name pos:start="163:19" pos:end="163:25">out_fmt</name> <operator pos:start="163:27" pos:end="163:28">==</operator> <name pos:start="163:30" pos:end="163:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="163:50" pos:end="163:51">&amp;&amp;</operator> <name pos:start="163:53" pos:end="163:58">in_fmt</name> <operator pos:start="163:60" pos:end="163:61">==</operator> <name pos:start="163:63" pos:end="163:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:67"><block_content pos:start="165:17" pos:end="165:67">

                <expr_stmt pos:start="165:17" pos:end="165:67"><expr pos:start="165:17" pos:end="165:66"><name pos:start="165:17" pos:end="165:26"><name pos:start="165:17" pos:end="165:18">ac</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:26">simd_f</name></name> <operator pos:start="165:28" pos:end="165:28">=</operator>  <name pos:start="165:31" pos:end="165:66">ff_unpack_2ch_int16_to_int16_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="167:13" pos:end="169:67"><if pos:start="167:13" pos:end="169:67">if<condition pos:start="167:15" pos:end="167:80">(   <expr pos:start="167:19" pos:end="167:79"><name pos:start="167:19" pos:end="167:25">out_fmt</name> <operator pos:start="167:27" pos:end="167:28">==</operator> <name pos:start="167:30" pos:end="167:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="167:50" pos:end="167:51">&amp;&amp;</operator> <name pos:start="167:53" pos:end="167:58">in_fmt</name> <operator pos:start="167:60" pos:end="167:61">==</operator> <name pos:start="167:63" pos:end="167:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:67"><block_content pos:start="169:17" pos:end="169:67">

                <expr_stmt pos:start="169:17" pos:end="169:67"><expr pos:start="169:17" pos:end="169:66"><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:18">ac</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:26">simd_f</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator>  <name pos:start="169:31" pos:end="169:66">ff_unpack_2ch_int16_to_int32_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="171:13" pos:end="173:67"><if pos:start="171:13" pos:end="173:67">if<condition pos:start="171:15" pos:end="171:80">(   <expr pos:start="171:19" pos:end="171:79"><name pos:start="171:19" pos:end="171:25">out_fmt</name> <operator pos:start="171:27" pos:end="171:28">==</operator> <name pos:start="171:30" pos:end="171:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="171:50" pos:end="171:51">&amp;&amp;</operator> <name pos:start="171:53" pos:end="171:58">in_fmt</name> <operator pos:start="171:60" pos:end="171:61">==</operator> <name pos:start="171:63" pos:end="171:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:67"><block_content pos:start="173:17" pos:end="173:67">

                <expr_stmt pos:start="173:17" pos:end="173:67"><expr pos:start="173:17" pos:end="173:66"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">ac</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">simd_f</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator>  <name pos:start="173:31" pos:end="173:66">ff_unpack_2ch_int16_to_float_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="197:5"><if pos:start="179:5" pos:end="197:5">if<condition pos:start="179:7" pos:end="179:35">(<expr pos:start="179:8" pos:end="179:34"><name pos:start="179:8" pos:end="179:15">mm_flags</name> <operator pos:start="179:17" pos:end="179:17">&amp;</operator> <name pos:start="179:19" pos:end="179:34">AV_CPU_FLAG_SSE4</name></expr>)</condition> <block pos:start="179:37" pos:end="197:5">{<block_content pos:start="181:9" pos:end="195:9">

        <if_stmt pos:start="181:9" pos:end="195:9"><if pos:start="181:9" pos:end="195:9">if<condition pos:start="181:11" pos:end="181:25">(<expr pos:start="181:12" pos:end="181:24"><name pos:start="181:12" pos:end="181:19">channels</name> <operator pos:start="181:21" pos:end="181:22">==</operator> <literal type="number" pos:start="181:24" pos:end="181:24">6</literal></expr>)</condition> <block pos:start="181:27" pos:end="195:9">{<block_content pos:start="183:13" pos:end="193:64">

            <if_stmt pos:start="183:13" pos:end="185:64"><if pos:start="183:13" pos:end="185:64">if<condition pos:start="183:15" pos:end="183:144">(   <expr pos:start="183:19" pos:end="183:143"><name pos:start="183:19" pos:end="183:25">out_fmt</name> <operator pos:start="183:27" pos:end="183:28">==</operator> <name pos:start="183:30" pos:end="183:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="183:49" pos:end="183:50">&amp;&amp;</operator> <name pos:start="183:52" pos:end="183:57">in_fmt</name> <operator pos:start="183:59" pos:end="183:60">==</operator> <name pos:start="183:62" pos:end="183:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="183:81" pos:end="183:82">||</operator> <name pos:start="183:84" pos:end="183:90">out_fmt</name> <operator pos:start="183:92" pos:end="183:93">==</operator> <name pos:start="183:95" pos:end="183:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="183:113" pos:end="183:114">&amp;&amp;</operator> <name pos:start="183:116" pos:end="183:121">in_fmt</name> <operator pos:start="183:123" pos:end="183:124">==</operator> <name pos:start="183:126" pos:end="183:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:64"><block_content pos:start="185:17" pos:end="185:64">

                <expr_stmt pos:start="185:17" pos:end="185:64"><expr pos:start="185:17" pos:end="185:63"><name pos:start="185:17" pos:end="185:26"><name pos:start="185:17" pos:end="185:18">ac</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:26">simd_f</name></name> <operator pos:start="185:28" pos:end="185:28">=</operator>  <name pos:start="185:31" pos:end="185:63">ff_pack_6ch_float_to_float_a_sse4</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="187:13" pos:end="189:64"><if pos:start="187:13" pos:end="189:64">if<condition pos:start="187:15" pos:end="187:80">(   <expr pos:start="187:19" pos:end="187:79"><name pos:start="187:19" pos:end="187:25">out_fmt</name> <operator pos:start="187:27" pos:end="187:28">==</operator> <name pos:start="187:30" pos:end="187:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="187:49" pos:end="187:50">&amp;&amp;</operator> <name pos:start="187:52" pos:end="187:57">in_fmt</name> <operator pos:start="187:59" pos:end="187:60">==</operator> <name pos:start="187:62" pos:end="187:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:64"><block_content pos:start="189:17" pos:end="189:64">

                <expr_stmt pos:start="189:17" pos:end="189:64"><expr pos:start="189:17" pos:end="189:63"><name pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:18">ac</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:26">simd_f</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator>  <name pos:start="189:31" pos:end="189:63">ff_pack_6ch_int32_to_float_a_sse4</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="191:13" pos:end="193:64"><if pos:start="191:13" pos:end="193:64">if<condition pos:start="191:15" pos:end="191:80">(   <expr pos:start="191:19" pos:end="191:79"><name pos:start="191:19" pos:end="191:25">out_fmt</name> <operator pos:start="191:27" pos:end="191:28">==</operator> <name pos:start="191:30" pos:end="191:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="191:49" pos:end="191:50">&amp;&amp;</operator> <name pos:start="191:52" pos:end="191:57">in_fmt</name> <operator pos:start="191:59" pos:end="191:60">==</operator> <name pos:start="191:62" pos:end="191:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:64"><block_content pos:start="193:17" pos:end="193:64">

                <expr_stmt pos:start="193:17" pos:end="193:64"><expr pos:start="193:17" pos:end="193:63"><name pos:start="193:17" pos:end="193:26"><name pos:start="193:17" pos:end="193:18">ac</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:26">simd_f</name></name> <operator pos:start="193:28" pos:end="193:28">=</operator>  <name pos:start="193:31" pos:end="193:63">ff_pack_6ch_float_to_int32_a_sse4</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="199:5" pos:end="221:5"><if pos:start="199:5" pos:end="221:5">if<condition pos:start="199:7" pos:end="199:55">(<expr pos:start="199:8" pos:end="199:54"><name pos:start="199:8" pos:end="199:24">HAVE_AVX_EXTERNAL</name> <operator pos:start="199:26" pos:end="199:27">&amp;&amp;</operator> <name pos:start="199:29" pos:end="199:36">mm_flags</name> <operator pos:start="199:38" pos:end="199:38">&amp;</operator> <name pos:start="199:40" pos:end="199:54">AV_CPU_FLAG_AVX</name></expr>)</condition> <block pos:start="199:57" pos:end="221:5">{<block_content pos:start="201:9" pos:end="219:9">

        <if_stmt pos:start="201:9" pos:end="203:50"><if pos:start="201:9" pos:end="203:50">if<condition pos:start="201:11" pos:end="201:140">(   <expr pos:start="201:15" pos:end="201:139"><name pos:start="201:15" pos:end="201:21">out_fmt</name> <operator pos:start="201:23" pos:end="201:24">==</operator> <name pos:start="201:26" pos:end="201:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="201:45" pos:end="201:46">&amp;&amp;</operator> <name pos:start="201:48" pos:end="201:53">in_fmt</name> <operator pos:start="201:55" pos:end="201:56">==</operator> <name pos:start="201:58" pos:end="201:74">AV_SAMPLE_FMT_S32</name> <operator pos:start="201:76" pos:end="201:77">||</operator> <name pos:start="201:79" pos:end="201:85">out_fmt</name> <operator pos:start="201:87" pos:end="201:88">==</operator> <name pos:start="201:90" pos:end="201:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="201:109" pos:end="201:110">&amp;&amp;</operator> <name pos:start="201:112" pos:end="201:117">in_fmt</name> <operator pos:start="201:119" pos:end="201:120">==</operator> <name pos:start="201:122" pos:end="201:139">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:50"><block_content pos:start="203:13" pos:end="203:50">

            <expr_stmt pos:start="203:13" pos:end="203:50"><expr pos:start="203:13" pos:end="203:49"><name pos:start="203:13" pos:end="203:22"><name pos:start="203:13" pos:end="203:14">ac</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:22">simd_f</name></name> <operator pos:start="203:24" pos:end="203:24">=</operator>  <name pos:start="203:27" pos:end="203:49">ff_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="205:9" pos:end="219:9"><if pos:start="205:9" pos:end="219:9">if<condition pos:start="205:11" pos:end="205:25">(<expr pos:start="205:12" pos:end="205:24"><name pos:start="205:12" pos:end="205:19">channels</name> <operator pos:start="205:21" pos:end="205:22">==</operator> <literal type="number" pos:start="205:24" pos:end="205:24">6</literal></expr>)</condition> <block pos:start="205:27" pos:end="219:9">{<block_content pos:start="207:13" pos:end="217:63">

            <if_stmt pos:start="207:13" pos:end="209:63"><if pos:start="207:13" pos:end="209:63">if<condition pos:start="207:15" pos:end="207:144">(   <expr pos:start="207:19" pos:end="207:143"><name pos:start="207:19" pos:end="207:25">out_fmt</name> <operator pos:start="207:27" pos:end="207:28">==</operator> <name pos:start="207:30" pos:end="207:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="207:49" pos:end="207:50">&amp;&amp;</operator> <name pos:start="207:52" pos:end="207:57">in_fmt</name> <operator pos:start="207:59" pos:end="207:60">==</operator> <name pos:start="207:62" pos:end="207:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="207:81" pos:end="207:82">||</operator> <name pos:start="207:84" pos:end="207:90">out_fmt</name> <operator pos:start="207:92" pos:end="207:93">==</operator> <name pos:start="207:95" pos:end="207:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="207:113" pos:end="207:114">&amp;&amp;</operator> <name pos:start="207:116" pos:end="207:121">in_fmt</name> <operator pos:start="207:123" pos:end="207:124">==</operator> <name pos:start="207:126" pos:end="207:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:63"><block_content pos:start="209:17" pos:end="209:63">

                <expr_stmt pos:start="209:17" pos:end="209:63"><expr pos:start="209:17" pos:end="209:62"><name pos:start="209:17" pos:end="209:26"><name pos:start="209:17" pos:end="209:18">ac</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:26">simd_f</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator>  <name pos:start="209:31" pos:end="209:62">ff_pack_6ch_float_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="211:13" pos:end="213:63"><if pos:start="211:13" pos:end="213:63">if<condition pos:start="211:15" pos:end="211:80">(   <expr pos:start="211:19" pos:end="211:79"><name pos:start="211:19" pos:end="211:25">out_fmt</name> <operator pos:start="211:27" pos:end="211:28">==</operator> <name pos:start="211:30" pos:end="211:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="211:49" pos:end="211:50">&amp;&amp;</operator> <name pos:start="211:52" pos:end="211:57">in_fmt</name> <operator pos:start="211:59" pos:end="211:60">==</operator> <name pos:start="211:62" pos:end="211:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:63"><block_content pos:start="213:17" pos:end="213:63">

                <expr_stmt pos:start="213:17" pos:end="213:63"><expr pos:start="213:17" pos:end="213:62"><name pos:start="213:17" pos:end="213:26"><name pos:start="213:17" pos:end="213:18">ac</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:26">simd_f</name></name> <operator pos:start="213:28" pos:end="213:28">=</operator>  <name pos:start="213:31" pos:end="213:62">ff_pack_6ch_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="217:63"><if pos:start="215:13" pos:end="217:63">if<condition pos:start="215:15" pos:end="215:80">(   <expr pos:start="215:19" pos:end="215:79"><name pos:start="215:19" pos:end="215:25">out_fmt</name> <operator pos:start="215:27" pos:end="215:28">==</operator> <name pos:start="215:30" pos:end="215:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="215:49" pos:end="215:50">&amp;&amp;</operator> <name pos:start="215:52" pos:end="215:57">in_fmt</name> <operator pos:start="215:59" pos:end="215:60">==</operator> <name pos:start="215:62" pos:end="215:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:63"><block_content pos:start="217:17" pos:end="217:63">

                <expr_stmt pos:start="217:17" pos:end="217:63"><expr pos:start="217:17" pos:end="217:62"><name pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:18">ac</name><operator pos:start="217:19" pos:end="217:20">-&gt;</operator><name pos:start="217:21" pos:end="217:26">simd_f</name></name> <operator pos:start="217:28" pos:end="217:28">=</operator>  <name pos:start="217:31" pos:end="217:62">ff_pack_6ch_float_to_int32_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
