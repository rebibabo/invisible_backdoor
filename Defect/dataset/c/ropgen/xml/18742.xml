<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18742.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">net_slirp_redir</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:33"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:42">redir_str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:12">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">is_udp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">256</literal></expr>]</index></name></decl>, <decl pos:start="7:20" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">in_addr</name></name></type> <name pos:start="11:20" pos:end="11:29">guest_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">host_port</name></decl>, <decl pos:start="13:20" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:29">guest_port</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:21">slirp_inited</name></expr>)</condition> <block pos:start="17:24" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:28">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:20">slirp_inited</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:18">slirp_init</name><argument_list pos:start="21:19" pos:end="21:27">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr></argument>, <argument pos:start="21:23" pos:end="21:26"><expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:17">redir_str</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:51">(<expr pos:start="29:9" pos:end="29:50"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:19">get_str_sep</name><argument_list pos:start="29:20" pos:end="29:46">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">buf</name></expr></argument>, <argument pos:start="29:26" pos:end="29:36"><expr pos:start="29:26" pos:end="29:36"><sizeof pos:start="29:26" pos:end="29:36">sizeof<argument_list pos:start="29:32" pos:end="29:36">(<argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:40">p</name></expr></argument>, <argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><literal type="char" pos:start="29:43" pos:end="29:45">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="29:48" pos:end="29:48">&lt;</operator> <literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:15">strcmp</name><argument_list pos:start="33:16" pos:end="33:27">(<argument pos:start="33:17" pos:end="33:19"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">buf</name></expr></argument>, <argument pos:start="33:22" pos:end="33:26"><expr pos:start="33:22" pos:end="33:26"><literal type="string" pos:start="33:22" pos:end="33:26">"tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:30" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:19">

        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:14">is_udp</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="41:5">else if <condition pos:start="37:15" pos:end="37:35">(<expr pos:start="37:16" pos:end="37:34"><operator pos:start="37:16" pos:end="37:16">!</operator><call pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:22">strcmp</name><argument_list pos:start="37:23" pos:end="37:34">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">buf</name></expr></argument>, <argument pos:start="37:29" pos:end="37:33"><expr pos:start="37:29" pos:end="37:33"><literal type="string" pos:start="37:29" pos:end="37:33">"udp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:37" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:19">

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:14">is_udp</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:51">(<expr pos:start="49:9" pos:end="49:50"><call pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:19">get_str_sep</name><argument_list pos:start="49:20" pos:end="49:46">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">buf</name></expr></argument>, <argument pos:start="49:26" pos:end="49:36"><expr pos:start="49:26" pos:end="49:36"><sizeof pos:start="49:26" pos:end="49:36">sizeof<argument_list pos:start="49:32" pos:end="49:36">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:39" pos:end="49:40"><expr pos:start="49:39" pos:end="49:40"><operator pos:start="49:39" pos:end="49:39">&amp;</operator><name pos:start="49:40" pos:end="49:40">p</name></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><literal type="char" pos:start="49:43" pos:end="49:45">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="49:48" pos:end="49:48">&lt;</operator> <literal type="number" pos:start="49:50" pos:end="49:50">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:13">host_port</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:34"><name pos:start="53:17" pos:end="53:22">strtol</name><argument_list pos:start="53:23" pos:end="53:34">(<argument pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:26">buf</name></expr></argument>, <argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><operator pos:start="53:29" pos:end="53:29">&amp;</operator><name pos:start="53:30" pos:end="53:30">r</name></expr></argument>, <argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:18"><if pos:start="55:5" pos:end="57:18">if <condition pos:start="55:8" pos:end="55:17">(<expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">r</name> <operator pos:start="55:11" pos:end="55:12">==</operator> <name pos:start="55:14" pos:end="55:16">buf</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:18"><block_content pos:start="57:9" pos:end="57:18">

        <goto pos:start="57:9" pos:end="57:18">goto <name pos:start="57:14" pos:end="57:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if <condition pos:start="61:8" pos:end="61:51">(<expr pos:start="61:9" pos:end="61:50"><call pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:19">get_str_sep</name><argument_list pos:start="61:20" pos:end="61:46">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">buf</name></expr></argument>, <argument pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:36"><sizeof pos:start="61:26" pos:end="61:36">sizeof<argument_list pos:start="61:32" pos:end="61:36">(<argument pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><operator pos:start="61:39" pos:end="61:39">&amp;</operator><name pos:start="61:40" pos:end="61:40">p</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><literal type="char" pos:start="61:43" pos:end="61:45">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="61:48" pos:end="61:48">&lt;</operator> <literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:11">buf</name><index pos:start="65:12" pos:end="65:14">[<expr pos:start="65:13" pos:end="65:13"><literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>]</index></name> <operator pos:start="65:16" pos:end="65:17">==</operator> <literal type="char" pos:start="65:19" pos:end="65:22">'\0'</literal></expr>)</condition> <block pos:start="65:25" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:47">

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><call pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:15">pstrcpy</name><argument_list pos:start="67:16" pos:end="67:46">(<argument pos:start="67:17" pos:end="67:19"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:19">buf</name></expr></argument>, <argument pos:start="67:22" pos:end="67:32"><expr pos:start="67:22" pos:end="67:32"><sizeof pos:start="67:22" pos:end="67:32">sizeof<argument_list pos:start="67:28" pos:end="67:32">(<argument pos:start="67:29" pos:end="67:31"><expr pos:start="67:29" pos:end="67:31"><name pos:start="67:29" pos:end="67:31">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:35" pos:end="67:45"><expr pos:start="67:35" pos:end="67:45"><literal type="string" pos:start="67:35" pos:end="67:45">"10.0.2.15"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:37">(<expr pos:start="71:9" pos:end="71:36"><operator pos:start="71:9" pos:end="71:9">!</operator><call pos:start="71:10" pos:end="71:36"><name pos:start="71:10" pos:end="71:18">inet_aton</name><argument_list pos:start="71:19" pos:end="71:36">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">buf</name></expr></argument>, <argument pos:start="71:25" pos:end="71:35"><expr pos:start="71:25" pos:end="71:35"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:35">guest_addr</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <goto pos:start="73:9" pos:end="73:18">goto <name pos:start="73:14" pos:end="73:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:14">guest_port</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <call pos:start="77:18" pos:end="77:33"><name pos:start="77:18" pos:end="77:23">strtol</name><argument_list pos:start="77:24" pos:end="77:33">(<argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">p</name></expr></argument>, <argument pos:start="77:28" pos:end="77:29"><expr pos:start="77:28" pos:end="77:29"><operator pos:start="77:28" pos:end="77:28">&amp;</operator><name pos:start="77:29" pos:end="77:29">r</name></expr></argument>, <argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><literal type="number" pos:start="77:32" pos:end="77:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:15">(<expr pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:9">r</name> <operator pos:start="79:11" pos:end="79:12">==</operator> <name pos:start="79:14" pos:end="79:14">p</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <goto pos:start="81:9" pos:end="81:18">goto <name pos:start="81:14" pos:end="81:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:67">(<expr pos:start="85:9" pos:end="85:66"><call pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:19">slirp_redir</name><argument_list pos:start="85:20" pos:end="85:62">(<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:26">is_udp</name></expr></argument>, <argument pos:start="85:29" pos:end="85:37"><expr pos:start="85:29" pos:end="85:37"><name pos:start="85:29" pos:end="85:37">host_port</name></expr></argument>, <argument pos:start="85:40" pos:end="85:49"><expr pos:start="85:40" pos:end="85:49"><name pos:start="85:40" pos:end="85:49">guest_addr</name></expr></argument>, <argument pos:start="85:52" pos:end="85:61"><expr pos:start="85:52" pos:end="85:61"><name pos:start="85:52" pos:end="85:61">guest_port</name></expr></argument>)</argument_list></call> <operator pos:start="85:64" pos:end="85:64">&lt;</operator> <literal type="number" pos:start="85:66" pos:end="85:66">0</literal></expr>)</condition> <block pos:start="85:69" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:16">

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><call pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:15">fprintf</name><argument_list pos:start="87:16" pos:end="87:63">(<argument pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">stderr</name></expr></argument>, <argument pos:start="87:25" pos:end="87:62"><expr pos:start="87:25" pos:end="87:62"><literal type="string" pos:start="87:25" pos:end="87:62">"qemu: could not set up redirection\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><call pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:12">exit</name><argument_list pos:start="89:13" pos:end="89:15">(<argument pos:start="89:14" pos:end="89:14"><expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="93:5" pos:end="93:11">return;</return>

 <label pos:start="95:2" pos:end="95:6"><name pos:start="95:2" pos:end="95:5">fail</name>:</label>

    <expr_stmt pos:start="97:5" pos:end="97:90"><expr pos:start="97:5" pos:end="97:89"><call pos:start="97:5" pos:end="97:89"><name pos:start="97:5" pos:end="97:11">fprintf</name><argument_list pos:start="97:12" pos:end="97:89">(<argument pos:start="97:13" pos:end="97:18"><expr pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:18">stderr</name></expr></argument>, <argument pos:start="97:21" pos:end="97:88"><expr pos:start="97:21" pos:end="97:88"><literal type="string" pos:start="97:21" pos:end="97:88">"qemu: syntax: -redir [tcp|udp]:host-port:[guest-host]:guest-port\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:12"><expr pos:start="99:5" pos:end="99:11"><call pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:8">exit</name><argument_list pos:start="99:9" pos:end="99:11">(<argument pos:start="99:10" pos:end="99:10"><expr pos:start="99:10" pos:end="99:10"><literal type="number" pos:start="99:10" pos:end="99:10">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
