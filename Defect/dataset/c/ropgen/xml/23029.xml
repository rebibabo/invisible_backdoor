<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23029.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:64"><name pos:start="1:1" pos:end="1:19">x11grab_read_header</name><argument_list pos:start="1:20" pos:end="1:64">(<argument pos:start="1:21" pos:end="1:39">AVFormatContext *s1</argument>, <argument pos:start="1:42" pos:end="1:63">AVFormatParameters *ap</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="317:1">{<block_content pos:start="5:5" pos:end="315:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">x11_grab</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:28">x11grab</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:33">s1</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Display</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">dpy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:20">PixelFormat</name></name></type> <name pos:start="11:22" pos:end="11:33">input_pixfmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">XImage</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:17">image</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">x_off</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">y_off</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">use_shm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:15">param</name></decl>, <decl pos:start="21:18" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:10"><modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:24">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">AVRational</name></type> <name pos:start="25:16" pos:end="25:24">framerate</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:9">param</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:21">av_strdup</name><argument_list pos:start="29:22" pos:end="29:35">(<argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:24">s1</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:34">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:10">offset</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:19">strchr</name><argument_list pos:start="31:20" pos:end="31:31">(<argument pos:start="31:21" pos:end="31:25"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:25">param</name></expr></argument>, <argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><literal type="char" pos:start="31:28" pos:end="31:30">'+'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">offset</name></expr>)</condition> <block pos:start="33:17" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:19">

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><call pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:14">sscanf</name><argument_list pos:start="35:15" pos:end="35:47">(<argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21">offset</name></expr></argument>, <argument pos:start="35:24" pos:end="35:30"><expr pos:start="35:24" pos:end="35:30"><literal type="string" pos:start="35:24" pos:end="35:30">"%d,%d"</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:38">x_off</name></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:46">y_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:15">x11grab</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:24">nomouse</name></name><operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:51"><name pos:start="37:27" pos:end="37:32">strstr</name><argument_list pos:start="37:33" pos:end="37:51">(<argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39">offset</name></expr></argument>, <argument pos:start="37:42" pos:end="37:50"><expr pos:start="37:42" pos:end="37:50"><literal type="string" pos:start="37:42" pos:end="37:50">"nomouse"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:15">offset</name><operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:96">(<expr pos:start="45:9" pos:end="45:95"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:12">ret</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:90"><name pos:start="45:16" pos:end="45:34">av_parse_video_size</name><argument_list pos:start="45:35" pos:end="45:90">(<argument pos:start="45:36" pos:end="45:50"><expr pos:start="45:36" pos:end="45:50"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:50"><name pos:start="45:37" pos:end="45:43">x11grab</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:50">width</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:68"><expr pos:start="45:53" pos:end="45:68"><operator pos:start="45:53" pos:end="45:53">&amp;</operator><name pos:start="45:54" pos:end="45:68"><name pos:start="45:54" pos:end="45:60">x11grab</name><operator pos:start="45:61" pos:end="45:62">-&gt;</operator><name pos:start="45:63" pos:end="45:68">height</name></name></expr></argument>, <argument pos:start="45:71" pos:end="45:89"><expr pos:start="45:71" pos:end="45:89"><name pos:start="45:71" pos:end="45:89"><name pos:start="45:71" pos:end="45:77">x11grab</name><operator pos:start="45:78" pos:end="45:79">-&gt;</operator><name pos:start="45:80" pos:end="45:89">video_size</name></name></expr></argument>)</argument_list></call><operator pos:start="45:91" pos:end="45:91">)</operator> <operator pos:start="45:93" pos:end="45:93">&lt;</operator> <literal type="number" pos:start="45:95" pos:end="45:95">0</literal></expr>)</condition> <block pos:start="45:98" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:65"><expr pos:start="47:9" pos:end="47:64"><call pos:start="47:9" pos:end="47:64"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:64">(<argument pos:start="47:16" pos:end="47:17"><expr pos:start="47:16" pos:end="47:17"><name pos:start="47:16" pos:end="47:17">s1</name></expr></argument>, <argument pos:start="47:20" pos:end="47:31"><expr pos:start="47:20" pos:end="47:31"><name pos:start="47:20" pos:end="47:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:34" pos:end="47:63"><expr pos:start="47:34" pos:end="47:63"><literal type="string" pos:start="47:34" pos:end="47:63">"Couldn't parse video size.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="62:0"><if pos:start="53:5" pos:end="62:0">if <condition pos:start="53:8" pos:end="53:72">(<expr pos:start="53:9" pos:end="53:71"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:66"><name pos:start="53:16" pos:end="53:34">av_parse_video_rate</name><argument_list pos:start="53:35" pos:end="53:66">(<argument pos:start="53:36" pos:end="53:45"><expr pos:start="53:36" pos:end="53:45"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:45">framerate</name></expr></argument>, <argument pos:start="53:48" pos:end="53:65"><expr pos:start="53:48" pos:end="53:65"><name pos:start="53:48" pos:end="53:65"><name pos:start="53:48" pos:end="53:54">x11grab</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:65">framerate</name></name></expr></argument>)</argument_list></call><operator pos:start="53:67" pos:end="53:67">)</operator> <operator pos:start="53:69" pos:end="53:69">&lt;</operator> <literal type="number" pos:start="53:71" pos:end="53:71">0</literal></expr>)</condition> <block pos:start="53:74" pos:end="62:0">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:89"><expr pos:start="55:9" pos:end="55:88"><call pos:start="55:9" pos:end="55:88"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:88">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">s1</name></expr></argument>, <argument pos:start="55:20" pos:end="55:31"><expr pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:34" pos:end="55:67"><expr pos:start="55:34" pos:end="55:67"><literal type="string" pos:start="55:34" pos:end="55:67">"Could not parse framerate: %s.\n"</literal></expr></argument>, <argument pos:start="55:70" pos:end="55:87"><expr pos:start="55:70" pos:end="55:87"><name pos:start="55:70" pos:end="55:87"><name pos:start="55:70" pos:end="55:76">x11grab</name><operator pos:start="55:77" pos:end="55:78">-&gt;</operator><name pos:start="55:79" pos:end="55:87">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="61:1" pos:end="61:28">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:28">FF_API_FORMAT_PARAMETERS</name></expr></cpp:if>

    <if_stmt pos:start="63:5" pos:end="65:35"><if pos:start="63:5" pos:end="65:35">if <condition pos:start="63:8" pos:end="63:22">(<expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">ap</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">width</name></name> <operator pos:start="63:19" pos:end="63:19">&gt;</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:35"><block_content pos:start="65:9" pos:end="65:35">

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:15">x11grab</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:22">width</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:34"><name pos:start="65:26" pos:end="65:27">ap</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:34">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="69:37"><if pos:start="67:5" pos:end="69:37">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:10">ap</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:18">height</name></name> <operator pos:start="67:20" pos:end="67:20">&gt;</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:37"><block_content pos:start="69:9" pos:end="69:37">

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:15">x11grab</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:23">height</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:36"><name pos:start="69:27" pos:end="69:28">ap</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:36">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="76:0"><if pos:start="71:5" pos:end="76:0">if <condition pos:start="71:8" pos:end="71:26">(<expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:10">ap</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:21">time_base</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:25">num</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="76:0"><block_content pos:start="73:9" pos:end="76:0">

        <expr_stmt pos:start="73:9" pos:end="76:0"><expr pos:start="73:9" pos:end="73:70"><name pos:start="73:9" pos:end="73:17">framerate</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:31">AVRational</name><operator pos:start="73:32" pos:end="73:32">)</operator><block pos:start="73:33" pos:end="73:70">{<expr pos:start="73:34" pos:end="73:50"><name pos:start="73:34" pos:end="73:50"><name pos:start="73:34" pos:end="73:35">ap</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:46">time_base</name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:50">den</name></name></expr>, <expr pos:start="73:53" pos:end="73:69"><name pos:start="73:53" pos:end="73:69"><name pos:start="73:53" pos:end="73:54">ap</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:65">time_base</name><operator pos:start="73:66" pos:end="73:66">.</operator><name pos:start="73:67" pos:end="73:69">num</name></name></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="77:5" pos:end="79:79"><expr pos:start="77:5" pos:end="79:78"><call pos:start="77:5" pos:end="79:78"><name pos:start="77:5" pos:end="77:10">av_log</name><argument_list pos:start="77:11" pos:end="79:78">(<argument pos:start="77:12" pos:end="77:13"><expr pos:start="77:12" pos:end="77:13"><name pos:start="77:12" pos:end="77:13">s1</name></expr></argument>, <argument pos:start="77:16" pos:end="77:26"><expr pos:start="77:16" pos:end="77:26"><name pos:start="77:16" pos:end="77:26">AV_LOG_INFO</name></expr></argument>, <argument pos:start="77:29" pos:end="77:90"><expr pos:start="77:29" pos:end="77:90"><literal type="string" pos:start="77:29" pos:end="77:90">"device: %s -&gt; display: %s x: %d y: %d width: %d height: %d\n"</literal></expr></argument>,

           <argument pos:start="79:12" pos:end="79:23"><expr pos:start="79:12" pos:end="79:23"><name pos:start="79:12" pos:end="79:23"><name pos:start="79:12" pos:end="79:13">s1</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">filename</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:30"><expr pos:start="79:26" pos:end="79:30"><name pos:start="79:26" pos:end="79:30">param</name></expr></argument>, <argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><name pos:start="79:33" pos:end="79:37">x_off</name></expr></argument>, <argument pos:start="79:40" pos:end="79:44"><expr pos:start="79:40" pos:end="79:44"><name pos:start="79:40" pos:end="79:44">y_off</name></expr></argument>, <argument pos:start="79:47" pos:end="79:60"><expr pos:start="79:47" pos:end="79:60"><name pos:start="79:47" pos:end="79:60"><name pos:start="79:47" pos:end="79:53">x11grab</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:60">width</name></name></expr></argument>, <argument pos:start="79:63" pos:end="79:77"><expr pos:start="79:63" pos:end="79:77"><name pos:start="79:63" pos:end="79:77"><name pos:start="79:63" pos:end="79:69">x11grab</name><operator pos:start="79:70" pos:end="79:71">-&gt;</operator><name pos:start="79:72" pos:end="79:77">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:30"><expr pos:start="83:5" pos:end="83:29"><name pos:start="83:5" pos:end="83:7">dpy</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:29"><name pos:start="83:11" pos:end="83:22">XOpenDisplay</name><argument_list pos:start="83:23" pos:end="83:29">(<argument pos:start="83:24" pos:end="83:28"><expr pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:28">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if<condition pos:start="85:7" pos:end="85:12">(<expr pos:start="85:8" pos:end="85:11"><operator pos:start="85:8" pos:end="85:8">!</operator><name pos:start="85:9" pos:end="85:11">dpy</name></expr>)</condition> <block pos:start="85:14" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:17">

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><call pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:63">(<argument pos:start="87:16" pos:end="87:17"><expr pos:start="87:16" pos:end="87:17"><name pos:start="87:16" pos:end="87:17">s1</name></expr></argument>, <argument pos:start="87:20" pos:end="87:31"><expr pos:start="87:20" pos:end="87:31"><name pos:start="87:20" pos:end="87:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:34" pos:end="87:62"><expr pos:start="87:34" pos:end="87:62"><literal type="string" pos:start="87:34" pos:end="87:62">"Could not open X display.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:26"><name pos:start="89:15" pos:end="89:21">AVERROR</name><argument_list pos:start="89:22" pos:end="89:26">(<argument pos:start="89:23" pos:end="89:25"><expr pos:start="89:23" pos:end="89:25"><name pos:start="89:23" pos:end="89:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:17">goto <name pos:start="91:14" pos:end="91:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:6">st</name> <operator pos:start="97:8" pos:end="97:8">=</operator> <call pos:start="97:10" pos:end="97:29"><name pos:start="97:10" pos:end="97:22">av_new_stream</name><argument_list pos:start="97:23" pos:end="97:29">(<argument pos:start="97:24" pos:end="97:25"><expr pos:start="97:24" pos:end="97:25"><name pos:start="97:24" pos:end="97:25">s1</name></expr></argument>, <argument pos:start="97:28" pos:end="97:28"><expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:12">(<expr pos:start="99:9" pos:end="99:11"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:11">st</name></expr>)</condition> <block pos:start="99:14" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:17">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:29"><name pos:start="101:15" pos:end="101:21">AVERROR</name><argument_list pos:start="101:22" pos:end="101:29">(<argument pos:start="101:23" pos:end="101:28"><expr pos:start="101:23" pos:end="101:28"><name pos:start="101:23" pos:end="101:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:17">goto <name pos:start="103:14" pos:end="103:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:40"><expr pos:start="107:5" pos:end="107:39"><call pos:start="107:5" pos:end="107:39"><name pos:start="107:5" pos:end="107:19">av_set_pts_info</name><argument_list pos:start="107:20" pos:end="107:39">(<argument pos:start="107:21" pos:end="107:22"><expr pos:start="107:21" pos:end="107:22"><name pos:start="107:21" pos:end="107:22">st</name></expr></argument>, <argument pos:start="107:25" pos:end="107:26"><expr pos:start="107:25" pos:end="107:26"><literal type="number" pos:start="107:25" pos:end="107:26">64</literal></expr></argument>, <argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr></argument>, <argument pos:start="107:32" pos:end="107:38"><expr pos:start="107:32" pos:end="107:38"><literal type="number" pos:start="107:32" pos:end="107:38">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:42" pos:end="107:64">/* 64 bits pts in us */</comment>



    <expr_stmt pos:start="111:5" pos:end="111:38"><expr pos:start="111:5" pos:end="111:37"><name pos:start="111:5" pos:end="111:11">use_shm</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:37"><name pos:start="111:15" pos:end="111:32">XShmQueryExtension</name><argument_list pos:start="111:33" pos:end="111:37">(<argument pos:start="111:34" pos:end="111:36"><expr pos:start="111:34" pos:end="111:36"><name pos:start="111:34" pos:end="111:36">dpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:88"><expr pos:start="113:5" pos:end="113:87"><call pos:start="113:5" pos:end="113:87"><name pos:start="113:5" pos:end="113:10">av_log</name><argument_list pos:start="113:11" pos:end="113:87">(<argument pos:start="113:12" pos:end="113:13"><expr pos:start="113:12" pos:end="113:13"><name pos:start="113:12" pos:end="113:13">s1</name></expr></argument>, <argument pos:start="113:16" pos:end="113:26"><expr pos:start="113:16" pos:end="113:26"><name pos:start="113:16" pos:end="113:26">AV_LOG_INFO</name></expr></argument>, <argument pos:start="113:29" pos:end="113:64"><expr pos:start="113:29" pos:end="113:64"><literal type="string" pos:start="113:29" pos:end="113:64">"shared memory extension %s found\n"</literal></expr></argument>, <argument pos:start="113:67" pos:end="113:86"><expr pos:start="113:67" pos:end="113:86"><ternary pos:start="113:67" pos:end="113:86"><condition pos:start="113:67" pos:end="113:75"><expr pos:start="113:67" pos:end="113:73"><name pos:start="113:67" pos:end="113:73">use_shm</name></expr> ?</condition><then pos:start="113:77" pos:end="113:78"> <expr pos:start="113:77" pos:end="113:78"><literal type="string" pos:start="113:77" pos:end="113:78">""</literal></expr> </then><else pos:start="113:80" pos:end="113:86">: <expr pos:start="113:82" pos:end="113:86"><literal type="string" pos:start="113:82" pos:end="113:86">"not"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="179:5"><if pos:start="117:5" pos:end="169:5">if<condition pos:start="117:7" pos:end="117:15">(<expr pos:start="117:8" pos:end="117:14"><name pos:start="117:8" pos:end="117:14">use_shm</name></expr>)</condition> <block pos:start="117:17" pos:end="169:5">{<block_content pos:start="119:9" pos:end="167:9">

        <decl_stmt pos:start="119:9" pos:end="119:38"><decl pos:start="119:9" pos:end="119:37"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:15">scr</name> <init pos:start="119:17" pos:end="119:37">= <expr pos:start="119:19" pos:end="119:37"><call pos:start="119:19" pos:end="119:37"><name pos:start="119:19" pos:end="119:32">XDefaultScreen</name><argument_list pos:start="119:33" pos:end="119:37">(<argument pos:start="119:34" pos:end="119:36"><expr pos:start="119:34" pos:end="119:36"><name pos:start="119:34" pos:end="119:36">dpy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="121:9" pos:end="133:65"><expr pos:start="121:9" pos:end="133:64"><name pos:start="121:9" pos:end="121:13">image</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <call pos:start="121:17" pos:end="133:64"><name pos:start="121:17" pos:end="121:31">XShmCreateImage</name><argument_list pos:start="121:32" pos:end="133:64">(<argument pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">dpy</name></expr></argument>,

                                <argument pos:start="123:33" pos:end="123:55"><expr pos:start="123:33" pos:end="123:55"><call pos:start="123:33" pos:end="123:55"><name pos:start="123:33" pos:end="123:45">DefaultVisual</name><argument_list pos:start="123:46" pos:end="123:55">(<argument pos:start="123:47" pos:end="123:49"><expr pos:start="123:47" pos:end="123:49"><name pos:start="123:47" pos:end="123:49">dpy</name></expr></argument>, <argument pos:start="123:52" pos:end="123:54"><expr pos:start="123:52" pos:end="123:54"><name pos:start="123:52" pos:end="123:54">scr</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="125:33" pos:end="125:54"><expr pos:start="125:33" pos:end="125:54"><call pos:start="125:33" pos:end="125:54"><name pos:start="125:33" pos:end="125:44">DefaultDepth</name><argument_list pos:start="125:45" pos:end="125:54">(<argument pos:start="125:46" pos:end="125:48"><expr pos:start="125:46" pos:end="125:48"><name pos:start="125:46" pos:end="125:48">dpy</name></expr></argument>, <argument pos:start="125:51" pos:end="125:53"><expr pos:start="125:51" pos:end="125:53"><name pos:start="125:51" pos:end="125:53">scr</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="127:33" pos:end="127:39"><expr pos:start="127:33" pos:end="127:39"><name pos:start="127:33" pos:end="127:39">ZPixmap</name></expr></argument>,

                                <argument pos:start="129:33" pos:end="129:36"><expr pos:start="129:33" pos:end="129:36"><name pos:start="129:33" pos:end="129:36">NULL</name></expr></argument>,

                                <argument pos:start="131:33" pos:end="131:49"><expr pos:start="131:33" pos:end="131:49"><operator pos:start="131:33" pos:end="131:33">&amp;</operator><name pos:start="131:34" pos:end="131:49"><name pos:start="131:34" pos:end="131:40">x11grab</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:49">shminfo</name></name></expr></argument>,

                                <argument pos:start="133:33" pos:end="133:46"><expr pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:39">x11grab</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:46">width</name></name></expr></argument>, <argument pos:start="133:49" pos:end="133:63"><expr pos:start="133:49" pos:end="133:63"><name pos:start="133:49" pos:end="133:63"><name pos:start="133:49" pos:end="133:55">x11grab</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:63">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="139:56"><expr pos:start="135:9" pos:end="139:55"><name pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:15">x11grab</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:24">shminfo</name><operator pos:start="135:25" pos:end="135:25">.</operator><name pos:start="135:26" pos:end="135:30">shmid</name></name> <operator pos:start="135:32" pos:end="135:32">=</operator> <call pos:start="135:34" pos:end="139:55"><name pos:start="135:34" pos:end="135:39">shmget</name><argument_list pos:start="135:40" pos:end="139:55">(<argument pos:start="135:41" pos:end="135:51"><expr pos:start="135:41" pos:end="135:51"><name pos:start="135:41" pos:end="135:51">IPC_PRIVATE</name></expr></argument>,

                                        <argument pos:start="137:41" pos:end="137:77"><expr pos:start="137:41" pos:end="137:77"><name pos:start="137:41" pos:end="137:61"><name pos:start="137:41" pos:end="137:45">image</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:61">bytes_per_line</name></name> <operator pos:start="137:63" pos:end="137:63">*</operator> <name pos:start="137:65" pos:end="137:77"><name pos:start="137:65" pos:end="137:69">image</name><operator pos:start="137:70" pos:end="137:71">-&gt;</operator><name pos:start="137:72" pos:end="137:77">height</name></name></expr></argument>,

                                        <argument pos:start="139:41" pos:end="139:54"><expr pos:start="139:41" pos:end="139:54"><name pos:start="139:41" pos:end="139:49">IPC_CREAT</name><operator pos:start="139:50" pos:end="139:50">|</operator><literal type="number" pos:start="139:51" pos:end="139:54">0777</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="149:9"><if pos:start="141:9" pos:end="149:9">if <condition pos:start="141:12" pos:end="141:41">(<expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:19">x11grab</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:28">shminfo</name><operator pos:start="141:29" pos:end="141:29">.</operator><name pos:start="141:30" pos:end="141:34">shmid</name></name> <operator pos:start="141:36" pos:end="141:37">==</operator> <operator pos:start="141:39" pos:end="141:39">-</operator><literal type="number" pos:start="141:40" pos:end="141:40">1</literal></expr>)</condition> <block pos:start="141:43" pos:end="149:9">{<block_content pos:start="143:13" pos:end="147:21">

            <expr_stmt pos:start="143:13" pos:end="143:74"><expr pos:start="143:13" pos:end="143:73"><call pos:start="143:13" pos:end="143:73"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="143:73">(<argument pos:start="143:20" pos:end="143:21"><expr pos:start="143:20" pos:end="143:21"><name pos:start="143:20" pos:end="143:21">s1</name></expr></argument>, <argument pos:start="143:24" pos:end="143:35"><expr pos:start="143:24" pos:end="143:35"><name pos:start="143:24" pos:end="143:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:38" pos:end="143:72"><expr pos:start="143:38" pos:end="143:72"><literal type="string" pos:start="143:38" pos:end="143:72">"Fatal: Can't get shared memory!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:34"><expr pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:15">ret</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:33"><name pos:start="145:19" pos:end="145:25">AVERROR</name><argument_list pos:start="145:26" pos:end="145:33">(<argument pos:start="145:27" pos:end="145:32"><expr pos:start="145:27" pos:end="145:32"><name pos:start="145:27" pos:end="145:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="147:13" pos:end="147:21">goto <name pos:start="147:18" pos:end="147:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:85"><expr pos:start="151:9" pos:end="151:84"><name pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:15">x11grab</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:24">shminfo</name><operator pos:start="151:25" pos:end="151:25">.</operator><name pos:start="151:26" pos:end="151:32">shmaddr</name></name> <operator pos:start="151:34" pos:end="151:34">=</operator> <name pos:start="151:36" pos:end="151:46"><name pos:start="151:36" pos:end="151:40">image</name><operator pos:start="151:41" pos:end="151:42">-&gt;</operator><name pos:start="151:43" pos:end="151:46">data</name></name> <operator pos:start="151:48" pos:end="151:48">=</operator> <call pos:start="151:50" pos:end="151:84"><name pos:start="151:50" pos:end="151:54">shmat</name><argument_list pos:start="151:55" pos:end="151:84">(<argument pos:start="151:56" pos:end="151:77"><expr pos:start="151:56" pos:end="151:77"><name pos:start="151:56" pos:end="151:77"><name pos:start="151:56" pos:end="151:62">x11grab</name><operator pos:start="151:63" pos:end="151:64">-&gt;</operator><name pos:start="151:65" pos:end="151:71">shminfo</name><operator pos:start="151:72" pos:end="151:72">.</operator><name pos:start="151:73" pos:end="151:77">shmid</name></name></expr></argument>, <argument pos:start="151:80" pos:end="151:80"><expr pos:start="151:80" pos:end="151:80"><literal type="number" pos:start="151:80" pos:end="151:80">0</literal></expr></argument>, <argument pos:start="151:83" pos:end="151:83"><expr pos:start="151:83" pos:end="151:83"><literal type="number" pos:start="151:83" pos:end="151:83">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:15">x11grab</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:24">shminfo</name><operator pos:start="153:25" pos:end="153:25">.</operator><name pos:start="153:26" pos:end="153:33">readOnly</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:41">False</name></expr>;</expr_stmt>



        <if_stmt pos:start="157:9" pos:end="167:9"><if pos:start="157:9" pos:end="167:9">if <condition pos:start="157:12" pos:end="157:48">(<expr pos:start="157:13" pos:end="157:47"><operator pos:start="157:13" pos:end="157:13">!</operator><call pos:start="157:14" pos:end="157:47"><name pos:start="157:14" pos:end="157:23">XShmAttach</name><argument_list pos:start="157:24" pos:end="157:47">(<argument pos:start="157:25" pos:end="157:27"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:27">dpy</name></expr></argument>, <argument pos:start="157:30" pos:end="157:46"><expr pos:start="157:30" pos:end="157:46"><operator pos:start="157:30" pos:end="157:30">&amp;</operator><name pos:start="157:31" pos:end="157:46"><name pos:start="157:31" pos:end="157:37">x11grab</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:46">shminfo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:50" pos:end="167:9">{<block_content pos:start="159:13" pos:end="165:21">

            <expr_stmt pos:start="159:13" pos:end="159:81"><expr pos:start="159:13" pos:end="159:80"><call pos:start="159:13" pos:end="159:80"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="159:80">(<argument pos:start="159:20" pos:end="159:21"><expr pos:start="159:20" pos:end="159:21"><name pos:start="159:20" pos:end="159:21">s1</name></expr></argument>, <argument pos:start="159:24" pos:end="159:35"><expr pos:start="159:24" pos:end="159:35"><name pos:start="159:24" pos:end="159:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:38" pos:end="159:79"><expr pos:start="159:38" pos:end="159:79"><literal type="string" pos:start="159:38" pos:end="159:79">"Fatal: Failed to attach shared memory!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="161:13" pos:end="161:55">/* needs some better error subroutine :) */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:30"><name pos:start="163:19" pos:end="163:25">AVERROR</name><argument_list pos:start="163:26" pos:end="163:30">(<argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="165:13" pos:end="165:21">goto <name pos:start="165:18" pos:end="165:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="179:5">else <block pos:start="169:12" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:46">

        <expr_stmt pos:start="171:9" pos:end="177:46"><expr pos:start="171:9" pos:end="177:45"><name pos:start="171:9" pos:end="171:13">image</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <call pos:start="171:17" pos:end="177:45"><name pos:start="171:17" pos:end="171:25">XGetImage</name><argument_list pos:start="171:26" pos:end="177:45">(<argument pos:start="171:27" pos:end="171:29"><expr pos:start="171:27" pos:end="171:29"><name pos:start="171:27" pos:end="171:29">dpy</name></expr></argument>, <argument pos:start="171:32" pos:end="171:66"><expr pos:start="171:32" pos:end="171:66"><call pos:start="171:32" pos:end="171:66"><name pos:start="171:32" pos:end="171:41">RootWindow</name><argument_list pos:start="171:42" pos:end="171:66">(<argument pos:start="171:43" pos:end="171:45"><expr pos:start="171:43" pos:end="171:45"><name pos:start="171:43" pos:end="171:45">dpy</name></expr></argument>, <argument pos:start="171:48" pos:end="171:65"><expr pos:start="171:48" pos:end="171:65"><call pos:start="171:48" pos:end="171:65"><name pos:start="171:48" pos:end="171:60">DefaultScreen</name><argument_list pos:start="171:61" pos:end="171:65">(<argument pos:start="171:62" pos:end="171:64"><expr pos:start="171:62" pos:end="171:64"><name pos:start="171:62" pos:end="171:64">dpy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="173:27" pos:end="173:31"><expr pos:start="173:27" pos:end="173:31"><name pos:start="173:27" pos:end="173:31">x_off</name></expr></argument>,<argument pos:start="173:33" pos:end="173:37"><expr pos:start="173:33" pos:end="173:37"><name pos:start="173:33" pos:end="173:37">y_off</name></expr></argument>,

                          <argument pos:start="175:27" pos:end="175:40"><expr pos:start="175:27" pos:end="175:40"><name pos:start="175:27" pos:end="175:40"><name pos:start="175:27" pos:end="175:33">x11grab</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:40">width</name></name></expr></argument>, <argument pos:start="175:43" pos:end="175:57"><expr pos:start="175:43" pos:end="175:57"><name pos:start="175:43" pos:end="175:57"><name pos:start="175:43" pos:end="175:49">x11grab</name><operator pos:start="175:50" pos:end="175:51">-&gt;</operator><name pos:start="175:52" pos:end="175:57">height</name></name></expr></argument>,

                          <argument pos:start="177:27" pos:end="177:35"><expr pos:start="177:27" pos:end="177:35"><name pos:start="177:27" pos:end="177:35">AllPlanes</name></expr></argument>, <argument pos:start="177:38" pos:end="177:44"><expr pos:start="177:38" pos:end="177:44"><name pos:start="177:38" pos:end="177:44">ZPixmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="183:5" pos:end="275:5">switch <condition pos:start="183:12" pos:end="183:34">(<expr pos:start="183:13" pos:end="183:33"><name pos:start="183:13" pos:end="183:33"><name pos:start="183:13" pos:end="183:17">image</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:33">bits_per_pixel</name></name></expr>)</condition> <block pos:start="183:36" pos:end="275:5">{<block_content pos:start="185:5" pos:end="273:17">

    <case pos:start="185:5" pos:end="185:11">case <expr pos:start="185:10" pos:end="185:10"><literal type="number" pos:start="185:10" pos:end="185:10">8</literal></expr>:</case>

        <expr_stmt pos:start="187:9" pos:end="187:53"><expr pos:start="187:9" pos:end="187:52"><call pos:start="187:9" pos:end="187:52"><name pos:start="187:9" pos:end="187:14">av_log</name> <argument_list pos:start="187:16" pos:end="187:52">(<argument pos:start="187:17" pos:end="187:18"><expr pos:start="187:17" pos:end="187:18"><name pos:start="187:17" pos:end="187:18">s1</name></expr></argument>, <argument pos:start="187:21" pos:end="187:32"><expr pos:start="187:21" pos:end="187:32"><name pos:start="187:21" pos:end="187:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="187:35" pos:end="187:51"><expr pos:start="187:35" pos:end="187:51"><literal type="string" pos:start="187:35" pos:end="187:51">"8 bit palette\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:20">input_pixfmt</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <name pos:start="189:24" pos:end="189:35">PIX_FMT_PAL8</name></expr>;</expr_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <case pos:start="193:5" pos:end="193:12">case <expr pos:start="193:10" pos:end="193:11"><literal type="number" pos:start="193:10" pos:end="193:11">16</literal></expr>:</case>

        <if_stmt pos:start="195:9" pos:end="225:9"><if pos:start="195:9" pos:end="205:9">if <condition pos:start="195:12" pos:end="199:48">(       <expr pos:start="195:20" pos:end="199:46"><name pos:start="195:20" pos:end="195:34"><name pos:start="195:20" pos:end="195:24">image</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:34">red_mask</name></name>   <operator pos:start="195:38" pos:end="195:39">==</operator> <literal type="number" pos:start="195:41" pos:end="195:46">0xf800</literal> <operator pos:start="195:48" pos:end="195:49">&amp;&amp;</operator>

                   <name pos:start="197:20" pos:end="197:36"><name pos:start="197:20" pos:end="197:24">image</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:36">green_mask</name></name> <operator pos:start="197:38" pos:end="197:39">==</operator> <literal type="number" pos:start="197:41" pos:end="197:46">0x07e0</literal> <operator pos:start="197:48" pos:end="197:49">&amp;&amp;</operator>

                   <name pos:start="199:20" pos:end="199:35"><name pos:start="199:20" pos:end="199:24">image</name><operator pos:start="199:25" pos:end="199:26">-&gt;</operator><name pos:start="199:27" pos:end="199:35">blue_mask</name></name>  <operator pos:start="199:38" pos:end="199:39">==</operator> <literal type="number" pos:start="199:41" pos:end="199:46">0x001f</literal></expr> )</condition> <block pos:start="199:50" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:42">

            <expr_stmt pos:start="201:13" pos:end="201:57"><expr pos:start="201:13" pos:end="201:56"><call pos:start="201:13" pos:end="201:56"><name pos:start="201:13" pos:end="201:18">av_log</name> <argument_list pos:start="201:20" pos:end="201:56">(<argument pos:start="201:21" pos:end="201:22"><expr pos:start="201:21" pos:end="201:22"><name pos:start="201:21" pos:end="201:22">s1</name></expr></argument>, <argument pos:start="201:25" pos:end="201:36"><expr pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="201:39" pos:end="201:55"><expr pos:start="201:39" pos:end="201:55"><literal type="string" pos:start="201:39" pos:end="201:55">"16 bit RGB565\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:42"><expr pos:start="203:13" pos:end="203:41"><name pos:start="203:13" pos:end="203:24">input_pixfmt</name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:41">PIX_FMT_RGB565</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="205:11" pos:end="215:9">else if <condition pos:start="205:19" pos:end="209:48">(<expr pos:start="205:20" pos:end="209:46"><name pos:start="205:20" pos:end="205:34"><name pos:start="205:20" pos:end="205:24">image</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:34">red_mask</name></name>   <operator pos:start="205:38" pos:end="205:39">==</operator> <literal type="number" pos:start="205:41" pos:end="205:46">0x7c00</literal> <operator pos:start="205:48" pos:end="205:49">&amp;&amp;</operator>

                   <name pos:start="207:20" pos:end="207:36"><name pos:start="207:20" pos:end="207:24">image</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:36">green_mask</name></name> <operator pos:start="207:38" pos:end="207:39">==</operator> <literal type="number" pos:start="207:41" pos:end="207:46">0x03e0</literal> <operator pos:start="207:48" pos:end="207:49">&amp;&amp;</operator>

                   <name pos:start="209:20" pos:end="209:35"><name pos:start="209:20" pos:end="209:24">image</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:35">blue_mask</name></name>  <operator pos:start="209:38" pos:end="209:39">==</operator> <literal type="number" pos:start="209:41" pos:end="209:46">0x001f</literal></expr> )</condition> <block pos:start="209:50" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:42">

            <expr_stmt pos:start="211:13" pos:end="211:56"><expr pos:start="211:13" pos:end="211:55"><call pos:start="211:13" pos:end="211:55"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="211:55">(<argument pos:start="211:20" pos:end="211:21"><expr pos:start="211:20" pos:end="211:21"><name pos:start="211:20" pos:end="211:21">s1</name></expr></argument>, <argument pos:start="211:24" pos:end="211:35"><expr pos:start="211:24" pos:end="211:35"><name pos:start="211:24" pos:end="211:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="211:38" pos:end="211:54"><expr pos:start="211:38" pos:end="211:54"><literal type="string" pos:start="211:38" pos:end="211:54">"16 bit RGB555\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:42"><expr pos:start="213:13" pos:end="213:41"><name pos:start="213:13" pos:end="213:24">input_pixfmt</name> <operator pos:start="213:26" pos:end="213:26">=</operator> <name pos:start="213:28" pos:end="213:41">PIX_FMT_RGB555</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="215:11" pos:end="225:9">else <block pos:start="215:16" pos:end="225:9">{<block_content pos:start="217:13" pos:end="223:21">

            <expr_stmt pos:start="217:13" pos:end="217:123"><expr pos:start="217:13" pos:end="217:122"><call pos:start="217:13" pos:end="217:122"><name pos:start="217:13" pos:end="217:18">av_log</name><argument_list pos:start="217:19" pos:end="217:122">(<argument pos:start="217:20" pos:end="217:21"><expr pos:start="217:20" pos:end="217:21"><name pos:start="217:20" pos:end="217:21">s1</name></expr></argument>, <argument pos:start="217:24" pos:end="217:35"><expr pos:start="217:24" pos:end="217:35"><name pos:start="217:24" pos:end="217:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:38" pos:end="217:98"><expr pos:start="217:38" pos:end="217:98"><literal type="string" pos:start="217:38" pos:end="217:98">"RGB ordering at image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="217:101" pos:end="217:121"><expr pos:start="217:101" pos:end="217:121"><name pos:start="217:101" pos:end="217:121"><name pos:start="217:101" pos:end="217:105">image</name><operator pos:start="217:106" pos:end="217:107">-&gt;</operator><name pos:start="217:108" pos:end="217:121">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:139"><expr pos:start="219:13" pos:end="219:138"><call pos:start="219:13" pos:end="219:138"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="219:138">(<argument pos:start="219:20" pos:end="219:21"><expr pos:start="219:20" pos:end="219:21"><name pos:start="219:20" pos:end="219:21">s1</name></expr></argument>, <argument pos:start="219:24" pos:end="219:35"><expr pos:start="219:24" pos:end="219:35"><name pos:start="219:24" pos:end="219:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:38" pos:end="219:83"><expr pos:start="219:38" pos:end="219:83"><literal type="string" pos:start="219:38" pos:end="219:83">"color masks: r 0x%.6lx g 0x%.6lx b 0x%.6lx\n"</literal></expr></argument>, <argument pos:start="219:86" pos:end="219:100"><expr pos:start="219:86" pos:end="219:100"><name pos:start="219:86" pos:end="219:100"><name pos:start="219:86" pos:end="219:90">image</name><operator pos:start="219:91" pos:end="219:92">-&gt;</operator><name pos:start="219:93" pos:end="219:100">red_mask</name></name></expr></argument>, <argument pos:start="219:103" pos:end="219:119"><expr pos:start="219:103" pos:end="219:119"><name pos:start="219:103" pos:end="219:119"><name pos:start="219:103" pos:end="219:107">image</name><operator pos:start="219:108" pos:end="219:109">-&gt;</operator><name pos:start="219:110" pos:end="219:119">green_mask</name></name></expr></argument>, <argument pos:start="219:122" pos:end="219:137"><expr pos:start="219:122" pos:end="219:137"><name pos:start="219:122" pos:end="219:137"><name pos:start="219:122" pos:end="219:126">image</name><operator pos:start="219:127" pos:end="219:128">-&gt;</operator><name pos:start="219:129" pos:end="219:137">blue_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:31"><expr pos:start="221:13" pos:end="221:30"><name pos:start="221:13" pos:end="221:15">ret</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <call pos:start="221:19" pos:end="221:30"><name pos:start="221:19" pos:end="221:25">AVERROR</name><argument_list pos:start="221:26" pos:end="221:30">(<argument pos:start="221:27" pos:end="221:29"><expr pos:start="221:27" pos:end="221:29"><name pos:start="221:27" pos:end="221:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="223:13" pos:end="223:21">goto <name pos:start="223:18" pos:end="223:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="227:9" pos:end="227:14">break;</break>

    <case pos:start="229:5" pos:end="229:12">case <expr pos:start="229:10" pos:end="229:11"><literal type="number" pos:start="229:10" pos:end="229:11">24</literal></expr>:</case>

        <if_stmt pos:start="231:9" pos:end="257:9"><if pos:start="231:9" pos:end="239:9">if <condition pos:start="231:12" pos:end="235:51">(        <expr pos:start="231:21" pos:end="235:49"><name pos:start="231:21" pos:end="231:35"><name pos:start="231:21" pos:end="231:25">image</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:35">red_mask</name></name>   <operator pos:start="231:39" pos:end="231:40">==</operator> <literal type="number" pos:start="231:42" pos:end="231:49">0xff0000</literal> <operator pos:start="231:51" pos:end="231:52">&amp;&amp;</operator>

                    <name pos:start="233:21" pos:end="233:37"><name pos:start="233:21" pos:end="233:25">image</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:37">green_mask</name></name> <operator pos:start="233:39" pos:end="233:40">==</operator> <literal type="number" pos:start="233:42" pos:end="233:49">0x00ff00</literal> <operator pos:start="233:51" pos:end="233:52">&amp;&amp;</operator>

                    <name pos:start="235:21" pos:end="235:36"><name pos:start="235:21" pos:end="235:25">image</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:36">blue_mask</name></name>  <operator pos:start="235:39" pos:end="235:40">==</operator> <literal type="number" pos:start="235:42" pos:end="235:49">0x0000ff</literal></expr> )</condition> <block pos:start="235:53" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:41">

            <expr_stmt pos:start="237:13" pos:end="237:41"><expr pos:start="237:13" pos:end="237:40"><name pos:start="237:13" pos:end="237:24">input_pixfmt</name> <operator pos:start="237:26" pos:end="237:26">=</operator> <name pos:start="237:28" pos:end="237:40">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="239:11" pos:end="247:9">else if <condition pos:start="239:19" pos:end="243:51">( <expr pos:start="239:21" pos:end="243:49"><name pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:25">image</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:35">red_mask</name></name>   <operator pos:start="239:39" pos:end="239:40">==</operator> <literal type="number" pos:start="239:42" pos:end="239:49">0x0000ff</literal> <operator pos:start="239:51" pos:end="239:52">&amp;&amp;</operator>

                    <name pos:start="241:21" pos:end="241:37"><name pos:start="241:21" pos:end="241:25">image</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:37">green_mask</name></name> <operator pos:start="241:39" pos:end="241:40">==</operator> <literal type="number" pos:start="241:42" pos:end="241:49">0x00ff00</literal> <operator pos:start="241:51" pos:end="241:52">&amp;&amp;</operator>

                    <name pos:start="243:21" pos:end="243:36"><name pos:start="243:21" pos:end="243:25">image</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:36">blue_mask</name></name>  <operator pos:start="243:39" pos:end="243:40">==</operator> <literal type="number" pos:start="243:42" pos:end="243:49">0xff0000</literal></expr> )</condition> <block pos:start="243:53" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:41">

            <expr_stmt pos:start="245:13" pos:end="245:41"><expr pos:start="245:13" pos:end="245:40"><name pos:start="245:13" pos:end="245:24">input_pixfmt</name> <operator pos:start="245:26" pos:end="245:26">=</operator> <name pos:start="245:28" pos:end="245:40">PIX_FMT_RGB24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="247:11" pos:end="257:9">else <block pos:start="247:16" pos:end="257:9">{<block_content pos:start="249:13" pos:end="255:21">

            <expr_stmt pos:start="249:13" pos:end="249:122"><expr pos:start="249:13" pos:end="249:121"><call pos:start="249:13" pos:end="249:121"><name pos:start="249:13" pos:end="249:18">av_log</name><argument_list pos:start="249:19" pos:end="249:121">(<argument pos:start="249:20" pos:end="249:21"><expr pos:start="249:20" pos:end="249:21"><name pos:start="249:20" pos:end="249:21">s1</name></expr></argument>, <argument pos:start="249:24" pos:end="249:35"><expr pos:start="249:24" pos:end="249:35"><name pos:start="249:24" pos:end="249:35">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="249:37" pos:end="249:97"><expr pos:start="249:37" pos:end="249:97"><literal type="string" pos:start="249:37" pos:end="249:97">"rgb ordering at image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="249:100" pos:end="249:120"><expr pos:start="249:100" pos:end="249:120"><name pos:start="249:100" pos:end="249:120"><name pos:start="249:100" pos:end="249:104">image</name><operator pos:start="249:105" pos:end="249:106">-&gt;</operator><name pos:start="249:107" pos:end="249:120">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:139"><expr pos:start="251:13" pos:end="251:138"><call pos:start="251:13" pos:end="251:138"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="251:138">(<argument pos:start="251:20" pos:end="251:21"><expr pos:start="251:20" pos:end="251:21"><name pos:start="251:20" pos:end="251:21">s1</name></expr></argument>, <argument pos:start="251:24" pos:end="251:35"><expr pos:start="251:24" pos:end="251:35"><name pos:start="251:24" pos:end="251:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:38" pos:end="251:83"><expr pos:start="251:38" pos:end="251:83"><literal type="string" pos:start="251:38" pos:end="251:83">"color masks: r 0x%.6lx g 0x%.6lx b 0x%.6lx\n"</literal></expr></argument>, <argument pos:start="251:86" pos:end="251:100"><expr pos:start="251:86" pos:end="251:100"><name pos:start="251:86" pos:end="251:100"><name pos:start="251:86" pos:end="251:90">image</name><operator pos:start="251:91" pos:end="251:92">-&gt;</operator><name pos:start="251:93" pos:end="251:100">red_mask</name></name></expr></argument>, <argument pos:start="251:103" pos:end="251:119"><expr pos:start="251:103" pos:end="251:119"><name pos:start="251:103" pos:end="251:119"><name pos:start="251:103" pos:end="251:107">image</name><operator pos:start="251:108" pos:end="251:109">-&gt;</operator><name pos:start="251:110" pos:end="251:119">green_mask</name></name></expr></argument>, <argument pos:start="251:122" pos:end="251:137"><expr pos:start="251:122" pos:end="251:137"><name pos:start="251:122" pos:end="251:137"><name pos:start="251:122" pos:end="251:126">image</name><operator pos:start="251:127" pos:end="251:128">-&gt;</operator><name pos:start="251:129" pos:end="251:137">blue_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:31"><expr pos:start="253:13" pos:end="253:30"><name pos:start="253:13" pos:end="253:15">ret</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <call pos:start="253:19" pos:end="253:30"><name pos:start="253:19" pos:end="253:25">AVERROR</name><argument_list pos:start="253:26" pos:end="253:30">(<argument pos:start="253:27" pos:end="253:29"><expr pos:start="253:27" pos:end="253:29"><name pos:start="253:27" pos:end="253:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="255:13" pos:end="255:21">goto <name pos:start="255:18" pos:end="255:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <case pos:start="261:5" pos:end="261:12">case <expr pos:start="261:10" pos:end="261:11"><literal type="number" pos:start="261:10" pos:end="261:11">32</literal></expr>:</case>

        <expr_stmt pos:start="263:9" pos:end="263:37"><expr pos:start="263:9" pos:end="263:36"><name pos:start="263:9" pos:end="263:20">input_pixfmt</name> <operator pos:start="263:22" pos:end="263:22">=</operator> <name pos:start="263:24" pos:end="263:36">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <default pos:start="267:5" pos:end="267:12">default:</default>

        <expr_stmt pos:start="269:9" pos:end="269:103"><expr pos:start="269:9" pos:end="269:102"><call pos:start="269:9" pos:end="269:102"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="269:102">(<argument pos:start="269:16" pos:end="269:17"><expr pos:start="269:16" pos:end="269:17"><name pos:start="269:16" pos:end="269:17">s1</name></expr></argument>, <argument pos:start="269:20" pos:end="269:31"><expr pos:start="269:20" pos:end="269:31"><name pos:start="269:20" pos:end="269:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:34" pos:end="269:78"><expr pos:start="269:34" pos:end="269:78"><literal type="string" pos:start="269:34" pos:end="269:78">"image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="269:81" pos:end="269:101"><expr pos:start="269:81" pos:end="269:101"><name pos:start="269:81" pos:end="269:101"><name pos:start="269:81" pos:end="269:85">image</name><operator pos:start="269:86" pos:end="269:87">-&gt;</operator><name pos:start="269:88" pos:end="269:101">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:30"><expr pos:start="271:9" pos:end="271:29"><name pos:start="271:9" pos:end="271:11">ret</name> <operator pos:start="271:13" pos:end="271:13">=</operator> <call pos:start="271:15" pos:end="271:29"><name pos:start="271:15" pos:end="271:21">AVERROR</name><argument_list pos:start="271:22" pos:end="271:29">(<argument pos:start="271:23" pos:end="271:28"><expr pos:start="271:23" pos:end="271:28"><name pos:start="271:23" pos:end="271:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="273:9" pos:end="273:17">goto <name pos:start="273:14" pos:end="273:16">out</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="279:5" pos:end="279:85"><expr pos:start="279:5" pos:end="279:84"><name pos:start="279:5" pos:end="279:23"><name pos:start="279:5" pos:end="279:11">x11grab</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:23">frame_size</name></name> <operator pos:start="279:25" pos:end="279:25">=</operator> <name pos:start="279:27" pos:end="279:40"><name pos:start="279:27" pos:end="279:33">x11grab</name><operator pos:start="279:34" pos:end="279:35">-&gt;</operator><name pos:start="279:36" pos:end="279:40">width</name></name> <operator pos:start="279:42" pos:end="279:42">*</operator> <name pos:start="279:44" pos:end="279:58"><name pos:start="279:44" pos:end="279:50">x11grab</name><operator pos:start="279:51" pos:end="279:52">-&gt;</operator><name pos:start="279:53" pos:end="279:58">height</name></name> <operator pos:start="279:60" pos:end="279:60">*</operator> <name pos:start="279:62" pos:end="279:82"><name pos:start="279:62" pos:end="279:66">image</name><operator pos:start="279:67" pos:end="279:68">-&gt;</operator><name pos:start="279:69" pos:end="279:82">bits_per_pixel</name></name><operator pos:start="279:83" pos:end="279:83">/</operator><literal type="number" pos:start="279:84" pos:end="279:84">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:23"><expr pos:start="281:5" pos:end="281:22"><name pos:start="281:5" pos:end="281:16"><name pos:start="281:5" pos:end="281:11">x11grab</name><operator pos:start="281:12" pos:end="281:13">-&gt;</operator><name pos:start="281:14" pos:end="281:16">dpy</name></name> <operator pos:start="281:18" pos:end="281:18">=</operator> <name pos:start="281:20" pos:end="281:22">dpy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:69"><expr pos:start="283:5" pos:end="283:68"><name pos:start="283:5" pos:end="283:22"><name pos:start="283:5" pos:end="283:11">x11grab</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:22">time_base</name></name>  <operator pos:start="283:25" pos:end="283:25">=</operator> <operator pos:start="283:27" pos:end="283:27">(</operator><name pos:start="283:28" pos:end="283:37">AVRational</name><operator pos:start="283:38" pos:end="283:38">)</operator><block pos:start="283:39" pos:end="283:68">{<expr pos:start="283:40" pos:end="283:52"><name pos:start="283:40" pos:end="283:52"><name pos:start="283:40" pos:end="283:48">framerate</name><operator pos:start="283:49" pos:end="283:49">.</operator><name pos:start="283:50" pos:end="283:52">den</name></name></expr>, <expr pos:start="283:55" pos:end="283:67"><name pos:start="283:55" pos:end="283:67"><name pos:start="283:55" pos:end="283:63">framerate</name><operator pos:start="283:64" pos:end="283:64">.</operator><name pos:start="283:65" pos:end="283:67">num</name></name></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:68"><expr pos:start="285:5" pos:end="285:67"><name pos:start="285:5" pos:end="285:23"><name pos:start="285:5" pos:end="285:11">x11grab</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:23">time_frame</name></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <call pos:start="285:27" pos:end="285:38"><name pos:start="285:27" pos:end="285:36">av_gettime</name><argument_list pos:start="285:37" pos:end="285:38">()</argument_list></call> <operator pos:start="285:40" pos:end="285:40">/</operator> <call pos:start="285:42" pos:end="285:67"><name pos:start="285:42" pos:end="285:47">av_q2d</name><argument_list pos:start="285:48" pos:end="285:67">(<argument pos:start="285:49" pos:end="285:66"><expr pos:start="285:49" pos:end="285:66"><name pos:start="285:49" pos:end="285:66"><name pos:start="285:49" pos:end="285:55">x11grab</name><operator pos:start="285:56" pos:end="285:57">-&gt;</operator><name pos:start="285:58" pos:end="285:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:27"><expr pos:start="287:5" pos:end="287:26"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:11">x11grab</name><operator pos:start="287:12" pos:end="287:13">-&gt;</operator><name pos:start="287:14" pos:end="287:18">x_off</name></name> <operator pos:start="287:20" pos:end="287:20">=</operator> <name pos:start="287:22" pos:end="287:26">x_off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:27"><expr pos:start="289:5" pos:end="289:26"><name pos:start="289:5" pos:end="289:18"><name pos:start="289:5" pos:end="289:11">x11grab</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:18">y_off</name></name> <operator pos:start="289:20" pos:end="289:20">=</operator> <name pos:start="289:22" pos:end="289:26">y_off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:27"><expr pos:start="291:5" pos:end="291:26"><name pos:start="291:5" pos:end="291:18"><name pos:start="291:5" pos:end="291:11">x11grab</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:18">image</name></name> <operator pos:start="291:20" pos:end="291:20">=</operator> <name pos:start="291:22" pos:end="291:26">image</name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:31"><expr pos:start="293:5" pos:end="293:30"><name pos:start="293:5" pos:end="293:20"><name pos:start="293:5" pos:end="293:11">x11grab</name><operator pos:start="293:12" pos:end="293:13">-&gt;</operator><name pos:start="293:14" pos:end="293:20">use_shm</name></name> <operator pos:start="293:22" pos:end="293:22">=</operator> <name pos:start="293:24" pos:end="293:30">use_shm</name></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:47"><expr pos:start="297:5" pos:end="297:46"><name pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:6">st</name><operator pos:start="297:7" pos:end="297:8">-&gt;</operator><name pos:start="297:9" pos:end="297:13">codec</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:25">codec_type</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <name pos:start="297:29" pos:end="297:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:44"><expr pos:start="299:5" pos:end="299:43"><name pos:start="299:5" pos:end="299:23"><name pos:start="299:5" pos:end="299:6">st</name><operator pos:start="299:7" pos:end="299:8">-&gt;</operator><name pos:start="299:9" pos:end="299:13">codec</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:23">codec_id</name></name> <operator pos:start="299:25" pos:end="299:25">=</operator> <name pos:start="299:27" pos:end="299:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:39"><expr pos:start="301:5" pos:end="301:38"><name pos:start="301:5" pos:end="301:20"><name pos:start="301:5" pos:end="301:6">st</name><operator pos:start="301:7" pos:end="301:8">-&gt;</operator><name pos:start="301:9" pos:end="301:13">codec</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:20">width</name></name>  <operator pos:start="301:23" pos:end="301:23">=</operator> <name pos:start="301:25" pos:end="301:38"><name pos:start="301:25" pos:end="301:31">x11grab</name><operator pos:start="301:32" pos:end="301:33">-&gt;</operator><name pos:start="301:34" pos:end="301:38">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:40"><expr pos:start="303:5" pos:end="303:39"><name pos:start="303:5" pos:end="303:21"><name pos:start="303:5" pos:end="303:6">st</name><operator pos:start="303:7" pos:end="303:8">-&gt;</operator><name pos:start="303:9" pos:end="303:13">codec</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:21">height</name></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <name pos:start="303:25" pos:end="303:39"><name pos:start="303:25" pos:end="303:31">x11grab</name><operator pos:start="303:32" pos:end="303:33">-&gt;</operator><name pos:start="303:34" pos:end="303:39">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:38"><expr pos:start="305:5" pos:end="305:37"><name pos:start="305:5" pos:end="305:22"><name pos:start="305:5" pos:end="305:6">st</name><operator pos:start="305:7" pos:end="305:8">-&gt;</operator><name pos:start="305:9" pos:end="305:13">codec</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:22">pix_fmt</name></name> <operator pos:start="305:24" pos:end="305:24">=</operator> <name pos:start="305:26" pos:end="305:37">input_pixfmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:46"><expr pos:start="307:5" pos:end="307:45"><name pos:start="307:5" pos:end="307:24"><name pos:start="307:5" pos:end="307:6">st</name><operator pos:start="307:7" pos:end="307:8">-&gt;</operator><name pos:start="307:9" pos:end="307:13">codec</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:24">time_base</name></name> <operator pos:start="307:26" pos:end="307:26">=</operator> <name pos:start="307:28" pos:end="307:45"><name pos:start="307:28" pos:end="307:34">x11grab</name><operator pos:start="307:35" pos:end="307:36">-&gt;</operator><name pos:start="307:37" pos:end="307:45">time_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:81"><expr pos:start="309:5" pos:end="309:80"><name pos:start="309:5" pos:end="309:23"><name pos:start="309:5" pos:end="309:6">st</name><operator pos:start="309:7" pos:end="309:8">-&gt;</operator><name pos:start="309:9" pos:end="309:13">codec</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:23">bit_rate</name></name> <operator pos:start="309:25" pos:end="309:25">=</operator> <name pos:start="309:27" pos:end="309:45"><name pos:start="309:27" pos:end="309:33">x11grab</name><operator pos:start="309:34" pos:end="309:35">-&gt;</operator><name pos:start="309:36" pos:end="309:45">frame_size</name></name> <operator pos:start="309:47" pos:end="309:47">*</operator> <literal type="number" pos:start="309:49" pos:end="309:49">1</literal><operator pos:start="309:50" pos:end="309:50">/</operator><call pos:start="309:51" pos:end="309:76"><name pos:start="309:51" pos:end="309:56">av_q2d</name><argument_list pos:start="309:57" pos:end="309:76">(<argument pos:start="309:58" pos:end="309:75"><expr pos:start="309:58" pos:end="309:75"><name pos:start="309:58" pos:end="309:75"><name pos:start="309:58" pos:end="309:64">x11grab</name><operator pos:start="309:65" pos:end="309:66">-&gt;</operator><name pos:start="309:67" pos:end="309:75">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="309:78" pos:end="309:78">*</operator> <literal type="number" pos:start="309:80" pos:end="309:80">8</literal></expr>;</expr_stmt>



<label pos:start="313:1" pos:end="313:4"><name pos:start="313:1" pos:end="313:3">out</name>:</label>

    <return pos:start="315:5" pos:end="315:15">return <expr pos:start="315:12" pos:end="315:14"><name pos:start="315:12" pos:end="315:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
