<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24023.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:17">AVFilterBufferRef</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:52">avfilter_default_get_audio_buffer</name><parameter_list pos:start="1:53" pos:end="5:88">(<parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:65">AVFilterLink</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">link</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:82"><decl pos:start="1:74" pos:end="1:82"><type pos:start="1:74" pos:end="1:82"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:82">perms</name></decl></parameter>,

                                                     <parameter pos:start="3:54" pos:end="3:83"><decl pos:start="3:54" pos:end="3:83"><type pos:start="3:54" pos:end="3:83"><name pos:start="3:54" pos:end="3:72"><name pos:start="3:54" pos:end="3:57">enum</name> <name pos:start="3:59" pos:end="3:72">AVSampleFormat</name></name></type> <name pos:start="3:74" pos:end="3:83">sample_fmt</name></decl></parameter>, <parameter pos:start="3:86" pos:end="3:93"><decl pos:start="3:86" pos:end="3:93"><type pos:start="3:86" pos:end="3:93"><name pos:start="3:86" pos:end="3:88">int</name></type> <name pos:start="3:90" pos:end="3:93">size</name></decl></parameter>,

                                                     <parameter pos:start="5:54" pos:end="5:75"><decl pos:start="5:54" pos:end="5:75"><type pos:start="5:54" pos:end="5:75"><name pos:start="5:54" pos:end="5:60">int64_t</name></type> <name pos:start="5:62" pos:end="5:75">channel_layout</name></decl></parameter>, <parameter pos:start="5:78" pos:end="5:87"><decl pos:start="5:78" pos:end="5:87"><type pos:start="5:78" pos:end="5:87"><name pos:start="5:78" pos:end="5:80">int</name></type> <name pos:start="5:82" pos:end="5:87">planar</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="153:1">{<block_content pos:start="9:5" pos:end="151:16">

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVFilterBuffer</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">samples</name> <init pos:start="9:29" pos:end="9:64">= <expr pos:start="9:31" pos:end="9:64"><call pos:start="9:31" pos:end="9:64"><name pos:start="9:31" pos:end="9:40">av_mallocz</name><argument_list pos:start="9:41" pos:end="9:64">(<argument pos:start="9:42" pos:end="9:63"><expr pos:start="9:42" pos:end="9:63"><sizeof pos:start="9:42" pos:end="9:63">sizeof<argument_list pos:start="9:48" pos:end="9:63">(<argument pos:start="9:49" pos:end="9:62"><expr pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:62">AVFilterBuffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVFilterBufferRef</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">ref</name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:22">sample_size</name></decl>, <decl pos:start="13:25" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:32">chans_nb</name></decl>, <decl pos:start="13:35" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:35" pos:end="13:41">bufsize</name></decl>, <decl pos:start="13:44" pos:end="13:59"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:59">per_channel_size</name></decl>, <decl pos:start="13:62" pos:end="13:74"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:62" pos:end="13:70">step_size</name> <init pos:start="13:72" pos:end="13:74">= <expr pos:start="13:74" pos:end="13:74"><literal type="number" pos:start="13:74" pos:end="13:74">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">buf</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:67">(<expr pos:start="19:9" pos:end="19:66"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">samples</name> <operator pos:start="19:18" pos:end="19:19">||</operator> <operator pos:start="19:21" pos:end="19:21">!</operator><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:25">ref</name> <operator pos:start="19:27" pos:end="19:27">=</operator> <call pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:38">av_mallocz</name><argument_list pos:start="19:39" pos:end="19:65">(<argument pos:start="19:40" pos:end="19:64"><expr pos:start="19:40" pos:end="19:64"><sizeof pos:start="19:40" pos:end="19:64">sizeof<argument_list pos:start="19:46" pos:end="19:64">(<argument pos:start="19:47" pos:end="19:63"><expr pos:start="19:47" pos:end="19:63"><name pos:start="19:47" pos:end="19:63">AVFilterBufferRef</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="19:66" pos:end="19:66">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <goto pos:start="21:9" pos:end="21:18">goto <name pos:start="21:14" pos:end="21:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">ref</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">buf</name></name>                   <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:40">samples</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:7">ref</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:15">format</name></name>                <operator pos:start="27:32" pos:end="27:32">=</operator> <name pos:start="27:34" pos:end="27:43">sample_fmt</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">ref</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">audio</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:64"><name pos:start="31:18" pos:end="31:27">av_mallocz</name><argument_list pos:start="31:28" pos:end="31:64">(<argument pos:start="31:29" pos:end="31:63"><expr pos:start="31:29" pos:end="31:63"><sizeof pos:start="31:29" pos:end="31:63">sizeof<argument_list pos:start="31:35" pos:end="31:63">(<argument pos:start="31:36" pos:end="31:62"><expr pos:start="31:36" pos:end="31:62"><name pos:start="31:36" pos:end="31:62">AVFilterBufferRefAudioProps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:19"><name pos:start="33:10" pos:end="33:12">ref</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:19">audio</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:7">ref</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:14">audio</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:30">channel_layout</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:47">channel_layout</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:7">ref</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:14">audio</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">size</name></name>           <operator pos:start="41:32" pos:end="41:32">=</operator> <name pos:start="41:34" pos:end="41:37">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:7">ref</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:14">audio</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">planar</name></name>         <operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:39">planar</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:78">/* make sure the buffer gets read permission or it's useless for output */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:7">ref</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:14">perms</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:22">perms</name> <operator pos:start="49:24" pos:end="49:24">|</operator> <name pos:start="49:26" pos:end="49:37">AV_PERM_READ</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:11">samples</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:21">refcount</name></name>   <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:58"><expr pos:start="55:5" pos:end="55:57"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:11">samples</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">free</name></name>       <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:57">ff_avfilter_default_free_buffer</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:15">sample_size</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:53"><name pos:start="59:19" pos:end="59:41">av_get_bytes_per_sample</name><argument_list pos:start="59:42" pos:end="59:53">(<argument pos:start="59:43" pos:end="59:52"><expr pos:start="59:43" pos:end="59:52"><name pos:start="59:43" pos:end="59:52">sample_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:65"><expr pos:start="61:5" pos:end="61:64"><name pos:start="61:5" pos:end="61:12">chans_nb</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:64"><name pos:start="61:16" pos:end="61:48">av_get_channel_layout_nb_channels</name><argument_list pos:start="61:49" pos:end="61:64">(<argument pos:start="61:50" pos:end="61:63"><expr pos:start="61:50" pos:end="61:63"><name pos:start="61:50" pos:end="61:63">channel_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:20">per_channel_size</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:27">size</name><operator pos:start="65:28" pos:end="65:28">/</operator><name pos:start="65:29" pos:end="65:36">chans_nb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:58"><expr pos:start="67:5" pos:end="67:57"><name pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:7">ref</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">audio</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:26">nb_samples</name></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:45">per_channel_size</name><operator pos:start="67:46" pos:end="67:46">/</operator><name pos:start="67:47" pos:end="67:57">sample_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="77:7">/* Set the number of bytes to traverse to reach next sample of a particular channel:

     * For planar, this is simply the sample size.

     * For packed, this is the number of samples * sample_size.

     */</comment>

    <for pos:start="79:5" pos:end="81:75">for <control pos:start="79:9" pos:end="79:34">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:28">chans_nb</name></expr>;</condition> <incr pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:31">i</name><operator pos:start="79:32" pos:end="79:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:9" pos:end="81:75"><block_content pos:start="81:9" pos:end="81:75">

        <expr_stmt pos:start="81:9" pos:end="81:75"><expr pos:start="81:9" pos:end="81:74"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:15">samples</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:25">linesize</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">i</name></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <ternary pos:start="81:32" pos:end="81:74"><condition pos:start="81:32" pos:end="81:43"><expr pos:start="81:32" pos:end="81:41"><name pos:start="81:32" pos:end="81:37">planar</name> <operator pos:start="81:39" pos:end="81:39">&gt;</operator> <literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr> ?</condition><then pos:start="81:45" pos:end="81:60"> <expr pos:start="81:45" pos:end="81:60"><name pos:start="81:45" pos:end="81:60">per_channel_size</name></expr> </then><else pos:start="81:62" pos:end="81:74">: <expr pos:start="81:64" pos:end="81:74"><name pos:start="81:64" pos:end="81:74">sample_size</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="83:5" pos:end="83:89"><expr pos:start="83:5" pos:end="83:88"><call pos:start="83:5" pos:end="83:88"><name pos:start="83:5" pos:end="83:10">memset</name><argument_list pos:start="83:11" pos:end="83:88">(<argument pos:start="83:12" pos:end="83:39"><expr pos:start="83:12" pos:end="83:39"><operator pos:start="83:12" pos:end="83:12">&amp;</operator><name pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:19">samples</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:29">linesize</name><index pos:start="83:30" pos:end="83:39">[<expr pos:start="83:31" pos:end="83:38"><name pos:start="83:31" pos:end="83:38">chans_nb</name></expr>]</index></name></expr></argument>, <argument pos:start="83:42" pos:end="83:42"><expr pos:start="83:42" pos:end="83:42"><literal type="number" pos:start="83:42" pos:end="83:42">0</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:87"><expr pos:start="83:45" pos:end="83:87"><operator pos:start="83:45" pos:end="83:45">(</operator><literal type="number" pos:start="83:46" pos:end="83:47">8</literal><operator pos:start="83:47" pos:end="83:47">-</operator><name pos:start="83:48" pos:end="83:55">chans_nb</name><operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:58">*</operator> <sizeof pos:start="83:60" pos:end="83:87">sizeof<argument_list pos:start="83:66" pos:end="83:87">(<argument pos:start="83:67" pos:end="83:86"><expr pos:start="83:67" pos:end="83:86"><name pos:start="83:67" pos:end="83:86"><name pos:start="83:67" pos:end="83:73">samples</name><operator pos:start="83:74" pos:end="83:75">-&gt;</operator><name pos:start="83:76" pos:end="83:83">linesize</name><index pos:start="83:84" pos:end="83:86">[<expr pos:start="83:85" pos:end="83:85"><literal type="number" pos:start="83:85" pos:end="83:85">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:82">/* Calculate total buffer size, round to multiple of 16 to be SIMD friendly */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:11">bufsize</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <operator pos:start="89:15" pos:end="89:15">(</operator><name pos:start="89:16" pos:end="89:19">size</name> <operator pos:start="89:21" pos:end="89:21">+</operator> <literal type="number" pos:start="89:23" pos:end="89:24">15</literal><operator pos:start="89:25" pos:end="89:25">)</operator><operator pos:start="89:26" pos:end="89:26">&amp;</operator><operator pos:start="89:27" pos:end="89:27">~</operator><literal type="number" pos:start="89:28" pos:end="89:29">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:7">buf</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:28"><name pos:start="91:11" pos:end="91:19">av_malloc</name><argument_list pos:start="91:20" pos:end="91:28">(<argument pos:start="91:21" pos:end="91:27"><expr pos:start="91:21" pos:end="91:27"><name pos:start="91:21" pos:end="91:27">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:18"><if pos:start="93:5" pos:end="95:18">if <condition pos:start="93:8" pos:end="93:13">(<expr pos:start="93:9" pos:end="93:12"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:12">buf</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:18"><block_content pos:start="95:9" pos:end="95:18">

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="103:7">/* For planar, set the start point of each channel's data within the buffer

     * For packed, set the start point of the entire buffer only

     */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:11">samples</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">data</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:26">buf</name></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="123:5"><if pos:start="107:5" pos:end="117:5">if <condition pos:start="107:8" pos:end="107:22">(<expr pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:11">buf</name> <operator pos:start="107:13" pos:end="107:14">&amp;&amp;</operator> <name pos:start="107:16" pos:end="107:21">planar</name></expr>)</condition> <block pos:start="107:24" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:9">

        <for pos:start="109:9" pos:end="115:9">for <control pos:start="109:13" pos:end="109:38">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:33"><expr pos:start="109:21" pos:end="109:32"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:32">chans_nb</name></expr>;</condition> <incr pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><name pos:start="109:35" pos:end="109:35">i</name><operator pos:start="109:36" pos:end="109:37">++</operator></expr></incr>)</control> <block pos:start="109:40" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:47">

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:21">step_size</name> <operator pos:start="111:23" pos:end="111:24">+=</operator> <name pos:start="111:26" pos:end="111:41">per_channel_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:47"><expr pos:start="113:13" pos:end="113:46"><name pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:19">samples</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:25">data</name><index pos:start="113:26" pos:end="113:28">[<expr pos:start="113:27" pos:end="113:27"><name pos:start="113:27" pos:end="113:27">i</name></expr>]</index></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:34">buf</name> <operator pos:start="113:36" pos:end="113:36">+</operator> <name pos:start="113:38" pos:end="113:46">step_size</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="123:5">else <block pos:start="117:12" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:35">

        <for pos:start="119:9" pos:end="121:35">for <control pos:start="119:13" pos:end="119:38">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">i</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">1</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:33"><expr pos:start="119:21" pos:end="119:32"><name pos:start="119:21" pos:end="119:21">i</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <name pos:start="119:25" pos:end="119:32">chans_nb</name></expr>;</condition> <incr pos:start="119:35" pos:end="119:37"><expr pos:start="119:35" pos:end="119:37"><name pos:start="119:35" pos:end="119:35">i</name><operator pos:start="119:36" pos:end="119:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:13" pos:end="121:35"><block_content pos:start="121:13" pos:end="121:35">

            <expr_stmt pos:start="121:13" pos:end="121:35"><expr pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:19">samples</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">data</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><name pos:start="121:27" pos:end="121:27">i</name></expr>]</index></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:34">buf</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:81"><expr pos:start="127:5" pos:end="127:80"><call pos:start="127:5" pos:end="127:80"><name pos:start="127:5" pos:end="127:10">memset</name><argument_list pos:start="127:11" pos:end="127:80">(<argument pos:start="127:12" pos:end="127:35"><expr pos:start="127:12" pos:end="127:35"><operator pos:start="127:12" pos:end="127:12">&amp;</operator><name pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:19">samples</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:25">data</name><index pos:start="127:26" pos:end="127:35">[<expr pos:start="127:27" pos:end="127:34"><name pos:start="127:27" pos:end="127:34">chans_nb</name></expr>]</index></name></expr></argument>, <argument pos:start="127:38" pos:end="127:38"><expr pos:start="127:38" pos:end="127:38"><literal type="number" pos:start="127:38" pos:end="127:38">0</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:79"><expr pos:start="127:41" pos:end="127:79"><operator pos:start="127:41" pos:end="127:41">(</operator><literal type="number" pos:start="127:42" pos:end="127:43">8</literal><operator pos:start="127:43" pos:end="127:43">-</operator><name pos:start="127:44" pos:end="127:51">chans_nb</name><operator pos:start="127:52" pos:end="127:52">)</operator> <operator pos:start="127:54" pos:end="127:54">*</operator> <sizeof pos:start="127:56" pos:end="127:79">sizeof<argument_list pos:start="127:62" pos:end="127:79">(<argument pos:start="127:63" pos:end="127:78"><expr pos:start="127:63" pos:end="127:78"><name pos:start="127:63" pos:end="127:78"><name pos:start="127:63" pos:end="127:69">samples</name><operator pos:start="127:70" pos:end="127:71">-&gt;</operator><name pos:start="127:72" pos:end="127:75">data</name><index pos:start="127:76" pos:end="127:78">[<expr pos:start="127:77" pos:end="127:77"><literal type="number" pos:start="127:77" pos:end="127:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:64"><expr pos:start="131:5" pos:end="131:63"><call pos:start="131:5" pos:end="131:63"><name pos:start="131:5" pos:end="131:10">memcpy</name><argument_list pos:start="131:11" pos:end="131:63">(<argument pos:start="131:12" pos:end="131:20"><expr pos:start="131:12" pos:end="131:20"><name pos:start="131:12" pos:end="131:20"><name pos:start="131:12" pos:end="131:14">ref</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:20">data</name></name></expr></argument>,     <argument pos:start="131:27" pos:end="131:39"><expr pos:start="131:27" pos:end="131:39"><name pos:start="131:27" pos:end="131:39"><name pos:start="131:27" pos:end="131:33">samples</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:39">data</name></name></expr></argument>,     <argument pos:start="131:46" pos:end="131:62"><expr pos:start="131:46" pos:end="131:62"><sizeof pos:start="131:46" pos:end="131:62">sizeof<argument_list pos:start="131:52" pos:end="131:62">(<argument pos:start="131:53" pos:end="131:61"><expr pos:start="131:53" pos:end="131:61"><name pos:start="131:53" pos:end="131:61"><name pos:start="131:53" pos:end="131:55">ref</name><operator pos:start="131:56" pos:end="131:57">-&gt;</operator><name pos:start="131:58" pos:end="131:61">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:68"><expr pos:start="133:5" pos:end="133:67"><call pos:start="133:5" pos:end="133:67"><name pos:start="133:5" pos:end="133:10">memcpy</name><argument_list pos:start="133:11" pos:end="133:67">(<argument pos:start="133:12" pos:end="133:24"><expr pos:start="133:12" pos:end="133:24"><name pos:start="133:12" pos:end="133:24"><name pos:start="133:12" pos:end="133:14">ref</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:24">linesize</name></name></expr></argument>, <argument pos:start="133:27" pos:end="133:43"><expr pos:start="133:27" pos:end="133:43"><name pos:start="133:27" pos:end="133:43"><name pos:start="133:27" pos:end="133:33">samples</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:43">linesize</name></name></expr></argument>, <argument pos:start="133:46" pos:end="133:66"><expr pos:start="133:46" pos:end="133:66"><sizeof pos:start="133:46" pos:end="133:66">sizeof<argument_list pos:start="133:52" pos:end="133:66">(<argument pos:start="133:53" pos:end="133:65"><expr pos:start="133:53" pos:end="133:65"><name pos:start="133:53" pos:end="133:65"><name pos:start="133:53" pos:end="133:55">ref</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:65">linesize</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:15">return <expr pos:start="137:12" pos:end="137:14"><name pos:start="137:12" pos:end="137:14">ref</name></expr>;</return>



<label pos:start="141:1" pos:end="141:5"><name pos:start="141:1" pos:end="141:4">fail</name>:</label>

    <if_stmt pos:start="143:5" pos:end="145:28"><if pos:start="143:5" pos:end="145:28">if <condition pos:start="143:8" pos:end="143:12">(<expr pos:start="143:9" pos:end="143:11"><name pos:start="143:9" pos:end="143:11">ref</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:28"><block_content pos:start="145:9" pos:end="145:28">

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><call pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:15">av_free</name><argument_list pos:start="145:16" pos:end="145:27">(<argument pos:start="145:17" pos:end="145:26"><expr pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:19">ref</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:26">audio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:17"><expr pos:start="147:5" pos:end="147:16"><call pos:start="147:5" pos:end="147:16"><name pos:start="147:5" pos:end="147:11">av_free</name><argument_list pos:start="147:12" pos:end="147:16">(<argument pos:start="147:13" pos:end="147:15"><expr pos:start="147:13" pos:end="147:15"><name pos:start="147:13" pos:end="147:15">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:21"><expr pos:start="149:5" pos:end="149:20"><call pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:11">av_free</name><argument_list pos:start="149:12" pos:end="149:20">(<argument pos:start="149:13" pos:end="149:19"><expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:19">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="151:5" pos:end="151:16">return <expr pos:start="151:12" pos:end="151:15"><name pos:start="151:12" pos:end="151:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
