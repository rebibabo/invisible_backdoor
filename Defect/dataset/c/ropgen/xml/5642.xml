<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5642.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:26">cuda_readb</name><parameter_list pos:start="1:27" pos:end="1:65">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CUDAState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:16">addr</name> <operator pos:start="11:18" pos:end="11:19">&gt;&gt;</operator> <literal type="number" pos:start="11:21" pos:end="11:21">9</literal><operator pos:start="11:22" pos:end="11:22">)</operator> <operator pos:start="11:24" pos:end="11:24">&amp;</operator> <literal type="number" pos:start="11:26" pos:end="11:28">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="131:5">switch<condition pos:start="13:11" pos:end="13:16">(<expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">addr</name></expr>)</condition> <block pos:start="13:18" pos:end="131:5">{<block_content pos:start="15:5" pos:end="129:14">

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">0</literal></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">val</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:18">b</name></name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">1</literal></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:18"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:18">a</name></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">val</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:21"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">dirb</name></name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">3</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">val</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:21">dira</name></name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">4</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:48"><expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:11">val</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:40"><name pos:start="41:15" pos:end="41:25">get_counter</name><argument_list pos:start="41:26" pos:end="41:40">(<argument pos:start="41:27" pos:end="41:39"><expr pos:start="41:27" pos:end="41:39"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:36">timers</name><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="41:42" pos:end="41:42">&amp;</operator> <literal type="number" pos:start="41:44" pos:end="41:47">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">ifr</name></name> <operator pos:start="43:16" pos:end="43:17">&amp;=</operator> <operator pos:start="43:19" pos:end="43:19">~</operator><name pos:start="43:20" pos:end="43:25">T1_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><call pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:23">cuda_update_irq</name><argument_list pos:start="45:24" pos:end="45:26">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">5</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:11">val</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:40"><name pos:start="51:15" pos:end="51:25">get_counter</name><argument_list pos:start="51:26" pos:end="51:40">(<argument pos:start="51:27" pos:end="51:39"><expr pos:start="51:27" pos:end="51:39"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:39"><name pos:start="51:28" pos:end="51:28">s</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:36">timers</name><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="51:42" pos:end="51:43">&gt;&gt;</operator> <literal type="number" pos:start="51:45" pos:end="51:45">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:23">cuda_update_irq</name><argument_list pos:start="53:24" pos:end="53:26">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">6</literal></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:11">val</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:26"><name pos:start="59:15" pos:end="59:15">s</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">timers</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>]</index></name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:32">latch</name> <operator pos:start="59:34" pos:end="59:34">&amp;</operator> <literal type="number" pos:start="59:36" pos:end="59:39">0xff</literal></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">7</literal></expr>:</case>

        <comment type="block" pos:start="65:9" pos:end="65:29">/* XXX: check this */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:11">val</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <operator pos:start="67:15" pos:end="67:15">(</operator><name pos:start="67:16" pos:end="67:27"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:24">timers</name><index pos:start="67:25" pos:end="67:27">[<expr pos:start="67:26" pos:end="67:26"><literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>]</index></name><operator pos:start="67:28" pos:end="67:28">.</operator><name pos:start="67:29" pos:end="67:33">latch</name> <operator pos:start="67:35" pos:end="67:36">&gt;&gt;</operator> <literal type="number" pos:start="67:38" pos:end="67:38">8</literal><operator pos:start="67:39" pos:end="67:39">)</operator> <operator pos:start="67:41" pos:end="67:41">&amp;</operator> <literal type="number" pos:start="67:43" pos:end="67:46">0xff</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">8</literal></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:11">val</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:40"><name pos:start="73:15" pos:end="73:25">get_counter</name><argument_list pos:start="73:26" pos:end="73:40">(<argument pos:start="73:27" pos:end="73:39"><expr pos:start="73:27" pos:end="73:39"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:39"><name pos:start="73:28" pos:end="73:28">s</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:36">timers</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="73:42" pos:end="73:42">&amp;</operator> <literal type="number" pos:start="73:44" pos:end="73:47">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">ifr</name></name> <operator pos:start="75:16" pos:end="75:17">&amp;=</operator> <operator pos:start="75:19" pos:end="75:19">~</operator><name pos:start="75:20" pos:end="75:25">T2_INT</name></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">9</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:11">val</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:40"><name pos:start="81:15" pos:end="81:25">get_counter</name><argument_list pos:start="81:26" pos:end="81:40">(<argument pos:start="81:27" pos:end="81:39"><expr pos:start="81:27" pos:end="81:39"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:36">timers</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="81:42" pos:end="81:43">&gt;&gt;</operator> <literal type="number" pos:start="81:45" pos:end="81:45">8</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:12">case <expr pos:start="85:10" pos:end="85:11"><literal type="number" pos:start="85:10" pos:end="85:11">10</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:11">val</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <name pos:start="87:15" pos:end="87:19"><name pos:start="87:15" pos:end="87:15">s</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:19">sr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:14">ifr</name></name> <operator pos:start="89:16" pos:end="89:17">&amp;=</operator> <operator pos:start="89:19" pos:end="89:19">~</operator><name pos:start="89:20" pos:end="89:25">SR_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><call pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:23">cuda_update_irq</name><argument_list pos:start="91:24" pos:end="91:26">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:12">case <expr pos:start="95:10" pos:end="95:11"><literal type="number" pos:start="95:10" pos:end="95:11">11</literal></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:11">val</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <name pos:start="97:15" pos:end="97:20"><name pos:start="97:15" pos:end="97:15">s</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:20">acr</name></name></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:12">case <expr pos:start="101:10" pos:end="101:11"><literal type="number" pos:start="101:10" pos:end="101:11">12</literal></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:21"><expr pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:11">val</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:20"><name pos:start="103:15" pos:end="103:15">s</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:20">pcr</name></name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:12">case <expr pos:start="107:10" pos:end="107:11"><literal type="number" pos:start="107:10" pos:end="107:11">13</literal></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="109:21"><expr pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:11">val</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:20"><name pos:start="109:15" pos:end="109:15">s</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:20">ifr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:24"><if pos:start="111:9" pos:end="113:24">if <condition pos:start="111:12" pos:end="111:28">(<expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:18">ifr</name></name> <operator pos:start="111:20" pos:end="111:20">&amp;</operator> <name pos:start="111:22" pos:end="111:27"><name pos:start="111:22" pos:end="111:22">s</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:27">ier</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:24"><block_content pos:start="113:13" pos:end="113:24">

            <expr_stmt pos:start="113:13" pos:end="113:24"><expr pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:15">val</name> <operator pos:start="113:17" pos:end="113:18">|=</operator> <literal type="number" pos:start="113:20" pos:end="113:23">0x80</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:12">case <expr pos:start="117:10" pos:end="117:11"><literal type="number" pos:start="117:10" pos:end="117:11">14</literal></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:28"><expr pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:11">val</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <name pos:start="119:15" pos:end="119:20"><name pos:start="119:15" pos:end="119:15">s</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:20">ier</name></name> <operator pos:start="119:22" pos:end="119:22">|</operator> <literal type="number" pos:start="119:24" pos:end="119:27">0x80</literal></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <default pos:start="123:5" pos:end="123:12">default:</default>

    <case pos:start="125:5" pos:end="125:12">case <expr pos:start="125:10" pos:end="125:11"><literal type="number" pos:start="125:10" pos:end="125:11">15</literal></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:21"><expr pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:11">val</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <name pos:start="127:15" pos:end="127:20"><name pos:start="127:15" pos:end="127:15">s</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:20">anh</name></name></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:31">(<expr pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:12">addr</name> <operator pos:start="133:14" pos:end="133:15">!=</operator> <literal type="number" pos:start="133:17" pos:end="133:18">13</literal> <operator pos:start="133:20" pos:end="133:21">||</operator> <name pos:start="133:23" pos:end="133:25">val</name> <operator pos:start="133:27" pos:end="133:28">!=</operator> <literal type="number" pos:start="133:30" pos:end="133:30">0</literal></expr>)</condition> <block pos:start="133:33" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:66">

        <expr_stmt pos:start="135:9" pos:end="135:66"><expr pos:start="135:9" pos:end="135:65"><call pos:start="135:9" pos:end="135:65"><name pos:start="135:9" pos:end="135:20">CUDA_DPRINTF</name><argument_list pos:start="135:21" pos:end="135:65">(<argument pos:start="135:22" pos:end="135:48"><expr pos:start="135:22" pos:end="135:48"><literal type="string" pos:start="135:22" pos:end="135:48">"read: reg=0x%x val=%02x\n"</literal></expr></argument>, <argument pos:start="135:51" pos:end="135:59"><expr pos:start="135:51" pos:end="135:59"><operator pos:start="135:51" pos:end="135:51">(</operator><name pos:start="135:52" pos:end="135:54">int</name><operator pos:start="135:55" pos:end="135:55">)</operator><name pos:start="135:56" pos:end="135:59">addr</name></expr></argument>, <argument pos:start="135:62" pos:end="135:64"><expr pos:start="135:62" pos:end="135:64"><name pos:start="135:62" pos:end="135:64">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
