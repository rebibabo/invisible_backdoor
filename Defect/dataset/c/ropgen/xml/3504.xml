<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3504.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:32">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:70">filename</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">flags</name></decl></parameter>, <parameter pos:start="3:16" pos:end="3:31"><decl pos:start="3:16" pos:end="3:31"><type pos:start="3:16" pos:end="3:31"><name pos:start="3:16" pos:end="3:26">BlockDriver</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="169:1">{<block_content pos:start="7:5" pos:end="167:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:23">(<argument pos:start="11:12" pos:end="11:22"><expr pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:14">drv</name> <operator pos:start="11:16" pos:end="11:17">!=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:6">bs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:12">file</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:21">total_sectors</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:6">bs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:20">is_temporary</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:6">bs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:17">encrypted</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:6">bs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:17">valid_key</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">bs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">open_flags</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:26">flags</name></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:74">/* buffer_alignment defaulted to 512, drivers can change this value */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:6">bs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:24">buffer_alignment</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:30">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:11">pstrcpy</name><argument_list pos:start="33:12" pos:end="33:57">(<argument pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:14">bs</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">filename</name></name></expr></argument>, <argument pos:start="33:27" pos:end="33:46"><expr pos:start="33:27" pos:end="33:46"><sizeof pos:start="33:27" pos:end="33:46">sizeof<argument_list pos:start="33:33" pos:end="33:46">(<argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:35">bs</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:49" pos:end="33:56"><expr pos:start="33:49" pos:end="33:56"><name pos:start="33:49" pos:end="33:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:56">(<expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:26">use_bdrv_whitelist</name> <operator pos:start="37:28" pos:end="37:29">&amp;&amp;</operator> <operator pos:start="37:31" pos:end="37:31">!</operator><call pos:start="37:32" pos:end="37:55"><name pos:start="37:32" pos:end="37:50">bdrv_is_whitelisted</name><argument_list pos:start="37:51" pos:end="37:55">(<argument pos:start="37:52" pos:end="37:54"><expr pos:start="37:52" pos:end="37:54"><name pos:start="37:52" pos:end="37:54">drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:58" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:24">

        <return pos:start="39:9" pos:end="39:24">return <expr pos:start="39:16" pos:end="39:23"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:6">bs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:11">drv</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:6">bs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:14">opaque</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:49"><name pos:start="47:18" pos:end="47:29">qemu_mallocz</name><argument_list pos:start="47:30" pos:end="47:49">(<argument pos:start="47:31" pos:end="47:48"><expr pos:start="47:31" pos:end="47:48"><name pos:start="47:31" pos:end="47:48"><name pos:start="47:31" pos:end="47:33">drv</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:48">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="61:7">/*

     * Yes, BDRV_O_NOCACHE aka O_DIRECT means we have to present a

     * write cache to the guest.  We do need the fdatasync to flush

     * out transactions for block allocations, and we maybe have a

     * volatile write cache in our backing device to deal with.

     */</comment>

    <if_stmt pos:start="63:5" pos:end="65:35"><if pos:start="63:5" pos:end="65:35">if <condition pos:start="63:8" pos:end="63:49">(<expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:13">flags</name> <operator pos:start="63:15" pos:end="63:15">&amp;</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:32">BDRV_O_CACHE_WB</name><operator pos:start="63:33" pos:end="63:33">|</operator><name pos:start="63:34" pos:end="63:47">BDRV_O_NOCACHE</name><operator pos:start="63:48" pos:end="63:48">)</operator></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:35"><block_content pos:start="65:9" pos:end="65:35">

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:10">bs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:30">enable_write_cache</name></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <literal type="number" pos:start="65:34" pos:end="65:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="75:7">/*

     * Clear flags that are internal to the block layer before opening the

     * image.

     */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:14">open_flags</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:22">flags</name> <operator pos:start="77:24" pos:end="77:24">&amp;</operator> <operator pos:start="77:26" pos:end="77:26">~</operator><operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:42">BDRV_O_SNAPSHOT</name> <operator pos:start="77:44" pos:end="77:44">|</operator> <name pos:start="77:46" pos:end="77:62">BDRV_O_NO_BACKING</name><operator pos:start="77:63" pos:end="77:63">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="85:7">/*

     * Snapshots should be writeable.

     */</comment>

    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:25">(<expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:10">bs</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:24">is_temporary</name></name></expr>)</condition> <block pos:start="87:27" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:34">

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:18">open_flags</name> <operator pos:start="89:20" pos:end="89:21">|=</operator> <name pos:start="89:23" pos:end="89:33">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:61">/* Open the image, either directly or using a protocol */</comment>

    <if_stmt pos:start="97:5" pos:end="111:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:28">(<expr pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:11">drv</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="97:30" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:60">

        <expr_stmt pos:start="99:9" pos:end="99:60"><expr pos:start="99:9" pos:end="99:59"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:59"><name pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:17">drv</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:33">bdrv_file_open</name></name><argument_list pos:start="99:34" pos:end="99:59">(<argument pos:start="99:35" pos:end="99:36"><expr pos:start="99:35" pos:end="99:36"><name pos:start="99:35" pos:end="99:36">bs</name></expr></argument>, <argument pos:start="99:39" pos:end="99:46"><expr pos:start="99:39" pos:end="99:46"><name pos:start="99:39" pos:end="99:46">filename</name></expr></argument>, <argument pos:start="99:49" pos:end="99:58"><expr pos:start="99:49" pos:end="99:58"><name pos:start="99:49" pos:end="99:58">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="111:5">else <block pos:start="101:12" pos:end="111:5">{<block_content pos:start="103:9" pos:end="109:9">

        <expr_stmt pos:start="103:9" pos:end="103:62"><expr pos:start="103:9" pos:end="103:61"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:61"><name pos:start="103:15" pos:end="103:28">bdrv_file_open</name><argument_list pos:start="103:29" pos:end="103:61">(<argument pos:start="103:30" pos:end="103:38"><expr pos:start="103:30" pos:end="103:38"><operator pos:start="103:30" pos:end="103:30">&amp;</operator><name pos:start="103:31" pos:end="103:38"><name pos:start="103:31" pos:end="103:32">bs</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:38">file</name></name></expr></argument>, <argument pos:start="103:41" pos:end="103:48"><expr pos:start="103:41" pos:end="103:48"><name pos:start="103:41" pos:end="103:48">filename</name></expr></argument>, <argument pos:start="103:51" pos:end="103:60"><expr pos:start="103:51" pos:end="103:60"><name pos:start="103:51" pos:end="103:60">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:21">(<expr pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:18">&gt;=</operator> <literal type="number" pos:start="105:20" pos:end="105:20">0</literal></expr>)</condition> <block pos:start="105:23" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:49">

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:48"><name pos:start="107:19" pos:end="107:32"><name pos:start="107:19" pos:end="107:21">drv</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:32">bdrv_open</name></name><argument_list pos:start="107:33" pos:end="107:48">(<argument pos:start="107:34" pos:end="107:35"><expr pos:start="107:34" pos:end="107:35"><name pos:start="107:34" pos:end="107:35">bs</name></expr></argument>, <argument pos:start="107:38" pos:end="107:47"><expr pos:start="107:38" pos:end="107:47"><name pos:start="107:38" pos:end="107:47">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:16">(<expr pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">&lt;</operator> <literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>)</condition> <block pos:start="115:18" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:27">

        <goto pos:start="117:9" pos:end="117:27">goto <name pos:start="117:14" pos:end="117:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:69"><expr pos:start="123:5" pos:end="123:68"><name pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:6">bs</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:22">keep_read_only</name></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:38"><name pos:start="123:26" pos:end="123:27">bs</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:38">read_only</name></name> <operator pos:start="123:40" pos:end="123:40">=</operator> <operator pos:start="123:42" pos:end="123:42">!</operator><operator pos:start="123:43" pos:end="123:43">(</operator><name pos:start="123:44" pos:end="123:53">open_flags</name> <operator pos:start="123:55" pos:end="123:55">&amp;</operator> <name pos:start="123:57" pos:end="123:67">BDRV_O_RDWR</name><operator pos:start="123:68" pos:end="123:68">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:55"><expr pos:start="127:5" pos:end="127:54"><name pos:start="127:5" pos:end="127:7">ret</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <call pos:start="127:11" pos:end="127:54"><name pos:start="127:11" pos:end="127:31">refresh_total_sectors</name><argument_list pos:start="127:32" pos:end="127:54">(<argument pos:start="127:33" pos:end="127:34"><expr pos:start="127:33" pos:end="127:34"><name pos:start="127:33" pos:end="127:34">bs</name></expr></argument>, <argument pos:start="127:37" pos:end="127:53"><expr pos:start="127:37" pos:end="127:53"><name pos:start="127:37" pos:end="127:53"><name pos:start="127:37" pos:end="127:38">bs</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="138:0"><if pos:start="129:5" pos:end="138:0">if <condition pos:start="129:8" pos:end="129:16">(<expr pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">&lt;</operator> <literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>)</condition> <block pos:start="129:18" pos:end="138:0">{<block_content pos:start="131:9" pos:end="131:27">

        <goto pos:start="131:9" pos:end="131:27">goto <name pos:start="131:14" pos:end="131:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="137:1" pos:end="137:14">#<cpp:directive pos:start="137:2" pos:end="137:7">ifndef</cpp:directive> <name pos:start="137:9" pos:end="137:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="139:5" pos:end="146:0"><if pos:start="139:5" pos:end="146:0">if <condition pos:start="139:8" pos:end="139:25">(<expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:10">bs</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:24">is_temporary</name></name></expr>)</condition> <block pos:start="139:27" pos:end="146:0">{<block_content pos:start="141:9" pos:end="141:25">

        <expr_stmt pos:start="141:9" pos:end="141:25"><expr pos:start="141:9" pos:end="141:24"><call pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:14">unlink</name><argument_list pos:start="141:15" pos:end="141:24">(<argument pos:start="141:16" pos:end="141:23"><expr pos:start="141:16" pos:end="141:23"><name pos:start="141:16" pos:end="141:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="145:1" pos:end="145:6">#<cpp:directive pos:start="145:2" pos:end="145:6">endif</cpp:directive></cpp:endif>

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>



<label pos:start="151:1" pos:end="151:14"><name pos:start="151:1" pos:end="151:13">free_and_fail</name>:</label>

    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:17">(<expr pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:10">bs</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:16">file</name></name></expr>)</condition> <block pos:start="153:19" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:24">

        <expr_stmt pos:start="155:9" pos:end="155:30"><expr pos:start="155:9" pos:end="155:29"><call pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:19">bdrv_delete</name><argument_list pos:start="155:20" pos:end="155:29">(<argument pos:start="155:21" pos:end="155:28"><expr pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:22">bs</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:28">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:24"><expr pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:10">bs</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:16">file</name></name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:23">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:26"><expr pos:start="161:5" pos:end="161:25"><call pos:start="161:5" pos:end="161:25"><name pos:start="161:5" pos:end="161:13">qemu_free</name><argument_list pos:start="161:14" pos:end="161:25">(<argument pos:start="161:15" pos:end="161:24"><expr pos:start="161:15" pos:end="161:24"><name pos:start="161:15" pos:end="161:24"><name pos:start="161:15" pos:end="161:16">bs</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:24">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:22"><expr pos:start="163:5" pos:end="163:21"><name pos:start="163:5" pos:end="163:14"><name pos:start="163:5" pos:end="163:6">bs</name><operator pos:start="163:7" pos:end="163:8">-&gt;</operator><name pos:start="163:9" pos:end="163:14">opaque</name></name> <operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:19"><expr pos:start="165:5" pos:end="165:18"><name pos:start="165:5" pos:end="165:11"><name pos:start="165:5" pos:end="165:6">bs</name><operator pos:start="165:7" pos:end="165:8">-&gt;</operator><name pos:start="165:9" pos:end="165:11">drv</name></name> <operator pos:start="165:13" pos:end="165:13">=</operator> <name pos:start="165:15" pos:end="165:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:15">return <expr pos:start="167:12" pos:end="167:14"><name pos:start="167:12" pos:end="167:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
