<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6383.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">jpeg2000_decode_frame</name><parameter_list pos:start="1:33" pos:end="3:65">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:36">int</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:47">got_frame</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:57">AVPacket</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:64">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:45">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">Jpeg2000DecoderContext</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:29">s</name> <init pos:start="7:31" pos:end="7:48">= <expr pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:37">avctx</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ThreadFrame</name></type> <name pos:start="9:17" pos:end="9:21">frame</name> <init pos:start="9:23" pos:end="9:37">= <expr pos:start="9:25" pos:end="9:37"><block pos:start="9:25" pos:end="9:37">{ <expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">.</operator><name pos:start="9:28" pos:end="9:28">f</name> <operator pos:start="9:30" pos:end="9:30">=</operator> <name pos:start="9:32" pos:end="9:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">picture</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">tileno</name></decl>, <decl pos:start="13:17" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:19">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">avctx</name></name>     <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:24">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">buf</name></name>       <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:31"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:31">buf_start</name></name> <operator pos:start="19:33" pos:end="19:33">=</operator> <name pos:start="19:35" pos:end="19:45"><name pos:start="19:35" pos:end="19:39">avpkt</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:45">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">buf_end</name></name>   <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:31">buf_start</name></name> <operator pos:start="21:33" pos:end="21:33">+</operator> <name pos:start="21:35" pos:end="21:45"><name pos:start="21:35" pos:end="21:39">avpkt</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:45">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">curtileno</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="23:23" pos:end="23:85">// TODO: only one tile in DCI JP2K. to implement for more tiles</comment>



    <comment type="line" pos:start="27:5" pos:end="27:64">// reduction factor, i.e number of resolution levels to skip</comment>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:23">reduction_factor</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:35">lowres</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">buf_end</name></name> <operator pos:start="33:20" pos:end="33:20">-</operator> <name pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">buf</name></name> <operator pos:start="33:29" pos:end="33:29">&lt;</operator> <literal type="number" pos:start="33:31" pos:end="33:31">2</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:42">// check if the image is in jp2 format</comment>

    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="45:47">(<expr pos:start="41:9" pos:end="45:46"><operator pos:start="41:9" pos:end="41:9">(</operator><call pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:16">AV_RB32</name><argument_list pos:start="41:17" pos:end="41:24">(<argument pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:23">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="number" pos:start="41:29" pos:end="41:30">12</literal><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:34">&amp;&amp;</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><call pos:start="43:10" pos:end="43:28"><name pos:start="43:10" pos:end="43:16">AV_RB32</name><argument_list pos:start="43:17" pos:end="43:28">(<argument pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:27"><name pos:start="43:18" pos:end="43:23"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">buf</name></name> <operator pos:start="43:25" pos:end="43:25">+</operator> <literal type="number" pos:start="43:27" pos:end="43:27">4</literal></expr></argument>)</argument_list></call> <operator pos:start="43:30" pos:end="43:31">==</operator> <name pos:start="43:33" pos:end="43:44">JP2_SIG_TYPE</name><operator pos:start="43:45" pos:end="43:45">)</operator> <operator pos:start="43:47" pos:end="43:48">&amp;&amp;</operator>

        <operator pos:start="45:9" pos:end="45:9">(</operator><call pos:start="45:10" pos:end="45:28"><name pos:start="45:10" pos:end="45:16">AV_RB32</name><argument_list pos:start="45:17" pos:end="45:28">(<argument pos:start="45:18" pos:end="45:27"><expr pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:23"><name pos:start="45:18" pos:end="45:18">s</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:23">buf</name></name> <operator pos:start="45:25" pos:end="45:25">+</operator> <literal type="number" pos:start="45:27" pos:end="45:27">8</literal></expr></argument>)</argument_list></call> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="45:45">JP2_SIG_VALUE</name><operator pos:start="45:46" pos:end="45:46">)</operator></expr>)</condition> <block pos:start="45:49" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:36">(<expr pos:start="47:13" pos:end="47:35"><operator pos:start="47:13" pos:end="47:13">!</operator><call pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:32">jp2_find_codestream</name><argument_list pos:start="47:33" pos:end="47:35">(<argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:38" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:39">

            <expr_stmt pos:start="49:13" pos:end="51:65"><expr pos:start="49:13" pos:end="51:64"><call pos:start="49:13" pos:end="51:64"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="51:64">(<argument pos:start="49:20" pos:end="49:24"><expr pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:24">avctx</name></expr></argument>, <argument pos:start="49:27" pos:end="49:38"><expr pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:63"><expr pos:start="51:20" pos:end="51:63"><literal type="string" pos:start="51:20" pos:end="51:63">"Could not find Jpeg2000 codestream atom.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:39">return <expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:53">(<expr pos:start="61:9" pos:end="61:52"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:27">bytestream_get_be16</name><argument_list pos:start="61:28" pos:end="61:36">(<argument pos:start="61:29" pos:end="61:35"><expr pos:start="61:29" pos:end="61:35"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:38" pos:end="61:39">!=</operator> <name pos:start="61:41" pos:end="61:52">JPEG2000_SOC</name></expr>)</condition> <block pos:start="61:55" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:64"><expr pos:start="63:9" pos:end="63:63"><call pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:63">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20">avctx</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:62"><expr pos:start="63:37" pos:end="63:62"><literal type="string" pos:start="63:37" pos:end="63:62">"SOC marker not present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="71:17"><if pos:start="69:5" pos:end="71:17">if <condition pos:start="69:8" pos:end="69:44">(<expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:43"><name pos:start="69:15" pos:end="69:40">jpeg2000_read_main_headers</name><argument_list pos:start="69:41" pos:end="69:43">(<argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:17"><block_content pos:start="71:9" pos:end="71:17">

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">end</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:28">/* get picture buffer */</comment>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:59">(<expr pos:start="77:9" pos:end="77:58"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:12">ret</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:53"><name pos:start="77:16" pos:end="77:35">ff_thread_get_buffer</name><argument_list pos:start="77:36" pos:end="77:53">(<argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:41">avctx</name></expr></argument>, <argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><operator pos:start="77:44" pos:end="77:44">&amp;</operator><name pos:start="77:45" pos:end="77:49">frame</name></expr></argument>, <argument pos:start="77:52" pos:end="77:52"><expr pos:start="77:52" pos:end="77:52"><literal type="number" pos:start="77:52" pos:end="77:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="77:54" pos:end="77:54">)</operator> <operator pos:start="77:56" pos:end="77:56">&lt;</operator> <literal type="number" pos:start="77:58" pos:end="77:58">0</literal></expr>)</condition> <block pos:start="77:61" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:17">

        <expr_stmt pos:start="79:9" pos:end="79:72"><expr pos:start="79:9" pos:end="79:71"><call pos:start="79:9" pos:end="79:71"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:71">(<argument pos:start="79:16" pos:end="79:20"><expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20">avctx</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:37" pos:end="79:70"><expr pos:start="79:37" pos:end="79:70"><literal type="string" pos:start="79:37" pos:end="79:70">"ff_thread_get_buffer() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:11">picture</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">pict_type</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:42">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:11">picture</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:22">key_frame</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="93:17"><if pos:start="91:5" pos:end="93:17">if <condition pos:start="91:8" pos:end="91:49">(<expr pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:48"><name pos:start="91:15" pos:end="91:45">jpeg2000_read_bitstream_packets</name><argument_list pos:start="91:46" pos:end="91:48">(<argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><name pos:start="91:47" pos:end="91:47">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:17"><block_content pos:start="93:9" pos:end="93:17">

        <goto pos:start="93:9" pos:end="93:17">goto <name pos:start="93:14" pos:end="93:16">end</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="95:5" pos:end="99:21">for <control pos:start="95:9" pos:end="95:68">(<init pos:start="95:10" pos:end="95:20"><expr pos:start="95:10" pos:end="95:19"><name pos:start="95:10" pos:end="95:15">tileno</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>;</init> <condition pos:start="95:22" pos:end="95:58"><expr pos:start="95:22" pos:end="95:57"><name pos:start="95:22" pos:end="95:27">tileno</name> <operator pos:start="95:29" pos:end="95:29">&lt;</operator> <name pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:31">s</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:42">numXtiles</name></name> <operator pos:start="95:44" pos:end="95:44">*</operator> <name pos:start="95:46" pos:end="95:57"><name pos:start="95:46" pos:end="95:46">s</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:57">numYtiles</name></name></expr>;</condition> <incr pos:start="95:60" pos:end="95:67"><expr pos:start="95:60" pos:end="95:67"><name pos:start="95:60" pos:end="95:65">tileno</name><operator pos:start="95:66" pos:end="95:67">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:9" pos:end="99:21"><block_content pos:start="97:9" pos:end="99:21">

        <if_stmt pos:start="97:9" pos:end="99:21"><if pos:start="97:9" pos:end="99:21">if <condition pos:start="97:12" pos:end="97:69">(<expr pos:start="97:13" pos:end="97:68"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:68"><name pos:start="97:19" pos:end="97:38">jpeg2000_decode_tile</name><argument_list pos:start="97:39" pos:end="97:68">(<argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><name pos:start="97:40" pos:end="97:40">s</name></expr></argument>, <argument pos:start="97:43" pos:end="97:58"><expr pos:start="97:43" pos:end="97:58"><name pos:start="97:43" pos:end="97:49"><name pos:start="97:43" pos:end="97:43">s</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:49">tile</name></name> <operator pos:start="97:51" pos:end="97:51">+</operator> <name pos:start="97:53" pos:end="97:58">tileno</name></expr></argument>, <argument pos:start="97:61" pos:end="97:67"><expr pos:start="97:61" pos:end="97:67"><name pos:start="97:61" pos:end="97:67">picture</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:21"><block_content pos:start="99:13" pos:end="99:21">

            <goto pos:start="99:13" pos:end="99:21">goto <name pos:start="99:18" pos:end="99:20">end</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><operator pos:start="103:5" pos:end="103:5">*</operator><name pos:start="103:6" pos:end="103:14">got_frame</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">1</literal></expr>;</expr_stmt>



<label pos:start="107:1" pos:end="107:4"><name pos:start="107:1" pos:end="107:3">end</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><call pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:24">jpeg2000_dec_cleanup</name><argument_list pos:start="109:25" pos:end="109:27">(<argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:45">return <expr pos:start="111:12" pos:end="111:44"><ternary pos:start="111:12" pos:end="111:44"><condition pos:start="111:12" pos:end="111:16"><expr pos:start="111:12" pos:end="111:14"><name pos:start="111:12" pos:end="111:14">ret</name></expr> ?</condition><then pos:start="111:18" pos:end="111:20"> <expr pos:start="111:18" pos:end="111:20"><name pos:start="111:18" pos:end="111:20">ret</name></expr> </then><else pos:start="111:22" pos:end="111:44">: <expr pos:start="111:24" pos:end="111:44"><name pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:24">s</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:29">buf</name></name> <operator pos:start="111:31" pos:end="111:31">-</operator> <name pos:start="111:33" pos:end="111:44"><name pos:start="111:33" pos:end="111:33">s</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:44">buf_start</name></name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
