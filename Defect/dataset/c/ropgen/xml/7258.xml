<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7258.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sdp_parse_fmtp</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:35">AVStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">st</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:13">attr</name><index pos:start="5:14" pos:end="5:18">[<expr pos:start="5:15" pos:end="5:17"><literal type="number" pos:start="5:15" pos:end="5:17">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="9:58">/* Vorbis setup headers can be up to 12KB and are sent base64

     * encoded, giving a 12KB * (4/3) = 16KB FMTP line. */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:14">value</name><index pos:start="11:15" pos:end="11:21">[<expr pos:start="11:16" pos:end="11:20"><literal type="number" pos:start="11:16" pos:end="11:20">16384</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">RTSPStream</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">rtsp_st</name> <init pos:start="17:25" pos:end="17:39">= <expr pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:28">st</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:25">codec</name> <init pos:start="19:27" pos:end="19:37">= <expr pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:30">st</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:37">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:66"><decl pos:start="21:5" pos:end="21:65"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:18">RTPPayloadData</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:36">rtp_payload_data</name> <init pos:start="21:38" pos:end="21:65">= <expr pos:start="21:40" pos:end="21:65"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:65"><name pos:start="21:41" pos:end="21:47">rtsp_st</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:65">rtp_payload_data</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:32">/* loop on each attribute */</comment>

    <while pos:start="27:5" pos:end="55:5">while<condition pos:start="27:10" pos:end="27:81">(<expr pos:start="27:11" pos:end="27:80"><call pos:start="27:11" pos:end="27:80"><name pos:start="27:11" pos:end="27:34">rtsp_next_attr_and_value</name><argument_list pos:start="27:35" pos:end="27:80">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:37">p</name></expr></argument>, <argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">attr</name></expr></argument>, <argument pos:start="27:46" pos:end="27:57"><expr pos:start="27:46" pos:end="27:57"><sizeof pos:start="27:46" pos:end="27:57">sizeof<argument_list pos:start="27:52" pos:end="27:57">(<argument pos:start="27:53" pos:end="27:56"><expr pos:start="27:53" pos:end="27:56"><name pos:start="27:53" pos:end="27:56">attr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:60" pos:end="27:64"><expr pos:start="27:60" pos:end="27:64"><name pos:start="27:60" pos:end="27:64">value</name></expr></argument>, <argument pos:start="27:67" pos:end="27:79"><expr pos:start="27:67" pos:end="27:79"><sizeof pos:start="27:67" pos:end="27:79">sizeof<argument_list pos:start="27:73" pos:end="27:79">(<argument pos:start="27:74" pos:end="27:78"><expr pos:start="27:74" pos:end="27:78"><name pos:start="27:74" pos:end="27:78">value</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="29:5" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:9">

        <comment type="block" pos:start="31:9" pos:end="31:82">/* grab the codec extra_data from the config parameter of the fmtp line */</comment>

        <expr_stmt pos:start="33:9" pos:end="35:43"><expr pos:start="33:9" pos:end="35:42"><call pos:start="33:9" pos:end="35:42"><name pos:start="33:9" pos:end="33:29">sdp_parse_fmtp_config</name><argument_list pos:start="33:30" pos:end="35:42">(<argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">codec</name></expr></argument>, <argument pos:start="33:38" pos:end="33:70"><expr pos:start="33:38" pos:end="33:70"><name pos:start="33:38" pos:end="33:70"><name pos:start="33:38" pos:end="33:44">rtsp_st</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:70">dynamic_protocol_context</name></name></expr></argument>,

                              <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">attr</name></expr></argument>, <argument pos:start="35:37" pos:end="35:41"><expr pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:41">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:43">/* Looking for a known attribute */</comment>

        <for pos:start="39:9" pos:end="53:9">for <control pos:start="39:13" pos:end="39:43">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:38"><expr pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:30">attr_names</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name><operator pos:start="39:34" pos:end="39:34">.</operator><name pos:start="39:35" pos:end="39:37">str</name></expr>;</condition> <incr pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><operator pos:start="39:40" pos:end="39:41">++</operator><name pos:start="39:42" pos:end="39:42">i</name></expr></incr>)</control> <block pos:start="39:45" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:13">

            <if_stmt pos:start="41:13" pos:end="51:13"><if pos:start="41:13" pos:end="51:13">if <condition pos:start="41:16" pos:end="41:53">(<expr pos:start="41:17" pos:end="41:52"><operator pos:start="41:17" pos:end="41:17">!</operator><call pos:start="41:18" pos:end="41:52"><name pos:start="41:18" pos:end="41:27">strcasecmp</name><argument_list pos:start="41:28" pos:end="41:52">(<argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">attr</name></expr></argument>, <argument pos:start="41:35" pos:end="41:51"><expr pos:start="41:35" pos:end="41:51"><name pos:start="41:35" pos:end="41:47"><name pos:start="41:35" pos:end="41:44">attr_names</name><index pos:start="41:45" pos:end="41:47">[<expr pos:start="41:46" pos:end="41:46"><name pos:start="41:46" pos:end="41:46">i</name></expr>]</index></name><operator pos:start="41:48" pos:end="41:48">.</operator><name pos:start="41:49" pos:end="41:51">str</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:55" pos:end="51:13">{<block_content pos:start="43:17" pos:end="49:99">

                <if_stmt pos:start="43:17" pos:end="49:99"><if pos:start="43:17" pos:end="45:92">if <condition pos:start="43:20" pos:end="43:61">(<expr pos:start="43:21" pos:end="43:60"><name pos:start="43:21" pos:end="43:33"><name pos:start="43:21" pos:end="43:30">attr_names</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index></name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:38">type</name> <operator pos:start="43:40" pos:end="43:41">==</operator> <name pos:start="43:43" pos:end="43:60">ATTR_NAME_TYPE_INT</name></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:92"><block_content pos:start="45:21" pos:end="45:92">

                    <expr_stmt pos:start="45:21" pos:end="45:92"><expr pos:start="45:21" pos:end="45:91"><operator pos:start="45:21" pos:end="45:21">*</operator><operator pos:start="45:22" pos:end="45:22">(</operator><name pos:start="45:23" pos:end="45:25">int</name> <operator pos:start="45:27" pos:end="45:27">*</operator><operator pos:start="45:28" pos:end="45:28">)</operator><operator pos:start="45:29" pos:end="45:29">(</operator><operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:34">char</name> <operator pos:start="45:36" pos:end="45:36">*</operator><operator pos:start="45:37" pos:end="45:37">)</operator><name pos:start="45:38" pos:end="45:53">rtp_payload_data</name> <operator pos:start="45:55" pos:end="45:55">+</operator> <name pos:start="45:57" pos:end="45:69"><name pos:start="45:57" pos:end="45:66">attr_names</name><index pos:start="45:67" pos:end="45:69">[<expr pos:start="45:68" pos:end="45:68"><name pos:start="45:68" pos:end="45:68">i</name></expr>]</index></name><operator pos:start="45:70" pos:end="45:70">.</operator><name pos:start="45:71" pos:end="45:76">offset</name><operator pos:start="45:77" pos:end="45:77">)</operator> <operator pos:start="45:79" pos:end="45:79">=</operator> <call pos:start="45:81" pos:end="45:91"><name pos:start="45:81" pos:end="45:84">atoi</name><argument_list pos:start="45:85" pos:end="45:91">(<argument pos:start="45:86" pos:end="45:90"><expr pos:start="45:86" pos:end="45:90"><name pos:start="45:86" pos:end="45:90">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="47:17" pos:end="49:99">else if <condition pos:start="47:25" pos:end="47:66">(<expr pos:start="47:26" pos:end="47:65"><name pos:start="47:26" pos:end="47:38"><name pos:start="47:26" pos:end="47:35">attr_names</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">i</name></expr>]</index></name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:43">type</name> <operator pos:start="47:45" pos:end="47:46">==</operator> <name pos:start="47:48" pos:end="47:65">ATTR_NAME_TYPE_STR</name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:99"><block_content pos:start="49:21" pos:end="49:99">

                    <expr_stmt pos:start="49:21" pos:end="49:99"><expr pos:start="49:21" pos:end="49:98"><operator pos:start="49:21" pos:end="49:21">*</operator><operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:26">char</name> <operator pos:start="49:28" pos:end="49:28">*</operator><operator pos:start="49:29" pos:end="49:29">*</operator><operator pos:start="49:30" pos:end="49:30">)</operator><operator pos:start="49:31" pos:end="49:31">(</operator><operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:36">char</name> <operator pos:start="49:38" pos:end="49:38">*</operator><operator pos:start="49:39" pos:end="49:39">)</operator><name pos:start="49:40" pos:end="49:55">rtp_payload_data</name> <operator pos:start="49:57" pos:end="49:57">+</operator> <name pos:start="49:59" pos:end="49:71"><name pos:start="49:59" pos:end="49:68">attr_names</name><index pos:start="49:69" pos:end="49:71">[<expr pos:start="49:70" pos:end="49:70"><name pos:start="49:70" pos:end="49:70">i</name></expr>]</index></name><operator pos:start="49:72" pos:end="49:72">.</operator><name pos:start="49:73" pos:end="49:78">offset</name><operator pos:start="49:79" pos:end="49:79">)</operator> <operator pos:start="49:81" pos:end="49:81">=</operator> <call pos:start="49:83" pos:end="49:98"><name pos:start="49:83" pos:end="49:91">av_strdup</name><argument_list pos:start="49:92" pos:end="49:98">(<argument pos:start="49:93" pos:end="49:97"><expr pos:start="49:93" pos:end="49:97"><name pos:start="49:93" pos:end="49:97">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
