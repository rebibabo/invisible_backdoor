<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25830.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">init_dev</name><parameter_list pos:start="1:21" pos:end="1:61">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:32">tc58128_dev</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type> <name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:60"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:19">blocks</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:7">dev</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:14">state</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <name pos:start="9:18" pos:end="9:21">WAIT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:48"><expr pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:7">dev</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:23">flash_contents</name></name> <operator pos:start="11:25" pos:end="11:25">=</operator> <call pos:start="11:27" pos:end="11:47"><name pos:start="11:27" pos:end="11:35">g_malloc0</name><argument_list pos:start="11:36" pos:end="11:47">(<argument pos:start="11:37" pos:end="11:46"><expr pos:start="11:37" pos:end="11:46"><name pos:start="11:37" pos:end="11:46">FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:49">(<argument pos:start="13:12" pos:end="13:30"><expr pos:start="13:12" pos:end="13:30"><name pos:start="13:12" pos:end="13:30"><name pos:start="13:12" pos:end="13:14">dev</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:30">flash_contents</name></name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><literal type="number" pos:start="13:33" pos:end="13:36">0xff</literal></expr></argument>, <argument pos:start="13:39" pos:end="13:48"><expr pos:start="13:39" pos:end="13:48"><name pos:start="13:39" pos:end="13:48">FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:12">dev</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:28">flash_contents</name></name></expr>)</condition> <block pos:start="15:31" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:16">

	<expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><call pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:61">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:60"><expr pos:start="17:25" pos:end="17:60"><literal type="string" pos:start="17:25" pos:end="17:60">"could not alloc memory for flash\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="59:5"><if pos:start="23:5" pos:end="59:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">filename</name></expr>)</condition> <block pos:start="23:19" pos:end="59:5">{<block_content pos:start="27:9" pos:end="57:9">

	<comment type="block" pos:start="25:9" pos:end="25:55">/* Load flash image skipping the first block */</comment>

	<expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:66"><name pos:start="27:15" pos:end="27:24">load_image</name><argument_list pos:start="27:25" pos:end="27:66">(<argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><name pos:start="27:26" pos:end="27:33">filename</name></expr></argument>, <argument pos:start="27:36" pos:end="27:65"><expr pos:start="27:36" pos:end="27:65"><name pos:start="27:36" pos:end="27:54"><name pos:start="27:36" pos:end="27:38">dev</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:54">flash_contents</name></name> <operator pos:start="27:56" pos:end="27:56">+</operator> <literal type="number" pos:start="27:58" pos:end="27:60">528</literal> <operator pos:start="27:62" pos:end="27:62">*</operator> <literal type="number" pos:start="27:64" pos:end="27:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="29:9" pos:end="57:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:20">

	    <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:19">fprintf</name><argument_list pos:start="31:20" pos:end="31:44">(<argument pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">stderr</name></expr></argument>, <argument pos:start="31:29" pos:end="31:38"><expr pos:start="31:29" pos:end="31:38"><literal type="string" pos:start="31:29" pos:end="31:38">"ret=%d\n"</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="33:13" pos:end="35:30"><expr pos:start="33:13" pos:end="35:29"><call pos:start="33:13" pos:end="35:29"><name pos:start="33:13" pos:end="33:19">fprintf</name><argument_list pos:start="33:20" pos:end="35:29">(<argument pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26">stderr</name></expr></argument>, <argument pos:start="33:29" pos:end="33:67"><expr pos:start="33:29" pos:end="33:67"><literal type="string" pos:start="33:29" pos:end="33:67">"qemu: could not load flash image %s\n"</literal></expr></argument>,

		    <argument pos:start="35:21" pos:end="35:28"><expr pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><call pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:16">exit</name><argument_list pos:start="37:17" pos:end="37:19">(<argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="39:11" pos:end="57:9">else <block pos:start="39:16" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:30">

	    <comment type="block" pos:start="41:13" pos:end="41:57">/* Build first block with number of blocks */</comment>

	    <expr_stmt pos:start="43:13" pos:end="43:55"><expr pos:start="43:13" pos:end="43:54"><name pos:start="43:13" pos:end="43:18">blocks</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:25">ret</name> <operator pos:start="43:27" pos:end="43:27">+</operator> <literal type="number" pos:start="43:29" pos:end="43:31">528</literal> <operator pos:start="43:33" pos:end="43:33">*</operator> <literal type="number" pos:start="43:35" pos:end="43:38">32</literal> <operator pos:start="43:38" pos:end="43:38">-</operator> <literal type="number" pos:start="43:40" pos:end="43:40">1</literal><operator pos:start="43:41" pos:end="43:41">)</operator> <operator pos:start="43:43" pos:end="43:43">/</operator> <operator pos:start="43:45" pos:end="43:45">(</operator><literal type="number" pos:start="43:46" pos:end="43:48">528</literal> <operator pos:start="43:50" pos:end="43:50">*</operator> <literal type="number" pos:start="43:52" pos:end="43:53">32</literal><operator pos:start="43:54" pos:end="43:54">)</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:15">dev</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:31">flash_contents</name><index pos:start="45:32" pos:end="45:34">[<expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>]</index></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:43">blocks</name> <operator pos:start="45:45" pos:end="45:45">&amp;</operator> <literal type="number" pos:start="45:47" pos:end="45:50">0xff</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="47:13" pos:end="47:58"><expr pos:start="47:13" pos:end="47:57"><name pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:15">dev</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:31">flash_contents</name><index pos:start="47:32" pos:end="47:34">[<expr pos:start="47:33" pos:end="47:33"><literal type="number" pos:start="47:33" pos:end="47:33">1</literal></expr>]</index></name> <operator pos:start="47:36" pos:end="47:36">=</operator> <operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:44">blocks</name> <operator pos:start="47:46" pos:end="47:47">&gt;&gt;</operator> <literal type="number" pos:start="47:49" pos:end="47:49">8</literal><operator pos:start="47:50" pos:end="47:50">)</operator> <operator pos:start="47:52" pos:end="47:52">&amp;</operator> <literal type="number" pos:start="47:54" pos:end="47:57">0xff</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:15">dev</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:31">flash_contents</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><literal type="number" pos:start="49:33" pos:end="49:33">2</literal></expr>]</index></name> <operator pos:start="49:36" pos:end="49:36">=</operator> <operator pos:start="49:38" pos:end="49:38">(</operator><name pos:start="49:39" pos:end="49:44">blocks</name> <operator pos:start="49:46" pos:end="49:47">&gt;&gt;</operator> <literal type="number" pos:start="49:49" pos:end="49:50">16</literal><operator pos:start="49:51" pos:end="49:51">)</operator> <operator pos:start="49:53" pos:end="49:53">&amp;</operator> <literal type="number" pos:start="49:55" pos:end="49:58">0xff</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="51:13" pos:end="51:59"><expr pos:start="51:13" pos:end="51:58"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:15">dev</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:31">flash_contents</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">3</literal></expr>]</index></name> <operator pos:start="51:36" pos:end="51:36">=</operator> <operator pos:start="51:38" pos:end="51:38">(</operator><name pos:start="51:39" pos:end="51:44">blocks</name> <operator pos:start="51:46" pos:end="51:47">&gt;&gt;</operator> <literal type="number" pos:start="51:49" pos:end="51:50">24</literal><operator pos:start="51:51" pos:end="51:51">)</operator> <operator pos:start="51:53" pos:end="51:53">&amp;</operator> <literal type="number" pos:start="51:55" pos:end="51:58">0xff</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="53:13" pos:end="55:30"><expr pos:start="53:13" pos:end="55:29"><call pos:start="53:13" pos:end="55:29"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="55:29">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="53:65"><expr pos:start="53:29" pos:end="53:65"><literal type="string" pos:start="53:29" pos:end="53:65">"loaded %d bytes for %s into flash\n"</literal></expr></argument>, <argument pos:start="53:68" pos:end="53:70"><expr pos:start="53:68" pos:end="53:70"><name pos:start="53:68" pos:end="53:70">ret</name></expr></argument>,

		    <argument pos:start="55:21" pos:end="55:28"><expr pos:start="55:21" pos:end="55:28"><name pos:start="55:21" pos:end="55:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
