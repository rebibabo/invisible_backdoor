<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23287.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">film_read_packet</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:15">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FilmDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">film</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">film_sample</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:23">sample</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">left</name></decl>, <decl pos:start="17:15" pos:end="17:19"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:19">right</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:28"><if pos:start="21:5" pos:end="23:28">if <condition pos:start="21:8" pos:end="21:51">(<expr pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:12">film</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:28">current_sample</name></name> <operator pos:start="21:30" pos:end="21:31">&gt;=</operator> <name pos:start="21:33" pos:end="21:50"><name pos:start="21:33" pos:end="21:36">film</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:50">sample_count</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:28"><block_content pos:start="23:9" pos:end="23:28">

        <return pos:start="23:9" pos:end="23:28">return <expr pos:start="23:16" pos:end="23:27"><call pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:27">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:10">sample</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:54"><name pos:start="27:15" pos:end="27:18">film</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:32">sample_table</name><index pos:start="27:33" pos:end="27:54">[<expr pos:start="27:34" pos:end="27:53"><name pos:start="27:34" pos:end="27:53"><name pos:start="27:34" pos:end="27:37">film</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:53">current_sample</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:61">/* position the stream (will probably be there anyway) */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><call pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:13">avio_seek</name><argument_list pos:start="33:14" pos:end="33:50">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:39"><expr pos:start="33:19" pos:end="33:39"><name pos:start="33:19" pos:end="33:39"><name pos:start="33:19" pos:end="33:24">sample</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:39">sample_offset</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:49"><expr pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:49">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:70">/* do a special song and dance when loading FILM Cinepak chunks */</comment>

    <if_stmt pos:start="39:5" pos:end="133:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="41:50">(<expr pos:start="39:9" pos:end="41:49"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:15">sample</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">stream</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:51"><name pos:start="39:28" pos:end="39:31">film</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:51">video_stream_index</name></name><operator pos:start="39:52" pos:end="39:52">)</operator> <operator pos:start="39:54" pos:end="39:55">&amp;&amp;</operator>

        <operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:13">film</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:25">video_type</name></name> <operator pos:start="41:27" pos:end="41:28">==</operator> <name pos:start="41:30" pos:end="41:48">AV_CODEC_ID_CINEPAK</name><operator pos:start="41:49" pos:end="41:49">)</operator></expr>)</condition> <block pos:start="41:52" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:54">

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">pkt</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">pos</name></name><operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:31"><name pos:start="43:19" pos:end="43:27">avio_tell</name><argument_list pos:start="43:28" pos:end="43:31">(<argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><name pos:start="43:29" pos:end="43:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:52">(<expr pos:start="45:13" pos:end="45:51"><call pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:25">av_new_packet</name><argument_list pos:start="45:26" pos:end="45:51">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">pkt</name></expr></argument>, <argument pos:start="45:32" pos:end="45:50"><expr pos:start="45:32" pos:end="45:50"><name pos:start="45:32" pos:end="45:50"><name pos:start="45:32" pos:end="45:37">sample</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:50">sample_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:17">avio_read</name><argument_list pos:start="49:18" pos:end="49:53">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:31"><expr pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:25">pkt</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:31">data</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:52"><expr pos:start="49:34" pos:end="49:52"><name pos:start="49:34" pos:end="49:52"><name pos:start="49:34" pos:end="49:39">sample</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:52">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="125:5">else if <condition pos:start="51:15" pos:end="55:52">(<expr pos:start="51:16" pos:end="55:51"><operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:22">sample</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:30">stream</name></name> <operator pos:start="51:32" pos:end="51:33">==</operator> <name pos:start="51:35" pos:end="51:58"><name pos:start="51:35" pos:end="51:38">film</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:58">audio_stream_index</name></name><operator pos:start="51:59" pos:end="51:59">)</operator> <operator pos:start="51:61" pos:end="51:62">&amp;&amp;</operator>

        <operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:13">film</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:29">audio_channels</name></name> <operator pos:start="53:31" pos:end="53:32">==</operator> <literal type="number" pos:start="53:34" pos:end="53:34">2</literal><operator pos:start="53:35" pos:end="53:35">)</operator> <operator pos:start="53:37" pos:end="53:38">&amp;&amp;</operator>

        <operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:13">film</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:25">audio_type</name></name> <operator pos:start="55:27" pos:end="55:28">!=</operator> <name pos:start="55:30" pos:end="55:50">AV_CODEC_ID_ADPCM_ADX</name><operator pos:start="55:51" pos:end="55:51">)</operator></expr>)</condition> <block pos:start="55:54" pos:end="125:5">{<block_content pos:start="61:9" pos:end="123:9">

        <comment type="block" pos:start="57:9" pos:end="57:48">/* stereo PCM needs to be interleaved */</comment>



        <if_stmt pos:start="61:9" pos:end="63:35"><if pos:start="61:9" pos:end="63:35">if <condition pos:start="61:12" pos:end="61:52">(<expr pos:start="61:13" pos:end="61:51"><call pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:25">av_new_packet</name><argument_list pos:start="61:26" pos:end="61:51">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">pkt</name></expr></argument>, <argument pos:start="61:32" pos:end="61:50"><expr pos:start="61:32" pos:end="61:50"><name pos:start="61:32" pos:end="61:50"><name pos:start="61:32" pos:end="61:37">sample</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:50">sample_size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:35"><block_content pos:start="63:13" pos:end="63:35">

            <return pos:start="63:13" pos:end="63:35">return <expr pos:start="63:20" pos:end="63:34"><call pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:26">AVERROR</name><argument_list pos:start="63:27" pos:end="63:34">(<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:61">/* make sure the interleave buffer is large enough */</comment>

        <if_stmt pos:start="69:9" pos:end="85:9"><if pos:start="69:9" pos:end="85:9">if <condition pos:start="69:12" pos:end="69:59">(<expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:18">sample</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:31">sample_size</name></name> <operator pos:start="69:33" pos:end="69:33">&gt;</operator> <name pos:start="69:35" pos:end="69:58"><name pos:start="69:35" pos:end="69:38">film</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:58">stereo_buffer_size</name></name></expr>)</condition> <block pos:start="69:61" pos:end="85:9">{<block_content pos:start="71:13" pos:end="83:13">

            <expr_stmt pos:start="71:13" pos:end="71:41"><expr pos:start="71:13" pos:end="71:40"><call pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:19">av_free</name><argument_list pos:start="71:20" pos:end="71:40">(<argument pos:start="71:21" pos:end="71:39"><expr pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:24">film</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:39">stereo_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:59"><expr pos:start="73:13" pos:end="73:58"><name pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:16">film</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:36">stereo_buffer_size</name></name> <operator pos:start="73:38" pos:end="73:38">=</operator> <name pos:start="73:40" pos:end="73:58"><name pos:start="73:40" pos:end="73:45">sample</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:58">sample_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:70"><expr pos:start="75:13" pos:end="75:69"><name pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:16">film</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:31">stereo_buffer</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <call pos:start="75:35" pos:end="75:69"><name pos:start="75:35" pos:end="75:43">av_malloc</name><argument_list pos:start="75:44" pos:end="75:69">(<argument pos:start="75:45" pos:end="75:68"><expr pos:start="75:45" pos:end="75:68"><name pos:start="75:45" pos:end="75:68"><name pos:start="75:45" pos:end="75:48">film</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:68">stereo_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="83:13"><if pos:start="77:13" pos:end="83:13">if <condition pos:start="77:16" pos:end="77:37">(<expr pos:start="77:17" pos:end="77:36"><operator pos:start="77:17" pos:end="77:17">!</operator><name pos:start="77:18" pos:end="77:36"><name pos:start="77:18" pos:end="77:21">film</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:36">stereo_buffer</name></name></expr>)</condition> <block pos:start="77:39" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:39">

                <expr_stmt pos:start="79:17" pos:end="79:45"><expr pos:start="79:17" pos:end="79:44"><name pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:20">film</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:40">stereo_buffer_size</name></name> <operator pos:start="79:42" pos:end="79:42">=</operator> <literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr>;</expr_stmt>

                <return pos:start="81:17" pos:end="81:39">return <expr pos:start="81:24" pos:end="81:38"><call pos:start="81:24" pos:end="81:38"><name pos:start="81:24" pos:end="81:30">AVERROR</name><argument_list pos:start="81:31" pos:end="81:38">(<argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><name pos:start="81:32" pos:end="81:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:11">pkt</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:16">pos</name></name><operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:31"><name pos:start="89:19" pos:end="89:27">avio_tell</name><argument_list pos:start="89:28" pos:end="89:31">(<argument pos:start="89:29" pos:end="89:30"><expr pos:start="89:29" pos:end="89:30"><name pos:start="89:29" pos:end="89:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:70"><expr pos:start="91:9" pos:end="91:69"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:69"><name pos:start="91:15" pos:end="91:23">avio_read</name><argument_list pos:start="91:24" pos:end="91:69">(<argument pos:start="91:25" pos:end="91:26"><expr pos:start="91:25" pos:end="91:26"><name pos:start="91:25" pos:end="91:26">pb</name></expr></argument>, <argument pos:start="91:29" pos:end="91:47"><expr pos:start="91:29" pos:end="91:47"><name pos:start="91:29" pos:end="91:47"><name pos:start="91:29" pos:end="91:32">film</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:47">stereo_buffer</name></name></expr></argument>, <argument pos:start="91:50" pos:end="91:68"><expr pos:start="91:50" pos:end="91:68"><name pos:start="91:50" pos:end="91:68"><name pos:start="91:50" pos:end="91:55">sample</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:68">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:31"><if pos:start="93:9" pos:end="95:31">if <condition pos:start="93:12" pos:end="93:39">(<expr pos:start="93:13" pos:end="93:38"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:18">!=</operator> <name pos:start="93:20" pos:end="93:38"><name pos:start="93:20" pos:end="93:25">sample</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:38">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:31"><block_content pos:start="95:13" pos:end="95:31">

            <expr_stmt pos:start="95:13" pos:end="95:31"><expr pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:25">AVERROR</name><argument_list pos:start="95:26" pos:end="95:30">(<argument pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:17"><expr pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:12">left</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:40"><expr pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:13">right</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <name pos:start="101:17" pos:end="101:35"><name pos:start="101:17" pos:end="101:22">sample</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:35">sample_size</name></name> <operator pos:start="101:37" pos:end="101:37">/</operator> <literal type="number" pos:start="101:39" pos:end="101:39">2</literal></expr>;</expr_stmt>

        <for pos:start="103:9" pos:end="123:9">for <control pos:start="103:13" pos:end="103:46">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">i</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:44"><expr pos:start="103:21" pos:end="103:43"><name pos:start="103:21" pos:end="103:21">i</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:43"><name pos:start="103:25" pos:end="103:30">sample</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:43">sample_size</name></name></expr>;</condition> <incr/>)</control> <block pos:start="103:48" pos:end="123:9">{<block_content pos:start="105:13" pos:end="121:13">

            <if_stmt pos:start="105:13" pos:end="121:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:38">(<expr pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:20">film</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:32">audio_bits</name></name> <operator pos:start="105:34" pos:end="105:35">==</operator> <literal type="number" pos:start="105:37" pos:end="105:37">8</literal></expr>)</condition> <block pos:start="105:40" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:62">

                <expr_stmt pos:start="107:17" pos:end="107:61"><expr pos:start="107:17" pos:end="107:60"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:19">pkt</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:25">data</name><index pos:start="107:26" pos:end="107:30">[<expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:27">i</name><operator pos:start="107:28" pos:end="107:29">++</operator></expr>]</index></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:60"><name pos:start="107:34" pos:end="107:37">film</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:52">stereo_buffer</name><index pos:start="107:53" pos:end="107:60">[<expr pos:start="107:54" pos:end="107:59"><name pos:start="107:54" pos:end="107:57">left</name><operator pos:start="107:58" pos:end="107:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:62"><expr pos:start="109:17" pos:end="109:61"><name pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:19">pkt</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:25">data</name><index pos:start="109:26" pos:end="109:30">[<expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:27">i</name><operator pos:start="109:28" pos:end="109:29">++</operator></expr>]</index></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <name pos:start="109:34" pos:end="109:61"><name pos:start="109:34" pos:end="109:37">film</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:52">stereo_buffer</name><index pos:start="109:53" pos:end="109:61">[<expr pos:start="109:54" pos:end="109:60"><name pos:start="109:54" pos:end="109:58">right</name><operator pos:start="109:59" pos:end="109:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="121:13">else <block pos:start="111:20" pos:end="121:13">{<block_content pos:start="113:17" pos:end="119:62">

                <expr_stmt pos:start="113:17" pos:end="113:61"><expr pos:start="113:17" pos:end="113:60"><name pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:19">pkt</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:25">data</name><index pos:start="113:26" pos:end="113:30">[<expr pos:start="113:27" pos:end="113:29"><name pos:start="113:27" pos:end="113:27">i</name><operator pos:start="113:28" pos:end="113:29">++</operator></expr>]</index></name> <operator pos:start="113:32" pos:end="113:32">=</operator> <name pos:start="113:34" pos:end="113:60"><name pos:start="113:34" pos:end="113:37">film</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:52">stereo_buffer</name><index pos:start="113:53" pos:end="113:60">[<expr pos:start="113:54" pos:end="113:59"><name pos:start="113:54" pos:end="113:57">left</name><operator pos:start="113:58" pos:end="113:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:61"><expr pos:start="115:17" pos:end="115:60"><name pos:start="115:17" pos:end="115:30"><name pos:start="115:17" pos:end="115:19">pkt</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:25">data</name><index pos:start="115:26" pos:end="115:30">[<expr pos:start="115:27" pos:end="115:29"><name pos:start="115:27" pos:end="115:27">i</name><operator pos:start="115:28" pos:end="115:29">++</operator></expr>]</index></name> <operator pos:start="115:32" pos:end="115:32">=</operator> <name pos:start="115:34" pos:end="115:60"><name pos:start="115:34" pos:end="115:37">film</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:52">stereo_buffer</name><index pos:start="115:53" pos:end="115:60">[<expr pos:start="115:54" pos:end="115:59"><name pos:start="115:54" pos:end="115:57">left</name><operator pos:start="115:58" pos:end="115:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:62"><expr pos:start="117:17" pos:end="117:61"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:19">pkt</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:25">data</name><index pos:start="117:26" pos:end="117:30">[<expr pos:start="117:27" pos:end="117:29"><name pos:start="117:27" pos:end="117:27">i</name><operator pos:start="117:28" pos:end="117:29">++</operator></expr>]</index></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <name pos:start="117:34" pos:end="117:61"><name pos:start="117:34" pos:end="117:37">film</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:52">stereo_buffer</name><index pos:start="117:53" pos:end="117:61">[<expr pos:start="117:54" pos:end="117:60"><name pos:start="117:54" pos:end="117:58">right</name><operator pos:start="117:59" pos:end="117:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:62"><expr pos:start="119:17" pos:end="119:61"><name pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:19">pkt</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:25">data</name><index pos:start="119:26" pos:end="119:30">[<expr pos:start="119:27" pos:end="119:29"><name pos:start="119:27" pos:end="119:27">i</name><operator pos:start="119:28" pos:end="119:29">++</operator></expr>]</index></name> <operator pos:start="119:32" pos:end="119:32">=</operator> <name pos:start="119:34" pos:end="119:61"><name pos:start="119:34" pos:end="119:37">film</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:52">stereo_buffer</name><index pos:start="119:53" pos:end="119:61">[<expr pos:start="119:54" pos:end="119:60"><name pos:start="119:54" pos:end="119:58">right</name><operator pos:start="119:59" pos:end="119:60">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="133:5">else <block pos:start="125:12" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:31">

        <expr_stmt pos:start="127:9" pos:end="127:57"><expr pos:start="127:9" pos:end="127:56"><name pos:start="127:9" pos:end="127:11">ret</name><operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:56"><name pos:start="127:14" pos:end="127:26">av_get_packet</name><argument_list pos:start="127:27" pos:end="127:56">(<argument pos:start="127:28" pos:end="127:29"><expr pos:start="127:28" pos:end="127:29"><name pos:start="127:28" pos:end="127:29">pb</name></expr></argument>, <argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><name pos:start="127:32" pos:end="127:34">pkt</name></expr></argument>, <argument pos:start="127:37" pos:end="127:55"><expr pos:start="127:37" pos:end="127:55"><name pos:start="127:37" pos:end="127:55"><name pos:start="127:37" pos:end="127:42">sample</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:55">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:31"><if pos:start="129:9" pos:end="131:31">if <condition pos:start="129:12" pos:end="129:39">(<expr pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:15">ret</name> <operator pos:start="129:17" pos:end="129:18">!=</operator> <name pos:start="129:20" pos:end="129:38"><name pos:start="129:20" pos:end="129:25">sample</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:38">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:31"><block_content pos:start="131:13" pos:end="131:31">

            <expr_stmt pos:start="131:13" pos:end="131:31"><expr pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:30"><name pos:start="131:19" pos:end="131:25">AVERROR</name><argument_list pos:start="131:26" pos:end="131:30">(<argument pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:39"><expr pos:start="137:5" pos:end="137:38"><name pos:start="137:5" pos:end="137:21"><name pos:start="137:5" pos:end="137:7">pkt</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:21">stream_index</name></name> <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:38"><name pos:start="137:25" pos:end="137:30">sample</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:38">stream</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:27"><expr pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:12"><name pos:start="139:5" pos:end="139:7">pkt</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:12">pts</name></name> <operator pos:start="139:14" pos:end="139:14">=</operator> <name pos:start="139:16" pos:end="139:26"><name pos:start="139:16" pos:end="139:21">sample</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:26">pts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:24"><name pos:start="143:5" pos:end="143:8">film</name><operator pos:start="143:9" pos:end="143:10">-&gt;</operator><name pos:start="143:11" pos:end="143:24">current_sample</name></name><operator pos:start="143:25" pos:end="143:26">++</operator></expr>;</expr_stmt>



    <return pos:start="147:5" pos:end="147:15">return <expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
