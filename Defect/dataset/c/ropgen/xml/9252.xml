<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9252.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_block_status</name><parameter_list pos:start="1:28" pos:end="3:56">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:68">sector_num</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:52">MapEntry</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:55">e</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">depth</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="19:7">/* As an optimization, we could cache the current range of unallocated

     * clusters in each file of the chain, and avoid querying the same

     * range repeatedly.

     */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:9">depth</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="57:5">for <control pos:start="25:9" pos:end="25:12">(<init pos:start="25:10" pos:end="25:10">;</init><condition pos:start="25:11" pos:end="25:11">;</condition><incr/>)</control> <block pos:start="25:14" pos:end="57:5">{<block_content pos:start="27:9" pos:end="55:16">

        <expr_stmt pos:start="27:9" pos:end="27:77"><expr pos:start="27:9" pos:end="27:76"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:76"><name pos:start="27:15" pos:end="27:35">bdrv_get_block_status</name><argument_list pos:start="27:36" pos:end="27:76">(<argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><name pos:start="27:37" pos:end="27:38">bs</name></expr></argument>, <argument pos:start="27:41" pos:end="27:50"><expr pos:start="27:41" pos:end="27:50"><name pos:start="27:41" pos:end="27:50">sector_num</name></expr></argument>, <argument pos:start="27:53" pos:end="27:62"><expr pos:start="27:53" pos:end="27:62"><name pos:start="27:53" pos:end="27:62">nb_sectors</name></expr></argument>, <argument pos:start="27:65" pos:end="27:75"><expr pos:start="27:65" pos:end="27:75"><operator pos:start="27:65" pos:end="27:65">&amp;</operator><name pos:start="27:66" pos:end="27:75">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:14">assert</name><argument_list pos:start="35:15" pos:end="35:26">(<argument pos:start="35:16" pos:end="35:25"><expr pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:25">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:52">(<expr pos:start="37:13" pos:end="37:51"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&amp;</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:34">BDRV_BLOCK_ZERO</name><operator pos:start="37:35" pos:end="37:35">|</operator><name pos:start="37:36" pos:end="37:50">BDRV_BLOCK_DATA</name><operator pos:start="37:51" pos:end="37:51">)</operator></expr>)</condition> <block pos:start="37:54" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:10">bs</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:23">backing_bs</name><argument_list pos:start="43:24" pos:end="43:27">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:14">bs</name> <operator pos:start="45:16" pos:end="45:17">==</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>)</condition> <block pos:start="45:25" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:18">

            <expr_stmt pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:13">depth</name><operator pos:start="55:14" pos:end="55:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:5">e</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:12">start</name></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:25">sector_num</name> <operator pos:start="61:27" pos:end="61:27">*</operator> <name pos:start="61:29" pos:end="61:44">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:5">e</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:13">length</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:26">nb_sectors</name> <operator pos:start="63:28" pos:end="63:28">*</operator> <name pos:start="63:30" pos:end="63:45">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:5">e</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:12">flags</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:18">ret</name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <operator pos:start="65:22" pos:end="65:22">~</operator><name pos:start="65:23" pos:end="65:44">BDRV_BLOCK_OFFSET_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:5">e</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:13">offset</name></name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">&amp;</operator> <name pos:start="67:23" pos:end="67:44">BDRV_BLOCK_OFFSET_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:5">e</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:12">depth</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:20">depth</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:15"><expr pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:9"><name pos:start="71:5" pos:end="71:5">e</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:9">bs</name></name> <operator pos:start="71:11" pos:end="71:11">=</operator> <name pos:start="71:13" pos:end="71:14">bs</name></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
