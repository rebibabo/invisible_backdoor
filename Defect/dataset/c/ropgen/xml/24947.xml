<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24947.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">ehci_state_execute</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:39">EHCIQueue</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:17">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">EHCIPacket</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:45">= <expr pos:start="5:21" pos:end="5:45"><call pos:start="5:21" pos:end="5:45"><name pos:start="5:21" pos:end="5:32">QTAILQ_FIRST</name><argument_list pos:start="5:33" pos:end="5:45">(<argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:35">q</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:44">packets</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">again</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:21">(<argument pos:start="11:12" pos:end="11:20"><expr pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:12">p</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <name pos:start="11:17" pos:end="11:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><call pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:36">(<argument pos:start="13:12" pos:end="13:35"><expr pos:start="13:12" pos:end="13:35"><name pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:12">p</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:21">qtdaddr</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:35"><name pos:start="13:26" pos:end="13:26">q</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:35">qtdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:26">ehci_qh_do_overlay</name><argument_list pos:start="17:27" pos:end="17:29">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">q</name></expr></argument>)</argument_list></call> <operator pos:start="17:31" pos:end="17:32">!=</operator> <literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr>)</condition> <block pos:start="17:37" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:66">// TODO verify enough time remains in the uframe as in 4.4.1.1</comment>

    <comment type="line" pos:start="27:5" pos:end="27:65">// TODO write back ptr to async list when done or out of time</comment>

    <comment type="line" pos:start="29:5" pos:end="29:60">// TODO Windows does not seem to ever set the MULT field</comment>



    <if_stmt pos:start="33:5" pos:end="47:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:10">q</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:17">async</name></name></expr>)</condition> <block pos:start="33:20" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:9">

        <decl_stmt pos:start="35:9" pos:end="35:64"><decl pos:start="35:9" pos:end="35:63"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:23">transactCtr</name> <init pos:start="35:25" pos:end="35:63">= <expr pos:start="35:27" pos:end="35:63"><call pos:start="35:27" pos:end="35:63"><name pos:start="35:27" pos:end="35:35">get_field</name><argument_list pos:start="35:36" pos:end="35:63">(<argument pos:start="35:37" pos:end="35:47"><expr pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:37">q</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:41">qh</name><operator pos:start="35:42" pos:end="35:42">.</operator><name pos:start="35:43" pos:end="35:47">epcap</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:62"><expr pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:62">QH_EPCAP_MULT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:25">(<expr pos:start="37:13" pos:end="37:24"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:24">transactCtr</name></expr>)</condition> <block pos:start="37:27" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:21">

            <expr_stmt pos:start="39:13" pos:end="39:64"><expr pos:start="39:13" pos:end="39:63"><call pos:start="39:13" pos:end="39:63"><name pos:start="39:13" pos:end="39:26">ehci_set_state</name><argument_list pos:start="39:27" pos:end="39:63">(<argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:28">q</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">ehci</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:44"><expr pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:37">q</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:44">async</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:62"><expr pos:start="39:47" pos:end="39:62"><name pos:start="39:47" pos:end="39:62">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:17">again</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:21">goto <name pos:start="43:18" pos:end="43:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:17">(<expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">q</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">async</name></name></expr>)</condition> <block pos:start="51:19" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:45">

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><call pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:23">ehci_set_usbsts</name><argument_list pos:start="53:24" pos:end="53:44">(<argument pos:start="53:25" pos:end="53:31"><expr pos:start="53:25" pos:end="53:31"><name pos:start="53:25" pos:end="53:31"><name pos:start="53:25" pos:end="53:25">q</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:31">ehci</name></name></expr></argument>, <argument pos:start="53:34" pos:end="53:43"><expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:43">USBSTS_REC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">p</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">usb_status</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:46"><name pos:start="59:21" pos:end="59:32">ehci_execute</name><argument_list pos:start="59:33" pos:end="59:46">(<argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><name pos:start="59:34" pos:end="59:34">p</name></expr></argument>, <argument pos:start="59:37" pos:end="59:45"><expr pos:start="59:37" pos:end="59:45"><literal type="string" pos:start="59:37" pos:end="59:45">"process"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:41">(<expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">p</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">usb_status</name></name> <operator pos:start="61:23" pos:end="61:24">==</operator> <name pos:start="61:26" pos:end="61:40">USB_RET_PROCERR</name></expr>)</condition> <block pos:start="61:43" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:13">again</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">-</operator><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:39">(<expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">p</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">usb_status</name></name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:38">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="69:41" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:17">

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><call pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:21">ehci_flush_qh</name><argument_list pos:start="71:22" pos:end="71:24">(<argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><call pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:36">trace_usb_ehci_packet_action</name><argument_list pos:start="73:37" pos:end="73:58">(<argument pos:start="73:38" pos:end="73:45"><expr pos:start="73:38" pos:end="73:45"><name pos:start="73:38" pos:end="73:45"><name pos:start="73:38" pos:end="73:38">p</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:45">queue</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:48"><expr pos:start="73:48" pos:end="73:48"><name pos:start="73:48" pos:end="73:48">p</name></expr></argument>, <argument pos:start="73:51" pos:end="73:57"><expr pos:start="73:51" pos:end="73:57"><literal type="string" pos:start="73:51" pos:end="73:57">"async"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:9">p</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">async</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:38">EHCI_ASYNC_INFLIGHT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:60"><expr pos:start="77:9" pos:end="77:59"><call pos:start="77:9" pos:end="77:59"><name pos:start="77:9" pos:end="77:22">ehci_set_state</name><argument_list pos:start="77:23" pos:end="77:59">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:24">q</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:30">ehci</name></name></expr></argument>, <argument pos:start="77:33" pos:end="77:40"><expr pos:start="77:33" pos:end="77:40"><name pos:start="77:33" pos:end="77:40"><name pos:start="77:33" pos:end="77:33">q</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:40">async</name></name></expr></argument>, <argument pos:start="77:43" pos:end="77:58"><expr pos:start="77:43" pos:end="77:58"><name pos:start="77:43" pos:end="77:58">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:65"><expr pos:start="79:9" pos:end="79:64"><name pos:start="79:9" pos:end="79:13">again</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <ternary pos:start="79:17" pos:end="79:64"><condition pos:start="79:17" pos:end="79:57"><expr pos:start="79:17" pos:end="79:55"><operator pos:start="79:17" pos:end="79:17">(</operator><call pos:start="79:18" pos:end="79:35"><name pos:start="79:18" pos:end="79:32">ehci_fill_queue</name><argument_list pos:start="79:33" pos:end="79:35">(<argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><name pos:start="79:34" pos:end="79:34">p</name></expr></argument>)</argument_list></call> <operator pos:start="79:37" pos:end="79:38">==</operator> <name pos:start="79:40" pos:end="79:54">USB_RET_PROCERR</name><operator pos:start="79:55" pos:end="79:55">)</operator></expr> ?</condition><then pos:start="79:59" pos:end="79:60"> <expr pos:start="79:59" pos:end="79:60"><operator pos:start="79:59" pos:end="79:59">-</operator><literal type="number" pos:start="79:60" pos:end="79:60">1</literal></expr> </then><else pos:start="79:62" pos:end="79:64">: <expr pos:start="79:64" pos:end="79:64"><literal type="number" pos:start="79:64" pos:end="79:64">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:53"><expr pos:start="87:5" pos:end="87:52"><call pos:start="87:5" pos:end="87:52"><name pos:start="87:5" pos:end="87:18">ehci_set_state</name><argument_list pos:start="87:19" pos:end="87:52">(<argument pos:start="87:20" pos:end="87:26"><expr pos:start="87:20" pos:end="87:26"><name pos:start="87:20" pos:end="87:26"><name pos:start="87:20" pos:end="87:20">q</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:26">ehci</name></name></expr></argument>, <argument pos:start="87:29" pos:end="87:36"><expr pos:start="87:29" pos:end="87:36"><name pos:start="87:29" pos:end="87:36"><name pos:start="87:29" pos:end="87:29">q</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:36">async</name></name></expr></argument>, <argument pos:start="87:39" pos:end="87:51"><expr pos:start="87:39" pos:end="87:51"><name pos:start="87:39" pos:end="87:51">EST_EXECUTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:14"><expr pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:9">again</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <literal type="number" pos:start="89:13" pos:end="89:13">1</literal></expr>;</expr_stmt>



<label pos:start="93:1" pos:end="93:4"><name pos:start="93:1" pos:end="93:3">out</name>:</label>

    <return pos:start="95:5" pos:end="95:17">return <expr pos:start="95:12" pos:end="95:16"><name pos:start="95:12" pos:end="95:16">again</name></expr>;</return>

</block_content>}</block></function>
</unit>
