<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24927.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qcow2_load_vmstate</name><parameter_list pos:start="1:30" pos:end="3:42">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:64">QEMUIOVector</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">qiov</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:37">int64_t</name></type> <name pos:start="3:39" pos:end="3:41">pos</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BDRVQcow2State</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:34">= <expr pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:26">bs</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:24">zero_beyond_eof</name> <init pos:start="9:26" pos:end="9:46">= <expr pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:29">bs</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:46">zero_beyond_eof</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><call pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:16">BLKDBG_EVENT</name><argument_list pos:start="15:17" pos:end="15:47">(<argument pos:start="15:18" pos:end="15:25"><expr pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:19">bs</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:25">file</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:46"><expr pos:start="15:28" pos:end="15:46"><name pos:start="15:28" pos:end="15:46">BLKDBG_VMSTATE_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:23">zero_beyond_eof</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:31">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:63"><name pos:start="19:11" pos:end="19:21">bdrv_preadv</name><argument_list pos:start="19:22" pos:end="19:63">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">bs</name></expr></argument>, <argument pos:start="19:27" pos:end="19:56"><expr pos:start="19:27" pos:end="19:56"><call pos:start="19:27" pos:end="19:50"><name pos:start="19:27" pos:end="19:47">qcow2_vm_state_offset</name><argument_list pos:start="19:48" pos:end="19:50">(<argument pos:start="19:49" pos:end="19:49"><expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">s</name></expr></argument>)</argument_list></call> <operator pos:start="19:52" pos:end="19:52">+</operator> <name pos:start="19:54" pos:end="19:56">pos</name></expr></argument>, <argument pos:start="19:59" pos:end="19:62"><expr pos:start="19:59" pos:end="19:62"><name pos:start="19:59" pos:end="19:62">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:6">bs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:23">zero_beyond_eof</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:41">zero_beyond_eof</name></expr>;</expr_stmt>



    <return pos:start="25:5" pos:end="25:15">return <expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
