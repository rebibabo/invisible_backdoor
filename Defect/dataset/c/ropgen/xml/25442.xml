<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25442.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">scsi_read_complete</name><parameter_list pos:start="1:31" pos:end="1:54">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:53"><decl pos:start="1:47" pos:end="1:53"><type pos:start="1:47" pos:end="1:53"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:53">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:36">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SCSIGenericReq</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name> <init pos:start="5:23" pos:end="5:48">= <expr pos:start="5:25" pos:end="5:48"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:39">SCSIGenericReq</name> <operator pos:start="5:41" pos:end="5:41">*</operator><operator pos:start="5:42" pos:end="5:42">)</operator><name pos:start="5:43" pos:end="5:48">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">ret</name></expr>)</condition> <block pos:start="11:14" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:15">

        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><call pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:15">DPRINTF</name><argument_list pos:start="13:16" pos:end="13:41">(<argument pos:start="13:17" pos:end="13:35"><expr pos:start="13:17" pos:end="13:35"><literal type="string" pos:start="13:17" pos:end="13:35">"IO error ret %d\n"</literal></expr></argument>, <argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><call pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:29">scsi_command_complete</name><argument_list pos:start="15:30" pos:end="15:37">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">r</name></expr></argument>, <argument pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:7">len</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:11">r</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:22">io_header</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:32">dxfer_len</name></name> <operator pos:start="21:34" pos:end="21:34">-</operator> <name pos:start="21:36" pos:end="21:53"><name pos:start="21:36" pos:end="21:36">r</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:47">io_header</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:53">resid</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><call pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:11">DPRINTF</name><argument_list pos:start="23:12" pos:end="23:60">(<argument pos:start="23:13" pos:end="23:42"><expr pos:start="23:13" pos:end="23:42"><literal type="string" pos:start="23:13" pos:end="23:42">"Data ready tag=0x%x len=%d\n"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:54"><expr pos:start="23:45" pos:end="23:54"><name pos:start="23:45" pos:end="23:54"><name pos:start="23:45" pos:end="23:45">r</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:50">req</name><operator pos:start="23:51" pos:end="23:51">.</operator><name pos:start="23:52" pos:end="23:54">tag</name></name></expr></argument>, <argument pos:start="23:57" pos:end="23:59"><expr pos:start="23:57" pos:end="23:59"><name pos:start="23:57" pos:end="23:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">r</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">len</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">-</operator><literal type="number" pos:start="27:15" pos:end="27:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:72"><expr pos:start="29:5" pos:end="29:71"><call pos:start="29:5" pos:end="29:71"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:5">r</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">req</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:14">bus</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:24">complete</name></name><argument_list pos:start="29:25" pos:end="29:71">(<argument pos:start="29:26" pos:end="29:35"><expr pos:start="29:26" pos:end="29:35"><name pos:start="29:26" pos:end="29:35"><name pos:start="29:26" pos:end="29:26">r</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">req</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:35">bus</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:53"><expr pos:start="29:38" pos:end="29:53"><name pos:start="29:38" pos:end="29:53">SCSI_REASON_DATA</name></expr></argument>, <argument pos:start="29:56" pos:end="29:65"><expr pos:start="29:56" pos:end="29:65"><name pos:start="29:56" pos:end="29:65"><name pos:start="29:56" pos:end="29:56">r</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:61">req</name><operator pos:start="29:62" pos:end="29:62">.</operator><name pos:start="29:63" pos:end="29:65">tag</name></name></expr></argument>, <argument pos:start="29:68" pos:end="29:70"><expr pos:start="29:68" pos:end="29:70"><name pos:start="29:68" pos:end="29:70">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:36"><if pos:start="31:5" pos:end="33:36">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:14">==</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:36"><block_content pos:start="33:9" pos:end="33:36">

        <expr_stmt pos:start="33:9" pos:end="33:36"><expr pos:start="33:9" pos:end="33:35"><call pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:29">scsi_command_complete</name><argument_list pos:start="33:30" pos:end="33:35">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">r</name></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
