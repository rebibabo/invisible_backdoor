<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2345.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:30">usb_msd_init</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:37">USBBus</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">bus</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:17">nr</name><init pos:start="5:18" pos:end="5:19">=<expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:11">id</name><index pos:start="7:12" pos:end="7:14">[<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">DriveInfo</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">USBDevice</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:18">p1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:16"><name pos:start="17:10" pos:end="17:12">fmt</name><index pos:start="17:13" pos:end="17:16">[<expr pos:start="17:14" pos:end="17:15"><literal type="number" pos:start="17:14" pos:end="17:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:55">/* parse -usbdevice disk: syntax into drive opts */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><call pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:12">snprintf</name><argument_list pos:start="23:13" pos:end="23:43">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">id</name></expr></argument>, <argument pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:27"><sizeof pos:start="23:18" pos:end="23:27">sizeof<argument_list pos:start="23:24" pos:end="23:27">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><literal type="string" pos:start="23:30" pos:end="23:36">"usb%d"</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><name pos:start="23:39" pos:end="23:40">nr</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:8">opts</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:59"><name pos:start="25:12" pos:end="25:27">qemu_opts_create</name><argument_list pos:start="25:28" pos:end="25:59">(<argument pos:start="25:29" pos:end="25:51"><expr pos:start="25:29" pos:end="25:51"><call pos:start="25:29" pos:end="25:51"><name pos:start="25:29" pos:end="25:42">qemu_find_opts</name><argument_list pos:start="25:43" pos:end="25:51">(<argument pos:start="25:44" pos:end="25:50"><expr pos:start="25:44" pos:end="25:50"><literal type="string" pos:start="25:44" pos:end="25:50">"drive"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:54" pos:end="25:55"><expr pos:start="25:54" pos:end="25:55"><name pos:start="25:54" pos:end="25:55">id</name></expr></argument>, <argument pos:start="25:58" pos:end="25:58"><expr pos:start="25:58" pos:end="25:58"><literal type="number" pos:start="25:58" pos:end="25:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:6">p1</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:15">strchr</name><argument_list pos:start="29:16" pos:end="29:30">(<argument pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:24">filename</name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><literal type="char" pos:start="29:27" pos:end="29:29">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="55:5"><if pos:start="31:5" pos:end="55:5">if <condition pos:start="31:8" pos:end="31:13">(<expr pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:10">p1</name><operator pos:start="31:11" pos:end="31:12">++</operator></expr>)</condition> <block pos:start="31:15" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:22">

        <decl_stmt pos:start="33:9" pos:end="33:23"><decl pos:start="33:9" pos:end="33:22"><type pos:start="33:9" pos:end="33:20"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:18">char</name> <modifier pos:start="33:20" pos:end="33:20">*</modifier></type><name pos:start="33:21" pos:end="33:22">p2</name></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="51:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:47">(<expr pos:start="37:13" pos:end="37:46"><call pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:20">strstart</name><argument_list pos:start="37:21" pos:end="37:46">(<argument pos:start="37:22" pos:end="37:29"><expr pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:29">filename</name></expr></argument>, <argument pos:start="37:32" pos:end="37:40"><expr pos:start="37:32" pos:end="37:40"><literal type="string" pos:start="37:32" pos:end="37:40">"format="</literal></expr></argument>, <argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:45">p2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:49" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:46">

            <decl_stmt pos:start="39:13" pos:end="39:48"><decl pos:start="39:13" pos:end="39:47"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:19">len</name> <init pos:start="39:21" pos:end="39:47">= <expr pos:start="39:23" pos:end="39:47"><call pos:start="39:23" pos:end="39:47"><name pos:start="39:23" pos:end="39:25">MIN</name><argument_list pos:start="39:26" pos:end="39:47">(<argument pos:start="39:27" pos:end="39:33"><expr pos:start="39:27" pos:end="39:33"><name pos:start="39:27" pos:end="39:28">p1</name> <operator pos:start="39:30" pos:end="39:30">-</operator> <name pos:start="39:32" pos:end="39:33">p2</name></expr></argument>, <argument pos:start="39:36" pos:end="39:46"><expr pos:start="39:36" pos:end="39:46"><sizeof pos:start="39:36" pos:end="39:46">sizeof<argument_list pos:start="39:42" pos:end="39:46">(<argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">fmt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><call pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:19">pstrcpy</name><argument_list pos:start="41:20" pos:end="41:33">(<argument pos:start="41:21" pos:end="41:23"><expr pos:start="41:21" pos:end="41:23"><name pos:start="41:21" pos:end="41:23">fmt</name></expr></argument>, <argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">len</name></expr></argument>, <argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:46"><expr pos:start="43:13" pos:end="43:45"><call pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:24">qemu_opt_set</name><argument_list pos:start="43:25" pos:end="43:45">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">opts</name></expr></argument>, <argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><literal type="string" pos:start="43:32" pos:end="43:39">"format"</literal></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="51:9">else if <condition pos:start="45:19" pos:end="45:36">(<expr pos:start="45:20" pos:end="45:35"><operator pos:start="45:20" pos:end="45:20">*</operator><name pos:start="45:21" pos:end="45:28">filename</name> <operator pos:start="45:30" pos:end="45:31">!=</operator> <literal type="char" pos:start="45:33" pos:end="45:35">':'</literal></expr>)</condition> <block pos:start="45:38" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:24">

            <expr_stmt pos:start="47:13" pos:end="47:74"><expr pos:start="47:13" pos:end="47:73"><call pos:start="47:13" pos:end="47:73"><name pos:start="47:13" pos:end="47:18">printf</name><argument_list pos:start="47:19" pos:end="47:73">(<argument pos:start="47:20" pos:end="47:62"><expr pos:start="47:20" pos:end="47:62"><literal type="string" pos:start="47:20" pos:end="47:62">"unrecognized USB mass-storage option %s\n"</literal></expr></argument>, <argument pos:start="47:65" pos:end="47:72"><expr pos:start="47:65" pos:end="47:72"><name pos:start="47:65" pos:end="47:72">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:24">return <expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:16">filename</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:21">p1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><operator pos:start="57:9" pos:end="57:9">!</operator><operator pos:start="57:10" pos:end="57:10">*</operator><name pos:start="57:11" pos:end="57:18">filename</name></expr>)</condition> <block pos:start="57:21" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:20">

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><call pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:14">printf</name><argument_list pos:start="59:15" pos:end="59:53">(<argument pos:start="59:16" pos:end="59:52"><expr pos:start="59:16" pos:end="59:52"><literal type="string" pos:start="59:16" pos:end="59:52">"block device specification needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><call pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:16">qemu_opt_set</name><argument_list pos:start="65:17" pos:end="65:40">(<argument pos:start="65:18" pos:end="65:21"><expr pos:start="65:18" pos:end="65:21"><name pos:start="65:18" pos:end="65:21">opts</name></expr></argument>, <argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><literal type="string" pos:start="65:24" pos:end="65:29">"file"</literal></expr></argument>, <argument pos:start="65:32" pos:end="65:39"><expr pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><call pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:16">qemu_opt_set</name><argument_list pos:start="67:17" pos:end="67:36">(<argument pos:start="67:18" pos:end="67:21"><expr pos:start="67:18" pos:end="67:21"><name pos:start="67:18" pos:end="67:21">opts</name></expr></argument>, <argument pos:start="67:24" pos:end="67:27"><expr pos:start="67:24" pos:end="67:27"><literal type="string" pos:start="67:24" pos:end="67:27">"if"</literal></expr></argument>, <argument pos:start="67:30" pos:end="67:35"><expr pos:start="67:30" pos:end="67:35"><literal type="string" pos:start="67:30" pos:end="67:35">"none"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:27">/* create host drive */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:9">dinfo</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:22">drive_init</name><argument_list pos:start="73:23" pos:end="73:31">(<argument pos:start="73:24" pos:end="73:27"><expr pos:start="73:24" pos:end="73:27"><name pos:start="73:24" pos:end="73:27">opts</name></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:15">(<expr pos:start="75:9" pos:end="75:14"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:14">dinfo</name></expr>)</condition> <block pos:start="75:17" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:20">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:21">qemu_opts_del</name><argument_list pos:start="77:22" pos:end="77:27">(<argument pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:20">return <expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:29">/* create guest device */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:41"><expr pos:start="87:5" pos:end="87:40"><name pos:start="87:5" pos:end="87:7">dev</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:40"><name pos:start="87:11" pos:end="87:20">usb_create</name><argument_list pos:start="87:21" pos:end="87:40">(<argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:24">bus</name></expr></argument>, <argument pos:start="87:27" pos:end="87:39"><expr pos:start="87:27" pos:end="87:39"><literal type="string" pos:start="87:27" pos:end="87:39">"usb-storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:13">(<expr pos:start="89:9" pos:end="89:12"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:12">dev</name></expr>)</condition> <block pos:start="89:15" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:20">

        <return pos:start="91:9" pos:end="91:20">return <expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:66">(<expr pos:start="95:9" pos:end="95:65"><call pos:start="95:9" pos:end="95:61"><name pos:start="95:9" pos:end="95:27">qdev_prop_set_drive</name><argument_list pos:start="95:28" pos:end="95:61">(<argument pos:start="95:29" pos:end="95:38"><expr pos:start="95:29" pos:end="95:38"><operator pos:start="95:29" pos:end="95:29">&amp;</operator><name pos:start="95:30" pos:end="95:38"><name pos:start="95:30" pos:end="95:32">dev</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:38">qdev</name></name></expr></argument>, <argument pos:start="95:41" pos:end="95:47"><expr pos:start="95:41" pos:end="95:47"><literal type="string" pos:start="95:41" pos:end="95:47">"drive"</literal></expr></argument>, <argument pos:start="95:50" pos:end="95:60"><expr pos:start="95:50" pos:end="95:60"><name pos:start="95:50" pos:end="95:60"><name pos:start="95:50" pos:end="95:54">dinfo</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:63" pos:end="95:63">&lt;</operator> <literal type="number" pos:start="95:65" pos:end="95:65">0</literal></expr>)</condition> <block pos:start="95:68" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:20">

        <expr_stmt pos:start="97:9" pos:end="97:30"><expr pos:start="97:9" pos:end="97:29"><call pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:17">qdev_free</name><argument_list pos:start="97:18" pos:end="97:29">(<argument pos:start="97:19" pos:end="97:28"><expr pos:start="97:19" pos:end="97:28"><operator pos:start="97:19" pos:end="97:19">&amp;</operator><name pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:22">dev</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:28">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:20">return <expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="105:20"><if pos:start="103:5" pos:end="105:20">if <condition pos:start="103:8" pos:end="103:34">(<expr pos:start="103:9" pos:end="103:33"><call pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:17">qdev_init</name><argument_list pos:start="103:18" pos:end="103:29">(<argument pos:start="103:19" pos:end="103:28"><expr pos:start="103:19" pos:end="103:28"><operator pos:start="103:19" pos:end="103:19">&amp;</operator><name pos:start="103:20" pos:end="103:28"><name pos:start="103:20" pos:end="103:22">dev</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:28">qdev</name></name></expr></argument>)</argument_list></call> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:20"><block_content pos:start="105:9" pos:end="105:20">

        <return pos:start="105:9" pos:end="105:20">return <expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
