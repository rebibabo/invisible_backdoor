<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19740.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">dump_cleanup</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">DumpState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><call pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:26">guest_phys_blocks_free</name><argument_list pos:start="9:27" pos:end="9:49">(<argument pos:start="9:28" pos:end="9:48"><expr pos:start="9:28" pos:end="9:48"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:48"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:48">guest_phys_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><call pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:28">memory_mapping_list_free</name><argument_list pos:start="11:29" pos:end="11:38">(<argument pos:start="11:30" pos:end="11:37"><expr pos:start="11:30" pos:end="11:37"><operator pos:start="11:30" pos:end="11:30">&amp;</operator><name pos:start="11:31" pos:end="11:37"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:37">list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fd</name></name> <operator pos:start="13:15" pos:end="13:16">!=</operator> <operator pos:start="13:18" pos:end="13:18">-</operator><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>)</condition> <block pos:start="13:22" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><call pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:13">close</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:19"><expr pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">resume</name></name></expr>)</condition> <block pos:start="19:20" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><call pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:16">vm_start</name><argument_list pos:start="21:17" pos:end="21:18">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
