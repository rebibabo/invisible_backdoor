<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20587.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">rx_produce</name><parameter_list pos:start="1:15" pos:end="3:72">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:20">World</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:27">world</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:37">uint32_t</name></type> <name pos:start="1:39" pos:end="1:43">pport</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:38"><decl pos:start="3:16" pos:end="3:38"><type pos:start="3:16" pos:end="3:38"><specifier pos:start="3:16" pos:end="3:20">const</specifier> <name pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:27">struct</name> <name pos:start="3:29" pos:end="3:33">iovec</name></name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:38">iov</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:50">iovcnt</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:71"><decl pos:start="3:53" pos:end="3:71"><type pos:start="3:53" pos:end="3:71"><name pos:start="3:53" pos:end="3:59">uint8_t</name></type> <name pos:start="3:61" pos:end="3:71">copy_to_cpu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="183:1">{<block_content pos:start="7:5" pos:end="181:15">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">Rocker</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:13">r</name> <init pos:start="7:15" pos:end="7:35">= <expr pos:start="7:17" pos:end="7:35"><call pos:start="7:17" pos:end="7:35"><name pos:start="7:17" pos:end="7:28">world_rocker</name><argument_list pos:start="7:29" pos:end="7:35">(<argument pos:start="7:30" pos:end="7:34"><expr pos:start="7:30" pos:end="7:34"><name pos:start="7:30" pos:end="7:34">world</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">dev</name> <init pos:start="9:20" pos:end="9:35">= <expr pos:start="9:22" pos:end="9:35"><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:31">PCIDevice</name> <operator pos:start="9:33" pos:end="9:33">*</operator><operator pos:start="9:34" pos:end="9:34">)</operator><name pos:start="9:35" pos:end="9:35">r</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">DescRing</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">ring</name> <init pos:start="11:20" pos:end="11:58">= <expr pos:start="11:22" pos:end="11:58"><call pos:start="11:22" pos:end="11:58"><name pos:start="11:22" pos:end="11:48">rocker_get_rx_ring_by_pport</name><argument_list pos:start="11:49" pos:end="11:58">(<argument pos:start="11:50" pos:end="11:50"><expr pos:start="11:50" pos:end="11:50"><name pos:start="11:50" pos:end="11:50">r</name></expr></argument>, <argument pos:start="11:53" pos:end="11:57"><expr pos:start="11:53" pos:end="11:57"><name pos:start="11:53" pos:end="11:57">pport</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">DescInfo</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">info</name> <init pos:start="13:20" pos:end="13:47">= <expr pos:start="13:22" pos:end="13:47"><call pos:start="13:22" pos:end="13:47"><name pos:start="13:22" pos:end="13:41">desc_ring_fetch_desc</name><argument_list pos:start="13:42" pos:end="13:47">(<argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">ring</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:44"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:20">data_size</name> <init pos:start="17:22" pos:end="17:44">= <expr pos:start="17:24" pos:end="17:44"><call pos:start="17:24" pos:end="17:44"><name pos:start="17:24" pos:end="17:31">iov_size</name><argument_list pos:start="17:32" pos:end="17:44">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">iov</name></expr></argument>, <argument pos:start="17:38" pos:end="17:43"><expr pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:43">iovcnt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint16_t</name></type> <name pos:start="21:14" pos:end="21:21">rx_flags</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint16_t</name></type> <name pos:start="23:14" pos:end="23:20">rx_csum</name> <init pos:start="23:22" pos:end="23:24">= <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:10">size_t</name></type> <name pos:start="25:12" pos:end="25:19">tlv_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:43"><decl pos:start="27:5" pos:end="27:42"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:13">RockerTlv</name> <modifier pos:start="27:15" pos:end="27:15">*</modifier></type><name pos:start="27:16" pos:end="27:42"><name pos:start="27:16" pos:end="27:19">tlvs</name><index pos:start="27:20" pos:end="27:42">[<expr pos:start="27:21" pos:end="27:41"><name pos:start="27:21" pos:end="27:37">ROCKER_TLV_RX_MAX</name> <operator pos:start="27:39" pos:end="27:39">+</operator> <literal type="number" pos:start="27:41" pos:end="27:41">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:10">hwaddr</name></type> <name pos:start="29:12" pos:end="29:20">frag_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:26"><decl pos:start="31:5" pos:end="31:25"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint16_t</name></type> <name pos:start="31:14" pos:end="31:25">frag_max_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:12"><decl pos:start="33:5" pos:end="33:11"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:12"><decl pos:start="35:5" pos:end="35:11"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:14">(<expr pos:start="39:9" pos:end="39:13"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:13">info</name></expr>)</condition> <block pos:start="39:16" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:30">ROCKER_ENOBUFS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:7">buf</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:35"><name pos:start="47:11" pos:end="47:22">desc_get_buf</name><argument_list pos:start="47:23" pos:end="47:35">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">info</name></expr></argument>, <argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:13">(<expr pos:start="49:9" pos:end="49:12"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:12">buf</name></expr>)</condition> <block pos:start="49:15" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">err</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">-</operator><name pos:start="51:16" pos:end="51:27">ROCKER_ENXIO</name></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:72"><expr pos:start="57:5" pos:end="57:71"><call pos:start="57:5" pos:end="57:71"><name pos:start="57:5" pos:end="57:20">rocker_tlv_parse</name><argument_list pos:start="57:21" pos:end="57:71">(<argument pos:start="57:22" pos:end="57:25"><expr pos:start="57:22" pos:end="57:25"><name pos:start="57:22" pos:end="57:25">tlvs</name></expr></argument>, <argument pos:start="57:28" pos:end="57:44"><expr pos:start="57:28" pos:end="57:44"><name pos:start="57:28" pos:end="57:44">ROCKER_TLV_RX_MAX</name></expr></argument>, <argument pos:start="57:47" pos:end="57:49"><expr pos:start="57:47" pos:end="57:49"><name pos:start="57:47" pos:end="57:49">buf</name></expr></argument>, <argument pos:start="57:52" pos:end="57:70"><expr pos:start="57:52" pos:end="57:70"><call pos:start="57:52" pos:end="57:70"><name pos:start="57:52" pos:end="57:64">desc_tlv_size</name><argument_list pos:start="57:65" pos:end="57:70">(<argument pos:start="57:66" pos:end="57:69"><expr pos:start="57:66" pos:end="57:69"><name pos:start="57:66" pos:end="57:69">info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="63:42">(<expr pos:start="61:9" pos:end="63:41"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:38"><name pos:start="61:10" pos:end="61:13">tlvs</name><index pos:start="61:14" pos:end="61:38">[<expr pos:start="61:15" pos:end="61:37"><name pos:start="61:15" pos:end="61:37">ROCKER_TLV_RX_FRAG_ADDR</name></expr>]</index></name> <operator pos:start="61:40" pos:end="61:41">||</operator>

        <operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:41"><name pos:start="63:10" pos:end="63:13">tlvs</name><index pos:start="63:14" pos:end="63:41">[<expr pos:start="63:15" pos:end="63:40"><name pos:start="63:15" pos:end="63:40">ROCKER_TLV_RX_FRAG_MAX_LEN</name></expr>]</index></name></expr>)</condition> <block pos:start="63:44" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:17">

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:11">err</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <operator pos:start="65:15" pos:end="65:15">-</operator><name pos:start="65:16" pos:end="65:28">ROCKER_EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:17">goto <name pos:start="67:14" pos:end="67:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:67"><expr pos:start="73:5" pos:end="73:66"><name pos:start="73:5" pos:end="73:13">frag_addr</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:66"><name pos:start="73:17" pos:end="73:35">rocker_tlv_get_le64</name><argument_list pos:start="73:36" pos:end="73:66">(<argument pos:start="73:37" pos:end="73:65"><expr pos:start="73:37" pos:end="73:65"><name pos:start="73:37" pos:end="73:65"><name pos:start="73:37" pos:end="73:40">tlvs</name><index pos:start="73:41" pos:end="73:65">[<expr pos:start="73:42" pos:end="73:64"><name pos:start="73:42" pos:end="73:64">ROCKER_TLV_RX_FRAG_ADDR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:73"><expr pos:start="75:5" pos:end="75:72"><name pos:start="75:5" pos:end="75:16">frag_max_len</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:72"><name pos:start="75:20" pos:end="75:38">rocker_tlv_get_le16</name><argument_list pos:start="75:39" pos:end="75:72">(<argument pos:start="75:40" pos:end="75:71"><expr pos:start="75:40" pos:end="75:71"><name pos:start="75:40" pos:end="75:71"><name pos:start="75:40" pos:end="75:43">tlvs</name><index pos:start="75:44" pos:end="75:71">[<expr pos:start="75:45" pos:end="75:70"><name pos:start="75:45" pos:end="75:70">ROCKER_TLV_RX_FRAG_MAX_LEN</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:33">(<expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:17">data_size</name> <operator pos:start="79:19" pos:end="79:19">&gt;</operator> <name pos:start="79:21" pos:end="79:32">frag_max_len</name></expr>)</condition> <block pos:start="79:35" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:17">

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:11">err</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">-</operator><name pos:start="81:16" pos:end="81:30">ROCKER_EMSGSIZE</name></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:20">(<expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:19">copy_to_cpu</name></expr>)</condition> <block pos:start="89:22" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:48">

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:16">rx_flags</name> <operator pos:start="91:18" pos:end="91:19">|=</operator> <name pos:start="91:21" pos:end="91:47">ROCKER_RX_FLAGS_FWD_OFFLOAD</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:32">/* XXX calc rx flags/csum */</comment>



    <expr_stmt pos:start="101:5" pos:end="109:55"><expr pos:start="101:5" pos:end="109:54"><name pos:start="101:5" pos:end="101:12">tlv_size</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:54"><name pos:start="101:16" pos:end="101:36">rocker_tlv_total_size</name><argument_list pos:start="101:37" pos:end="101:54">(<argument pos:start="101:38" pos:end="101:53"><expr pos:start="101:38" pos:end="101:53"><sizeof pos:start="101:38" pos:end="101:53">sizeof<argument_list pos:start="101:44" pos:end="101:53">(<argument pos:start="101:45" pos:end="101:52"><expr pos:start="101:45" pos:end="101:52"><name pos:start="101:45" pos:end="101:52">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="101:56" pos:end="101:56">+</operator> <comment type="block" pos:start="101:58" pos:end="101:68">/* flags */</comment>

               <call pos:start="103:16" pos:end="103:54"><name pos:start="103:16" pos:end="103:36">rocker_tlv_total_size</name><argument_list pos:start="103:37" pos:end="103:54">(<argument pos:start="103:38" pos:end="103:53"><expr pos:start="103:38" pos:end="103:53"><sizeof pos:start="103:38" pos:end="103:53">sizeof<argument_list pos:start="103:44" pos:end="103:53">(<argument pos:start="103:45" pos:end="103:52"><expr pos:start="103:45" pos:end="103:52"><name pos:start="103:45" pos:end="103:52">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="103:56" pos:end="103:56">+</operator> <comment type="block" pos:start="103:58" pos:end="103:67">/* scum */</comment>

               <call pos:start="105:16" pos:end="105:54"><name pos:start="105:16" pos:end="105:36">rocker_tlv_total_size</name><argument_list pos:start="105:37" pos:end="105:54">(<argument pos:start="105:38" pos:end="105:53"><expr pos:start="105:38" pos:end="105:53"><sizeof pos:start="105:38" pos:end="105:53">sizeof<argument_list pos:start="105:44" pos:end="105:53">(<argument pos:start="105:45" pos:end="105:52"><expr pos:start="105:45" pos:end="105:52"><name pos:start="105:45" pos:end="105:52">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="105:56" pos:end="105:56">+</operator> <comment type="block" pos:start="105:58" pos:end="105:72">/* frag addr */</comment>

               <call pos:start="107:16" pos:end="107:54"><name pos:start="107:16" pos:end="107:36">rocker_tlv_total_size</name><argument_list pos:start="107:37" pos:end="107:54">(<argument pos:start="107:38" pos:end="107:53"><expr pos:start="107:38" pos:end="107:53"><sizeof pos:start="107:38" pos:end="107:53">sizeof<argument_list pos:start="107:44" pos:end="107:53">(<argument pos:start="107:45" pos:end="107:52"><expr pos:start="107:45" pos:end="107:52"><name pos:start="107:45" pos:end="107:52">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="107:56" pos:end="107:56">+</operator> <comment type="block" pos:start="107:58" pos:end="107:75">/* frag max len */</comment>

               <call pos:start="109:16" pos:end="109:54"><name pos:start="109:16" pos:end="109:36">rocker_tlv_total_size</name><argument_list pos:start="109:37" pos:end="109:54">(<argument pos:start="109:38" pos:end="109:53"><expr pos:start="109:38" pos:end="109:53"><sizeof pos:start="109:38" pos:end="109:53">sizeof<argument_list pos:start="109:44" pos:end="109:53">(<argument pos:start="109:45" pos:end="109:52"><expr pos:start="109:45" pos:end="109:52"><name pos:start="109:45" pos:end="109:52">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="109:58" pos:end="109:71">/* frag len */</comment>



    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:39">(<expr pos:start="113:9" pos:end="113:38"><name pos:start="113:9" pos:end="113:16">tlv_size</name> <operator pos:start="113:18" pos:end="113:18">&gt;</operator> <call pos:start="113:20" pos:end="113:38"><name pos:start="113:20" pos:end="113:32">desc_buf_size</name><argument_list pos:start="113:33" pos:end="113:38">(<argument pos:start="113:34" pos:end="113:37"><expr pos:start="113:34" pos:end="113:37"><name pos:start="113:34" pos:end="113:37">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:41" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:17">

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:11">err</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <operator pos:start="115:15" pos:end="115:15">-</operator><name pos:start="115:16" pos:end="115:30">ROCKER_EMSGSIZE</name></expr>;</expr_stmt>

        <goto pos:start="117:9" pos:end="117:17">goto <name pos:start="117:14" pos:end="117:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="131:7">/* TODO:

     * iov dma write can be optimized in similar way e1000 does it in

     * e1000_receive_iov. But maybe if would make sense to introduce

     * generic helper iov_dma_write.

     */</comment>



    <expr_stmt pos:start="135:5" pos:end="135:31"><expr pos:start="135:5" pos:end="135:30"><name pos:start="135:5" pos:end="135:8">data</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <call pos:start="135:12" pos:end="135:30"><name pos:start="135:12" pos:end="135:19">g_malloc</name><argument_list pos:start="135:20" pos:end="135:30">(<argument pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:29"><name pos:start="135:21" pos:end="135:29">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:14">(<expr pos:start="137:9" pos:end="137:13"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:13">data</name></expr>)</condition> <block pos:start="137:16" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:17">

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:11">err</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <operator pos:start="139:15" pos:end="139:15">-</operator><name pos:start="139:16" pos:end="139:28">ROCKER_ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="141:9" pos:end="141:17">goto <name pos:start="141:14" pos:end="141:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:48"><expr pos:start="145:5" pos:end="145:47"><call pos:start="145:5" pos:end="145:47"><name pos:start="145:5" pos:end="145:14">iov_to_buf</name><argument_list pos:start="145:15" pos:end="145:47">(<argument pos:start="145:16" pos:end="145:18"><expr pos:start="145:16" pos:end="145:18"><name pos:start="145:16" pos:end="145:18">iov</name></expr></argument>, <argument pos:start="145:21" pos:end="145:26"><expr pos:start="145:21" pos:end="145:26"><name pos:start="145:21" pos:end="145:26">iovcnt</name></expr></argument>, <argument pos:start="145:29" pos:end="145:29"><expr pos:start="145:29" pos:end="145:29"><literal type="number" pos:start="145:29" pos:end="145:29">0</literal></expr></argument>, <argument pos:start="145:32" pos:end="145:35"><expr pos:start="145:32" pos:end="145:35"><name pos:start="145:32" pos:end="145:35">data</name></expr></argument>, <argument pos:start="145:38" pos:end="145:46"><expr pos:start="145:38" pos:end="145:46"><name pos:start="145:38" pos:end="145:46">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:51"><expr pos:start="147:5" pos:end="147:50"><call pos:start="147:5" pos:end="147:50"><name pos:start="147:5" pos:end="147:17">pci_dma_write</name><argument_list pos:start="147:18" pos:end="147:50">(<argument pos:start="147:19" pos:end="147:21"><expr pos:start="147:19" pos:end="147:21"><name pos:start="147:19" pos:end="147:21">dev</name></expr></argument>, <argument pos:start="147:24" pos:end="147:32"><expr pos:start="147:24" pos:end="147:32"><name pos:start="147:24" pos:end="147:32">frag_addr</name></expr></argument>, <argument pos:start="147:35" pos:end="147:38"><expr pos:start="147:35" pos:end="147:38"><name pos:start="147:35" pos:end="147:38">data</name></expr></argument>, <argument pos:start="147:41" pos:end="147:49"><expr pos:start="147:41" pos:end="147:49"><name pos:start="147:41" pos:end="147:49">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:17"><expr pos:start="149:5" pos:end="149:16"><call pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:10">g_free</name><argument_list pos:start="149:11" pos:end="149:16">(<argument pos:start="149:12" pos:end="149:15"><expr pos:start="149:12" pos:end="149:15"><name pos:start="149:12" pos:end="149:15">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:12"><expr pos:start="153:5" pos:end="153:11"><name pos:start="153:5" pos:end="153:7">pos</name> <operator pos:start="153:9" pos:end="153:9">=</operator> <literal type="number" pos:start="153:11" pos:end="153:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:66"><expr pos:start="155:5" pos:end="155:65"><call pos:start="155:5" pos:end="155:65"><name pos:start="155:5" pos:end="155:23">rocker_tlv_put_le16</name><argument_list pos:start="155:24" pos:end="155:65">(<argument pos:start="155:25" pos:end="155:27"><expr pos:start="155:25" pos:end="155:27"><name pos:start="155:25" pos:end="155:27">buf</name></expr></argument>, <argument pos:start="155:30" pos:end="155:33"><expr pos:start="155:30" pos:end="155:33"><operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:33">pos</name></expr></argument>, <argument pos:start="155:36" pos:end="155:54"><expr pos:start="155:36" pos:end="155:54"><name pos:start="155:36" pos:end="155:54">ROCKER_TLV_RX_FLAGS</name></expr></argument>, <argument pos:start="155:57" pos:end="155:64"><expr pos:start="155:57" pos:end="155:64"><name pos:start="155:57" pos:end="155:64">rx_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:64"><expr pos:start="157:5" pos:end="157:63"><call pos:start="157:5" pos:end="157:63"><name pos:start="157:5" pos:end="157:23">rocker_tlv_put_le16</name><argument_list pos:start="157:24" pos:end="157:63">(<argument pos:start="157:25" pos:end="157:27"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:27">buf</name></expr></argument>, <argument pos:start="157:30" pos:end="157:33"><expr pos:start="157:30" pos:end="157:33"><operator pos:start="157:30" pos:end="157:30">&amp;</operator><name pos:start="157:31" pos:end="157:33">pos</name></expr></argument>, <argument pos:start="157:36" pos:end="157:53"><expr pos:start="157:36" pos:end="157:53"><name pos:start="157:36" pos:end="157:53">ROCKER_TLV_RX_CSUM</name></expr></argument>, <argument pos:start="157:56" pos:end="157:62"><expr pos:start="157:56" pos:end="157:62"><name pos:start="157:56" pos:end="157:62">rx_csum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:71"><expr pos:start="159:5" pos:end="159:70"><call pos:start="159:5" pos:end="159:70"><name pos:start="159:5" pos:end="159:23">rocker_tlv_put_le64</name><argument_list pos:start="159:24" pos:end="159:70">(<argument pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">buf</name></expr></argument>, <argument pos:start="159:30" pos:end="159:33"><expr pos:start="159:30" pos:end="159:33"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:33">pos</name></expr></argument>, <argument pos:start="159:36" pos:end="159:58"><expr pos:start="159:36" pos:end="159:58"><name pos:start="159:36" pos:end="159:58">ROCKER_TLV_RX_FRAG_ADDR</name></expr></argument>, <argument pos:start="159:61" pos:end="159:69"><expr pos:start="159:61" pos:end="159:69"><name pos:start="159:61" pos:end="159:69">frag_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:77"><expr pos:start="161:5" pos:end="161:76"><call pos:start="161:5" pos:end="161:76"><name pos:start="161:5" pos:end="161:23">rocker_tlv_put_le16</name><argument_list pos:start="161:24" pos:end="161:76">(<argument pos:start="161:25" pos:end="161:27"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:27">buf</name></expr></argument>, <argument pos:start="161:30" pos:end="161:33"><expr pos:start="161:30" pos:end="161:33"><operator pos:start="161:30" pos:end="161:30">&amp;</operator><name pos:start="161:31" pos:end="161:33">pos</name></expr></argument>, <argument pos:start="161:36" pos:end="161:61"><expr pos:start="161:36" pos:end="161:61"><name pos:start="161:36" pos:end="161:61">ROCKER_TLV_RX_FRAG_MAX_LEN</name></expr></argument>, <argument pos:start="161:64" pos:end="161:75"><expr pos:start="161:64" pos:end="161:75"><name pos:start="161:64" pos:end="161:75">frag_max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:70"><expr pos:start="163:5" pos:end="163:69"><call pos:start="163:5" pos:end="163:69"><name pos:start="163:5" pos:end="163:23">rocker_tlv_put_le16</name><argument_list pos:start="163:24" pos:end="163:69">(<argument pos:start="163:25" pos:end="163:27"><expr pos:start="163:25" pos:end="163:27"><name pos:start="163:25" pos:end="163:27">buf</name></expr></argument>, <argument pos:start="163:30" pos:end="163:33"><expr pos:start="163:30" pos:end="163:33"><operator pos:start="163:30" pos:end="163:30">&amp;</operator><name pos:start="163:31" pos:end="163:33">pos</name></expr></argument>, <argument pos:start="163:36" pos:end="163:57"><expr pos:start="163:36" pos:end="163:57"><name pos:start="163:36" pos:end="163:57">ROCKER_TLV_RX_FRAG_LEN</name></expr></argument>, <argument pos:start="163:60" pos:end="163:68"><expr pos:start="163:60" pos:end="163:68"><name pos:start="163:60" pos:end="163:68">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:39"><expr pos:start="167:5" pos:end="167:38"><name pos:start="167:5" pos:end="167:7">err</name> <operator pos:start="167:9" pos:end="167:9">=</operator> <call pos:start="167:11" pos:end="167:38"><name pos:start="167:11" pos:end="167:22">desc_set_buf</name><argument_list pos:start="167:23" pos:end="167:38">(<argument pos:start="167:24" pos:end="167:27"><expr pos:start="167:24" pos:end="167:27"><name pos:start="167:24" pos:end="167:27">info</name></expr></argument>, <argument pos:start="167:30" pos:end="167:37"><expr pos:start="167:30" pos:end="167:37"><name pos:start="167:30" pos:end="167:37">tlv_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="171:1" pos:end="171:4"><name pos:start="171:1" pos:end="171:3">out</name>:</label>

    <if_stmt pos:start="173:5" pos:end="177:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:39">(<expr pos:start="173:9" pos:end="173:38"><call pos:start="173:9" pos:end="173:38"><name pos:start="173:9" pos:end="173:27">desc_ring_post_desc</name><argument_list pos:start="173:28" pos:end="173:38">(<argument pos:start="173:29" pos:end="173:32"><expr pos:start="173:29" pos:end="173:32"><name pos:start="173:29" pos:end="173:32">ring</name></expr></argument>, <argument pos:start="173:35" pos:end="173:37"><expr pos:start="173:35" pos:end="173:37"><name pos:start="173:35" pos:end="173:37">err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:41" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:58">

        <expr_stmt pos:start="175:9" pos:end="175:58"><expr pos:start="175:9" pos:end="175:57"><call pos:start="175:9" pos:end="175:57"><name pos:start="175:9" pos:end="175:23">rocker_msix_irq</name><argument_list pos:start="175:24" pos:end="175:57">(<argument pos:start="175:25" pos:end="175:25"><expr pos:start="175:25" pos:end="175:25"><name pos:start="175:25" pos:end="175:25">r</name></expr></argument>, <argument pos:start="175:28" pos:end="175:56"><expr pos:start="175:28" pos:end="175:56"><call pos:start="175:28" pos:end="175:56"><name pos:start="175:28" pos:end="175:45">ROCKER_MSIX_VEC_RX</name><argument_list pos:start="175:46" pos:end="175:56">(<argument pos:start="175:47" pos:end="175:55"><expr pos:start="175:47" pos:end="175:55"><name pos:start="175:47" pos:end="175:51">pport</name> <operator pos:start="175:53" pos:end="175:53">-</operator> <literal type="number" pos:start="175:55" pos:end="175:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="181:5" pos:end="181:15">return <expr pos:start="181:12" pos:end="181:14"><name pos:start="181:12" pos:end="181:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
