<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12244.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">get_cookies</name><parameter_list pos:start="1:23" pos:end="3:42">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">HTTPContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier><modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:53">cookies</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">path</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:41">domain</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="169:1">{<block_content pos:start="11:5" pos:end="167:13">

    <comment type="line" pos:start="7:5" pos:end="7:78">// cookie strings will look like Set-Cookie header field values.  Multiple</comment>

    <comment type="line" pos:start="9:5" pos:end="9:78">// Set-Cookie fields will result in multiple values delimited by a newline</comment>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:91"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">next</name></decl>, <decl pos:start="13:17" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:23">cookie</name></decl>, <decl pos:start="13:26" pos:end="13:61"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:37">set_cookies</name> <init pos:start="13:39" pos:end="13:61">= <expr pos:start="13:41" pos:end="13:61"><call pos:start="13:41" pos:end="13:61"><name pos:start="13:41" pos:end="13:49">av_strdup</name><argument_list pos:start="13:50" pos:end="13:61">(<argument pos:start="13:51" pos:end="13:60"><expr pos:start="13:51" pos:end="13:60"><name pos:start="13:51" pos:end="13:60"><name pos:start="13:51" pos:end="13:51">s</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:60">cookies</name></name></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="13:64" pos:end="13:90"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:64" pos:end="13:64">*</modifier></type><name pos:start="13:65" pos:end="13:76">cset_cookies</name> <init pos:start="13:78" pos:end="13:90">= <expr pos:start="13:80" pos:end="13:90"><name pos:start="13:80" pos:end="13:90">set_cookies</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="17:45"><if pos:start="17:5" pos:end="17:45">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:20">set_cookies</name></expr>)</condition><block type="pseudo" pos:start="17:23" pos:end="17:45"><block_content pos:start="17:23" pos:end="17:45"> <return pos:start="17:23" pos:end="17:45">return <expr pos:start="17:30" pos:end="17:44"><call pos:start="17:30" pos:end="17:44"><name pos:start="17:30" pos:end="17:36">AVERROR</name><argument_list pos:start="17:37" pos:end="17:44">(<argument pos:start="17:38" pos:end="17:43"><expr pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:43">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:12">cookies</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="159:5">while <condition pos:start="23:11" pos:end="23:58">(<expr pos:start="23:12" pos:end="23:57"><operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:18">cookie</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:56"><name pos:start="23:22" pos:end="23:30">av_strtok</name><argument_list pos:start="23:31" pos:end="23:56">(<argument pos:start="23:32" pos:end="23:42"><expr pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:42">set_cookies</name></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><literal type="string" pos:start="23:45" pos:end="23:48">"\n"</literal></expr></argument>, <argument pos:start="23:51" pos:end="23:55"><expr pos:start="23:51" pos:end="23:55"><operator pos:start="23:51" pos:end="23:51">&amp;</operator><name pos:start="23:52" pos:end="23:55">next</name></expr></argument>)</argument_list></call><operator pos:start="23:57" pos:end="23:57">)</operator></expr>)</condition> <block pos:start="23:60" pos:end="159:5">{<block_content pos:start="25:9" pos:end="157:9">

        <decl_stmt pos:start="25:9" pos:end="25:30"><decl pos:start="25:9" pos:end="25:29"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:25">domain_offset</name> <init pos:start="25:27" pos:end="25:29">= <expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:81"><decl pos:start="27:9" pos:end="27:19"><type pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">char</name> <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:19">param</name></decl>, <decl pos:start="27:22" pos:end="27:32"><type ref="prev" pos:start="27:9" pos:end="27:14"><modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:32">next_param</name></decl>, <decl pos:start="27:35" pos:end="27:49"><type ref="prev" pos:start="27:9" pos:end="27:14"><modifier pos:start="27:35" pos:end="27:35">*</modifier></type><name pos:start="27:36" pos:end="27:42">cdomain</name> <init pos:start="27:44" pos:end="27:49">= <expr pos:start="27:46" pos:end="27:49"><name pos:start="27:46" pos:end="27:49">NULL</name></expr></init></decl>, <decl pos:start="27:52" pos:end="27:64"><type ref="prev" pos:start="27:9" pos:end="27:14"><modifier pos:start="27:52" pos:end="27:52">*</modifier></type><name pos:start="27:53" pos:end="27:57">cpath</name> <init pos:start="27:59" pos:end="27:64">= <expr pos:start="27:61" pos:end="27:64"><name pos:start="27:61" pos:end="27:64">NULL</name></expr></init></decl>, <decl pos:start="27:67" pos:end="27:80"><type ref="prev" pos:start="27:9" pos:end="27:14"><modifier pos:start="27:67" pos:end="27:67">*</modifier></type><name pos:start="27:68" pos:end="27:73">cvalue</name> <init pos:start="27:75" pos:end="27:80">= <expr pos:start="27:77" pos:end="27:80"><name pos:start="27:77" pos:end="27:80">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:19">set_cookies</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:26">NULL</name></expr>;</expr_stmt>



        <while pos:start="33:9" pos:end="65:9">while <condition pos:start="33:15" pos:end="33:62">(<expr pos:start="33:16" pos:end="33:61"><operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:21">param</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:60"><name pos:start="33:25" pos:end="33:33">av_strtok</name><argument_list pos:start="33:34" pos:end="33:60">(<argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">cookie</name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><literal type="string" pos:start="33:43" pos:end="33:46">"; "</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:59"><expr pos:start="33:49" pos:end="33:59"><operator pos:start="33:49" pos:end="33:49">&amp;</operator><name pos:start="33:50" pos:end="33:59">next_param</name></expr></argument>)</argument_list></call><operator pos:start="33:61" pos:end="33:61">)</operator></expr>)</condition> <block pos:start="33:64" pos:end="65:9">{<block_content pos:start="35:13" pos:end="63:13">

            <expr_stmt pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:18">cookie</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:25">NULL</name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="63:13"><if pos:start="37:13" pos:end="42:13">if        <condition pos:start="37:23" pos:end="37:60">(<expr pos:start="37:24" pos:end="37:59"><operator pos:start="37:24" pos:end="37:24">!</operator><call pos:start="37:25" pos:end="37:59"><name pos:start="37:25" pos:end="37:38">av_strncasecmp</name><argument_list pos:start="37:39" pos:end="37:59">(<argument pos:start="37:40" pos:end="37:46"><expr pos:start="37:40" pos:end="37:46"><literal type="string" pos:start="37:40" pos:end="37:46">"path="</literal></expr></argument>,   <argument pos:start="37:51" pos:end="37:55"><expr pos:start="37:51" pos:end="37:55"><name pos:start="37:51" pos:end="37:55">param</name></expr></argument>, <argument pos:start="37:58" pos:end="37:58"><expr pos:start="37:58" pos:end="37:58"><literal type="number" pos:start="37:58" pos:end="37:58">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:62" pos:end="42:13">{<block_content pos:start="40:17" pos:end="40:45">


                <expr_stmt pos:start="40:17" pos:end="40:45"><expr pos:start="40:17" pos:end="40:44"><name pos:start="40:17" pos:end="40:21">cpath</name> <operator pos:start="40:23" pos:end="40:23">=</operator> <call pos:start="40:25" pos:end="40:44"><name pos:start="40:25" pos:end="40:33">av_strdup</name><argument_list pos:start="40:34" pos:end="40:44">(<argument pos:start="40:35" pos:end="40:43"><expr pos:start="40:35" pos:end="40:43"><operator pos:start="40:35" pos:end="40:35">&amp;</operator><name pos:start="40:36" pos:end="40:43"><name pos:start="40:36" pos:end="40:40">param</name><index pos:start="40:41" pos:end="40:43">[<expr pos:start="40:42" pos:end="40:42"><literal type="number" pos:start="40:42" pos:end="40:42">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="42:15" pos:end="47:13">else if <condition pos:start="42:23" pos:end="42:60">(<expr pos:start="42:24" pos:end="42:59"><operator pos:start="42:24" pos:end="42:24">!</operator><call pos:start="42:25" pos:end="42:59"><name pos:start="42:25" pos:end="42:38">av_strncasecmp</name><argument_list pos:start="42:39" pos:end="42:59">(<argument pos:start="42:40" pos:end="42:48"><expr pos:start="42:40" pos:end="42:48"><literal type="string" pos:start="42:40" pos:end="42:48">"domain="</literal></expr></argument>, <argument pos:start="42:51" pos:end="42:55"><expr pos:start="42:51" pos:end="42:55"><name pos:start="42:51" pos:end="42:55">param</name></expr></argument>, <argument pos:start="42:58" pos:end="42:58"><expr pos:start="42:58" pos:end="42:58"><literal type="number" pos:start="42:58" pos:end="42:58">7</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="42:62" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:47">


                <expr_stmt pos:start="45:17" pos:end="45:47"><expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:23">cdomain</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:46"><name pos:start="45:27" pos:end="45:35">av_strdup</name><argument_list pos:start="45:36" pos:end="45:46">(<argument pos:start="45:37" pos:end="45:45"><expr pos:start="45:37" pos:end="45:45"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:45"><name pos:start="45:38" pos:end="45:42">param</name><index pos:start="45:43" pos:end="45:45">[<expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="47:15" pos:end="57:13">else if <condition pos:start="47:23" pos:end="53:60">(<expr pos:start="47:24" pos:end="53:59"><operator pos:start="47:24" pos:end="47:24">!</operator><call pos:start="47:25" pos:end="47:59"><name pos:start="47:25" pos:end="47:38">av_strncasecmp</name><argument_list pos:start="47:39" pos:end="47:59">(<argument pos:start="47:40" pos:end="47:47"><expr pos:start="47:40" pos:end="47:47"><literal type="string" pos:start="47:40" pos:end="47:47">"secure"</literal></expr></argument>,  <argument pos:start="47:51" pos:end="47:55"><expr pos:start="47:51" pos:end="47:55"><name pos:start="47:51" pos:end="47:55">param</name></expr></argument>, <argument pos:start="47:58" pos:end="47:58"><expr pos:start="47:58" pos:end="47:58"><literal type="number" pos:start="47:58" pos:end="47:58">6</literal></expr></argument>)</argument_list></call> <operator pos:start="47:61" pos:end="47:62">||</operator>

                       <operator pos:start="49:24" pos:end="49:24">!</operator><call pos:start="49:25" pos:end="49:59"><name pos:start="49:25" pos:end="49:38">av_strncasecmp</name><argument_list pos:start="49:39" pos:end="49:59">(<argument pos:start="49:40" pos:end="49:48"><expr pos:start="49:40" pos:end="49:48"><literal type="string" pos:start="49:40" pos:end="49:48">"comment"</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:55"><expr pos:start="49:51" pos:end="49:55"><name pos:start="49:51" pos:end="49:55">param</name></expr></argument>, <argument pos:start="49:58" pos:end="49:58"><expr pos:start="49:58" pos:end="49:58"><literal type="number" pos:start="49:58" pos:end="49:58">7</literal></expr></argument>)</argument_list></call> <operator pos:start="49:61" pos:end="49:62">||</operator>

                       <operator pos:start="51:24" pos:end="51:24">!</operator><call pos:start="51:25" pos:end="51:59"><name pos:start="51:25" pos:end="51:38">av_strncasecmp</name><argument_list pos:start="51:39" pos:end="51:59">(<argument pos:start="51:40" pos:end="51:48"><expr pos:start="51:40" pos:end="51:48"><literal type="string" pos:start="51:40" pos:end="51:48">"max-age"</literal></expr></argument>, <argument pos:start="51:51" pos:end="51:55"><expr pos:start="51:51" pos:end="51:55"><name pos:start="51:51" pos:end="51:55">param</name></expr></argument>, <argument pos:start="51:58" pos:end="51:58"><expr pos:start="51:58" pos:end="51:58"><literal type="number" pos:start="51:58" pos:end="51:58">7</literal></expr></argument>)</argument_list></call> <operator pos:start="51:61" pos:end="51:62">||</operator>

                       <operator pos:start="53:24" pos:end="53:24">!</operator><call pos:start="53:25" pos:end="53:59"><name pos:start="53:25" pos:end="53:38">av_strncasecmp</name><argument_list pos:start="53:39" pos:end="53:59">(<argument pos:start="53:40" pos:end="53:48"><expr pos:start="53:40" pos:end="53:48"><literal type="string" pos:start="53:40" pos:end="53:48">"version"</literal></expr></argument>, <argument pos:start="53:51" pos:end="53:55"><expr pos:start="53:51" pos:end="53:55"><name pos:start="53:51" pos:end="53:55">param</name></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">7</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:62" pos:end="57:13">{<block_content>

                <comment type="line" pos:start="55:17" pos:end="55:62">// ignore Comment, Max-Age, Secure and Version</comment>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="63:13">else <block pos:start="57:20" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:42">

                <expr_stmt pos:start="59:17" pos:end="59:32"><expr pos:start="59:17" pos:end="59:31"><call pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:23">av_free</name><argument_list pos:start="59:24" pos:end="59:31">(<argument pos:start="59:25" pos:end="59:30"><expr pos:start="59:25" pos:end="59:30"><name pos:start="59:25" pos:end="59:30">cvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:42"><expr pos:start="61:17" pos:end="61:41"><name pos:start="61:17" pos:end="61:22">cvalue</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:41"><name pos:start="61:26" pos:end="61:34">av_strdup</name><argument_list pos:start="61:35" pos:end="61:41">(<argument pos:start="61:36" pos:end="61:40"><expr pos:start="61:36" pos:end="61:40"><name pos:start="61:36" pos:end="61:40">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <comment type="line" pos:start="69:9" pos:end="69:55">// ensure all of the necessary values are valid</comment>

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:42">(<expr pos:start="71:13" pos:end="71:41"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:20">cdomain</name> <operator pos:start="71:22" pos:end="71:23">||</operator> <operator pos:start="71:25" pos:end="71:25">!</operator><name pos:start="71:26" pos:end="71:30">cpath</name> <operator pos:start="71:32" pos:end="71:33">||</operator> <operator pos:start="71:35" pos:end="71:35">!</operator><name pos:start="71:36" pos:end="71:41">cvalue</name></expr>)</condition> <block pos:start="71:44" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:29">

            <expr_stmt pos:start="73:13" pos:end="75:81"><expr pos:start="73:13" pos:end="75:80"><call pos:start="73:13" pos:end="75:80"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="75:80">(<argument pos:start="73:20" pos:end="73:20"><expr pos:start="73:20" pos:end="73:20"><name pos:start="73:20" pos:end="73:20">s</name></expr></argument>, <argument pos:start="73:23" pos:end="73:36"><expr pos:start="73:23" pos:end="73:36"><name pos:start="73:23" pos:end="73:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:79"><expr pos:start="75:20" pos:end="75:79"><literal type="string" pos:start="75:20" pos:end="75:79">"Invalid cookie found, no value, path or domain specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:29">goto <name pos:start="77:18" pos:end="77:28">done_cookie</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="83:9" pos:end="83:60">// check if the request path matches the cookie path</comment>

        <if_stmt pos:start="85:9" pos:end="87:29"><if pos:start="85:9" pos:end="87:29">if <condition pos:start="85:12" pos:end="85:55">(<expr pos:start="85:13" pos:end="85:54"><call pos:start="85:13" pos:end="85:54"><name pos:start="85:13" pos:end="85:26">av_strncasecmp</name><argument_list pos:start="85:27" pos:end="85:54">(<argument pos:start="85:28" pos:end="85:31"><expr pos:start="85:28" pos:end="85:31"><name pos:start="85:28" pos:end="85:31">path</name></expr></argument>, <argument pos:start="85:34" pos:end="85:38"><expr pos:start="85:34" pos:end="85:38"><name pos:start="85:34" pos:end="85:38">cpath</name></expr></argument>, <argument pos:start="85:41" pos:end="85:53"><expr pos:start="85:41" pos:end="85:53"><call pos:start="85:41" pos:end="85:53"><name pos:start="85:41" pos:end="85:46">strlen</name><argument_list pos:start="85:47" pos:end="85:53">(<argument pos:start="85:48" pos:end="85:52"><expr pos:start="85:48" pos:end="85:52"><name pos:start="85:48" pos:end="85:52">cpath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:29"><block_content pos:start="87:13" pos:end="87:29">

            <goto pos:start="87:13" pos:end="87:29">goto <name pos:start="87:18" pos:end="87:28">done_cookie</name>;</goto></block_content></block></if></if_stmt>



        <comment type="line" pos:start="91:9" pos:end="91:70">// the domain should be at least the size of our cookie domain</comment>

        <expr_stmt pos:start="93:9" pos:end="93:57"><expr pos:start="93:9" pos:end="93:56"><name pos:start="93:9" pos:end="93:21">domain_offset</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:38"><name pos:start="93:25" pos:end="93:30">strlen</name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">domain</name></expr></argument>)</argument_list></call> <operator pos:start="93:40" pos:end="93:40">-</operator> <call pos:start="93:42" pos:end="93:56"><name pos:start="93:42" pos:end="93:47">strlen</name><argument_list pos:start="93:48" pos:end="93:56">(<argument pos:start="93:49" pos:end="93:55"><expr pos:start="93:49" pos:end="93:55"><name pos:start="93:49" pos:end="93:55">cdomain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:29"><if pos:start="95:9" pos:end="97:29">if <condition pos:start="95:12" pos:end="95:30">(<expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:25">domain_offset</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <literal type="number" pos:start="95:29" pos:end="95:29">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:29"><block_content pos:start="97:13" pos:end="97:29">

            <goto pos:start="97:13" pos:end="97:29">goto <name pos:start="97:18" pos:end="97:28">done_cookie</name>;</goto></block_content></block></if></if_stmt>



        <comment type="line" pos:start="101:9" pos:end="101:34">// match the cookie domain</comment>

        <if_stmt pos:start="103:9" pos:end="105:29"><if pos:start="103:9" pos:end="105:29">if <condition pos:start="103:12" pos:end="103:59">(<expr pos:start="103:13" pos:end="103:58"><call pos:start="103:13" pos:end="103:58"><name pos:start="103:13" pos:end="103:25">av_strcasecmp</name><argument_list pos:start="103:26" pos:end="103:58">(<argument pos:start="103:27" pos:end="103:48"><expr pos:start="103:27" pos:end="103:48"><operator pos:start="103:27" pos:end="103:27">&amp;</operator><name pos:start="103:28" pos:end="103:48"><name pos:start="103:28" pos:end="103:33">domain</name><index pos:start="103:34" pos:end="103:48">[<expr pos:start="103:35" pos:end="103:47"><name pos:start="103:35" pos:end="103:47">domain_offset</name></expr>]</index></name></expr></argument>, <argument pos:start="103:51" pos:end="103:57"><expr pos:start="103:51" pos:end="103:57"><name pos:start="103:51" pos:end="103:57">cdomain</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:29"><block_content pos:start="105:13" pos:end="105:29">

            <goto pos:start="105:13" pos:end="105:29">goto <name pos:start="105:18" pos:end="105:28">done_cookie</name>;</goto></block_content></block></if></if_stmt>



        <comment type="line" pos:start="109:9" pos:end="109:53">// cookie parameters match, so copy the value</comment>

        <if_stmt pos:start="111:9" pos:end="139:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="111:22">(<expr pos:start="111:13" pos:end="111:21"><operator pos:start="111:13" pos:end="111:13">!</operator><operator pos:start="111:14" pos:end="111:14">*</operator><name pos:start="111:15" pos:end="111:21">cookies</name></expr>)</condition> <block pos:start="111:24" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:13">

            <if_stmt pos:start="113:13" pos:end="119:13"><if pos:start="113:13" pos:end="119:13">if <condition pos:start="113:16" pos:end="113:48">(<expr pos:start="113:17" pos:end="113:47"><operator pos:start="113:17" pos:end="113:17">!</operator><operator pos:start="113:18" pos:end="113:18">(</operator><operator pos:start="113:19" pos:end="113:19">*</operator><name pos:start="113:20" pos:end="113:26">cookies</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:46"><name pos:start="113:30" pos:end="113:38">av_strdup</name><argument_list pos:start="113:39" pos:end="113:46">(<argument pos:start="113:40" pos:end="113:45"><expr pos:start="113:40" pos:end="113:45"><name pos:start="113:40" pos:end="113:45">cvalue</name></expr></argument>)</argument_list></call><operator pos:start="113:47" pos:end="113:47">)</operator></expr>)</condition> <block pos:start="113:50" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:33">

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:37"><name pos:start="115:23" pos:end="115:29">AVERROR</name><argument_list pos:start="115:30" pos:end="115:37">(<argument pos:start="115:31" pos:end="115:36"><expr pos:start="115:31" pos:end="115:36"><name pos:start="115:31" pos:end="115:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="117:17" pos:end="117:33">goto <name pos:start="117:22" pos:end="117:32">done_cookie</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="139:9">else <block pos:start="121:16" pos:end="139:9">{<block_content pos:start="123:13" pos:end="137:25">

            <decl_stmt pos:start="123:13" pos:end="123:33"><decl pos:start="123:13" pos:end="123:32"><type pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:16">char</name> <modifier pos:start="123:18" pos:end="123:18">*</modifier></type><name pos:start="123:19" pos:end="123:21">tmp</name> <init pos:start="123:23" pos:end="123:32">= <expr pos:start="123:25" pos:end="123:32"><operator pos:start="123:25" pos:end="123:25">*</operator><name pos:start="123:26" pos:end="123:32">cookies</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:68"><decl pos:start="125:13" pos:end="125:67"><type pos:start="125:13" pos:end="125:18"><name pos:start="125:13" pos:end="125:18">size_t</name></type> <name pos:start="125:20" pos:end="125:27">str_size</name> <init pos:start="125:29" pos:end="125:67">= <expr pos:start="125:31" pos:end="125:67"><call pos:start="125:31" pos:end="125:44"><name pos:start="125:31" pos:end="125:36">strlen</name><argument_list pos:start="125:37" pos:end="125:44">(<argument pos:start="125:38" pos:end="125:43"><expr pos:start="125:38" pos:end="125:43"><name pos:start="125:38" pos:end="125:43">cvalue</name></expr></argument>)</argument_list></call> <operator pos:start="125:46" pos:end="125:46">+</operator> <call pos:start="125:48" pos:end="125:63"><name pos:start="125:48" pos:end="125:53">strlen</name><argument_list pos:start="125:54" pos:end="125:63">(<argument pos:start="125:55" pos:end="125:62"><expr pos:start="125:55" pos:end="125:62"><operator pos:start="125:55" pos:end="125:55">*</operator><name pos:start="125:56" pos:end="125:62">cookies</name></expr></argument>)</argument_list></call> <operator pos:start="125:65" pos:end="125:65">+</operator> <literal type="number" pos:start="125:67" pos:end="125:67">3</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:50">(<expr pos:start="127:17" pos:end="127:49"><operator pos:start="127:17" pos:end="127:17">!</operator><operator pos:start="127:18" pos:end="127:18">(</operator><operator pos:start="127:19" pos:end="127:19">*</operator><name pos:start="127:20" pos:end="127:26">cookies</name> <operator pos:start="127:28" pos:end="127:28">=</operator> <call pos:start="127:30" pos:end="127:48"><name pos:start="127:30" pos:end="127:38">av_malloc</name><argument_list pos:start="127:39" pos:end="127:48">(<argument pos:start="127:40" pos:end="127:47"><expr pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:47">str_size</name></expr></argument>)</argument_list></call><operator pos:start="127:49" pos:end="127:49">)</operator></expr>)</condition> <block pos:start="127:52" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:33">

                <expr_stmt pos:start="129:17" pos:end="129:38"><expr pos:start="129:17" pos:end="129:37"><name pos:start="129:17" pos:end="129:19">ret</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:37"><name pos:start="129:23" pos:end="129:29">AVERROR</name><argument_list pos:start="129:30" pos:end="129:37">(<argument pos:start="129:31" pos:end="129:36"><expr pos:start="129:31" pos:end="129:36"><name pos:start="129:31" pos:end="129:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="131:17" pos:end="131:33">goto <name pos:start="131:22" pos:end="131:32">done_cookie</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:64"><expr pos:start="135:13" pos:end="135:63"><call pos:start="135:13" pos:end="135:63"><name pos:start="135:13" pos:end="135:20">snprintf</name><argument_list pos:start="135:21" pos:end="135:63">(<argument pos:start="135:22" pos:end="135:29"><expr pos:start="135:22" pos:end="135:29"><operator pos:start="135:22" pos:end="135:22">*</operator><name pos:start="135:23" pos:end="135:29">cookies</name></expr></argument>, <argument pos:start="135:32" pos:end="135:39"><expr pos:start="135:32" pos:end="135:39"><name pos:start="135:32" pos:end="135:39">str_size</name></expr></argument>, <argument pos:start="135:42" pos:end="135:49"><expr pos:start="135:42" pos:end="135:49"><literal type="string" pos:start="135:42" pos:end="135:49">"%s; %s"</literal></expr></argument>, <argument pos:start="135:52" pos:end="135:54"><expr pos:start="135:52" pos:end="135:54"><name pos:start="135:52" pos:end="135:54">tmp</name></expr></argument>, <argument pos:start="135:57" pos:end="135:62"><expr pos:start="135:57" pos:end="135:62"><name pos:start="135:57" pos:end="135:62">cvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:25"><expr pos:start="137:13" pos:end="137:24"><call pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:19">av_free</name><argument_list pos:start="137:20" pos:end="137:24">(<argument pos:start="137:21" pos:end="137:23"><expr pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <label pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:19">done_cookie</name>:</label>



        <expr_stmt pos:start="147:9" pos:end="147:24"><expr pos:start="147:9" pos:end="147:23"><call pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:15">av_free</name><argument_list pos:start="147:16" pos:end="147:23">(<argument pos:start="147:17" pos:end="147:22"><expr pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">cvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:20">(<expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">&lt;</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>)</condition> <block pos:start="149:22" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:23">

            <if_stmt pos:start="151:13" pos:end="151:44"><if pos:start="151:13" pos:end="151:44">if <condition pos:start="151:16" pos:end="151:25">(<expr pos:start="151:17" pos:end="151:24"><operator pos:start="151:17" pos:end="151:17">*</operator><name pos:start="151:18" pos:end="151:24">cookies</name></expr>)</condition><block type="pseudo" pos:start="151:27" pos:end="151:44"><block_content pos:start="151:27" pos:end="151:44"> <expr_stmt pos:start="151:27" pos:end="151:44"><expr pos:start="151:27" pos:end="151:43"><call pos:start="151:27" pos:end="151:43"><name pos:start="151:27" pos:end="151:34">av_freep</name><argument_list pos:start="151:35" pos:end="151:43">(<argument pos:start="151:36" pos:end="151:42"><expr pos:start="151:36" pos:end="151:42"><name pos:start="151:36" pos:end="151:42">cookies</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:34"><expr pos:start="153:13" pos:end="153:33"><call pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:19">av_free</name><argument_list pos:start="153:20" pos:end="153:33">(<argument pos:start="153:21" pos:end="153:32"><expr pos:start="153:21" pos:end="153:32"><name pos:start="153:21" pos:end="153:32">cset_cookies</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="155:13" pos:end="155:23">return <expr pos:start="155:20" pos:end="155:22"><name pos:start="155:20" pos:end="155:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="163:5" pos:end="163:26"><expr pos:start="163:5" pos:end="163:25"><call pos:start="163:5" pos:end="163:25"><name pos:start="163:5" pos:end="163:11">av_free</name><argument_list pos:start="163:12" pos:end="163:25">(<argument pos:start="163:13" pos:end="163:24"><expr pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:24">cset_cookies</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
