<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14719.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">nbd_client_new</name><parameter_list pos:start="1:20" pos:end="1:77">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:29">NBDExport</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">exp</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:45"><decl pos:start="1:37" pos:end="1:45"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:45">csock</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:76"><function_decl pos:start="1:48" pos:end="1:76"><type pos:start="1:48" pos:end="1:51"><name pos:start="1:48" pos:end="1:51">void</name></type> (<modifier pos:start="1:54" pos:end="1:54">*</modifier><name pos:start="1:55" pos:end="1:62">close_fn</name>)<parameter_list pos:start="1:64" pos:end="1:76">(<parameter pos:start="1:65" pos:end="1:75"><decl pos:start="1:65" pos:end="1:75"><type pos:start="1:65" pos:end="1:75"><name pos:start="1:65" pos:end="1:73">NBDClient</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NBDClient</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">client</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:42"><expr pos:start="7:5" pos:end="7:41"><name pos:start="7:5" pos:end="7:10">client</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <call pos:start="7:14" pos:end="7:41"><name pos:start="7:14" pos:end="7:22">g_malloc0</name><argument_list pos:start="7:23" pos:end="7:41">(<argument pos:start="7:24" pos:end="7:40"><expr pos:start="7:24" pos:end="7:40"><sizeof pos:start="7:24" pos:end="7:40">sizeof<argument_list pos:start="7:30" pos:end="7:40">(<argument pos:start="7:31" pos:end="7:39"><expr pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:39">NBDClient</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">client</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:20">refcount</name></name> <operator pos:start="9:22" pos:end="9:22">=</operator> <literal type="number" pos:start="9:24" pos:end="9:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">client</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:15">exp</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:21">exp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">client</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:16">sock</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:24">csock</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:10">client</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:20">can_read</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:27">true</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:26">nbd_send_negotiate</name><argument_list pos:start="17:27" pos:end="17:34">(<argument pos:start="17:28" pos:end="17:33"><expr pos:start="17:28" pos:end="17:33"><name pos:start="17:28" pos:end="17:33">client</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:37" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:15">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:16">shutdown</name><argument_list pos:start="19:17" pos:end="19:33">(<argument pos:start="19:18" pos:end="19:29"><expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:23">client</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">sock</name></name></expr></argument>, <argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:16">close_fn</name><argument_list pos:start="21:17" pos:end="21:24">(<argument pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:23">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:10">client</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">close</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:28">close_fn</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><call pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:22">qemu_co_mutex_init</name><argument_list pos:start="29:23" pos:end="29:42">(<argument pos:start="29:24" pos:end="29:41"><expr pos:start="29:24" pos:end="29:41"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:30">client</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:41">send_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><call pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:20">nbd_set_handlers</name><argument_list pos:start="31:21" pos:end="31:28">(<argument pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:27">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">exp</name></expr>)</condition> <block pos:start="35:14" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:28">

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="37:27" pos:end="37:55">(<argument pos:start="37:28" pos:end="37:40"><expr pos:start="37:28" pos:end="37:40"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:31">exp</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:40">clients</name></name></expr></argument>, <argument pos:start="37:43" pos:end="37:48"><expr pos:start="37:43" pos:end="37:48"><name pos:start="37:43" pos:end="37:48">client</name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><name pos:start="37:51" pos:end="37:54">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:22">nbd_export_get</name><argument_list pos:start="39:23" pos:end="39:27">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">exp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
