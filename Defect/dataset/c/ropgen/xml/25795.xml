<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25795.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">nvenc_setup_device</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NvencContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">NvencDynLoadFunctions</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">dl_fn</name> <init pos:start="7:34" pos:end="7:58">= <expr pos:start="7:36" pos:end="7:58"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:58"><name pos:start="7:37" pos:end="7:39">ctx</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">CUresult</name></type> <name pos:start="11:14" pos:end="11:19">cu_res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">CUcontext</name></type> <name pos:start="13:15" pos:end="13:29">cu_context_curr</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="35:5">switch <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:24">codec</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:28">id</name></name></expr>)</condition> <block pos:start="17:31" pos:end="35:5">{<block_content pos:start="19:5" pos:end="33:27">

    <case pos:start="19:5" pos:end="19:26">case <expr pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:68"><expr pos:start="21:9" pos:end="21:67"><name pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:31">init_encode_params</name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:42">encodeGUID</name></name> <operator pos:start="21:44" pos:end="21:44">=</operator> <name pos:start="21:46" pos:end="21:67">NV_ENC_CODEC_H264_GUID</name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:26">case <expr pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:25">AV_CODEC_ID_HEVC</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:31">init_encode_params</name><operator pos:start="27:32" pos:end="27:32">.</operator><name pos:start="27:33" pos:end="27:42">encodeGUID</name></name> <operator pos:start="27:44" pos:end="27:44">=</operator> <name pos:start="27:46" pos:end="27:67">NV_ENC_CODEC_HEVC_GUID</name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">AVERROR_BUG</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="39:5" pos:end="44:0"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:21">data_pix_fmt</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:38"><name pos:start="39:25" pos:end="39:29">avctx</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:38">pix_fmt</name></name></expr>;</expr_stmt>



<cpp:if pos:start="43:1" pos:end="43:15">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:15">CONFIG_CUDA</name></expr></cpp:if>

    <if_stmt pos:start="45:5" pos:end="76:0"><if pos:start="45:5" pos:end="76:0">if <condition pos:start="45:8" pos:end="45:42">(<expr pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">pix_fmt</name></name> <operator pos:start="45:24" pos:end="45:25">==</operator> <name pos:start="45:27" pos:end="45:41">AV_PIX_FMT_CUDA</name></expr>)</condition> <block pos:start="45:44" pos:end="76:0">{<block_content pos:start="47:9" pos:end="71:17">

        <decl_stmt pos:start="47:9" pos:end="47:38"><decl pos:start="47:9" pos:end="47:37"><type pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:25">AVHWFramesContext</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:37">frames_ctx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:42"><decl pos:start="49:9" pos:end="49:41"><type pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:27">AVCUDADeviceContext</name> <modifier pos:start="49:29" pos:end="49:29">*</modifier></type><name pos:start="49:30" pos:end="49:41">device_hwctx</name></decl>;</decl_stmt>



        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:34">(<expr pos:start="53:13" pos:end="53:33"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:33"><name pos:start="53:14" pos:end="53:18">avctx</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:33">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="53:36" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:35">

            <expr_stmt pos:start="55:13" pos:end="55:102"><expr pos:start="55:13" pos:end="55:101"><call pos:start="55:13" pos:end="55:101"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:101">(<argument pos:start="55:20" pos:end="55:24"><expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">avctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:100"><expr pos:start="55:41" pos:end="55:100"><literal type="string" pos:start="55:41" pos:end="55:100">"hw_frames_ctx must be set when using GPU frames as input\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:35">return <expr pos:start="57:20" pos:end="57:34"><call pos:start="57:20" pos:end="57:34"><name pos:start="57:20" pos:end="57:26">AVERROR</name><argument_list pos:start="57:27" pos:end="57:34">(<argument pos:start="57:28" pos:end="57:33"><expr pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:68"><expr pos:start="63:9" pos:end="63:67"><name pos:start="63:9" pos:end="63:18">frames_ctx</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:39">AVHWFramesContext</name><operator pos:start="63:40" pos:end="63:40">*</operator><operator pos:start="63:41" pos:end="63:41">)</operator><name pos:start="63:42" pos:end="63:67"><name pos:start="63:42" pos:end="63:46">avctx</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:61">hw_frames_ctx</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:67">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:20">device_hwctx</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:52"><name pos:start="65:24" pos:end="65:33">frames_ctx</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:45">device_ctx</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:52">hwctx</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:23">cu_context</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:48"><name pos:start="67:27" pos:end="67:38">device_hwctx</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:48">cuda_ctx</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:25">data_pix_fmt</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:49"><name pos:start="69:29" pos:end="69:38">frames_ctx</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:49">sw_format</name></name></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:17">return <expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:46">(<expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:16">gpu</name></name> <operator pos:start="79:18" pos:end="79:19">&gt;=</operator> <name pos:start="79:21" pos:end="79:45"><name pos:start="79:21" pos:end="79:25">dl_fn</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:45">nvenc_device_count</name></name></expr>)</condition> <block pos:start="79:48" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:31">

        <expr_stmt pos:start="81:9" pos:end="81:128"><expr pos:start="81:9" pos:end="81:127"><call pos:start="81:9" pos:end="81:127"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:127">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="81:37" pos:end="81:89"><expr pos:start="81:37" pos:end="81:89"><literal type="string" pos:start="81:37" pos:end="81:89">"Requested GPU %d, but only %d GPUs are available!\n"</literal></expr></argument>, <argument pos:start="81:92" pos:end="81:99"><expr pos:start="81:92" pos:end="81:99"><name pos:start="81:92" pos:end="81:99"><name pos:start="81:92" pos:end="81:94">ctx</name><operator pos:start="81:95" pos:end="81:96">-&gt;</operator><name pos:start="81:97" pos:end="81:99">gpu</name></name></expr></argument>, <argument pos:start="81:102" pos:end="81:126"><expr pos:start="81:102" pos:end="81:126"><name pos:start="81:102" pos:end="81:126"><name pos:start="81:102" pos:end="81:106">dl_fn</name><operator pos:start="81:107" pos:end="81:108">-&gt;</operator><name pos:start="81:109" pos:end="81:126">nvenc_device_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:7">ctx</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:19">cu_context</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:96"><expr pos:start="91:5" pos:end="91:95"><name pos:start="91:5" pos:end="91:10">cu_res</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:95"><name pos:start="91:14" pos:end="91:33"><name pos:start="91:14" pos:end="91:18">dl_fn</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:33">cu_ctx_create</name></name><argument_list pos:start="91:34" pos:end="91:95">(<argument pos:start="91:35" pos:end="91:59"><expr pos:start="91:35" pos:end="91:59"><operator pos:start="91:35" pos:end="91:35">&amp;</operator><name pos:start="91:36" pos:end="91:59"><name pos:start="91:36" pos:end="91:38">ctx</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:59">cu_context_internal</name></name></expr></argument>, <argument pos:start="91:62" pos:end="91:62"><expr pos:start="91:62" pos:end="91:62"><literal type="number" pos:start="91:62" pos:end="91:62">4</literal></expr></argument>, <argument pos:start="91:65" pos:end="91:94"><expr pos:start="91:65" pos:end="91:94"><name pos:start="91:65" pos:end="91:94"><name pos:start="91:65" pos:end="91:69">dl_fn</name><operator pos:start="91:70" pos:end="91:71">-&gt;</operator><name pos:start="91:72" pos:end="91:84">nvenc_devices</name><index pos:start="91:85" pos:end="91:94">[<expr pos:start="91:86" pos:end="91:93"><name pos:start="91:86" pos:end="91:93"><name pos:start="91:86" pos:end="91:88">ctx</name><operator pos:start="91:89" pos:end="91:90">-&gt;</operator><name pos:start="91:91" pos:end="91:93">gpu</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="91:98" pos:end="91:145">// CU_CTX_SCHED_BLOCKING_SYNC=4, avoid CPU spins</comment>



    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:31">(<expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:14">cu_res</name> <operator pos:start="95:16" pos:end="95:17">!=</operator> <name pos:start="95:19" pos:end="95:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="95:33" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:32">

        <expr_stmt pos:start="97:9" pos:end="97:99"><expr pos:start="97:9" pos:end="97:98"><call pos:start="97:9" pos:end="97:98"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:98">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="97:37" pos:end="97:84"><expr pos:start="97:37" pos:end="97:84"><literal type="string" pos:start="97:37" pos:end="97:84">"Failed creating CUDA context for NVENC: 0x%x\n"</literal></expr></argument>, <argument pos:start="97:87" pos:end="97:97"><expr pos:start="97:87" pos:end="97:97"><operator pos:start="97:87" pos:end="97:87">(</operator><name pos:start="97:88" pos:end="97:90">int</name><operator pos:start="97:91" pos:end="97:91">)</operator><name pos:start="97:92" pos:end="97:97">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:32">return <expr pos:start="99:16" pos:end="99:31"><name pos:start="99:16" pos:end="99:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:10">cu_res</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <call pos:start="105:14" pos:end="105:56"><name pos:start="105:14" pos:end="105:38"><name pos:start="105:14" pos:end="105:18">dl_fn</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:38">cu_ctx_pop_current</name></name><argument_list pos:start="105:39" pos:end="105:56">(<argument pos:start="105:40" pos:end="105:55"><expr pos:start="105:40" pos:end="105:55"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:55">cu_context_curr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:31">(<expr pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:14">cu_res</name> <operator pos:start="109:16" pos:end="109:17">!=</operator> <name pos:start="109:19" pos:end="109:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="109:33" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:32">

        <expr_stmt pos:start="111:9" pos:end="111:88"><expr pos:start="111:9" pos:end="111:87"><call pos:start="111:9" pos:end="111:87"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:87">(<argument pos:start="111:16" pos:end="111:20"><expr pos:start="111:16" pos:end="111:20"><name pos:start="111:16" pos:end="111:20">avctx</name></expr></argument>, <argument pos:start="111:23" pos:end="111:34"><expr pos:start="111:23" pos:end="111:34"><name pos:start="111:23" pos:end="111:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="111:37" pos:end="111:73"><expr pos:start="111:37" pos:end="111:73"><literal type="string" pos:start="111:37" pos:end="111:73">"Failed popping CUDA context: 0x%x\n"</literal></expr></argument>, <argument pos:start="111:76" pos:end="111:86"><expr pos:start="111:76" pos:end="111:86"><operator pos:start="111:76" pos:end="111:76">(</operator><name pos:start="111:77" pos:end="111:79">int</name><operator pos:start="111:80" pos:end="111:80">)</operator><name pos:start="111:81" pos:end="111:86">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:32">return <expr pos:start="113:16" pos:end="113:31"><name pos:start="113:16" pos:end="113:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:47"><expr pos:start="119:5" pos:end="119:46"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:7">ctx</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:19">cu_context</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:46"><name pos:start="119:23" pos:end="119:25">ctx</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:46">cu_context_internal</name></name></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
