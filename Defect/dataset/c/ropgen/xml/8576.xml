<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8576.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">speex_header</name><parameter_list pos:start="1:24" pos:end="1:52">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">idx</name></decl></parameter>)</parameter_list> <block pos:start="1:54" pos:end="97:1">{<block_content pos:start="3:5" pos:end="95:13">

    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:14">ogg</name></name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">ogg</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">ogg_stream</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:25">os</name> <init pos:start="5:27" pos:end="5:46">= <expr pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:31">ogg</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:40">streams</name></name> <operator pos:start="5:42" pos:end="5:42">+</operator> <name pos:start="5:44" pos:end="5:46">idx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">speex_params</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">spxp</name> <init pos:start="7:31" pos:end="7:43">= <expr pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:34">os</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:43">private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:34">[<expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name> <init pos:start="11:16" pos:end="11:37">= <expr pos:start="11:18" pos:end="11:37"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:19">os</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:24">buf</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:37"><name pos:start="11:28" pos:end="11:29">os</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:37">pstart</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">spxp</name></expr>)</condition> <block pos:start="15:16" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:27">

        <expr_stmt pos:start="17:9" pos:end="17:41"><expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:12">spxp</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:25">av_mallocz</name><argument_list pos:start="17:26" pos:end="17:40">(<argument pos:start="17:27" pos:end="17:39"><expr pos:start="17:27" pos:end="17:39"><sizeof pos:start="17:27" pos:end="17:39">sizeof<argument_list pos:start="17:33" pos:end="17:39">(<argument pos:start="17:34" pos:end="17:38"><expr pos:start="17:34" pos:end="17:38"><operator pos:start="17:34" pos:end="17:34">*</operator><name pos:start="17:35" pos:end="17:38">spxp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:10">os</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:19">private</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:26">spxp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:12">spxp</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:17">seq</name></name> <operator pos:start="25:19" pos:end="25:19">&gt;</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="89:58"><if pos:start="31:5" pos:end="87:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:12">spxp</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:17">seq</name></name> <operator pos:start="31:19" pos:end="31:20">==</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>)</condition> <block pos:start="31:25" pos:end="87:5">{<block_content pos:start="33:9" pos:end="85:63">

        <decl_stmt pos:start="33:9" pos:end="33:30"><decl pos:start="33:9" pos:end="33:29"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:29">frames_per_packet</name></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:10">st</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">codec</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:29">codec_type</name></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <name pos:start="35:33" pos:end="35:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">codec</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:27">codec_id</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:47">AV_CODEC_ID_SPEEX</name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:27">(<expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">os</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">psize</name></name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:26">68</literal></expr>)</condition> <block pos:start="41:29" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:39">

            <expr_stmt pos:start="43:13" pos:end="43:64"><expr pos:start="43:13" pos:end="43:63"><call pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:63">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:62"><expr pos:start="43:37" pos:end="43:62"><literal type="string" pos:start="43:37" pos:end="43:62">"speex packet too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:10">st</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">codec</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:30">sample_rate</name></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <call pos:start="51:34" pos:end="51:48"><name pos:start="51:34" pos:end="51:40">AV_RL32</name><argument_list pos:start="51:41" pos:end="51:48">(<argument pos:start="51:42" pos:end="51:47"><expr pos:start="51:42" pos:end="51:47"><name pos:start="51:42" pos:end="51:42">p</name> <operator pos:start="51:44" pos:end="51:44">+</operator> <literal type="number" pos:start="51:46" pos:end="51:47">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:10">st</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:17">codec</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">channels</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <call pos:start="53:31" pos:end="53:45"><name pos:start="53:31" pos:end="53:37">AV_RL32</name><argument_list pos:start="53:38" pos:end="53:45">(<argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:39">p</name> <operator pos:start="53:41" pos:end="53:41">+</operator> <literal type="number" pos:start="53:43" pos:end="53:44">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:63">(<expr pos:start="55:13" pos:end="55:62"><name pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:14">st</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:21">codec</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:31">channels</name></name> <operator pos:start="55:33" pos:end="55:33">&lt;</operator> <literal type="number" pos:start="55:35" pos:end="55:35">1</literal> <operator pos:start="55:37" pos:end="55:38">||</operator> <name pos:start="55:40" pos:end="55:58"><name pos:start="55:40" pos:end="55:41">st</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:48">codec</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:58">channels</name></name> <operator pos:start="55:60" pos:end="55:60">&gt;</operator> <literal type="number" pos:start="55:62" pos:end="55:62">2</literal></expr>)</condition> <block pos:start="55:65" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:39">

            <expr_stmt pos:start="57:13" pos:end="57:94"><expr pos:start="57:13" pos:end="57:93"><call pos:start="57:13" pos:end="57:93"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:93">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:92"><expr pos:start="57:37" pos:end="57:92"><literal type="string" pos:start="57:37" pos:end="57:92">"invalid channel count. Speex must be mono or stereo.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:39">return <expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:83"><expr pos:start="63:9" pos:end="65:82"><name pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">codec</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:33">channel_layout</name></name> <operator pos:start="63:35" pos:end="63:35">=</operator> <ternary pos:start="63:37" pos:end="65:82"><condition pos:start="63:37" pos:end="63:62"><expr pos:start="63:37" pos:end="63:60"><name pos:start="63:37" pos:end="63:55"><name pos:start="63:37" pos:end="63:38">st</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:45">codec</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:55">channels</name></name> <operator pos:start="63:57" pos:end="63:58">==</operator> <literal type="number" pos:start="63:60" pos:end="63:60">1</literal></expr> ?</condition><then pos:start="63:64" pos:end="63:80"> <expr pos:start="63:64" pos:end="63:80"><name pos:start="63:64" pos:end="63:80">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="63:82" pos:end="65:82">:

                                                               <expr pos:start="65:64" pos:end="65:82"><name pos:start="65:64" pos:end="65:82">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:12">spxp</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:25">packet_size</name></name>  <operator pos:start="69:28" pos:end="69:28">=</operator> <call pos:start="69:30" pos:end="69:44"><name pos:start="69:30" pos:end="69:36">AV_RL32</name><argument_list pos:start="69:37" pos:end="69:44">(<argument pos:start="69:38" pos:end="69:43"><expr pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:38">p</name> <operator pos:start="69:40" pos:end="69:40">+</operator> <literal type="number" pos:start="69:42" pos:end="69:43">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:25">frames_per_packet</name>  <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:36">AV_RL32</name><argument_list pos:start="71:37" pos:end="71:44">(<argument pos:start="71:38" pos:end="71:43"><expr pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:38">p</name> <operator pos:start="71:40" pos:end="71:40">+</operator> <literal type="number" pos:start="71:42" pos:end="71:43">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:51"><if pos:start="73:9" pos:end="75:51">if <condition pos:start="73:12" pos:end="73:30">(<expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:29">frames_per_packet</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:51"><block_content pos:start="75:13" pos:end="75:51">

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:16">spxp</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:29">packet_size</name></name> <operator pos:start="75:31" pos:end="75:32">*=</operator> <name pos:start="75:34" pos:end="75:50">frames_per_packet</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:49"><expr pos:start="79:9" pos:end="79:48"><call pos:start="79:9" pos:end="79:48"><name pos:start="79:9" pos:end="79:26">ff_alloc_extradata</name><argument_list pos:start="79:27" pos:end="79:48">(<argument pos:start="79:28" pos:end="79:36"><expr pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:29">st</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:36">codec</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:47"><expr pos:start="79:39" pos:end="79:47"><name pos:start="79:39" pos:end="79:47"><name pos:start="79:39" pos:end="79:40">os</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:47">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:67"><expr pos:start="81:9" pos:end="81:66"><call pos:start="81:9" pos:end="81:66"><name pos:start="81:9" pos:end="81:14">memcpy</name><argument_list pos:start="81:15" pos:end="81:66">(<argument pos:start="81:16" pos:end="81:35"><expr pos:start="81:16" pos:end="81:35"><name pos:start="81:16" pos:end="81:35"><name pos:start="81:16" pos:end="81:17">st</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:24">codec</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:35">extradata</name></name></expr></argument>, <argument pos:start="81:38" pos:end="81:38"><expr pos:start="81:38" pos:end="81:38"><name pos:start="81:38" pos:end="81:38">p</name></expr></argument>, <argument pos:start="81:41" pos:end="81:65"><expr pos:start="81:41" pos:end="81:65"><name pos:start="81:41" pos:end="81:65"><name pos:start="81:41" pos:end="81:42">st</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">codec</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:65">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:63"><expr pos:start="85:9" pos:end="85:62"><call pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:27">avpriv_set_pts_info</name><argument_list pos:start="85:28" pos:end="85:62">(<argument pos:start="85:29" pos:end="85:30"><expr pos:start="85:29" pos:end="85:30"><name pos:start="85:29" pos:end="85:30">st</name></expr></argument>, <argument pos:start="85:33" pos:end="85:34"><expr pos:start="85:33" pos:end="85:34"><literal type="number" pos:start="85:33" pos:end="85:34">64</literal></expr></argument>, <argument pos:start="85:37" pos:end="85:37"><expr pos:start="85:37" pos:end="85:37"><literal type="number" pos:start="85:37" pos:end="85:37">1</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:61"><expr pos:start="85:40" pos:end="85:61"><name pos:start="85:40" pos:end="85:61"><name pos:start="85:40" pos:end="85:41">st</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:48">codec</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="89:58">else<block type="pseudo" pos:start="89:9" pos:end="89:58"><block_content pos:start="89:9" pos:end="89:58">

        <expr_stmt pos:start="89:9" pos:end="89:58"><expr pos:start="89:9" pos:end="89:57"><call pos:start="89:9" pos:end="89:57"><name pos:start="89:9" pos:end="89:25">ff_vorbis_comment</name><argument_list pos:start="89:26" pos:end="89:57">(<argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">s</name></expr></argument>, <argument pos:start="89:30" pos:end="89:42"><expr pos:start="89:30" pos:end="89:42"><operator pos:start="89:30" pos:end="89:30">&amp;</operator><name pos:start="89:31" pos:end="89:42"><name pos:start="89:31" pos:end="89:32">st</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">metadata</name></name></expr></argument>, <argument pos:start="89:45" pos:end="89:45"><expr pos:start="89:45" pos:end="89:45"><name pos:start="89:45" pos:end="89:45">p</name></expr></argument>, <argument pos:start="89:48" pos:end="89:56"><expr pos:start="89:48" pos:end="89:56"><name pos:start="89:48" pos:end="89:56"><name pos:start="89:48" pos:end="89:49">os</name><operator pos:start="89:50" pos:end="89:51">-&gt;</operator><name pos:start="89:52" pos:end="89:56">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:16"><expr pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:13"><name pos:start="93:5" pos:end="93:8">spxp</name><operator pos:start="93:9" pos:end="93:10">-&gt;</operator><name pos:start="93:11" pos:end="93:13">seq</name></name><operator pos:start="93:14" pos:end="93:15">++</operator></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
