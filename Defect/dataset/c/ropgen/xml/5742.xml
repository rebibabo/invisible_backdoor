<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5742.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">mb_cpu_initfn</name><parameter_list pos:start="1:26" pos:end="1:38">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:34"><name pos:start="1:27" pos:end="1:32">Object</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MicroBlazeCPU</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">cpu</name> <init pos:start="7:24" pos:end="7:44">= <expr pos:start="7:26" pos:end="7:44"><call pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:39">MICROBLAZE_CPU</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">CPUMBState</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">env</name> <init pos:start="9:21" pos:end="9:31">= <expr pos:start="9:23" pos:end="9:31"><operator pos:start="9:23" pos:end="9:23">&amp;</operator><name pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:26">cpu</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:31">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:15">bool</name></type> <name pos:start="11:17" pos:end="11:31">tcg_initialized</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">cs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:15">env_ptr</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:21">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:17">cpu_exec_init</name><argument_list pos:start="17:18" pos:end="17:35">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">cs</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:34">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="26:0"><expr pos:start="21:5" pos:end="21:70"><call pos:start="21:5" pos:end="21:70"><name pos:start="21:5" pos:end="21:27">set_float_rounding_mode</name><argument_list pos:start="21:28" pos:end="21:70">(<argument pos:start="21:29" pos:end="21:52"><expr pos:start="21:29" pos:end="21:52"><name pos:start="21:29" pos:end="21:52">float_round_nearest_even</name></expr></argument>, <argument pos:start="21:55" pos:end="21:69"><expr pos:start="21:55" pos:end="21:69"><operator pos:start="21:55" pos:end="21:55">&amp;</operator><name pos:start="21:56" pos:end="21:69"><name pos:start="21:56" pos:end="21:58">env</name><operator pos:start="21:59" pos:end="21:60">-&gt;</operator><name pos:start="21:61" pos:end="21:69">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="25:1" pos:end="25:24">#<cpp:directive pos:start="25:2" pos:end="25:7">ifndef</cpp:directive> <name pos:start="25:9" pos:end="25:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <comment type="block" pos:start="27:5" pos:end="27:35">/* Inbound IRQ and FIR lines */</comment>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:61"><call pos:start="29:5" pos:end="29:61"><name pos:start="29:5" pos:end="29:21">qdev_init_gpio_in</name><argument_list pos:start="29:22" pos:end="29:61">(<argument pos:start="29:23" pos:end="29:33"><expr pos:start="29:23" pos:end="29:33"><call pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:28">DEVICE</name><argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:36" pos:end="29:57"><expr pos:start="29:36" pos:end="29:57"><name pos:start="29:36" pos:end="29:57">microblaze_cpu_set_irq</name></expr></argument>, <argument pos:start="29:60" pos:end="29:60"><expr pos:start="29:60" pos:end="29:60"><literal type="number" pos:start="29:60" pos:end="29:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><call pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:19">tcg_enabled</name><argument_list pos:start="35:20" pos:end="35:21">()</argument_list></call> <operator pos:start="35:23" pos:end="35:24">&amp;&amp;</operator> <operator pos:start="35:26" pos:end="35:26">!</operator><name pos:start="35:27" pos:end="35:41">tcg_initialized</name></expr>)</condition> <block pos:start="35:44" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:22">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:23">tcg_initialized</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:30">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:19">mb_tcg_init</name><argument_list pos:start="39:20" pos:end="39:21">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
