<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26140.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">reap_filters</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:13">{<block_content pos:start="5:5" pos:end="147:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">AVFilterBufferRef</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:29">picref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:27">filtered_frame</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">frame_pts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:54">/* Reap all buffers present in the buffer sinks */</comment>

    <for pos:start="17:5" pos:end="147:13">for <control pos:start="17:9" pos:end="17:43">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:38"><expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:37">nb_output_streams</name></expr>;</condition> <incr pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:40">i</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control> <block pos:start="17:45" pos:end="147:13">{<block_content pos:start="19:9" pos:end="147:13">

        <decl_stmt pos:start="19:9" pos:end="19:46"><decl pos:start="19:9" pos:end="19:45"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:20">OutputStream</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:25">ost</name> <init pos:start="19:27" pos:end="19:45">= <expr pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:42">output_streams</name><index pos:start="19:43" pos:end="19:45">[<expr pos:start="19:44" pos:end="19:44"><name pos:start="19:44" pos:end="19:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:58"><decl pos:start="21:9" pos:end="21:57"><type pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:18">OutputFile</name>    <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:25">of</name> <init pos:start="21:27" pos:end="21:57">= <expr pos:start="21:29" pos:end="21:57"><name pos:start="21:29" pos:end="21:57"><name pos:start="21:29" pos:end="21:40">output_files</name><index pos:start="21:41" pos:end="21:57">[<expr pos:start="21:42" pos:end="21:56"><name pos:start="21:42" pos:end="21:56"><name pos:start="21:42" pos:end="21:44">ost</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:56">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">ret</name> <init pos:start="23:17" pos:end="23:19">= <expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:25">(<expr pos:start="27:13" pos:end="27:24"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:16">ost</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">filter</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="39:60"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:83">(<expr pos:start="33:13" pos:end="33:82"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:32"><name pos:start="33:14" pos:end="33:16">ost</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:32">filtered_frame</name></name> <operator pos:start="33:34" pos:end="33:35">&amp;&amp;</operator> <operator pos:start="33:37" pos:end="33:37">!</operator><operator pos:start="33:38" pos:end="33:38">(</operator><name pos:start="33:39" pos:end="33:57"><name pos:start="33:39" pos:end="33:41">ost</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:57">filtered_frame</name></name> <operator pos:start="33:59" pos:end="33:59">=</operator> <call pos:start="33:61" pos:end="33:81"><name pos:start="33:61" pos:end="33:79">avcodec_alloc_frame</name><argument_list pos:start="33:80" pos:end="33:81">()</argument_list></call><operator pos:start="33:82" pos:end="33:82">)</operator></expr>)</condition> <block pos:start="33:85" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:35">

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="39:60">else<block type="pseudo" pos:start="39:13" pos:end="39:60"><block_content pos:start="39:13" pos:end="39:60">

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><call pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:38">avcodec_get_frame_defaults</name><argument_list pos:start="39:39" pos:end="39:59">(<argument pos:start="39:40" pos:end="39:58"><expr pos:start="39:40" pos:end="39:58"><name pos:start="39:40" pos:end="39:58"><name pos:start="39:40" pos:end="39:42">ost</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:58">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:22">filtered_frame</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:44"><name pos:start="41:26" pos:end="41:28">ost</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:44">filtered_frame</name></name></expr>;</expr_stmt>



        <while pos:start="45:9" pos:end="147:13">while <condition pos:start="45:15" pos:end="45:17">(<expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">1</literal></expr>)</condition> <block pos:start="45:19" pos:end="147:13">{<block_content pos:start="47:13" pos:end="147:13">

            <expr_stmt pos:start="47:13" pos:end="49:78"><expr pos:start="47:13" pos:end="49:77"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="49:77"><name pos:start="47:19" pos:end="47:46">av_buffersink_get_buffer_ref</name><argument_list pos:start="47:47" pos:end="49:77">(<argument pos:start="47:48" pos:end="47:66"><expr pos:start="47:48" pos:end="47:66"><name pos:start="47:48" pos:end="47:66"><name pos:start="47:48" pos:end="47:50">ost</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:58">filter</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:66">filter</name></name></expr></argument>, <argument pos:start="47:69" pos:end="47:75"><expr pos:start="47:69" pos:end="47:75"><operator pos:start="47:69" pos:end="47:69">&amp;</operator><name pos:start="47:70" pos:end="47:75">picref</name></expr></argument>,

                                               <argument pos:start="49:48" pos:end="49:76"><expr pos:start="49:48" pos:end="49:76"><name pos:start="49:48" pos:end="49:76">AV_BUFFERSINK_FLAG_NO_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="147:13"><if pos:start="51:13" pos:end="147:13">if <condition pos:start="51:16" pos:end="51:24">(<expr pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:19">ret</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>)</condition> <block pos:start="51:26" pos:end="147:13">{<block_content pos:start="53:17" pos:end="147:13">

                <if_stmt pos:start="53:17" pos:end="147:13"><if pos:start="53:17" pos:end="147:13">if <condition pos:start="53:20" pos:end="53:65">(<expr pos:start="53:21" pos:end="53:64"><name pos:start="53:21" pos:end="53:23">ret</name> <operator pos:start="53:25" pos:end="53:26">!=</operator> <call pos:start="53:28" pos:end="53:42"><name pos:start="53:28" pos:end="53:34">AVERROR</name><argument_list pos:start="53:35" pos:end="53:42">(<argument pos:start="53:36" pos:end="53:41"><expr pos:start="53:36" pos:end="53:41"><name pos:start="53:36" pos:end="53:41">EAGAIN</name></expr></argument>)</argument_list></call> <operator pos:start="53:44" pos:end="53:45">&amp;&amp;</operator> <name pos:start="53:47" pos:end="53:49">ret</name> <operator pos:start="53:51" pos:end="53:52">!=</operator> <name pos:start="53:54" pos:end="53:64">AVERROR_EOF</name></expr>)</condition> <block pos:start="53:67" pos:end="147:13">{<block_content pos:start="55:21" pos:end="147:13">

                    <decl_stmt pos:start="55:21" pos:end="55:34"><decl pos:start="55:21" pos:end="55:33"><type pos:start="55:21" pos:end="55:24"><name pos:start="55:21" pos:end="55:24">char</name></type> <name pos:start="55:26" pos:end="55:33"><name pos:start="55:26" pos:end="55:28">buf</name><index pos:start="55:29" pos:end="55:33">[<expr pos:start="55:30" pos:end="55:32"><literal type="number" pos:start="55:30" pos:end="55:32">256</literal></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:55"><expr pos:start="57:21" pos:end="57:54"><call pos:start="57:21" pos:end="57:54"><name pos:start="57:21" pos:end="57:31">av_strerror</name><argument_list pos:start="57:32" pos:end="57:54">(<argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">ret</name></expr></argument>, <argument pos:start="57:38" pos:end="57:40"><expr pos:start="57:38" pos:end="57:40"><name pos:start="57:38" pos:end="57:40">buf</name></expr></argument>, <argument pos:start="57:43" pos:end="57:53"><expr pos:start="57:43" pos:end="57:53"><sizeof pos:start="57:43" pos:end="57:53">sizeof<argument_list pos:start="57:49" pos:end="57:53">(<argument pos:start="57:50" pos:end="57:52"><expr pos:start="57:50" pos:end="57:52"><name pos:start="57:50" pos:end="57:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="61:81"><expr pos:start="59:21" pos:end="61:80"><call pos:start="59:21" pos:end="61:80"><name pos:start="59:21" pos:end="59:26">av_log</name><argument_list pos:start="59:27" pos:end="61:80">(<argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">NULL</name></expr></argument>, <argument pos:start="59:34" pos:end="59:47"><expr pos:start="59:34" pos:end="59:47"><name pos:start="59:34" pos:end="59:47">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="61:28" pos:end="61:74"><expr pos:start="61:28" pos:end="61:74"><literal type="string" pos:start="61:28" pos:end="61:74">"Error in av_buffersink_get_buffer_ref(): %s\n"</literal></expr></argument>, <argument pos:start="61:77" pos:end="61:79"><expr pos:start="61:77" pos:end="61:79"><name pos:start="61:77" pos:end="61:79">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="66:13" pos:end="66:39"><expr pos:start="66:13" pos:end="66:38"><name pos:start="66:13" pos:end="66:21">frame_pts</name> <operator pos:start="66:23" pos:end="66:23">=</operator> <name pos:start="66:25" pos:end="66:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <if_stmt pos:start="68:13" pos:end="147:13"><if pos:start="68:13" pos:end="147:13">if <condition pos:start="68:16" pos:end="68:46">(<expr pos:start="68:17" pos:end="68:45"><name pos:start="68:17" pos:end="68:27"><name pos:start="68:17" pos:end="68:22">picref</name><operator pos:start="68:23" pos:end="68:24">-&gt;</operator><name pos:start="68:25" pos:end="68:27">pts</name></name> <operator pos:start="68:29" pos:end="68:30">!=</operator> <name pos:start="68:32" pos:end="68:45">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="68:48" pos:end="147:13">{<block_content pos:start="70:17" pos:end="147:13">

                <expr_stmt pos:start="70:17" pos:end="80:75"><expr pos:start="70:17" pos:end="80:74"><name pos:start="70:17" pos:end="70:35"><name pos:start="70:17" pos:end="70:30">filtered_frame</name><operator pos:start="70:31" pos:end="70:32">-&gt;</operator><name pos:start="70:33" pos:end="70:35">pts</name></name> <operator pos:start="70:37" pos:end="70:37">=</operator> <name pos:start="70:39" pos:end="70:47">frame_pts</name> <operator pos:start="70:49" pos:end="70:49">=</operator> <call pos:start="70:51" pos:end="74:74"><name pos:start="70:51" pos:end="70:62">av_rescale_q</name><argument_list pos:start="70:63" pos:end="74:74">(<argument pos:start="70:64" pos:end="70:74"><expr pos:start="70:64" pos:end="70:74"><name pos:start="70:64" pos:end="70:74"><name pos:start="70:64" pos:end="70:69">picref</name><operator pos:start="70:70" pos:end="70:71">-&gt;</operator><name pos:start="70:72" pos:end="70:74">pts</name></name></expr></argument>,

                                                <argument pos:start="72:49" pos:end="72:89"><expr pos:start="72:49" pos:end="72:89"><name pos:start="72:49" pos:end="72:78"><name pos:start="72:49" pos:end="72:51">ost</name><operator pos:start="72:52" pos:end="72:53">-&gt;</operator><name pos:start="72:54" pos:end="72:59">filter</name><operator pos:start="72:60" pos:end="72:61">-&gt;</operator><name pos:start="72:62" pos:end="72:67">filter</name><operator pos:start="72:68" pos:end="72:69">-&gt;</operator><name pos:start="72:70" pos:end="72:75">inputs</name><index pos:start="72:76" pos:end="72:78">[<expr pos:start="72:77" pos:end="72:77"><literal type="number" pos:start="72:77" pos:end="72:77">0</literal></expr>]</index></name><operator pos:start="72:79" pos:end="72:80">-&gt;</operator><name pos:start="72:81" pos:end="72:89">time_base</name></expr></argument>,

                                                <argument pos:start="74:49" pos:end="74:73"><expr pos:start="74:49" pos:end="74:73"><name pos:start="74:49" pos:end="74:73"><name pos:start="74:49" pos:end="74:51">ost</name><operator pos:start="74:52" pos:end="74:53">-&gt;</operator><name pos:start="74:54" pos:end="74:55">st</name><operator pos:start="74:56" pos:end="74:57">-&gt;</operator><name pos:start="74:58" pos:end="74:62">codec</name><operator pos:start="74:63" pos:end="74:64">-&gt;</operator><name pos:start="74:65" pos:end="74:73">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="74:76" pos:end="74:76">-</operator>

                                    <call pos:start="76:37" pos:end="80:74"><name pos:start="76:37" pos:end="76:48">av_rescale_q</name><argument_list pos:start="76:49" pos:end="80:74">(<argument pos:start="76:50" pos:end="76:63"><expr pos:start="76:50" pos:end="76:63"><name pos:start="76:50" pos:end="76:63"><name pos:start="76:50" pos:end="76:51">of</name><operator pos:start="76:52" pos:end="76:53">-&gt;</operator><name pos:start="76:54" pos:end="76:63">start_time</name></name></expr></argument>,

                                                <argument pos:start="78:49" pos:end="78:62"><expr pos:start="78:49" pos:end="78:62"><name pos:start="78:49" pos:end="78:62">AV_TIME_BASE_Q</name></expr></argument>,

                                                <argument pos:start="80:49" pos:end="80:73"><expr pos:start="80:49" pos:end="80:73"><name pos:start="80:49" pos:end="80:73"><name pos:start="80:49" pos:end="80:51">ost</name><operator pos:start="80:52" pos:end="80:53">-&gt;</operator><name pos:start="80:54" pos:end="80:55">st</name><operator pos:start="80:56" pos:end="80:57">-&gt;</operator><name pos:start="80:58" pos:end="80:62">codec</name><operator pos:start="80:63" pos:end="80:64">-&gt;</operator><name pos:start="80:65" pos:end="80:73">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="84:17" pos:end="147:13"><if pos:start="84:17" pos:end="147:13">if <condition pos:start="84:20" pos:end="84:62">(<expr pos:start="84:21" pos:end="84:61"><name pos:start="84:21" pos:end="84:34"><name pos:start="84:21" pos:end="84:22">of</name><operator pos:start="84:23" pos:end="84:24">-&gt;</operator><name pos:start="84:25" pos:end="84:34">start_time</name></name> <operator pos:start="84:36" pos:end="84:37">&amp;&amp;</operator> <name pos:start="84:39" pos:end="84:57"><name pos:start="84:39" pos:end="84:52">filtered_frame</name><operator pos:start="84:53" pos:end="84:54">-&gt;</operator><name pos:start="84:55" pos:end="84:57">pts</name></name> <operator pos:start="84:59" pos:end="84:59">&lt;</operator> <literal type="number" pos:start="84:61" pos:end="84:61">0</literal></expr>)</condition> <block pos:start="84:64" pos:end="147:13">{<block_content pos:start="86:21" pos:end="147:13">

                    <expr_stmt pos:start="86:21" pos:end="86:50"><expr pos:start="86:21" pos:end="86:49"><call pos:start="86:21" pos:end="86:49"><name pos:start="86:21" pos:end="86:41">avfilter_unref_buffer</name><argument_list pos:start="86:42" pos:end="86:49">(<argument pos:start="86:43" pos:end="86:48"><expr pos:start="86:43" pos:end="86:48"><name pos:start="86:43" pos:end="86:48">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="88:21" pos:end="88:29">continue;</continue>



            <comment type="line" pos:start="92:13" pos:end="92:41">//if (ost-&gt;source_index &gt;= 0)</comment>

            <comment type="line" pos:start="94:13" pos:end="94:103">//    *filtered_frame= *input_streams[ost-&gt;source_index]-&gt;decoded_frame; //for me_threshold</comment>





            <switch pos:start="100:13" pos:end="147:13">switch <condition pos:start="100:20" pos:end="100:57">(<expr pos:start="100:21" pos:end="100:56"><name pos:start="100:21" pos:end="100:50"><name pos:start="100:21" pos:end="100:23">ost</name><operator pos:start="100:24" pos:end="100:25">-&gt;</operator><name pos:start="100:26" pos:end="100:31">filter</name><operator pos:start="100:32" pos:end="100:33">-&gt;</operator><name pos:start="100:34" pos:end="100:39">filter</name><operator pos:start="100:40" pos:end="100:41">-&gt;</operator><name pos:start="100:42" pos:end="100:47">inputs</name><index pos:start="100:48" pos:end="100:50">[<expr pos:start="100:49" pos:end="100:49"><literal type="number" pos:start="100:49" pos:end="100:49">0</literal></expr>]</index></name><operator pos:start="100:51" pos:end="100:52">-&gt;</operator><name pos:start="100:53" pos:end="100:56">type</name></expr>)</condition> <block pos:start="100:59" pos:end="147:13">{<block_content pos:start="102:13" pos:end="147:13">

            <case pos:start="102:13" pos:end="102:36">case <expr pos:start="102:18" pos:end="102:35"><name pos:start="102:18" pos:end="102:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="104:17" pos:end="104:64"><expr pos:start="104:17" pos:end="104:63"><call pos:start="104:17" pos:end="104:63"><name pos:start="104:17" pos:end="104:39">avfilter_copy_buf_props</name><argument_list pos:start="104:40" pos:end="104:63">(<argument pos:start="104:41" pos:end="104:54"><expr pos:start="104:41" pos:end="104:54"><name pos:start="104:41" pos:end="104:54">filtered_frame</name></expr></argument>, <argument pos:start="104:57" pos:end="104:62"><expr pos:start="104:57" pos:end="104:62"><name pos:start="104:57" pos:end="104:62">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="106:17" pos:end="106:48"><expr pos:start="106:17" pos:end="106:47"><name pos:start="106:17" pos:end="106:35"><name pos:start="106:17" pos:end="106:30">filtered_frame</name><operator pos:start="106:31" pos:end="106:32">-&gt;</operator><name pos:start="106:33" pos:end="106:35">pts</name></name> <operator pos:start="106:37" pos:end="106:37">=</operator> <name pos:start="106:39" pos:end="106:47">frame_pts</name></expr>;</expr_stmt>

                <if_stmt pos:start="108:17" pos:end="110:93"><if pos:start="108:17" pos:end="110:93">if <condition pos:start="108:20" pos:end="108:45">(<expr pos:start="108:21" pos:end="108:44"><operator pos:start="108:21" pos:end="108:21">!</operator><name pos:start="108:22" pos:end="108:44"><name pos:start="108:22" pos:end="108:24">ost</name><operator pos:start="108:25" pos:end="108:26">-&gt;</operator><name pos:start="108:27" pos:end="108:44">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="110:21" pos:end="110:93"><block_content pos:start="110:21" pos:end="110:93">

                    <expr_stmt pos:start="110:21" pos:end="110:93"><expr pos:start="110:21" pos:end="110:92"><name pos:start="110:21" pos:end="110:55"><name pos:start="110:21" pos:end="110:23">ost</name><operator pos:start="110:24" pos:end="110:25">-&gt;</operator><name pos:start="110:26" pos:end="110:27">st</name><operator pos:start="110:28" pos:end="110:29">-&gt;</operator><name pos:start="110:30" pos:end="110:34">codec</name><operator pos:start="110:35" pos:end="110:36">-&gt;</operator><name pos:start="110:37" pos:end="110:55">sample_aspect_ratio</name></name> <operator pos:start="110:57" pos:end="110:57">=</operator> <name pos:start="110:59" pos:end="110:92"><name pos:start="110:59" pos:end="110:64">picref</name><operator pos:start="110:65" pos:end="110:66">-&gt;</operator><name pos:start="110:67" pos:end="110:71">video</name><operator pos:start="110:72" pos:end="110:73">-&gt;</operator><name pos:start="110:74" pos:end="110:92">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="114:17" pos:end="114:59"><expr pos:start="114:17" pos:end="114:58"><call pos:start="114:17" pos:end="114:58"><name pos:start="114:17" pos:end="114:28">do_video_out</name><argument_list pos:start="114:29" pos:end="114:58">(<argument pos:start="114:30" pos:end="114:36"><expr pos:start="114:30" pos:end="114:36"><name pos:start="114:30" pos:end="114:36"><name pos:start="114:30" pos:end="114:31">of</name><operator pos:start="114:32" pos:end="114:33">-&gt;</operator><name pos:start="114:34" pos:end="114:36">ctx</name></name></expr></argument>, <argument pos:start="114:39" pos:end="114:41"><expr pos:start="114:39" pos:end="114:41"><name pos:start="114:39" pos:end="114:41">ost</name></expr></argument>, <argument pos:start="114:44" pos:end="114:57"><expr pos:start="114:44" pos:end="114:57"><name pos:start="114:44" pos:end="114:57">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <case pos:start="117:13" pos:end="117:36">case <expr pos:start="117:18" pos:end="117:35"><name pos:start="117:18" pos:end="117:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="119:17" pos:end="119:64"><expr pos:start="119:17" pos:end="119:63"><call pos:start="119:17" pos:end="119:63"><name pos:start="119:17" pos:end="119:39">avfilter_copy_buf_props</name><argument_list pos:start="119:40" pos:end="119:63">(<argument pos:start="119:41" pos:end="119:54"><expr pos:start="119:41" pos:end="119:54"><name pos:start="119:41" pos:end="119:54">filtered_frame</name></expr></argument>, <argument pos:start="119:57" pos:end="119:62"><expr pos:start="119:57" pos:end="119:62"><name pos:start="119:57" pos:end="119:62">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:48"><expr pos:start="121:17" pos:end="121:47"><name pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:30">filtered_frame</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:35">pts</name></name> <operator pos:start="121:37" pos:end="121:37">=</operator> <name pos:start="121:39" pos:end="121:47">frame_pts</name></expr>;</expr_stmt>







                <expr_stmt pos:start="129:17" pos:end="129:59"><expr pos:start="129:17" pos:end="129:58"><call pos:start="129:17" pos:end="129:58"><name pos:start="129:17" pos:end="129:28">do_audio_out</name><argument_list pos:start="129:29" pos:end="129:58">(<argument pos:start="129:30" pos:end="129:36"><expr pos:start="129:30" pos:end="129:36"><name pos:start="129:30" pos:end="129:36"><name pos:start="129:30" pos:end="129:31">of</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:36">ctx</name></name></expr></argument>, <argument pos:start="129:39" pos:end="129:41"><expr pos:start="129:39" pos:end="129:41"><name pos:start="129:39" pos:end="129:41">ost</name></expr></argument>, <argument pos:start="129:44" pos:end="129:57"><expr pos:start="129:44" pos:end="129:57"><name pos:start="129:44" pos:end="129:57">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <default pos:start="132:13" pos:end="132:20">default:</default>

                <comment type="line" pos:start="134:17" pos:end="134:48">// TODO support subtitle filters</comment>

                <expr_stmt pos:start="136:17" pos:end="136:30"><expr pos:start="136:17" pos:end="136:29"><call pos:start="136:17" pos:end="136:29"><name pos:start="136:17" pos:end="136:26">av_assert0</name><argument_list pos:start="136:27" pos:end="136:29">(<argument pos:start="136:28" pos:end="136:28"><expr pos:start="136:28" pos:end="136:28"><literal type="number" pos:start="136:28" pos:end="136:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="141:13" pos:end="141:42"><expr pos:start="141:13" pos:end="141:41"><call pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:33">avfilter_unref_buffer</name><argument_list pos:start="141:34" pos:end="141:41">(<argument pos:start="141:35" pos:end="141:40"><expr pos:start="141:35" pos:end="141:40"><name pos:start="141:35" pos:end="141:40">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></for></block_content></block></function>
</unit>
