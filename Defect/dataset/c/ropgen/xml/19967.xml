<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19967.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">balloon_stats_get_all</name><parameter_list pos:start="1:34" pos:end="3:79">(<parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:40">Object</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">obj</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:53">struct</name> <name pos:start="1:55" pos:end="1:61">Visitor</name></name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">v</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:38">void</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:46">opaque</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:64"><decl pos:start="3:49" pos:end="3:64"><type pos:start="3:49" pos:end="3:64"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">name</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:78"><decl pos:start="3:67" pos:end="3:78"><type pos:start="3:67" pos:end="3:78"><name pos:start="3:67" pos:end="3:71">Error</name> <modifier pos:start="3:73" pos:end="3:73">*</modifier><modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:31">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VirtIOBalloon</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:29">= <expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:30">(<expr pos:start="15:9" pos:end="15:29"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:29">stats_last_update</name></name></expr>)</condition> <block pos:start="15:32" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:62">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:61"><expr pos:start="17:26" pos:end="17:61"><literal type="string" pos:start="17:26" pos:end="17:61">"guest hasn't updated any stats yet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:22">visit_start_struct</name><argument_list pos:start="25:23" pos:end="25:61">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">v</name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">NULL</name></expr></argument>, <argument pos:start="25:33" pos:end="25:45"><expr pos:start="25:33" pos:end="25:45"><literal type="string" pos:start="25:33" pos:end="25:45">"guest-stats"</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">name</name></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:60"><expr pos:start="25:57" pos:end="25:60"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:60">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">err</name></expr>)</condition> <block pos:start="27:14" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:66"><expr pos:start="35:5" pos:end="35:65"><call pos:start="35:5" pos:end="35:65"><name pos:start="35:5" pos:end="35:18">visit_type_int</name><argument_list pos:start="35:19" pos:end="35:65">(<argument pos:start="35:20" pos:end="35:20"><expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">v</name></expr></argument>, <argument pos:start="35:23" pos:end="35:43"><expr pos:start="35:23" pos:end="35:43"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:43"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:43">stats_last_update</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:58"><expr pos:start="35:46" pos:end="35:58"><literal type="string" pos:start="35:46" pos:end="35:58">"last-update"</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:64"><expr pos:start="35:61" pos:end="35:64"><operator pos:start="35:61" pos:end="35:61">&amp;</operator><name pos:start="35:62" pos:end="35:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><call pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:22">visit_start_struct</name><argument_list pos:start="39:23" pos:end="39:55">(<argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">v</name></expr></argument>, <argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">NULL</name></expr></argument>, <argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">NULL</name></expr></argument>, <argument pos:start="39:39" pos:end="39:45"><expr pos:start="39:39" pos:end="39:45"><literal type="string" pos:start="39:39" pos:end="39:45">"stats"</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><operator pos:start="39:51" pos:end="39:51">&amp;</operator><name pos:start="39:52" pos:end="39:54">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">err</name></expr>)</condition> <block pos:start="41:14" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:21">

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

        

    <for pos:start="49:5" pos:end="55:5">for <control pos:start="49:9" pos:end="49:45">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:40"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:39">VIRTIO_BALLOON_S_NR</name></expr>;</condition> <incr pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:42">i</name><operator pos:start="49:43" pos:end="49:44">++</operator></expr></incr>)</control> <block pos:start="49:47" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:31">

        <expr_stmt pos:start="51:9" pos:end="53:31"><expr pos:start="51:9" pos:end="53:30"><call pos:start="51:9" pos:end="53:30"><name pos:start="51:9" pos:end="51:24">visit_type_int64</name><argument_list pos:start="51:25" pos:end="53:30">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">v</name></expr></argument>, <argument pos:start="51:29" pos:end="51:52"><expr pos:start="51:29" pos:end="51:52"><operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:36">int64_t</name> <operator pos:start="51:38" pos:end="51:38">*</operator><operator pos:start="51:39" pos:end="51:39">)</operator> <operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:52"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:49">stats</name><index pos:start="51:50" pos:end="51:52">[<expr pos:start="51:51" pos:end="51:51"><name pos:start="51:51" pos:end="51:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="51:55" pos:end="51:75"><expr pos:start="51:55" pos:end="51:75"><name pos:start="51:55" pos:end="51:75"><name pos:start="51:55" pos:end="51:72">balloon_stat_names</name><index pos:start="51:73" pos:end="51:75">[<expr pos:start="51:74" pos:end="51:74"><name pos:start="51:74" pos:end="51:74">i</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:20">visit_end_struct</name><argument_list pos:start="57:21" pos:end="57:29">(<argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">v</name></expr></argument>, <argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="61:1" pos:end="61:8"><name pos:start="61:1" pos:end="61:7">out_end</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><call pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:20">visit_end_struct</name><argument_list pos:start="63:21" pos:end="63:29">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">v</name></expr></argument>, <argument pos:start="63:25" pos:end="63:28"><expr pos:start="63:25" pos:end="63:28"><operator pos:start="63:25" pos:end="63:25">&amp;</operator><name pos:start="63:26" pos:end="63:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="67:1" pos:end="67:4"><name pos:start="67:1" pos:end="67:3">out</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:19">error_propagate</name><argument_list pos:start="69:20" pos:end="69:30">(<argument pos:start="69:21" pos:end="69:24"><expr pos:start="69:21" pos:end="69:24"><name pos:start="69:21" pos:end="69:24">errp</name></expr></argument>, <argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
