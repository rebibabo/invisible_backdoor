<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16353.c" pos:tabs="8"><function pos:start="1:1" pos:end="208:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aiff_read_header</name><parameter_list pos:start="1:28" pos:end="3:51">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:50"><decl pos:start="3:29" pos:end="3:50"><type pos:start="3:29" pos:end="3:50"><name pos:start="3:29" pos:end="3:46">AVFormatParameters</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:50">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="208:1">{<block_content pos:start="7:5" pos:end="206:13">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>, <decl pos:start="7:15" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:22">filesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">offset_t</name></type> <name pos:start="9:14" pos:end="9:19">offset</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:20">version</name> <init pos:start="13:22" pos:end="13:38">= <expr pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:38">AIFF_C_VERSION1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">ByteIOContext</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">pb</name> <init pos:start="15:23" pos:end="15:29">= <expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type> <name pos:start="17:16" pos:end="17:17">st</name> <init pos:start="17:19" pos:end="17:33">= <expr pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:30">streams</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:27">/* check FORM header */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:12">filesize</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:32"><name pos:start="23:16" pos:end="23:22">get_tag</name><argument_list pos:start="23:23" pos:end="23:32">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>, <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:31">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:57">(<expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:16">filesize</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <literal type="number" pos:start="25:20" pos:end="25:20">0</literal> <operator pos:start="25:22" pos:end="25:23">||</operator> <name pos:start="25:25" pos:end="25:27">tag</name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <call pos:start="25:32" pos:end="25:56"><name pos:start="25:32" pos:end="25:36">MKTAG</name><argument_list pos:start="25:37" pos:end="25:56">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><literal type="char" pos:start="25:38" pos:end="25:40">'F'</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><literal type="char" pos:start="25:43" pos:end="25:45">'O'</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:50"><expr pos:start="25:48" pos:end="25:50"><literal type="char" pos:start="25:48" pos:end="25:50">'R'</literal></expr></argument>, <argument pos:start="25:53" pos:end="25:55"><expr pos:start="25:53" pos:end="25:55"><literal type="char" pos:start="25:53" pos:end="25:55">'M'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:24">/* AIFF data type */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:7">tag</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:22"><name pos:start="33:11" pos:end="33:18">get_le32</name><argument_list pos:start="33:19" pos:end="33:22">(<argument pos:start="33:20" pos:end="33:21"><expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:35"><if pos:start="35:5" pos:end="37:23">if <condition pos:start="35:8" pos:end="35:41">(<expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">tag</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <call pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:20">MKTAG</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><literal type="char" pos:start="35:22" pos:end="35:24">'A'</literal></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><literal type="char" pos:start="35:27" pos:end="35:29">'I'</literal></expr></argument>, <argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><literal type="char" pos:start="35:32" pos:end="35:34">'F'</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><literal type="char" pos:start="35:37" pos:end="35:39">'F'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:23"><block_content pos:start="37:9" pos:end="37:23">       <comment type="block" pos:start="35:49" pos:end="35:70">/* Got an AIFF file */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:15">version</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">AIFF</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="39:5" pos:end="41:35">else if <condition pos:start="39:13" pos:end="39:46">(<expr pos:start="39:14" pos:end="39:45"><name pos:start="39:14" pos:end="39:16">tag</name> <operator pos:start="39:18" pos:end="39:19">!=</operator> <call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:25">MKTAG</name><argument_list pos:start="39:26" pos:end="39:45">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><literal type="char" pos:start="39:27" pos:end="39:29">'A'</literal></expr></argument>, <argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><literal type="char" pos:start="39:32" pos:end="39:34">'I'</literal></expr></argument>, <argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><literal type="char" pos:start="39:37" pos:end="39:39">'F'</literal></expr></argument>, <argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><literal type="char" pos:start="39:42" pos:end="39:44">'C'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">  <comment type="block" pos:start="39:49" pos:end="39:73">/* An AIFF-C file then */</comment>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:12">filesize</name> <operator pos:start="45:14" pos:end="45:15">-=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:6">st</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:28"><name pos:start="49:10" pos:end="49:22">av_new_stream</name><argument_list pos:start="49:23" pos:end="49:28">(<argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">s</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:31"><if pos:start="51:5" pos:end="53:31">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:11">st</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:31"><block_content pos:start="53:9" pos:end="53:31">

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="57:5" pos:end="170:5">while <condition pos:start="57:11" pos:end="57:24">(<expr pos:start="57:12" pos:end="57:23"><name pos:start="57:12" pos:end="57:19">filesize</name> <operator pos:start="57:21" pos:end="57:21">&gt;</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>)</condition> <block pos:start="57:26" pos:end="170:5">{<block_content pos:start="61:9" pos:end="168:9">

        <comment type="block" pos:start="59:9" pos:end="59:36">/* parse different chunks */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:12">size</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:32"><name pos:start="61:16" pos:end="61:22">get_tag</name><argument_list pos:start="61:23" pos:end="61:32">(<argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><name pos:start="61:24" pos:end="61:25">pb</name></expr></argument>, <argument pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:31">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:24"><if pos:start="63:9" pos:end="65:24">if <condition pos:start="63:12" pos:end="63:21">(<expr pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:16">size</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:24"><block_content pos:start="65:13" pos:end="65:24">

            <return pos:start="65:13" pos:end="65:24">return <expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">size</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:16">filesize</name> <operator pos:start="69:18" pos:end="69:19">-=</operator> <name pos:start="69:21" pos:end="69:24">size</name> <operator pos:start="69:26" pos:end="69:26">+</operator> <literal type="number" pos:start="69:28" pos:end="69:28">8</literal></expr>;</expr_stmt>



        <switch pos:start="73:9" pos:end="168:9">switch <condition pos:start="73:16" pos:end="73:20">(<expr pos:start="73:17" pos:end="73:19"><name pos:start="73:17" pos:end="73:19">tag</name></expr>)</condition> <block pos:start="73:22" pos:end="168:9">{<block_content pos:start="75:9" pos:end="166:33">

        <case pos:start="75:9" pos:end="75:39">case <expr pos:start="75:14" pos:end="75:38"><call pos:start="75:14" pos:end="75:38"><name pos:start="75:14" pos:end="75:18">MKTAG</name><argument_list pos:start="75:19" pos:end="75:38">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><literal type="char" pos:start="75:20" pos:end="75:22">'C'</literal></expr></argument>, <argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><literal type="char" pos:start="75:25" pos:end="75:27">'O'</literal></expr></argument>, <argument pos:start="75:30" pos:end="75:32"><expr pos:start="75:30" pos:end="75:32"><literal type="char" pos:start="75:30" pos:end="75:32">'M'</literal></expr></argument>, <argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><literal type="char" pos:start="75:35" pos:end="75:37">'M'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="75:45" pos:end="75:62">/* Common chunk */</comment>

            <comment type="block" pos:start="77:13" pos:end="77:51">/* Then for the complete header info */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:75"><expr pos:start="79:13" pos:end="79:74"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:14">st</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:25">nb_frames</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <call pos:start="79:29" pos:end="79:74"><name pos:start="79:29" pos:end="79:43">get_aiff_header</name> <argument_list pos:start="79:45" pos:end="79:74">(<argument pos:start="79:46" pos:end="79:47"><expr pos:start="79:46" pos:end="79:47"><name pos:start="79:46" pos:end="79:47">pb</name></expr></argument>, <argument pos:start="79:50" pos:end="79:58"><expr pos:start="79:50" pos:end="79:58"><name pos:start="79:50" pos:end="79:58"><name pos:start="79:50" pos:end="79:51">st</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:58">codec</name></name></expr></argument>, <argument pos:start="79:61" pos:end="79:64"><expr pos:start="79:61" pos:end="79:64"><name pos:start="79:61" pos:end="79:64">size</name></expr></argument>, <argument pos:start="79:67" pos:end="79:73"><expr pos:start="79:67" pos:end="79:73"><name pos:start="79:67" pos:end="79:73">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:37"><if pos:start="81:13" pos:end="83:37">if <condition pos:start="81:16" pos:end="81:34">(<expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:29">nb_frames</name></name> <operator pos:start="81:31" pos:end="81:31">&lt;</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:37"><block_content pos:start="83:17" pos:end="83:37">

                <return pos:start="83:17" pos:end="83:37">return <expr pos:start="83:24" pos:end="83:36"><name pos:start="83:24" pos:end="83:36"><name pos:start="83:24" pos:end="83:25">st</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:36">nb_frames</name></name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:31"><if pos:start="85:13" pos:end="87:31">if <condition pos:start="85:16" pos:end="85:27">(<expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:22">offset</name> <operator pos:start="85:24" pos:end="85:24">&gt;</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:31"><block_content pos:start="87:17" pos:end="87:31"> <comment type="line" pos:start="85:29" pos:end="85:49">// COMM is after SSND</comment>

                <goto pos:start="87:17" pos:end="87:31">goto <name pos:start="87:22" pos:end="87:30">got_sound</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:39">case <expr pos:start="91:14" pos:end="91:38"><call pos:start="91:14" pos:end="91:38"><name pos:start="91:14" pos:end="91:18">MKTAG</name><argument_list pos:start="91:19" pos:end="91:38">(<argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><literal type="char" pos:start="91:20" pos:end="91:22">'F'</literal></expr></argument>, <argument pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><literal type="char" pos:start="91:25" pos:end="91:27">'V'</literal></expr></argument>, <argument pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><literal type="char" pos:start="91:30" pos:end="91:32">'E'</literal></expr></argument>, <argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><literal type="char" pos:start="91:35" pos:end="91:37">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="91:45" pos:end="91:63">/* Version chunk */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:19">version</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:30">get_be32</name><argument_list pos:start="93:31" pos:end="93:34">(<argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:39">case <expr pos:start="97:14" pos:end="97:38"><call pos:start="97:14" pos:end="97:38"><name pos:start="97:14" pos:end="97:18">MKTAG</name><argument_list pos:start="97:19" pos:end="97:38">(<argument pos:start="97:20" pos:end="97:22"><expr pos:start="97:20" pos:end="97:22"><literal type="char" pos:start="97:20" pos:end="97:22">'N'</literal></expr></argument>, <argument pos:start="97:25" pos:end="97:27"><expr pos:start="97:25" pos:end="97:27"><literal type="char" pos:start="97:25" pos:end="97:27">'A'</literal></expr></argument>, <argument pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><literal type="char" pos:start="97:30" pos:end="97:32">'M'</literal></expr></argument>, <argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><literal type="char" pos:start="97:35" pos:end="97:37">'E'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="97:45" pos:end="97:67">/* Sample name chunk */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:20">get_meta</name> <argument_list pos:start="99:22" pos:end="99:59">(<argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">pb</name></expr></argument>, <argument pos:start="99:27" pos:end="99:34"><expr pos:start="99:27" pos:end="99:34"><name pos:start="99:27" pos:end="99:34"><name pos:start="99:27" pos:end="99:27">s</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:34">title</name></name></expr></argument>, <argument pos:start="99:37" pos:end="99:52"><expr pos:start="99:37" pos:end="99:52"><sizeof pos:start="99:37" pos:end="99:52">sizeof<argument_list pos:start="99:43" pos:end="99:52">(<argument pos:start="99:44" pos:end="99:51"><expr pos:start="99:44" pos:end="99:51"><name pos:start="99:44" pos:end="99:51"><name pos:start="99:44" pos:end="99:44">s</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:51">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="99:55" pos:end="99:58"><expr pos:start="99:55" pos:end="99:58"><name pos:start="99:55" pos:end="99:58">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:39">case <expr pos:start="103:14" pos:end="103:38"><call pos:start="103:14" pos:end="103:38"><name pos:start="103:14" pos:end="103:18">MKTAG</name><argument_list pos:start="103:19" pos:end="103:38">(<argument pos:start="103:20" pos:end="103:22"><expr pos:start="103:20" pos:end="103:22"><literal type="char" pos:start="103:20" pos:end="103:22">'A'</literal></expr></argument>, <argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><literal type="char" pos:start="103:25" pos:end="103:27">'U'</literal></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><literal type="char" pos:start="103:30" pos:end="103:32">'T'</literal></expr></argument>, <argument pos:start="103:35" pos:end="103:37"><expr pos:start="103:35" pos:end="103:37"><literal type="char" pos:start="103:35" pos:end="103:37">'H'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="103:45" pos:end="103:62">/* Author chunk */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:62"><expr pos:start="105:13" pos:end="105:61"><call pos:start="105:13" pos:end="105:61"><name pos:start="105:13" pos:end="105:20">get_meta</name> <argument_list pos:start="105:22" pos:end="105:61">(<argument pos:start="105:23" pos:end="105:24"><expr pos:start="105:23" pos:end="105:24"><name pos:start="105:23" pos:end="105:24">pb</name></expr></argument>, <argument pos:start="105:27" pos:end="105:35"><expr pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:27">s</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:35">author</name></name></expr></argument>, <argument pos:start="105:38" pos:end="105:54"><expr pos:start="105:38" pos:end="105:54"><sizeof pos:start="105:38" pos:end="105:54">sizeof<argument_list pos:start="105:44" pos:end="105:54">(<argument pos:start="105:45" pos:end="105:53"><expr pos:start="105:45" pos:end="105:53"><name pos:start="105:45" pos:end="105:53"><name pos:start="105:45" pos:end="105:45">s</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:53">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:57" pos:end="105:60"><expr pos:start="105:57" pos:end="105:60"><name pos:start="105:57" pos:end="105:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:39">case <expr pos:start="109:14" pos:end="109:38"><call pos:start="109:14" pos:end="109:38"><name pos:start="109:14" pos:end="109:18">MKTAG</name><argument_list pos:start="109:19" pos:end="109:38">(<argument pos:start="109:20" pos:end="109:22"><expr pos:start="109:20" pos:end="109:22"><literal type="char" pos:start="109:20" pos:end="109:22">'('</literal></expr></argument>, <argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><literal type="char" pos:start="109:25" pos:end="109:27">'c'</literal></expr></argument>, <argument pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:32"><literal type="char" pos:start="109:30" pos:end="109:32">')'</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><literal type="char" pos:start="109:35" pos:end="109:37">' '</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="109:45" pos:end="109:65">/* Copyright chunk */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:68"><expr pos:start="111:13" pos:end="111:67"><call pos:start="111:13" pos:end="111:67"><name pos:start="111:13" pos:end="111:20">get_meta</name> <argument_list pos:start="111:22" pos:end="111:67">(<argument pos:start="111:23" pos:end="111:24"><expr pos:start="111:23" pos:end="111:24"><name pos:start="111:23" pos:end="111:24">pb</name></expr></argument>, <argument pos:start="111:27" pos:end="111:38"><expr pos:start="111:27" pos:end="111:38"><name pos:start="111:27" pos:end="111:38"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:38">copyright</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:60"><expr pos:start="111:41" pos:end="111:60"><sizeof pos:start="111:41" pos:end="111:60">sizeof<argument_list pos:start="111:47" pos:end="111:60">(<argument pos:start="111:48" pos:end="111:59"><expr pos:start="111:48" pos:end="111:59"><name pos:start="111:48" pos:end="111:59"><name pos:start="111:48" pos:end="111:48">s</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:59">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="111:63" pos:end="111:66"><expr pos:start="111:63" pos:end="111:66"><name pos:start="111:63" pos:end="111:66">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:39">case <expr pos:start="115:14" pos:end="115:38"><call pos:start="115:14" pos:end="115:38"><name pos:start="115:14" pos:end="115:18">MKTAG</name><argument_list pos:start="115:19" pos:end="115:38">(<argument pos:start="115:20" pos:end="115:22"><expr pos:start="115:20" pos:end="115:22"><literal type="char" pos:start="115:20" pos:end="115:22">'A'</literal></expr></argument>, <argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><literal type="char" pos:start="115:25" pos:end="115:27">'N'</literal></expr></argument>, <argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><literal type="char" pos:start="115:30" pos:end="115:32">'N'</literal></expr></argument>, <argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><literal type="char" pos:start="115:35" pos:end="115:37">'O'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="115:45" pos:end="115:66">/* Annotation chunk */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:64"><expr pos:start="117:13" pos:end="117:63"><call pos:start="117:13" pos:end="117:63"><name pos:start="117:13" pos:end="117:20">get_meta</name> <argument_list pos:start="117:22" pos:end="117:63">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">pb</name></expr></argument>, <argument pos:start="117:27" pos:end="117:36"><expr pos:start="117:27" pos:end="117:36"><name pos:start="117:27" pos:end="117:36"><name pos:start="117:27" pos:end="117:27">s</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:36">comment</name></name></expr></argument>, <argument pos:start="117:39" pos:end="117:56"><expr pos:start="117:39" pos:end="117:56"><sizeof pos:start="117:39" pos:end="117:56">sizeof<argument_list pos:start="117:45" pos:end="117:56">(<argument pos:start="117:46" pos:end="117:55"><expr pos:start="117:46" pos:end="117:55"><name pos:start="117:46" pos:end="117:55"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:55">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="117:59" pos:end="117:62"><expr pos:start="117:59" pos:end="117:62"><name pos:start="117:59" pos:end="117:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:39">case <expr pos:start="121:14" pos:end="121:38"><call pos:start="121:14" pos:end="121:38"><name pos:start="121:14" pos:end="121:18">MKTAG</name><argument_list pos:start="121:19" pos:end="121:38">(<argument pos:start="121:20" pos:end="121:22"><expr pos:start="121:20" pos:end="121:22"><literal type="char" pos:start="121:20" pos:end="121:22">'S'</literal></expr></argument>, <argument pos:start="121:25" pos:end="121:27"><expr pos:start="121:25" pos:end="121:27"><literal type="char" pos:start="121:25" pos:end="121:27">'S'</literal></expr></argument>, <argument pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><literal type="char" pos:start="121:30" pos:end="121:32">'N'</literal></expr></argument>, <argument pos:start="121:35" pos:end="121:37"><expr pos:start="121:35" pos:end="121:37"><literal type="char" pos:start="121:35" pos:end="121:37">'D'</literal></expr></argument>)</argument_list></call></expr>:</case>     <comment type="block" pos:start="121:45" pos:end="121:69">/* Sampled sound chunk */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:18">offset</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <call pos:start="123:22" pos:end="123:33"><name pos:start="123:22" pos:end="123:29">get_be32</name><argument_list pos:start="123:30" pos:end="123:33">(<argument pos:start="123:31" pos:end="123:32"><expr pos:start="123:31" pos:end="123:32"><name pos:start="123:31" pos:end="123:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="123:41" pos:end="123:66">/* Offset of sound data */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:25"><expr pos:start="125:13" pos:end="125:24"><call pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:20">get_be32</name><argument_list pos:start="125:21" pos:end="125:24">(<argument pos:start="125:22" pos:end="125:23"><expr pos:start="125:22" pos:end="125:23"><name pos:start="125:22" pos:end="125:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="block" pos:start="125:41" pos:end="125:69">/* BlockSize... don't care */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:36"><expr pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:18">offset</name> <operator pos:start="127:20" pos:end="127:21">+=</operator> <call pos:start="127:23" pos:end="127:35"><name pos:start="127:23" pos:end="127:31">url_ftell</name><argument_list pos:start="127:32" pos:end="127:35">(<argument pos:start="127:33" pos:end="127:34"><expr pos:start="127:33" pos:end="127:34"><name pos:start="127:33" pos:end="127:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="127:41" pos:end="127:74">/* Compute absolute data offset */</comment>

            <if_stmt pos:start="129:13" pos:end="131:31"><if pos:start="129:13" pos:end="131:31">if <condition pos:start="129:16" pos:end="129:36">(<expr pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:18">st</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:25">codec</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:35">codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:31"><block_content pos:start="131:17" pos:end="131:31">    <comment type="block" pos:start="129:41" pos:end="129:72">/* Assume COMM already parsed */</comment>

                <goto pos:start="131:17" pos:end="131:31">goto <name pos:start="131:22" pos:end="131:30">got_sound</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="133:13" pos:end="138:13"><if pos:start="133:13" pos:end="138:13">if <condition pos:start="133:16" pos:end="133:36">(<expr pos:start="133:17" pos:end="133:35"><call pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:31">url_is_streamed</name><argument_list pos:start="133:32" pos:end="133:35">(<argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:38" pos:end="138:13">{<block_content pos:start="135:17" pos:end="135:66">

                <expr_stmt pos:start="135:17" pos:end="135:66"><expr pos:start="135:17" pos:end="135:65"><call pos:start="135:17" pos:end="135:65"><name pos:start="135:17" pos:end="135:22">av_log</name><argument_list pos:start="135:23" pos:end="135:65">(<argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">s</name></expr></argument>, <argument pos:start="135:27" pos:end="135:38"><expr pos:start="135:27" pos:end="135:38"><name pos:start="135:27" pos:end="135:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:41" pos:end="135:64"><expr pos:start="135:41" pos:end="135:64"><literal type="string" pos:start="135:41" pos:end="135:64">"file is not seekable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="140:13" pos:end="140:36"><expr pos:start="140:13" pos:end="140:35"><call pos:start="140:13" pos:end="140:35"><name pos:start="140:13" pos:end="140:21">url_fskip</name><argument_list pos:start="140:22" pos:end="140:35">(<argument pos:start="140:23" pos:end="140:24"><expr pos:start="140:23" pos:end="140:24"><name pos:start="140:23" pos:end="140:24">pb</name></expr></argument>, <argument pos:start="140:27" pos:end="140:34"><expr pos:start="140:27" pos:end="140:34"><name pos:start="140:27" pos:end="140:30">size</name> <operator pos:start="140:32" pos:end="140:32">-</operator> <literal type="number" pos:start="140:34" pos:end="140:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="142:13" pos:end="142:18">break;</break>

        <case pos:start="144:9" pos:end="144:39">case <expr pos:start="144:14" pos:end="144:38"><call pos:start="144:14" pos:end="144:38"><name pos:start="144:14" pos:end="144:18">MKTAG</name><argument_list pos:start="144:19" pos:end="144:38">(<argument pos:start="144:20" pos:end="144:22"><expr pos:start="144:20" pos:end="144:22"><literal type="char" pos:start="144:20" pos:end="144:22">'w'</literal></expr></argument>, <argument pos:start="144:25" pos:end="144:27"><expr pos:start="144:25" pos:end="144:27"><literal type="char" pos:start="144:25" pos:end="144:27">'a'</literal></expr></argument>, <argument pos:start="144:30" pos:end="144:32"><expr pos:start="144:30" pos:end="144:32"><literal type="char" pos:start="144:30" pos:end="144:32">'v'</literal></expr></argument>, <argument pos:start="144:35" pos:end="144:37"><expr pos:start="144:35" pos:end="144:37"><literal type="char" pos:start="144:35" pos:end="144:37">'e'</literal></expr></argument>)</argument_list></call></expr>:</case>



            <expr_stmt pos:start="148:13" pos:end="148:83"><expr pos:start="148:13" pos:end="148:82"><name pos:start="148:13" pos:end="148:32"><name pos:start="148:13" pos:end="148:14">st</name><operator pos:start="148:15" pos:end="148:16">-&gt;</operator><name pos:start="148:17" pos:end="148:21">codec</name><operator pos:start="148:22" pos:end="148:23">-&gt;</operator><name pos:start="148:24" pos:end="148:32">extradata</name></name> <operator pos:start="148:34" pos:end="148:34">=</operator> <call pos:start="148:36" pos:end="148:82"><name pos:start="148:36" pos:end="148:45">av_mallocz</name><argument_list pos:start="148:46" pos:end="148:82">(<argument pos:start="148:47" pos:end="148:81"><expr pos:start="148:47" pos:end="148:81"><name pos:start="148:47" pos:end="148:50">size</name> <operator pos:start="148:52" pos:end="148:52">+</operator> <name pos:start="148:54" pos:end="148:81">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="150:13" pos:end="152:39"><if pos:start="150:13" pos:end="152:39">if <condition pos:start="150:16" pos:end="150:38">(<expr pos:start="150:17" pos:end="150:37"><operator pos:start="150:17" pos:end="150:17">!</operator><name pos:start="150:18" pos:end="150:37"><name pos:start="150:18" pos:end="150:19">st</name><operator pos:start="150:20" pos:end="150:21">-&gt;</operator><name pos:start="150:22" pos:end="150:26">codec</name><operator pos:start="150:27" pos:end="150:28">-&gt;</operator><name pos:start="150:29" pos:end="150:37">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="152:17" pos:end="152:39"><block_content pos:start="152:17" pos:end="152:39">

                <return pos:start="152:17" pos:end="152:39">return <expr pos:start="152:24" pos:end="152:38"><call pos:start="152:24" pos:end="152:38"><name pos:start="152:24" pos:end="152:30">AVERROR</name><argument_list pos:start="152:31" pos:end="152:38">(<argument pos:start="152:32" pos:end="152:37"><expr pos:start="152:32" pos:end="152:37"><name pos:start="152:32" pos:end="152:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="154:13" pos:end="154:45"><expr pos:start="154:13" pos:end="154:44"><name pos:start="154:13" pos:end="154:37"><name pos:start="154:13" pos:end="154:14">st</name><operator pos:start="154:15" pos:end="154:16">-&gt;</operator><name pos:start="154:17" pos:end="154:21">codec</name><operator pos:start="154:22" pos:end="154:23">-&gt;</operator><name pos:start="154:24" pos:end="154:37">extradata_size</name></name> <operator pos:start="154:39" pos:end="154:39">=</operator> <name pos:start="154:41" pos:end="154:44">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="156:13" pos:end="156:55"><expr pos:start="156:13" pos:end="156:54"><call pos:start="156:13" pos:end="156:54"><name pos:start="156:13" pos:end="156:22">get_buffer</name><argument_list pos:start="156:23" pos:end="156:54">(<argument pos:start="156:24" pos:end="156:25"><expr pos:start="156:24" pos:end="156:25"><name pos:start="156:24" pos:end="156:25">pb</name></expr></argument>, <argument pos:start="156:28" pos:end="156:47"><expr pos:start="156:28" pos:end="156:47"><name pos:start="156:28" pos:end="156:47"><name pos:start="156:28" pos:end="156:29">st</name><operator pos:start="156:30" pos:end="156:31">-&gt;</operator><name pos:start="156:32" pos:end="156:36">codec</name><operator pos:start="156:37" pos:end="156:38">-&gt;</operator><name pos:start="156:39" pos:end="156:47">extradata</name></name></expr></argument>, <argument pos:start="156:50" pos:end="156:53"><expr pos:start="156:50" pos:end="156:53"><name pos:start="156:50" pos:end="156:53">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="158:13" pos:end="158:18">break;</break>

        <default pos:start="160:9" pos:end="160:16">default:</default> <comment type="block" pos:start="160:18" pos:end="160:27">/* Jump */</comment>

            <if_stmt pos:start="162:13" pos:end="164:23"><if pos:start="162:13" pos:end="164:23">if <condition pos:start="162:16" pos:end="162:25">(<expr pos:start="162:17" pos:end="162:24"><name pos:start="162:17" pos:end="162:20">size</name> <operator pos:start="162:22" pos:end="162:22">&amp;</operator> <literal type="number" pos:start="162:24" pos:end="162:24">1</literal></expr>)</condition><block type="pseudo" pos:start="164:17" pos:end="164:23"><block_content pos:start="164:17" pos:end="164:23">   <comment type="block" pos:start="162:29" pos:end="162:53">/* Always even aligned */</comment>

                <expr_stmt pos:start="164:17" pos:end="164:23"><expr pos:start="164:17" pos:end="164:22"><name pos:start="164:17" pos:end="164:20">size</name><operator pos:start="164:21" pos:end="164:22">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="166:13" pos:end="166:33"><expr pos:start="166:13" pos:end="166:32"><call pos:start="166:13" pos:end="166:32"><name pos:start="166:13" pos:end="166:21">url_fskip</name> <argument_list pos:start="166:23" pos:end="166:32">(<argument pos:start="166:24" pos:end="166:25"><expr pos:start="166:24" pos:end="166:25"><name pos:start="166:24" pos:end="166:25">pb</name></expr></argument>, <argument pos:start="166:28" pos:end="166:31"><expr pos:start="166:28" pos:end="166:31"><name pos:start="166:28" pos:end="166:31">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <comment type="block" pos:start="174:5" pos:end="174:42">/* End of loop and didn't get sound */</comment>

    <return pos:start="176:5" pos:end="176:31">return <expr pos:start="176:12" pos:end="176:30"><name pos:start="176:12" pos:end="176:30">AVERROR_INVALIDDATA</name></expr>;</return>



<label pos:start="180:1" pos:end="180:10"><name pos:start="180:1" pos:end="180:9">got_sound</name>:</label>

    <comment type="block" pos:start="182:5" pos:end="182:58">/* Now positioned, get the sound data start and end */</comment>

    <if_stmt pos:start="184:5" pos:end="186:62"><if pos:start="184:5" pos:end="186:62">if <condition pos:start="184:8" pos:end="184:22">(<expr pos:start="184:9" pos:end="184:21"><name pos:start="184:9" pos:end="184:21"><name pos:start="184:9" pos:end="184:10">st</name><operator pos:start="184:11" pos:end="184:12">-&gt;</operator><name pos:start="184:13" pos:end="184:21">nb_frames</name></name></expr>)</condition><block type="pseudo" pos:start="186:9" pos:end="186:62"><block_content pos:start="186:9" pos:end="186:62">

        <expr_stmt pos:start="186:9" pos:end="186:62"><expr pos:start="186:9" pos:end="186:61"><name pos:start="186:9" pos:end="186:20"><name pos:start="186:9" pos:end="186:9">s</name><operator pos:start="186:10" pos:end="186:11">-&gt;</operator><name pos:start="186:12" pos:end="186:20">file_size</name></name> <operator pos:start="186:22" pos:end="186:22">=</operator> <name pos:start="186:24" pos:end="186:36"><name pos:start="186:24" pos:end="186:25">st</name><operator pos:start="186:26" pos:end="186:27">-&gt;</operator><name pos:start="186:28" pos:end="186:36">nb_frames</name></name> <operator pos:start="186:38" pos:end="186:38">*</operator> <name pos:start="186:40" pos:end="186:61"><name pos:start="186:40" pos:end="186:41">st</name><operator pos:start="186:42" pos:end="186:43">-&gt;</operator><name pos:start="186:44" pos:end="186:48">codec</name><operator pos:start="186:49" pos:end="186:50">-&gt;</operator><name pos:start="186:51" pos:end="186:61">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="190:5" pos:end="190:55"><expr pos:start="190:5" pos:end="190:54"><call pos:start="190:5" pos:end="190:54"><name pos:start="190:5" pos:end="190:19">av_set_pts_info</name><argument_list pos:start="190:20" pos:end="190:54">(<argument pos:start="190:21" pos:end="190:22"><expr pos:start="190:21" pos:end="190:22"><name pos:start="190:21" pos:end="190:22">st</name></expr></argument>, <argument pos:start="190:25" pos:end="190:26"><expr pos:start="190:25" pos:end="190:26"><literal type="number" pos:start="190:25" pos:end="190:26">64</literal></expr></argument>, <argument pos:start="190:29" pos:end="190:29"><expr pos:start="190:29" pos:end="190:29"><literal type="number" pos:start="190:29" pos:end="190:29">1</literal></expr></argument>, <argument pos:start="190:32" pos:end="190:53"><expr pos:start="190:32" pos:end="190:53"><name pos:start="190:32" pos:end="190:53"><name pos:start="190:32" pos:end="190:33">st</name><operator pos:start="190:34" pos:end="190:35">-&gt;</operator><name pos:start="190:36" pos:end="190:40">codec</name><operator pos:start="190:41" pos:end="190:42">-&gt;</operator><name pos:start="190:43" pos:end="190:53">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="192:5" pos:end="192:23"><expr pos:start="192:5" pos:end="192:22"><name pos:start="192:5" pos:end="192:18"><name pos:start="192:5" pos:end="192:6">st</name><operator pos:start="192:7" pos:end="192:8">-&gt;</operator><name pos:start="192:9" pos:end="192:18">start_time</name></name> <operator pos:start="192:20" pos:end="192:20">=</operator> <literal type="number" pos:start="192:22" pos:end="192:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="194:5" pos:end="196:62"><expr pos:start="194:5" pos:end="196:61"><name pos:start="194:5" pos:end="194:16"><name pos:start="194:5" pos:end="194:6">st</name><operator pos:start="194:7" pos:end="194:8">-&gt;</operator><name pos:start="194:9" pos:end="194:16">duration</name></name> <operator pos:start="194:18" pos:end="194:18">=</operator> <ternary pos:start="194:20" pos:end="196:61"><condition pos:start="194:20" pos:end="194:42"><expr pos:start="194:20" pos:end="194:40"><name pos:start="194:20" pos:end="194:40"><name pos:start="194:20" pos:end="194:21">st</name><operator pos:start="194:22" pos:end="194:23">-&gt;</operator><name pos:start="194:24" pos:end="194:28">codec</name><operator pos:start="194:29" pos:end="194:30">-&gt;</operator><name pos:start="194:31" pos:end="194:40">frame_size</name></name></expr> ?</condition><then pos:start="196:9" pos:end="196:45">

        <expr pos:start="196:9" pos:end="196:45"><name pos:start="196:9" pos:end="196:21"><name pos:start="196:9" pos:end="196:10">st</name><operator pos:start="196:11" pos:end="196:12">-&gt;</operator><name pos:start="196:13" pos:end="196:21">nb_frames</name></name> <operator pos:start="196:23" pos:end="196:23">*</operator> <name pos:start="196:25" pos:end="196:45"><name pos:start="196:25" pos:end="196:26">st</name><operator pos:start="196:27" pos:end="196:28">-&gt;</operator><name pos:start="196:29" pos:end="196:33">codec</name><operator pos:start="196:34" pos:end="196:35">-&gt;</operator><name pos:start="196:36" pos:end="196:45">frame_size</name></name></expr> </then><else pos:start="196:47" pos:end="196:61">: <expr pos:start="196:49" pos:end="196:61"><name pos:start="196:49" pos:end="196:61"><name pos:start="196:49" pos:end="196:50">st</name><operator pos:start="196:51" pos:end="196:52">-&gt;</operator><name pos:start="196:53" pos:end="196:61">nb_frames</name></name></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="200:5" pos:end="200:48">/* Position the stream at the first block */</comment>

    <expr_stmt pos:start="202:5" pos:end="202:36"><expr pos:start="202:5" pos:end="202:35"><call pos:start="202:5" pos:end="202:35"><name pos:start="202:5" pos:end="202:13">url_fseek</name><argument_list pos:start="202:14" pos:end="202:35">(<argument pos:start="202:15" pos:end="202:16"><expr pos:start="202:15" pos:end="202:16"><name pos:start="202:15" pos:end="202:16">pb</name></expr></argument>, <argument pos:start="202:19" pos:end="202:24"><expr pos:start="202:19" pos:end="202:24"><name pos:start="202:19" pos:end="202:24">offset</name></expr></argument>, <argument pos:start="202:27" pos:end="202:34"><expr pos:start="202:27" pos:end="202:34"><name pos:start="202:27" pos:end="202:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="206:5" pos:end="206:13">return <expr pos:start="206:12" pos:end="206:12"><literal type="number" pos:start="206:12" pos:end="206:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
