<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16456.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trun</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="311:1">{<block_content pos:start="5:5" pos:end="309:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MOVFragment</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">frag</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:26">c</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:36">fragment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">MOVStts</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">ctts_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">data_offset</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:55"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">unsigned</name></type> <name pos:start="19:14" pos:end="19:20">entries</name></decl>, <decl pos:start="19:23" pos:end="19:54"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:23" pos:end="19:40">first_sample_flags</name> <init pos:start="19:42" pos:end="19:54">= <expr pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:47">frag</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:54">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">flags</name></decl>, <decl pos:start="21:16" pos:end="21:23"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:23">distance</name></decl>, <decl pos:start="21:26" pos:end="21:26"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:26" pos:end="21:26">i</name></decl>;</decl_stmt>



    <for pos:start="25:5" pos:end="35:5">for <control pos:start="25:9" pos:end="25:43">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:25">fc</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:37">nb_streams</name></name></expr>;</condition> <incr pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:40">i</name><operator pos:start="25:41" pos:end="25:42">++</operator></expr></incr>)</control> <block pos:start="25:45" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:52">(<expr pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:13">c</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:17">fc</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">streams</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">id</name> <operator pos:start="27:35" pos:end="27:36">==</operator> <name pos:start="27:38" pos:end="27:51"><name pos:start="27:38" pos:end="27:41">frag</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:51">track_id</name></name></expr>)</condition> <block pos:start="27:54" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:18">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:14">st</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:34"><name pos:start="29:18" pos:end="29:18">c</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:22">fc</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:31">streams</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><name pos:start="29:33" pos:end="29:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">st</name></expr>)</condition> <block pos:start="37:14" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:98"><expr pos:start="39:9" pos:end="39:97"><call pos:start="39:9" pos:end="39:97"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:97">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">c</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">fc</name></name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:80"><expr pos:start="39:37" pos:end="39:80"><literal type="string" pos:start="39:37" pos:end="39:80">"could not find corresponding track id %u\n"</literal></expr></argument>, <argument pos:start="39:83" pos:end="39:96"><expr pos:start="39:83" pos:end="39:96"><name pos:start="39:83" pos:end="39:96"><name pos:start="39:83" pos:end="39:86">frag</name><operator pos:start="39:87" pos:end="39:88">-&gt;</operator><name pos:start="39:89" pos:end="39:96">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:6">sc</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:11">st</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">priv_data</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:17"><if pos:start="47:5" pos:end="49:17">if <condition pos:start="47:8" pos:end="47:78">(<expr pos:start="47:9" pos:end="47:77"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:10">sc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:28">pseudo_stream_id</name></name><operator pos:start="47:29" pos:end="47:29">+</operator><literal type="number" pos:start="47:30" pos:end="47:30">1</literal> <operator pos:start="47:32" pos:end="47:33">!=</operator> <name pos:start="47:35" pos:end="47:47"><name pos:start="47:35" pos:end="47:38">frag</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:47">stsd_id</name></name> <operator pos:start="47:49" pos:end="47:50">&amp;&amp;</operator> <name pos:start="47:52" pos:end="47:71"><name pos:start="47:52" pos:end="47:53">sc</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:71">pseudo_stream_id</name></name> <operator pos:start="47:73" pos:end="47:74">!=</operator> <operator pos:start="47:76" pos:end="47:76">-</operator><literal type="number" pos:start="47:77" pos:end="47:77">1</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:17"><block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><call pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:11">avio_r8</name><argument_list pos:start="51:12" pos:end="51:15">(<argument pos:start="51:13" pos:end="51:14"><expr pos:start="51:13" pos:end="51:14"><name pos:start="51:13" pos:end="51:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:18" pos:end="51:30">/* version */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:9">flags</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:21">avio_rb24</name><argument_list pos:start="53:22" pos:end="53:25">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:11">entries</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:27"><name pos:start="55:15" pos:end="55:23">avio_rb32</name><argument_list pos:start="55:24" pos:end="55:27">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:75"><expr pos:start="57:5" pos:end="57:74"><call pos:start="57:5" pos:end="57:74"><name pos:start="57:5" pos:end="57:10">av_log</name><argument_list pos:start="57:11" pos:end="57:74">(<argument pos:start="57:12" pos:end="57:16"><expr pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:12">c</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:16">fc</name></name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="57:33" pos:end="57:57"><expr pos:start="57:33" pos:end="57:57"><literal type="string" pos:start="57:33" pos:end="57:57">"flags 0x%x entries %u\n"</literal></expr></argument>, <argument pos:start="57:60" pos:end="57:64"><expr pos:start="57:60" pos:end="57:64"><name pos:start="57:60" pos:end="57:64">flags</name></expr></argument>, <argument pos:start="57:67" pos:end="57:73"><expr pos:start="57:67" pos:end="57:73"><name pos:start="57:67" pos:end="57:73">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="69:96">/* Always assume the presence of composition time offsets.

     * Without this assumption, for instance, we cannot deal with a track in fragmented movies that meet the following.

     *  1) in the initial movie, there are no samples.

     *  2) in the first movie fragment, there is only one sample without composition time offset.

     *  3) in the subsequent movie fragments, there are samples with composition time offset. */</comment>

    <if_stmt pos:start="71:5" pos:end="99:5"><if pos:start="71:5" pos:end="99:5">if <condition pos:start="71:8" pos:end="71:44">(<expr pos:start="71:9" pos:end="71:43"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:11">sc</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:23">ctts_count</name></name> <operator pos:start="71:25" pos:end="71:26">&amp;&amp;</operator> <name pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:29">sc</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:43">sample_count</name></name></expr>)</condition>

    <block pos:start="73:5" pos:end="99:5">{<block_content pos:start="77:9" pos:end="97:9">

        <comment type="block" pos:start="75:9" pos:end="75:72">/* Complement ctts table if moov atom doesn't have ctts atom. */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:111"><expr pos:start="77:9" pos:end="77:110"><name pos:start="77:9" pos:end="77:17">ctts_data</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:110"><name pos:start="77:21" pos:end="77:35">av_fast_realloc</name><argument_list pos:start="77:36" pos:end="77:110">(<argument pos:start="77:37" pos:end="77:40"><expr pos:start="77:37" pos:end="77:40"><name pos:start="77:37" pos:end="77:40">NULL</name></expr></argument>, <argument pos:start="77:43" pos:end="77:66"><expr pos:start="77:43" pos:end="77:66"><operator pos:start="77:43" pos:end="77:43">&amp;</operator><name pos:start="77:44" pos:end="77:66"><name pos:start="77:44" pos:end="77:45">sc</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:66">ctts_allocated_size</name></name></expr></argument>, <argument pos:start="77:69" pos:end="77:109"><expr pos:start="77:69" pos:end="77:109"><sizeof pos:start="77:69" pos:end="77:90">sizeof<argument_list pos:start="77:75" pos:end="77:90">(<argument pos:start="77:76" pos:end="77:89"><expr pos:start="77:76" pos:end="77:89"><operator pos:start="77:76" pos:end="77:76">*</operator><name pos:start="77:77" pos:end="77:89"><name pos:start="77:77" pos:end="77:78">sc</name><operator pos:start="77:79" pos:end="77:80">-&gt;</operator><name pos:start="77:81" pos:end="77:89">ctts_data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:92" pos:end="77:92">*</operator> <name pos:start="77:94" pos:end="77:109"><name pos:start="77:94" pos:end="77:95">sc</name><operator pos:start="77:96" pos:end="77:97">-&gt;</operator><name pos:start="77:98" pos:end="77:109">sample_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:35"><if pos:start="79:9" pos:end="81:35">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:22">ctts_data</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:35"><block_content pos:start="81:13" pos:end="81:35">

            <return pos:start="81:13" pos:end="81:35">return <expr pos:start="81:20" pos:end="81:34"><call pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="83:9" pos:end="85:77">/* Don't use a count greater than 1 here since it will leave a gap in

         * the ctts index which the code below relies on being sequential. */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:10">sc</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:21">ctts_data</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:33">ctts_data</name></expr>;</expr_stmt>

        <for pos:start="89:9" pos:end="97:9">for <control pos:start="89:13" pos:end="89:46">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:41"><expr pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:26">sc</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:40">sample_count</name></name></expr>;</condition> <incr pos:start="89:43" pos:end="89:45"><expr pos:start="89:43" pos:end="89:45"><name pos:start="89:43" pos:end="89:43">i</name><operator pos:start="89:44" pos:end="89:45">++</operator></expr></incr>)</control> <block pos:start="89:48" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:29">

            <expr_stmt pos:start="91:13" pos:end="91:52"><expr pos:start="91:13" pos:end="91:51"><name pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:14">sc</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:25">ctts_data</name><index pos:start="91:26" pos:end="91:41">[<expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:28">sc</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:40">ctts_count</name></name></expr>]</index></name><operator pos:start="91:42" pos:end="91:42">.</operator><name pos:start="91:43" pos:end="91:47">count</name> <operator pos:start="91:49" pos:end="91:49">=</operator> <literal type="number" pos:start="91:51" pos:end="91:51">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:55"><expr pos:start="93:13" pos:end="93:54"><name pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:14">sc</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">ctts_data</name><index pos:start="93:26" pos:end="93:41">[<expr pos:start="93:27" pos:end="93:40"><name pos:start="93:27" pos:end="93:40"><name pos:start="93:27" pos:end="93:28">sc</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:40">ctts_count</name></name></expr>]</index></name><operator pos:start="93:42" pos:end="93:42">.</operator><name pos:start="93:43" pos:end="93:50">duration</name> <operator pos:start="93:52" pos:end="93:52">=</operator> <literal type="number" pos:start="93:54" pos:end="93:54">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:29"><expr pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:14">sc</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:26">ctts_count</name></name><operator pos:start="95:27" pos:end="95:28">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="101:5" pos:end="103:35"><if pos:start="101:5" pos:end="103:35">if <condition pos:start="101:8" pos:end="101:76">(<expr pos:start="101:9" pos:end="101:75"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:17">uint64_t</name><operator pos:start="101:18" pos:end="101:18">)</operator><name pos:start="101:19" pos:end="101:25">entries</name><operator pos:start="101:26" pos:end="101:26">+</operator><name pos:start="101:27" pos:end="101:40"><name pos:start="101:27" pos:end="101:28">sc</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:40">ctts_count</name></name> <operator pos:start="101:42" pos:end="101:43">&gt;=</operator> <name pos:start="101:45" pos:end="101:52">UINT_MAX</name><operator pos:start="101:53" pos:end="101:53">/</operator><sizeof pos:start="101:54" pos:end="101:75">sizeof<argument_list pos:start="101:60" pos:end="101:75">(<argument pos:start="101:61" pos:end="101:74"><expr pos:start="101:61" pos:end="101:74"><operator pos:start="101:61" pos:end="101:61">*</operator><name pos:start="101:62" pos:end="101:74"><name pos:start="101:62" pos:end="101:63">sc</name><operator pos:start="101:64" pos:end="101:65">-&gt;</operator><name pos:start="101:66" pos:end="101:74">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:35"><block_content pos:start="103:9" pos:end="103:35">

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="105:80"><if pos:start="105:5" pos:end="105:80">if <condition pos:start="105:8" pos:end="105:37">(<expr pos:start="105:9" pos:end="105:36"><name pos:start="105:9" pos:end="105:13">flags</name> <operator pos:start="105:15" pos:end="105:15">&amp;</operator> <name pos:start="105:17" pos:end="105:36">MOV_TRUN_DATA_OFFSET</name></expr>)</condition><block type="pseudo" pos:start="105:46" pos:end="105:80"><block_content pos:start="105:46" pos:end="105:80">        <expr_stmt pos:start="105:46" pos:end="105:80"><expr pos:start="105:46" pos:end="105:79"><name pos:start="105:46" pos:end="105:56">data_offset</name>        <operator pos:start="105:65" pos:end="105:65">=</operator> <call pos:start="105:67" pos:end="105:79"><name pos:start="105:67" pos:end="105:75">avio_rb32</name><argument_list pos:start="105:76" pos:end="105:79">(<argument pos:start="105:77" pos:end="105:78"><expr pos:start="105:77" pos:end="105:78"><name pos:start="105:77" pos:end="105:78">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="107:80"><if pos:start="107:5" pos:end="107:80">if <condition pos:start="107:8" pos:end="107:44">(<expr pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:13">flags</name> <operator pos:start="107:15" pos:end="107:15">&amp;</operator> <name pos:start="107:17" pos:end="107:43">MOV_TRUN_FIRST_SAMPLE_FLAGS</name></expr>)</condition><block type="pseudo" pos:start="107:46" pos:end="107:80"><block_content pos:start="107:46" pos:end="107:80"> <expr_stmt pos:start="107:46" pos:end="107:80"><expr pos:start="107:46" pos:end="107:79"><name pos:start="107:46" pos:end="107:63">first_sample_flags</name> <operator pos:start="107:65" pos:end="107:65">=</operator> <call pos:start="107:67" pos:end="107:79"><name pos:start="107:67" pos:end="107:75">avio_rb32</name><argument_list pos:start="107:76" pos:end="107:79">(<argument pos:start="107:77" pos:end="107:78"><expr pos:start="107:77" pos:end="107:78"><name pos:start="107:77" pos:end="107:78">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:7">dts</name>    <operator pos:start="109:12" pos:end="109:12">=</operator> <name pos:start="109:14" pos:end="109:26"><name pos:start="109:14" pos:end="109:15">sc</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:26">track_end</name></name> <operator pos:start="109:28" pos:end="109:28">-</operator> <name pos:start="109:30" pos:end="109:44"><name pos:start="109:30" pos:end="109:31">sc</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:44">time_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:50"><expr pos:start="111:5" pos:end="111:49"><name pos:start="111:5" pos:end="111:10">offset</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:35"><name pos:start="111:14" pos:end="111:17">frag</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:35">base_data_offset</name></name> <operator pos:start="111:37" pos:end="111:37">+</operator> <name pos:start="111:39" pos:end="111:49">data_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:17"><expr pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:12">distance</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <literal type="number" pos:start="113:16" pos:end="113:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:81"><expr pos:start="115:5" pos:end="115:80"><call pos:start="115:5" pos:end="115:80"><name pos:start="115:5" pos:end="115:10">av_log</name><argument_list pos:start="115:11" pos:end="115:80">(<argument pos:start="115:12" pos:end="115:16"><expr pos:start="115:12" pos:end="115:16"><name pos:start="115:12" pos:end="115:16"><name pos:start="115:12" pos:end="115:12">c</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:16">fc</name></name></expr></argument>, <argument pos:start="115:19" pos:end="115:30"><expr pos:start="115:19" pos:end="115:30"><name pos:start="115:19" pos:end="115:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="115:33" pos:end="115:59"><expr pos:start="115:33" pos:end="115:59"><literal type="string" pos:start="115:33" pos:end="115:59">"first sample flags 0x%x\n"</literal></expr></argument>, <argument pos:start="115:62" pos:end="115:79"><expr pos:start="115:62" pos:end="115:79"><name pos:start="115:62" pos:end="115:79">first_sample_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="117:5" pos:end="287:5">for <control pos:start="117:9" pos:end="117:53">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:48"><expr pos:start="117:17" pos:end="117:47"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <name pos:start="117:21" pos:end="117:27">entries</name> <operator pos:start="117:29" pos:end="117:30">&amp;&amp;</operator> <operator pos:start="117:32" pos:end="117:32">!</operator><name pos:start="117:33" pos:end="117:47"><name pos:start="117:33" pos:end="117:34">pb</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:47">eof_reached</name></name></expr>;</condition> <incr pos:start="117:50" pos:end="117:52"><expr pos:start="117:50" pos:end="117:52"><name pos:start="117:50" pos:end="117:50">i</name><operator pos:start="117:51" pos:end="117:52">++</operator></expr></incr>)</control> <block pos:start="117:55" pos:end="287:5">{<block_content pos:start="119:9" pos:end="285:33">

        <decl_stmt pos:start="119:9" pos:end="119:42"><decl pos:start="119:9" pos:end="119:41"><type pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:16">unsigned</name></type> <name pos:start="119:18" pos:end="119:28">sample_size</name> <init pos:start="119:30" pos:end="119:41">= <expr pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:35">frag</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:41">size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:64"><decl pos:start="121:9" pos:end="121:63"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:24">sample_flags</name> <init pos:start="121:26" pos:end="121:63">= <expr pos:start="121:28" pos:end="121:63"><ternary pos:start="121:28" pos:end="121:63"><condition pos:start="121:28" pos:end="121:30"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">i</name></expr> ?</condition><then pos:start="121:32" pos:end="121:42"> <expr pos:start="121:32" pos:end="121:42"><name pos:start="121:32" pos:end="121:42"><name pos:start="121:32" pos:end="121:35">frag</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:42">flags</name></name></expr> </then><else pos:start="121:44" pos:end="121:63">: <expr pos:start="121:46" pos:end="121:63"><name pos:start="121:46" pos:end="121:63">first_sample_flags</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="123:9" pos:end="123:50"><decl pos:start="123:9" pos:end="123:49"><type pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:16">unsigned</name></type> <name pos:start="123:18" pos:end="123:32">sample_duration</name> <init pos:start="123:34" pos:end="123:49">= <expr pos:start="123:36" pos:end="123:49"><name pos:start="123:36" pos:end="123:49"><name pos:start="123:36" pos:end="123:39">frag</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:49">duration</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:35"><decl pos:start="125:9" pos:end="125:34"><type pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:16">unsigned</name></type> <name pos:start="125:18" pos:end="125:30">ctts_duration</name> <init pos:start="125:32" pos:end="125:34">= <expr pos:start="125:34" pos:end="125:34"><literal type="number" pos:start="125:34" pos:end="125:34">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:25"><decl pos:start="127:9" pos:end="127:24"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:20">keyframe</name> <init pos:start="127:22" pos:end="127:24">= <expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:27"><decl pos:start="129:9" pos:end="129:26"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:22">ctts_index</name> <init pos:start="129:24" pos:end="129:26">= <expr pos:start="129:26" pos:end="129:26"><literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:56"><decl pos:start="131:9" pos:end="131:55"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:32">old_nb_index_entries</name> <init pos:start="131:34" pos:end="131:55">= <expr pos:start="131:36" pos:end="131:55"><name pos:start="131:36" pos:end="131:55"><name pos:start="131:36" pos:end="131:37">st</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:55">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="135:78"><if pos:start="135:9" pos:end="135:78">if <condition pos:start="135:12" pos:end="135:45">(<expr pos:start="135:13" pos:end="135:44"><name pos:start="135:13" pos:end="135:17">flags</name> <operator pos:start="135:19" pos:end="135:19">&amp;</operator> <name pos:start="135:21" pos:end="135:44">MOV_TRUN_SAMPLE_DURATION</name></expr>)</condition><block type="pseudo" pos:start="135:47" pos:end="135:78"><block_content pos:start="135:47" pos:end="135:78"> <expr_stmt pos:start="135:47" pos:end="135:78"><expr pos:start="135:47" pos:end="135:77"><name pos:start="135:47" pos:end="135:61">sample_duration</name> <operator pos:start="135:63" pos:end="135:63">=</operator> <call pos:start="135:65" pos:end="135:77"><name pos:start="135:65" pos:end="135:73">avio_rb32</name><argument_list pos:start="135:74" pos:end="135:77">(<argument pos:start="135:75" pos:end="135:76"><expr pos:start="135:75" pos:end="135:76"><name pos:start="135:75" pos:end="135:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="137:78"><if pos:start="137:9" pos:end="137:78">if <condition pos:start="137:12" pos:end="137:41">(<expr pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:17">flags</name> <operator pos:start="137:19" pos:end="137:19">&amp;</operator> <name pos:start="137:21" pos:end="137:40">MOV_TRUN_SAMPLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="137:47" pos:end="137:78"><block_content pos:start="137:47" pos:end="137:78">     <expr_stmt pos:start="137:47" pos:end="137:78"><expr pos:start="137:47" pos:end="137:77"><name pos:start="137:47" pos:end="137:57">sample_size</name>     <operator pos:start="137:63" pos:end="137:63">=</operator> <call pos:start="137:65" pos:end="137:77"><name pos:start="137:65" pos:end="137:73">avio_rb32</name><argument_list pos:start="137:74" pos:end="137:77">(<argument pos:start="137:75" pos:end="137:76"><expr pos:start="137:75" pos:end="137:76"><name pos:start="137:75" pos:end="137:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="139:78"><if pos:start="139:9" pos:end="139:78">if <condition pos:start="139:12" pos:end="139:42">(<expr pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:17">flags</name> <operator pos:start="139:19" pos:end="139:19">&amp;</operator> <name pos:start="139:21" pos:end="139:41">MOV_TRUN_SAMPLE_FLAGS</name></expr>)</condition><block type="pseudo" pos:start="139:47" pos:end="139:78"><block_content pos:start="139:47" pos:end="139:78">    <expr_stmt pos:start="139:47" pos:end="139:78"><expr pos:start="139:47" pos:end="139:77"><name pos:start="139:47" pos:end="139:58">sample_flags</name>    <operator pos:start="139:63" pos:end="139:63">=</operator> <call pos:start="139:65" pos:end="139:77"><name pos:start="139:65" pos:end="139:73">avio_rb32</name><argument_list pos:start="139:74" pos:end="139:77">(<argument pos:start="139:75" pos:end="139:76"><expr pos:start="139:75" pos:end="139:76"><name pos:start="139:75" pos:end="139:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="141:78"><if pos:start="141:9" pos:end="141:78">if <condition pos:start="141:12" pos:end="141:40">(<expr pos:start="141:13" pos:end="141:39"><name pos:start="141:13" pos:end="141:17">flags</name> <operator pos:start="141:19" pos:end="141:19">&amp;</operator> <name pos:start="141:21" pos:end="141:39">MOV_TRUN_SAMPLE_CTS</name></expr>)</condition><block type="pseudo" pos:start="141:47" pos:end="141:78"><block_content pos:start="141:47" pos:end="141:78">      <expr_stmt pos:start="141:47" pos:end="141:78"><expr pos:start="141:47" pos:end="141:77"><name pos:start="141:47" pos:end="141:59">ctts_duration</name>   <operator pos:start="141:63" pos:end="141:63">=</operator> <call pos:start="141:65" pos:end="141:77"><name pos:start="141:65" pos:end="141:73">avio_rb32</name><argument_list pos:start="141:74" pos:end="141:77">(<argument pos:start="141:75" pos:end="141:76"><expr pos:start="141:75" pos:end="141:76"><name pos:start="141:75" pos:end="141:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:48"><expr pos:start="145:9" pos:end="145:47"><call pos:start="145:9" pos:end="145:47"><name pos:start="145:9" pos:end="145:28">mov_update_dts_shift</name><argument_list pos:start="145:29" pos:end="145:47">(<argument pos:start="145:30" pos:end="145:31"><expr pos:start="145:30" pos:end="145:31"><name pos:start="145:30" pos:end="145:31">sc</name></expr></argument>, <argument pos:start="145:34" pos:end="145:46"><expr pos:start="145:34" pos:end="145:46"><name pos:start="145:34" pos:end="145:46">ctts_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="189:9"><if pos:start="147:9" pos:end="189:9">if <condition pos:start="147:12" pos:end="147:41">(<expr pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:16">frag</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:22">time</name></name> <operator pos:start="147:24" pos:end="147:25">!=</operator> <name pos:start="147:27" pos:end="147:40">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="147:43" pos:end="189:9">{<block_content pos:start="149:13" pos:end="187:40">

            <if_stmt pos:start="149:13" pos:end="185:13"><if pos:start="149:13" pos:end="177:13">if <condition pos:start="149:16" pos:end="149:56">(<expr pos:start="149:17" pos:end="149:55"><name pos:start="149:17" pos:end="149:31"><name pos:start="149:17" pos:end="149:17">c</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:31">use_mfra_for</name></name> <operator pos:start="149:33" pos:end="149:34">==</operator> <name pos:start="149:36" pos:end="149:55">FF_MOV_FLAG_MFRA_PTS</name></expr>)</condition> <block pos:start="149:58" pos:end="177:13">{<block_content pos:start="151:17" pos:end="175:84">

                <decl_stmt pos:start="151:17" pos:end="151:41"><decl pos:start="151:17" pos:end="151:40"><type pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:23">int64_t</name></type> <name pos:start="151:25" pos:end="151:27">pts</name> <init pos:start="151:29" pos:end="151:40">= <expr pos:start="151:31" pos:end="151:40"><name pos:start="151:31" pos:end="151:40"><name pos:start="151:31" pos:end="151:34">frag</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:40">time</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="153:17" pos:end="161:70"><expr pos:start="153:17" pos:end="161:69"><call pos:start="153:17" pos:end="161:69"><name pos:start="153:17" pos:end="153:22">av_log</name><argument_list pos:start="153:23" pos:end="161:69">(<argument pos:start="153:24" pos:end="153:28"><expr pos:start="153:24" pos:end="153:28"><name pos:start="153:24" pos:end="153:28"><name pos:start="153:24" pos:end="153:24">c</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:28">fc</name></name></expr></argument>, <argument pos:start="153:31" pos:end="153:42"><expr pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="153:45" pos:end="157:85"><expr pos:start="153:45" pos:end="157:85"><literal type="string" pos:start="153:45" pos:end="153:63">"found frag time %"</literal><name pos:start="153:64" pos:end="153:69">PRId64</name>

                        <literal type="string" pos:start="155:25" pos:end="155:60">" sc-&gt;dts_shift %d ctts.duration %d"</literal>

                        <literal type="string" pos:start="157:25" pos:end="157:44">" sc-&gt;time_offset %"</literal><name pos:start="157:45" pos:end="157:50">PRId64</name><literal type="string" pos:start="157:51" pos:end="157:85">" flags &amp; MOV_TRUN_SAMPLE_CTS %d\n"</literal></expr></argument>, <argument pos:start="157:88" pos:end="157:90"><expr pos:start="157:88" pos:end="157:90"><name pos:start="157:88" pos:end="157:90">pts</name></expr></argument>,

                        <argument pos:start="159:25" pos:end="159:37"><expr pos:start="159:25" pos:end="159:37"><name pos:start="159:25" pos:end="159:37"><name pos:start="159:25" pos:end="159:26">sc</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:37">dts_shift</name></name></expr></argument>, <argument pos:start="159:40" pos:end="159:52"><expr pos:start="159:40" pos:end="159:52"><name pos:start="159:40" pos:end="159:52">ctts_duration</name></expr></argument>,

                        <argument pos:start="161:25" pos:end="161:39"><expr pos:start="161:25" pos:end="161:39"><name pos:start="161:25" pos:end="161:39"><name pos:start="161:25" pos:end="161:26">sc</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:39">time_offset</name></name></expr></argument>, <argument pos:start="161:42" pos:end="161:68"><expr pos:start="161:42" pos:end="161:68"><name pos:start="161:42" pos:end="161:46">flags</name> <operator pos:start="161:48" pos:end="161:48">&amp;</operator> <name pos:start="161:50" pos:end="161:68">MOV_TRUN_SAMPLE_CTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:42"><expr pos:start="163:17" pos:end="163:41"><name pos:start="163:17" pos:end="163:19">dts</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:25">pts</name> <operator pos:start="163:27" pos:end="163:27">-</operator> <name pos:start="163:29" pos:end="163:41"><name pos:start="163:29" pos:end="163:30">sc</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:41">dts_shift</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="165:17" pos:end="173:17"><if pos:start="165:17" pos:end="169:17">if <condition pos:start="165:20" pos:end="165:48">(<expr pos:start="165:21" pos:end="165:47"><name pos:start="165:21" pos:end="165:25">flags</name> <operator pos:start="165:27" pos:end="165:27">&amp;</operator> <name pos:start="165:29" pos:end="165:47">MOV_TRUN_SAMPLE_CTS</name></expr>)</condition> <block pos:start="165:50" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:41">

                    <expr_stmt pos:start="167:21" pos:end="167:41"><expr pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:23">dts</name> <operator pos:start="167:25" pos:end="167:26">-=</operator> <name pos:start="167:28" pos:end="167:40">ctts_duration</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="169:19" pos:end="173:17">else <block pos:start="169:24" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:43">

                    <expr_stmt pos:start="171:21" pos:end="171:43"><expr pos:start="171:21" pos:end="171:42"><name pos:start="171:21" pos:end="171:23">dts</name> <operator pos:start="171:25" pos:end="171:26">-=</operator> <name pos:start="171:28" pos:end="171:42"><name pos:start="171:28" pos:end="171:29">sc</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:42">time_offset</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:84"><expr pos:start="175:17" pos:end="175:83"><call pos:start="175:17" pos:end="175:83"><name pos:start="175:17" pos:end="175:22">av_log</name><argument_list pos:start="175:23" pos:end="175:83">(<argument pos:start="175:24" pos:end="175:28"><expr pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:24">c</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:28">fc</name></name></expr></argument>, <argument pos:start="175:31" pos:end="175:42"><expr pos:start="175:31" pos:end="175:42"><name pos:start="175:31" pos:end="175:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="175:45" pos:end="175:77"><expr pos:start="175:45" pos:end="175:77"><literal type="string" pos:start="175:45" pos:end="175:67">"calculated into dts %"</literal><name pos:start="175:68" pos:end="175:73">PRId64</name><literal type="string" pos:start="175:74" pos:end="175:77">"\n"</literal></expr></argument>, <argument pos:start="175:80" pos:end="175:82"><expr pos:start="175:80" pos:end="175:82"><name pos:start="175:80" pos:end="175:82">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="185:13">else <block pos:start="177:20" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:53">

                <expr_stmt pos:start="179:17" pos:end="179:51"><expr pos:start="179:17" pos:end="179:50"><name pos:start="179:17" pos:end="179:19">dts</name> <operator pos:start="179:21" pos:end="179:21">=</operator> <name pos:start="179:23" pos:end="179:32"><name pos:start="179:23" pos:end="179:26">frag</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:32">time</name></name> <operator pos:start="179:34" pos:end="179:34">-</operator> <name pos:start="179:36" pos:end="179:50"><name pos:start="179:36" pos:end="179:37">sc</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:50">time_offset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="183:53"><expr pos:start="181:17" pos:end="183:52"><call pos:start="181:17" pos:end="183:52"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="183:52">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:24">c</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:28">fc</name></name></expr></argument>, <argument pos:start="181:31" pos:end="181:42"><expr pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="181:45" pos:end="183:46"><expr pos:start="181:45" pos:end="183:46"><literal type="string" pos:start="181:45" pos:end="181:63">"found frag time %"</literal><name pos:start="181:64" pos:end="181:69">PRId64</name>

                        <literal type="string" pos:start="183:25" pos:end="183:46">", using it for dts\n"</literal></expr></argument>, <argument pos:start="183:49" pos:end="183:51"><expr pos:start="183:49" pos:end="183:51"><name pos:start="183:49" pos:end="183:51">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:40"><expr pos:start="187:13" pos:end="187:39"><name pos:start="187:13" pos:end="187:22"><name pos:start="187:13" pos:end="187:16">frag</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:22">time</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <name pos:start="187:26" pos:end="187:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="193:9" pos:end="203:69"><if pos:start="193:9" pos:end="195:25">if <condition pos:start="193:12" pos:end="193:59">(<expr pos:start="193:13" pos:end="193:58"><name pos:start="193:13" pos:end="193:36"><name pos:start="193:13" pos:end="193:14">st</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:24">codecpar</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:36">codec_type</name></name> <operator pos:start="193:38" pos:end="193:39">==</operator> <name pos:start="193:41" pos:end="193:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:25"><block_content pos:start="195:13" pos:end="195:25">

            <expr_stmt pos:start="195:13" pos:end="195:25"><expr pos:start="195:13" pos:end="195:24"><name pos:start="195:13" pos:end="195:20">keyframe</name> <operator pos:start="195:22" pos:end="195:22">=</operator> <literal type="number" pos:start="195:24" pos:end="195:24">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="197:9" pos:end="203:69">else<block type="pseudo" pos:start="199:13" pos:end="203:69"><block_content pos:start="199:13" pos:end="203:69">

            <expr_stmt pos:start="199:13" pos:end="203:69"><expr pos:start="199:13" pos:end="203:68"><name pos:start="199:13" pos:end="199:20">keyframe</name> <operator pos:start="199:22" pos:end="199:22">=</operator>

                <operator pos:start="201:17" pos:end="201:17">!</operator><operator pos:start="201:18" pos:end="201:18">(</operator><name pos:start="201:19" pos:end="201:30">sample_flags</name> <operator pos:start="201:32" pos:end="201:32">&amp;</operator> <operator pos:start="201:34" pos:end="201:34">(</operator><name pos:start="201:35" pos:end="201:66">MOV_FRAG_SAMPLE_FLAG_IS_NON_SYNC</name> <operator pos:start="201:68" pos:end="201:68">|</operator>

                                  <name pos:start="203:35" pos:end="203:66">MOV_FRAG_SAMPLE_FLAG_DEPENDS_YES</name><operator pos:start="203:67" pos:end="203:67">)</operator><operator pos:start="203:68" pos:end="203:68">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="205:9" pos:end="207:25"><if pos:start="205:9" pos:end="207:25">if <condition pos:start="205:12" pos:end="205:21">(<expr pos:start="205:13" pos:end="205:20"><name pos:start="205:13" pos:end="205:20">keyframe</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:25"><block_content pos:start="207:13" pos:end="207:25">

            <expr_stmt pos:start="207:13" pos:end="207:25"><expr pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:20">distance</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="209:9" pos:end="211:73"><expr pos:start="209:9" pos:end="211:72"><name pos:start="209:9" pos:end="209:18">ctts_index</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <call pos:start="209:22" pos:end="211:72"><name pos:start="209:22" pos:end="209:39">av_add_index_entry</name><argument_list pos:start="209:40" pos:end="211:72">(<argument pos:start="209:41" pos:end="209:42"><expr pos:start="209:41" pos:end="209:42"><name pos:start="209:41" pos:end="209:42">st</name></expr></argument>, <argument pos:start="209:45" pos:end="209:50"><expr pos:start="209:45" pos:end="209:50"><name pos:start="209:45" pos:end="209:50">offset</name></expr></argument>, <argument pos:start="209:53" pos:end="209:55"><expr pos:start="209:53" pos:end="209:55"><name pos:start="209:53" pos:end="209:55">dts</name></expr></argument>, <argument pos:start="209:58" pos:end="209:68"><expr pos:start="209:58" pos:end="209:68"><name pos:start="209:58" pos:end="209:68">sample_size</name></expr></argument>, <argument pos:start="209:71" pos:end="209:78"><expr pos:start="209:71" pos:end="209:78"><name pos:start="209:71" pos:end="209:78">distance</name></expr></argument>,

                                        <argument pos:start="211:41" pos:end="211:71"><expr pos:start="211:41" pos:end="211:71"><ternary pos:start="211:41" pos:end="211:71"><condition pos:start="211:41" pos:end="211:50"><expr pos:start="211:41" pos:end="211:48"><name pos:start="211:41" pos:end="211:48">keyframe</name></expr> ?</condition><then pos:start="211:52" pos:end="211:67"> <expr pos:start="211:52" pos:end="211:67"><name pos:start="211:52" pos:end="211:67">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="211:69" pos:end="211:71">: <expr pos:start="211:71" pos:end="211:71"><literal type="number" pos:start="211:71" pos:end="211:71">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="265:9"><if pos:start="213:9" pos:end="261:9">if <condition pos:start="213:12" pos:end="213:75">(<expr pos:start="213:13" pos:end="213:74"><name pos:start="213:13" pos:end="213:22">ctts_index</name> <operator pos:start="213:24" pos:end="213:25">&gt;=</operator> <literal type="number" pos:start="213:27" pos:end="213:27">0</literal> <operator pos:start="213:29" pos:end="213:30">&amp;&amp;</operator> <name pos:start="213:32" pos:end="213:51">old_nb_index_entries</name> <operator pos:start="213:53" pos:end="213:53">&lt;</operator> <name pos:start="213:55" pos:end="213:74"><name pos:start="213:55" pos:end="213:56">st</name><operator pos:start="213:57" pos:end="213:58">-&gt;</operator><name pos:start="213:59" pos:end="213:74">nb_index_entries</name></name></expr>)</condition> <block pos:start="213:77" pos:end="261:9">{<block_content pos:start="215:13" pos:end="259:29">

            <decl_stmt pos:start="215:13" pos:end="215:85"><decl pos:start="215:13" pos:end="215:84"><type pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:20">unsigned</name> <name pos:start="215:22" pos:end="215:24">int</name></type> <name pos:start="215:26" pos:end="215:36">size_needed</name> <init pos:start="215:38" pos:end="215:84">= <expr pos:start="215:40" pos:end="215:84"><name pos:start="215:40" pos:end="215:59"><name pos:start="215:40" pos:end="215:41">st</name><operator pos:start="215:42" pos:end="215:43">-&gt;</operator><name pos:start="215:44" pos:end="215:59">nb_index_entries</name></name> <operator pos:start="215:61" pos:end="215:61">*</operator> <sizeof pos:start="215:63" pos:end="215:84">sizeof<argument_list pos:start="215:69" pos:end="215:84">(<argument pos:start="215:70" pos:end="215:83"><expr pos:start="215:70" pos:end="215:83"><operator pos:start="215:70" pos:end="215:70">*</operator><name pos:start="215:71" pos:end="215:83"><name pos:start="215:71" pos:end="215:72">sc</name><operator pos:start="215:73" pos:end="215:74">-&gt;</operator><name pos:start="215:75" pos:end="215:83">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="217:13" pos:end="219:78"><decl pos:start="217:13" pos:end="219:77"><type pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:20">unsigned</name> <name pos:start="217:22" pos:end="217:24">int</name></type> <name pos:start="217:26" pos:end="217:37">request_size</name> <init pos:start="217:39" pos:end="219:77">= <expr pos:start="217:41" pos:end="219:77"><ternary pos:start="217:41" pos:end="219:77"><condition pos:start="217:41" pos:end="217:79"><expr pos:start="217:41" pos:end="217:77"><name pos:start="217:41" pos:end="217:51">size_needed</name> <operator pos:start="217:53" pos:end="217:53">&gt;</operator> <name pos:start="217:55" pos:end="217:77"><name pos:start="217:55" pos:end="217:56">sc</name><operator pos:start="217:57" pos:end="217:58">-&gt;</operator><name pos:start="217:59" pos:end="217:77">ctts_allocated_size</name></name></expr> ?</condition><then pos:start="219:17" pos:end="219:63">

                <expr pos:start="219:17" pos:end="219:63"><call pos:start="219:17" pos:end="219:63"><name pos:start="219:17" pos:end="219:21">FFMAX</name><argument_list pos:start="219:22" pos:end="219:63">(<argument pos:start="219:23" pos:end="219:33"><expr pos:start="219:23" pos:end="219:33"><name pos:start="219:23" pos:end="219:33">size_needed</name></expr></argument>, <argument pos:start="219:36" pos:end="219:62"><expr pos:start="219:36" pos:end="219:62"><literal type="number" pos:start="219:36" pos:end="219:36">2</literal> <operator pos:start="219:38" pos:end="219:38">*</operator> <name pos:start="219:40" pos:end="219:62"><name pos:start="219:40" pos:end="219:41">sc</name><operator pos:start="219:42" pos:end="219:43">-&gt;</operator><name pos:start="219:44" pos:end="219:62">ctts_allocated_size</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="219:65" pos:end="219:77">: <expr pos:start="219:67" pos:end="219:77"><name pos:start="219:67" pos:end="219:77">size_needed</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:95"><expr pos:start="221:13" pos:end="221:94"><name pos:start="221:13" pos:end="221:21">ctts_data</name> <operator pos:start="221:23" pos:end="221:23">=</operator> <call pos:start="221:25" pos:end="221:94"><name pos:start="221:25" pos:end="221:39">av_fast_realloc</name><argument_list pos:start="221:40" pos:end="221:94">(<argument pos:start="221:41" pos:end="221:53"><expr pos:start="221:41" pos:end="221:53"><name pos:start="221:41" pos:end="221:53"><name pos:start="221:41" pos:end="221:42">sc</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:53">ctts_data</name></name></expr></argument>, <argument pos:start="221:56" pos:end="221:79"><expr pos:start="221:56" pos:end="221:79"><operator pos:start="221:56" pos:end="221:56">&amp;</operator><name pos:start="221:57" pos:end="221:79"><name pos:start="221:57" pos:end="221:58">sc</name><operator pos:start="221:59" pos:end="221:60">-&gt;</operator><name pos:start="221:61" pos:end="221:79">ctts_allocated_size</name></name></expr></argument>, <argument pos:start="221:82" pos:end="221:93"><expr pos:start="221:82" pos:end="221:93"><name pos:start="221:82" pos:end="221:93">request_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="229:13"><if pos:start="223:13" pos:end="229:13">if <condition pos:start="223:16" pos:end="223:27">(<expr pos:start="223:17" pos:end="223:26"><operator pos:start="223:17" pos:end="223:17">!</operator><name pos:start="223:18" pos:end="223:26">ctts_data</name></expr>)</condition> <block pos:start="223:29" pos:end="229:13">{<block_content pos:start="225:17" pos:end="227:39">

                <expr_stmt pos:start="225:17" pos:end="225:41"><expr pos:start="225:17" pos:end="225:40"><call pos:start="225:17" pos:end="225:40"><name pos:start="225:17" pos:end="225:24">av_freep</name><argument_list pos:start="225:25" pos:end="225:40">(<argument pos:start="225:26" pos:end="225:39"><expr pos:start="225:26" pos:end="225:39"><operator pos:start="225:26" pos:end="225:26">&amp;</operator><name pos:start="225:27" pos:end="225:39"><name pos:start="225:27" pos:end="225:28">sc</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:39">ctts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="227:17" pos:end="227:39">return <expr pos:start="227:24" pos:end="227:38"><call pos:start="227:24" pos:end="227:38"><name pos:start="227:24" pos:end="227:30">AVERROR</name><argument_list pos:start="227:31" pos:end="227:38">(<argument pos:start="227:32" pos:end="227:37"><expr pos:start="227:32" pos:end="227:37"><name pos:start="227:32" pos:end="227:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="233:13" pos:end="233:38"><expr pos:start="233:13" pos:end="233:37"><name pos:start="233:13" pos:end="233:25"><name pos:start="233:13" pos:end="233:14">sc</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:25">ctts_data</name></name> <operator pos:start="233:27" pos:end="233:27">=</operator> <name pos:start="233:29" pos:end="233:37">ctts_data</name></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="251:13"><if pos:start="235:13" pos:end="251:13">if <condition pos:start="235:16" pos:end="235:51">(<expr pos:start="235:17" pos:end="235:50"><name pos:start="235:17" pos:end="235:26">ctts_index</name> <operator pos:start="235:28" pos:end="235:29">!=</operator> <name pos:start="235:31" pos:end="235:50">old_nb_index_entries</name></expr>)</condition> <block pos:start="235:53" pos:end="251:13">{<block_content pos:start="237:17" pos:end="249:17">

                <expr_stmt pos:start="237:17" pos:end="239:80"><expr pos:start="237:17" pos:end="239:79"><call pos:start="237:17" pos:end="239:79"><name pos:start="237:17" pos:end="237:23">memmove</name><argument_list pos:start="237:24" pos:end="239:79">(<argument pos:start="237:25" pos:end="237:54"><expr pos:start="237:25" pos:end="237:54"><name pos:start="237:25" pos:end="237:37"><name pos:start="237:25" pos:end="237:26">sc</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:37">ctts_data</name></name> <operator pos:start="237:39" pos:end="237:39">+</operator> <name pos:start="237:41" pos:end="237:50">ctts_index</name> <operator pos:start="237:52" pos:end="237:52">+</operator> <literal type="number" pos:start="237:54" pos:end="237:54">1</literal></expr></argument>, <argument pos:start="237:57" pos:end="237:82"><expr pos:start="237:57" pos:end="237:82"><name pos:start="237:57" pos:end="237:69"><name pos:start="237:57" pos:end="237:58">sc</name><operator pos:start="237:59" pos:end="237:60">-&gt;</operator><name pos:start="237:61" pos:end="237:69">ctts_data</name></name> <operator pos:start="237:71" pos:end="237:71">+</operator> <name pos:start="237:73" pos:end="237:82">ctts_index</name></expr></argument>,

                        <argument pos:start="239:25" pos:end="239:78"><expr pos:start="239:25" pos:end="239:78"><sizeof pos:start="239:25" pos:end="239:46">sizeof<argument_list pos:start="239:31" pos:end="239:46">(<argument pos:start="239:32" pos:end="239:45"><expr pos:start="239:32" pos:end="239:45"><operator pos:start="239:32" pos:end="239:32">*</operator><name pos:start="239:33" pos:end="239:45"><name pos:start="239:33" pos:end="239:34">sc</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:45">ctts_data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="239:48" pos:end="239:48">*</operator> <operator pos:start="239:50" pos:end="239:50">(</operator><name pos:start="239:51" pos:end="239:64"><name pos:start="239:51" pos:end="239:52">sc</name><operator pos:start="239:53" pos:end="239:54">-&gt;</operator><name pos:start="239:55" pos:end="239:64">ctts_count</name></name> <operator pos:start="239:66" pos:end="239:66">-</operator> <name pos:start="239:68" pos:end="239:77">ctts_index</name><operator pos:start="239:78" pos:end="239:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="241:17" pos:end="249:17"><if pos:start="241:17" pos:end="249:17">if <condition pos:start="241:20" pos:end="241:53">(<expr pos:start="241:21" pos:end="241:52"><name pos:start="241:21" pos:end="241:30">ctts_index</name> <operator pos:start="241:32" pos:end="241:33">&lt;=</operator> <name pos:start="241:35" pos:end="241:52"><name pos:start="241:35" pos:end="241:36">sc</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:52">current_sample</name></name></expr>)</condition> <block pos:start="241:55" pos:end="249:17">{<block_content pos:start="247:21" pos:end="247:41">

                    <comment type="line" pos:start="243:21" pos:end="243:84">// if we inserted a new item before the current sample, move the</comment>

                    <comment type="line" pos:start="245:21" pos:end="245:80">// counter ahead so it is still pointing to the same sample.</comment>

                    <expr_stmt pos:start="247:21" pos:end="247:41"><expr pos:start="247:21" pos:end="247:40"><name pos:start="247:21" pos:end="247:38"><name pos:start="247:21" pos:end="247:22">sc</name><operator pos:start="247:23" pos:end="247:24">-&gt;</operator><name pos:start="247:25" pos:end="247:38">current_sample</name></name><operator pos:start="247:39" pos:end="247:40">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="255:13" pos:end="255:48"><expr pos:start="255:13" pos:end="255:47"><name pos:start="255:13" pos:end="255:37"><name pos:start="255:13" pos:end="255:14">sc</name><operator pos:start="255:15" pos:end="255:16">-&gt;</operator><name pos:start="255:17" pos:end="255:25">ctts_data</name><index pos:start="255:26" pos:end="255:37">[<expr pos:start="255:27" pos:end="255:36"><name pos:start="255:27" pos:end="255:36">ctts_index</name></expr>]</index></name><operator pos:start="255:38" pos:end="255:38">.</operator><name pos:start="255:39" pos:end="255:43">count</name> <operator pos:start="255:45" pos:end="255:45">=</operator> <literal type="number" pos:start="255:47" pos:end="255:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:63"><expr pos:start="257:13" pos:end="257:62"><name pos:start="257:13" pos:end="257:37"><name pos:start="257:13" pos:end="257:14">sc</name><operator pos:start="257:15" pos:end="257:16">-&gt;</operator><name pos:start="257:17" pos:end="257:25">ctts_data</name><index pos:start="257:26" pos:end="257:37">[<expr pos:start="257:27" pos:end="257:36"><name pos:start="257:27" pos:end="257:36">ctts_index</name></expr>]</index></name><operator pos:start="257:38" pos:end="257:38">.</operator><name pos:start="257:39" pos:end="257:46">duration</name> <operator pos:start="257:48" pos:end="257:48">=</operator> <name pos:start="257:50" pos:end="257:62">ctts_duration</name></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:29"><expr pos:start="259:13" pos:end="259:28"><name pos:start="259:13" pos:end="259:26"><name pos:start="259:13" pos:end="259:14">sc</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:26">ctts_count</name></name><operator pos:start="259:27" pos:end="259:28">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="261:11" pos:end="265:9">else <block pos:start="261:16" pos:end="265:9">{<block_content pos:start="263:13" pos:end="263:71">

            <expr_stmt pos:start="263:13" pos:end="263:71"><expr pos:start="263:13" pos:end="263:70"><call pos:start="263:13" pos:end="263:70"><name pos:start="263:13" pos:end="263:18">av_log</name><argument_list pos:start="263:19" pos:end="263:70">(<argument pos:start="263:20" pos:end="263:24"><expr pos:start="263:20" pos:end="263:24"><name pos:start="263:20" pos:end="263:24"><name pos:start="263:20" pos:end="263:20">c</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:24">fc</name></name></expr></argument>, <argument pos:start="263:27" pos:end="263:38"><expr pos:start="263:27" pos:end="263:38"><name pos:start="263:27" pos:end="263:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:41" pos:end="263:69"><expr pos:start="263:41" pos:end="263:69"><literal type="string" pos:start="263:41" pos:end="263:69">"Failed to add index entry\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="269:9" pos:end="273:62"><expr pos:start="269:9" pos:end="273:61"><call pos:start="269:9" pos:end="273:61"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="273:61">(<argument pos:start="269:16" pos:end="269:20"><expr pos:start="269:16" pos:end="269:20"><name pos:start="269:16" pos:end="269:20"><name pos:start="269:16" pos:end="269:16">c</name><operator pos:start="269:17" pos:end="269:18">-&gt;</operator><name pos:start="269:19" pos:end="269:20">fc</name></name></expr></argument>, <argument pos:start="269:23" pos:end="269:34"><expr pos:start="269:23" pos:end="269:34"><name pos:start="269:23" pos:end="269:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="269:37" pos:end="271:53"><expr pos:start="269:37" pos:end="271:53"><literal type="string" pos:start="269:37" pos:end="269:76">"AVIndex stream %d, sample %d, offset %"</literal><name pos:start="269:77" pos:end="269:82">PRIx64</name><literal type="string" pos:start="269:83" pos:end="269:91">", dts %"</literal><name pos:start="269:92" pos:end="269:97">PRId64</name><literal type="string" pos:start="269:98" pos:end="269:101">", "</literal>

                <literal type="string" pos:start="271:17" pos:end="271:53">"size %u, distance %d, keyframe %d\n"</literal></expr></argument>, <argument pos:start="271:56" pos:end="271:64"><expr pos:start="271:56" pos:end="271:64"><name pos:start="271:56" pos:end="271:64"><name pos:start="271:56" pos:end="271:57">st</name><operator pos:start="271:58" pos:end="271:59">-&gt;</operator><name pos:start="271:60" pos:end="271:64">index</name></name></expr></argument>, <argument pos:start="271:67" pos:end="271:76"><expr pos:start="271:67" pos:end="271:76"><name pos:start="271:67" pos:end="271:76">ctts_index</name></expr></argument>,

                <argument pos:start="273:17" pos:end="273:22"><expr pos:start="273:17" pos:end="273:22"><name pos:start="273:17" pos:end="273:22">offset</name></expr></argument>, <argument pos:start="273:25" pos:end="273:27"><expr pos:start="273:25" pos:end="273:27"><name pos:start="273:25" pos:end="273:27">dts</name></expr></argument>, <argument pos:start="273:30" pos:end="273:40"><expr pos:start="273:30" pos:end="273:40"><name pos:start="273:30" pos:end="273:40">sample_size</name></expr></argument>, <argument pos:start="273:43" pos:end="273:50"><expr pos:start="273:43" pos:end="273:50"><name pos:start="273:43" pos:end="273:50">distance</name></expr></argument>, <argument pos:start="273:53" pos:end="273:60"><expr pos:start="273:53" pos:end="273:60"><name pos:start="273:53" pos:end="273:60">keyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:19"><expr pos:start="275:9" pos:end="275:18"><name pos:start="275:9" pos:end="275:16">distance</name><operator pos:start="275:17" pos:end="275:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:31"><expr pos:start="277:9" pos:end="277:30"><name pos:start="277:9" pos:end="277:11">dts</name> <operator pos:start="277:13" pos:end="277:14">+=</operator> <name pos:start="277:16" pos:end="277:30">sample_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:30"><expr pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:14">offset</name> <operator pos:start="279:16" pos:end="279:17">+=</operator> <name pos:start="279:19" pos:end="279:29">sample_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:37"><expr pos:start="281:9" pos:end="281:36"><name pos:start="281:9" pos:end="281:21"><name pos:start="281:9" pos:end="281:10">sc</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:21">data_size</name></name> <operator pos:start="281:23" pos:end="281:24">+=</operator> <name pos:start="281:26" pos:end="281:36">sample_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:48"><expr pos:start="283:9" pos:end="283:47"><name pos:start="283:9" pos:end="283:28"><name pos:start="283:9" pos:end="283:10">sc</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:28">duration_for_fps</name></name> <operator pos:start="283:30" pos:end="283:31">+=</operator> <name pos:start="283:33" pos:end="283:47">sample_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:33"><expr pos:start="285:9" pos:end="285:32"><name pos:start="285:9" pos:end="285:29"><name pos:start="285:9" pos:end="285:10">sc</name><operator pos:start="285:11" pos:end="285:12">-&gt;</operator><name pos:start="285:13" pos:end="285:29">nb_frames_for_fps</name></name> <operator pos:start="285:31" pos:end="285:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="291:5" pos:end="293:27"><if pos:start="291:5" pos:end="293:27">if <condition pos:start="291:8" pos:end="291:24">(<expr pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:10">pb</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="293:9" pos:end="293:27"><block_content pos:start="293:9" pos:end="293:27">

        <return pos:start="293:9" pos:end="293:27">return <expr pos:start="293:16" pos:end="293:26"><name pos:start="293:16" pos:end="293:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:35"><expr pos:start="297:5" pos:end="297:34"><name pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:8">frag</name><operator pos:start="297:9" pos:end="297:10">-&gt;</operator><name pos:start="297:11" pos:end="297:25">implicit_offset</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <name pos:start="297:29" pos:end="297:34">offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:42"><expr pos:start="301:5" pos:end="301:41"><name pos:start="301:5" pos:end="301:17"><name pos:start="301:5" pos:end="301:6">sc</name><operator pos:start="301:7" pos:end="301:8">-&gt;</operator><name pos:start="301:9" pos:end="301:17">track_end</name></name> <operator pos:start="301:19" pos:end="301:19">=</operator> <name pos:start="301:21" pos:end="301:23">dts</name> <operator pos:start="301:25" pos:end="301:25">+</operator> <name pos:start="301:27" pos:end="301:41"><name pos:start="301:27" pos:end="301:28">sc</name><operator pos:start="301:29" pos:end="301:30">-&gt;</operator><name pos:start="301:31" pos:end="301:41">time_offset</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="303:5" pos:end="305:37"><if pos:start="303:5" pos:end="305:37">if <condition pos:start="303:8" pos:end="303:37">(<expr pos:start="303:9" pos:end="303:36"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:10">st</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:20">duration</name></name> <operator pos:start="303:22" pos:end="303:22">&lt;</operator> <name pos:start="303:24" pos:end="303:36"><name pos:start="303:24" pos:end="303:25">sc</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:36">track_end</name></name></expr>)</condition><block type="pseudo" pos:start="305:9" pos:end="305:37"><block_content pos:start="305:9" pos:end="305:37">

        <expr_stmt pos:start="305:9" pos:end="305:37"><expr pos:start="305:9" pos:end="305:36"><name pos:start="305:9" pos:end="305:20"><name pos:start="305:9" pos:end="305:10">st</name><operator pos:start="305:11" pos:end="305:12">-&gt;</operator><name pos:start="305:13" pos:end="305:20">duration</name></name> <operator pos:start="305:22" pos:end="305:22">=</operator> <name pos:start="305:24" pos:end="305:36"><name pos:start="305:24" pos:end="305:25">sc</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:36">track_end</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="309:5" pos:end="309:13">return <expr pos:start="309:12" pos:end="309:12"><literal type="number" pos:start="309:12" pos:end="309:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
