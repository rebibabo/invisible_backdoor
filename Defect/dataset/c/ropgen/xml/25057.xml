<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25057.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:23">scsi_task</name></name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:41">iscsi_do_inquiry</name><parameter_list pos:start="1:42" pos:end="3:59">(<parameter pos:start="1:43" pos:end="1:69"><decl pos:start="1:43" pos:end="1:69"><type pos:start="1:43" pos:end="1:69"><name pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:62">iscsi_context</name></name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">iscsi</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:78"><decl pos:start="1:72" pos:end="1:78"><type pos:start="1:72" pos:end="1:78"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:78">lun</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:50"><decl pos:start="3:43" pos:end="3:50"><type pos:start="3:43" pos:end="3:50"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:50">evpd</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:58"><decl pos:start="3:53" pos:end="3:58"><type pos:start="3:53" pos:end="3:58"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:58">pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:16">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">full_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">scsi_task</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:26">task</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:8">task</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:55"><name pos:start="11:12" pos:end="11:29">iscsi_inquiry_sync</name><argument_list pos:start="11:30" pos:end="11:55">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">iscsi</name></expr></argument>, <argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">lun</name></expr></argument>, <argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">evpd</name></expr></argument>, <argument pos:start="11:49" pos:end="11:50"><expr pos:start="11:49" pos:end="11:50"><name pos:start="11:49" pos:end="11:50">pc</name></expr></argument>, <argument pos:start="11:53" pos:end="11:54"><expr pos:start="11:53" pos:end="11:54"><literal type="number" pos:start="11:53" pos:end="11:54">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:57">(<expr pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:12">task</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:20">NULL</name> <operator pos:start="13:22" pos:end="13:23">||</operator> <name pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:28">task</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:36">status</name></name> <operator pos:start="13:38" pos:end="13:39">!=</operator> <name pos:start="13:41" pos:end="13:56">SCSI_STATUS_GOOD</name></expr>)</condition> <block pos:start="13:59" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <goto pos:start="15:9" pos:end="15:18">goto <name pos:start="15:14" pos:end="15:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:13">full_size</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:45"><name pos:start="19:17" pos:end="19:39">scsi_datain_getfullsize</name><argument_list pos:start="19:40" pos:end="19:45">(<argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:17">full_size</name> <operator pos:start="21:19" pos:end="21:19">&gt;</operator> <name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:24">task</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:32">datain</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:37">size</name></name></expr>)</condition> <block pos:start="21:40" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:9">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:27">scsi_free_scsi_task</name><argument_list pos:start="23:28" pos:end="23:33">(<argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:49">/* we need more data for the full list */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:12">task</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:66"><name pos:start="29:16" pos:end="29:33">iscsi_inquiry_sync</name><argument_list pos:start="29:34" pos:end="29:66">(<argument pos:start="29:35" pos:end="29:39"><expr pos:start="29:35" pos:end="29:39"><name pos:start="29:35" pos:end="29:39">iscsi</name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">lun</name></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">evpd</name></expr></argument>, <argument pos:start="29:53" pos:end="29:54"><expr pos:start="29:53" pos:end="29:54"><name pos:start="29:53" pos:end="29:54">pc</name></expr></argument>, <argument pos:start="29:57" pos:end="29:65"><expr pos:start="29:57" pos:end="29:65"><name pos:start="29:57" pos:end="29:65">full_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:61">(<expr pos:start="31:13" pos:end="31:60"><name pos:start="31:13" pos:end="31:16">task</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <name pos:start="31:21" pos:end="31:24">NULL</name> <operator pos:start="31:26" pos:end="31:27">||</operator> <name pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:32">task</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:40">status</name></name> <operator pos:start="31:42" pos:end="31:43">!=</operator> <name pos:start="31:45" pos:end="31:60">SCSI_STATUS_GOOD</name></expr>)</condition> <block pos:start="31:63" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:22">

            <goto pos:start="33:13" pos:end="33:22">goto <name pos:start="33:18" pos:end="33:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="41:5" pos:end="41:16">return <expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">task</name></expr>;</return>



<label pos:start="45:1" pos:end="45:5"><name pos:start="45:1" pos:end="45:4">fail</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="49:41"><expr pos:start="47:5" pos:end="49:40"><call pos:start="47:5" pos:end="49:40"><name pos:start="47:5" pos:end="47:16">error_report</name><argument_list pos:start="47:17" pos:end="49:40">(<argument pos:start="47:18" pos:end="47:53"><expr pos:start="47:18" pos:end="47:53"><literal type="string" pos:start="47:18" pos:end="47:53">"iSCSI: Inquiry command failed : %s"</literal></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:39"><expr pos:start="49:18" pos:end="49:39"><call pos:start="49:18" pos:end="49:39"><name pos:start="49:18" pos:end="49:32">iscsi_get_error</name><argument_list pos:start="49:33" pos:end="49:39">(<argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:13">(<expr pos:start="51:9" pos:end="51:12"><name pos:start="51:9" pos:end="51:12">task</name></expr>)</condition> <block pos:start="51:15" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:20">

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:27">scsi_free_scsi_task</name><argument_list pos:start="53:28" pos:end="53:33">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:20">return <expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:16">return <expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
