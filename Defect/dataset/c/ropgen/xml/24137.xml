<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24137.c" pos:tabs="8"><function pos:start="1:1" pos:end="322:65"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:35">ff_h264_execute_ref_pic_marking</name><parameter_list pos:start="1:36" pos:end="1:79">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:47">H264Context</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">h</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">MMCO</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">mmco</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:78">mmco_count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="322:65">{<block_content pos:start="5:5" pos:end="322:65">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:20">av_uninit</name><argument_list pos:start="5:21" pos:end="5:23">(<argument pos:start="5:22" pos:end="5:22"><expr pos:start="5:22" pos:end="5:22"><name pos:start="5:22" pos:end="5:22">j</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:28">current_ref_assigned</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>, <decl pos:start="7:35" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:37">err</name> <init pos:start="7:39" pos:end="7:41">= <expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Picture</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">av_uninit</name><argument_list pos:start="9:23" pos:end="9:27">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">pic</name></expr></argument>)</argument_list></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:57"><if pos:start="13:5" pos:end="15:57">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:10">h</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">avctx</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:24">debug</name></name> <operator pos:start="13:26" pos:end="13:26">&amp;</operator> <name pos:start="13:28" pos:end="13:40">FF_DEBUG_MMCO</name><operator pos:start="13:41" pos:end="13:41">)</operator> <operator pos:start="13:43" pos:end="13:44">&amp;&amp;</operator> <name pos:start="13:46" pos:end="13:55">mmco_count</name> <operator pos:start="13:57" pos:end="13:58">==</operator> <literal type="number" pos:start="13:60" pos:end="13:60">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:57"><block_content pos:start="15:9" pos:end="15:57">

        <expr_stmt pos:start="15:9" pos:end="15:57"><expr pos:start="15:9" pos:end="15:56"><call pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:56">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:40" pos:end="15:55"><expr pos:start="15:40" pos:end="15:55"><literal type="string" pos:start="15:40" pos:end="15:55">"no mmco here\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="322:65">for <control pos:start="19:9" pos:end="19:36">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:30"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:30">mmco_count</name></expr>;</condition> <incr pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:33">i</name><operator pos:start="19:34" pos:end="19:35">++</operator></expr></incr>)</control> <block pos:start="19:38" pos:end="322:65">{<block_content pos:start="21:9" pos:end="322:65">

        <decl_stmt pos:start="21:9" pos:end="21:55"><decl pos:start="21:9" pos:end="21:32"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:21">av_uninit</name><argument_list pos:start="21:22" pos:end="21:32">(<argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:31">structure</name></expr></argument>)</argument_list></decl>, <decl pos:start="21:35" pos:end="21:54"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:35" pos:end="21:43">av_uninit</name><argument_list pos:start="21:44" pos:end="21:54">(<argument pos:start="21:45" pos:end="21:53"><expr pos:start="21:45" pos:end="21:53"><name pos:start="21:45" pos:end="21:53">frame_num</name></expr></argument>)</argument_list></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="27:66"><if pos:start="23:9" pos:end="27:66">if <condition pos:start="23:12" pos:end="23:44">(<expr pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">avctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">debug</name></name> <operator pos:start="23:29" pos:end="23:29">&amp;</operator> <name pos:start="23:31" pos:end="23:43">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="27:66"><block_content pos:start="25:13" pos:end="27:66">

            <expr_stmt pos:start="25:13" pos:end="27:66"><expr pos:start="25:13" pos:end="27:65"><call pos:start="25:13" pos:end="27:65"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:65">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">h</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:44" pos:end="25:60"><expr pos:start="25:44" pos:end="25:60"><literal type="string" pos:start="25:44" pos:end="25:60">"mmco:%d %d %d\n"</literal></expr></argument>, <argument pos:start="25:63" pos:end="25:79"><expr pos:start="25:63" pos:end="25:79"><name pos:start="25:63" pos:end="25:72"><name pos:start="25:63" pos:end="25:63">h</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:69">mmco</name><index pos:start="25:70" pos:end="25:72">[<expr pos:start="25:71" pos:end="25:71"><name pos:start="25:71" pos:end="25:71">i</name></expr>]</index></name><operator pos:start="25:73" pos:end="25:73">.</operator><name pos:start="25:74" pos:end="25:79">opcode</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:43"><expr pos:start="27:20" pos:end="27:43"><name pos:start="27:20" pos:end="27:29"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:26">mmco</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:43">short_pic_num</name></expr></argument>, <argument pos:start="27:46" pos:end="27:64"><expr pos:start="27:46" pos:end="27:64"><name pos:start="27:46" pos:end="27:55"><name pos:start="27:46" pos:end="27:46">h</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:52">mmco</name><index pos:start="27:53" pos:end="27:55">[<expr pos:start="27:54" pos:end="27:54"><name pos:start="27:54" pos:end="27:54">i</name></expr>]</index></name><operator pos:start="27:56" pos:end="27:56">.</operator><name pos:start="27:57" pos:end="27:64">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="322:65"><if pos:start="31:9" pos:end="322:65">if <condition pos:start="31:12" pos:end="33:46">(<expr pos:start="31:13" pos:end="33:45"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">mmco</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">i</name></expr>]</index></name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:26">opcode</name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:47">MMCO_SHORT2UNUSED</name> <operator pos:start="31:49" pos:end="31:50">||</operator>

            <name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">mmco</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:26">opcode</name> <operator pos:start="33:28" pos:end="33:29">==</operator> <name pos:start="33:31" pos:end="33:45">MMCO_SHORT2LONG</name></expr>)</condition> <block pos:start="33:48" pos:end="322:65">{<block_content pos:start="35:13" pos:end="322:65">

            <expr_stmt pos:start="35:13" pos:end="35:78"><expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:21">frame_num</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:77"><name pos:start="35:25" pos:end="35:39">pic_num_extract</name><argument_list pos:start="35:40" pos:end="35:77">(<argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">h</name></expr></argument>, <argument pos:start="35:44" pos:end="35:64"><expr pos:start="35:44" pos:end="35:64"><name pos:start="35:44" pos:end="35:50"><name pos:start="35:44" pos:end="35:47">mmco</name><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">i</name></expr>]</index></name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:64">short_pic_num</name></expr></argument>, <argument pos:start="35:67" pos:end="35:76"><expr pos:start="35:67" pos:end="35:76"><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:76">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:53"><expr pos:start="37:13" pos:end="37:52"><name pos:start="37:13" pos:end="37:15">pic</name>       <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:52"><name pos:start="37:25" pos:end="37:34">find_short</name><argument_list pos:start="37:35" pos:end="37:52">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">h</name></expr></argument>, <argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:47">frame_num</name></expr></argument>, <argument pos:start="37:50" pos:end="37:51"><expr pos:start="37:50" pos:end="37:51"><operator pos:start="37:50" pos:end="37:50">&amp;</operator><name pos:start="37:51" pos:end="37:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="322:65"><if pos:start="39:13" pos:end="322:65">if <condition pos:start="39:16" pos:end="39:21">(<expr pos:start="39:17" pos:end="39:20"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:20">pic</name></expr>)</condition> <block pos:start="39:23" pos:end="322:65">{<block_content pos:start="41:17" pos:end="322:65">

                <if_stmt pos:start="41:17" pos:end="322:65"><if pos:start="41:17" pos:end="322:65">if <condition pos:start="41:20" pos:end="45:74">(<expr pos:start="41:21" pos:end="45:73"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:24">mmco</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">i</name></expr>]</index></name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:34">opcode</name> <operator pos:start="41:36" pos:end="41:37">!=</operator> <name pos:start="41:39" pos:end="41:53">MMCO_SHORT2LONG</name> <operator pos:start="41:55" pos:end="41:56">||</operator>

                    <operator pos:start="43:21" pos:end="43:21">!</operator><name pos:start="43:22" pos:end="43:50"><name pos:start="43:22" pos:end="43:22">h</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:32">long_ref</name><index pos:start="43:33" pos:end="43:50">[<expr pos:start="43:34" pos:end="43:49"><name pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:37">mmco</name><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">i</name></expr>]</index></name><operator pos:start="43:41" pos:end="43:41">.</operator><name pos:start="43:42" pos:end="43:49">long_arg</name></expr>]</index></name>    <operator pos:start="43:55" pos:end="43:56">||</operator>

                    <name pos:start="45:21" pos:end="45:49"><name pos:start="45:21" pos:end="45:21">h</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:31">long_ref</name><index pos:start="45:32" pos:end="45:49">[<expr pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:36">mmco</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><name pos:start="45:38" pos:end="45:38">i</name></expr>]</index></name><operator pos:start="45:40" pos:end="45:40">.</operator><name pos:start="45:41" pos:end="45:48">long_arg</name></expr>]</index></name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:60">frame_num</name> <operator pos:start="45:62" pos:end="45:63">!=</operator> <name pos:start="45:65" pos:end="45:73">frame_num</name></expr>)</condition> <block pos:start="45:76" pos:end="322:65">{<block_content pos:start="47:21" pos:end="322:65">

                    <expr_stmt pos:start="47:21" pos:end="47:82"><expr pos:start="47:21" pos:end="47:81"><call pos:start="47:21" pos:end="47:81"><name pos:start="47:21" pos:end="47:26">av_log</name><argument_list pos:start="47:27" pos:end="47:81">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:28">h</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:35">avctx</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:52" pos:end="47:80"><expr pos:start="47:52" pos:end="47:80"><literal type="string" pos:start="47:52" pos:end="47:80">"mmco: unref short failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:46"><expr pos:start="49:21" pos:end="49:45"><name pos:start="49:21" pos:end="49:23">err</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>


                <continue pos:start="52:17" pos:end="52:25">continue;</continue>





        <switch pos:start="58:9" pos:end="322:65">switch <condition pos:start="58:16" pos:end="58:31">(<expr pos:start="58:17" pos:end="58:30"><name pos:start="58:17" pos:end="58:23"><name pos:start="58:17" pos:end="58:20">mmco</name><index pos:start="58:21" pos:end="58:23">[<expr pos:start="58:22" pos:end="58:22"><name pos:start="58:22" pos:end="58:22">i</name></expr>]</index></name><operator pos:start="58:24" pos:end="58:24">.</operator><name pos:start="58:25" pos:end="58:30">opcode</name></expr>)</condition> <block pos:start="58:33" pos:end="322:65">{<block_content pos:start="60:9" pos:end="322:65">

        <case pos:start="60:9" pos:end="60:31">case <expr pos:start="60:14" pos:end="60:30"><name pos:start="60:14" pos:end="60:30">MMCO_SHORT2UNUSED</name></expr>:</case>

            <if_stmt pos:start="62:13" pos:end="66:69"><if pos:start="62:13" pos:end="66:69">if <condition pos:start="62:16" pos:end="62:48">(<expr pos:start="62:17" pos:end="62:47"><name pos:start="62:17" pos:end="62:31"><name pos:start="62:17" pos:end="62:17">h</name><operator pos:start="62:18" pos:end="62:19">-&gt;</operator><name pos:start="62:20" pos:end="62:24">avctx</name><operator pos:start="62:25" pos:end="62:26">-&gt;</operator><name pos:start="62:27" pos:end="62:31">debug</name></name> <operator pos:start="62:33" pos:end="62:33">&amp;</operator> <name pos:start="62:35" pos:end="62:47">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="64:17" pos:end="66:69"><block_content pos:start="64:17" pos:end="66:69">

                <expr_stmt pos:start="64:17" pos:end="66:69"><expr pos:start="64:17" pos:end="66:68"><call pos:start="64:17" pos:end="66:68"><name pos:start="64:17" pos:end="64:22">av_log</name><argument_list pos:start="64:23" pos:end="66:68">(<argument pos:start="64:24" pos:end="64:31"><expr pos:start="64:24" pos:end="64:31"><name pos:start="64:24" pos:end="64:31"><name pos:start="64:24" pos:end="64:24">h</name><operator pos:start="64:25" pos:end="64:26">-&gt;</operator><name pos:start="64:27" pos:end="64:31">avctx</name></name></expr></argument>, <argument pos:start="64:34" pos:end="64:45"><expr pos:start="64:34" pos:end="64:45"><name pos:start="64:34" pos:end="64:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="64:48" pos:end="64:80"><expr pos:start="64:48" pos:end="64:80"><literal type="string" pos:start="64:48" pos:end="64:80">"mmco: unref short %d count %d\n"</literal></expr></argument>,

                       <argument pos:start="66:24" pos:end="66:47"><expr pos:start="66:24" pos:end="66:47"><name pos:start="66:24" pos:end="66:33"><name pos:start="66:24" pos:end="66:24">h</name><operator pos:start="66:25" pos:end="66:26">-&gt;</operator><name pos:start="66:27" pos:end="66:30">mmco</name><index pos:start="66:31" pos:end="66:33">[<expr pos:start="66:32" pos:end="66:32"><name pos:start="66:32" pos:end="66:32">i</name></expr>]</index></name><operator pos:start="66:34" pos:end="66:34">.</operator><name pos:start="66:35" pos:end="66:47">short_pic_num</name></expr></argument>, <argument pos:start="66:50" pos:end="66:67"><expr pos:start="66:50" pos:end="66:67"><name pos:start="66:50" pos:end="66:67"><name pos:start="66:50" pos:end="66:50">h</name><operator pos:start="66:51" pos:end="66:52">-&gt;</operator><name pos:start="66:53" pos:end="66:67">short_ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="68:13" pos:end="68:63"><expr pos:start="68:13" pos:end="68:62"><call pos:start="68:13" pos:end="68:62"><name pos:start="68:13" pos:end="68:24">remove_short</name><argument_list pos:start="68:25" pos:end="68:62">(<argument pos:start="68:26" pos:end="68:26"><expr pos:start="68:26" pos:end="68:26"><name pos:start="68:26" pos:end="68:26">h</name></expr></argument>, <argument pos:start="68:29" pos:end="68:37"><expr pos:start="68:29" pos:end="68:37"><name pos:start="68:29" pos:end="68:37">frame_num</name></expr></argument>, <argument pos:start="68:40" pos:end="68:61"><expr pos:start="68:40" pos:end="68:61"><name pos:start="68:40" pos:end="68:48">structure</name> <operator pos:start="68:50" pos:end="68:50">^</operator> <name pos:start="68:52" pos:end="68:61">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="70:13" pos:end="70:18">break;</break>

        <case pos:start="72:9" pos:end="72:29">case <expr pos:start="72:14" pos:end="72:28"><name pos:start="72:14" pos:end="72:28">MMCO_SHORT2LONG</name></expr>:</case>

                <if_stmt pos:start="74:17" pos:end="76:56"><if pos:start="74:17" pos:end="76:56">if <condition pos:start="74:20" pos:end="74:57">(<expr pos:start="74:21" pos:end="74:56"><name pos:start="74:21" pos:end="74:49"><name pos:start="74:21" pos:end="74:21">h</name><operator pos:start="74:22" pos:end="74:23">-&gt;</operator><name pos:start="74:24" pos:end="74:31">long_ref</name><index pos:start="74:32" pos:end="74:49">[<expr pos:start="74:33" pos:end="74:48"><name pos:start="74:33" pos:end="74:39"><name pos:start="74:33" pos:end="74:36">mmco</name><index pos:start="74:37" pos:end="74:39">[<expr pos:start="74:38" pos:end="74:38"><name pos:start="74:38" pos:end="74:38">i</name></expr>]</index></name><operator pos:start="74:40" pos:end="74:40">.</operator><name pos:start="74:41" pos:end="74:48">long_arg</name></expr>]</index></name> <operator pos:start="74:51" pos:end="74:52">!=</operator> <name pos:start="74:54" pos:end="74:56">pic</name></expr>)</condition><block type="pseudo" pos:start="76:21" pos:end="76:56"><block_content pos:start="76:21" pos:end="76:56">

                    <expr_stmt pos:start="76:21" pos:end="76:56"><expr pos:start="76:21" pos:end="76:55"><call pos:start="76:21" pos:end="76:55"><name pos:start="76:21" pos:end="76:31">remove_long</name><argument_list pos:start="76:32" pos:end="76:55">(<argument pos:start="76:33" pos:end="76:33"><expr pos:start="76:33" pos:end="76:33"><name pos:start="76:33" pos:end="76:33">h</name></expr></argument>, <argument pos:start="76:36" pos:end="76:51"><expr pos:start="76:36" pos:end="76:51"><name pos:start="76:36" pos:end="76:42"><name pos:start="76:36" pos:end="76:39">mmco</name><index pos:start="76:40" pos:end="76:42">[<expr pos:start="76:41" pos:end="76:41"><name pos:start="76:41" pos:end="76:41">i</name></expr>]</index></name><operator pos:start="76:43" pos:end="76:43">.</operator><name pos:start="76:44" pos:end="76:51">long_arg</name></expr></argument>, <argument pos:start="76:54" pos:end="76:54"><expr pos:start="76:54" pos:end="76:54"><literal type="number" pos:start="76:54" pos:end="76:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="80:17" pos:end="80:44"><expr pos:start="80:17" pos:end="80:43"><call pos:start="80:17" pos:end="80:43"><name pos:start="80:17" pos:end="80:37">remove_short_at_index</name><argument_list pos:start="80:38" pos:end="80:43">(<argument pos:start="80:39" pos:end="80:39"><expr pos:start="80:39" pos:end="80:39"><name pos:start="80:39" pos:end="80:39">h</name></expr></argument>, <argument pos:start="80:42" pos:end="80:42"><expr pos:start="80:42" pos:end="80:42"><name pos:start="80:42" pos:end="80:42">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="82:17" pos:end="82:54"><expr pos:start="82:17" pos:end="82:53"><name pos:start="82:17" pos:end="82:47"><name pos:start="82:17" pos:end="82:17">h</name><operator pos:start="82:18" pos:end="82:19">-&gt;</operator><name pos:start="82:20" pos:end="82:27">long_ref</name><index pos:start="82:28" pos:end="82:47">[ <expr pos:start="82:30" pos:end="82:45"><name pos:start="82:30" pos:end="82:36"><name pos:start="82:30" pos:end="82:33">mmco</name><index pos:start="82:34" pos:end="82:36">[<expr pos:start="82:35" pos:end="82:35"><name pos:start="82:35" pos:end="82:35">i</name></expr>]</index></name><operator pos:start="82:37" pos:end="82:37">.</operator><name pos:start="82:38" pos:end="82:45">long_arg</name></expr> ]</index></name> <operator pos:start="82:49" pos:end="82:49">=</operator> <name pos:start="82:51" pos:end="82:53">pic</name></expr>;</expr_stmt>

                <if_stmt pos:start="84:17" pos:end="322:65"><if pos:start="84:17" pos:end="322:65">if <condition pos:start="84:20" pos:end="84:50">(<expr pos:start="84:21" pos:end="84:49"><name pos:start="84:21" pos:end="84:49"><name pos:start="84:21" pos:end="84:21">h</name><operator pos:start="84:22" pos:end="84:23">-&gt;</operator><name pos:start="84:24" pos:end="84:31">long_ref</name><index pos:start="84:32" pos:end="84:49">[<expr pos:start="84:33" pos:end="84:48"><name pos:start="84:33" pos:end="84:39"><name pos:start="84:33" pos:end="84:36">mmco</name><index pos:start="84:37" pos:end="84:39">[<expr pos:start="84:38" pos:end="84:38"><name pos:start="84:38" pos:end="84:38">i</name></expr>]</index></name><operator pos:start="84:40" pos:end="84:40">.</operator><name pos:start="84:41" pos:end="84:48">long_arg</name></expr>]</index></name></expr>)</condition> <block pos:start="84:52" pos:end="322:65">{<block_content pos:start="86:21" pos:end="322:65">

                    <expr_stmt pos:start="86:21" pos:end="86:64"><expr pos:start="86:21" pos:end="86:63"><name pos:start="86:21" pos:end="86:49"><name pos:start="86:21" pos:end="86:21">h</name><operator pos:start="86:22" pos:end="86:23">-&gt;</operator><name pos:start="86:24" pos:end="86:31">long_ref</name><index pos:start="86:32" pos:end="86:49">[<expr pos:start="86:33" pos:end="86:48"><name pos:start="86:33" pos:end="86:39"><name pos:start="86:33" pos:end="86:36">mmco</name><index pos:start="86:37" pos:end="86:39">[<expr pos:start="86:38" pos:end="86:38"><name pos:start="86:38" pos:end="86:38">i</name></expr>]</index></name><operator pos:start="86:40" pos:end="86:40">.</operator><name pos:start="86:41" pos:end="86:48">long_arg</name></expr>]</index></name><operator pos:start="86:50" pos:end="86:51">-&gt;</operator><name pos:start="86:52" pos:end="86:59">long_ref</name> <operator pos:start="86:61" pos:end="86:61">=</operator> <literal type="number" pos:start="86:63" pos:end="86:63">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="88:21" pos:end="88:40"><expr pos:start="88:21" pos:end="88:39"><name pos:start="88:21" pos:end="88:37"><name pos:start="88:21" pos:end="88:21">h</name><operator pos:start="88:22" pos:end="88:23">-&gt;</operator><name pos:start="88:24" pos:end="88:37">long_ref_count</name></name><operator pos:start="88:38" pos:end="88:39">++</operator></expr>;</expr_stmt>


            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:30">case <expr pos:start="93:14" pos:end="93:29"><name pos:start="93:14" pos:end="93:29">MMCO_LONG2UNUSED</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:67"><expr pos:start="95:13" pos:end="95:66"><name pos:start="95:13" pos:end="95:13">j</name>   <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:66"><name pos:start="95:19" pos:end="95:33">pic_num_extract</name><argument_list pos:start="95:34" pos:end="95:66">(<argument pos:start="95:35" pos:end="95:35"><expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">h</name></expr></argument>, <argument pos:start="95:38" pos:end="95:53"><expr pos:start="95:38" pos:end="95:53"><name pos:start="95:38" pos:end="95:44"><name pos:start="95:38" pos:end="95:41">mmco</name><index pos:start="95:42" pos:end="95:44">[<expr pos:start="95:43" pos:end="95:43"><name pos:start="95:43" pos:end="95:43">i</name></expr>]</index></name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:53">long_arg</name></expr></argument>, <argument pos:start="95:56" pos:end="95:65"><expr pos:start="95:56" pos:end="95:65"><operator pos:start="95:56" pos:end="95:56">&amp;</operator><name pos:start="95:57" pos:end="95:65">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:33"><expr pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:15">pic</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:19">h</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:29">long_ref</name><index pos:start="97:30" pos:end="97:32">[<expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="105:77"><if pos:start="99:13" pos:end="103:13">if <condition pos:start="99:16" pos:end="99:20">(<expr pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:19">pic</name></expr>)</condition> <block pos:start="99:22" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:58">

                <expr_stmt pos:start="101:17" pos:end="101:58"><expr pos:start="101:17" pos:end="101:57"><call pos:start="101:17" pos:end="101:57"><name pos:start="101:17" pos:end="101:27">remove_long</name><argument_list pos:start="101:28" pos:end="101:57">(<argument pos:start="101:29" pos:end="101:29"><expr pos:start="101:29" pos:end="101:29"><name pos:start="101:29" pos:end="101:29">h</name></expr></argument>, <argument pos:start="101:32" pos:end="101:32"><expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">j</name></expr></argument>, <argument pos:start="101:35" pos:end="101:56"><expr pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:43">structure</name> <operator pos:start="101:45" pos:end="101:45">^</operator> <name pos:start="101:47" pos:end="101:56">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="103:15" pos:end="105:77">else if <condition pos:start="103:23" pos:end="103:55">(<expr pos:start="103:24" pos:end="103:54"><name pos:start="103:24" pos:end="103:38"><name pos:start="103:24" pos:end="103:24">h</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:31">avctx</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:38">debug</name></name> <operator pos:start="103:40" pos:end="103:40">&amp;</operator> <name pos:start="103:42" pos:end="103:54">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:77"><block_content pos:start="105:17" pos:end="105:77">

                <expr_stmt pos:start="105:17" pos:end="105:77"><expr pos:start="105:17" pos:end="105:76"><call pos:start="105:17" pos:end="105:76"><name pos:start="105:17" pos:end="105:22">av_log</name><argument_list pos:start="105:23" pos:end="105:76">(<argument pos:start="105:24" pos:end="105:31"><expr pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:24">h</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">avctx</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:45"><expr pos:start="105:34" pos:end="105:45"><name pos:start="105:34" pos:end="105:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:48" pos:end="105:75"><expr pos:start="105:48" pos:end="105:75"><literal type="string" pos:start="105:48" pos:end="105:75">"mmco: unref long failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:23">case <expr pos:start="109:14" pos:end="109:22"><name pos:start="109:14" pos:end="109:22">MMCO_LONG</name></expr>:</case>

                    <comment type="line" pos:start="111:21" pos:end="111:91">// Comment below left from previous code as it is an interresting note.</comment>

                    <comment type="block" pos:start="113:21" pos:end="123:23">/* First field in pair is in short term list or

                     * at a different long term index.

                     * This is not allowed; see 7.4.3.3, notes 2 and 3.

                     * Report the problem and keep the pair where it is,

                     * and mark this field valid.

                     */</comment>



            <if_stmt pos:start="127:13" pos:end="322:65"><if pos:start="127:13" pos:end="322:65">if <condition pos:start="127:16" pos:end="127:64">(<expr pos:start="127:17" pos:end="127:63"><name pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:17">h</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">long_ref</name><index pos:start="127:28" pos:end="127:45">[<expr pos:start="127:29" pos:end="127:44"><name pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:32">mmco</name><index pos:start="127:33" pos:end="127:35">[<expr pos:start="127:34" pos:end="127:34"><name pos:start="127:34" pos:end="127:34">i</name></expr>]</index></name><operator pos:start="127:36" pos:end="127:36">.</operator><name pos:start="127:37" pos:end="127:44">long_arg</name></expr>]</index></name> <operator pos:start="127:47" pos:end="127:48">!=</operator> <name pos:start="127:50" pos:end="127:63"><name pos:start="127:50" pos:end="127:50">h</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:63">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="127:66" pos:end="322:65">{<block_content pos:start="129:17" pos:end="322:65">

                <expr_stmt pos:start="129:17" pos:end="129:52"><expr pos:start="129:17" pos:end="129:51"><call pos:start="129:17" pos:end="129:51"><name pos:start="129:17" pos:end="129:27">remove_long</name><argument_list pos:start="129:28" pos:end="129:51">(<argument pos:start="129:29" pos:end="129:29"><expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">h</name></expr></argument>, <argument pos:start="129:32" pos:end="129:47"><expr pos:start="129:32" pos:end="129:47"><name pos:start="129:32" pos:end="129:38"><name pos:start="129:32" pos:end="129:35">mmco</name><index pos:start="129:36" pos:end="129:38">[<expr pos:start="129:37" pos:end="129:37"><name pos:start="129:37" pos:end="129:37">i</name></expr>]</index></name><operator pos:start="129:39" pos:end="129:39">.</operator><name pos:start="129:40" pos:end="129:47">long_arg</name></expr></argument>, <argument pos:start="129:50" pos:end="129:50"><expr pos:start="129:50" pos:end="129:50"><literal type="number" pos:start="129:50" pos:end="129:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>






                <expr_stmt pos:start="136:17" pos:end="136:73"><expr pos:start="136:17" pos:end="136:72"><name pos:start="136:17" pos:end="136:45"><name pos:start="136:17" pos:end="136:17">h</name><operator pos:start="136:18" pos:end="136:19">-&gt;</operator><name pos:start="136:20" pos:end="136:27">long_ref</name><index pos:start="136:28" pos:end="136:45">[<expr pos:start="136:29" pos:end="136:44"><name pos:start="136:29" pos:end="136:35"><name pos:start="136:29" pos:end="136:32">mmco</name><index pos:start="136:33" pos:end="136:35">[<expr pos:start="136:34" pos:end="136:34"><name pos:start="136:34" pos:end="136:34">i</name></expr>]</index></name><operator pos:start="136:36" pos:end="136:36">.</operator><name pos:start="136:37" pos:end="136:44">long_arg</name></expr>]</index></name>           <operator pos:start="136:57" pos:end="136:57">=</operator> <name pos:start="136:59" pos:end="136:72"><name pos:start="136:59" pos:end="136:59">h</name><operator pos:start="136:60" pos:end="136:61">-&gt;</operator><name pos:start="136:62" pos:end="136:72">cur_pic_ptr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="138:17" pos:end="138:60"><expr pos:start="138:17" pos:end="138:59"><name pos:start="138:17" pos:end="138:45"><name pos:start="138:17" pos:end="138:17">h</name><operator pos:start="138:18" pos:end="138:19">-&gt;</operator><name pos:start="138:20" pos:end="138:27">long_ref</name><index pos:start="138:28" pos:end="138:45">[<expr pos:start="138:29" pos:end="138:44"><name pos:start="138:29" pos:end="138:35"><name pos:start="138:29" pos:end="138:32">mmco</name><index pos:start="138:33" pos:end="138:35">[<expr pos:start="138:34" pos:end="138:34"><name pos:start="138:34" pos:end="138:34">i</name></expr>]</index></name><operator pos:start="138:36" pos:end="138:36">.</operator><name pos:start="138:37" pos:end="138:44">long_arg</name></expr>]</index></name><operator pos:start="138:46" pos:end="138:47">-&gt;</operator><name pos:start="138:48" pos:end="138:55">long_ref</name> <operator pos:start="138:57" pos:end="138:57">=</operator> <literal type="number" pos:start="138:59" pos:end="138:59">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="140:17" pos:end="140:36"><expr pos:start="140:17" pos:end="140:35"><name pos:start="140:17" pos:end="140:33"><name pos:start="140:17" pos:end="140:17">h</name><operator pos:start="140:18" pos:end="140:19">-&gt;</operator><name pos:start="140:20" pos:end="140:33">long_ref_count</name></name><operator pos:start="140:34" pos:end="140:35">++</operator></expr>;</expr_stmt>




            <expr_stmt pos:start="145:13" pos:end="145:62"><expr pos:start="145:13" pos:end="145:61"><name pos:start="145:13" pos:end="145:37"><name pos:start="145:13" pos:end="145:13">h</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:26">cur_pic_ptr</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:37">reference</name></name> <operator pos:start="145:39" pos:end="145:40">|=</operator> <name pos:start="145:42" pos:end="145:61"><name pos:start="145:42" pos:end="145:42">h</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:61">picture_structure</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:37"><expr pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:32">current_ref_assigned</name> <operator pos:start="147:34" pos:end="147:34">=</operator> <literal type="number" pos:start="147:36" pos:end="147:36">1</literal></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:31">case <expr pos:start="151:14" pos:end="151:30"><name pos:start="151:14" pos:end="151:30">MMCO_SET_MAX_LONG</name></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:43"><expr pos:start="153:13" pos:end="153:42"><call pos:start="153:13" pos:end="153:42"><name pos:start="153:13" pos:end="153:18">assert</name><argument_list pos:start="153:19" pos:end="153:42">(<argument pos:start="153:20" pos:end="153:41"><expr pos:start="153:20" pos:end="153:41"><name pos:start="153:20" pos:end="153:26"><name pos:start="153:20" pos:end="153:23">mmco</name><index pos:start="153:24" pos:end="153:26">[<expr pos:start="153:25" pos:end="153:25"><name pos:start="153:25" pos:end="153:25">i</name></expr>]</index></name><operator pos:start="153:27" pos:end="153:27">.</operator><name pos:start="153:28" pos:end="153:35">long_arg</name> <operator pos:start="153:37" pos:end="153:38">&lt;=</operator> <literal type="number" pos:start="153:40" pos:end="153:41">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="155:13" pos:end="155:76">// just remove the long term which index is greater than new max</comment>

            <for pos:start="157:13" pos:end="322:65">for <control pos:start="157:17" pos:end="157:51">(<init pos:start="157:18" pos:end="157:38"><expr pos:start="157:18" pos:end="157:37"><name pos:start="157:18" pos:end="157:18">j</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <name pos:start="157:22" pos:end="157:28"><name pos:start="157:22" pos:end="157:25">mmco</name><index pos:start="157:26" pos:end="157:28">[<expr pos:start="157:27" pos:end="157:27"><name pos:start="157:27" pos:end="157:27">i</name></expr>]</index></name><operator pos:start="157:29" pos:end="157:29">.</operator><name pos:start="157:30" pos:end="157:37">long_arg</name></expr>;</init> <condition pos:start="157:40" pos:end="157:46"><expr pos:start="157:40" pos:end="157:45"><name pos:start="157:40" pos:end="157:40">j</name> <operator pos:start="157:42" pos:end="157:42">&lt;</operator> <literal type="number" pos:start="157:44" pos:end="157:45">16</literal></expr>;</condition> <incr pos:start="157:48" pos:end="157:50"><expr pos:start="157:48" pos:end="157:50"><name pos:start="157:48" pos:end="157:48">j</name><operator pos:start="157:49" pos:end="157:50">++</operator></expr></incr>)</control> <block pos:start="157:53" pos:end="322:65">{<block_content pos:start="159:17" pos:end="322:65">

                <expr_stmt pos:start="159:17" pos:end="159:37"><expr pos:start="159:17" pos:end="159:36"><call pos:start="159:17" pos:end="159:36"><name pos:start="159:17" pos:end="159:27">remove_long</name><argument_list pos:start="159:28" pos:end="159:36">(<argument pos:start="159:29" pos:end="159:29"><expr pos:start="159:29" pos:end="159:29"><name pos:start="159:29" pos:end="159:29">h</name></expr></argument>, <argument pos:start="159:32" pos:end="159:32"><expr pos:start="159:32" pos:end="159:32"><name pos:start="159:32" pos:end="159:32">j</name></expr></argument>, <argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <break pos:start="162:13" pos:end="162:18">break;</break>

        <case pos:start="164:9" pos:end="164:24">case <expr pos:start="164:14" pos:end="164:23"><name pos:start="164:14" pos:end="164:23">MMCO_RESET</name></expr>:</case>

            <while pos:start="166:13" pos:end="322:65">while <condition pos:start="166:19" pos:end="166:38">(<expr pos:start="166:20" pos:end="166:37"><name pos:start="166:20" pos:end="166:37"><name pos:start="166:20" pos:end="166:20">h</name><operator pos:start="166:21" pos:end="166:22">-&gt;</operator><name pos:start="166:23" pos:end="166:37">short_ref_count</name></name></expr>)</condition> <block pos:start="166:40" pos:end="322:65">{<block_content pos:start="168:17" pos:end="322:65">

                <expr_stmt pos:start="168:17" pos:end="168:63"><expr pos:start="168:17" pos:end="168:62"><call pos:start="168:17" pos:end="168:62"><name pos:start="168:17" pos:end="168:28">remove_short</name><argument_list pos:start="168:29" pos:end="168:62">(<argument pos:start="168:30" pos:end="168:30"><expr pos:start="168:30" pos:end="168:30"><name pos:start="168:30" pos:end="168:30">h</name></expr></argument>, <argument pos:start="168:33" pos:end="168:58"><expr pos:start="168:33" pos:end="168:58"><name pos:start="168:33" pos:end="168:47"><name pos:start="168:33" pos:end="168:33">h</name><operator pos:start="168:34" pos:end="168:35">-&gt;</operator><name pos:start="168:36" pos:end="168:44">short_ref</name><index pos:start="168:45" pos:end="168:47">[<expr pos:start="168:46" pos:end="168:46"><literal type="number" pos:start="168:46" pos:end="168:46">0</literal></expr>]</index></name><operator pos:start="168:48" pos:end="168:49">-&gt;</operator><name pos:start="168:50" pos:end="168:58">frame_num</name></expr></argument>, <argument pos:start="168:61" pos:end="168:61"><expr pos:start="168:61" pos:end="168:61"><literal type="number" pos:start="168:61" pos:end="168:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <for pos:start="171:13" pos:end="322:65">for <control pos:start="171:17" pos:end="171:36">(<init pos:start="171:18" pos:end="171:23"><expr pos:start="171:18" pos:end="171:22"><name pos:start="171:18" pos:end="171:18">j</name> <operator pos:start="171:20" pos:end="171:20">=</operator> <literal type="number" pos:start="171:22" pos:end="171:22">0</literal></expr>;</init> <condition pos:start="171:25" pos:end="171:31"><expr pos:start="171:25" pos:end="171:30"><name pos:start="171:25" pos:end="171:25">j</name> <operator pos:start="171:27" pos:end="171:27">&lt;</operator> <literal type="number" pos:start="171:29" pos:end="171:30">16</literal></expr>;</condition> <incr pos:start="171:33" pos:end="171:35"><expr pos:start="171:33" pos:end="171:35"><name pos:start="171:33" pos:end="171:33">j</name><operator pos:start="171:34" pos:end="171:35">++</operator></expr></incr>)</control> <block pos:start="171:38" pos:end="322:65">{<block_content pos:start="173:17" pos:end="322:65">

                <expr_stmt pos:start="173:17" pos:end="173:37"><expr pos:start="173:17" pos:end="173:36"><call pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:27">remove_long</name><argument_list pos:start="173:28" pos:end="173:36">(<argument pos:start="173:29" pos:end="173:29"><expr pos:start="173:29" pos:end="173:29"><name pos:start="173:29" pos:end="173:29">h</name></expr></argument>, <argument pos:start="173:32" pos:end="173:32"><expr pos:start="173:32" pos:end="173:32"><name pos:start="173:32" pos:end="173:32">j</name></expr></argument>, <argument pos:start="173:35" pos:end="173:35"><expr pos:start="173:35" pos:end="173:35"><literal type="number" pos:start="173:35" pos:end="173:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="176:13" pos:end="176:58"><expr pos:start="176:13" pos:end="176:57"><name pos:start="176:13" pos:end="176:24"><name pos:start="176:13" pos:end="176:13">h</name><operator pos:start="176:14" pos:end="176:15">-&gt;</operator><name pos:start="176:16" pos:end="176:24">frame_num</name></name>  <operator pos:start="176:27" pos:end="176:27">=</operator> <name pos:start="176:29" pos:end="176:53"><name pos:start="176:29" pos:end="176:29">h</name><operator pos:start="176:30" pos:end="176:31">-&gt;</operator><name pos:start="176:32" pos:end="176:42">cur_pic_ptr</name><operator pos:start="176:43" pos:end="176:44">-&gt;</operator><name pos:start="176:45" pos:end="176:53">frame_num</name></name> <operator pos:start="176:55" pos:end="176:55">=</operator> <literal type="number" pos:start="176:57" pos:end="176:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="178:13" pos:end="178:30"><expr pos:start="178:13" pos:end="178:29"><name pos:start="178:13" pos:end="178:25"><name pos:start="178:13" pos:end="178:13">h</name><operator pos:start="178:14" pos:end="178:15">-&gt;</operator><name pos:start="178:16" pos:end="178:25">mmco_reset</name></name> <operator pos:start="178:27" pos:end="178:27">=</operator> <literal type="number" pos:start="178:29" pos:end="178:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="180:13" pos:end="180:43"><expr pos:start="180:13" pos:end="180:42"><name pos:start="180:13" pos:end="180:38"><name pos:start="180:13" pos:end="180:13">h</name><operator pos:start="180:14" pos:end="180:15">-&gt;</operator><name pos:start="180:16" pos:end="180:26">cur_pic_ptr</name><operator pos:start="180:27" pos:end="180:28">-&gt;</operator><name pos:start="180:29" pos:end="180:38">mmco_reset</name></name> <operator pos:start="180:40" pos:end="180:40">=</operator> <literal type="number" pos:start="180:42" pos:end="180:42">1</literal></expr>;</expr_stmt>

            <for pos:start="182:13" pos:end="184:42">for <control pos:start="182:17" pos:end="182:55">(<init pos:start="182:18" pos:end="182:23"><expr pos:start="182:18" pos:end="182:22"><name pos:start="182:18" pos:end="182:18">j</name> <operator pos:start="182:20" pos:end="182:20">=</operator> <literal type="number" pos:start="182:22" pos:end="182:22">0</literal></expr>;</init> <condition pos:start="182:25" pos:end="182:50"><expr pos:start="182:25" pos:end="182:49"><name pos:start="182:25" pos:end="182:25">j</name> <operator pos:start="182:27" pos:end="182:27">&lt;</operator> <name pos:start="182:29" pos:end="182:49">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="182:52" pos:end="182:54"><expr pos:start="182:52" pos:end="182:54"><name pos:start="182:52" pos:end="182:52">j</name><operator pos:start="182:53" pos:end="182:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="184:17" pos:end="184:42"><block_content pos:start="184:17" pos:end="184:42">

                <expr_stmt pos:start="184:17" pos:end="184:42"><expr pos:start="184:17" pos:end="184:41"><name pos:start="184:17" pos:end="184:31"><name pos:start="184:17" pos:end="184:17">h</name><operator pos:start="184:18" pos:end="184:19">-&gt;</operator><name pos:start="184:20" pos:end="184:28">last_pocs</name><index pos:start="184:29" pos:end="184:31">[<expr pos:start="184:30" pos:end="184:30"><name pos:start="184:30" pos:end="184:30">j</name></expr>]</index></name> <operator pos:start="184:33" pos:end="184:33">=</operator> <name pos:start="184:35" pos:end="184:41">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="186:13" pos:end="186:18">break;</break>

        <default pos:start="188:9" pos:end="188:16">default:</default> <expr_stmt pos:start="188:18" pos:end="188:27"><expr pos:start="188:18" pos:end="188:26"><call pos:start="188:18" pos:end="188:26"><name pos:start="188:18" pos:end="188:23">assert</name><argument_list pos:start="188:24" pos:end="188:26">(<argument pos:start="188:25" pos:end="188:25"><expr pos:start="188:25" pos:end="188:25"><literal type="number" pos:start="188:25" pos:end="188:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="194:5" pos:end="322:65"><if pos:start="194:5" pos:end="322:65">if <condition pos:start="194:8" pos:end="194:30">(<expr pos:start="194:9" pos:end="194:29"><operator pos:start="194:9" pos:end="194:9">!</operator><name pos:start="194:10" pos:end="194:29">current_ref_assigned</name></expr>)</condition> <block pos:start="194:32" pos:end="322:65">{<block_content pos:start="208:9" pos:end="322:65">

        <comment type="block" pos:start="196:9" pos:end="206:11">/* Second field of complementary field pair; the first field of

         * which is already referenced. If short referenced, it

         * should be first entry in short_ref. If not, it must exist

         * in long_ref; trying to put it on the short list here is an

         * error in the encoded bit stream (ref: 7.4.3.3, NOTE 2 and 3).

         */</comment>

        <if_stmt pos:start="208:9" pos:end="322:65"><if pos:start="208:9" pos:end="214:9">if <condition pos:start="208:12" pos:end="208:68">(<expr pos:start="208:13" pos:end="208:67"><name pos:start="208:13" pos:end="208:30"><name pos:start="208:13" pos:end="208:13">h</name><operator pos:start="208:14" pos:end="208:15">-&gt;</operator><name pos:start="208:16" pos:end="208:30">short_ref_count</name></name> <operator pos:start="208:32" pos:end="208:33">&amp;&amp;</operator> <name pos:start="208:35" pos:end="208:49"><name pos:start="208:35" pos:end="208:35">h</name><operator pos:start="208:36" pos:end="208:37">-&gt;</operator><name pos:start="208:38" pos:end="208:46">short_ref</name><index pos:start="208:47" pos:end="208:49">[<expr pos:start="208:48" pos:end="208:48"><literal type="number" pos:start="208:48" pos:end="208:48">0</literal></expr>]</index></name> <operator pos:start="208:51" pos:end="208:52">==</operator> <name pos:start="208:54" pos:end="208:67"><name pos:start="208:54" pos:end="208:54">h</name><operator pos:start="208:55" pos:end="208:56">-&gt;</operator><name pos:start="208:57" pos:end="208:67">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="208:70" pos:end="214:9">{<block_content pos:start="212:13" pos:end="212:51">

            <comment type="block" pos:start="210:13" pos:end="210:50">/* Just mark the second field valid */</comment>

            <expr_stmt pos:start="212:13" pos:end="212:51"><expr pos:start="212:13" pos:end="212:50"><name pos:start="212:13" pos:end="212:37"><name pos:start="212:13" pos:end="212:13">h</name><operator pos:start="212:14" pos:end="212:15">-&gt;</operator><name pos:start="212:16" pos:end="212:26">cur_pic_ptr</name><operator pos:start="212:27" pos:end="212:28">-&gt;</operator><name pos:start="212:29" pos:end="212:37">reference</name></name> <operator pos:start="212:39" pos:end="212:39">=</operator> <name pos:start="212:41" pos:end="212:50">PICT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="214:11" pos:end="226:9">else if <condition pos:start="214:19" pos:end="214:44">(<expr pos:start="214:20" pos:end="214:43"><name pos:start="214:20" pos:end="214:43"><name pos:start="214:20" pos:end="214:20">h</name><operator pos:start="214:21" pos:end="214:22">-&gt;</operator><name pos:start="214:23" pos:end="214:33">cur_pic_ptr</name><operator pos:start="214:34" pos:end="214:35">-&gt;</operator><name pos:start="214:36" pos:end="214:43">long_ref</name></name></expr>)</condition> <block pos:start="214:46" pos:end="226:9">{<block_content pos:start="216:13" pos:end="224:38">

            <expr_stmt pos:start="216:13" pos:end="222:75"><expr pos:start="216:13" pos:end="222:74"><call pos:start="216:13" pos:end="222:74"><name pos:start="216:13" pos:end="216:18">av_log</name><argument_list pos:start="216:19" pos:end="222:74">(<argument pos:start="216:20" pos:end="216:27"><expr pos:start="216:20" pos:end="216:27"><name pos:start="216:20" pos:end="216:27"><name pos:start="216:20" pos:end="216:20">h</name><operator pos:start="216:21" pos:end="216:22">-&gt;</operator><name pos:start="216:23" pos:end="216:27">avctx</name></name></expr></argument>, <argument pos:start="216:30" pos:end="216:41"><expr pos:start="216:30" pos:end="216:41"><name pos:start="216:30" pos:end="216:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="216:44" pos:end="222:73"><expr pos:start="216:44" pos:end="222:73"><literal type="string" pos:start="216:44" pos:end="216:74">"illegal short term reference "</literal>

                                           <literal type="string" pos:start="218:44" pos:end="218:73">"assignment for second field "</literal>

                                           <literal type="string" pos:start="220:44" pos:end="220:73">"in complementary field pair "</literal>

                                           <literal type="string" pos:start="222:44" pos:end="222:73">"(first field is long term)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="224:13" pos:end="224:38"><expr pos:start="224:13" pos:end="224:37"><name pos:start="224:13" pos:end="224:15">err</name> <operator pos:start="224:17" pos:end="224:17">=</operator> <name pos:start="224:19" pos:end="224:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="226:11" pos:end="322:65">else <block pos:start="226:16" pos:end="322:65">{<block_content pos:start="228:13" pos:end="322:65">

            <expr_stmt pos:start="228:13" pos:end="228:64"><expr pos:start="228:13" pos:end="228:63"><name pos:start="228:13" pos:end="228:15">pic</name> <operator pos:start="228:17" pos:end="228:17">=</operator> <call pos:start="228:19" pos:end="228:63"><name pos:start="228:19" pos:end="228:30">remove_short</name><argument_list pos:start="228:31" pos:end="228:63">(<argument pos:start="228:32" pos:end="228:32"><expr pos:start="228:32" pos:end="228:32"><name pos:start="228:32" pos:end="228:32">h</name></expr></argument>, <argument pos:start="228:35" pos:end="228:59"><expr pos:start="228:35" pos:end="228:59"><name pos:start="228:35" pos:end="228:59"><name pos:start="228:35" pos:end="228:35">h</name><operator pos:start="228:36" pos:end="228:37">-&gt;</operator><name pos:start="228:38" pos:end="228:48">cur_pic_ptr</name><operator pos:start="228:49" pos:end="228:50">-&gt;</operator><name pos:start="228:51" pos:end="228:59">frame_num</name></name></expr></argument>, <argument pos:start="228:62" pos:end="228:62"><expr pos:start="228:62" pos:end="228:62"><literal type="number" pos:start="228:62" pos:end="228:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="230:13" pos:end="322:65"><if pos:start="230:13" pos:end="322:65">if <condition pos:start="230:16" pos:end="230:20">(<expr pos:start="230:17" pos:end="230:19"><name pos:start="230:17" pos:end="230:19">pic</name></expr>)</condition> <block pos:start="230:22" pos:end="322:65">{<block_content pos:start="232:17" pos:end="322:65">

                <expr_stmt pos:start="232:17" pos:end="232:93"><expr pos:start="232:17" pos:end="232:92"><call pos:start="232:17" pos:end="232:92"><name pos:start="232:17" pos:end="232:22">av_log</name><argument_list pos:start="232:23" pos:end="232:92">(<argument pos:start="232:24" pos:end="232:31"><expr pos:start="232:24" pos:end="232:31"><name pos:start="232:24" pos:end="232:31"><name pos:start="232:24" pos:end="232:24">h</name><operator pos:start="232:25" pos:end="232:26">-&gt;</operator><name pos:start="232:27" pos:end="232:31">avctx</name></name></expr></argument>, <argument pos:start="232:34" pos:end="232:45"><expr pos:start="232:34" pos:end="232:45"><name pos:start="232:34" pos:end="232:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="232:48" pos:end="232:91"><expr pos:start="232:48" pos:end="232:91"><literal type="string" pos:start="232:48" pos:end="232:91">"illegal short term buffer state detected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="234:17" pos:end="234:42"><expr pos:start="234:17" pos:end="234:41"><name pos:start="234:17" pos:end="234:19">err</name> <operator pos:start="234:21" pos:end="234:21">=</operator> <name pos:start="234:23" pos:end="234:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>




            <if_stmt pos:start="239:13" pos:end="243:63"><if pos:start="239:13" pos:end="243:63">if <condition pos:start="239:16" pos:end="239:35">(<expr pos:start="239:17" pos:end="239:34"><name pos:start="239:17" pos:end="239:34"><name pos:start="239:17" pos:end="239:17">h</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:34">short_ref_count</name></name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="243:63"><block_content pos:start="241:17" pos:end="243:63">

                <expr_stmt pos:start="241:17" pos:end="243:63"><expr pos:start="241:17" pos:end="243:62"><call pos:start="241:17" pos:end="243:62"><name pos:start="241:17" pos:end="241:23">memmove</name><argument_list pos:start="241:24" pos:end="243:62">(<argument pos:start="241:25" pos:end="241:40"><expr pos:start="241:25" pos:end="241:40"><operator pos:start="241:25" pos:end="241:25">&amp;</operator><name pos:start="241:26" pos:end="241:40"><name pos:start="241:26" pos:end="241:26">h</name><operator pos:start="241:27" pos:end="241:28">-&gt;</operator><name pos:start="241:29" pos:end="241:37">short_ref</name><index pos:start="241:38" pos:end="241:40">[<expr pos:start="241:39" pos:end="241:39"><literal type="number" pos:start="241:39" pos:end="241:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:43" pos:end="241:58"><expr pos:start="241:43" pos:end="241:58"><operator pos:start="241:43" pos:end="241:43">&amp;</operator><name pos:start="241:44" pos:end="241:58"><name pos:start="241:44" pos:end="241:44">h</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:55">short_ref</name><index pos:start="241:56" pos:end="241:58">[<expr pos:start="241:57" pos:end="241:57"><literal type="number" pos:start="241:57" pos:end="241:57">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="243:25" pos:end="243:61"><expr pos:start="243:25" pos:end="243:61"><name pos:start="243:25" pos:end="243:42"><name pos:start="243:25" pos:end="243:25">h</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:42">short_ref_count</name></name> <operator pos:start="243:44" pos:end="243:44">*</operator> <sizeof pos:start="243:46" pos:end="243:61">sizeof<argument_list pos:start="243:52" pos:end="243:61">(<argument pos:start="243:53" pos:end="243:60"><expr pos:start="243:53" pos:end="243:60"><name pos:start="243:53" pos:end="243:59">Picture</name><operator pos:start="243:60" pos:end="243:60">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="247:13" pos:end="247:45"><expr pos:start="247:13" pos:end="247:44"><name pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:13">h</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:24">short_ref</name><index pos:start="247:25" pos:end="247:27">[<expr pos:start="247:26" pos:end="247:26"><literal type="number" pos:start="247:26" pos:end="247:26">0</literal></expr>]</index></name> <operator pos:start="247:29" pos:end="247:29">=</operator> <name pos:start="247:31" pos:end="247:44"><name pos:start="247:31" pos:end="247:31">h</name><operator pos:start="247:32" pos:end="247:33">-&gt;</operator><name pos:start="247:34" pos:end="247:44">cur_pic_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:33"><expr pos:start="249:13" pos:end="249:32"><name pos:start="249:13" pos:end="249:30"><name pos:start="249:13" pos:end="249:13">h</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:30">short_ref_count</name></name><operator pos:start="249:31" pos:end="249:32">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:62"><expr pos:start="251:13" pos:end="251:61"><name pos:start="251:13" pos:end="251:37"><name pos:start="251:13" pos:end="251:13">h</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:26">cur_pic_ptr</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:37">reference</name></name> <operator pos:start="251:39" pos:end="251:40">|=</operator> <name pos:start="251:42" pos:end="251:61"><name pos:start="251:42" pos:end="251:42">h</name><operator pos:start="251:43" pos:end="251:44">-&gt;</operator><name pos:start="251:45" pos:end="251:61">picture_structure</name></name></expr>;</expr_stmt>





    <if_stmt pos:start="257:5" pos:end="322:65"><if pos:start="257:5" pos:end="322:65">if <condition pos:start="257:8" pos:end="257:82">(<expr pos:start="257:9" pos:end="257:81"><name pos:start="257:9" pos:end="257:25"><name pos:start="257:9" pos:end="257:9">h</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:25">long_ref_count</name></name> <operator pos:start="257:27" pos:end="257:27">+</operator> <name pos:start="257:29" pos:end="257:46"><name pos:start="257:29" pos:end="257:29">h</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:46">short_ref_count</name></name> <operator pos:start="257:48" pos:end="257:48">&gt;</operator> <call pos:start="257:50" pos:end="257:81"><name pos:start="257:50" pos:end="257:54">FFMAX</name><argument_list pos:start="257:55" pos:end="257:81">(<argument pos:start="257:56" pos:end="257:77"><expr pos:start="257:56" pos:end="257:77"><name pos:start="257:56" pos:end="257:77"><name pos:start="257:56" pos:end="257:56">h</name><operator pos:start="257:57" pos:end="257:58">-&gt;</operator><name pos:start="257:59" pos:end="257:61">sps</name><operator pos:start="257:62" pos:end="257:62">.</operator><name pos:start="257:63" pos:end="257:77">ref_frame_count</name></name></expr></argument>, <argument pos:start="257:80" pos:end="257:80"><expr pos:start="257:80" pos:end="257:80"><literal type="number" pos:start="257:80" pos:end="257:80">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="257:84" pos:end="322:65">{<block_content pos:start="269:9" pos:end="322:65">



        <comment type="block" pos:start="261:9" pos:end="267:11">/* We have too many reference frames, probably due to corrupted

         * stream. Need to discard one frame. Prevents overrun of the

         * short_ref and long_ref buffers.

         */</comment>

        <expr_stmt pos:start="269:9" pos:end="275:78"><expr pos:start="269:9" pos:end="275:77"><call pos:start="269:9" pos:end="275:77"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="275:77">(<argument pos:start="269:16" pos:end="269:23"><expr pos:start="269:16" pos:end="269:23"><name pos:start="269:16" pos:end="269:23"><name pos:start="269:16" pos:end="269:16">h</name><operator pos:start="269:17" pos:end="269:18">-&gt;</operator><name pos:start="269:19" pos:end="269:23">avctx</name></name></expr></argument>, <argument pos:start="269:26" pos:end="269:37"><expr pos:start="269:26" pos:end="269:37"><name pos:start="269:26" pos:end="269:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="271:16" pos:end="273:49"><expr pos:start="271:16" pos:end="273:49"><literal type="string" pos:start="271:16" pos:end="271:78">"number of reference frames (%d+%d) exceeds max (%d; probably "</literal>

               <literal type="string" pos:start="273:16" pos:end="273:49">"corrupt input), discarding one\n"</literal></expr></argument>,

               <argument pos:start="275:16" pos:end="275:32"><expr pos:start="275:16" pos:end="275:32"><name pos:start="275:16" pos:end="275:32"><name pos:start="275:16" pos:end="275:16">h</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:32">long_ref_count</name></name></expr></argument>, <argument pos:start="275:35" pos:end="275:52"><expr pos:start="275:35" pos:end="275:52"><name pos:start="275:35" pos:end="275:52"><name pos:start="275:35" pos:end="275:35">h</name><operator pos:start="275:36" pos:end="275:37">-&gt;</operator><name pos:start="275:38" pos:end="275:52">short_ref_count</name></name></expr></argument>, <argument pos:start="275:55" pos:end="275:76"><expr pos:start="275:55" pos:end="275:76"><name pos:start="275:55" pos:end="275:76"><name pos:start="275:55" pos:end="275:55">h</name><operator pos:start="275:56" pos:end="275:57">-&gt;</operator><name pos:start="275:58" pos:end="275:60">sps</name><operator pos:start="275:61" pos:end="275:61">.</operator><name pos:start="275:62" pos:end="275:76">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:34"><expr pos:start="277:9" pos:end="277:33"><name pos:start="277:9" pos:end="277:11">err</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <name pos:start="277:15" pos:end="277:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>



        <if_stmt pos:start="281:9" pos:end="322:65"><if pos:start="281:9" pos:end="295:9">if <condition pos:start="281:12" pos:end="281:53">(<expr pos:start="281:13" pos:end="281:52"><name pos:start="281:13" pos:end="281:29"><name pos:start="281:13" pos:end="281:13">h</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:29">long_ref_count</name></name> <operator pos:start="281:31" pos:end="281:32">&amp;&amp;</operator> <operator pos:start="281:34" pos:end="281:34">!</operator><name pos:start="281:35" pos:end="281:52"><name pos:start="281:35" pos:end="281:35">h</name><operator pos:start="281:36" pos:end="281:37">-&gt;</operator><name pos:start="281:38" pos:end="281:52">short_ref_count</name></name></expr>)</condition> <block pos:start="281:55" pos:end="295:9">{<block_content pos:start="283:13" pos:end="293:33">

            <for pos:start="283:13" pos:end="287:26">for <control pos:start="283:17" pos:end="283:36">(<init pos:start="283:18" pos:end="283:23"><expr pos:start="283:18" pos:end="283:22"><name pos:start="283:18" pos:end="283:18">i</name> <operator pos:start="283:20" pos:end="283:20">=</operator> <literal type="number" pos:start="283:22" pos:end="283:22">0</literal></expr>;</init> <condition pos:start="283:25" pos:end="283:31"><expr pos:start="283:25" pos:end="283:30"><name pos:start="283:25" pos:end="283:25">i</name> <operator pos:start="283:27" pos:end="283:27">&lt;</operator> <literal type="number" pos:start="283:29" pos:end="283:30">16</literal></expr>;</condition> <incr pos:start="283:33" pos:end="283:35"><expr pos:start="283:33" pos:end="283:35"><operator pos:start="283:33" pos:end="283:34">++</operator><name pos:start="283:35" pos:end="283:35">i</name></expr></incr>)</control><block type="pseudo" pos:start="285:17" pos:end="287:26"><block_content pos:start="285:17" pos:end="287:26">

                <if_stmt pos:start="285:17" pos:end="287:26"><if pos:start="285:17" pos:end="287:26">if <condition pos:start="285:20" pos:end="285:35">(<expr pos:start="285:21" pos:end="285:34"><name pos:start="285:21" pos:end="285:34"><name pos:start="285:21" pos:end="285:21">h</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:31">long_ref</name><index pos:start="285:32" pos:end="285:34">[<expr pos:start="285:33" pos:end="285:33"><name pos:start="285:33" pos:end="285:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="287:21" pos:end="287:26"><block_content pos:start="287:21" pos:end="287:26">

                    <break pos:start="287:21" pos:end="287:26">break;</break></block_content></block></if></if_stmt></block_content></block></for>



            <expr_stmt pos:start="291:13" pos:end="291:27"><expr pos:start="291:13" pos:end="291:26"><call pos:start="291:13" pos:end="291:26"><name pos:start="291:13" pos:end="291:18">assert</name><argument_list pos:start="291:19" pos:end="291:26">(<argument pos:start="291:20" pos:end="291:25"><expr pos:start="291:20" pos:end="291:25"><name pos:start="291:20" pos:end="291:20">i</name> <operator pos:start="291:22" pos:end="291:22">&lt;</operator> <literal type="number" pos:start="291:24" pos:end="291:25">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:33"><expr pos:start="293:13" pos:end="293:32"><call pos:start="293:13" pos:end="293:32"><name pos:start="293:13" pos:end="293:23">remove_long</name><argument_list pos:start="293:24" pos:end="293:32">(<argument pos:start="293:25" pos:end="293:25"><expr pos:start="293:25" pos:end="293:25"><name pos:start="293:25" pos:end="293:25">h</name></expr></argument>, <argument pos:start="293:28" pos:end="293:28"><expr pos:start="293:28" pos:end="293:28"><name pos:start="293:28" pos:end="293:28">i</name></expr></argument>, <argument pos:start="293:31" pos:end="293:31"><expr pos:start="293:31" pos:end="293:31"><literal type="number" pos:start="293:31" pos:end="293:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="295:11" pos:end="322:65">else <block pos:start="295:16" pos:end="322:65">{<block_content pos:start="297:13" pos:end="322:65">

            <expr_stmt pos:start="297:13" pos:end="297:55"><expr pos:start="297:13" pos:end="297:54"><name pos:start="297:13" pos:end="297:15">pic</name> <operator pos:start="297:17" pos:end="297:17">=</operator> <name pos:start="297:19" pos:end="297:54"><name pos:start="297:19" pos:end="297:19">h</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:30">short_ref</name><index pos:start="297:31" pos:end="297:54">[<expr pos:start="297:32" pos:end="297:53"><name pos:start="297:32" pos:end="297:49"><name pos:start="297:32" pos:end="297:32">h</name><operator pos:start="297:33" pos:end="297:34">-&gt;</operator><name pos:start="297:35" pos:end="297:49">short_ref_count</name></name> <operator pos:start="297:51" pos:end="297:51">-</operator> <literal type="number" pos:start="297:53" pos:end="297:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:47"><expr pos:start="299:13" pos:end="299:46"><call pos:start="299:13" pos:end="299:46"><name pos:start="299:13" pos:end="299:24">remove_short</name><argument_list pos:start="299:25" pos:end="299:46">(<argument pos:start="299:26" pos:end="299:26"><expr pos:start="299:26" pos:end="299:26"><name pos:start="299:26" pos:end="299:26">h</name></expr></argument>, <argument pos:start="299:29" pos:end="299:42"><expr pos:start="299:29" pos:end="299:42"><name pos:start="299:29" pos:end="299:42"><name pos:start="299:29" pos:end="299:31">pic</name><operator pos:start="299:32" pos:end="299:33">-&gt;</operator><name pos:start="299:34" pos:end="299:42">frame_num</name></name></expr></argument>, <argument pos:start="299:45" pos:end="299:45"><expr pos:start="299:45" pos:end="299:45"><literal type="number" pos:start="299:45" pos:end="299:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="305:5" pos:end="305:24"><expr pos:start="305:5" pos:end="305:23"><call pos:start="305:5" pos:end="305:23"><name pos:start="305:5" pos:end="305:20">print_short_term</name><argument_list pos:start="305:21" pos:end="305:23">(<argument pos:start="305:22" pos:end="305:22"><expr pos:start="305:22" pos:end="305:22"><name pos:start="305:22" pos:end="305:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:23"><expr pos:start="307:5" pos:end="307:22"><call pos:start="307:5" pos:end="307:22"><name pos:start="307:5" pos:end="307:19">print_long_term</name><argument_list pos:start="307:20" pos:end="307:22">(<argument pos:start="307:21" pos:end="307:21"><expr pos:start="307:21" pos:end="307:21"><name pos:start="307:21" pos:end="307:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="311:5" pos:end="322:65"><if pos:start="311:5" pos:end="322:65">if<condition pos:start="311:7" pos:end="311:182">(<expr pos:start="311:8" pos:end="311:181"><name pos:start="311:8" pos:end="311:10">err</name> <operator pos:start="311:12" pos:end="311:13">&gt;=</operator> <literal type="number" pos:start="311:15" pos:end="311:15">0</literal> <operator pos:start="311:17" pos:end="311:18">&amp;&amp;</operator> <name pos:start="311:20" pos:end="311:36"><name pos:start="311:20" pos:end="311:20">h</name><operator pos:start="311:21" pos:end="311:22">-&gt;</operator><name pos:start="311:23" pos:end="311:36">long_ref_count</name></name><operator pos:start="311:37" pos:end="311:38">==</operator><literal type="number" pos:start="311:39" pos:end="311:39">0</literal> <operator pos:start="311:41" pos:end="311:42">&amp;&amp;</operator> <name pos:start="311:44" pos:end="311:61"><name pos:start="311:44" pos:end="311:44">h</name><operator pos:start="311:45" pos:end="311:46">-&gt;</operator><name pos:start="311:47" pos:end="311:61">short_ref_count</name></name><operator pos:start="311:62" pos:end="311:63">&lt;=</operator><literal type="number" pos:start="311:64" pos:end="311:64">2</literal> <operator pos:start="311:66" pos:end="311:67">&amp;&amp;</operator> <name pos:start="311:69" pos:end="311:87"><name pos:start="311:69" pos:end="311:69">h</name><operator pos:start="311:70" pos:end="311:71">-&gt;</operator><name pos:start="311:72" pos:end="311:74">pps</name><operator pos:start="311:75" pos:end="311:75">.</operator><name pos:start="311:76" pos:end="311:84">ref_count</name><index pos:start="311:85" pos:end="311:87">[<expr pos:start="311:86" pos:end="311:86"><literal type="number" pos:start="311:86" pos:end="311:86">0</literal></expr>]</index></name><operator pos:start="311:88" pos:end="311:89">&lt;=</operator><literal type="number" pos:start="311:90" pos:end="311:92">1</literal> <operator pos:start="311:92" pos:end="311:92">+</operator> <operator pos:start="311:94" pos:end="311:94">(</operator><name pos:start="311:95" pos:end="311:114"><name pos:start="311:95" pos:end="311:95">h</name><operator pos:start="311:96" pos:end="311:97">-&gt;</operator><name pos:start="311:98" pos:end="311:114">picture_structure</name></name> <operator pos:start="311:116" pos:end="311:117">!=</operator> <name pos:start="311:119" pos:end="311:128">PICT_FRAME</name><operator pos:start="311:129" pos:end="311:129">)</operator> <operator pos:start="311:131" pos:end="311:132">&amp;&amp;</operator> <name pos:start="311:134" pos:end="311:160"><name pos:start="311:134" pos:end="311:134">h</name><operator pos:start="311:135" pos:end="311:136">-&gt;</operator><name pos:start="311:137" pos:end="311:147">cur_pic_ptr</name><operator pos:start="311:148" pos:end="311:149">-&gt;</operator><name pos:start="311:150" pos:end="311:150">f</name><operator pos:start="311:151" pos:end="311:151">.</operator><name pos:start="311:152" pos:end="311:160">pict_type</name></name> <operator pos:start="311:162" pos:end="311:163">==</operator> <name pos:start="311:165" pos:end="311:181">AV_PICTURE_TYPE_I</name></expr>)</condition><block pos:start="311:183" pos:end="322:65">{<block_content pos:start="313:9" pos:end="322:65">

        <expr_stmt pos:start="313:9" pos:end="313:34"><expr pos:start="313:9" pos:end="313:33"><name pos:start="313:9" pos:end="313:28"><name pos:start="313:9" pos:end="313:9">h</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:22">cur_pic_ptr</name><operator pos:start="313:23" pos:end="313:24">-&gt;</operator><name pos:start="313:25" pos:end="313:28">sync</name></name> <operator pos:start="313:30" pos:end="313:31">|=</operator> <literal type="number" pos:start="313:33" pos:end="313:33">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="317:24"><if pos:start="315:9" pos:end="317:24">if<condition pos:start="315:11" pos:end="315:35">(<expr pos:start="315:12" pos:end="315:34"><operator pos:start="315:12" pos:end="315:12">!</operator><name pos:start="315:13" pos:end="315:34"><name pos:start="315:13" pos:end="315:13">h</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:20">avctx</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:34">has_b_frames</name></name></expr>)</condition><block type="pseudo" pos:start="317:13" pos:end="317:24"><block_content pos:start="317:13" pos:end="317:24">

            <expr_stmt pos:start="317:13" pos:end="317:24"><expr pos:start="317:13" pos:end="317:23"><name pos:start="317:13" pos:end="317:19"><name pos:start="317:13" pos:end="317:13">h</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:19">sync</name></name> <operator pos:start="317:21" pos:end="317:21">=</operator> <literal type="number" pos:start="317:23" pos:end="317:23">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <return pos:start="322:5" pos:end="322:65">return <expr pos:start="322:12" pos:end="322:64"><ternary pos:start="322:12" pos:end="322:64"><condition pos:start="322:12" pos:end="322:56"><expr pos:start="322:12" pos:end="322:54"><operator pos:start="322:12" pos:end="322:12">(</operator><name pos:start="322:13" pos:end="322:37"><name pos:start="322:13" pos:end="322:13">h</name><operator pos:start="322:14" pos:end="322:15">-&gt;</operator><name pos:start="322:16" pos:end="322:20">avctx</name><operator pos:start="322:21" pos:end="322:22">-&gt;</operator><name pos:start="322:23" pos:end="322:37">err_recognition</name></name> <operator pos:start="322:39" pos:end="322:39">&amp;</operator> <name pos:start="322:41" pos:end="322:53">AV_EF_EXPLODE</name><operator pos:start="322:54" pos:end="322:54">)</operator></expr> ?</condition><then pos:start="322:58" pos:end="322:60"> <expr pos:start="322:58" pos:end="322:60"><name pos:start="322:58" pos:end="322:60">err</name></expr> </then><else pos:start="322:62" pos:end="322:64">: <expr pos:start="322:64" pos:end="322:64"><literal type="number" pos:start="322:64" pos:end="322:64">0</literal></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></while></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function>
</unit>
