<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17064.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">img_create</name><parameter_list pos:start="1:22" pos:end="1:44">(<parameter pos:start="1:23" pos:end="1:30"><decl pos:start="1:23" pos:end="1:30"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:30">argc</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:21">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">fmt</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><literal type="string" pos:start="7:23" pos:end="7:27">"raw"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">base_fmt</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:29">base_filename</name> <init pos:start="13:31" pos:end="13:36">= <expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">BlockDriver</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:23">QEMUOptionParameter</name> <modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:30">param</name> <init pos:start="17:32" pos:end="17:37">= <expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:17">options</name> <init pos:start="19:19" pos:end="19:24">= <expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:24">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:9">flags</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="79:5">for<control pos:start="25:8" pos:end="25:11">(<init pos:start="25:9" pos:end="25:9">;</init><condition pos:start="25:10" pos:end="25:10">;</condition><incr/>)</control> <block pos:start="25:13" pos:end="79:5">{<block_content pos:start="27:9" pos:end="77:9">

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:9">c</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:18">getopt</name><argument_list pos:start="27:19" pos:end="27:45">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">argc</name></expr></argument>, <argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">argv</name></expr></argument>, <argument pos:start="27:32" pos:end="27:44"><expr pos:start="27:32" pos:end="27:44"><literal type="string" pos:start="27:32" pos:end="27:44">"F:b:f:he6o:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">c</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <operator pos:start="29:18" pos:end="29:18">-</operator><literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <switch pos:start="33:9" pos:end="77:9">switch<condition pos:start="33:15" pos:end="33:17">(<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">c</name></expr>)</condition> <block pos:start="33:19" pos:end="77:9">{<block_content pos:start="35:9" pos:end="75:18">

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="char" pos:start="35:14" pos:end="35:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:19"><expr pos:start="37:13" pos:end="37:18"><call pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:16">help</name><argument_list pos:start="37:17" pos:end="37:18">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="char" pos:start="41:14" pos:end="41:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:20">base_fmt</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:29">optarg</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><literal type="char" pos:start="47:14" pos:end="47:16">'b'</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:25">base_filename</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:34">optarg</name></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="char" pos:start="53:14" pos:end="53:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">fmt</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:24">optarg</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'e'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:40"><expr pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:17">flags</name> <operator pos:start="61:19" pos:end="61:20">|=</operator> <name pos:start="61:22" pos:end="61:39">BLOCK_FLAG_ENCRYPT</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="char" pos:start="65:14" pos:end="65:16">'6'</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:40"><expr pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:17">flags</name> <operator pos:start="67:19" pos:end="67:20">|=</operator> <name pos:start="67:22" pos:end="67:39">BLOCK_FLAG_COMPAT6</name></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:16"><literal type="char" pos:start="71:14" pos:end="71:16">'o'</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:19">options</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:28">optarg</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <comment type="block" pos:start="83:5" pos:end="83:43">/* Find driver and parse its options */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:7">drv</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:31"><name pos:start="85:11" pos:end="85:26">bdrv_find_format</name><argument_list pos:start="85:27" pos:end="85:31">(<argument pos:start="85:28" pos:end="85:30"><expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:47"><if pos:start="87:5" pos:end="89:47">if <condition pos:start="87:8" pos:end="87:13">(<expr pos:start="87:9" pos:end="87:12"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:12">drv</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:47"><block_content pos:start="89:9" pos:end="89:47">

        <expr_stmt pos:start="89:9" pos:end="89:47"><expr pos:start="89:9" pos:end="89:46"><call pos:start="89:9" pos:end="89:46"><name pos:start="89:9" pos:end="89:13">error</name><argument_list pos:start="89:14" pos:end="89:46">(<argument pos:start="89:15" pos:end="89:40"><expr pos:start="89:15" pos:end="89:40"><literal type="string" pos:start="89:15" pos:end="89:40">"Unknown file format '%s'"</literal></expr></argument>, <argument pos:start="89:43" pos:end="89:45"><expr pos:start="89:43" pos:end="89:45"><name pos:start="89:43" pos:end="89:45">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:41">(<expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:15">options</name> <operator pos:start="93:17" pos:end="93:18">&amp;&amp;</operator> <operator pos:start="93:20" pos:end="93:20">!</operator><call pos:start="93:21" pos:end="93:40"><name pos:start="93:21" pos:end="93:26">strcmp</name><argument_list pos:start="93:27" pos:end="93:40">(<argument pos:start="93:28" pos:end="93:34"><expr pos:start="93:28" pos:end="93:34"><name pos:start="93:28" pos:end="93:34">options</name></expr></argument>, <argument pos:start="93:37" pos:end="93:39"><expr pos:start="93:37" pos:end="93:39"><literal type="string" pos:start="93:37" pos:end="93:39">"?"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:43" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:17">

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><call pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:25">print_option_help</name><argument_list pos:start="95:26" pos:end="95:46">(<argument pos:start="95:27" pos:end="95:45"><expr pos:start="95:27" pos:end="95:45"><name pos:start="95:27" pos:end="95:45"><name pos:start="95:27" pos:end="95:29">drv</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:45">create_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:17">return <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="117:5"><if pos:start="103:5" pos:end="113:5">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:15">options</name></expr>)</condition> <block pos:start="103:18" pos:end="113:5">{<block_content pos:start="105:9" pos:end="111:9">

        <expr_stmt pos:start="105:9" pos:end="105:77"><expr pos:start="105:9" pos:end="105:76"><name pos:start="105:9" pos:end="105:13">param</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <call pos:start="105:17" pos:end="105:76"><name pos:start="105:17" pos:end="105:39">parse_option_parameters</name><argument_list pos:start="105:40" pos:end="105:76">(<argument pos:start="105:41" pos:end="105:47"><expr pos:start="105:41" pos:end="105:47"><name pos:start="105:41" pos:end="105:47">options</name></expr></argument>, <argument pos:start="105:50" pos:end="105:68"><expr pos:start="105:50" pos:end="105:68"><name pos:start="105:50" pos:end="105:68"><name pos:start="105:50" pos:end="105:52">drv</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:68">create_options</name></name></expr></argument>, <argument pos:start="105:71" pos:end="105:75"><expr pos:start="105:71" pos:end="105:75"><name pos:start="105:71" pos:end="105:75">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:26">(<expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:17">param</name> <operator pos:start="107:19" pos:end="107:20">==</operator> <name pos:start="107:22" pos:end="107:25">NULL</name></expr>)</condition> <block pos:start="107:28" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:64">

            <expr_stmt pos:start="109:13" pos:end="109:64"><expr pos:start="109:13" pos:end="109:63"><call pos:start="109:13" pos:end="109:63"><name pos:start="109:13" pos:end="109:17">error</name><argument_list pos:start="109:18" pos:end="109:63">(<argument pos:start="109:19" pos:end="109:57"><expr pos:start="109:19" pos:end="109:57"><literal type="string" pos:start="109:19" pos:end="109:57">"Invalid options for file format '%s'."</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:62"><expr pos:start="109:60" pos:end="109:62"><name pos:start="109:60" pos:end="109:62">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="117:5">else <block pos:start="113:12" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:72">

        <expr_stmt pos:start="115:9" pos:end="115:72"><expr pos:start="115:9" pos:end="115:71"><name pos:start="115:9" pos:end="115:13">param</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:71"><name pos:start="115:17" pos:end="115:39">parse_option_parameters</name><argument_list pos:start="115:40" pos:end="115:71">(<argument pos:start="115:41" pos:end="115:42"><expr pos:start="115:41" pos:end="115:42"><literal type="string" pos:start="115:41" pos:end="115:42">""</literal></expr></argument>, <argument pos:start="115:45" pos:end="115:63"><expr pos:start="115:45" pos:end="115:63"><name pos:start="115:45" pos:end="115:63"><name pos:start="115:45" pos:end="115:47">drv</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:63">create_options</name></name></expr></argument>, <argument pos:start="115:66" pos:end="115:70"><expr pos:start="115:66" pos:end="115:70"><name pos:start="115:66" pos:end="115:70">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:26">/* Get the filename */</comment>

    <if_stmt pos:start="123:5" pos:end="125:15"><if pos:start="123:5" pos:end="125:15">if <condition pos:start="123:8" pos:end="123:23">(<expr pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:14">optind</name> <operator pos:start="123:16" pos:end="123:17">&gt;=</operator> <name pos:start="123:19" pos:end="123:22">argc</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:15"><block_content pos:start="125:9" pos:end="125:15">

        <expr_stmt pos:start="125:9" pos:end="125:15"><expr pos:start="125:9" pos:end="125:14"><call pos:start="125:9" pos:end="125:14"><name pos:start="125:9" pos:end="125:12">help</name><argument_list pos:start="125:13" pos:end="125:14">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:12">filename</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <name pos:start="127:16" pos:end="127:29"><name pos:start="127:16" pos:end="127:19">argv</name><index pos:start="127:20" pos:end="127:29">[<expr pos:start="127:21" pos:end="127:28"><name pos:start="127:21" pos:end="127:26">optind</name><operator pos:start="127:27" pos:end="127:28">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:32">/* Add size to parameters */</comment>

    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:22">(<expr pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:14">optind</name> <operator pos:start="133:16" pos:end="133:16">&lt;</operator> <name pos:start="133:18" pos:end="133:21">argc</name></expr>)</condition> <block pos:start="133:24" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:68">

        <expr_stmt pos:start="135:9" pos:end="135:68"><expr pos:start="135:9" pos:end="135:67"><call pos:start="135:9" pos:end="135:67"><name pos:start="135:9" pos:end="135:28">set_option_parameter</name><argument_list pos:start="135:29" pos:end="135:67">(<argument pos:start="135:30" pos:end="135:34"><expr pos:start="135:30" pos:end="135:34"><name pos:start="135:30" pos:end="135:34">param</name></expr></argument>, <argument pos:start="135:37" pos:end="135:50"><expr pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:50">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="135:53" pos:end="135:66"><expr pos:start="135:53" pos:end="135:66"><name pos:start="135:53" pos:end="135:66"><name pos:start="135:53" pos:end="135:56">argv</name><index pos:start="135:57" pos:end="135:66">[<expr pos:start="135:58" pos:end="135:65"><name pos:start="135:58" pos:end="135:63">optind</name><operator pos:start="135:64" pos:end="135:65">++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:45">/* Add old-style options to parameters */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:70"><expr pos:start="143:5" pos:end="143:69"><call pos:start="143:5" pos:end="143:69"><name pos:start="143:5" pos:end="143:25">add_old_style_options</name><argument_list pos:start="143:26" pos:end="143:69">(<argument pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:29">fmt</name></expr></argument>, <argument pos:start="143:32" pos:end="143:36"><expr pos:start="143:32" pos:end="143:36"><name pos:start="143:32" pos:end="143:36">param</name></expr></argument>, <argument pos:start="143:39" pos:end="143:43"><expr pos:start="143:39" pos:end="143:43"><name pos:start="143:39" pos:end="143:43">flags</name></expr></argument>, <argument pos:start="143:46" pos:end="143:58"><expr pos:start="143:46" pos:end="143:58"><name pos:start="143:46" pos:end="143:58">base_filename</name></expr></argument>, <argument pos:start="143:61" pos:end="143:68"><expr pos:start="143:61" pos:end="143:68"><name pos:start="143:61" pos:end="143:68">base_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="147:5" pos:end="147:75">// The size for the image must always be specified, with one exception:</comment>

    <comment type="line" pos:start="149:5" pos:end="149:72">// If we are using a backing file, we can obtain the size from there</comment>

    <if_stmt pos:start="151:5" pos:end="215:5"><if pos:start="151:5" pos:end="215:5">if <condition pos:start="151:8" pos:end="151:66">(<expr pos:start="151:9" pos:end="151:65"><call pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:28">get_option_parameter</name><argument_list pos:start="151:29" pos:end="151:51">(<argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><name pos:start="151:30" pos:end="151:34">param</name></expr></argument>, <argument pos:start="151:37" pos:end="151:50"><expr pos:start="151:37" pos:end="151:50"><name pos:start="151:37" pos:end="151:50">BLOCK_OPT_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="151:52" pos:end="151:53">-&gt;</operator><name pos:start="151:54" pos:end="151:60"><name pos:start="151:54" pos:end="151:58">value</name><operator pos:start="151:59" pos:end="151:59">.</operator><name pos:start="151:60" pos:end="151:60">n</name></name> <operator pos:start="151:62" pos:end="151:63">==</operator> <literal type="number" pos:start="151:65" pos:end="151:65">0</literal></expr>)</condition> <block pos:start="151:68" pos:end="215:5">{<block_content pos:start="155:9" pos:end="213:9">



        <decl_stmt pos:start="155:9" pos:end="157:64"><decl pos:start="155:9" pos:end="157:63"><type pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:27">QEMUOptionParameter</name> <modifier pos:start="155:29" pos:end="155:29">*</modifier></type><name pos:start="155:30" pos:end="155:41">backing_file</name> <init pos:start="155:43" pos:end="157:63">=

            <expr pos:start="157:13" pos:end="157:63"><call pos:start="157:13" pos:end="157:63"><name pos:start="157:13" pos:end="157:32">get_option_parameter</name><argument_list pos:start="157:33" pos:end="157:63">(<argument pos:start="157:34" pos:end="157:38"><expr pos:start="157:34" pos:end="157:38"><name pos:start="157:34" pos:end="157:38">param</name></expr></argument>, <argument pos:start="157:41" pos:end="157:62"><expr pos:start="157:41" pos:end="157:62"><name pos:start="157:41" pos:end="157:62">BLOCK_OPT_BACKING_FILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="161:63"><decl pos:start="159:9" pos:end="161:62"><type pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:27">QEMUOptionParameter</name> <modifier pos:start="159:29" pos:end="159:29">*</modifier></type><name pos:start="159:30" pos:end="159:40">backing_fmt</name> <init pos:start="159:42" pos:end="161:62">=

            <expr pos:start="161:13" pos:end="161:62"><call pos:start="161:13" pos:end="161:62"><name pos:start="161:13" pos:end="161:32">get_option_parameter</name><argument_list pos:start="161:33" pos:end="161:62">(<argument pos:start="161:34" pos:end="161:38"><expr pos:start="161:34" pos:end="161:38"><name pos:start="161:34" pos:end="161:38">param</name></expr></argument>, <argument pos:start="161:41" pos:end="161:61"><expr pos:start="161:41" pos:end="161:61"><name pos:start="161:41" pos:end="161:61">BLOCK_OPT_BACKING_FMT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="165:9" pos:end="213:9"><if pos:start="165:9" pos:end="209:9">if <condition pos:start="165:12" pos:end="165:50">(<expr pos:start="165:13" pos:end="165:49"><name pos:start="165:13" pos:end="165:24">backing_file</name> <operator pos:start="165:26" pos:end="165:27">&amp;&amp;</operator> <name pos:start="165:29" pos:end="165:49"><name pos:start="165:29" pos:end="165:40">backing_file</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:47">value</name><operator pos:start="165:48" pos:end="165:48">.</operator><name pos:start="165:49" pos:end="165:49">s</name></name></expr>)</condition> <block pos:start="165:52" pos:end="209:9">{<block_content pos:start="167:13" pos:end="207:61">

            <decl_stmt pos:start="167:13" pos:end="167:33"><decl pos:start="167:13" pos:end="167:32"><type pos:start="167:13" pos:end="167:30"><name pos:start="167:13" pos:end="167:28">BlockDriverState</name> <modifier pos:start="167:30" pos:end="167:30">*</modifier></type><name pos:start="167:31" pos:end="167:32">bs</name></decl>;</decl_stmt>

            <decl_stmt pos:start="169:13" pos:end="169:26"><decl pos:start="169:13" pos:end="169:25"><type pos:start="169:13" pos:end="169:20"><name pos:start="169:13" pos:end="169:20">uint64_t</name></type> <name pos:start="169:22" pos:end="169:25">size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:35"><decl pos:start="171:13" pos:end="171:34"><type pos:start="171:13" pos:end="171:24"><specifier pos:start="171:13" pos:end="171:17">const</specifier> <name pos:start="171:19" pos:end="171:22">char</name> <modifier pos:start="171:24" pos:end="171:24">*</modifier></type><name pos:start="171:25" pos:end="171:27">fmt</name> <init pos:start="171:29" pos:end="171:34">= <expr pos:start="171:31" pos:end="171:34"><name pos:start="171:31" pos:end="171:34">NULL</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:25"><decl pos:start="173:13" pos:end="173:24"><type pos:start="173:13" pos:end="173:16"><name pos:start="173:13" pos:end="173:16">char</name></type> <name pos:start="173:18" pos:end="173:24"><name pos:start="173:18" pos:end="173:20">buf</name><index pos:start="173:21" pos:end="173:24">[<expr pos:start="173:22" pos:end="173:23"><literal type="number" pos:start="173:22" pos:end="173:23">32</literal></expr>]</index></name></decl>;</decl_stmt>



            <if_stmt pos:start="177:13" pos:end="191:13"><if pos:start="177:13" pos:end="191:13">if <condition pos:start="177:16" pos:end="177:52">(<expr pos:start="177:17" pos:end="177:51"><name pos:start="177:17" pos:end="177:27">backing_fmt</name> <operator pos:start="177:29" pos:end="177:30">&amp;&amp;</operator> <name pos:start="177:32" pos:end="177:51"><name pos:start="177:32" pos:end="177:42">backing_fmt</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:49">value</name><operator pos:start="177:50" pos:end="177:50">.</operator><name pos:start="177:51" pos:end="177:51">s</name></name></expr>)</condition> <block pos:start="177:54" pos:end="191:13">{<block_content pos:start="179:18" pos:end="189:17">

                 <if_stmt pos:start="179:18" pos:end="189:17"><if pos:start="179:18" pos:end="183:17">if <condition pos:start="179:21" pos:end="179:60">(<expr pos:start="179:22" pos:end="179:59"><call pos:start="179:22" pos:end="179:59"><name pos:start="179:22" pos:end="179:37">bdrv_find_format</name><argument_list pos:start="179:38" pos:end="179:59">(<argument pos:start="179:39" pos:end="179:58"><expr pos:start="179:39" pos:end="179:58"><name pos:start="179:39" pos:end="179:58"><name pos:start="179:39" pos:end="179:49">backing_fmt</name><operator pos:start="179:50" pos:end="179:51">-&gt;</operator><name pos:start="179:52" pos:end="179:56">value</name><operator pos:start="179:57" pos:end="179:57">.</operator><name pos:start="179:58" pos:end="179:58">s</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:62" pos:end="183:17">{<block_content pos:start="181:22" pos:end="181:48">

                     <expr_stmt pos:start="181:22" pos:end="181:48"><expr pos:start="181:22" pos:end="181:47"><name pos:start="181:22" pos:end="181:24">fmt</name> <operator pos:start="181:26" pos:end="181:26">=</operator> <name pos:start="181:28" pos:end="181:47"><name pos:start="181:28" pos:end="181:38">backing_fmt</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:45">value</name><operator pos:start="181:46" pos:end="181:46">.</operator><name pos:start="181:47" pos:end="181:47">s</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="183:19" pos:end="189:17">else <block pos:start="183:24" pos:end="189:17">{<block_content pos:start="185:22" pos:end="187:46">

                     <expr_stmt pos:start="185:22" pos:end="187:46"><expr pos:start="185:22" pos:end="187:45"><call pos:start="185:22" pos:end="187:45"><name pos:start="185:22" pos:end="185:26">error</name><argument_list pos:start="185:27" pos:end="187:45">(<argument pos:start="185:28" pos:end="185:61"><expr pos:start="185:28" pos:end="185:61"><literal type="string" pos:start="185:28" pos:end="185:61">"Unknown backing file format '%s'"</literal></expr></argument>,

                        <argument pos:start="187:25" pos:end="187:44"><expr pos:start="187:25" pos:end="187:44"><name pos:start="187:25" pos:end="187:44"><name pos:start="187:25" pos:end="187:35">backing_fmt</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:42">value</name><operator pos:start="187:43" pos:end="187:43">.</operator><name pos:start="187:44" pos:end="187:44">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="195:13" pos:end="195:59"><expr pos:start="195:13" pos:end="195:58"><name pos:start="195:13" pos:end="195:14">bs</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <call pos:start="195:18" pos:end="195:58"><name pos:start="195:18" pos:end="195:30">bdrv_new_open</name><argument_list pos:start="195:31" pos:end="195:58">(<argument pos:start="195:32" pos:end="195:52"><expr pos:start="195:32" pos:end="195:52"><name pos:start="195:32" pos:end="195:52"><name pos:start="195:32" pos:end="195:43">backing_file</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:50">value</name><operator pos:start="195:51" pos:end="195:51">.</operator><name pos:start="195:52" pos:end="195:52">s</name></name></expr></argument>, <argument pos:start="195:55" pos:end="195:57"><expr pos:start="195:55" pos:end="195:57"><name pos:start="195:55" pos:end="195:57">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:41"><expr pos:start="197:13" pos:end="197:40"><call pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:29">bdrv_get_geometry</name><argument_list pos:start="197:30" pos:end="197:40">(<argument pos:start="197:31" pos:end="197:32"><expr pos:start="197:31" pos:end="197:32"><name pos:start="197:31" pos:end="197:32">bs</name></expr></argument>, <argument pos:start="197:35" pos:end="197:39"><expr pos:start="197:35" pos:end="197:39"><operator pos:start="197:35" pos:end="197:35">&amp;</operator><name pos:start="197:36" pos:end="197:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:24"><expr pos:start="199:13" pos:end="199:23"><name pos:start="199:13" pos:end="199:16">size</name> <operator pos:start="199:18" pos:end="199:19">*=</operator> <literal type="number" pos:start="199:21" pos:end="199:23">512</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:28"><expr pos:start="201:13" pos:end="201:27"><call pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:23">bdrv_delete</name><argument_list pos:start="201:24" pos:end="201:27">(<argument pos:start="201:25" pos:end="201:26"><expr pos:start="201:25" pos:end="201:26"><name pos:start="201:25" pos:end="201:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="205:13" pos:end="205:57"><expr pos:start="205:13" pos:end="205:56"><call pos:start="205:13" pos:end="205:56"><name pos:start="205:13" pos:end="205:20">snprintf</name><argument_list pos:start="205:21" pos:end="205:56">(<argument pos:start="205:22" pos:end="205:24"><expr pos:start="205:22" pos:end="205:24"><name pos:start="205:22" pos:end="205:24">buf</name></expr></argument>, <argument pos:start="205:27" pos:end="205:37"><expr pos:start="205:27" pos:end="205:37"><sizeof pos:start="205:27" pos:end="205:37">sizeof<argument_list pos:start="205:33" pos:end="205:37">(<argument pos:start="205:34" pos:end="205:36"><expr pos:start="205:34" pos:end="205:36"><name pos:start="205:34" pos:end="205:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="205:40" pos:end="205:49"><expr pos:start="205:40" pos:end="205:49"><literal type="string" pos:start="205:40" pos:end="205:42">"%"</literal> <name pos:start="205:44" pos:end="205:49">PRId64</name></expr></argument>, <argument pos:start="205:52" pos:end="205:55"><expr pos:start="205:52" pos:end="205:55"><name pos:start="205:52" pos:end="205:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:61"><expr pos:start="207:13" pos:end="207:60"><call pos:start="207:13" pos:end="207:60"><name pos:start="207:13" pos:end="207:32">set_option_parameter</name><argument_list pos:start="207:33" pos:end="207:60">(<argument pos:start="207:34" pos:end="207:38"><expr pos:start="207:34" pos:end="207:38"><name pos:start="207:34" pos:end="207:38">param</name></expr></argument>, <argument pos:start="207:41" pos:end="207:54"><expr pos:start="207:41" pos:end="207:54"><name pos:start="207:41" pos:end="207:54">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="207:57" pos:end="207:59"><expr pos:start="207:57" pos:end="207:59"><name pos:start="207:57" pos:end="207:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:59">

            <expr_stmt pos:start="211:13" pos:end="211:59"><expr pos:start="211:13" pos:end="211:58"><call pos:start="211:13" pos:end="211:58"><name pos:start="211:13" pos:end="211:17">error</name><argument_list pos:start="211:18" pos:end="211:58">(<argument pos:start="211:19" pos:end="211:57"><expr pos:start="211:19" pos:end="211:57"><literal type="string" pos:start="211:19" pos:end="211:57">"Image creation needs a size parameter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:54"><expr pos:start="219:5" pos:end="219:53"><call pos:start="219:5" pos:end="219:53"><name pos:start="219:5" pos:end="219:10">printf</name><argument_list pos:start="219:11" pos:end="219:53">(<argument pos:start="219:12" pos:end="219:37"><expr pos:start="219:12" pos:end="219:37"><literal type="string" pos:start="219:12" pos:end="219:37">"Formatting '%s', fmt=%s "</literal></expr></argument>, <argument pos:start="219:40" pos:end="219:47"><expr pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:47">filename</name></expr></argument>, <argument pos:start="219:50" pos:end="219:52"><expr pos:start="219:50" pos:end="219:52"><name pos:start="219:50" pos:end="219:52">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:35"><expr pos:start="221:5" pos:end="221:34"><call pos:start="221:5" pos:end="221:34"><name pos:start="221:5" pos:end="221:27">print_option_parameters</name><argument_list pos:start="221:28" pos:end="221:34">(<argument pos:start="221:29" pos:end="221:33"><expr pos:start="221:29" pos:end="221:33"><name pos:start="221:29" pos:end="221:33">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:13"><expr pos:start="223:5" pos:end="223:12"><call pos:start="223:5" pos:end="223:12"><name pos:start="223:5" pos:end="223:8">puts</name><argument_list pos:start="223:9" pos:end="223:12">(<argument pos:start="223:10" pos:end="223:11"><expr pos:start="223:10" pos:end="223:11"><literal type="string" pos:start="223:10" pos:end="223:11">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:44"><expr pos:start="227:5" pos:end="227:43"><name pos:start="227:5" pos:end="227:7">ret</name> <operator pos:start="227:9" pos:end="227:9">=</operator> <call pos:start="227:11" pos:end="227:43"><name pos:start="227:11" pos:end="227:21">bdrv_create</name><argument_list pos:start="227:22" pos:end="227:43">(<argument pos:start="227:23" pos:end="227:25"><expr pos:start="227:23" pos:end="227:25"><name pos:start="227:23" pos:end="227:25">drv</name></expr></argument>, <argument pos:start="227:28" pos:end="227:35"><expr pos:start="227:28" pos:end="227:35"><name pos:start="227:28" pos:end="227:35">filename</name></expr></argument>, <argument pos:start="227:38" pos:end="227:42"><expr pos:start="227:38" pos:end="227:42"><name pos:start="227:38" pos:end="227:42">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:34"><expr pos:start="229:5" pos:end="229:33"><call pos:start="229:5" pos:end="229:33"><name pos:start="229:5" pos:end="229:26">free_option_parameters</name><argument_list pos:start="229:27" pos:end="229:33">(<argument pos:start="229:28" pos:end="229:32"><expr pos:start="229:28" pos:end="229:32"><name pos:start="229:28" pos:end="229:32">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="233:5" pos:end="249:5"><if pos:start="233:5" pos:end="249:5">if <condition pos:start="233:8" pos:end="233:16">(<expr pos:start="233:9" pos:end="233:15"><name pos:start="233:9" pos:end="233:11">ret</name> <operator pos:start="233:13" pos:end="233:13">&lt;</operator> <literal type="number" pos:start="233:15" pos:end="233:15">0</literal></expr>)</condition> <block pos:start="233:18" pos:end="249:5">{<block_content pos:start="235:9" pos:end="247:9">

        <if_stmt pos:start="235:9" pos:end="247:9"><if pos:start="235:9" pos:end="239:9">if <condition pos:start="235:12" pos:end="235:28">(<expr pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:15">ret</name> <operator pos:start="235:17" pos:end="235:18">==</operator> <operator pos:start="235:20" pos:end="235:20">-</operator><name pos:start="235:21" pos:end="235:27">ENOTSUP</name></expr>)</condition> <block pos:start="235:30" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:93">

            <expr_stmt pos:start="237:13" pos:end="237:93"><expr pos:start="237:13" pos:end="237:92"><call pos:start="237:13" pos:end="237:92"><name pos:start="237:13" pos:end="237:17">error</name><argument_list pos:start="237:18" pos:end="237:92">(<argument pos:start="237:19" pos:end="237:86"><expr pos:start="237:19" pos:end="237:86"><literal type="string" pos:start="237:19" pos:end="237:86">"Formatting or formatting option not supported for file format '%s'"</literal></expr></argument>, <argument pos:start="237:89" pos:end="237:91"><expr pos:start="237:89" pos:end="237:91"><name pos:start="237:89" pos:end="237:91">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="239:11" pos:end="243:9">else if <condition pos:start="239:19" pos:end="239:33">(<expr pos:start="239:20" pos:end="239:32"><name pos:start="239:20" pos:end="239:22">ret</name> <operator pos:start="239:24" pos:end="239:25">==</operator> <operator pos:start="239:27" pos:end="239:27">-</operator><name pos:start="239:28" pos:end="239:32">EFBIG</name></expr>)</condition> <block pos:start="239:35" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:75">

            <expr_stmt pos:start="241:13" pos:end="241:75"><expr pos:start="241:13" pos:end="241:74"><call pos:start="241:13" pos:end="241:74"><name pos:start="241:13" pos:end="241:17">error</name><argument_list pos:start="241:18" pos:end="241:74">(<argument pos:start="241:19" pos:end="241:68"><expr pos:start="241:19" pos:end="241:68"><literal type="string" pos:start="241:19" pos:end="241:68">"The image size is too large for file format '%s'"</literal></expr></argument>, <argument pos:start="241:71" pos:end="241:73"><expr pos:start="241:71" pos:end="241:73"><name pos:start="241:71" pos:end="241:73">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="243:11" pos:end="247:9">else <block pos:start="243:16" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:44">

            <expr_stmt pos:start="245:13" pos:end="245:44"><expr pos:start="245:13" pos:end="245:43"><call pos:start="245:13" pos:end="245:43"><name pos:start="245:13" pos:end="245:17">error</name><argument_list pos:start="245:18" pos:end="245:43">(<argument pos:start="245:19" pos:end="245:42"><expr pos:start="245:19" pos:end="245:42"><literal type="string" pos:start="245:19" pos:end="245:42">"Error while formatting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
