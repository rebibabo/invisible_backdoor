<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8179.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">decode_channel_sound_unit</name><parameter_list pos:start="1:37" pos:end="5:70">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:50">ATRAC3Context</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">q</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">GetBitContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">gb</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><name pos:start="3:38" pos:end="3:48">ChannelUnit</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">snd</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:60">float</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:68">output</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:52"><decl pos:start="5:38" pos:end="5:52"><type pos:start="5:38" pos:end="5:52"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:52">channel_num</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:69"><decl pos:start="5:55" pos:end="5:69"><type pos:start="5:55" pos:end="5:69"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:69">coding_mode</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="131:1">{<block_content pos:start="9:5" pos:end="129:13">

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">band</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">ret</name></decl>, <decl pos:start="9:20" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:31">num_subbands</name></decl>, <decl pos:start="9:34" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:43">last_tonal</name></decl>, <decl pos:start="9:46" pos:end="9:54"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:46" pos:end="9:54">num_bands</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:64"><decl pos:start="11:5" pos:end="11:63"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">GainBlock</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">gain1</name> <init pos:start="11:22" pos:end="11:63">= <expr pos:start="11:24" pos:end="11:63"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:63"><name pos:start="11:25" pos:end="11:27">snd</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:39">gain_block</name><index pos:start="11:40" pos:end="11:63">[    <expr pos:start="11:45" pos:end="11:62"><name pos:start="11:45" pos:end="11:62"><name pos:start="11:45" pos:end="11:47">snd</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:62">gc_blk_switch</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">GainBlock</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:20">gain2</name> <init pos:start="13:22" pos:end="13:63">= <expr pos:start="13:24" pos:end="13:63"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:63"><name pos:start="13:25" pos:end="13:27">snd</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:39">gain_block</name><index pos:start="13:40" pos:end="13:63">[<expr pos:start="13:41" pos:end="13:62"><literal type="number" pos:start="13:41" pos:end="13:43">1</literal> <operator pos:start="13:43" pos:end="13:43">-</operator> <name pos:start="13:45" pos:end="13:62"><name pos:start="13:45" pos:end="13:47">snd</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:62">gc_blk_switch</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:56">(<expr pos:start="17:9" pos:end="17:55"><name pos:start="17:9" pos:end="17:19">coding_mode</name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:35">JOINT_STEREO</name> <operator pos:start="17:37" pos:end="17:38">&amp;&amp;</operator> <name pos:start="17:40" pos:end="17:50">channel_num</name> <operator pos:start="17:52" pos:end="17:53">==</operator> <literal type="number" pos:start="17:55" pos:end="17:55">1</literal></expr>)</condition> <block pos:start="17:58" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:9">

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:33">(<expr pos:start="19:13" pos:end="19:32"><call pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:20">get_bits</name><argument_list pos:start="19:21" pos:end="19:27">(<argument pos:start="19:22" pos:end="19:23"><expr pos:start="19:22" pos:end="19:23"><name pos:start="19:22" pos:end="19:23">gb</name></expr></argument>, <argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">2</literal></expr></argument>)</argument_list></call> <operator pos:start="19:29" pos:end="19:30">!=</operator> <literal type="number" pos:start="19:32" pos:end="19:32">3</literal></expr>)</condition> <block pos:start="19:35" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:39">

            <expr_stmt pos:start="21:13" pos:end="21:70"><expr pos:start="21:13" pos:end="21:69"><call pos:start="21:13" pos:end="21:69"><name pos:start="21:13" pos:end="21:18">av_log</name><argument_list pos:start="21:19" pos:end="21:69">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">NULL</name></expr></argument>,<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="21:38" pos:end="21:68"><expr pos:start="21:38" pos:end="21:68"><literal type="string" pos:start="21:38" pos:end="21:68">"JS mono Sound Unit id != 3.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="23:13" pos:end="23:39">return <expr pos:start="23:20" pos:end="23:38"><name pos:start="23:20" pos:end="23:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="37:5">else <block pos:start="27:12" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:36">(<expr pos:start="29:13" pos:end="29:35"><call pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:20">get_bits</name><argument_list pos:start="29:21" pos:end="29:27">(<argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">gb</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">6</literal></expr></argument>)</argument_list></call> <operator pos:start="29:29" pos:end="29:30">!=</operator> <literal type="number" pos:start="29:32" pos:end="29:35">0x28</literal></expr>)</condition> <block pos:start="29:38" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:39">

            <expr_stmt pos:start="31:13" pos:end="31:65"><expr pos:start="31:13" pos:end="31:64"><call pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:64">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">NULL</name></expr></argument>,<argument pos:start="31:25" pos:end="31:36"><expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="31:38" pos:end="31:63"><expr pos:start="31:38" pos:end="31:63"><literal type="string" pos:start="31:38" pos:end="31:63">"Sound Unit id != 0x28.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:39">return <expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:35">/* number of coded QMF bands */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:7">snd</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:20">bands_coded</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:31">get_bits</name><argument_list pos:start="43:32" pos:end="43:38">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">gb</name></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:58"><name pos:start="47:11" pos:end="47:29">decode_gain_control</name><argument_list pos:start="47:30" pos:end="47:58">(<argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><name pos:start="47:31" pos:end="47:32">gb</name></expr></argument>, <argument pos:start="47:35" pos:end="47:39"><expr pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:39">gain2</name></expr></argument>, <argument pos:start="47:42" pos:end="47:57"><expr pos:start="47:42" pos:end="47:57"><name pos:start="47:42" pos:end="47:57"><name pos:start="47:42" pos:end="47:44">snd</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:57">bands_coded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:19"><if pos:start="49:5" pos:end="51:19">if <condition pos:start="49:8" pos:end="49:12">(<expr pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">ret</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:19"><block_content pos:start="51:9" pos:end="51:19">

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:68"><expr pos:start="55:5" pos:end="57:67"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:7">snd</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:23">num_components</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="57:67"><name pos:start="55:27" pos:end="55:49">decode_tonal_components</name><argument_list pos:start="55:50" pos:end="57:67">(<argument pos:start="55:51" pos:end="55:52"><expr pos:start="55:51" pos:end="55:52"><name pos:start="55:51" pos:end="55:52">gb</name></expr></argument>, <argument pos:start="55:55" pos:end="55:69"><expr pos:start="55:55" pos:end="55:69"><name pos:start="55:55" pos:end="55:69"><name pos:start="55:55" pos:end="55:57">snd</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:69">components</name></name></expr></argument>,

                                                  <argument pos:start="57:51" pos:end="57:66"><expr pos:start="57:51" pos:end="57:66"><name pos:start="57:51" pos:end="57:66"><name pos:start="57:51" pos:end="57:53">snd</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:66">bands_coded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:35"><if pos:start="59:5" pos:end="61:35">if <condition pos:start="59:8" pos:end="59:32">(<expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">snd</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:27">num_components</name></name> <operator pos:start="59:29" pos:end="59:29">&lt;</operator> <literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:35"><block_content pos:start="61:9" pos:end="61:35">

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:18">snd</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:34">num_components</name></name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:16">num_subbands</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:53"><name pos:start="65:20" pos:end="65:34">decode_spectrum</name><argument_list pos:start="65:35" pos:end="65:53">(<argument pos:start="65:36" pos:end="65:37"><expr pos:start="65:36" pos:end="65:37"><name pos:start="65:36" pos:end="65:37">gb</name></expr></argument>, <argument pos:start="65:40" pos:end="65:52"><expr pos:start="65:40" pos:end="65:52"><name pos:start="65:40" pos:end="65:52"><name pos:start="65:40" pos:end="65:42">snd</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:52">spectrum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:58">/* Merge the decoded spectrum and tonal components. */</comment>

    <expr_stmt pos:start="71:5" pos:end="73:55"><expr pos:start="71:5" pos:end="73:54"><name pos:start="71:5" pos:end="71:14">last_tonal</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="73:54"><name pos:start="71:18" pos:end="71:37">add_tonal_components</name><argument_list pos:start="71:38" pos:end="73:54">(<argument pos:start="71:39" pos:end="71:51"><expr pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:41">snd</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:51">spectrum</name></name></expr></argument>, <argument pos:start="71:54" pos:end="71:72"><expr pos:start="71:54" pos:end="71:72"><name pos:start="71:54" pos:end="71:72"><name pos:start="71:54" pos:end="71:56">snd</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:72">num_components</name></name></expr></argument>,

                                      <argument pos:start="73:39" pos:end="73:53"><expr pos:start="73:39" pos:end="73:53"><name pos:start="73:39" pos:end="73:53"><name pos:start="73:39" pos:end="73:41">snd</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:53">components</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="79:5" pos:end="81:24">/* calculate number of used MLT/QMF bands according to the amount of coded

       spectral lines */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:13">num_bands</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:42"><name pos:start="83:18" pos:end="83:28">subband_tab</name><index pos:start="83:29" pos:end="83:42">[<expr pos:start="83:30" pos:end="83:41"><name pos:start="83:30" pos:end="83:41">num_subbands</name></expr>]</index></name> <operator pos:start="83:44" pos:end="83:44">-</operator> <literal type="number" pos:start="83:46" pos:end="83:46">1</literal><operator pos:start="83:47" pos:end="83:47">)</operator> <operator pos:start="83:49" pos:end="83:50">&gt;&gt;</operator> <literal type="number" pos:start="83:52" pos:end="83:52">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:62"><if pos:start="85:5" pos:end="87:62">if <condition pos:start="85:8" pos:end="85:24">(<expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:18">last_tonal</name> <operator pos:start="85:20" pos:end="85:21">&gt;=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:62"><block_content pos:start="87:9" pos:end="87:62">

        <expr_stmt pos:start="87:9" pos:end="87:62"><expr pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:17">num_bands</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:61"><name pos:start="87:21" pos:end="87:25">FFMAX</name><argument_list pos:start="87:26" pos:end="87:61">(<argument pos:start="87:27" pos:end="87:49"><expr pos:start="87:27" pos:end="87:49"><operator pos:start="87:27" pos:end="87:27">(</operator><name pos:start="87:28" pos:end="87:37">last_tonal</name> <operator pos:start="87:39" pos:end="87:39">+</operator> <literal type="number" pos:start="87:41" pos:end="87:43">256</literal><operator pos:start="87:44" pos:end="87:44">)</operator> <operator pos:start="87:46" pos:end="87:47">&gt;&gt;</operator> <literal type="number" pos:start="87:49" pos:end="87:49">8</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:60"><expr pos:start="87:52" pos:end="87:60"><name pos:start="87:52" pos:end="87:60">num_bands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <comment type="block" pos:start="93:5" pos:end="93:42">/* Reconstruct time domain samples. */</comment>

    <for pos:start="95:5" pos:end="119:5">for <control pos:start="95:9" pos:end="95:36">(<init pos:start="95:10" pos:end="95:18"><expr pos:start="95:10" pos:end="95:17"><name pos:start="95:10" pos:end="95:13">band</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <literal type="number" pos:start="95:17" pos:end="95:17">0</literal></expr>;</init> <condition pos:start="95:20" pos:end="95:28"><expr pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:23">band</name> <operator pos:start="95:25" pos:end="95:25">&lt;</operator> <literal type="number" pos:start="95:27" pos:end="95:27">4</literal></expr>;</condition> <incr pos:start="95:30" pos:end="95:35"><expr pos:start="95:30" pos:end="95:35"><name pos:start="95:30" pos:end="95:33">band</name><operator pos:start="95:34" pos:end="95:35">++</operator></expr></incr>)</control> <block pos:start="95:38" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:61">

        <comment type="block" pos:start="97:9" pos:end="97:57">/* Perform the IMDCT step without overlapping. */</comment>

        <if_stmt pos:start="99:9" pos:end="105:69"><if pos:start="99:9" pos:end="101:74">if <condition pos:start="99:12" pos:end="99:30">(<expr pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:16">band</name> <operator pos:start="99:18" pos:end="99:19">&lt;=</operator> <name pos:start="99:21" pos:end="99:29">num_bands</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:74"><block_content pos:start="101:13" pos:end="101:74">

            <expr_stmt pos:start="101:13" pos:end="101:74"><expr pos:start="101:13" pos:end="101:73"><call pos:start="101:13" pos:end="101:73"><name pos:start="101:13" pos:end="101:16">imlt</name><argument_list pos:start="101:17" pos:end="101:73">(<argument pos:start="101:18" pos:end="101:18"><expr pos:start="101:18" pos:end="101:18"><name pos:start="101:18" pos:end="101:18">q</name></expr></argument>, <argument pos:start="101:21" pos:end="101:46"><expr pos:start="101:21" pos:end="101:46"><operator pos:start="101:21" pos:end="101:21">&amp;</operator><name pos:start="101:22" pos:end="101:46"><name pos:start="101:22" pos:end="101:24">snd</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:34">spectrum</name><index pos:start="101:35" pos:end="101:46">[<expr pos:start="101:36" pos:end="101:45"><name pos:start="101:36" pos:end="101:39">band</name> <operator pos:start="101:41" pos:end="101:41">*</operator> <literal type="number" pos:start="101:43" pos:end="101:45">256</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:49" pos:end="101:62"><expr pos:start="101:49" pos:end="101:62"><name pos:start="101:49" pos:end="101:62"><name pos:start="101:49" pos:end="101:51">snd</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:62">imdct_buf</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:72"><expr pos:start="101:65" pos:end="101:72"><name pos:start="101:65" pos:end="101:68">band</name> <operator pos:start="101:70" pos:end="101:70">&amp;</operator> <literal type="number" pos:start="101:72" pos:end="101:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="103:9" pos:end="105:69">else<block type="pseudo" pos:start="105:13" pos:end="105:69"><block_content pos:start="105:13" pos:end="105:69">

            <expr_stmt pos:start="105:13" pos:end="105:69"><expr pos:start="105:13" pos:end="105:68"><call pos:start="105:13" pos:end="105:68"><name pos:start="105:13" pos:end="105:18">memset</name><argument_list pos:start="105:19" pos:end="105:68">(<argument pos:start="105:20" pos:end="105:33"><expr pos:start="105:20" pos:end="105:33"><name pos:start="105:20" pos:end="105:33"><name pos:start="105:20" pos:end="105:22">snd</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:33">imdct_buf</name></name></expr></argument>, <argument pos:start="105:36" pos:end="105:36"><expr pos:start="105:36" pos:end="105:36"><literal type="number" pos:start="105:36" pos:end="105:36">0</literal></expr></argument>, <argument pos:start="105:39" pos:end="105:67"><expr pos:start="105:39" pos:end="105:67"><literal type="number" pos:start="105:39" pos:end="105:41">512</literal> <operator pos:start="105:43" pos:end="105:43">*</operator> <sizeof pos:start="105:45" pos:end="105:67">sizeof<argument_list pos:start="105:51" pos:end="105:67">(<argument pos:start="105:52" pos:end="105:66"><expr pos:start="105:52" pos:end="105:66"><operator pos:start="105:52" pos:end="105:52">*</operator><name pos:start="105:53" pos:end="105:66"><name pos:start="105:53" pos:end="105:55">snd</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:66">imdct_buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="109:9" pos:end="109:47">/* gain compensation and overlapping */</comment>

        <expr_stmt pos:start="111:9" pos:end="117:61"><expr pos:start="111:9" pos:end="117:60"><call pos:start="111:9" pos:end="117:60"><name pos:start="111:9" pos:end="111:34">ff_atrac_gain_compensation</name><argument_list pos:start="111:35" pos:end="117:60">(<argument pos:start="111:36" pos:end="111:48"><expr pos:start="111:36" pos:end="111:48"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:48"><name pos:start="111:37" pos:end="111:37">q</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:48">gainc_ctx</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:64"><expr pos:start="111:51" pos:end="111:64"><name pos:start="111:51" pos:end="111:64"><name pos:start="111:51" pos:end="111:53">snd</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:64">imdct_buf</name></name></expr></argument>,

                                   <argument pos:start="113:36" pos:end="113:63"><expr pos:start="113:36" pos:end="113:63"><operator pos:start="113:36" pos:end="113:36">&amp;</operator><name pos:start="113:37" pos:end="113:63"><name pos:start="113:37" pos:end="113:39">snd</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:51">prev_frame</name><index pos:start="113:52" pos:end="113:63">[<expr pos:start="113:53" pos:end="113:62"><name pos:start="113:53" pos:end="113:56">band</name> <operator pos:start="113:58" pos:end="113:58">*</operator> <literal type="number" pos:start="113:60" pos:end="113:62">256</literal></expr>]</index></name></expr></argument>,

                                   <argument pos:start="115:36" pos:end="115:56"><expr pos:start="115:36" pos:end="115:56"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:56"><name pos:start="115:37" pos:end="115:41">gain1</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:50">g_block</name><index pos:start="115:51" pos:end="115:56">[<expr pos:start="115:52" pos:end="115:55"><name pos:start="115:52" pos:end="115:55">band</name></expr>]</index></name></expr></argument>, <argument pos:start="115:59" pos:end="115:79"><expr pos:start="115:59" pos:end="115:79"><operator pos:start="115:59" pos:end="115:59">&amp;</operator><name pos:start="115:60" pos:end="115:79"><name pos:start="115:60" pos:end="115:64">gain2</name><operator pos:start="115:65" pos:end="115:66">-&gt;</operator><name pos:start="115:67" pos:end="115:73">g_block</name><index pos:start="115:74" pos:end="115:79">[<expr pos:start="115:75" pos:end="115:78"><name pos:start="115:75" pos:end="115:78">band</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><literal type="number" pos:start="117:36" pos:end="117:38">256</literal></expr></argument>, <argument pos:start="117:41" pos:end="117:59"><expr pos:start="117:41" pos:end="117:59"><operator pos:start="117:41" pos:end="117:41">&amp;</operator><name pos:start="117:42" pos:end="117:59"><name pos:start="117:42" pos:end="117:47">output</name><index pos:start="117:48" pos:end="117:59">[<expr pos:start="117:49" pos:end="117:58"><name pos:start="117:49" pos:end="117:52">band</name> <operator pos:start="117:54" pos:end="117:54">*</operator> <literal type="number" pos:start="117:56" pos:end="117:58">256</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="123:5" pos:end="123:59">/* Swap the gain control buffers for the next frame. */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:28"><expr pos:start="125:5" pos:end="125:27"><name pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:7">snd</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:22">gc_blk_switch</name></name> <operator pos:start="125:24" pos:end="125:25">^=</operator> <literal type="number" pos:start="125:27" pos:end="125:27">1</literal></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
