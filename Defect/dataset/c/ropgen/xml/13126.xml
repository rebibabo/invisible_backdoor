<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13126.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">get_sensor_reading</name><parameter_list pos:start="1:31" pos:end="7:56">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">IPMIBmcSim</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ibs</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:38">uint8_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:43">cmd</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:65"><decl pos:start="3:46" pos:end="3:65"><type pos:start="3:46" pos:end="3:65"><name pos:start="3:46" pos:end="3:53">unsigned</name> <name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:65">cmd_len</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:43"><decl pos:start="5:32" pos:end="5:43"><type pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:38">uint8_t</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">rsp</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:66"><decl pos:start="5:46" pos:end="5:66"><type pos:start="5:46" pos:end="5:66"><name pos:start="5:46" pos:end="5:53">unsigned</name> <name pos:start="5:55" pos:end="5:57">int</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:66">rsp_len</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:55"><decl pos:start="7:32" pos:end="7:55"><type pos:start="7:32" pos:end="7:55"><name pos:start="7:32" pos:end="7:39">unsigned</name> <name pos:start="7:41" pos:end="7:43">int</name></type> <name pos:start="7:45" pos:end="7:55">max_rsp_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="41:1">{<block_content pos:start="11:5" pos:end="39:5">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">IPMISensor</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">sens</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="19:60">(<expr pos:start="17:9" pos:end="19:59"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:15"><name pos:start="17:10" pos:end="17:12">cmd</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">2</literal></expr>]</index></name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <name pos:start="17:19" pos:end="17:29">MAX_SENSORS</name><operator pos:start="17:30" pos:end="17:30">)</operator> <operator pos:start="17:32" pos:end="17:33">||</operator>

            <operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:59"><name pos:start="19:14" pos:end="19:36">IPMI_SENSOR_GET_PRESENT</name><argument_list pos:start="19:37" pos:end="19:59">(<argument pos:start="19:38" pos:end="19:58"><expr pos:start="19:38" pos:end="19:58"><name pos:start="19:38" pos:end="19:49"><name pos:start="19:38" pos:end="19:40">ibs</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:49">sensors</name></name> <operator pos:start="19:51" pos:end="19:51">+</operator> <name pos:start="19:53" pos:end="19:58"><name pos:start="19:53" pos:end="19:55">cmd</name><index pos:start="19:56" pos:end="19:58">[<expr pos:start="19:57" pos:end="19:57"><literal type="number" pos:start="19:57" pos:end="19:57">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:62" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:11">rsp</name><index pos:start="21:12" pos:end="21:14">[<expr pos:start="21:13" pos:end="21:13"><literal type="number" pos:start="21:13" pos:end="21:13">2</literal></expr>]</index></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:46">IPMI_CC_REQ_ENTRY_NOT_PRESENT</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:8">sens</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:23"><name pos:start="27:12" pos:end="27:14">ibs</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">sensors</name></name> <operator pos:start="27:25" pos:end="27:25">+</operator> <name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:29">cmd</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><call pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="29:22" pos:end="29:36">(<argument pos:start="29:23" pos:end="29:35"><expr pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:26">sens</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:35">reading</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="31:22" pos:end="31:55">(<argument pos:start="31:23" pos:end="31:54"><expr pos:start="31:23" pos:end="31:54"><call pos:start="31:23" pos:end="31:54"><name pos:start="31:23" pos:end="31:48">IPMI_SENSOR_GET_RET_STATUS</name><argument_list pos:start="31:49" pos:end="31:54">(<argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">sens</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:21">IPMI_ADD_RSP_DATA</name><argument_list pos:start="33:22" pos:end="33:42">(<argument pos:start="33:23" pos:end="33:41"><expr pos:start="33:23" pos:end="33:41"><name pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:26">sens</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:34">states</name></name> <operator pos:start="33:36" pos:end="33:36">&amp;</operator> <literal type="number" pos:start="33:38" pos:end="33:41">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:38">(<expr pos:start="35:9" pos:end="35:37"><call pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:31">IPMI_SENSOR_IS_DISCRETE</name><argument_list pos:start="35:32" pos:end="35:37">(<argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">sens</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:40" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:54">

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:25">IPMI_ADD_RSP_DATA</name><argument_list pos:start="37:26" pos:end="37:53">(<argument pos:start="37:27" pos:end="37:52"><expr pos:start="37:27" pos:end="37:52"><operator pos:start="37:27" pos:end="37:27">(</operator><name pos:start="37:28" pos:end="37:39"><name pos:start="37:28" pos:end="37:31">sens</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:39">states</name></name> <operator pos:start="37:41" pos:end="37:42">&gt;&gt;</operator> <literal type="number" pos:start="37:44" pos:end="37:44">8</literal><operator pos:start="37:45" pos:end="37:45">)</operator> <operator pos:start="37:47" pos:end="37:47">&amp;</operator> <literal type="number" pos:start="37:49" pos:end="37:52">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
