<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22901.c" pos:tabs="8"><function pos:start="1:1" pos:end="301:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">blk_connect</name><parameter_list pos:start="1:23" pos:end="1:48">(<parameter pos:start="1:24" pos:end="1:47"><decl pos:start="1:24" pos:end="1:47"><type pos:start="1:24" pos:end="1:47"><name pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:39">XenDevice</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="301:1">{<block_content pos:start="5:5" pos:end="299:13">

    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:77"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:77">= <expr pos:start="5:32" pos:end="5:77"><call pos:start="5:32" pos:end="5:77"><name pos:start="5:32" pos:end="5:43">container_of</name><argument_list pos:start="5:44" pos:end="5:77">(<argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><name pos:start="5:45" pos:end="5:50">xendev</name></expr></argument>, <argument pos:start="5:53" pos:end="5:68"><expr pos:start="5:53" pos:end="5:68">struct <name pos:start="5:60" pos:end="5:68">XenBlkDev</name></expr></argument>, <argument pos:start="5:71" pos:end="5:76"><expr pos:start="5:71" pos:end="5:76"><name pos:start="5:71" pos:end="5:76">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">pers</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">index</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">qflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">readonly</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">true</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:21">/* read-only ? */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:14">blkdev</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:28">directiosafe</name></name></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:14">qflags</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:31">BDRV_O_NOCACHE</name> <operator pos:start="17:33" pos:end="17:33">|</operator> <name pos:start="17:35" pos:end="17:51">BDRV_O_NATIVE_AIO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:14">qflags</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:32">BDRV_O_CACHE_WB</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:14">strcmp</name><argument_list pos:start="25:15" pos:end="25:33">(<argument pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:21">blkdev</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">mode</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><literal type="string" pos:start="25:30" pos:end="25:32">"w"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:36">==</operator> <literal type="number" pos:start="25:38" pos:end="25:38">0</literal></expr>)</condition> <block pos:start="25:41" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:25">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:14">qflags</name> <operator pos:start="27:16" pos:end="27:17">|=</operator> <name pos:start="27:19" pos:end="27:29">BDRV_O_RDWR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:16">readonly</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:14">blkdev</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:31">feature_discard</name></name></expr>)</condition> <block pos:start="33:34" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:31">

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:14">qflags</name> <operator pos:start="35:16" pos:end="35:17">|=</operator> <name pos:start="35:19" pos:end="35:30">BDRV_O_UNMAP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:32">/* init qemu block driver */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:9">index</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:31"><name pos:start="43:14" pos:end="43:19">blkdev</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:27">xendev</name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:31">dev</name></name> <operator pos:start="43:33" pos:end="43:33">-</operator> <literal type="number" pos:start="43:35" pos:end="43:37">202</literal> <operator pos:start="43:39" pos:end="43:39">*</operator> <literal type="number" pos:start="43:41" pos:end="43:43">256</literal><operator pos:start="43:44" pos:end="43:44">)</operator> <operator pos:start="43:46" pos:end="43:46">/</operator> <literal type="number" pos:start="43:48" pos:end="43:49">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:10">blkdev</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">dinfo</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:47"><name pos:start="45:21" pos:end="45:29">drive_get</name><argument_list pos:start="45:30" pos:end="45:47">(<argument pos:start="45:31" pos:end="45:36"><expr pos:start="45:31" pos:end="45:36"><name pos:start="45:31" pos:end="45:36">IF_XEN</name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:46"><expr pos:start="45:42" pos:end="45:46"><name pos:start="45:42" pos:end="45:46">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="119:5"><if pos:start="47:5" pos:end="95:5">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:15">blkdev</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">dinfo</name></name></expr>)</condition> <block pos:start="47:25" pos:end="95:5">{<block_content pos:start="49:9" pos:end="93:9">

        <decl_stmt pos:start="49:9" pos:end="49:32"><decl pos:start="49:9" pos:end="49:31"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:13">Error</name> <modifier pos:start="49:15" pos:end="49:15">*</modifier></type><name pos:start="49:16" pos:end="49:24">local_err</name> <init pos:start="49:26" pos:end="49:31">= <expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">NULL</name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:66">/* setup via xenbus -&gt; create new block driver instance */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:78"><expr pos:start="53:9" pos:end="53:77"><call pos:start="53:9" pos:end="53:77"><name pos:start="53:9" pos:end="53:21">xen_be_printf</name><argument_list pos:start="53:22" pos:end="53:77">(<argument pos:start="53:23" pos:end="53:37"><expr pos:start="53:23" pos:end="53:37"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:37"><name pos:start="53:24" pos:end="53:29">blkdev</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:37">xendev</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:40"><expr pos:start="53:40" pos:end="53:40"><literal type="number" pos:start="53:40" pos:end="53:40">2</literal></expr></argument>, <argument pos:start="53:43" pos:end="53:76"><expr pos:start="53:43" pos:end="53:76"><literal type="string" pos:start="53:43" pos:end="53:76">"create new bdrv (xenbus setup)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:55"><expr pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:14">blkdev</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:18">bs</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:54"><name pos:start="55:22" pos:end="55:29">bdrv_new</name><argument_list pos:start="55:30" pos:end="55:54">(<argument pos:start="55:31" pos:end="55:41"><expr pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:36">blkdev</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:41">dev</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:53"><expr pos:start="55:44" pos:end="55:53"><operator pos:start="55:44" pos:end="55:44">&amp;</operator><name pos:start="55:45" pos:end="55:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:21">local_err</name></expr>)</condition> <block pos:start="57:24" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:30">

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:18">blkdev</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:22">bs</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:29">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="87:9"><if pos:start="63:9" pos:end="87:9">if <condition pos:start="63:12" pos:end="63:23">(<expr pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:18">blkdev</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:22">bs</name></name></expr>)</condition> <block pos:start="63:25" pos:end="87:9">{<block_content pos:start="65:13" pos:end="85:13">

            <decl_stmt pos:start="65:13" pos:end="67:69"><decl pos:start="65:13" pos:end="67:68"><type pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:23">BlockDriver</name> <modifier pos:start="65:25" pos:end="65:25">*</modifier></type><name pos:start="65:26" pos:end="65:28">drv</name> <init pos:start="65:30" pos:end="67:68">= <expr pos:start="65:32" pos:end="67:68"><call pos:start="65:32" pos:end="67:68"><name pos:start="65:32" pos:end="65:59">bdrv_find_whitelisted_format</name><argument_list pos:start="65:60" pos:end="67:68">(<argument pos:start="65:61" pos:end="65:77"><expr pos:start="65:61" pos:end="65:77"><name pos:start="65:61" pos:end="65:77"><name pos:start="65:61" pos:end="65:66">blkdev</name><operator pos:start="65:67" pos:end="65:68">-&gt;</operator><name pos:start="65:69" pos:end="65:77">fileproto</name></name></expr></argument>,

                                                           <argument pos:start="67:60" pos:end="67:67"><expr pos:start="67:60" pos:end="67:67"><name pos:start="67:60" pos:end="67:67">readonly</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="69:13" pos:end="85:13"><if pos:start="69:13" pos:end="85:13">if <condition pos:start="69:16" pos:end="71:48">(<expr pos:start="69:17" pos:end="71:47"><call pos:start="69:17" pos:end="71:42"><name pos:start="69:17" pos:end="69:25">bdrv_open</name><argument_list pos:start="69:26" pos:end="71:42">(<argument pos:start="69:27" pos:end="69:37"><expr pos:start="69:27" pos:end="69:37"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:37"><name pos:start="69:28" pos:end="69:33">blkdev</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:37">bs</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:55"><expr pos:start="69:40" pos:end="69:55"><name pos:start="69:40" pos:end="69:55"><name pos:start="69:40" pos:end="69:45">blkdev</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:55">filename</name></name></expr></argument>, <argument pos:start="69:58" pos:end="69:61"><expr pos:start="69:58" pos:end="69:61"><name pos:start="69:58" pos:end="69:61">NULL</name></expr></argument>, <argument pos:start="69:64" pos:end="69:67"><expr pos:start="69:64" pos:end="69:67"><name pos:start="69:64" pos:end="69:67">NULL</name></expr></argument>, <argument pos:start="69:70" pos:end="69:75"><expr pos:start="69:70" pos:end="69:75"><name pos:start="69:70" pos:end="69:75">qflags</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">drv</name></expr></argument>, <argument pos:start="71:32" pos:end="71:41"><expr pos:start="71:32" pos:end="71:41"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:41">local_err</name></expr></argument>)</argument_list></call> <operator pos:start="71:44" pos:end="71:45">!=</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>)</condition>

            <block pos:start="73:13" pos:end="85:13">{<block_content pos:start="75:17" pos:end="83:34">

                <expr_stmt pos:start="75:17" pos:end="77:59"><expr pos:start="75:17" pos:end="77:58"><call pos:start="75:17" pos:end="77:58"><name pos:start="75:17" pos:end="75:29">xen_be_printf</name><argument_list pos:start="75:30" pos:end="77:58">(<argument pos:start="75:31" pos:end="75:45"><expr pos:start="75:31" pos:end="75:45"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:45"><name pos:start="75:32" pos:end="75:37">blkdev</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:45">xendev</name></name></expr></argument>, <argument pos:start="75:48" pos:end="75:48"><expr pos:start="75:48" pos:end="75:48"><literal type="number" pos:start="75:48" pos:end="75:48">0</literal></expr></argument>, <argument pos:start="75:51" pos:end="75:63"><expr pos:start="75:51" pos:end="75:63"><literal type="string" pos:start="75:51" pos:end="75:63">"error: %s\n"</literal></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:57"><expr pos:start="77:31" pos:end="77:57"><call pos:start="77:31" pos:end="77:57"><name pos:start="77:31" pos:end="77:46">error_get_pretty</name><argument_list pos:start="77:47" pos:end="77:57">(<argument pos:start="77:48" pos:end="77:56"><expr pos:start="77:48" pos:end="77:56"><name pos:start="77:48" pos:end="77:56">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:38"><expr pos:start="79:17" pos:end="79:37"><call pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:26">error_free</name><argument_list pos:start="79:27" pos:end="79:37">(<argument pos:start="79:28" pos:end="79:36"><expr pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:36">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:38"><call pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:26">bdrv_unref</name><argument_list pos:start="81:27" pos:end="81:38">(<argument pos:start="81:28" pos:end="81:37"><expr pos:start="81:28" pos:end="81:37"><name pos:start="81:28" pos:end="81:37"><name pos:start="81:28" pos:end="81:33">blkdev</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:37">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:34"><expr pos:start="83:17" pos:end="83:33"><name pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:22">blkdev</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:26">bs</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:33">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:24">(<expr pos:start="89:13" pos:end="89:23"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:23"><name pos:start="89:14" pos:end="89:19">blkdev</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:23">bs</name></name></expr>)</condition> <block pos:start="89:26" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:22">

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="119:5">else <block pos:start="95:12" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:29">

        <comment type="block" pos:start="97:9" pos:end="97:60">/* setup via qemu cmdline -&gt; already setup for us */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:83"><expr pos:start="99:9" pos:end="99:82"><call pos:start="99:9" pos:end="99:82"><name pos:start="99:9" pos:end="99:21">xen_be_printf</name><argument_list pos:start="99:22" pos:end="99:82">(<argument pos:start="99:23" pos:end="99:37"><expr pos:start="99:23" pos:end="99:37"><operator pos:start="99:23" pos:end="99:23">&amp;</operator><name pos:start="99:24" pos:end="99:37"><name pos:start="99:24" pos:end="99:29">blkdev</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:37">xendev</name></name></expr></argument>, <argument pos:start="99:40" pos:end="99:40"><expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">2</literal></expr></argument>, <argument pos:start="99:43" pos:end="99:81"><expr pos:start="99:43" pos:end="99:81"><literal type="string" pos:start="99:43" pos:end="99:81">"get configured bdrv (cmdline setup)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:14">blkdev</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:18">bs</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:40"><name pos:start="101:22" pos:end="101:27">blkdev</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:34">dinfo</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:40">bdrv</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:55">(<expr pos:start="103:13" pos:end="103:54"><call pos:start="103:13" pos:end="103:41"><name pos:start="103:13" pos:end="103:29">bdrv_is_read_only</name><argument_list pos:start="103:30" pos:end="103:41">(<argument pos:start="103:31" pos:end="103:40"><expr pos:start="103:31" pos:end="103:40"><name pos:start="103:31" pos:end="103:40"><name pos:start="103:31" pos:end="103:36">blkdev</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:40">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="103:43" pos:end="103:44">&amp;&amp;</operator> <operator pos:start="103:46" pos:end="103:46">!</operator><name pos:start="103:47" pos:end="103:54">readonly</name></expr>)</condition> <block pos:start="103:57" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:22">

            <expr_stmt pos:start="105:13" pos:end="105:76"><expr pos:start="105:13" pos:end="105:75"><call pos:start="105:13" pos:end="105:75"><name pos:start="105:13" pos:end="105:25">xen_be_printf</name><argument_list pos:start="105:26" pos:end="105:75">(<argument pos:start="105:27" pos:end="105:41"><expr pos:start="105:27" pos:end="105:41"><operator pos:start="105:27" pos:end="105:27">&amp;</operator><name pos:start="105:28" pos:end="105:41"><name pos:start="105:28" pos:end="105:33">blkdev</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:41">xendev</name></name></expr></argument>, <argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><literal type="number" pos:start="105:44" pos:end="105:44">0</literal></expr></argument>, <argument pos:start="105:47" pos:end="105:74"><expr pos:start="105:47" pos:end="105:74"><literal type="string" pos:start="105:47" pos:end="105:74">"Unexpected read-only drive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:30"><expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:18">blkdev</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:22">bs</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:29">NULL</name></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="113:9" pos:end="115:52">/* blkdev-&gt;bs is not create by us, we get a reference

         * so we can bdrv_unref() unconditionally */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><call pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:16">bdrv_ref</name><argument_list pos:start="117:17" pos:end="117:28">(<argument pos:start="117:18" pos:end="117:27"><expr pos:start="117:18" pos:end="117:27"><name pos:start="117:18" pos:end="117:27"><name pos:start="117:18" pos:end="117:23">blkdev</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:27">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:47"><expr pos:start="121:5" pos:end="121:46"><call pos:start="121:5" pos:end="121:46"><name pos:start="121:5" pos:end="121:26">bdrv_attach_dev_nofail</name><argument_list pos:start="121:27" pos:end="121:46">(<argument pos:start="121:28" pos:end="121:37"><expr pos:start="121:28" pos:end="121:37"><name pos:start="121:28" pos:end="121:37"><name pos:start="121:28" pos:end="121:33">blkdev</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:37">bs</name></name></expr></argument>, <argument pos:start="121:40" pos:end="121:45"><expr pos:start="121:40" pos:end="121:45"><name pos:start="121:40" pos:end="121:45">blkdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:51"><expr pos:start="123:5" pos:end="123:50"><name pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:10">blkdev</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:21">file_size</name></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <call pos:start="123:25" pos:end="123:50"><name pos:start="123:25" pos:end="123:38">bdrv_getlength</name><argument_list pos:start="123:39" pos:end="123:50">(<argument pos:start="123:40" pos:end="123:49"><expr pos:start="123:40" pos:end="123:49"><name pos:start="123:40" pos:end="123:49"><name pos:start="123:40" pos:end="123:45">blkdev</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:49">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="135:5"><if pos:start="125:5" pos:end="135:5">if <condition pos:start="125:8" pos:end="125:30">(<expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:14">blkdev</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:25">file_size</name></name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr>)</condition> <block pos:start="125:32" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:30">

        <expr_stmt pos:start="127:9" pos:end="131:63"><expr pos:start="127:9" pos:end="131:62"><call pos:start="127:9" pos:end="131:62"><name pos:start="127:9" pos:end="127:21">xen_be_printf</name><argument_list pos:start="127:22" pos:end="131:62">(<argument pos:start="127:23" pos:end="127:37"><expr pos:start="127:23" pos:end="127:37"><operator pos:start="127:23" pos:end="127:23">&amp;</operator><name pos:start="127:24" pos:end="127:37"><name pos:start="127:24" pos:end="127:29">blkdev</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:37">xendev</name></name></expr></argument>, <argument pos:start="127:40" pos:end="127:40"><expr pos:start="127:40" pos:end="127:40"><literal type="number" pos:start="127:40" pos:end="127:40">1</literal></expr></argument>, <argument pos:start="127:43" pos:end="127:78"><expr pos:start="127:43" pos:end="127:78"><literal type="string" pos:start="127:43" pos:end="127:78">"bdrv_getlength: %d (%s) | drv %s\n"</literal></expr></argument>,

                      <argument pos:start="129:23" pos:end="129:44"><expr pos:start="129:23" pos:end="129:44"><operator pos:start="129:23" pos:end="129:23">(</operator><name pos:start="129:24" pos:end="129:26">int</name><operator pos:start="129:27" pos:end="129:27">)</operator><name pos:start="129:28" pos:end="129:44"><name pos:start="129:28" pos:end="129:33">blkdev</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:44">file_size</name></name></expr></argument>, <argument pos:start="129:47" pos:end="129:74"><expr pos:start="129:47" pos:end="129:74"><call pos:start="129:47" pos:end="129:74"><name pos:start="129:47" pos:end="129:54">strerror</name><argument_list pos:start="129:55" pos:end="129:74">(<argument pos:start="129:56" pos:end="129:73"><expr pos:start="129:56" pos:end="129:73"><operator pos:start="129:56" pos:end="129:56">-</operator><name pos:start="129:57" pos:end="129:73"><name pos:start="129:57" pos:end="129:62">blkdev</name><operator pos:start="129:63" pos:end="129:64">-&gt;</operator><name pos:start="129:65" pos:end="129:73">file_size</name></name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="131:23" pos:end="131:61"><expr pos:start="131:23" pos:end="131:61"><ternary pos:start="131:23" pos:end="131:61"><condition pos:start="131:23" pos:end="131:56"><expr pos:start="131:23" pos:end="131:54"><call pos:start="131:23" pos:end="131:54"><name pos:start="131:23" pos:end="131:42">bdrv_get_format_name</name><argument_list pos:start="131:43" pos:end="131:54">(<argument pos:start="131:44" pos:end="131:53"><expr pos:start="131:44" pos:end="131:53"><name pos:start="131:44" pos:end="131:53"><name pos:start="131:44" pos:end="131:49">blkdev</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:53">bs</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then/><else pos:start="131:57" pos:end="131:61">: <expr pos:start="131:59" pos:end="131:61"><literal type="string" pos:start="131:59" pos:end="131:61">"-"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:14">blkdev</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:25">file_size</name></name> <operator pos:start="133:27" pos:end="133:27">=</operator> <literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="145:62"><expr pos:start="139:5" pos:end="145:61"><call pos:start="139:5" pos:end="145:61"><name pos:start="139:5" pos:end="139:17">xen_be_printf</name><argument_list pos:start="139:18" pos:end="145:61">(<argument pos:start="139:19" pos:end="139:24"><expr pos:start="139:19" pos:end="139:24"><name pos:start="139:19" pos:end="139:24">xendev</name></expr></argument>, <argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><literal type="number" pos:start="139:27" pos:end="139:27">1</literal></expr></argument>, <argument pos:start="139:30" pos:end="141:56"><expr pos:start="139:30" pos:end="141:56"><literal type="string" pos:start="139:30" pos:end="139:78">"type \"%s\", fileproto \"%s\", filename \"%s\","</literal>

                  <literal type="string" pos:start="141:19" pos:end="141:27">" size %"</literal> <name pos:start="141:29" pos:end="141:34">PRId64</name> <literal type="string" pos:start="141:36" pos:end="141:40">" (%"</literal> <name pos:start="141:42" pos:end="141:47">PRId64</name> <literal type="string" pos:start="141:49" pos:end="141:56">" MB)\n"</literal></expr></argument>,

                  <argument pos:start="143:19" pos:end="143:30"><expr pos:start="143:19" pos:end="143:30"><name pos:start="143:19" pos:end="143:30"><name pos:start="143:19" pos:end="143:24">blkdev</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:30">type</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:49"><expr pos:start="143:33" pos:end="143:49"><name pos:start="143:33" pos:end="143:49"><name pos:start="143:33" pos:end="143:38">blkdev</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:49">fileproto</name></name></expr></argument>, <argument pos:start="143:52" pos:end="143:67"><expr pos:start="143:52" pos:end="143:67"><name pos:start="143:52" pos:end="143:67"><name pos:start="143:52" pos:end="143:57">blkdev</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:67">filename</name></name></expr></argument>,

                  <argument pos:start="145:19" pos:end="145:35"><expr pos:start="145:19" pos:end="145:35"><name pos:start="145:19" pos:end="145:35"><name pos:start="145:19" pos:end="145:24">blkdev</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:35">file_size</name></name></expr></argument>, <argument pos:start="145:38" pos:end="145:60"><expr pos:start="145:38" pos:end="145:60"><name pos:start="145:38" pos:end="145:54"><name pos:start="145:38" pos:end="145:43">blkdev</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:54">file_size</name></name> <operator pos:start="145:56" pos:end="145:57">&gt;&gt;</operator> <literal type="number" pos:start="145:59" pos:end="145:60">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:61">/* Fill in number of sector size and number of sectors */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:76"><expr pos:start="151:5" pos:end="151:75"><call pos:start="151:5" pos:end="151:75"><name pos:start="151:5" pos:end="151:25">xenstore_write_be_int</name><argument_list pos:start="151:26" pos:end="151:75">(<argument pos:start="151:27" pos:end="151:41"><expr pos:start="151:27" pos:end="151:41"><operator pos:start="151:27" pos:end="151:27">&amp;</operator><name pos:start="151:28" pos:end="151:41"><name pos:start="151:28" pos:end="151:33">blkdev</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:41">xendev</name></name></expr></argument>, <argument pos:start="151:44" pos:end="151:56"><expr pos:start="151:44" pos:end="151:56"><literal type="string" pos:start="151:44" pos:end="151:56">"sector-size"</literal></expr></argument>, <argument pos:start="151:59" pos:end="151:74"><expr pos:start="151:59" pos:end="151:74"><name pos:start="151:59" pos:end="151:74"><name pos:start="151:59" pos:end="151:64">blkdev</name><operator pos:start="151:65" pos:end="151:66">-&gt;</operator><name pos:start="151:67" pos:end="151:74">file_blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="155:66"><expr pos:start="153:5" pos:end="155:65"><call pos:start="153:5" pos:end="155:65"><name pos:start="153:5" pos:end="153:27">xenstore_write_be_int64</name><argument_list pos:start="153:28" pos:end="155:65">(<argument pos:start="153:29" pos:end="153:43"><expr pos:start="153:29" pos:end="153:43"><operator pos:start="153:29" pos:end="153:29">&amp;</operator><name pos:start="153:30" pos:end="153:43"><name pos:start="153:30" pos:end="153:35">blkdev</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:43">xendev</name></name></expr></argument>, <argument pos:start="153:46" pos:end="153:54"><expr pos:start="153:46" pos:end="153:54"><literal type="string" pos:start="153:46" pos:end="153:54">"sectors"</literal></expr></argument>,

                            <argument pos:start="155:29" pos:end="155:64"><expr pos:start="155:29" pos:end="155:64"><name pos:start="155:29" pos:end="155:45"><name pos:start="155:29" pos:end="155:34">blkdev</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:45">file_size</name></name> <operator pos:start="155:47" pos:end="155:47">/</operator> <name pos:start="155:49" pos:end="155:64"><name pos:start="155:49" pos:end="155:54">blkdev</name><operator pos:start="155:55" pos:end="155:56">-&gt;</operator><name pos:start="155:57" pos:end="155:64">file_blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="163:5"><if pos:start="159:5" pos:end="163:5">if <condition pos:start="159:8" pos:end="159:83">(<expr pos:start="159:9" pos:end="159:82"><call pos:start="159:9" pos:end="159:76"><name pos:start="159:9" pos:end="159:28">xenstore_read_fe_int</name><argument_list pos:start="159:29" pos:end="159:76">(<argument pos:start="159:30" pos:end="159:44"><expr pos:start="159:30" pos:end="159:44"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:44"><name pos:start="159:31" pos:end="159:36">blkdev</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:44">xendev</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:56"><expr pos:start="159:47" pos:end="159:56"><literal type="string" pos:start="159:47" pos:end="159:56">"ring-ref"</literal></expr></argument>, <argument pos:start="159:59" pos:end="159:75"><expr pos:start="159:59" pos:end="159:75"><operator pos:start="159:59" pos:end="159:59">&amp;</operator><name pos:start="159:60" pos:end="159:75"><name pos:start="159:60" pos:end="159:65">blkdev</name><operator pos:start="159:66" pos:end="159:67">-&gt;</operator><name pos:start="159:68" pos:end="159:75">ring_ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="159:78" pos:end="159:79">==</operator> <operator pos:start="159:81" pos:end="159:81">-</operator><literal type="number" pos:start="159:82" pos:end="159:82">1</literal></expr>)</condition> <block pos:start="159:85" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:18">

        <return pos:start="161:9" pos:end="161:18">return <expr pos:start="161:16" pos:end="161:17"><operator pos:start="161:16" pos:end="161:16">-</operator><literal type="number" pos:start="161:17" pos:end="161:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="167:64">(<expr pos:start="165:9" pos:end="167:63"><call pos:start="165:9" pos:end="167:57"><name pos:start="165:9" pos:end="165:28">xenstore_read_fe_int</name><argument_list pos:start="165:29" pos:end="167:57">(<argument pos:start="165:30" pos:end="165:44"><expr pos:start="165:30" pos:end="165:44"><operator pos:start="165:30" pos:end="165:30">&amp;</operator><name pos:start="165:31" pos:end="165:44"><name pos:start="165:31" pos:end="165:36">blkdev</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:44">xendev</name></name></expr></argument>, <argument pos:start="165:47" pos:end="165:61"><expr pos:start="165:47" pos:end="165:61"><literal type="string" pos:start="165:47" pos:end="165:61">"event-channel"</literal></expr></argument>,

                             <argument pos:start="167:30" pos:end="167:56"><expr pos:start="167:30" pos:end="167:56"><operator pos:start="167:30" pos:end="167:30">&amp;</operator><name pos:start="167:31" pos:end="167:56"><name pos:start="167:31" pos:end="167:36">blkdev</name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:44">xendev</name><operator pos:start="167:45" pos:end="167:45">.</operator><name pos:start="167:46" pos:end="167:56">remote_port</name></name></expr></argument>)</argument_list></call> <operator pos:start="167:59" pos:end="167:60">==</operator> <operator pos:start="167:62" pos:end="167:62">-</operator><literal type="number" pos:start="167:63" pos:end="167:63">1</literal></expr>)</condition> <block pos:start="167:66" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:18">

        <return pos:start="169:9" pos:end="169:18">return <expr pos:start="169:16" pos:end="169:17"><operator pos:start="169:16" pos:end="169:16">-</operator><literal type="number" pos:start="169:17" pos:end="169:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="173:5" pos:end="181:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:75">(<expr pos:start="173:9" pos:end="173:74"><call pos:start="173:9" pos:end="173:74"><name pos:start="173:9" pos:end="173:28">xenstore_read_fe_int</name><argument_list pos:start="173:29" pos:end="173:74">(<argument pos:start="173:30" pos:end="173:44"><expr pos:start="173:30" pos:end="173:44"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:44"><name pos:start="173:31" pos:end="173:36">blkdev</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:44">xendev</name></name></expr></argument>, <argument pos:start="173:47" pos:end="173:66"><expr pos:start="173:47" pos:end="173:66"><literal type="string" pos:start="173:47" pos:end="173:66">"feature-persistent"</literal></expr></argument>, <argument pos:start="173:69" pos:end="173:73"><expr pos:start="173:69" pos:end="173:73"><operator pos:start="173:69" pos:end="173:69">&amp;</operator><name pos:start="173:70" pos:end="173:73">pers</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:77" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:43">

        <expr_stmt pos:start="175:9" pos:end="175:43"><expr pos:start="175:9" pos:end="175:42"><name pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:14">blkdev</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:34">feature_persistent</name></name> <operator pos:start="175:36" pos:end="175:36">=</operator> <name pos:start="175:38" pos:end="175:42">FALSE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="181:5">else <block pos:start="177:12" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:44">

        <expr_stmt pos:start="179:9" pos:end="179:44"><expr pos:start="179:9" pos:end="179:43"><name pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:14">blkdev</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:34">feature_persistent</name></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <operator pos:start="179:38" pos:end="179:38">!</operator><operator pos:start="179:39" pos:end="179:39">!</operator><name pos:start="179:40" pos:end="179:43">pers</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:45"><expr pos:start="185:5" pos:end="185:44"><name pos:start="185:5" pos:end="185:20"><name pos:start="185:5" pos:end="185:10">blkdev</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:20">protocol</name></name> <operator pos:start="185:22" pos:end="185:22">=</operator> <name pos:start="185:24" pos:end="185:44">BLKIF_PROTOCOL_NATIVE</name></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="201:5"><if pos:start="187:5" pos:end="201:5">if <condition pos:start="187:8" pos:end="187:32">(<expr pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:14">blkdev</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:22">xendev</name><operator pos:start="187:23" pos:end="187:23">.</operator><name pos:start="187:24" pos:end="187:31">protocol</name></name></expr>)</condition> <block pos:start="187:34" pos:end="201:5">{<block_content pos:start="189:9" pos:end="199:9">

        <if_stmt pos:start="189:9" pos:end="193:9"><if pos:start="189:9" pos:end="193:9">if <condition pos:start="189:12" pos:end="189:74">(<expr pos:start="189:13" pos:end="189:73"><call pos:start="189:13" pos:end="189:68"><name pos:start="189:13" pos:end="189:18">strcmp</name><argument_list pos:start="189:19" pos:end="189:68">(<argument pos:start="189:20" pos:end="189:42"><expr pos:start="189:20" pos:end="189:42"><name pos:start="189:20" pos:end="189:42"><name pos:start="189:20" pos:end="189:25">blkdev</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:33">xendev</name><operator pos:start="189:34" pos:end="189:34">.</operator><name pos:start="189:35" pos:end="189:42">protocol</name></name></expr></argument>, <argument pos:start="189:45" pos:end="189:67"><expr pos:start="189:45" pos:end="189:67"><name pos:start="189:45" pos:end="189:67">XEN_IO_PROTO_ABI_X86_32</name></expr></argument>)</argument_list></call> <operator pos:start="189:70" pos:end="189:71">==</operator> <literal type="number" pos:start="189:73" pos:end="189:73">0</literal></expr>)</condition> <block pos:start="189:76" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:53">

            <expr_stmt pos:start="191:13" pos:end="191:53"><expr pos:start="191:13" pos:end="191:52"><name pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:18">blkdev</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:28">protocol</name></name> <operator pos:start="191:30" pos:end="191:30">=</operator> <name pos:start="191:32" pos:end="191:52">BLKIF_PROTOCOL_X86_32</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="195:9" pos:end="199:9"><if pos:start="195:9" pos:end="199:9">if <condition pos:start="195:12" pos:end="195:74">(<expr pos:start="195:13" pos:end="195:73"><call pos:start="195:13" pos:end="195:68"><name pos:start="195:13" pos:end="195:18">strcmp</name><argument_list pos:start="195:19" pos:end="195:68">(<argument pos:start="195:20" pos:end="195:42"><expr pos:start="195:20" pos:end="195:42"><name pos:start="195:20" pos:end="195:42"><name pos:start="195:20" pos:end="195:25">blkdev</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:33">xendev</name><operator pos:start="195:34" pos:end="195:34">.</operator><name pos:start="195:35" pos:end="195:42">protocol</name></name></expr></argument>, <argument pos:start="195:45" pos:end="195:67"><expr pos:start="195:45" pos:end="195:67"><name pos:start="195:45" pos:end="195:67">XEN_IO_PROTO_ABI_X86_64</name></expr></argument>)</argument_list></call> <operator pos:start="195:70" pos:end="195:71">==</operator> <literal type="number" pos:start="195:73" pos:end="195:73">0</literal></expr>)</condition> <block pos:start="195:76" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:53">

            <expr_stmt pos:start="197:13" pos:end="197:53"><expr pos:start="197:13" pos:end="197:52"><name pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:18">blkdev</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:28">protocol</name></name> <operator pos:start="197:30" pos:end="197:30">=</operator> <name pos:start="197:32" pos:end="197:52">BLKIF_PROTOCOL_X86_64</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="211:68"><expr pos:start="205:5" pos:end="211:67"><name pos:start="205:5" pos:end="205:17"><name pos:start="205:5" pos:end="205:10">blkdev</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:17">sring</name></name> <operator pos:start="205:19" pos:end="205:19">=</operator> <call pos:start="205:21" pos:end="211:67"><name pos:start="205:21" pos:end="205:43">xc_gnttab_map_grant_ref</name><argument_list pos:start="205:44" pos:end="211:67">(<argument pos:start="205:45" pos:end="205:68"><expr pos:start="205:45" pos:end="205:68"><name pos:start="205:45" pos:end="205:68"><name pos:start="205:45" pos:end="205:50">blkdev</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:58">xendev</name><operator pos:start="205:59" pos:end="205:59">.</operator><name pos:start="205:60" pos:end="205:68">gnttabdev</name></name></expr></argument>,

                                            <argument pos:start="207:45" pos:end="207:62"><expr pos:start="207:45" pos:end="207:62"><name pos:start="207:45" pos:end="207:62"><name pos:start="207:45" pos:end="207:50">blkdev</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:58">xendev</name><operator pos:start="207:59" pos:end="207:59">.</operator><name pos:start="207:60" pos:end="207:62">dom</name></name></expr></argument>,

                                            <argument pos:start="209:45" pos:end="209:60"><expr pos:start="209:45" pos:end="209:60"><name pos:start="209:45" pos:end="209:60"><name pos:start="209:45" pos:end="209:50">blkdev</name><operator pos:start="209:51" pos:end="209:52">-&gt;</operator><name pos:start="209:53" pos:end="209:60">ring_ref</name></name></expr></argument>,

                                            <argument pos:start="211:45" pos:end="211:66"><expr pos:start="211:45" pos:end="211:66"><name pos:start="211:45" pos:end="211:53">PROT_READ</name> <operator pos:start="211:55" pos:end="211:55">|</operator> <name pos:start="211:57" pos:end="211:66">PROT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="213:5" pos:end="217:5"><if pos:start="213:5" pos:end="217:5">if <condition pos:start="213:8" pos:end="213:23">(<expr pos:start="213:9" pos:end="213:22"><operator pos:start="213:9" pos:end="213:9">!</operator><name pos:start="213:10" pos:end="213:22"><name pos:start="213:10" pos:end="213:15">blkdev</name><operator pos:start="213:16" pos:end="213:17">-&gt;</operator><name pos:start="213:18" pos:end="213:22">sring</name></name></expr>)</condition> <block pos:start="213:25" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:18">

        <return pos:start="215:9" pos:end="215:18">return <expr pos:start="215:16" pos:end="215:17"><operator pos:start="215:16" pos:end="215:16">-</operator><literal type="number" pos:start="215:17" pos:end="215:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:22"><expr pos:start="219:5" pos:end="219:21"><name pos:start="219:5" pos:end="219:19"><name pos:start="219:5" pos:end="219:10">blkdev</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:19">cnt_map</name></name><operator pos:start="219:20" pos:end="219:21">++</operator></expr>;</expr_stmt>



    <switch pos:start="223:5" pos:end="265:5">switch <condition pos:start="223:12" pos:end="223:29">(<expr pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:18">blkdev</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:28">protocol</name></name></expr>)</condition> <block pos:start="223:31" pos:end="265:5">{<block_content pos:start="225:5" pos:end="263:5">

    <case pos:start="225:5" pos:end="225:31">case <expr pos:start="225:10" pos:end="225:30"><name pos:start="225:10" pos:end="225:30">BLKIF_PROTOCOL_NATIVE</name></expr>:</case>

    <block pos:start="227:5" pos:end="235:5">{<block_content pos:start="229:9" pos:end="233:14">

        <decl_stmt pos:start="229:9" pos:end="229:52"><decl pos:start="229:9" pos:end="229:51"><type pos:start="229:9" pos:end="229:23"><name pos:start="229:9" pos:end="229:21">blkif_sring_t</name> <modifier pos:start="229:23" pos:end="229:23">*</modifier></type><name pos:start="229:24" pos:end="229:35">sring_native</name> <init pos:start="229:37" pos:end="229:51">= <expr pos:start="229:39" pos:end="229:51"><name pos:start="229:39" pos:end="229:51"><name pos:start="229:39" pos:end="229:44">blkdev</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:51">sring</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:74"><expr pos:start="231:9" pos:end="231:73"><call pos:start="231:9" pos:end="231:73"><name pos:start="231:9" pos:end="231:22">BACK_RING_INIT</name><argument_list pos:start="231:23" pos:end="231:73">(<argument pos:start="231:24" pos:end="231:44"><expr pos:start="231:24" pos:end="231:44"><operator pos:start="231:24" pos:end="231:24">&amp;</operator><name pos:start="231:25" pos:end="231:44"><name pos:start="231:25" pos:end="231:30">blkdev</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:37">rings</name><operator pos:start="231:38" pos:end="231:38">.</operator><name pos:start="231:39" pos:end="231:44">native</name></name></expr></argument>, <argument pos:start="231:47" pos:end="231:58"><expr pos:start="231:47" pos:end="231:58"><name pos:start="231:47" pos:end="231:58">sring_native</name></expr></argument>, <argument pos:start="231:61" pos:end="231:72"><expr pos:start="231:61" pos:end="231:72"><name pos:start="231:61" pos:end="231:72">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>

    </block_content>}</block>

    <case pos:start="237:5" pos:end="237:31">case <expr pos:start="237:10" pos:end="237:30"><name pos:start="237:10" pos:end="237:30">BLKIF_PROTOCOL_X86_32</name></expr>:</case>

    <block pos:start="239:5" pos:end="249:5">{<block_content pos:start="241:9" pos:end="247:14">

        <decl_stmt pos:start="241:9" pos:end="241:59"><decl pos:start="241:9" pos:end="241:58"><type pos:start="241:9" pos:end="241:30"><name pos:start="241:9" pos:end="241:28">blkif_x86_32_sring_t</name> <modifier pos:start="241:30" pos:end="241:30">*</modifier></type><name pos:start="241:31" pos:end="241:42">sring_x86_32</name> <init pos:start="241:44" pos:end="241:58">= <expr pos:start="241:46" pos:end="241:58"><name pos:start="241:46" pos:end="241:58"><name pos:start="241:46" pos:end="241:51">blkdev</name><operator pos:start="241:52" pos:end="241:53">-&gt;</operator><name pos:start="241:54" pos:end="241:58">sring</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:79"><expr pos:start="245:9" pos:end="245:78"><call pos:start="245:9" pos:end="245:78"><name pos:start="245:9" pos:end="245:22">BACK_RING_INIT</name><argument_list pos:start="245:23" pos:end="245:78">(<argument pos:start="245:24" pos:end="245:49"><expr pos:start="245:24" pos:end="245:49"><operator pos:start="245:24" pos:end="245:24">&amp;</operator><name pos:start="245:25" pos:end="245:49"><name pos:start="245:25" pos:end="245:30">blkdev</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:37">rings</name><operator pos:start="245:38" pos:end="245:38">.</operator><name pos:start="245:39" pos:end="245:49">x86_32_part</name></name></expr></argument>, <argument pos:start="245:52" pos:end="245:63"><expr pos:start="245:52" pos:end="245:63"><name pos:start="245:52" pos:end="245:63">sring_x86_32</name></expr></argument>, <argument pos:start="245:66" pos:end="245:77"><expr pos:start="245:66" pos:end="245:77"><name pos:start="245:66" pos:end="245:77">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    </block_content>}</block>

    <case pos:start="251:5" pos:end="251:31">case <expr pos:start="251:10" pos:end="251:30"><name pos:start="251:10" pos:end="251:30">BLKIF_PROTOCOL_X86_64</name></expr>:</case>

    <block pos:start="253:5" pos:end="263:5">{<block_content pos:start="255:9" pos:end="261:14">

        <decl_stmt pos:start="255:9" pos:end="255:59"><decl pos:start="255:9" pos:end="255:58"><type pos:start="255:9" pos:end="255:30"><name pos:start="255:9" pos:end="255:28">blkif_x86_64_sring_t</name> <modifier pos:start="255:30" pos:end="255:30">*</modifier></type><name pos:start="255:31" pos:end="255:42">sring_x86_64</name> <init pos:start="255:44" pos:end="255:58">= <expr pos:start="255:46" pos:end="255:58"><name pos:start="255:46" pos:end="255:58"><name pos:start="255:46" pos:end="255:51">blkdev</name><operator pos:start="255:52" pos:end="255:53">-&gt;</operator><name pos:start="255:54" pos:end="255:58">sring</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="259:9" pos:end="259:79"><expr pos:start="259:9" pos:end="259:78"><call pos:start="259:9" pos:end="259:78"><name pos:start="259:9" pos:end="259:22">BACK_RING_INIT</name><argument_list pos:start="259:23" pos:end="259:78">(<argument pos:start="259:24" pos:end="259:49"><expr pos:start="259:24" pos:end="259:49"><operator pos:start="259:24" pos:end="259:24">&amp;</operator><name pos:start="259:25" pos:end="259:49"><name pos:start="259:25" pos:end="259:30">blkdev</name><operator pos:start="259:31" pos:end="259:32">-&gt;</operator><name pos:start="259:33" pos:end="259:37">rings</name><operator pos:start="259:38" pos:end="259:38">.</operator><name pos:start="259:39" pos:end="259:49">x86_64_part</name></name></expr></argument>, <argument pos:start="259:52" pos:end="259:63"><expr pos:start="259:52" pos:end="259:63"><name pos:start="259:52" pos:end="259:63">sring_x86_64</name></expr></argument>, <argument pos:start="259:66" pos:end="259:77"><expr pos:start="259:66" pos:end="259:77"><name pos:start="259:66" pos:end="259:77">XC_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>

    </block_content>}</block>

    </block_content>}</block></switch>



    <if_stmt pos:start="269:5" pos:end="283:5"><if pos:start="269:5" pos:end="283:5">if <condition pos:start="269:8" pos:end="269:35">(<expr pos:start="269:9" pos:end="269:34"><name pos:start="269:9" pos:end="269:34"><name pos:start="269:9" pos:end="269:14">blkdev</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:34">feature_persistent</name></name></expr>)</condition> <block pos:start="269:37" pos:end="283:5">{<block_content pos:start="273:9" pos:end="281:41">

        <comment type="block" pos:start="271:9" pos:end="271:36">/* Init persistent grants */</comment>

        <expr_stmt pos:start="273:9" pos:end="273:75"><expr pos:start="273:9" pos:end="273:74"><name pos:start="273:9" pos:end="273:26"><name pos:start="273:9" pos:end="273:14">blkdev</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:26">max_grants</name></name> <operator pos:start="273:28" pos:end="273:28">=</operator> <name pos:start="273:30" pos:end="273:41">max_requests</name> <operator pos:start="273:43" pos:end="273:43">*</operator> <name pos:start="273:45" pos:end="273:74">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="279:76"><expr pos:start="275:9" pos:end="279:75"><name pos:start="275:9" pos:end="275:31"><name pos:start="275:9" pos:end="275:14">blkdev</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:31">persistent_gnts</name></name> <operator pos:start="275:33" pos:end="275:33">=</operator> <call pos:start="275:35" pos:end="279:75"><name pos:start="275:35" pos:end="275:49">g_tree_new_full</name><argument_list pos:start="275:50" pos:end="279:75">(<argument pos:start="275:51" pos:end="275:75"><expr pos:start="275:51" pos:end="275:75"><operator pos:start="275:51" pos:end="275:51">(</operator><name pos:start="275:52" pos:end="275:67">GCompareDataFunc</name><operator pos:start="275:68" pos:end="275:68">)</operator><name pos:start="275:69" pos:end="275:75">int_cmp</name></expr></argument>,

                                             <argument pos:start="277:46" pos:end="277:49"><expr pos:start="277:46" pos:end="277:49"><name pos:start="277:46" pos:end="277:49">NULL</name></expr></argument>, <argument pos:start="277:52" pos:end="277:55"><expr pos:start="277:52" pos:end="277:55"><name pos:start="277:52" pos:end="277:55">NULL</name></expr></argument>,

                                             <argument pos:start="279:46" pos:end="279:74"><expr pos:start="279:46" pos:end="279:74"><operator pos:start="279:46" pos:end="279:46">(</operator><name pos:start="279:47" pos:end="279:60">GDestroyNotify</name><operator pos:start="279:61" pos:end="279:61">)</operator><name pos:start="279:62" pos:end="279:74">destroy_grant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:41"><expr pos:start="281:9" pos:end="281:40"><name pos:start="281:9" pos:end="281:36"><name pos:start="281:9" pos:end="281:14">blkdev</name><operator pos:start="281:15" pos:end="281:16">-&gt;</operator><name pos:start="281:17" pos:end="281:36">persistent_gnt_count</name></name> <operator pos:start="281:38" pos:end="281:38">=</operator> <literal type="number" pos:start="281:40" pos:end="281:40">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:40"><expr pos:start="287:5" pos:end="287:39"><call pos:start="287:5" pos:end="287:39"><name pos:start="287:5" pos:end="287:22">xen_be_bind_evtchn</name><argument_list pos:start="287:23" pos:end="287:39">(<argument pos:start="287:24" pos:end="287:38"><expr pos:start="287:24" pos:end="287:38"><operator pos:start="287:24" pos:end="287:24">&amp;</operator><name pos:start="287:25" pos:end="287:38"><name pos:start="287:25" pos:end="287:30">blkdev</name><operator pos:start="287:31" pos:end="287:32">-&gt;</operator><name pos:start="287:33" pos:end="287:38">xendev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="297:73"><expr pos:start="291:5" pos:end="297:72"><call pos:start="291:5" pos:end="297:72"><name pos:start="291:5" pos:end="291:17">xen_be_printf</name><argument_list pos:start="291:18" pos:end="297:72">(<argument pos:start="291:19" pos:end="291:33"><expr pos:start="291:19" pos:end="291:33"><operator pos:start="291:19" pos:end="291:19">&amp;</operator><name pos:start="291:20" pos:end="291:33"><name pos:start="291:20" pos:end="291:25">blkdev</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:33">xendev</name></name></expr></argument>, <argument pos:start="291:36" pos:end="291:36"><expr pos:start="291:36" pos:end="291:36"><literal type="number" pos:start="291:36" pos:end="291:36">1</literal></expr></argument>, <argument pos:start="291:39" pos:end="293:51"><expr pos:start="291:39" pos:end="293:51"><literal type="string" pos:start="291:39" pos:end="291:67">"ok: proto %s, ring-ref %d, "</literal>

                  <literal type="string" pos:start="293:19" pos:end="293:51">"remote port %d, local port %d\n"</literal></expr></argument>,

                  <argument pos:start="295:19" pos:end="295:41"><expr pos:start="295:19" pos:end="295:41"><name pos:start="295:19" pos:end="295:41"><name pos:start="295:19" pos:end="295:24">blkdev</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:32">xendev</name><operator pos:start="295:33" pos:end="295:33">.</operator><name pos:start="295:34" pos:end="295:41">protocol</name></name></expr></argument>, <argument pos:start="295:44" pos:end="295:59"><expr pos:start="295:44" pos:end="295:59"><name pos:start="295:44" pos:end="295:59"><name pos:start="295:44" pos:end="295:49">blkdev</name><operator pos:start="295:50" pos:end="295:51">-&gt;</operator><name pos:start="295:52" pos:end="295:59">ring_ref</name></name></expr></argument>,

                  <argument pos:start="297:19" pos:end="297:44"><expr pos:start="297:19" pos:end="297:44"><name pos:start="297:19" pos:end="297:44"><name pos:start="297:19" pos:end="297:24">blkdev</name><operator pos:start="297:25" pos:end="297:26">-&gt;</operator><name pos:start="297:27" pos:end="297:32">xendev</name><operator pos:start="297:33" pos:end="297:33">.</operator><name pos:start="297:34" pos:end="297:44">remote_port</name></name></expr></argument>, <argument pos:start="297:47" pos:end="297:71"><expr pos:start="297:47" pos:end="297:71"><name pos:start="297:47" pos:end="297:71"><name pos:start="297:47" pos:end="297:52">blkdev</name><operator pos:start="297:53" pos:end="297:54">-&gt;</operator><name pos:start="297:55" pos:end="297:60">xendev</name><operator pos:start="297:61" pos:end="297:61">.</operator><name pos:start="297:62" pos:end="297:71">local_port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="299:5" pos:end="299:13">return <expr pos:start="299:12" pos:end="299:12"><literal type="number" pos:start="299:12" pos:end="299:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
