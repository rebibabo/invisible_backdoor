<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13348.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">RxFilterInfo</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:46">virtio_net_query_rxfilter</name><parameter_list pos:start="1:47" pos:end="1:66">(<parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:61">NetClientState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">nc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:16">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:42">= <expr pos:start="5:20" pos:end="5:42"><call pos:start="5:20" pos:end="5:42"><name pos:start="5:20" pos:end="5:38">qemu_get_nic_opaque</name><argument_list pos:start="5:39" pos:end="5:42">(<argument pos:start="5:40" pos:end="5:41"><expr pos:start="5:40" pos:end="5:41"><name pos:start="5:40" pos:end="5:41">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><call pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:38">VIRTIO_DEVICE</name><argument_list pos:start="7:39" pos:end="7:41">(<argument pos:start="7:40" pos:end="7:40"><expr pos:start="7:40" pos:end="7:40"><name pos:start="7:40" pos:end="7:40">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">RxFilterInfo</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">strList</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:21">str_list</name></decl>, <decl pos:start="11:24" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:29">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:8">info</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:35"><name pos:start="17:12" pos:end="17:20">g_malloc0</name><argument_list pos:start="17:21" pos:end="17:35">(<argument pos:start="17:22" pos:end="17:34"><expr pos:start="17:22" pos:end="17:34"><sizeof pos:start="17:22" pos:end="17:34">sizeof<argument_list pos:start="17:28" pos:end="17:34">(<argument pos:start="17:29" pos:end="17:33"><expr pos:start="17:29" pos:end="17:33"><operator pos:start="17:29" pos:end="17:29">*</operator><name pos:start="17:30" pos:end="17:33">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">info</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:14">name</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:35"><name pos:start="19:18" pos:end="19:25">g_strdup</name><argument_list pos:start="19:26" pos:end="19:35">(<argument pos:start="19:27" pos:end="19:34"><expr pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:28">nc</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:34">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:8">info</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:21">promiscuous</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:25">n</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:34">promisc</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">n</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">nouni</name></name></expr>)</condition> <block pos:start="25:19" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:38">

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:12">info</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:21">unicast</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:37">RX_STATE_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="33:5">else if <condition pos:start="29:15" pos:end="29:25">(<expr pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:16">n</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:24">alluni</name></name></expr>)</condition> <block pos:start="29:27" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:37">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:12">info</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:21">unicast</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:36">RX_STATE_ALL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:40">

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">info</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:21">unicast</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:39">RX_STATE_NORMAL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:9">n</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">nomulti</name></name></expr>)</condition> <block pos:start="41:21" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:40">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:12">info</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:23">multicast</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:39">RX_STATE_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="49:5">else if <condition pos:start="45:15" pos:end="45:27">(<expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:16">n</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:26">allmulti</name></name></expr>)</condition> <block pos:start="45:29" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:39">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:12">info</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:23">multicast</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:38">RX_STATE_ALL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:42">

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:12">info</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:23">multicast</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:41">RX_STATE_NORMAL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:8">info</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:27">broadcast_allowed</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:31">n</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:40">nobcast</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:59"><expr pos:start="59:5" pos:end="59:58"><name pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:8">info</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:28">multicast_overflow</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:58"><name pos:start="59:32" pos:end="59:32">n</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:43">mac_table</name><operator pos:start="59:44" pos:end="59:44">.</operator><name pos:start="59:45" pos:end="59:58">multi_overflow</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:8">info</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:26">unicast_overflow</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:54"><name pos:start="61:30" pos:end="61:30">n</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:41">mac_table</name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:54">uni_overflow</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:8">info</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:18">main_mac</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <call pos:start="65:22" pos:end="65:46"><name pos:start="65:22" pos:end="65:38">mac_strdup_printf</name><argument_list pos:start="65:39" pos:end="65:46">(<argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:40">n</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:45">mac</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:12">str_list</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:19">NULL</name></expr>;</expr_stmt>

    <for pos:start="71:5" pos:end="81:5">for <control pos:start="71:9" pos:end="71:50">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:45"><expr pos:start="71:17" pos:end="71:44"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:44"><name pos:start="71:21" pos:end="71:21">n</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:32">mac_table</name><operator pos:start="71:33" pos:end="71:33">.</operator><name pos:start="71:34" pos:end="71:44">first_multi</name></name></expr>;</condition> <incr pos:start="71:47" pos:end="71:49"><expr pos:start="71:47" pos:end="71:49"><name pos:start="71:47" pos:end="71:47">i</name><operator pos:start="71:48" pos:end="71:49">++</operator></expr></incr>)</control> <block pos:start="71:52" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:25">

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:13">entry</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:41"><name pos:start="73:17" pos:end="73:25">g_malloc0</name><argument_list pos:start="73:26" pos:end="73:41">(<argument pos:start="73:27" pos:end="73:40"><expr pos:start="73:27" pos:end="73:40"><sizeof pos:start="73:27" pos:end="73:40">sizeof<argument_list pos:start="73:33" pos:end="73:40">(<argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><operator pos:start="73:34" pos:end="73:34">*</operator><name pos:start="73:35" pos:end="73:39">entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:75"><expr pos:start="75:9" pos:end="75:74"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:13">entry</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:20">value</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:74"><name pos:start="75:24" pos:end="75:40">mac_strdup_printf</name><argument_list pos:start="75:41" pos:end="75:74">(<argument pos:start="75:42" pos:end="75:73"><expr pos:start="75:42" pos:end="75:73"><name pos:start="75:42" pos:end="75:58"><name pos:start="75:42" pos:end="75:42">n</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:53">mac_table</name><operator pos:start="75:54" pos:end="75:54">.</operator><name pos:start="75:55" pos:end="75:58">macs</name></name> <operator pos:start="75:60" pos:end="75:60">+</operator> <name pos:start="75:62" pos:end="75:62">i</name> <operator pos:start="75:64" pos:end="75:64">*</operator> <name pos:start="75:66" pos:end="75:73">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:13">entry</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">next</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:30">str_list</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:16">str_list</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:24">entry</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:8">info</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:23">unicast_table</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:34">str_list</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:20"><expr pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:12">str_list</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <name pos:start="87:16" pos:end="87:19">NULL</name></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="99:5">for <control pos:start="89:9" pos:end="89:68">(<init pos:start="89:10" pos:end="89:38"><expr pos:start="89:10" pos:end="89:37"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:37"><name pos:start="89:14" pos:end="89:14">n</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:25">mac_table</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:37">first_multi</name></name></expr>;</init> <condition pos:start="89:40" pos:end="89:63"><expr pos:start="89:40" pos:end="89:62"><name pos:start="89:40" pos:end="89:40">i</name> <operator pos:start="89:42" pos:end="89:42">&lt;</operator> <name pos:start="89:44" pos:end="89:62"><name pos:start="89:44" pos:end="89:44">n</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:55">mac_table</name><operator pos:start="89:56" pos:end="89:56">.</operator><name pos:start="89:57" pos:end="89:62">in_use</name></name></expr>;</condition> <incr pos:start="89:65" pos:end="89:67"><expr pos:start="89:65" pos:end="89:67"><name pos:start="89:65" pos:end="89:65">i</name><operator pos:start="89:66" pos:end="89:67">++</operator></expr></incr>)</control> <block pos:start="89:70" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:25">

        <expr_stmt pos:start="91:9" pos:end="91:42"><expr pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:13">entry</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:41"><name pos:start="91:17" pos:end="91:25">g_malloc0</name><argument_list pos:start="91:26" pos:end="91:41">(<argument pos:start="91:27" pos:end="91:40"><expr pos:start="91:27" pos:end="91:40"><sizeof pos:start="91:27" pos:end="91:40">sizeof<argument_list pos:start="91:33" pos:end="91:40">(<argument pos:start="91:34" pos:end="91:39"><expr pos:start="91:34" pos:end="91:39"><operator pos:start="91:34" pos:end="91:34">*</operator><name pos:start="91:35" pos:end="91:39">entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:75"><expr pos:start="93:9" pos:end="93:74"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:13">entry</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:20">value</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:74"><name pos:start="93:24" pos:end="93:40">mac_strdup_printf</name><argument_list pos:start="93:41" pos:end="93:74">(<argument pos:start="93:42" pos:end="93:73"><expr pos:start="93:42" pos:end="93:73"><name pos:start="93:42" pos:end="93:58"><name pos:start="93:42" pos:end="93:42">n</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:53">mac_table</name><operator pos:start="93:54" pos:end="93:54">.</operator><name pos:start="93:55" pos:end="93:58">macs</name></name> <operator pos:start="93:60" pos:end="93:60">+</operator> <name pos:start="93:62" pos:end="93:62">i</name> <operator pos:start="93:64" pos:end="93:64">*</operator> <name pos:start="93:66" pos:end="93:73">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:13">entry</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:19">next</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:30">str_list</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:25"><expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:16">str_list</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:24">entry</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="101:5" pos:end="101:37"><expr pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:8">info</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:25">multicast_table</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:36">str_list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:41"><expr pos:start="103:5" pos:end="103:40"><name pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:8">info</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:20">vlan_table</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="103:40"><name pos:start="103:24" pos:end="103:37">get_vlan_table</name><argument_list pos:start="103:38" pos:end="103:40">(<argument pos:start="103:39" pos:end="103:39"><expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="119:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:64">(<expr pos:start="107:9" pos:end="107:63"><operator pos:start="107:9" pos:end="107:9">!</operator><operator pos:start="107:10" pos:end="107:10">(</operator><operator pos:start="107:11" pos:end="107:11">(</operator><literal type="number" pos:start="107:12" pos:end="107:12">1</literal> <operator pos:start="107:14" pos:end="107:15">&lt;&lt;</operator> <name pos:start="107:17" pos:end="107:38">VIRTIO_NET_F_CTRL_VLAN</name><operator pos:start="107:39" pos:end="107:39">)</operator> <operator pos:start="107:41" pos:end="107:41">&amp;</operator> <name pos:start="107:43" pos:end="107:62"><name pos:start="107:43" pos:end="107:46">vdev</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:62">guest_features</name></name><operator pos:start="107:63" pos:end="107:63">)</operator></expr>)</condition> <block pos:start="107:66" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:34">

        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:12">info</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:18">vlan</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:33">RX_STATE_ALL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="111:7" pos:end="115:5">else if <condition pos:start="111:15" pos:end="111:33">(<expr pos:start="111:16" pos:end="111:32"><operator pos:start="111:16" pos:end="111:16">!</operator><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:20">info</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:32">vlan_table</name></name></expr>)</condition> <block pos:start="111:35" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:35">

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:12">info</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:18">vlan</name></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:34">RX_STATE_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="119:5">else <block pos:start="115:12" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:37">

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:12">info</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:18">vlan</name></name> <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:36">RX_STATE_NORMAL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:47">/* enable event notification after query */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:36"><expr pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:31"><name pos:start="125:5" pos:end="125:6">nc</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:31">rxfilter_notify_enabled</name></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <literal type="number" pos:start="125:35" pos:end="125:35">1</literal></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:16">return <expr pos:start="129:12" pos:end="129:15"><name pos:start="129:12" pos:end="129:15">info</name></expr>;</return>

</block_content>}</block></function>
</unit>
