<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5377.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">spr_read_decr</name> <parameter_list pos:start="1:27" pos:end="1:65">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:39">DisasContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:54">gprn</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:64">sprn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:18">use_icount</name></expr>)</condition> <block pos:start="5:21" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:23">

        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><call pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:20">gen_io_start</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><call pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:24">gen_helper_load_decr</name><argument_list pos:start="11:25" pos:end="11:48">(<argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:32">cpu_gpr</name><index pos:start="11:33" pos:end="11:38">[<expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">gprn</name></expr>]</index></name></expr></argument>, <argument pos:start="11:41" pos:end="11:47"><expr pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:18">use_icount</name></expr>)</condition> <block pos:start="13:21" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:32">

        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><call pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">gen_io_end</name><argument_list pos:start="15:19" pos:end="15:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:26">gen_stop_exception</name><argument_list pos:start="17:27" pos:end="17:31">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
