<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14125.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">init_proc_970GX</name> <parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="84:0">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">gen_spr_ne_601</name><argument_list pos:start="5:19" pos:end="5:23">(<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:15">gen_spr_7xx</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:19">/* Time base */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11">gen_tbl</name><argument_list pos:start="11:12" pos:end="11:16">(<argument pos:start="11:13" pos:end="11:15"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:43">/* Hardware implementation registers */</comment>

    <comment type="block" pos:start="15:5" pos:end="15:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="17:5" pos:end="23:29"><expr pos:start="17:5" pos:end="23:28"><call pos:start="17:5" pos:end="23:28"><name pos:start="17:5" pos:end="17:16">spr_register</name><argument_list pos:start="17:17" pos:end="23:28">(<argument pos:start="17:18" pos:end="17:20"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:20">env</name></expr></argument>, <argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30">SPR_HID0</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><literal type="string" pos:start="17:33" pos:end="17:38">"HID0"</literal></expr></argument>,

                 <argument pos:start="19:18" pos:end="19:29"><expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="21:34"><expr pos:start="21:18" pos:end="21:34"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:34">spr_read_generic</name></expr></argument>, <argument pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:52"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:52">spr_write_clear</name></expr></argument>,

                 <argument pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:27"><literal type="number" pos:start="23:18" pos:end="23:27">0x60000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:29"><expr pos:start="27:5" pos:end="33:28"><call pos:start="27:5" pos:end="33:28"><name pos:start="27:5" pos:end="27:16">spr_register</name><argument_list pos:start="27:17" pos:end="33:28">(<argument pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">env</name></expr></argument>, <argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30">SPR_HID1</name></expr></argument>, <argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><literal type="string" pos:start="27:33" pos:end="27:38">"HID1"</literal></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:34">spr_read_generic</name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:27"><expr pos:start="33:18" pos:end="33:27"><literal type="number" pos:start="33:18" pos:end="33:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="37:5" pos:end="43:29"><expr pos:start="37:5" pos:end="43:28"><call pos:start="37:5" pos:end="43:28"><name pos:start="37:5" pos:end="37:16">spr_register</name><argument_list pos:start="37:17" pos:end="43:28">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">env</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">SPR_750_HID2</name></expr></argument>, <argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><literal type="string" pos:start="37:37" pos:end="37:42">"HID2"</literal></expr></argument>,

                 <argument pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:29"><name pos:start="39:18" pos:end="39:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="39:32" pos:end="39:43"><expr pos:start="39:32" pos:end="39:43"><name pos:start="39:32" pos:end="39:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:34"><expr pos:start="41:18" pos:end="41:34"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:34">spr_read_generic</name></expr></argument>, <argument pos:start="41:37" pos:end="41:54"><expr pos:start="41:37" pos:end="41:54"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:27"><literal type="number" pos:start="43:18" pos:end="43:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="47:5" pos:end="53:29"><expr pos:start="47:5" pos:end="53:28"><call pos:start="47:5" pos:end="53:28"><name pos:start="47:5" pos:end="47:16">spr_register</name><argument_list pos:start="47:17" pos:end="53:28">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">env</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">SPR_970_HID5</name></expr></argument>, <argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><literal type="string" pos:start="47:37" pos:end="47:42">"HID5"</literal></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:29"><expr pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:34"><expr pos:start="51:18" pos:end="51:34"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:34">spr_read_generic</name></expr></argument>, <argument pos:start="51:37" pos:end="51:54"><expr pos:start="51:37" pos:end="51:54"><operator pos:start="51:37" pos:end="51:37">&amp;</operator><name pos:start="51:38" pos:end="51:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:27"><expr pos:start="53:18" pos:end="53:27"><literal type="number" pos:start="53:18" pos:end="53:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:27">/* Memory management */</comment>

    <comment type="block" pos:start="57:5" pos:end="57:26">/* XXX: not correct */</comment>

    <expr_stmt pos:start="59:5" pos:end="66:0"><expr pos:start="59:5" pos:end="59:21"><call pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:16">gen_low_BATs</name><argument_list pos:start="59:17" pos:end="59:21">(<argument pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="61:1" pos:end="61:5">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:5"><literal type="number" pos:start="61:5" pos:end="61:5">0</literal></expr></cpp:if> <comment type="line" pos:start="61:7" pos:end="61:13">// TODO</comment>

    env-&gt;slb_nr = 32;

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><call pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:17">init_excp_970</name><argument_list pos:start="67:18" pos:end="67:22">(<argument pos:start="67:19" pos:end="67:21"><expr pos:start="67:19" pos:end="67:21"><name pos:start="67:19" pos:end="67:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:25">dcache_line_size</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:31">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:25">icache_line_size</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:31">128</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="75:5" pos:end="78:0"><expr pos:start="75:5" pos:end="75:24"><call pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:19">ppc970_irq_init</name><argument_list pos:start="75:20" pos:end="75:24">(<argument pos:start="75:21" pos:end="75:23"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="77:1" pos:end="77:30">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:30"><operator pos:start="77:5" pos:end="77:5">!</operator><call pos:start="77:6" pos:end="77:30"><name pos:start="77:6" pos:end="77:12">defined</name><argument_list pos:start="77:13" pos:end="77:30">(<argument pos:start="77:14" pos:end="77:29"><expr pos:start="77:14" pos:end="77:29"><name pos:start="77:14" pos:end="77:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="79:5" pos:end="79:31">/* Hardware reset vector */</comment>

    <expr_stmt pos:start="81:5" pos:end="84:0"><expr pos:start="81:5" pos:end="81:46"><name pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:7">env</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:22">hreset_vector</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:46">0x0000000000000100ULL</literal></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
