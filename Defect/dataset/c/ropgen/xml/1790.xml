<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1790.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">assert_file_overwrite</name><parameter_list pos:start="1:34" pos:end="1:55">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:46"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:54">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:22">file_overwrite</name> <operator pos:start="5:24" pos:end="5:25">&amp;&amp;</operator> <name pos:start="5:27" pos:end="5:35">file_skip</name></expr>)</condition> <block pos:start="5:38" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:24">

        <expr_stmt pos:start="7:9" pos:end="7:70"><expr pos:start="7:9" pos:end="7:69"><call pos:start="7:9" pos:end="7:69"><name pos:start="7:9" pos:end="7:15">fprintf</name><argument_list pos:start="7:16" pos:end="7:69">(<argument pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:22"><name pos:start="7:17" pos:end="7:22">stderr</name></expr></argument>, <argument pos:start="7:25" pos:end="7:68"><expr pos:start="7:25" pos:end="7:68"><literal type="string" pos:start="7:25" pos:end="7:68">"Error, both -y and -n supplied. Exiting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:24"><expr pos:start="9:9" pos:end="9:23"><call pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:20">exit_program</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="49:5"><if pos:start="15:5" pos:end="49:5">if <condition pos:start="15:8" pos:end="19:47">(<expr pos:start="15:9" pos:end="19:46"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:23">file_overwrite</name> <operator pos:start="15:25" pos:end="15:26">&amp;&amp;</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><call pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:15">strchr</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">filename</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="char" pos:start="17:27" pos:end="17:29">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="17:32" pos:end="17:33">==</operator> <name pos:start="17:35" pos:end="17:38">NULL</name> <operator pos:start="17:40" pos:end="17:41">||</operator> <name pos:start="17:43" pos:end="17:53"><name pos:start="17:43" pos:end="17:50">filename</name><index pos:start="17:51" pos:end="17:53">[<expr pos:start="17:52" pos:end="17:52"><literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>]</index></name> <operator pos:start="17:55" pos:end="17:56">==</operator> <literal type="char" pos:start="17:58" pos:end="17:60">':'</literal> <operator pos:start="17:62" pos:end="17:63">||</operator>

         <call pos:start="19:10" pos:end="19:45"><name pos:start="19:10" pos:end="19:20">av_strstart</name><argument_list pos:start="19:21" pos:end="19:45">(<argument pos:start="19:22" pos:end="19:29"><expr pos:start="19:22" pos:end="19:29"><name pos:start="19:22" pos:end="19:29">filename</name></expr></argument>, <argument pos:start="19:32" pos:end="19:38"><expr pos:start="19:32" pos:end="19:38"><literal type="string" pos:start="19:32" pos:end="19:38">"file:"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">NULL</name></expr></argument>)</argument_list></call><operator pos:start="19:46" pos:end="19:46">)</operator></expr>)</condition> <block pos:start="19:49" pos:end="49:5">{<block_content pos:start="21:9" pos:end="47:9">

        <if_stmt pos:start="21:9" pos:end="47:9"><if pos:start="21:9" pos:end="47:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:22">avio_check</name><argument_list pos:start="21:23" pos:end="21:35">(<argument pos:start="21:24" pos:end="21:31"><expr pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:31">filename</name></expr></argument>, <argument pos:start="21:34" pos:end="21:34"><expr pos:start="21:34" pos:end="21:34"><literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="21:37" pos:end="21:38">==</operator> <literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr>)</condition> <block pos:start="21:43" pos:end="47:9">{<block_content pos:start="23:13" pos:end="45:13">

            <if_stmt pos:start="23:13" pos:end="45:13"><if pos:start="23:13" pos:end="37:13">if <condition pos:start="23:16" pos:end="23:43">(<expr pos:start="23:17" pos:end="23:42"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:28">using_stdin</name> <operator pos:start="23:30" pos:end="23:31">&amp;&amp;</operator> <operator pos:start="23:33" pos:end="23:33">!</operator><name pos:start="23:34" pos:end="23:42">file_skip</name></expr>)</condition> <block pos:start="23:45" pos:end="37:13">{<block_content pos:start="25:17" pos:end="35:17">

                <expr_stmt pos:start="25:17" pos:end="25:89"><expr pos:start="25:17" pos:end="25:88"><call pos:start="25:17" pos:end="25:88"><name pos:start="25:17" pos:end="25:23">fprintf</name><argument_list pos:start="25:24" pos:end="25:88">(<argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:30">stderr</name></expr></argument>,<argument pos:start="25:32" pos:end="25:77"><expr pos:start="25:32" pos:end="25:77"><literal type="string" pos:start="25:32" pos:end="25:77">"File '%s' already exists. Overwrite ? [y/N] "</literal></expr></argument>, <argument pos:start="25:80" pos:end="25:87"><expr pos:start="25:80" pos:end="25:87"><name pos:start="25:80" pos:end="25:87">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:30"><call pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:22">fflush</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="29:17" pos:end="35:17"><if pos:start="29:17" pos:end="35:17">if <condition pos:start="29:20" pos:end="29:34">(<expr pos:start="29:21" pos:end="29:33"><operator pos:start="29:21" pos:end="29:21">!</operator><call pos:start="29:22" pos:end="29:33"><name pos:start="29:22" pos:end="29:31">read_yesno</name><argument_list pos:start="29:32" pos:end="29:33">()</argument_list></call></expr>)</condition> <block pos:start="29:36" pos:end="35:17">{<block_content pos:start="31:21" pos:end="33:36">

                    <expr_stmt pos:start="31:21" pos:end="31:67"><expr pos:start="31:21" pos:end="31:66"><call pos:start="31:21" pos:end="31:66"><name pos:start="31:21" pos:end="31:27">fprintf</name><argument_list pos:start="31:28" pos:end="31:66">(<argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">stderr</name></expr></argument>, <argument pos:start="31:37" pos:end="31:65"><expr pos:start="31:37" pos:end="31:65"><literal type="string" pos:start="31:37" pos:end="31:65">"Not overwriting - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="33:21" pos:end="33:36"><expr pos:start="33:21" pos:end="33:35"><call pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:32">exit_program</name><argument_list pos:start="33:33" pos:end="33:35">(<argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if>

            <else pos:start="39:13" pos:end="45:13">else <block pos:start="39:18" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:32">

                <expr_stmt pos:start="41:17" pos:end="41:81"><expr pos:start="41:17" pos:end="41:80"><call pos:start="41:17" pos:end="41:80"><name pos:start="41:17" pos:end="41:23">fprintf</name><argument_list pos:start="41:24" pos:end="41:80">(<argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:30">stderr</name></expr></argument>,<argument pos:start="41:32" pos:end="41:69"><expr pos:start="41:32" pos:end="41:69"><literal type="string" pos:start="41:32" pos:end="41:69">"File '%s' already exists. Exiting.\n"</literal></expr></argument>, <argument pos:start="41:72" pos:end="41:79"><expr pos:start="41:72" pos:end="41:79"><name pos:start="41:72" pos:end="41:79">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:32"><expr pos:start="43:17" pos:end="43:31"><call pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:28">exit_program</name><argument_list pos:start="43:29" pos:end="43:31">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
