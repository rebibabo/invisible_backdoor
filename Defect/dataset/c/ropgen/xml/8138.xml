<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8138.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">dma_mem_writel</name><parameter_list pos:start="1:27" pos:end="1:79">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:74">uint32_t</name></type> <name pos:start="1:76" pos:end="1:78">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:28">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">DMAState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">saddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:9">saddr</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:17">addr</name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <name pos:start="11:21" pos:end="11:28">DMA_MASK</name><operator pos:start="11:29" pos:end="11:29">)</operator> <operator pos:start="11:31" pos:end="11:32">&gt;&gt;</operator> <literal type="number" pos:start="11:34" pos:end="11:34">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:36"><expr pos:start="13:5" pos:end="15:35"><call pos:start="13:5" pos:end="15:35"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="15:35">(<argument pos:start="13:13" pos:end="13:67"><expr pos:start="13:13" pos:end="13:67"><literal type="string" pos:start="13:13" pos:end="13:27">"write dmareg "</literal> <name pos:start="13:29" pos:end="13:42">TARGET_FMT_plx</name> <literal type="string" pos:start="13:44" pos:end="13:67">": 0x%8.8x -&gt; 0x%8.8x\n"</literal></expr></argument>, <argument pos:start="13:70" pos:end="13:73"><expr pos:start="13:70" pos:end="13:73"><name pos:start="13:70" pos:end="13:73">addr</name></expr></argument>,

            <argument pos:start="15:13" pos:end="15:29"><expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">dmaregs</name><index pos:start="15:23" pos:end="15:29">[<expr pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:28">saddr</name></expr>]</index></name></expr></argument>, <argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="73:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">saddr</name></expr>)</condition> <block pos:start="17:20" pos:end="73:5">{<block_content pos:start="19:5" pos:end="71:14">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">0</literal></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="41:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:29">(<expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:15">val</name> <operator pos:start="21:17" pos:end="21:17">&amp;</operator> <name pos:start="21:19" pos:end="21:28">DMA_INTREN</name></expr>)</condition> <block pos:start="21:31" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:13">

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:31">(<expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:19">val</name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <name pos:start="23:23" pos:end="23:30">DMA_INTR</name></expr>)</condition> <block pos:start="23:33" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:39">

                <expr_stmt pos:start="25:17" pos:end="25:39"><expr pos:start="25:17" pos:end="25:38"><call pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:23">DPRINTF</name><argument_list pos:start="25:24" pos:end="25:38">(<argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><literal type="string" pos:start="25:25" pos:end="25:37">"Raise IRQ\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:39"><expr pos:start="27:17" pos:end="27:38"><call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:30">qemu_irq_raise</name><argument_list pos:start="27:31" pos:end="27:38">(<argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="41:9">else <block pos:start="31:16" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:13">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:56">(<expr pos:start="33:17" pos:end="33:55"><name pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">dmaregs</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>]</index></name> <operator pos:start="33:31" pos:end="33:31">&amp;</operator> <operator pos:start="33:33" pos:end="33:33">(</operator><name pos:start="33:34" pos:end="33:41">DMA_INTR</name> <operator pos:start="33:43" pos:end="33:43">|</operator> <name pos:start="33:45" pos:end="33:54">DMA_INTREN</name><operator pos:start="33:55" pos:end="33:55">)</operator></expr>)</condition> <block pos:start="33:58" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:39">

                <expr_stmt pos:start="35:17" pos:end="35:39"><expr pos:start="35:17" pos:end="35:38"><call pos:start="35:17" pos:end="35:38"><name pos:start="35:17" pos:end="35:23">DPRINTF</name><argument_list pos:start="35:24" pos:end="35:38">(<argument pos:start="35:25" pos:end="35:37"><expr pos:start="35:25" pos:end="35:37"><literal type="string" pos:start="35:25" pos:end="35:37">"Lower IRQ\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><call pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:30">qemu_irq_lower</name><argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:37">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="43:9" pos:end="55:33"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:15">val</name> <operator pos:start="43:17" pos:end="43:17">&amp;</operator> <name pos:start="43:19" pos:end="43:27">DMA_RESET</name></expr>)</condition> <block pos:start="43:30" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:41">

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><call pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:26">qemu_irq_raise</name><argument_list pos:start="45:27" pos:end="45:40">(<argument pos:start="45:28" pos:end="45:39"><expr pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:39">dev_reset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><call pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:26">qemu_irq_lower</name><argument_list pos:start="47:27" pos:end="47:40">(<argument pos:start="47:28" pos:end="47:39"><expr pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:39">dev_reset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="49:11" pos:end="53:9">else if <condition pos:start="49:19" pos:end="49:40">(<expr pos:start="49:20" pos:end="49:39"><name pos:start="49:20" pos:end="49:22">val</name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <name pos:start="49:26" pos:end="49:39">DMA_DRAIN_FIFO</name></expr>)</condition> <block pos:start="49:42" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:35">

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:15">val</name> <operator pos:start="51:17" pos:end="51:18">&amp;=</operator> <operator pos:start="51:20" pos:end="51:20">~</operator><name pos:start="51:21" pos:end="51:34">DMA_DRAIN_FIFO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="55:33">else if <condition pos:start="53:19" pos:end="53:28">(<expr pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:22">val</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:33"><block_content pos:start="55:13" pos:end="55:33">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:15">val</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:32">DMA_DRAIN_FIFO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:11">val</name> <operator pos:start="57:13" pos:end="57:14">&amp;=</operator> <literal type="number" pos:start="57:16" pos:end="57:25">0x0fffffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:11">val</name> <operator pos:start="59:13" pos:end="59:14">|=</operator> <name pos:start="59:16" pos:end="59:22">DMA_VER</name></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">1</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:18">dmaregs</name><index pos:start="65:19" pos:end="65:21">[<expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>]</index></name> <operator pos:start="65:23" pos:end="65:24">|=</operator> <name pos:start="65:26" pos:end="65:35">DMA_LOADED</name></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <default pos:start="69:5" pos:end="69:12">default:</default>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:14">dmaregs</name><index pos:start="75:15" pos:end="75:21">[<expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">saddr</name></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:27">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
