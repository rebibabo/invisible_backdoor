<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14931.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_open2</name><parameter_list pos:start="1:23" pos:end="3:48">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:50">V9fsPath</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">dir_path</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:78"><decl pos:start="1:63" pos:end="1:78"><type pos:start="1:63" pos:end="1:78"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">name</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:32"><decl pos:start="3:24" pos:end="3:32"><type pos:start="3:24" pos:end="3:32"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:32">flags</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:40">FsCred</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">credp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name> <init pos:start="9:12" pos:end="9:15">= <expr pos:start="9:14" pos:end="9:15"><operator pos:start="9:14" pos:end="9:14">-</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name> <init pos:start="11:13" pos:end="11:16">= <expr pos:start="11:15" pos:end="11:16"><operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">serrno</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">V9fsString</name></type> <name pos:start="15:16" pos:end="15:23">fullname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:15">buffer</name><index pos:start="17:16" pos:end="17:25">[<expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:20">v9fs_string_init</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:30"><expr pos:start="21:22" pos:end="21:30"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><call pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:23">v9fs_string_sprintf</name><argument_list pos:start="23:24" pos:end="23:65">(<argument pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:33"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:33">fullname</name></expr></argument>, <argument pos:start="23:36" pos:end="23:42"><expr pos:start="23:36" pos:end="23:42"><literal type="string" pos:start="23:36" pos:end="23:42">"%s/%s"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:58"><expr pos:start="23:45" pos:end="23:58"><name pos:start="23:45" pos:end="23:58"><name pos:start="23:45" pos:end="23:52">dir_path</name><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:58">data</name></name></expr></argument>, <argument pos:start="23:61" pos:end="23:64"><expr pos:start="23:61" pos:end="23:64"><name pos:start="23:61" pos:end="23:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:8">path</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:19">fullname</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:24">data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:38">/* Determine the security model */</comment>

    <if_stmt pos:start="31:5" pos:end="81:5"><if pos:start="31:5" pos:end="57:5">if <condition pos:start="31:8" pos:end="31:35">(<expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:14">fs_ctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">fs_sm</name></name> <operator pos:start="31:23" pos:end="31:24">==</operator> <name pos:start="31:26" pos:end="31:34">SM_MAPPED</name></expr>)</condition> <block pos:start="31:37" pos:end="57:5">{<block_content pos:start="33:9" pos:end="55:9">

        <expr_stmt pos:start="33:9" pos:end="33:74"><expr pos:start="33:9" pos:end="33:73"><name pos:start="33:9" pos:end="33:10">fd</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:73"><name pos:start="33:14" pos:end="33:17">open</name><argument_list pos:start="33:18" pos:end="33:73">(<argument pos:start="33:19" pos:end="33:45"><expr pos:start="33:19" pos:end="33:45"><call pos:start="33:19" pos:end="33:45"><name pos:start="33:19" pos:end="33:23">rpath</name><argument_list pos:start="33:24" pos:end="33:45">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">fs_ctx</name></expr></argument>, <argument pos:start="33:33" pos:end="33:36"><expr pos:start="33:33" pos:end="33:36"><name pos:start="33:33" pos:end="33:36">path</name></expr></argument>, <argument pos:start="33:39" pos:end="33:44"><expr pos:start="33:39" pos:end="33:44"><name pos:start="33:39" pos:end="33:44">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:48" pos:end="33:52"><expr pos:start="33:48" pos:end="33:52"><name pos:start="33:48" pos:end="33:52">flags</name></expr></argument>, <argument pos:start="33:55" pos:end="33:72"><expr pos:start="33:55" pos:end="33:72"><name pos:start="33:55" pos:end="33:72">SM_LOCAL_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:14">fd</name> <operator pos:start="35:16" pos:end="35:17">==</operator> <operator pos:start="35:19" pos:end="35:19">-</operator><literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr>)</condition> <block pos:start="35:23" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:15">err</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:20">fd</name></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:21">goto <name pos:start="39:18" pos:end="39:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:13">credp</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">fc_mode</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:30">credp</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:39">fc_mode</name></name><operator pos:start="43:40" pos:end="43:40">|</operator><name pos:start="43:41" pos:end="43:47">S_IFREG</name></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:45">/* Set cleint credentials in xattr */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:11">err</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:65"><name pos:start="47:15" pos:end="47:29">local_set_xattr</name><argument_list pos:start="47:30" pos:end="47:65">(<argument pos:start="47:31" pos:end="47:57"><expr pos:start="47:31" pos:end="47:57"><call pos:start="47:31" pos:end="47:57"><name pos:start="47:31" pos:end="47:35">rpath</name><argument_list pos:start="47:36" pos:end="47:57">(<argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:42">fs_ctx</name></expr></argument>, <argument pos:start="47:45" pos:end="47:48"><expr pos:start="47:45" pos:end="47:48"><name pos:start="47:45" pos:end="47:48">path</name></expr></argument>, <argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><name pos:start="47:51" pos:end="47:56">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:60" pos:end="47:64"><expr pos:start="47:60" pos:end="47:64"><name pos:start="47:60" pos:end="47:64">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:22">(<expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>)</condition> <block pos:start="49:24" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:25">

            <expr_stmt pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:18">serrno</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:25">goto <name pos:start="53:18" pos:end="53:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="81:5">else if <condition pos:start="57:15" pos:end="59:42">(<expr pos:start="57:16" pos:end="59:41"><operator pos:start="57:16" pos:end="57:16">(</operator><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:22">fs_ctx</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:29">fs_sm</name></name> <operator pos:start="57:31" pos:end="57:32">==</operator> <name pos:start="57:34" pos:end="57:47">SM_PASSTHROUGH</name><operator pos:start="57:48" pos:end="57:48">)</operator> <operator pos:start="57:50" pos:end="57:51">||</operator>

               <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:22">fs_ctx</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:29">fs_sm</name></name> <operator pos:start="59:31" pos:end="59:32">==</operator> <name pos:start="59:34" pos:end="59:40">SM_NONE</name><operator pos:start="59:41" pos:end="59:41">)</operator></expr>)</condition> <block pos:start="59:44" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:9">

        <expr_stmt pos:start="61:9" pos:end="61:70"><expr pos:start="61:9" pos:end="61:69"><name pos:start="61:9" pos:end="61:10">fd</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:69"><name pos:start="61:14" pos:end="61:17">open</name><argument_list pos:start="61:18" pos:end="61:69">(<argument pos:start="61:19" pos:end="61:45"><expr pos:start="61:19" pos:end="61:45"><call pos:start="61:19" pos:end="61:45"><name pos:start="61:19" pos:end="61:23">rpath</name><argument_list pos:start="61:24" pos:end="61:45">(<argument pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:30">fs_ctx</name></expr></argument>, <argument pos:start="61:33" pos:end="61:36"><expr pos:start="61:33" pos:end="61:36"><name pos:start="61:33" pos:end="61:36">path</name></expr></argument>, <argument pos:start="61:39" pos:end="61:44"><expr pos:start="61:39" pos:end="61:44"><name pos:start="61:39" pos:end="61:44">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:48" pos:end="61:52"><expr pos:start="61:48" pos:end="61:52"><name pos:start="61:48" pos:end="61:52">flags</name></expr></argument>, <argument pos:start="61:55" pos:end="61:68"><expr pos:start="61:55" pos:end="61:68"><name pos:start="61:55" pos:end="61:68"><name pos:start="61:55" pos:end="61:59">credp</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:68">fc_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:21">(<expr pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:14">fd</name> <operator pos:start="63:16" pos:end="63:17">==</operator> <operator pos:start="63:19" pos:end="63:19">-</operator><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>)</condition> <block pos:start="63:23" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:21">

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">err</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:20">fd</name></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:21">goto <name pos:start="67:18" pos:end="67:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:11">err</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:64"><name pos:start="71:15" pos:end="71:43">local_post_create_passthrough</name><argument_list pos:start="71:44" pos:end="71:64">(<argument pos:start="71:45" pos:end="71:50"><expr pos:start="71:45" pos:end="71:50"><name pos:start="71:45" pos:end="71:50">fs_ctx</name></expr></argument>, <argument pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><name pos:start="71:53" pos:end="71:56">path</name></expr></argument>, <argument pos:start="71:59" pos:end="71:63"><expr pos:start="71:59" pos:end="71:63"><name pos:start="71:59" pos:end="71:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:22">(<expr pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:15">err</name> <operator pos:start="73:17" pos:end="73:18">==</operator> <operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>)</condition> <block pos:start="73:24" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:25">

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:18">serrno</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:25">goto <name pos:start="77:18" pos:end="77:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:13"><expr pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:7">err</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <name pos:start="83:11" pos:end="83:12">fd</name></expr>;</expr_stmt>

    <goto pos:start="85:5" pos:end="85:13">goto <name pos:start="85:10" pos:end="85:12">out</name>;</goto>



<label pos:start="89:1" pos:end="89:8"><name pos:start="89:1" pos:end="89:7">err_end</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:14"><expr pos:start="91:5" pos:end="91:13"><call pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:9">close</name><argument_list pos:start="91:10" pos:end="91:13">(<argument pos:start="91:11" pos:end="91:12"><expr pos:start="91:11" pos:end="91:12"><name pos:start="91:11" pos:end="91:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:40"><expr pos:start="93:5" pos:end="93:39"><call pos:start="93:5" pos:end="93:39"><name pos:start="93:5" pos:end="93:10">remove</name><argument_list pos:start="93:11" pos:end="93:39">(<argument pos:start="93:12" pos:end="93:38"><expr pos:start="93:12" pos:end="93:38"><call pos:start="93:12" pos:end="93:38"><name pos:start="93:12" pos:end="93:16">rpath</name><argument_list pos:start="93:17" pos:end="93:38">(<argument pos:start="93:18" pos:end="93:23"><expr pos:start="93:18" pos:end="93:23"><name pos:start="93:18" pos:end="93:23">fs_ctx</name></expr></argument>, <argument pos:start="93:26" pos:end="93:29"><expr pos:start="93:26" pos:end="93:29"><name pos:start="93:26" pos:end="93:29">path</name></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">buffer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:19"><expr pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:9">errno</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <name pos:start="95:13" pos:end="95:18">serrno</name></expr>;</expr_stmt>

<label pos:start="97:1" pos:end="97:4"><name pos:start="97:1" pos:end="97:3">out</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><call pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:20">v9fs_string_free</name><argument_list pos:start="99:21" pos:end="99:31">(<argument pos:start="99:22" pos:end="99:30"><expr pos:start="99:22" pos:end="99:30"><operator pos:start="99:22" pos:end="99:22">&amp;</operator><name pos:start="99:23" pos:end="99:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
