<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7459.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">synth_superframe</name><parameter_list pos:start="1:28" pos:end="3:59">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:33">float</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:42">samples</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:58">data_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="231:1">{<block_content pos:start="7:5" pos:end="229:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">WMAVoiceContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:39">= <expr pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:28">ctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">gb</name></name></expr></init></decl>, <decl pos:start="9:33" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:19"/><name pos:start="9:33" pos:end="9:36">s_gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">res</name></decl>, <decl pos:start="11:17" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:25">n_samples</name> <init pos:start="11:27" pos:end="11:31">= <expr pos:start="11:29" pos:end="11:31"><literal type="number" pos:start="11:29" pos:end="11:31">480</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:37"><name pos:start="13:12" pos:end="13:15">lsps</name><index pos:start="13:16" pos:end="13:27">[<expr pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:26">MAX_FRAMES</name></expr>]</index><index pos:start="13:28" pos:end="13:37">[<expr pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:36">MAX_LSPS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:84"><decl pos:start="15:5" pos:end="17:83"><type pos:start="15:5" pos:end="15:18"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:16">double</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:26">mean_lsf</name> <init pos:start="15:28" pos:end="17:83">= <expr pos:start="15:30" pos:end="17:83"><ternary pos:start="15:30" pos:end="17:83"><condition pos:start="15:30" pos:end="15:44"><expr pos:start="15:30" pos:end="15:42"><name pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:30">s</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:36">lsps</name></name> <operator pos:start="15:38" pos:end="15:39">==</operator> <literal type="number" pos:start="15:41" pos:end="15:42">16</literal></expr> ?</condition><then pos:start="17:9" pos:end="17:44">

        <expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:27">wmavoice_mean_lsf16</name><index pos:start="17:28" pos:end="17:44">[<expr pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:43">lsp_def_mode</name></name></expr>]</index></name></expr> </then><else pos:start="17:46" pos:end="17:83">: <expr pos:start="17:48" pos:end="17:83"><name pos:start="17:48" pos:end="17:83"><name pos:start="17:48" pos:end="17:66">wmavoice_mean_lsf10</name><index pos:start="17:67" pos:end="17:83">[<expr pos:start="17:68" pos:end="17:82"><name pos:start="17:68" pos:end="17:82"><name pos:start="17:68" pos:end="17:68">s</name><operator pos:start="17:69" pos:end="17:70">-&gt;</operator><name pos:start="17:71" pos:end="17:82">lsp_def_mode</name></name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:63"><decl pos:start="19:5" pos:end="19:62"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:62"><name pos:start="19:11" pos:end="19:20">excitation</name><index pos:start="19:21" pos:end="19:62">[<expr pos:start="19:22" pos:end="19:61"><name pos:start="19:22" pos:end="19:39">MAX_SIGNAL_HISTORY</name> <operator pos:start="19:41" pos:end="19:41">+</operator> <name pos:start="19:43" pos:end="19:56">MAX_SFRAMESIZE</name> <operator pos:start="19:58" pos:end="19:58">+</operator> <literal type="number" pos:start="19:60" pos:end="19:61">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:42"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:9">float</name></type> <name pos:start="21:11" pos:end="21:42"><name pos:start="21:11" pos:end="21:15">synth</name><index pos:start="21:16" pos:end="21:42">[<expr pos:start="21:17" pos:end="21:41"><name pos:start="21:17" pos:end="21:24">MAX_LSPS</name> <operator pos:start="21:26" pos:end="21:26">+</operator> <name pos:start="21:28" pos:end="21:41">MAX_SFRAMESIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:49"><expr pos:start="25:5" pos:end="27:48"><call pos:start="25:5" pos:end="27:48"><name pos:start="25:5" pos:end="25:10">memcpy</name><argument_list pos:start="25:11" pos:end="27:48">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">synth</name></expr></argument>,      <argument pos:start="25:24" pos:end="25:39"><expr pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:39">synth_history</name></name></expr></argument>,

           <argument pos:start="27:12" pos:end="27:47"><expr pos:start="27:12" pos:end="27:47"><name pos:start="27:12" pos:end="27:18"><name pos:start="27:12" pos:end="27:12">s</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">lsps</name></name>             <operator pos:start="27:32" pos:end="27:32">*</operator> <sizeof pos:start="27:34" pos:end="27:47">sizeof<argument_list pos:start="27:40" pos:end="27:47">(<argument pos:start="27:41" pos:end="27:46"><expr pos:start="27:41" pos:end="27:46"><operator pos:start="27:41" pos:end="27:41">*</operator><name pos:start="27:42" pos:end="27:46">synth</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:54"><expr pos:start="29:5" pos:end="31:53"><call pos:start="29:5" pos:end="31:53"><name pos:start="29:5" pos:end="29:10">memcpy</name><argument_list pos:start="29:11" pos:end="31:53">(<argument pos:start="29:12" pos:end="29:21"><expr pos:start="29:12" pos:end="29:21"><name pos:start="29:12" pos:end="29:21">excitation</name></expr></argument>, <argument pos:start="29:24" pos:end="29:44"><expr pos:start="29:24" pos:end="29:44"><name pos:start="29:24" pos:end="29:44"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:44">excitation_history</name></name></expr></argument>,

           <argument pos:start="31:12" pos:end="31:52"><expr pos:start="31:12" pos:end="31:52"><name pos:start="31:12" pos:end="31:30"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:30">history_nsamples</name></name> <operator pos:start="31:32" pos:end="31:32">*</operator> <sizeof pos:start="31:34" pos:end="31:52">sizeof<argument_list pos:start="31:40" pos:end="31:52">(<argument pos:start="31:41" pos:end="31:51"><expr pos:start="31:41" pos:end="31:51"><operator pos:start="31:41" pos:end="31:41">*</operator><name pos:start="31:42" pos:end="31:51">excitation</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:28">sframe_cache_size</name></name> <operator pos:start="35:30" pos:end="35:30">&gt;</operator> <literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>)</condition> <block pos:start="35:35" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:33">

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:10">gb</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:18">s_gb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:65"><expr pos:start="39:9" pos:end="39:64"><call pos:start="39:9" pos:end="39:64"><name pos:start="39:9" pos:end="39:21">init_get_bits</name><argument_list pos:start="39:22" pos:end="39:64">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">gb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:41"><expr pos:start="39:27" pos:end="39:41"><name pos:start="39:27" pos:end="39:41"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:41">sframe_cache</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:63"><expr pos:start="39:44" pos:end="39:63"><name pos:start="39:44" pos:end="39:63"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:63">sframe_cache_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:28">sframe_cache_size</name></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:54">(<expr pos:start="47:9" pos:end="47:53"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:12">res</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:47"><name pos:start="47:16" pos:end="47:40">check_bits_for_superframe</name><argument_list pos:start="47:41" pos:end="47:47">(<argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><name pos:start="47:42" pos:end="47:43">gb</name></expr></argument>, <argument pos:start="47:46" pos:end="47:46"><expr pos:start="47:46" pos:end="47:46"><name pos:start="47:46" pos:end="47:46">s</name></expr></argument>)</argument_list></call><operator pos:start="47:48" pos:end="47:48">)</operator> <operator pos:start="47:50" pos:end="47:51">==</operator> <literal type="number" pos:start="47:53" pos:end="47:53">1</literal></expr>)</condition> <block pos:start="47:56" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:18">data_size</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="63:23">/* First bit is speech/music bit, it differentiates between WMAVoice

     * speech samples (the actual codec) and WMAVoice music samples, which

     * are really WMAPro-in-WMAVoice-superframes. I've never seen those in

     * the wild yet. */</comment>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><operator pos:start="65:9" pos:end="65:9">!</operator><call pos:start="65:10" pos:end="65:22"><name pos:start="65:10" pos:end="65:18">get_bits1</name><argument_list pos:start="65:19" pos:end="65:22">(<argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:25" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><call pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:30">av_log_missing_feature</name><argument_list pos:start="67:31" pos:end="67:68">(<argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">ctx</name></expr></argument>, <argument pos:start="67:37" pos:end="67:64"><expr pos:start="67:37" pos:end="67:64"><literal type="string" pos:start="67:37" pos:end="67:64">"WMAPro-in-WMAVoice support"</literal></expr></argument>, <argument pos:start="67:67" pos:end="67:67"><expr pos:start="67:67" pos:end="67:67"><literal type="number" pos:start="67:67" pos:end="67:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:73">/* (optional) nr. of samples in superframe; always &lt;= 480 and &gt;= 0 */</comment>

    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="91:5">if <condition pos:start="77:8" pos:end="77:22">(<expr pos:start="77:9" pos:end="77:21"><call pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:17">get_bits1</name><argument_list pos:start="77:18" pos:end="77:21">(<argument pos:start="77:19" pos:end="77:20"><expr pos:start="77:19" pos:end="77:20"><name pos:start="77:19" pos:end="77:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:24" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:9">

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="89:9">if <condition pos:start="79:12" pos:end="79:49">(<expr pos:start="79:13" pos:end="79:48"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:22">n_samples</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:41"><name pos:start="79:26" pos:end="79:33">get_bits</name><argument_list pos:start="79:34" pos:end="79:41">(<argument pos:start="79:35" pos:end="79:36"><expr pos:start="79:35" pos:end="79:36"><name pos:start="79:35" pos:end="79:36">gb</name></expr></argument>, <argument pos:start="79:39" pos:end="79:40"><expr pos:start="79:39" pos:end="79:40"><literal type="number" pos:start="79:39" pos:end="79:40">12</literal></expr></argument>)</argument_list></call><operator pos:start="79:42" pos:end="79:42">)</operator> <operator pos:start="79:44" pos:end="79:44">&gt;</operator> <literal type="number" pos:start="79:46" pos:end="79:48">480</literal></expr>)</condition> <block pos:start="79:51" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:22">

            <expr_stmt pos:start="81:13" pos:end="85:30"><expr pos:start="81:13" pos:end="85:29"><call pos:start="81:13" pos:end="85:29"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="85:29">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">ctx</name></expr></argument>, <argument pos:start="81:25" pos:end="81:36"><expr pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:72"><expr pos:start="83:20" pos:end="83:72"><literal type="string" pos:start="83:20" pos:end="83:72">"Superframe encodes &gt;480 samples (%d), not allowed\n"</literal></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:28"><expr pos:start="85:20" pos:end="85:28"><name pos:start="85:20" pos:end="85:28">n_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:22">return <expr pos:start="87:20" pos:end="87:21"><operator pos:start="87:20" pos:end="87:20">-</operator><literal type="number" pos:start="87:21" pos:end="87:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="93:5" pos:end="93:75">/* Parse LSPs, if global for the superframe (can also be per-frame). */</comment>

    <if_stmt pos:start="95:5" pos:end="131:5"><if pos:start="95:5" pos:end="131:5">if <condition pos:start="95:8" pos:end="95:29">(<expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:28">has_residual_lsps</name></name></expr>)</condition> <block pos:start="95:31" pos:end="131:5">{<block_content pos:start="97:9" pos:end="129:45">

        <decl_stmt pos:start="97:9" pos:end="97:71"><decl pos:start="97:9" pos:end="97:34"><type pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:14">double</name></type> <name pos:start="97:16" pos:end="97:34"><name pos:start="97:16" pos:end="97:24">prev_lsps</name><index pos:start="97:25" pos:end="97:34">[<expr pos:start="97:26" pos:end="97:33"><name pos:start="97:26" pos:end="97:33">MAX_LSPS</name></expr>]</index></name></decl>, <decl pos:start="97:37" pos:end="97:52"><type ref="prev" pos:start="97:9" pos:end="97:14"/><name pos:start="97:37" pos:end="97:52"><name pos:start="97:37" pos:end="97:38">a1</name><index pos:start="97:39" pos:end="97:52">[<expr pos:start="97:40" pos:end="97:51"><name pos:start="97:40" pos:end="97:47">MAX_LSPS</name> <operator pos:start="97:49" pos:end="97:49">*</operator> <literal type="number" pos:start="97:51" pos:end="97:51">2</literal></expr>]</index></name></decl>, <decl pos:start="97:55" pos:end="97:70"><type ref="prev" pos:start="97:9" pos:end="97:14"/><name pos:start="97:55" pos:end="97:70"><name pos:start="97:55" pos:end="97:56">a2</name><index pos:start="97:57" pos:end="97:70">[<expr pos:start="97:58" pos:end="97:69"><name pos:start="97:58" pos:end="97:65">MAX_LSPS</name> <operator pos:start="97:67" pos:end="97:67">*</operator> <literal type="number" pos:start="97:69" pos:end="97:69">2</literal></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="101:9" pos:end="103:57">for <control pos:start="101:13" pos:end="101:37">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">n</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:32"><expr pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:21">n</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <name pos:start="101:25" pos:end="101:31"><name pos:start="101:25" pos:end="101:25">s</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:31">lsps</name></name></expr>;</condition> <incr pos:start="101:34" pos:end="101:36"><expr pos:start="101:34" pos:end="101:36"><name pos:start="101:34" pos:end="101:34">n</name><operator pos:start="101:35" pos:end="101:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:13" pos:end="103:57"><block_content pos:start="103:13" pos:end="103:57">

            <expr_stmt pos:start="103:13" pos:end="103:57"><expr pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:21">prev_lsps</name><index pos:start="103:22" pos:end="103:24">[<expr pos:start="103:23" pos:end="103:23"><name pos:start="103:23" pos:end="103:23">n</name></expr>]</index></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:42"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:39">prev_lsps</name><index pos:start="103:40" pos:end="103:42">[<expr pos:start="103:41" pos:end="103:41"><name pos:start="103:41" pos:end="103:41">n</name></expr>]</index></name> <operator pos:start="103:44" pos:end="103:44">-</operator> <name pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:53">mean_lsf</name><index pos:start="103:54" pos:end="103:56">[<expr pos:start="103:55" pos:end="103:55"><name pos:start="103:55" pos:end="103:55">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="107:9" pos:end="113:74"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:26">(<expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:19">lsps</name></name> <operator pos:start="107:21" pos:end="107:22">==</operator> <literal type="number" pos:start="107:24" pos:end="107:25">10</literal></expr>)</condition> <block pos:start="107:28" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:74">

            <expr_stmt pos:start="109:13" pos:end="109:74"><expr pos:start="109:13" pos:end="109:73"><call pos:start="109:13" pos:end="109:73"><name pos:start="109:13" pos:end="109:26">dequant_lsp10r</name><argument_list pos:start="109:27" pos:end="109:73">(<argument pos:start="109:28" pos:end="109:29"><expr pos:start="109:28" pos:end="109:29"><name pos:start="109:28" pos:end="109:29">gb</name></expr></argument>, <argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:35">lsps</name><index pos:start="109:36" pos:end="109:38">[<expr pos:start="109:37" pos:end="109:37"><literal type="number" pos:start="109:37" pos:end="109:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:41" pos:end="109:49"><expr pos:start="109:41" pos:end="109:49"><name pos:start="109:41" pos:end="109:49">prev_lsps</name></expr></argument>, <argument pos:start="109:52" pos:end="109:53"><expr pos:start="109:52" pos:end="109:53"><name pos:start="109:52" pos:end="109:53">a1</name></expr></argument>, <argument pos:start="109:56" pos:end="109:57"><expr pos:start="109:56" pos:end="109:57"><name pos:start="109:56" pos:end="109:57">a2</name></expr></argument>, <argument pos:start="109:60" pos:end="109:72"><expr pos:start="109:60" pos:end="109:72"><name pos:start="109:60" pos:end="109:72"><name pos:start="109:60" pos:end="109:60">s</name><operator pos:start="109:61" pos:end="109:62">-&gt;</operator><name pos:start="109:63" pos:end="109:72">lsp_q_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="113:74">else<block type="pseudo" pos:start="113:13" pos:end="113:74"><block_content pos:start="113:13" pos:end="113:74"> <comment type="block" pos:start="111:16" pos:end="111:34">/* s-&gt;lsps == 16 */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:74"><expr pos:start="113:13" pos:end="113:73"><call pos:start="113:13" pos:end="113:73"><name pos:start="113:13" pos:end="113:26">dequant_lsp16r</name><argument_list pos:start="113:27" pos:end="113:73">(<argument pos:start="113:28" pos:end="113:29"><expr pos:start="113:28" pos:end="113:29"><name pos:start="113:28" pos:end="113:29">gb</name></expr></argument>, <argument pos:start="113:32" pos:end="113:38"><expr pos:start="113:32" pos:end="113:38"><name pos:start="113:32" pos:end="113:38"><name pos:start="113:32" pos:end="113:35">lsps</name><index pos:start="113:36" pos:end="113:38">[<expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:41" pos:end="113:49"><expr pos:start="113:41" pos:end="113:49"><name pos:start="113:41" pos:end="113:49">prev_lsps</name></expr></argument>, <argument pos:start="113:52" pos:end="113:53"><expr pos:start="113:52" pos:end="113:53"><name pos:start="113:52" pos:end="113:53">a1</name></expr></argument>, <argument pos:start="113:56" pos:end="113:57"><expr pos:start="113:56" pos:end="113:57"><name pos:start="113:56" pos:end="113:57">a2</name></expr></argument>, <argument pos:start="113:60" pos:end="113:72"><expr pos:start="113:60" pos:end="113:72"><name pos:start="113:60" pos:end="113:72"><name pos:start="113:60" pos:end="113:60">s</name><operator pos:start="113:61" pos:end="113:62">-&gt;</operator><name pos:start="113:63" pos:end="113:72">lsp_q_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="117:9" pos:end="125:9">for <control pos:start="117:13" pos:end="117:37">(<init pos:start="117:14" pos:end="117:19"><expr pos:start="117:14" pos:end="117:18"><name pos:start="117:14" pos:end="117:14">n</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr>;</init> <condition pos:start="117:21" pos:end="117:32"><expr pos:start="117:21" pos:end="117:31"><name pos:start="117:21" pos:end="117:21">n</name> <operator pos:start="117:23" pos:end="117:23">&lt;</operator> <name pos:start="117:25" pos:end="117:31"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:31">lsps</name></name></expr>;</condition> <incr pos:start="117:34" pos:end="117:36"><expr pos:start="117:34" pos:end="117:36"><name pos:start="117:34" pos:end="117:34">n</name><operator pos:start="117:35" pos:end="117:36">++</operator></expr></incr>)</control> <block pos:start="117:39" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:38">

            <expr_stmt pos:start="119:13" pos:end="119:70"><expr pos:start="119:13" pos:end="119:69"><name pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:16">lsps</name><index pos:start="119:17" pos:end="119:19">[<expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>]</index><index pos:start="119:20" pos:end="119:22">[<expr pos:start="119:21" pos:end="119:21"><name pos:start="119:21" pos:end="119:21">n</name></expr>]</index></name>  <operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:37"><name pos:start="119:27" pos:end="119:34">mean_lsf</name><index pos:start="119:35" pos:end="119:37">[<expr pos:start="119:36" pos:end="119:36"><name pos:start="119:36" pos:end="119:36">n</name></expr>]</index></name> <operator pos:start="119:39" pos:end="119:39">+</operator> <operator pos:start="119:41" pos:end="119:41">(</operator><name pos:start="119:42" pos:end="119:46"><name pos:start="119:42" pos:end="119:43">a1</name><index pos:start="119:44" pos:end="119:46">[<expr pos:start="119:45" pos:end="119:45"><name pos:start="119:45" pos:end="119:45">n</name></expr>]</index></name>           <operator pos:start="119:58" pos:end="119:58">-</operator> <name pos:start="119:60" pos:end="119:68"><name pos:start="119:60" pos:end="119:61">a2</name><index pos:start="119:62" pos:end="119:68">[<expr pos:start="119:63" pos:end="119:67"><name pos:start="119:63" pos:end="119:63">n</name> <operator pos:start="119:65" pos:end="119:65">*</operator> <literal type="number" pos:start="119:67" pos:end="119:67">2</literal></expr>]</index></name><operator pos:start="119:69" pos:end="119:69">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:74"><expr pos:start="121:13" pos:end="121:73"><name pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:16">lsps</name><index pos:start="121:17" pos:end="121:19">[<expr pos:start="121:18" pos:end="121:18"><literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>]</index><index pos:start="121:20" pos:end="121:22">[<expr pos:start="121:21" pos:end="121:21"><name pos:start="121:21" pos:end="121:21">n</name></expr>]</index></name>  <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:37"><name pos:start="121:27" pos:end="121:34">mean_lsf</name><index pos:start="121:35" pos:end="121:37">[<expr pos:start="121:36" pos:end="121:36"><name pos:start="121:36" pos:end="121:36">n</name></expr>]</index></name> <operator pos:start="121:39" pos:end="121:39">+</operator> <operator pos:start="121:41" pos:end="121:41">(</operator><name pos:start="121:42" pos:end="121:56"><name pos:start="121:42" pos:end="121:43">a1</name><index pos:start="121:44" pos:end="121:56">[<expr pos:start="121:45" pos:end="121:55"><name pos:start="121:45" pos:end="121:51"><name pos:start="121:45" pos:end="121:45">s</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:51">lsps</name></name> <operator pos:start="121:53" pos:end="121:53">+</operator> <name pos:start="121:55" pos:end="121:55">n</name></expr>]</index></name> <operator pos:start="121:58" pos:end="121:58">-</operator> <name pos:start="121:60" pos:end="121:72"><name pos:start="121:60" pos:end="121:61">a2</name><index pos:start="121:62" pos:end="121:72">[<expr pos:start="121:63" pos:end="121:71"><name pos:start="121:63" pos:end="121:63">n</name> <operator pos:start="121:65" pos:end="121:65">*</operator> <literal type="number" pos:start="121:67" pos:end="121:69">2</literal> <operator pos:start="121:69" pos:end="121:69">+</operator> <literal type="number" pos:start="121:71" pos:end="121:71">1</literal></expr>]</index></name><operator pos:start="121:73" pos:end="121:73">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:16">lsps</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">2</literal></expr>]</index><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><name pos:start="123:21" pos:end="123:21">n</name></expr>]</index></name> <operator pos:start="123:24" pos:end="123:25">+=</operator> <name pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:34">mean_lsf</name><index pos:start="123:35" pos:end="123:37">[<expr pos:start="123:36" pos:end="123:36"><name pos:start="123:36" pos:end="123:36">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="127:9" pos:end="129:45">for <control pos:start="127:13" pos:end="127:31">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">n</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:25"><name pos:start="127:21" pos:end="127:21">n</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:25">3</literal></expr>;</condition> <incr pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:28">n</name><operator pos:start="127:29" pos:end="127:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="129:45"><block_content pos:start="129:13" pos:end="129:45">

            <expr_stmt pos:start="129:13" pos:end="129:45"><expr pos:start="129:13" pos:end="129:44"><call pos:start="129:13" pos:end="129:44"><name pos:start="129:13" pos:end="129:26">stabilize_lsps</name><argument_list pos:start="129:27" pos:end="129:44">(<argument pos:start="129:28" pos:end="129:34"><expr pos:start="129:28" pos:end="129:34"><name pos:start="129:28" pos:end="129:34"><name pos:start="129:28" pos:end="129:31">lsps</name><index pos:start="129:32" pos:end="129:34">[<expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">n</name></expr>]</index></name></expr></argument>, <argument pos:start="129:37" pos:end="129:43"><expr pos:start="129:37" pos:end="129:43"><name pos:start="129:37" pos:end="129:43"><name pos:start="129:37" pos:end="129:37">s</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:43">lsps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:77">/* Parse frames, optionally preceeded by per-frame (independent) LSPs. */</comment>

    <for pos:start="137:5" pos:end="181:5">for <control pos:start="137:9" pos:end="137:27">(<init pos:start="137:10" pos:end="137:15"><expr pos:start="137:10" pos:end="137:14"><name pos:start="137:10" pos:end="137:10">n</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>;</init> <condition pos:start="137:17" pos:end="137:22"><expr pos:start="137:17" pos:end="137:21"><name pos:start="137:17" pos:end="137:17">n</name> <operator pos:start="137:19" pos:end="137:19">&lt;</operator> <literal type="number" pos:start="137:21" pos:end="137:21">3</literal></expr>;</condition> <incr pos:start="137:24" pos:end="137:26"><expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:24">n</name><operator pos:start="137:25" pos:end="137:26">++</operator></expr></incr>)</control> <block pos:start="137:29" pos:end="181:5">{<block_content pos:start="139:9" pos:end="179:9">

        <if_stmt pos:start="139:9" pos:end="161:9"><if pos:start="139:9" pos:end="161:9">if <condition pos:start="139:12" pos:end="139:34">(<expr pos:start="139:13" pos:end="139:33"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:33"><name pos:start="139:14" pos:end="139:14">s</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:33">has_residual_lsps</name></name></expr>)</condition> <block pos:start="139:36" pos:end="161:9">{<block_content pos:start="141:13" pos:end="159:45">

            <decl_stmt pos:start="141:13" pos:end="141:18"><decl pos:start="141:13" pos:end="141:17"><type pos:start="141:13" pos:end="141:15"><name pos:start="141:13" pos:end="141:15">int</name></type> <name pos:start="141:17" pos:end="141:17">m</name></decl>;</decl_stmt>



            <if_stmt pos:start="145:13" pos:end="151:44"><if pos:start="145:13" pos:end="149:13">if <condition pos:start="145:16" pos:end="145:30">(<expr pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:23"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:23">lsps</name></name> <operator pos:start="145:25" pos:end="145:26">==</operator> <literal type="number" pos:start="145:28" pos:end="145:29">10</literal></expr>)</condition> <block pos:start="145:32" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:44">

                <expr_stmt pos:start="147:17" pos:end="147:44"><expr pos:start="147:17" pos:end="147:43"><call pos:start="147:17" pos:end="147:43"><name pos:start="147:17" pos:end="147:30">dequant_lsp10i</name><argument_list pos:start="147:31" pos:end="147:43">(<argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><name pos:start="147:32" pos:end="147:33">gb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:42"><expr pos:start="147:36" pos:end="147:42"><name pos:start="147:36" pos:end="147:42"><name pos:start="147:36" pos:end="147:39">lsps</name><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><name pos:start="147:41" pos:end="147:41">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="151:44">else<block type="pseudo" pos:start="151:17" pos:end="151:44"><block_content pos:start="151:17" pos:end="151:44"> <comment type="block" pos:start="149:20" pos:end="149:38">/* s-&gt;lsps == 16 */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:44"><expr pos:start="151:17" pos:end="151:43"><call pos:start="151:17" pos:end="151:43"><name pos:start="151:17" pos:end="151:30">dequant_lsp16i</name><argument_list pos:start="151:31" pos:end="151:43">(<argument pos:start="151:32" pos:end="151:33"><expr pos:start="151:32" pos:end="151:33"><name pos:start="151:32" pos:end="151:33">gb</name></expr></argument>, <argument pos:start="151:36" pos:end="151:42"><expr pos:start="151:36" pos:end="151:42"><name pos:start="151:36" pos:end="151:42"><name pos:start="151:36" pos:end="151:39">lsps</name><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><name pos:start="151:41" pos:end="151:41">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <for pos:start="155:13" pos:end="157:42">for <control pos:start="155:17" pos:end="155:41">(<init pos:start="155:18" pos:end="155:23"><expr pos:start="155:18" pos:end="155:22"><name pos:start="155:18" pos:end="155:18">m</name> <operator pos:start="155:20" pos:end="155:20">=</operator> <literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr>;</init> <condition pos:start="155:25" pos:end="155:36"><expr pos:start="155:25" pos:end="155:35"><name pos:start="155:25" pos:end="155:25">m</name> <operator pos:start="155:27" pos:end="155:27">&lt;</operator> <name pos:start="155:29" pos:end="155:35"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:35">lsps</name></name></expr>;</condition> <incr pos:start="155:38" pos:end="155:40"><expr pos:start="155:38" pos:end="155:40"><name pos:start="155:38" pos:end="155:38">m</name><operator pos:start="155:39" pos:end="155:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="157:17" pos:end="157:42"><block_content pos:start="157:17" pos:end="157:42">

                <expr_stmt pos:start="157:17" pos:end="157:42"><expr pos:start="157:17" pos:end="157:41"><name pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:20">lsps</name><index pos:start="157:21" pos:end="157:23">[<expr pos:start="157:22" pos:end="157:22"><name pos:start="157:22" pos:end="157:22">n</name></expr>]</index><index pos:start="157:24" pos:end="157:26">[<expr pos:start="157:25" pos:end="157:25"><name pos:start="157:25" pos:end="157:25">m</name></expr>]</index></name> <operator pos:start="157:28" pos:end="157:29">+=</operator> <name pos:start="157:31" pos:end="157:41"><name pos:start="157:31" pos:end="157:38">mean_lsf</name><index pos:start="157:39" pos:end="157:41">[<expr pos:start="157:40" pos:end="157:40"><name pos:start="157:40" pos:end="157:40">m</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="159:13" pos:end="159:45"><expr pos:start="159:13" pos:end="159:44"><call pos:start="159:13" pos:end="159:44"><name pos:start="159:13" pos:end="159:26">stabilize_lsps</name><argument_list pos:start="159:27" pos:end="159:44">(<argument pos:start="159:28" pos:end="159:34"><expr pos:start="159:28" pos:end="159:34"><name pos:start="159:28" pos:end="159:34"><name pos:start="159:28" pos:end="159:31">lsps</name><index pos:start="159:32" pos:end="159:34">[<expr pos:start="159:33" pos:end="159:33"><name pos:start="159:33" pos:end="159:33">n</name></expr>]</index></name></expr></argument>, <argument pos:start="159:37" pos:end="159:43"><expr pos:start="159:37" pos:end="159:43"><name pos:start="159:37" pos:end="159:43"><name pos:start="159:37" pos:end="159:37">s</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:43">lsps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="165:9" pos:end="179:9"><if pos:start="165:9" pos:end="179:9">if <condition pos:start="165:12" pos:end="173:69">(<expr pos:start="165:13" pos:end="173:68"><operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:16">res</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <call pos:start="165:20" pos:end="173:67"><name pos:start="165:20" pos:end="165:30">synth_frame</name><argument_list pos:start="165:31" pos:end="173:67">(<argument pos:start="165:32" pos:end="165:34"><expr pos:start="165:32" pos:end="165:34"><name pos:start="165:32" pos:end="165:34">ctx</name></expr></argument>, <argument pos:start="165:37" pos:end="165:38"><expr pos:start="165:37" pos:end="165:38"><name pos:start="165:37" pos:end="165:38">gb</name></expr></argument>, <argument pos:start="165:41" pos:end="165:41"><expr pos:start="165:41" pos:end="165:41"><name pos:start="165:41" pos:end="165:41">n</name></expr></argument>,

                               <argument pos:start="167:32" pos:end="167:58"><expr pos:start="167:32" pos:end="167:58"><operator pos:start="167:32" pos:end="167:32">&amp;</operator><name pos:start="167:33" pos:end="167:58"><name pos:start="167:33" pos:end="167:39">samples</name><index pos:start="167:40" pos:end="167:58">[<expr pos:start="167:41" pos:end="167:57"><name pos:start="167:41" pos:end="167:41">n</name> <operator pos:start="167:43" pos:end="167:43">*</operator> <name pos:start="167:45" pos:end="167:57">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="169:32" pos:end="169:38"><expr pos:start="169:32" pos:end="169:38"><name pos:start="169:32" pos:end="169:38"><name pos:start="169:32" pos:end="169:35">lsps</name><index pos:start="169:36" pos:end="169:38">[<expr pos:start="169:37" pos:end="169:37"><name pos:start="169:37" pos:end="169:37">n</name></expr>]</index></name></expr></argument>, <argument pos:start="169:41" pos:end="169:75"><expr pos:start="169:41" pos:end="169:75"><ternary pos:start="169:41" pos:end="169:75"><condition pos:start="169:41" pos:end="169:48"><expr pos:start="169:41" pos:end="169:46"><name pos:start="169:41" pos:end="169:41">n</name> <operator pos:start="169:43" pos:end="169:44">==</operator> <literal type="number" pos:start="169:46" pos:end="169:46">0</literal></expr> ?</condition><then pos:start="169:50" pos:end="169:61"> <expr pos:start="169:50" pos:end="169:61"><name pos:start="169:50" pos:end="169:61"><name pos:start="169:50" pos:end="169:50">s</name><operator pos:start="169:51" pos:end="169:52">-&gt;</operator><name pos:start="169:53" pos:end="169:61">prev_lsps</name></name></expr> </then><else pos:start="169:63" pos:end="169:75">: <expr pos:start="169:65" pos:end="169:75"><name pos:start="169:65" pos:end="169:75"><name pos:start="169:65" pos:end="169:68">lsps</name><index pos:start="169:69" pos:end="169:75">[<expr pos:start="169:70" pos:end="169:74"><name pos:start="169:70" pos:end="169:70">n</name> <operator pos:start="169:72" pos:end="169:72">-</operator> <literal type="number" pos:start="169:74" pos:end="169:74">1</literal></expr>]</index></name></expr></else></ternary></expr></argument>,

                               <argument pos:start="171:32" pos:end="171:83"><expr pos:start="171:32" pos:end="171:83"><operator pos:start="171:32" pos:end="171:32">&amp;</operator><name pos:start="171:33" pos:end="171:83"><name pos:start="171:33" pos:end="171:42">excitation</name><index pos:start="171:43" pos:end="171:83">[<expr pos:start="171:44" pos:end="171:82"><name pos:start="171:44" pos:end="171:62"><name pos:start="171:44" pos:end="171:44">s</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:62">history_nsamples</name></name> <operator pos:start="171:64" pos:end="171:64">+</operator> <name pos:start="171:66" pos:end="171:66">n</name> <operator pos:start="171:68" pos:end="171:68">*</operator> <name pos:start="171:70" pos:end="171:82">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="173:32" pos:end="173:66"><expr pos:start="173:32" pos:end="173:66"><operator pos:start="173:32" pos:end="173:32">&amp;</operator><name pos:start="173:33" pos:end="173:66"><name pos:start="173:33" pos:end="173:37">synth</name><index pos:start="173:38" pos:end="173:66">[<expr pos:start="173:39" pos:end="173:65"><name pos:start="173:39" pos:end="173:45"><name pos:start="173:39" pos:end="173:39">s</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:45">lsps</name></name> <operator pos:start="173:47" pos:end="173:47">+</operator> <name pos:start="173:49" pos:end="173:49">n</name> <operator pos:start="173:51" pos:end="173:51">*</operator> <name pos:start="173:53" pos:end="173:65">MAX_FRAMESIZE</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="173:68" pos:end="173:68">)</operator></expr>)</condition> <block pos:start="173:71" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:23">

            <expr_stmt pos:start="175:13" pos:end="175:27"><expr pos:start="175:13" pos:end="175:26"><operator pos:start="175:13" pos:end="175:13">*</operator><name pos:start="175:14" pos:end="175:22">data_size</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr>;</expr_stmt>

            <return pos:start="177:13" pos:end="177:23">return <expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="185:5" pos:end="189:36">/* Statistics? FIXME - we don't check for length, a slight overrun

     * will be caught by internal buffer padding, and anything else

     * will be skipped, not read. */</comment>

    <if_stmt pos:start="191:5" pos:end="197:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:22">(<expr pos:start="191:9" pos:end="191:21"><call pos:start="191:9" pos:end="191:21"><name pos:start="191:9" pos:end="191:17">get_bits1</name><argument_list pos:start="191:18" pos:end="191:21">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:24" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:38">

        <expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:11">res</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:29"><name pos:start="193:15" pos:end="193:22">get_bits</name><argument_list pos:start="193:23" pos:end="193:29">(<argument pos:start="193:24" pos:end="193:25"><expr pos:start="193:24" pos:end="193:25"><name pos:start="193:24" pos:end="193:25">gb</name></expr></argument>, <argument pos:start="193:28" pos:end="193:28"><expr pos:start="193:28" pos:end="193:28"><literal type="number" pos:start="193:28" pos:end="193:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:38"><expr pos:start="195:9" pos:end="195:37"><call pos:start="195:9" pos:end="195:37"><name pos:start="195:9" pos:end="195:17">skip_bits</name><argument_list pos:start="195:18" pos:end="195:37">(<argument pos:start="195:19" pos:end="195:20"><expr pos:start="195:19" pos:end="195:20"><name pos:start="195:19" pos:end="195:20">gb</name></expr></argument>, <argument pos:start="195:23" pos:end="195:36"><expr pos:start="195:23" pos:end="195:36"><literal type="number" pos:start="195:23" pos:end="195:24">10</literal> <operator pos:start="195:26" pos:end="195:26">*</operator> <operator pos:start="195:28" pos:end="195:28">(</operator><name pos:start="195:29" pos:end="195:31">res</name> <operator pos:start="195:33" pos:end="195:33">+</operator> <literal type="number" pos:start="195:35" pos:end="195:35">1</literal><operator pos:start="195:36" pos:end="195:36">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:39">/* Specify nr. of output samples */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:43"><expr pos:start="203:5" pos:end="203:42"><operator pos:start="203:5" pos:end="203:5">*</operator><name pos:start="203:6" pos:end="203:14">data_size</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <name pos:start="203:18" pos:end="203:26">n_samples</name> <operator pos:start="203:28" pos:end="203:28">*</operator> <sizeof pos:start="203:30" pos:end="203:42">sizeof<argument_list pos:start="203:36" pos:end="203:42">(<argument pos:start="203:37" pos:end="203:41"><expr pos:start="203:37" pos:end="203:41"><name pos:start="203:37" pos:end="203:41">float</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <comment type="block" pos:start="207:5" pos:end="207:24">/* Update history */</comment>

    <expr_stmt pos:start="209:5" pos:end="211:56"><expr pos:start="209:5" pos:end="211:55"><call pos:start="209:5" pos:end="211:55"><name pos:start="209:5" pos:end="209:10">memcpy</name><argument_list pos:start="209:11" pos:end="211:55">(<argument pos:start="209:12" pos:end="209:23"><expr pos:start="209:12" pos:end="209:23"><name pos:start="209:12" pos:end="209:23"><name pos:start="209:12" pos:end="209:12">s</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:23">prev_lsps</name></name></expr></argument>,           <argument pos:start="209:36" pos:end="209:42"><expr pos:start="209:36" pos:end="209:42"><name pos:start="209:36" pos:end="209:42"><name pos:start="209:36" pos:end="209:39">lsps</name><index pos:start="209:40" pos:end="209:42">[<expr pos:start="209:41" pos:end="209:41"><literal type="number" pos:start="209:41" pos:end="209:41">2</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="211:12" pos:end="211:54"><expr pos:start="211:12" pos:end="211:54"><name pos:start="211:12" pos:end="211:18"><name pos:start="211:12" pos:end="211:12">s</name><operator pos:start="211:13" pos:end="211:14">-&gt;</operator><name pos:start="211:15" pos:end="211:18">lsps</name></name>             <operator pos:start="211:32" pos:end="211:32">*</operator> <sizeof pos:start="211:34" pos:end="211:54">sizeof<argument_list pos:start="211:40" pos:end="211:54">(<argument pos:start="211:41" pos:end="211:53"><expr pos:start="211:41" pos:end="211:53"><operator pos:start="211:41" pos:end="211:41">*</operator><name pos:start="211:42" pos:end="211:53"><name pos:start="211:42" pos:end="211:42">s</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:53">prev_lsps</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="215:49"><expr pos:start="213:5" pos:end="215:48"><call pos:start="213:5" pos:end="215:48"><name pos:start="213:5" pos:end="213:10">memcpy</name><argument_list pos:start="213:11" pos:end="215:48">(<argument pos:start="213:12" pos:end="213:27"><expr pos:start="213:12" pos:end="213:27"><name pos:start="213:12" pos:end="213:27"><name pos:start="213:12" pos:end="213:12">s</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:27">synth_history</name></name></expr></argument>,      <argument pos:start="213:35" pos:end="213:56"><expr pos:start="213:35" pos:end="213:56"><operator pos:start="213:35" pos:end="213:35">&amp;</operator><name pos:start="213:36" pos:end="213:56"><name pos:start="213:36" pos:end="213:40">synth</name><index pos:start="213:41" pos:end="213:56">[<expr pos:start="213:42" pos:end="213:55"><name pos:start="213:42" pos:end="213:55">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="215:12" pos:end="215:47"><expr pos:start="215:12" pos:end="215:47"><name pos:start="215:12" pos:end="215:18"><name pos:start="215:12" pos:end="215:12">s</name><operator pos:start="215:13" pos:end="215:14">-&gt;</operator><name pos:start="215:15" pos:end="215:18">lsps</name></name>             <operator pos:start="215:32" pos:end="215:32">*</operator> <sizeof pos:start="215:34" pos:end="215:47">sizeof<argument_list pos:start="215:40" pos:end="215:47">(<argument pos:start="215:41" pos:end="215:46"><expr pos:start="215:41" pos:end="215:46"><operator pos:start="215:41" pos:end="215:41">*</operator><name pos:start="215:42" pos:end="215:46">synth</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="219:54"><expr pos:start="217:5" pos:end="219:53"><call pos:start="217:5" pos:end="219:53"><name pos:start="217:5" pos:end="217:10">memcpy</name><argument_list pos:start="217:11" pos:end="219:53">(<argument pos:start="217:12" pos:end="217:32"><expr pos:start="217:12" pos:end="217:32"><name pos:start="217:12" pos:end="217:32"><name pos:start="217:12" pos:end="217:12">s</name><operator pos:start="217:13" pos:end="217:14">-&gt;</operator><name pos:start="217:15" pos:end="217:32">excitation_history</name></name></expr></argument>, <argument pos:start="217:35" pos:end="217:61"><expr pos:start="217:35" pos:end="217:61"><operator pos:start="217:35" pos:end="217:35">&amp;</operator><name pos:start="217:36" pos:end="217:61"><name pos:start="217:36" pos:end="217:45">excitation</name><index pos:start="217:46" pos:end="217:61">[<expr pos:start="217:47" pos:end="217:60"><name pos:start="217:47" pos:end="217:60">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

           <argument pos:start="219:12" pos:end="219:52"><expr pos:start="219:12" pos:end="219:52"><name pos:start="219:12" pos:end="219:30"><name pos:start="219:12" pos:end="219:12">s</name><operator pos:start="219:13" pos:end="219:14">-&gt;</operator><name pos:start="219:15" pos:end="219:30">history_nsamples</name></name> <operator pos:start="219:32" pos:end="219:32">*</operator> <sizeof pos:start="219:34" pos:end="219:52">sizeof<argument_list pos:start="219:40" pos:end="219:52">(<argument pos:start="219:41" pos:end="219:51"><expr pos:start="219:41" pos:end="219:51"><operator pos:start="219:41" pos:end="219:41">*</operator><name pos:start="219:42" pos:end="219:51">excitation</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="221:5" pos:end="225:63"><if pos:start="221:5" pos:end="225:63">if <condition pos:start="221:8" pos:end="221:18">(<expr pos:start="221:9" pos:end="221:17"><name pos:start="221:9" pos:end="221:17"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:17">do_apf</name></name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="225:63"><block_content pos:start="223:9" pos:end="225:63">

        <expr_stmt pos:start="223:9" pos:end="225:63"><expr pos:start="223:9" pos:end="225:62"><call pos:start="223:9" pos:end="225:62"><name pos:start="223:9" pos:end="223:15">memmove</name><argument_list pos:start="223:16" pos:end="225:62">(<argument pos:start="223:17" pos:end="223:30"><expr pos:start="223:17" pos:end="223:30"><name pos:start="223:17" pos:end="223:30"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:30">zero_exc_pf</name></name></expr></argument>,       <argument pos:start="223:39" pos:end="223:69"><expr pos:start="223:39" pos:end="223:69"><operator pos:start="223:39" pos:end="223:39">&amp;</operator><name pos:start="223:40" pos:end="223:69"><name pos:start="223:40" pos:end="223:40">s</name><operator pos:start="223:41" pos:end="223:42">-&gt;</operator><name pos:start="223:43" pos:end="223:53">zero_exc_pf</name><index pos:start="223:54" pos:end="223:69">[<expr pos:start="223:55" pos:end="223:68"><name pos:start="223:55" pos:end="223:68">MAX_SFRAMESIZE</name></expr>]</index></name></expr></argument>,

                <argument pos:start="225:17" pos:end="225:61"><expr pos:start="225:17" pos:end="225:61"><name pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:17">s</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:35">history_nsamples</name></name> <operator pos:start="225:37" pos:end="225:37">*</operator> <sizeof pos:start="225:39" pos:end="225:61">sizeof<argument_list pos:start="225:45" pos:end="225:61">(<argument pos:start="225:46" pos:end="225:60"><expr pos:start="225:46" pos:end="225:60"><operator pos:start="225:46" pos:end="225:46">*</operator><name pos:start="225:47" pos:end="225:60"><name pos:start="225:47" pos:end="225:47">s</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:60">zero_exc_pf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
