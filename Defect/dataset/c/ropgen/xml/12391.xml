<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12391.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_visitor_in_fuzz</name><parameter_list pos:start="1:33" pos:end="3:52">(<parameter pos:start="1:34" pos:end="1:59"><decl pos:start="1:34" pos:end="1:59"><type pos:start="1:34" pos:end="1:59"><name pos:start="1:34" pos:end="1:53">TestInputVisitorData</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">void</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:51">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:5">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">ires</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:13">bres</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:15">nres</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">sres</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">EnumOne</name></type> <name pos:start="15:13" pos:end="15:16">eres</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:15">errp</name> <init pos:start="17:17" pos:end="17:22">= <expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">Visitor</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">char</name></type> <name pos:start="23:10" pos:end="23:19"><name pos:start="23:10" pos:end="23:12">buf</name><index pos:start="23:13" pos:end="23:19">[<expr pos:start="23:14" pos:end="23:18"><literal type="number" pos:start="23:14" pos:end="23:18">10000</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="87:5">for <control pos:start="27:9" pos:end="27:29">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:23">100</literal></expr>;</condition> <incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">i</name><operator pos:start="27:27" pos:end="27:28">++</operator></expr></incr>)</control> <block pos:start="27:31" pos:end="87:5">{<block_content pos:start="29:9" pos:end="85:43">

        <decl_stmt pos:start="29:9" pos:end="29:23"><decl pos:start="29:9" pos:end="29:22"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16">unsigned</name> <name pos:start="29:18" pos:end="29:20">int</name></type> <name pos:start="29:22" pos:end="29:22">j</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:54"><expr pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:9">j</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:33">g_test_rand_int_range</name><argument_list pos:start="33:34" pos:end="33:53">(<argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:52"><expr pos:start="33:38" pos:end="33:52"><sizeof pos:start="33:38" pos:end="33:48">sizeof<argument_list pos:start="33:44" pos:end="33:48">(<argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="33:50" pos:end="33:50">-</operator> <literal type="number" pos:start="33:52" pos:end="33:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:11">buf</name><index pos:start="37:12" pos:end="37:14">[<expr pos:start="37:13" pos:end="37:13"><name pos:start="37:13" pos:end="37:13">j</name></expr>]</index></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="char" pos:start="37:18" pos:end="37:21">'\0'</literal></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">j</name> <operator pos:start="41:15" pos:end="41:16">!=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>)</condition> <block pos:start="41:21" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:13">

            <for pos:start="43:13" pos:end="47:13">for <control pos:start="43:17" pos:end="43:34">(<init pos:start="43:18" pos:end="43:21"><expr pos:start="43:18" pos:end="43:20"><name pos:start="43:18" pos:end="43:18">j</name><operator pos:start="43:19" pos:end="43:20">--</operator></expr>;</init> <condition pos:start="43:23" pos:end="43:29"><expr pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:23">j</name> <operator pos:start="43:25" pos:end="43:26">!=</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">j</name><operator pos:start="43:32" pos:end="43:33">--</operator></expr></incr>)</control> <block pos:start="43:36" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:65">

                <expr_stmt pos:start="45:17" pos:end="45:65"><expr pos:start="45:17" pos:end="45:64"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:19">buf</name><index pos:start="45:20" pos:end="45:26">[<expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">j</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>]</index></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:34">char</name><operator pos:start="45:35" pos:end="45:35">)</operator><call pos:start="45:36" pos:end="45:64"><name pos:start="45:36" pos:end="45:56">g_test_rand_int_range</name><argument_list pos:start="45:57" pos:end="45:64">(<argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">0</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:63"><expr pos:start="45:61" pos:end="45:63"><literal type="number" pos:start="45:61" pos:end="45:63">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:9">v</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:35">visitor_input_test_init</name><argument_list pos:start="53:36" pos:end="53:46">(<argument pos:start="53:37" pos:end="53:40"><expr pos:start="53:37" pos:end="53:40"><name pos:start="53:37" pos:end="53:40">data</name></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><call pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:22">visit_type_int</name><argument_list pos:start="55:23" pos:end="55:45">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">v</name></expr></argument>, <argument pos:start="55:27" pos:end="55:31"><expr pos:start="55:27" pos:end="55:31"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:31">ires</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">NULL</name></expr></argument>, <argument pos:start="55:40" pos:end="55:44"><expr pos:start="55:40" pos:end="55:44"><operator pos:start="55:40" pos:end="55:40">&amp;</operator><name pos:start="55:41" pos:end="55:44">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:9">v</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:35">visitor_input_test_init</name><argument_list pos:start="59:36" pos:end="59:46">(<argument pos:start="59:37" pos:end="59:40"><expr pos:start="59:37" pos:end="59:40"><name pos:start="59:37" pos:end="59:40">data</name></expr></argument>, <argument pos:start="59:43" pos:end="59:45"><expr pos:start="59:43" pos:end="59:45"><name pos:start="59:43" pos:end="59:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><call pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:23">visit_type_bool</name><argument_list pos:start="61:24" pos:end="61:46">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">v</name></expr></argument>, <argument pos:start="61:28" pos:end="61:32"><expr pos:start="61:28" pos:end="61:32"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:32">bres</name></expr></argument>, <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><name pos:start="61:35" pos:end="61:38">NULL</name></expr></argument>, <argument pos:start="61:41" pos:end="61:45"><expr pos:start="61:41" pos:end="61:45"><operator pos:start="61:41" pos:end="61:41">&amp;</operator><name pos:start="61:42" pos:end="61:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><call pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:30">visitor_input_teardown</name><argument_list pos:start="63:31" pos:end="63:42">(<argument pos:start="63:32" pos:end="63:35"><expr pos:start="63:32" pos:end="63:35"><name pos:start="63:32" pos:end="63:35">data</name></expr></argument>, <argument pos:start="63:38" pos:end="63:41"><expr pos:start="63:38" pos:end="63:41"><name pos:start="63:38" pos:end="63:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:9">v</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:35">visitor_input_test_init</name><argument_list pos:start="67:36" pos:end="67:46">(<argument pos:start="67:37" pos:end="67:40"><expr pos:start="67:37" pos:end="67:40"><name pos:start="67:37" pos:end="67:40">data</name></expr></argument>, <argument pos:start="67:43" pos:end="67:45"><expr pos:start="67:43" pos:end="67:45"><name pos:start="67:43" pos:end="67:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:49"><expr pos:start="69:9" pos:end="69:48"><call pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:25">visit_type_number</name><argument_list pos:start="69:26" pos:end="69:48">(<argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><name pos:start="69:27" pos:end="69:27">v</name></expr></argument>, <argument pos:start="69:30" pos:end="69:34"><expr pos:start="69:30" pos:end="69:34"><operator pos:start="69:30" pos:end="69:30">&amp;</operator><name pos:start="69:31" pos:end="69:34">nres</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><name pos:start="69:37" pos:end="69:40">NULL</name></expr></argument>, <argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><operator pos:start="69:43" pos:end="69:43">&amp;</operator><name pos:start="69:44" pos:end="69:47">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:9">v</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:35">visitor_input_test_init</name><argument_list pos:start="73:36" pos:end="73:46">(<argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">data</name></expr></argument>, <argument pos:start="73:43" pos:end="73:45"><expr pos:start="73:43" pos:end="73:45"><name pos:start="73:43" pos:end="73:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:22">visit_type_str</name><argument_list pos:start="75:23" pos:end="75:45">(<argument pos:start="75:24" pos:end="75:24"><expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">v</name></expr></argument>, <argument pos:start="75:27" pos:end="75:31"><expr pos:start="75:27" pos:end="75:31"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:31">sres</name></expr></argument>, <argument pos:start="75:34" pos:end="75:37"><expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">NULL</name></expr></argument>, <argument pos:start="75:40" pos:end="75:44"><expr pos:start="75:40" pos:end="75:44"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:44">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><call pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:14">g_free</name><argument_list pos:start="77:15" pos:end="77:20">(<argument pos:start="77:16" pos:end="77:19"><expr pos:start="77:16" pos:end="77:19"><name pos:start="77:16" pos:end="77:19">sres</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:47"><expr pos:start="81:9" pos:end="81:46"><name pos:start="81:9" pos:end="81:9">v</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:46"><name pos:start="81:13" pos:end="81:35">visitor_input_test_init</name><argument_list pos:start="81:36" pos:end="81:46">(<argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><name pos:start="81:37" pos:end="81:40">data</name></expr></argument>, <argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:50"><expr pos:start="83:9" pos:end="83:49"><call pos:start="83:9" pos:end="83:49"><name pos:start="83:9" pos:end="83:26">visit_type_EnumOne</name><argument_list pos:start="83:27" pos:end="83:49">(<argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">v</name></expr></argument>, <argument pos:start="83:31" pos:end="83:35"><expr pos:start="83:31" pos:end="83:35"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><name pos:start="83:32" pos:end="83:35">eres</name></expr></argument>, <argument pos:start="83:38" pos:end="83:41"><expr pos:start="83:38" pos:end="83:41"><name pos:start="83:38" pos:end="83:41">NULL</name></expr></argument>, <argument pos:start="83:44" pos:end="83:48"><expr pos:start="83:44" pos:end="83:48"><operator pos:start="83:44" pos:end="83:44">&amp;</operator><name pos:start="83:45" pos:end="83:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:43"><expr pos:start="85:9" pos:end="85:42"><call pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:30">visitor_input_teardown</name><argument_list pos:start="85:31" pos:end="85:42">(<argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><name pos:start="85:32" pos:end="85:35">data</name></expr></argument>, <argument pos:start="85:38" pos:end="85:41"><expr pos:start="85:38" pos:end="85:41"><name pos:start="85:38" pos:end="85:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
