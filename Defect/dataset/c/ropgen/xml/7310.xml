<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7310.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">tcg_context_init</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:32">TCGContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:23">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">op</name></decl>, <decl pos:start="5:13" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:22">total_args</name></decl>, <decl pos:start="5:25" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:25">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCGOpDef</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">def</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">TCGArgConstraint</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:29">args_ct</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">int</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:20">sorted_args</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:28">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">s</name></expr></argument>, <argument pos:start="15:15" pos:end="15:15"><expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></argument>, <argument pos:start="15:18" pos:end="15:27"><expr pos:start="15:18" pos:end="15:27"><sizeof pos:start="15:18" pos:end="15:27">sizeof<argument_list pos:start="15:24" pos:end="15:27">(<argument pos:start="15:25" pos:end="15:26"><expr pos:start="15:25" pos:end="15:26"><operator pos:start="15:25" pos:end="15:25">*</operator><name pos:start="15:26" pos:end="15:26">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">nb_globals</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>;</expr_stmt>

    

    <comment type="block" pos:start="21:5" pos:end="23:15">/* Count total number of arguments and allocate the corresponding

       space */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:14">total_args</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="35:5">for<control pos:start="27:8" pos:end="27:34">(<init pos:start="27:9" pos:end="27:15"><expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:10">op</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:28"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:18">op</name> <operator pos:start="27:20" pos:end="27:20">&lt;</operator> <name pos:start="27:22" pos:end="27:27">NB_OPS</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:33"><expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:31">op</name><operator pos:start="27:32" pos:end="27:33">++</operator></expr></incr>)</control> <block pos:start="27:36" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:24">

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:11">def</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:26">tcg_op_defs</name><index pos:start="29:27" pos:end="29:30">[<expr pos:start="29:28" pos:end="29:29"><name pos:start="29:28" pos:end="29:29">op</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:9">n</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:15">def</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:25">nb_iargs</name></name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:41"><name pos:start="31:29" pos:end="31:31">def</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">nb_oargs</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:18">total_args</name> <operator pos:start="33:20" pos:end="33:21">+=</operator> <name pos:start="33:23" pos:end="33:23">n</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:11">args_ct</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:61"><name pos:start="39:15" pos:end="39:22">g_malloc</name><argument_list pos:start="39:23" pos:end="39:61">(<argument pos:start="39:24" pos:end="39:60"><expr pos:start="39:24" pos:end="39:60"><sizeof pos:start="39:24" pos:end="39:47">sizeof<argument_list pos:start="39:30" pos:end="39:47">(<argument pos:start="39:31" pos:end="39:46"><expr pos:start="39:31" pos:end="39:46"><name pos:start="39:31" pos:end="39:46">TCGArgConstraint</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:49" pos:end="39:49">*</operator> <name pos:start="39:51" pos:end="39:60">total_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:15">sorted_args</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:52"><name pos:start="41:19" pos:end="41:26">g_malloc</name><argument_list pos:start="41:27" pos:end="41:52">(<argument pos:start="41:28" pos:end="41:51"><expr pos:start="41:28" pos:end="41:51"><sizeof pos:start="41:28" pos:end="41:38">sizeof<argument_list pos:start="41:34" pos:end="41:38">(<argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:37">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:40" pos:end="41:40">*</operator> <name pos:start="41:42" pos:end="41:51">total_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="68:0">for<control pos:start="45:8" pos:end="45:34">(<init pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:10">op</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:18">op</name> <operator pos:start="45:20" pos:end="45:20">&lt;</operator> <name pos:start="45:22" pos:end="45:27">NB_OPS</name></expr>;</condition> <incr pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:31">op</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control> <block pos:start="45:36" pos:end="68:0">{<block_content pos:start="47:9" pos:end="57:21">

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:11">def</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:26">tcg_op_defs</name><index pos:start="47:27" pos:end="47:30">[<expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">op</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:11">def</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:20">args_ct</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:30">args_ct</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">def</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">sorted_args</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:38">sorted_args</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:9">n</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:15">def</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:25">nb_iargs</name></name> <operator pos:start="53:27" pos:end="53:27">+</operator> <name pos:start="53:29" pos:end="53:41"><name pos:start="53:29" pos:end="53:31">def</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:41">nb_oargs</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:19">sorted_args</name> <operator pos:start="55:21" pos:end="55:22">+=</operator> <name pos:start="55:24" pos:end="55:24">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:15">args_ct</name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <name pos:start="57:20" pos:end="57:20">n</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="63:5" pos:end="63:28">/* Register helpers.  */</comment>

<cpp:define pos:start="65:1" pos:end="65:20">#<cpp:directive pos:start="65:2" pos:end="65:7">define</cpp:directive> <cpp:macro pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:18">GEN_HELPER</name></cpp:macro> <cpp:value pos:start="65:20" pos:end="65:20">2</cpp:value></cpp:define>

<cpp:include pos:start="67:1" pos:end="67:19">#<cpp:directive pos:start="67:2" pos:end="67:8">include</cpp:directive> <cpp:file pos:start="67:10" pos:end="67:19">"helper.h"</cpp:file></cpp:include>



    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><call pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:19">tcg_target_init</name><argument_list pos:start="71:20" pos:end="71:22">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
