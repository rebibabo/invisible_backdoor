<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8251.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">vfio_probe_nvidia_bar5_quirk</name><parameter_list pos:start="1:41" pos:end="1:69">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:54">VFIOPCIDevice</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">vdev</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:68"><decl pos:start="1:63" pos:end="1:68"><type pos:start="1:63" pos:end="1:68"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:68">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:60">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOQuirk</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">quirk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">VFIONvidiaBAR5Quirk</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">bar5</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:25">VFIOConfigWindowQuirk</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:33">window</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:34">(<expr pos:start="13:9" pos:end="15:33"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:60"><name pos:start="13:10" pos:end="13:20">vfio_pci_is</name><argument_list pos:start="13:21" pos:end="13:60">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">vdev</name></expr></argument>, <argument pos:start="13:28" pos:end="13:47"><expr pos:start="13:28" pos:end="13:47"><name pos:start="13:28" pos:end="13:47">PCI_VENDOR_ID_NVIDIA</name></expr></argument>, <argument pos:start="13:50" pos:end="13:59"><expr pos:start="13:50" pos:end="13:59"><name pos:start="13:50" pos:end="13:59">PCI_ANY_ID</name></expr></argument>)</argument_list></call> <operator pos:start="13:62" pos:end="13:63">||</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:13">vdev</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">has_vga</name></name> <operator pos:start="15:24" pos:end="15:25">||</operator> <name pos:start="15:27" pos:end="15:28">nr</name> <operator pos:start="15:30" pos:end="15:31">!=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">5</literal></expr>)</condition> <block pos:start="15:36" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:9">quirk</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:21">g_malloc0</name><argument_list pos:start="23:22" pos:end="23:37">(<argument pos:start="23:23" pos:end="23:36"><expr pos:start="23:23" pos:end="23:36"><sizeof pos:start="23:23" pos:end="23:36">sizeof<argument_list pos:start="23:29" pos:end="23:36">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><operator pos:start="23:30" pos:end="23:30">*</operator><name pos:start="23:31" pos:end="23:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:9">quirk</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">mem</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:40"><name pos:start="25:18" pos:end="25:23">g_new0</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36">MemoryRegion</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:9">quirk</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">nr_mem</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:72"><expr pos:start="29:5" pos:end="31:71"><name pos:start="29:5" pos:end="29:8">bar5</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:16">quirk</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">data</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="31:71"><name pos:start="29:26" pos:end="29:34">g_malloc0</name><argument_list pos:start="29:35" pos:end="31:71">(<argument pos:start="29:36" pos:end="31:70"><expr pos:start="29:36" pos:end="31:70"><sizeof pos:start="29:36" pos:end="29:48">sizeof<argument_list pos:start="29:42" pos:end="29:48">(<argument pos:start="29:43" pos:end="29:47"><expr pos:start="29:43" pos:end="29:47"><operator pos:start="29:43" pos:end="29:43">*</operator><name pos:start="29:44" pos:end="29:47">bar5</name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:50" pos:end="29:50">+</operator>

                                   <operator pos:start="31:36" pos:end="31:36">(</operator><sizeof pos:start="31:37" pos:end="31:65">sizeof<argument_list pos:start="31:43" pos:end="31:65">(<argument pos:start="31:44" pos:end="31:64"><expr pos:start="31:44" pos:end="31:64"><name pos:start="31:44" pos:end="31:64">VFIOConfigWindowMatch</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:67" pos:end="31:67">*</operator> <literal type="number" pos:start="31:69" pos:end="31:69">2</literal><operator pos:start="31:70" pos:end="31:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:10">window</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:26"><name pos:start="33:15" pos:end="33:18">bar5</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:26">window</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:10">window</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">vdev</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:23">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:10">window</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:26">address_offset</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <literal type="number" pos:start="39:30" pos:end="39:32">0x8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:10">window</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:23">data_offset</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:29">0xc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:10">window</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:22">nr_matches</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:10">window</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:19">matches</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>]</index></name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:28">match</name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:37">0x1800</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:56"><expr pos:start="47:5" pos:end="47:55"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:10">window</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:19">matches</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>]</index></name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:27">mask</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:51">PCI_CONFIG_SPACE_SIZE</name> <operator pos:start="47:53" pos:end="47:53">-</operator> <literal type="number" pos:start="47:55" pos:end="47:55">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:10">window</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:19">matches</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>]</index></name><operator pos:start="49:23" pos:end="49:23">.</operator><name pos:start="49:24" pos:end="49:28">match</name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:38">0x88000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:10">window</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:19">matches</name><index pos:start="51:20" pos:end="51:22">[<expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>]</index></name><operator pos:start="51:23" pos:end="51:23">.</operator><name pos:start="51:24" pos:end="51:27">mask</name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:52">PCIE_CONFIG_SPACE_SIZE</name> <operator pos:start="51:54" pos:end="51:54">-</operator> <literal type="number" pos:start="51:56" pos:end="51:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:10">window</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:15">bar</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:20">nr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:55"><expr pos:start="55:5" pos:end="55:54"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:10">window</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:20">addr_mem</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:37"><name pos:start="55:24" pos:end="55:27">bar5</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:37">addr_mem</name></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:54"><name pos:start="55:42" pos:end="55:46">quirk</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:51">mem</name><index pos:start="55:52" pos:end="55:54">[<expr pos:start="55:53" pos:end="55:53"><literal type="number" pos:start="55:53" pos:end="55:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:55"><expr pos:start="57:5" pos:end="57:54"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:10">window</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:20">data_mem</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:37"><name pos:start="57:24" pos:end="57:27">bar5</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:37">data_mem</name></name> <operator pos:start="57:39" pos:end="57:39">=</operator> <operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:54"><name pos:start="57:42" pos:end="57:46">quirk</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:51">mem</name><index pos:start="57:52" pos:end="57:54">[<expr pos:start="57:53" pos:end="57:53"><literal type="number" pos:start="57:53" pos:end="57:53">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="65:70"><expr pos:start="61:5" pos:end="65:69"><call pos:start="61:5" pos:end="65:69"><name pos:start="61:5" pos:end="61:25">memory_region_init_io</name><argument_list pos:start="61:26" pos:end="65:69">(<argument pos:start="61:27" pos:end="61:42"><expr pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:32">window</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:42">addr_mem</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:56"><expr pos:start="61:45" pos:end="61:56"><call pos:start="61:45" pos:end="61:56"><name pos:start="61:45" pos:end="61:50">OBJECT</name><argument_list pos:start="61:51" pos:end="61:56">(<argument pos:start="61:52" pos:end="61:55"><expr pos:start="61:52" pos:end="61:55"><name pos:start="61:52" pos:end="61:55">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="63:27" pos:end="63:60"><expr pos:start="63:27" pos:end="63:60"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:60">vfio_generic_window_address_quirk</name></expr></argument>, <argument pos:start="63:63" pos:end="63:68"><expr pos:start="63:63" pos:end="63:68"><name pos:start="63:63" pos:end="63:68">window</name></expr></argument>,

                          <argument pos:start="65:27" pos:end="65:65"><expr pos:start="65:27" pos:end="65:65"><literal type="string" pos:start="65:27" pos:end="65:65">"vfio-nvidia-bar5-window-address-quirk"</literal></expr></argument>, <argument pos:start="65:68" pos:end="65:68"><expr pos:start="65:68" pos:end="65:68"><literal type="number" pos:start="65:68" pos:end="65:68">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="71:61"><expr pos:start="67:5" pos:end="71:60"><call pos:start="67:5" pos:end="71:60"><name pos:start="67:5" pos:end="67:39">memory_region_add_subregion_overlap</name><argument_list pos:start="67:40" pos:end="71:60">(<argument pos:start="67:41" pos:end="67:66"><expr pos:start="67:41" pos:end="67:66"><operator pos:start="67:41" pos:end="67:41">&amp;</operator><name pos:start="67:42" pos:end="67:55"><name pos:start="67:42" pos:end="67:45">vdev</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:51">bars</name><index pos:start="67:52" pos:end="67:55">[<expr pos:start="67:53" pos:end="67:54"><name pos:start="67:53" pos:end="67:54">nr</name></expr>]</index></name><operator pos:start="67:56" pos:end="67:56">.</operator><name pos:start="67:57" pos:end="67:66"><name pos:start="67:57" pos:end="67:62">region</name><operator pos:start="67:63" pos:end="67:63">.</operator><name pos:start="67:64" pos:end="67:66">mem</name></name></expr></argument>,

                                        <argument pos:start="69:41" pos:end="69:62"><expr pos:start="69:41" pos:end="69:62"><name pos:start="69:41" pos:end="69:62"><name pos:start="69:41" pos:end="69:46">window</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:62">address_offset</name></name></expr></argument>,

                                        <argument pos:start="71:41" pos:end="71:56"><expr pos:start="71:41" pos:end="71:56"><name pos:start="71:41" pos:end="71:56"><name pos:start="71:41" pos:end="71:46">window</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:56">addr_mem</name></name></expr></argument>, <argument pos:start="71:59" pos:end="71:59"><expr pos:start="71:59" pos:end="71:59"><literal type="number" pos:start="71:59" pos:end="71:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:29">memory_region_set_enabled</name><argument_list pos:start="73:30" pos:end="73:54">(<argument pos:start="73:31" pos:end="73:46"><expr pos:start="73:31" pos:end="73:46"><name pos:start="73:31" pos:end="73:46"><name pos:start="73:31" pos:end="73:36">window</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:46">addr_mem</name></name></expr></argument>, <argument pos:start="73:49" pos:end="73:53"><expr pos:start="73:49" pos:end="73:53"><name pos:start="73:49" pos:end="73:53">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="81:67"><expr pos:start="77:5" pos:end="81:66"><call pos:start="77:5" pos:end="81:66"><name pos:start="77:5" pos:end="77:25">memory_region_init_io</name><argument_list pos:start="77:26" pos:end="81:66">(<argument pos:start="77:27" pos:end="77:42"><expr pos:start="77:27" pos:end="77:42"><name pos:start="77:27" pos:end="77:42"><name pos:start="77:27" pos:end="77:32">window</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:42">data_mem</name></name></expr></argument>, <argument pos:start="77:45" pos:end="77:56"><expr pos:start="77:45" pos:end="77:56"><call pos:start="77:45" pos:end="77:56"><name pos:start="77:45" pos:end="77:50">OBJECT</name><argument_list pos:start="77:51" pos:end="77:56">(<argument pos:start="77:52" pos:end="77:55"><expr pos:start="77:52" pos:end="77:55"><name pos:start="77:52" pos:end="77:55">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="79:27" pos:end="79:57"><expr pos:start="79:27" pos:end="79:57"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:57">vfio_generic_window_data_quirk</name></expr></argument>, <argument pos:start="79:60" pos:end="79:65"><expr pos:start="79:60" pos:end="79:65"><name pos:start="79:60" pos:end="79:65">window</name></expr></argument>,

                          <argument pos:start="81:27" pos:end="81:62"><expr pos:start="81:27" pos:end="81:62"><literal type="string" pos:start="81:27" pos:end="81:62">"vfio-nvidia-bar5-window-data-quirk"</literal></expr></argument>, <argument pos:start="81:65" pos:end="81:65"><expr pos:start="81:65" pos:end="81:65"><literal type="number" pos:start="81:65" pos:end="81:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="87:61"><expr pos:start="83:5" pos:end="87:60"><call pos:start="83:5" pos:end="87:60"><name pos:start="83:5" pos:end="83:39">memory_region_add_subregion_overlap</name><argument_list pos:start="83:40" pos:end="87:60">(<argument pos:start="83:41" pos:end="83:66"><expr pos:start="83:41" pos:end="83:66"><operator pos:start="83:41" pos:end="83:41">&amp;</operator><name pos:start="83:42" pos:end="83:55"><name pos:start="83:42" pos:end="83:45">vdev</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:51">bars</name><index pos:start="83:52" pos:end="83:55">[<expr pos:start="83:53" pos:end="83:54"><name pos:start="83:53" pos:end="83:54">nr</name></expr>]</index></name><operator pos:start="83:56" pos:end="83:56">.</operator><name pos:start="83:57" pos:end="83:66"><name pos:start="83:57" pos:end="83:62">region</name><operator pos:start="83:63" pos:end="83:63">.</operator><name pos:start="83:64" pos:end="83:66">mem</name></name></expr></argument>,

                                        <argument pos:start="85:41" pos:end="85:59"><expr pos:start="85:41" pos:end="85:59"><name pos:start="85:41" pos:end="85:59"><name pos:start="85:41" pos:end="85:46">window</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:59">data_offset</name></name></expr></argument>,

                                        <argument pos:start="87:41" pos:end="87:56"><expr pos:start="87:41" pos:end="87:56"><name pos:start="87:41" pos:end="87:56"><name pos:start="87:41" pos:end="87:46">window</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:56">data_mem</name></name></expr></argument>, <argument pos:start="87:59" pos:end="87:59"><expr pos:start="87:59" pos:end="87:59"><literal type="number" pos:start="87:59" pos:end="87:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><call pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:29">memory_region_set_enabled</name><argument_list pos:start="89:30" pos:end="89:54">(<argument pos:start="89:31" pos:end="89:46"><expr pos:start="89:31" pos:end="89:46"><name pos:start="89:31" pos:end="89:46"><name pos:start="89:31" pos:end="89:36">window</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:46">data_mem</name></name></expr></argument>, <argument pos:start="89:49" pos:end="89:53"><expr pos:start="89:49" pos:end="89:53"><name pos:start="89:49" pos:end="89:53">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="97:62"><expr pos:start="93:5" pos:end="97:61"><call pos:start="93:5" pos:end="97:61"><name pos:start="93:5" pos:end="93:25">memory_region_init_io</name><argument_list pos:start="93:26" pos:end="97:61">(<argument pos:start="93:27" pos:end="93:40"><expr pos:start="93:27" pos:end="93:40"><operator pos:start="93:27" pos:end="93:27">&amp;</operator><name pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:32">quirk</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:37">mem</name><index pos:start="93:38" pos:end="93:40">[<expr pos:start="93:39" pos:end="93:39"><literal type="number" pos:start="93:39" pos:end="93:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><call pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:48">OBJECT</name><argument_list pos:start="93:49" pos:end="93:54">(<argument pos:start="93:50" pos:end="93:53"><expr pos:start="93:50" pos:end="93:53"><name pos:start="93:50" pos:end="93:53">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="95:27" pos:end="95:56"><expr pos:start="95:27" pos:end="95:56"><operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:56">vfio_nvidia_bar5_quirk_master</name></expr></argument>, <argument pos:start="95:59" pos:end="95:62"><expr pos:start="95:59" pos:end="95:62"><name pos:start="95:59" pos:end="95:62">bar5</name></expr></argument>,

                          <argument pos:start="97:27" pos:end="97:57"><expr pos:start="97:27" pos:end="97:57"><literal type="string" pos:start="97:27" pos:end="97:57">"vfio-nvidia-bar5-master-quirk"</literal></expr></argument>, <argument pos:start="97:60" pos:end="97:60"><expr pos:start="97:60" pos:end="97:60"><literal type="number" pos:start="97:60" pos:end="97:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="101:62"><expr pos:start="99:5" pos:end="101:61"><call pos:start="99:5" pos:end="101:61"><name pos:start="99:5" pos:end="99:39">memory_region_add_subregion_overlap</name><argument_list pos:start="99:40" pos:end="101:61">(<argument pos:start="99:41" pos:end="99:66"><expr pos:start="99:41" pos:end="99:66"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:55"><name pos:start="99:42" pos:end="99:45">vdev</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:51">bars</name><index pos:start="99:52" pos:end="99:55">[<expr pos:start="99:53" pos:end="99:54"><name pos:start="99:53" pos:end="99:54">nr</name></expr>]</index></name><operator pos:start="99:56" pos:end="99:56">.</operator><name pos:start="99:57" pos:end="99:66"><name pos:start="99:57" pos:end="99:62">region</name><operator pos:start="99:63" pos:end="99:63">.</operator><name pos:start="99:64" pos:end="99:66">mem</name></name></expr></argument>,

                                        <argument pos:start="101:41" pos:end="101:41"><expr pos:start="101:41" pos:end="101:41"><literal type="number" pos:start="101:41" pos:end="101:41">0</literal></expr></argument>, <argument pos:start="101:44" pos:end="101:57"><expr pos:start="101:44" pos:end="101:57"><operator pos:start="101:44" pos:end="101:44">&amp;</operator><name pos:start="101:45" pos:end="101:57"><name pos:start="101:45" pos:end="101:49">quirk</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:54">mem</name><index pos:start="101:55" pos:end="101:57">[<expr pos:start="101:56" pos:end="101:56"><literal type="number" pos:start="101:56" pos:end="101:56">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:60" pos:end="101:60"><expr pos:start="101:60" pos:end="101:60"><literal type="number" pos:start="101:60" pos:end="101:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="109:62"><expr pos:start="105:5" pos:end="109:61"><call pos:start="105:5" pos:end="109:61"><name pos:start="105:5" pos:end="105:25">memory_region_init_io</name><argument_list pos:start="105:26" pos:end="109:61">(<argument pos:start="105:27" pos:end="105:40"><expr pos:start="105:27" pos:end="105:40"><operator pos:start="105:27" pos:end="105:27">&amp;</operator><name pos:start="105:28" pos:end="105:40"><name pos:start="105:28" pos:end="105:32">quirk</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:37">mem</name><index pos:start="105:38" pos:end="105:40">[<expr pos:start="105:39" pos:end="105:39"><literal type="number" pos:start="105:39" pos:end="105:39">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:43" pos:end="105:54"><expr pos:start="105:43" pos:end="105:54"><call pos:start="105:43" pos:end="105:54"><name pos:start="105:43" pos:end="105:48">OBJECT</name><argument_list pos:start="105:49" pos:end="105:54">(<argument pos:start="105:50" pos:end="105:53"><expr pos:start="105:50" pos:end="105:53"><name pos:start="105:50" pos:end="105:53">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="107:27" pos:end="107:56"><expr pos:start="107:27" pos:end="107:56"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:56">vfio_nvidia_bar5_quirk_enable</name></expr></argument>, <argument pos:start="107:59" pos:end="107:62"><expr pos:start="107:59" pos:end="107:62"><name pos:start="107:59" pos:end="107:62">bar5</name></expr></argument>,

                          <argument pos:start="109:27" pos:end="109:57"><expr pos:start="109:27" pos:end="109:57"><literal type="string" pos:start="109:27" pos:end="109:57">"vfio-nvidia-bar5-enable-quirk"</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:60"><expr pos:start="109:60" pos:end="109:60"><literal type="number" pos:start="109:60" pos:end="109:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="113:62"><expr pos:start="111:5" pos:end="113:61"><call pos:start="111:5" pos:end="113:61"><name pos:start="111:5" pos:end="111:39">memory_region_add_subregion_overlap</name><argument_list pos:start="111:40" pos:end="113:61">(<argument pos:start="111:41" pos:end="111:66"><expr pos:start="111:41" pos:end="111:66"><operator pos:start="111:41" pos:end="111:41">&amp;</operator><name pos:start="111:42" pos:end="111:55"><name pos:start="111:42" pos:end="111:45">vdev</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:51">bars</name><index pos:start="111:52" pos:end="111:55">[<expr pos:start="111:53" pos:end="111:54"><name pos:start="111:53" pos:end="111:54">nr</name></expr>]</index></name><operator pos:start="111:56" pos:end="111:56">.</operator><name pos:start="111:57" pos:end="111:66"><name pos:start="111:57" pos:end="111:62">region</name><operator pos:start="111:63" pos:end="111:63">.</operator><name pos:start="111:64" pos:end="111:66">mem</name></name></expr></argument>,

                                        <argument pos:start="113:41" pos:end="113:41"><expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">4</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:57"><expr pos:start="113:44" pos:end="113:57"><operator pos:start="113:44" pos:end="113:44">&amp;</operator><name pos:start="113:45" pos:end="113:57"><name pos:start="113:45" pos:end="113:49">quirk</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:54">mem</name><index pos:start="113:55" pos:end="113:57">[<expr pos:start="113:56" pos:end="113:56"><literal type="number" pos:start="113:56" pos:end="113:56">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:60" pos:end="113:60"><expr pos:start="113:60" pos:end="113:60"><literal type="number" pos:start="113:60" pos:end="113:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:59"><expr pos:start="117:5" pos:end="117:58"><call pos:start="117:5" pos:end="117:58"><name pos:start="117:5" pos:end="117:21">QLIST_INSERT_HEAD</name><argument_list pos:start="117:22" pos:end="117:58">(<argument pos:start="117:23" pos:end="117:44"><expr pos:start="117:23" pos:end="117:44"><operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:37"><name pos:start="117:24" pos:end="117:27">vdev</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:33">bars</name><index pos:start="117:34" pos:end="117:37">[<expr pos:start="117:35" pos:end="117:36"><name pos:start="117:35" pos:end="117:36">nr</name></expr>]</index></name><operator pos:start="117:38" pos:end="117:38">.</operator><name pos:start="117:39" pos:end="117:44">quirks</name></expr></argument>, <argument pos:start="117:47" pos:end="117:51"><expr pos:start="117:47" pos:end="117:51"><name pos:start="117:47" pos:end="117:51">quirk</name></expr></argument>, <argument pos:start="117:54" pos:end="117:57"><expr pos:start="117:54" pos:end="117:57"><name pos:start="117:54" pos:end="117:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:60"><expr pos:start="121:5" pos:end="121:59"><call pos:start="121:5" pos:end="121:59"><name pos:start="121:5" pos:end="121:38">trace_vfio_quirk_nvidia_bar5_probe</name><argument_list pos:start="121:39" pos:end="121:59">(<argument pos:start="121:40" pos:end="121:58"><expr pos:start="121:40" pos:end="121:58"><name pos:start="121:40" pos:end="121:58"><name pos:start="121:40" pos:end="121:43">vdev</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:53">vbasedev</name><operator pos:start="121:54" pos:end="121:54">.</operator><name pos:start="121:55" pos:end="121:58">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
