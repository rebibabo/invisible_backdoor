<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24792.c" pos:tabs="8"><function pos:start="1:1" pos:end="326:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rscc_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:69">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:51"><decl pos:start="3:38" pos:end="3:51"><type pos:start="3:38" pos:end="3:51"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:51">got_frame</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">AVPacket</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="326:15">{<block_content pos:start="7:5" pos:end="326:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">RsccContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">ctx</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">GetByteContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">gbc</name> <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:30">ctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">GetByteContext</name></type> <name pos:start="11:20" pos:end="11:28">tiles_gbc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">frame</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">pixels</name></decl>, <decl pos:start="15:28" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:31">raw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:27">inflated_tiles</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:46"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">tiles_nb</name></decl>, <decl pos:start="19:19" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:29">packed_size</name></decl>, <decl pos:start="19:32" pos:end="19:45"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:32" pos:end="19:41">pixel_size</name> <init pos:start="19:43" pos:end="19:45">= <expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:14">ret</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><call pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:20">bytestream2_init</name><argument_list pos:start="25:21" pos:end="25:51">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">gbc</name></expr></argument>, <argument pos:start="25:27" pos:end="25:37"><expr pos:start="25:27" pos:end="25:37"><name pos:start="25:27" pos:end="25:37"><name pos:start="25:27" pos:end="25:31">avpkt</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:37">data</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:44">avpkt</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:20">/* Size check */</comment>

    <if_stmt pos:start="31:5" pos:end="326:15"><if pos:start="31:5" pos:end="326:15">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:34">bytestream2_get_bytes_left</name><argument_list pos:start="31:35" pos:end="31:39">(<argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="31:41" pos:end="31:41">&lt;</operator> <literal type="number" pos:start="31:43" pos:end="31:44">12</literal></expr>)</condition> <block pos:start="31:47" pos:end="326:15">{<block_content pos:start="33:9" pos:end="326:15">

        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><call pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:75">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:61"><expr pos:start="33:37" pos:end="33:61"><literal type="string" pos:start="33:37" pos:end="33:61">"Packet too small (%d)\n"</literal></expr></argument>, <argument pos:start="33:64" pos:end="33:74"><expr pos:start="33:64" pos:end="33:74"><name pos:start="33:64" pos:end="33:74"><name pos:start="33:64" pos:end="33:68">avpkt</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return>




    <comment type="block" pos:start="40:5" pos:end="40:54">/* Read number of tiles, and allocate the array */</comment>

    <expr_stmt pos:start="42:5" pos:end="42:41"><expr pos:start="42:5" pos:end="42:40"><name pos:start="42:5" pos:end="42:12">tiles_nb</name> <operator pos:start="42:14" pos:end="42:14">=</operator> <call pos:start="42:16" pos:end="42:40"><name pos:start="42:16" pos:end="42:35">bytestream2_get_le16</name><argument_list pos:start="42:36" pos:end="42:40">(<argument pos:start="42:37" pos:end="42:39"><expr pos:start="42:37" pos:end="42:39"><name pos:start="42:37" pos:end="42:39">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="44:5" pos:end="46:51"><expr pos:start="44:5" pos:end="46:50"><call pos:start="44:5" pos:end="46:50"><name pos:start="44:5" pos:end="44:18">av_fast_malloc</name><argument_list pos:start="44:19" pos:end="46:50">(<argument pos:start="44:20" pos:end="44:30"><expr pos:start="44:20" pos:end="44:30"><operator pos:start="44:20" pos:end="44:20">&amp;</operator><name pos:start="44:21" pos:end="44:30"><name pos:start="44:21" pos:end="44:23">ctx</name><operator pos:start="44:24" pos:end="44:25">-&gt;</operator><name pos:start="44:26" pos:end="44:30">tiles</name></name></expr></argument>, <argument pos:start="44:33" pos:end="44:48"><expr pos:start="44:33" pos:end="44:48"><operator pos:start="44:33" pos:end="44:33">&amp;</operator><name pos:start="44:34" pos:end="44:48"><name pos:start="44:34" pos:end="44:36">ctx</name><operator pos:start="44:37" pos:end="44:38">-&gt;</operator><name pos:start="44:39" pos:end="44:48">tiles_size</name></name></expr></argument>,

                   <argument pos:start="46:20" pos:end="46:49"><expr pos:start="46:20" pos:end="46:49"><name pos:start="46:20" pos:end="46:27">tiles_nb</name> <operator pos:start="46:29" pos:end="46:29">*</operator> <sizeof pos:start="46:31" pos:end="46:49">sizeof<argument_list pos:start="46:37" pos:end="46:49">(<argument pos:start="46:38" pos:end="46:48"><expr pos:start="46:38" pos:end="46:48"><operator pos:start="46:38" pos:end="46:38">*</operator><name pos:start="46:39" pos:end="46:48"><name pos:start="46:39" pos:end="46:41">ctx</name><operator pos:start="46:42" pos:end="46:43">-&gt;</operator><name pos:start="46:44" pos:end="46:48">tiles</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="48:5" pos:end="326:15"><if pos:start="48:5" pos:end="326:15">if <condition pos:start="48:8" pos:end="48:20">(<expr pos:start="48:9" pos:end="48:19"><operator pos:start="48:9" pos:end="48:9">!</operator><name pos:start="48:10" pos:end="48:19"><name pos:start="48:10" pos:end="48:12">ctx</name><operator pos:start="48:13" pos:end="48:14">-&gt;</operator><name pos:start="48:15" pos:end="48:19">tiles</name></name></expr>)</condition> <block pos:start="48:22" pos:end="326:15">{<block_content pos:start="50:9" pos:end="326:15">

        <expr_stmt pos:start="50:9" pos:end="50:30"><expr pos:start="50:9" pos:end="50:29"><name pos:start="50:9" pos:end="50:11">ret</name> <operator pos:start="50:13" pos:end="50:13">=</operator> <call pos:start="50:15" pos:end="50:29"><name pos:start="50:15" pos:end="50:21">AVERROR</name><argument_list pos:start="50:22" pos:end="50:29">(<argument pos:start="50:23" pos:end="50:28"><expr pos:start="50:23" pos:end="50:28"><name pos:start="50:23" pos:end="50:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="56:5" pos:end="56:68"><expr pos:start="56:5" pos:end="56:67"><call pos:start="56:5" pos:end="56:67"><name pos:start="56:5" pos:end="56:10">av_log</name><argument_list pos:start="56:11" pos:end="56:67">(<argument pos:start="56:12" pos:end="56:16"><expr pos:start="56:12" pos:end="56:16"><name pos:start="56:12" pos:end="56:16">avctx</name></expr></argument>, <argument pos:start="56:19" pos:end="56:30"><expr pos:start="56:19" pos:end="56:30"><name pos:start="56:19" pos:end="56:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="56:33" pos:end="56:56"><expr pos:start="56:33" pos:end="56:56"><literal type="string" pos:start="56:33" pos:end="56:56">"Frame with %d tiles.\n"</literal></expr></argument>, <argument pos:start="56:59" pos:end="56:66"><expr pos:start="56:59" pos:end="56:66"><name pos:start="56:59" pos:end="56:66">tiles_nb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="60:5" pos:end="64:71">/* When there are more than 5 tiles, they are packed together with

     * a size header. When that size does not match the number of tiles

     * times the tile size, it means it needs to be inflated as well */</comment>

    <if_stmt pos:start="66:5" pos:end="326:15"><if pos:start="66:5" pos:end="326:15">if <condition pos:start="66:8" pos:end="66:21">(<expr pos:start="66:9" pos:end="66:20"><name pos:start="66:9" pos:end="66:16">tiles_nb</name> <operator pos:start="66:18" pos:end="66:18">&gt;</operator> <literal type="number" pos:start="66:20" pos:end="66:20">5</literal></expr>)</condition> <block pos:start="66:23" pos:end="326:15">{<block_content pos:start="68:9" pos:end="326:15">

        <decl_stmt pos:start="68:9" pos:end="68:33"><decl pos:start="68:9" pos:end="68:32"><type pos:start="68:9" pos:end="68:14"><name pos:start="68:9" pos:end="68:14">uLongf</name></type> <name pos:start="68:16" pos:end="68:32">packed_tiles_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="72:9" pos:end="78:58"><if pos:start="72:9" pos:end="74:58">if <condition pos:start="72:12" pos:end="72:26">(<expr pos:start="72:13" pos:end="72:25"><name pos:start="72:13" pos:end="72:20">tiles_nb</name> <operator pos:start="72:22" pos:end="72:22">&lt;</operator> <literal type="number" pos:start="72:24" pos:end="72:25">32</literal></expr>)</condition><block type="pseudo" pos:start="74:13" pos:end="74:58"><block_content pos:start="74:13" pos:end="74:58">

            <expr_stmt pos:start="74:13" pos:end="74:58"><expr pos:start="74:13" pos:end="74:57"><name pos:start="74:13" pos:end="74:29">packed_tiles_size</name> <operator pos:start="74:31" pos:end="74:31">=</operator> <call pos:start="74:33" pos:end="74:57"><name pos:start="74:33" pos:end="74:52">bytestream2_get_byte</name><argument_list pos:start="74:53" pos:end="74:57">(<argument pos:start="74:54" pos:end="74:56"><expr pos:start="74:54" pos:end="74:56"><name pos:start="74:54" pos:end="74:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="76:9" pos:end="78:58">else<block type="pseudo" pos:start="78:13" pos:end="78:58"><block_content pos:start="78:13" pos:end="78:58">

            <expr_stmt pos:start="78:13" pos:end="78:58"><expr pos:start="78:13" pos:end="78:57"><name pos:start="78:13" pos:end="78:29">packed_tiles_size</name> <operator pos:start="78:31" pos:end="78:31">=</operator> <call pos:start="78:33" pos:end="78:57"><name pos:start="78:33" pos:end="78:52">bytestream2_get_le16</name><argument_list pos:start="78:53" pos:end="78:57">(<argument pos:start="78:54" pos:end="78:56"><expr pos:start="78:54" pos:end="78:56"><name pos:start="78:54" pos:end="78:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="82:9" pos:end="82:73"><expr pos:start="82:9" pos:end="82:72"><call pos:start="82:9" pos:end="82:72"><name pos:start="82:9" pos:end="82:15">ff_dlog</name><argument_list pos:start="82:16" pos:end="82:72">(<argument pos:start="82:17" pos:end="82:21"><expr pos:start="82:17" pos:end="82:21"><name pos:start="82:17" pos:end="82:21">avctx</name></expr></argument>, <argument pos:start="82:24" pos:end="82:52"><expr pos:start="82:24" pos:end="82:52"><literal type="string" pos:start="82:24" pos:end="82:52">"packed tiles of size %lu.\n"</literal></expr></argument>, <argument pos:start="82:55" pos:end="82:71"><expr pos:start="82:55" pos:end="82:71"><name pos:start="82:55" pos:end="82:71">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="86:9" pos:end="86:78">/* If necessary, uncompress tiles, and hijack the bytestream reader */</comment>

        <if_stmt pos:start="88:9" pos:end="326:15"><if pos:start="88:9" pos:end="326:15">if <condition pos:start="88:12" pos:end="88:54">(<expr pos:start="88:13" pos:end="88:53"><name pos:start="88:13" pos:end="88:29">packed_tiles_size</name> <operator pos:start="88:31" pos:end="88:32">!=</operator> <name pos:start="88:34" pos:end="88:41">tiles_nb</name> <operator pos:start="88:43" pos:end="88:43">*</operator> <name pos:start="88:45" pos:end="88:53">TILE_SIZE</name></expr>)</condition> <block pos:start="88:56" pos:end="326:15">{<block_content pos:start="90:13" pos:end="326:15">

            <decl_stmt pos:start="90:13" pos:end="90:49"><decl pos:start="90:13" pos:end="90:48"><type pos:start="90:13" pos:end="90:18"><name pos:start="90:13" pos:end="90:18">uLongf</name></type> <name pos:start="90:20" pos:end="90:25">length</name> <init pos:start="90:27" pos:end="90:48">= <expr pos:start="90:29" pos:end="90:48"><name pos:start="90:29" pos:end="90:36">tiles_nb</name> <operator pos:start="90:38" pos:end="90:38">*</operator> <name pos:start="90:40" pos:end="90:48">TILE_SIZE</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="92:13" pos:end="92:47"><expr pos:start="92:13" pos:end="92:46"><name pos:start="92:13" pos:end="92:26">inflated_tiles</name> <operator pos:start="92:28" pos:end="92:28">=</operator> <call pos:start="92:30" pos:end="92:46"><name pos:start="92:30" pos:end="92:38">av_malloc</name><argument_list pos:start="92:39" pos:end="92:46">(<argument pos:start="92:40" pos:end="92:45"><expr pos:start="92:40" pos:end="92:45"><name pos:start="92:40" pos:end="92:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="94:13" pos:end="326:15"><if pos:start="94:13" pos:end="326:15">if <condition pos:start="94:16" pos:end="94:32">(<expr pos:start="94:17" pos:end="94:31"><operator pos:start="94:17" pos:end="94:17">!</operator><name pos:start="94:18" pos:end="94:31">inflated_tiles</name></expr>)</condition> <block pos:start="94:34" pos:end="326:15">{<block_content pos:start="96:17" pos:end="326:15">

                <expr_stmt pos:start="96:17" pos:end="96:38"><expr pos:start="96:17" pos:end="96:37"><name pos:start="96:17" pos:end="96:19">ret</name> <operator pos:start="96:21" pos:end="96:21">=</operator> <call pos:start="96:23" pos:end="96:37"><name pos:start="96:23" pos:end="96:29">AVERROR</name><argument_list pos:start="96:30" pos:end="96:37">(<argument pos:start="96:31" pos:end="96:36"><expr pos:start="96:31" pos:end="96:36"><name pos:start="96:31" pos:end="96:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="102:13" pos:end="104:61"><expr pos:start="102:13" pos:end="104:60"><name pos:start="102:13" pos:end="102:15">ret</name> <operator pos:start="102:17" pos:end="102:17">=</operator> <call pos:start="102:19" pos:end="104:60"><name pos:start="102:19" pos:end="102:28">uncompress</name><argument_list pos:start="102:29" pos:end="104:60">(<argument pos:start="102:30" pos:end="102:43"><expr pos:start="102:30" pos:end="102:43"><name pos:start="102:30" pos:end="102:43">inflated_tiles</name></expr></argument>, <argument pos:start="102:46" pos:end="102:52"><expr pos:start="102:46" pos:end="102:52"><operator pos:start="102:46" pos:end="102:46">&amp;</operator><name pos:start="102:47" pos:end="102:52">length</name></expr></argument>,

                             <argument pos:start="104:30" pos:end="104:40"><expr pos:start="104:30" pos:end="104:40"><name pos:start="104:30" pos:end="104:40"><name pos:start="104:30" pos:end="104:32">gbc</name><operator pos:start="104:33" pos:end="104:34">-&gt;</operator><name pos:start="104:35" pos:end="104:40">buffer</name></name></expr></argument>, <argument pos:start="104:43" pos:end="104:59"><expr pos:start="104:43" pos:end="104:59"><name pos:start="104:43" pos:end="104:59">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="106:13" pos:end="326:15"><if pos:start="106:13" pos:end="326:15">if <condition pos:start="106:16" pos:end="106:20">(<expr pos:start="106:17" pos:end="106:19"><name pos:start="106:17" pos:end="106:19">ret</name></expr>)</condition> <block pos:start="106:22" pos:end="326:15">{<block_content pos:start="108:17" pos:end="326:15">

                <expr_stmt pos:start="108:17" pos:end="108:77"><expr pos:start="108:17" pos:end="108:76"><call pos:start="108:17" pos:end="108:76"><name pos:start="108:17" pos:end="108:22">av_log</name><argument_list pos:start="108:23" pos:end="108:76">(<argument pos:start="108:24" pos:end="108:28"><expr pos:start="108:24" pos:end="108:28"><name pos:start="108:24" pos:end="108:28">avctx</name></expr></argument>, <argument pos:start="108:31" pos:end="108:42"><expr pos:start="108:31" pos:end="108:42"><name pos:start="108:31" pos:end="108:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="108:45" pos:end="108:70"><expr pos:start="108:45" pos:end="108:70"><literal type="string" pos:start="108:45" pos:end="108:70">"Tile deflate error %d.\n"</literal></expr></argument>, <argument pos:start="108:73" pos:end="108:75"><expr pos:start="108:73" pos:end="108:75"><name pos:start="108:73" pos:end="108:75">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="110:17" pos:end="110:38"><expr pos:start="110:17" pos:end="110:37"><name pos:start="110:17" pos:end="110:19">ret</name> <operator pos:start="110:21" pos:end="110:21">=</operator> <name pos:start="110:23" pos:end="110:37">AVERROR_UNKNOWN</name></expr>;</expr_stmt>





            <comment type="block" pos:start="116:13" pos:end="118:66">/* Skip the compressed tile section in the main byte reader,

             * and point it to read the newly uncompressed data */</comment>

            <expr_stmt pos:start="120:13" pos:end="120:53"><expr pos:start="120:13" pos:end="120:52"><call pos:start="120:13" pos:end="120:52"><name pos:start="120:13" pos:end="120:28">bytestream2_skip</name><argument_list pos:start="120:29" pos:end="120:52">(<argument pos:start="120:30" pos:end="120:32"><expr pos:start="120:30" pos:end="120:32"><name pos:start="120:30" pos:end="120:32">gbc</name></expr></argument>, <argument pos:start="120:35" pos:end="120:51"><expr pos:start="120:35" pos:end="120:51"><name pos:start="120:35" pos:end="120:51">packed_tiles_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="122:13" pos:end="122:65"><expr pos:start="122:13" pos:end="122:64"><call pos:start="122:13" pos:end="122:64"><name pos:start="122:13" pos:end="122:28">bytestream2_init</name><argument_list pos:start="122:29" pos:end="122:64">(<argument pos:start="122:30" pos:end="122:39"><expr pos:start="122:30" pos:end="122:39"><operator pos:start="122:30" pos:end="122:30">&amp;</operator><name pos:start="122:31" pos:end="122:39">tiles_gbc</name></expr></argument>, <argument pos:start="122:42" pos:end="122:55"><expr pos:start="122:42" pos:end="122:55"><name pos:start="122:42" pos:end="122:55">inflated_tiles</name></expr></argument>, <argument pos:start="122:58" pos:end="122:63"><expr pos:start="122:58" pos:end="122:63"><name pos:start="122:58" pos:end="122:63">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="124:13" pos:end="124:29"><expr pos:start="124:13" pos:end="124:28"><name pos:start="124:13" pos:end="124:15">gbc</name> <operator pos:start="124:17" pos:end="124:17">=</operator> <operator pos:start="124:19" pos:end="124:19">&amp;</operator><name pos:start="124:20" pos:end="124:28">tiles_gbc</name></expr>;</expr_stmt>





    <comment type="block" pos:start="130:5" pos:end="130:78">/* Fill in array of tiles, keeping track of how many pixels are updated */</comment>

    <for pos:start="132:5" pos:end="326:15">for <control pos:start="132:9" pos:end="132:34">(<init pos:start="132:10" pos:end="132:15"><expr pos:start="132:10" pos:end="132:14"><name pos:start="132:10" pos:end="132:10">i</name> <operator pos:start="132:12" pos:end="132:12">=</operator> <literal type="number" pos:start="132:14" pos:end="132:14">0</literal></expr>;</init> <condition pos:start="132:17" pos:end="132:29"><expr pos:start="132:17" pos:end="132:28"><name pos:start="132:17" pos:end="132:17">i</name> <operator pos:start="132:19" pos:end="132:19">&lt;</operator> <name pos:start="132:21" pos:end="132:28">tiles_nb</name></expr>;</condition> <incr pos:start="132:31" pos:end="132:33"><expr pos:start="132:31" pos:end="132:33"><name pos:start="132:31" pos:end="132:31">i</name><operator pos:start="132:32" pos:end="132:33">++</operator></expr></incr>)</control> <block pos:start="132:36" pos:end="326:15">{<block_content pos:start="134:9" pos:end="326:15">

        <expr_stmt pos:start="134:9" pos:end="134:52"><expr pos:start="134:9" pos:end="134:51"><name pos:start="134:9" pos:end="134:21"><name pos:start="134:9" pos:end="134:11">ctx</name><operator pos:start="134:12" pos:end="134:13">-&gt;</operator><name pos:start="134:14" pos:end="134:18">tiles</name><index pos:start="134:19" pos:end="134:21">[<expr pos:start="134:20" pos:end="134:20"><name pos:start="134:20" pos:end="134:20">i</name></expr>]</index></name><operator pos:start="134:22" pos:end="134:22">.</operator><name pos:start="134:23" pos:end="134:23">x</name> <operator pos:start="134:25" pos:end="134:25">=</operator> <call pos:start="134:27" pos:end="134:51"><name pos:start="134:27" pos:end="134:46">bytestream2_get_le16</name><argument_list pos:start="134:47" pos:end="134:51">(<argument pos:start="134:48" pos:end="134:50"><expr pos:start="134:48" pos:end="134:50"><name pos:start="134:48" pos:end="134:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="136:9" pos:end="136:52"><expr pos:start="136:9" pos:end="136:51"><name pos:start="136:9" pos:end="136:21"><name pos:start="136:9" pos:end="136:11">ctx</name><operator pos:start="136:12" pos:end="136:13">-&gt;</operator><name pos:start="136:14" pos:end="136:18">tiles</name><index pos:start="136:19" pos:end="136:21">[<expr pos:start="136:20" pos:end="136:20"><name pos:start="136:20" pos:end="136:20">i</name></expr>]</index></name><operator pos:start="136:22" pos:end="136:22">.</operator><name pos:start="136:23" pos:end="136:23">w</name> <operator pos:start="136:25" pos:end="136:25">=</operator> <call pos:start="136:27" pos:end="136:51"><name pos:start="136:27" pos:end="136:46">bytestream2_get_le16</name><argument_list pos:start="136:47" pos:end="136:51">(<argument pos:start="136:48" pos:end="136:50"><expr pos:start="136:48" pos:end="136:50"><name pos:start="136:48" pos:end="136:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="138:9" pos:end="138:52"><expr pos:start="138:9" pos:end="138:51"><name pos:start="138:9" pos:end="138:21"><name pos:start="138:9" pos:end="138:11">ctx</name><operator pos:start="138:12" pos:end="138:13">-&gt;</operator><name pos:start="138:14" pos:end="138:18">tiles</name><index pos:start="138:19" pos:end="138:21">[<expr pos:start="138:20" pos:end="138:20"><name pos:start="138:20" pos:end="138:20">i</name></expr>]</index></name><operator pos:start="138:22" pos:end="138:22">.</operator><name pos:start="138:23" pos:end="138:23">y</name> <operator pos:start="138:25" pos:end="138:25">=</operator> <call pos:start="138:27" pos:end="138:51"><name pos:start="138:27" pos:end="138:46">bytestream2_get_le16</name><argument_list pos:start="138:47" pos:end="138:51">(<argument pos:start="138:48" pos:end="138:50"><expr pos:start="138:48" pos:end="138:50"><name pos:start="138:48" pos:end="138:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="140:9" pos:end="140:52"><expr pos:start="140:9" pos:end="140:51"><name pos:start="140:9" pos:end="140:21"><name pos:start="140:9" pos:end="140:11">ctx</name><operator pos:start="140:12" pos:end="140:13">-&gt;</operator><name pos:start="140:14" pos:end="140:18">tiles</name><index pos:start="140:19" pos:end="140:21">[<expr pos:start="140:20" pos:end="140:20"><name pos:start="140:20" pos:end="140:20">i</name></expr>]</index></name><operator pos:start="140:22" pos:end="140:22">.</operator><name pos:start="140:23" pos:end="140:23">h</name> <operator pos:start="140:25" pos:end="140:25">=</operator> <call pos:start="140:27" pos:end="140:51"><name pos:start="140:27" pos:end="140:46">bytestream2_get_le16</name><argument_list pos:start="140:47" pos:end="140:51">(<argument pos:start="140:48" pos:end="140:50"><expr pos:start="140:48" pos:end="140:50"><name pos:start="140:48" pos:end="140:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="144:9" pos:end="144:78"><expr pos:start="144:9" pos:end="144:77"><name pos:start="144:9" pos:end="144:18">pixel_size</name> <operator pos:start="144:20" pos:end="144:21">+=</operator> <name pos:start="144:23" pos:end="144:35"><name pos:start="144:23" pos:end="144:25">ctx</name><operator pos:start="144:26" pos:end="144:27">-&gt;</operator><name pos:start="144:28" pos:end="144:32">tiles</name><index pos:start="144:33" pos:end="144:35">[<expr pos:start="144:34" pos:end="144:34"><name pos:start="144:34" pos:end="144:34">i</name></expr>]</index></name><operator pos:start="144:36" pos:end="144:36">.</operator><name pos:start="144:37" pos:end="144:37">w</name> <operator pos:start="144:39" pos:end="144:39">*</operator> <name pos:start="144:41" pos:end="144:53"><name pos:start="144:41" pos:end="144:43">ctx</name><operator pos:start="144:44" pos:end="144:45">-&gt;</operator><name pos:start="144:46" pos:end="144:50">tiles</name><index pos:start="144:51" pos:end="144:53">[<expr pos:start="144:52" pos:end="144:52"><name pos:start="144:52" pos:end="144:52">i</name></expr>]</index></name><operator pos:start="144:54" pos:end="144:54">.</operator><name pos:start="144:55" pos:end="144:55">h</name> <operator pos:start="144:57" pos:end="144:57">*</operator> <name pos:start="144:59" pos:end="144:77"><name pos:start="144:59" pos:end="144:61">ctx</name><operator pos:start="144:62" pos:end="144:63">-&gt;</operator><name pos:start="144:64" pos:end="144:77">component_size</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="148:9" pos:end="152:50"><expr pos:start="148:9" pos:end="152:49"><call pos:start="148:9" pos:end="152:49"><name pos:start="148:9" pos:end="148:15">ff_dlog</name><argument_list pos:start="148:16" pos:end="152:49">(<argument pos:start="148:17" pos:end="148:21"><expr pos:start="148:17" pos:end="148:21"><name pos:start="148:17" pos:end="148:21">avctx</name></expr></argument>, <argument pos:start="148:24" pos:end="148:53"><expr pos:start="148:24" pos:end="148:53"><literal type="string" pos:start="148:24" pos:end="148:53">"tile %d orig(%d,%d) %dx%d.\n"</literal></expr></argument>, <argument pos:start="148:56" pos:end="148:56"><expr pos:start="148:56" pos:end="148:56"><name pos:start="148:56" pos:end="148:56">i</name></expr></argument>,

                <argument pos:start="150:17" pos:end="150:31"><expr pos:start="150:17" pos:end="150:31"><name pos:start="150:17" pos:end="150:29"><name pos:start="150:17" pos:end="150:19">ctx</name><operator pos:start="150:20" pos:end="150:21">-&gt;</operator><name pos:start="150:22" pos:end="150:26">tiles</name><index pos:start="150:27" pos:end="150:29">[<expr pos:start="150:28" pos:end="150:28"><name pos:start="150:28" pos:end="150:28">i</name></expr>]</index></name><operator pos:start="150:30" pos:end="150:30">.</operator><name pos:start="150:31" pos:end="150:31">x</name></expr></argument>, <argument pos:start="150:34" pos:end="150:48"><expr pos:start="150:34" pos:end="150:48"><name pos:start="150:34" pos:end="150:46"><name pos:start="150:34" pos:end="150:36">ctx</name><operator pos:start="150:37" pos:end="150:38">-&gt;</operator><name pos:start="150:39" pos:end="150:43">tiles</name><index pos:start="150:44" pos:end="150:46">[<expr pos:start="150:45" pos:end="150:45"><name pos:start="150:45" pos:end="150:45">i</name></expr>]</index></name><operator pos:start="150:47" pos:end="150:47">.</operator><name pos:start="150:48" pos:end="150:48">y</name></expr></argument>,

                <argument pos:start="152:17" pos:end="152:31"><expr pos:start="152:17" pos:end="152:31"><name pos:start="152:17" pos:end="152:29"><name pos:start="152:17" pos:end="152:19">ctx</name><operator pos:start="152:20" pos:end="152:21">-&gt;</operator><name pos:start="152:22" pos:end="152:26">tiles</name><index pos:start="152:27" pos:end="152:29">[<expr pos:start="152:28" pos:end="152:28"><name pos:start="152:28" pos:end="152:28">i</name></expr>]</index></name><operator pos:start="152:30" pos:end="152:30">.</operator><name pos:start="152:31" pos:end="152:31">w</name></expr></argument>, <argument pos:start="152:34" pos:end="152:48"><expr pos:start="152:34" pos:end="152:48"><name pos:start="152:34" pos:end="152:46"><name pos:start="152:34" pos:end="152:36">ctx</name><operator pos:start="152:37" pos:end="152:38">-&gt;</operator><name pos:start="152:39" pos:end="152:43">tiles</name><index pos:start="152:44" pos:end="152:46">[<expr pos:start="152:45" pos:end="152:45"><name pos:start="152:45" pos:end="152:45">i</name></expr>]</index></name><operator pos:start="152:47" pos:end="152:47">.</operator><name pos:start="152:48" pos:end="152:48">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="156:9" pos:end="326:15"><if pos:start="156:9" pos:end="168:9">if <condition pos:start="156:12" pos:end="156:57">(<expr pos:start="156:13" pos:end="156:56"><name pos:start="156:13" pos:end="156:25"><name pos:start="156:13" pos:end="156:15">ctx</name><operator pos:start="156:16" pos:end="156:17">-&gt;</operator><name pos:start="156:18" pos:end="156:22">tiles</name><index pos:start="156:23" pos:end="156:25">[<expr pos:start="156:24" pos:end="156:24"><name pos:start="156:24" pos:end="156:24">i</name></expr>]</index></name><operator pos:start="156:26" pos:end="156:26">.</operator><name pos:start="156:27" pos:end="156:27">w</name> <operator pos:start="156:29" pos:end="156:30">==</operator> <literal type="number" pos:start="156:32" pos:end="156:32">0</literal> <operator pos:start="156:34" pos:end="156:35">||</operator> <name pos:start="156:37" pos:end="156:49"><name pos:start="156:37" pos:end="156:39">ctx</name><operator pos:start="156:40" pos:end="156:41">-&gt;</operator><name pos:start="156:42" pos:end="156:46">tiles</name><index pos:start="156:47" pos:end="156:49">[<expr pos:start="156:48" pos:end="156:48"><name pos:start="156:48" pos:end="156:48">i</name></expr>]</index></name><operator pos:start="156:50" pos:end="156:50">.</operator><name pos:start="156:51" pos:end="156:51">h</name> <operator pos:start="156:53" pos:end="156:54">==</operator> <literal type="number" pos:start="156:56" pos:end="156:56">0</literal></expr>)</condition> <block pos:start="156:59" pos:end="168:9">{<block_content pos:start="158:13" pos:end="164:53">

            <expr_stmt pos:start="158:13" pos:end="164:53"><expr pos:start="158:13" pos:end="164:52"><call pos:start="158:13" pos:end="164:52"><name pos:start="158:13" pos:end="158:18">av_log</name><argument_list pos:start="158:19" pos:end="164:52">(<argument pos:start="158:20" pos:end="158:24"><expr pos:start="158:20" pos:end="158:24"><name pos:start="158:20" pos:end="158:24">avctx</name></expr></argument>, <argument pos:start="158:27" pos:end="158:38"><expr pos:start="158:27" pos:end="158:38"><name pos:start="158:27" pos:end="158:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="160:20" pos:end="160:66"><expr pos:start="160:20" pos:end="160:66"><literal type="string" pos:start="160:20" pos:end="160:66">"invalid tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="160:69" pos:end="160:69"><expr pos:start="160:69" pos:end="160:69"><name pos:start="160:69" pos:end="160:69">i</name></expr></argument>,

                   <argument pos:start="162:20" pos:end="162:34"><expr pos:start="162:20" pos:end="162:34"><name pos:start="162:20" pos:end="162:32"><name pos:start="162:20" pos:end="162:22">ctx</name><operator pos:start="162:23" pos:end="162:24">-&gt;</operator><name pos:start="162:25" pos:end="162:29">tiles</name><index pos:start="162:30" pos:end="162:32">[<expr pos:start="162:31" pos:end="162:31"><name pos:start="162:31" pos:end="162:31">i</name></expr>]</index></name><operator pos:start="162:33" pos:end="162:33">.</operator><name pos:start="162:34" pos:end="162:34">x</name></expr></argument>, <argument pos:start="162:37" pos:end="162:51"><expr pos:start="162:37" pos:end="162:51"><name pos:start="162:37" pos:end="162:49"><name pos:start="162:37" pos:end="162:39">ctx</name><operator pos:start="162:40" pos:end="162:41">-&gt;</operator><name pos:start="162:42" pos:end="162:46">tiles</name><index pos:start="162:47" pos:end="162:49">[<expr pos:start="162:48" pos:end="162:48"><name pos:start="162:48" pos:end="162:48">i</name></expr>]</index></name><operator pos:start="162:50" pos:end="162:50">.</operator><name pos:start="162:51" pos:end="162:51">y</name></expr></argument>,

                   <argument pos:start="164:20" pos:end="164:34"><expr pos:start="164:20" pos:end="164:34"><name pos:start="164:20" pos:end="164:32"><name pos:start="164:20" pos:end="164:22">ctx</name><operator pos:start="164:23" pos:end="164:24">-&gt;</operator><name pos:start="164:25" pos:end="164:29">tiles</name><index pos:start="164:30" pos:end="164:32">[<expr pos:start="164:31" pos:end="164:31"><name pos:start="164:31" pos:end="164:31">i</name></expr>]</index></name><operator pos:start="164:33" pos:end="164:33">.</operator><name pos:start="164:34" pos:end="164:34">w</name></expr></argument>, <argument pos:start="164:37" pos:end="164:51"><expr pos:start="164:37" pos:end="164:51"><name pos:start="164:37" pos:end="164:49"><name pos:start="164:37" pos:end="164:39">ctx</name><operator pos:start="164:40" pos:end="164:41">-&gt;</operator><name pos:start="164:42" pos:end="164:46">tiles</name><index pos:start="164:47" pos:end="164:49">[<expr pos:start="164:48" pos:end="164:48"><name pos:start="164:48" pos:end="164:48">i</name></expr>]</index></name><operator pos:start="164:50" pos:end="164:50">.</operator><name pos:start="164:51" pos:end="164:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        </block_content>}</block></if> <if type="elseif" pos:start="168:11" pos:end="326:15">else if <condition pos:start="168:19" pos:end="170:69">(<expr pos:start="168:20" pos:end="170:68"><name pos:start="168:20" pos:end="168:32"><name pos:start="168:20" pos:end="168:22">ctx</name><operator pos:start="168:23" pos:end="168:24">-&gt;</operator><name pos:start="168:25" pos:end="168:29">tiles</name><index pos:start="168:30" pos:end="168:32">[<expr pos:start="168:31" pos:end="168:31"><name pos:start="168:31" pos:end="168:31">i</name></expr>]</index></name><operator pos:start="168:33" pos:end="168:33">.</operator><name pos:start="168:34" pos:end="168:34">x</name> <operator pos:start="168:36" pos:end="168:36">+</operator> <name pos:start="168:38" pos:end="168:50"><name pos:start="168:38" pos:end="168:40">ctx</name><operator pos:start="168:41" pos:end="168:42">-&gt;</operator><name pos:start="168:43" pos:end="168:47">tiles</name><index pos:start="168:48" pos:end="168:50">[<expr pos:start="168:49" pos:end="168:49"><name pos:start="168:49" pos:end="168:49">i</name></expr>]</index></name><operator pos:start="168:51" pos:end="168:51">.</operator><name pos:start="168:52" pos:end="168:52">w</name> <operator pos:start="168:54" pos:end="168:54">&gt;</operator> <name pos:start="168:56" pos:end="168:67"><name pos:start="168:56" pos:end="168:60">avctx</name><operator pos:start="168:61" pos:end="168:62">-&gt;</operator><name pos:start="168:63" pos:end="168:67">width</name></name> <operator pos:start="168:69" pos:end="168:70">||</operator>

                   <name pos:start="170:20" pos:end="170:32"><name pos:start="170:20" pos:end="170:22">ctx</name><operator pos:start="170:23" pos:end="170:24">-&gt;</operator><name pos:start="170:25" pos:end="170:29">tiles</name><index pos:start="170:30" pos:end="170:32">[<expr pos:start="170:31" pos:end="170:31"><name pos:start="170:31" pos:end="170:31">i</name></expr>]</index></name><operator pos:start="170:33" pos:end="170:33">.</operator><name pos:start="170:34" pos:end="170:34">y</name> <operator pos:start="170:36" pos:end="170:36">+</operator> <name pos:start="170:38" pos:end="170:50"><name pos:start="170:38" pos:end="170:40">ctx</name><operator pos:start="170:41" pos:end="170:42">-&gt;</operator><name pos:start="170:43" pos:end="170:47">tiles</name><index pos:start="170:48" pos:end="170:50">[<expr pos:start="170:49" pos:end="170:49"><name pos:start="170:49" pos:end="170:49">i</name></expr>]</index></name><operator pos:start="170:51" pos:end="170:51">.</operator><name pos:start="170:52" pos:end="170:52">h</name> <operator pos:start="170:54" pos:end="170:54">&gt;</operator> <name pos:start="170:56" pos:end="170:68"><name pos:start="170:56" pos:end="170:60">avctx</name><operator pos:start="170:61" pos:end="170:62">-&gt;</operator><name pos:start="170:63" pos:end="170:68">height</name></name></expr>)</condition> <block pos:start="170:71" pos:end="326:15">{<block_content pos:start="172:13" pos:end="326:15">

            <expr_stmt pos:start="172:13" pos:end="178:53"><expr pos:start="172:13" pos:end="178:52"><call pos:start="172:13" pos:end="178:52"><name pos:start="172:13" pos:end="172:18">av_log</name><argument_list pos:start="172:19" pos:end="178:52">(<argument pos:start="172:20" pos:end="172:24"><expr pos:start="172:20" pos:end="172:24"><name pos:start="172:20" pos:end="172:24">avctx</name></expr></argument>, <argument pos:start="172:27" pos:end="172:38"><expr pos:start="172:27" pos:end="172:38"><name pos:start="172:27" pos:end="172:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="174:20" pos:end="174:72"><expr pos:start="174:20" pos:end="174:72"><literal type="string" pos:start="174:20" pos:end="174:72">"out of bounds tile %d at (%d.%d) with size %dx%d.\n"</literal></expr></argument>, <argument pos:start="174:75" pos:end="174:75"><expr pos:start="174:75" pos:end="174:75"><name pos:start="174:75" pos:end="174:75">i</name></expr></argument>,

                   <argument pos:start="176:20" pos:end="176:34"><expr pos:start="176:20" pos:end="176:34"><name pos:start="176:20" pos:end="176:32"><name pos:start="176:20" pos:end="176:22">ctx</name><operator pos:start="176:23" pos:end="176:24">-&gt;</operator><name pos:start="176:25" pos:end="176:29">tiles</name><index pos:start="176:30" pos:end="176:32">[<expr pos:start="176:31" pos:end="176:31"><name pos:start="176:31" pos:end="176:31">i</name></expr>]</index></name><operator pos:start="176:33" pos:end="176:33">.</operator><name pos:start="176:34" pos:end="176:34">x</name></expr></argument>, <argument pos:start="176:37" pos:end="176:51"><expr pos:start="176:37" pos:end="176:51"><name pos:start="176:37" pos:end="176:49"><name pos:start="176:37" pos:end="176:39">ctx</name><operator pos:start="176:40" pos:end="176:41">-&gt;</operator><name pos:start="176:42" pos:end="176:46">tiles</name><index pos:start="176:47" pos:end="176:49">[<expr pos:start="176:48" pos:end="176:48"><name pos:start="176:48" pos:end="176:48">i</name></expr>]</index></name><operator pos:start="176:50" pos:end="176:50">.</operator><name pos:start="176:51" pos:end="176:51">y</name></expr></argument>,

                   <argument pos:start="178:20" pos:end="178:34"><expr pos:start="178:20" pos:end="178:34"><name pos:start="178:20" pos:end="178:32"><name pos:start="178:20" pos:end="178:22">ctx</name><operator pos:start="178:23" pos:end="178:24">-&gt;</operator><name pos:start="178:25" pos:end="178:29">tiles</name><index pos:start="178:30" pos:end="178:32">[<expr pos:start="178:31" pos:end="178:31"><name pos:start="178:31" pos:end="178:31">i</name></expr>]</index></name><operator pos:start="178:33" pos:end="178:33">.</operator><name pos:start="178:34" pos:end="178:34">w</name></expr></argument>, <argument pos:start="178:37" pos:end="178:51"><expr pos:start="178:37" pos:end="178:51"><name pos:start="178:37" pos:end="178:49"><name pos:start="178:37" pos:end="178:39">ctx</name><operator pos:start="178:40" pos:end="178:41">-&gt;</operator><name pos:start="178:42" pos:end="178:46">tiles</name><index pos:start="178:47" pos:end="178:49">[<expr pos:start="178:48" pos:end="178:48"><name pos:start="178:48" pos:end="178:48">i</name></expr>]</index></name><operator pos:start="178:50" pos:end="178:50">.</operator><name pos:start="178:51" pos:end="178:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <comment type="block" pos:start="186:5" pos:end="186:62">/* Reset the reader in case it had been modified before */</comment>

    <expr_stmt pos:start="188:5" pos:end="188:20"><expr pos:start="188:5" pos:end="188:19"><name pos:start="188:5" pos:end="188:7">gbc</name> <operator pos:start="188:9" pos:end="188:9">=</operator> <operator pos:start="188:11" pos:end="188:11">&amp;</operator><name pos:start="188:12" pos:end="188:19"><name pos:start="188:12" pos:end="188:14">ctx</name><operator pos:start="188:15" pos:end="188:16">-&gt;</operator><name pos:start="188:17" pos:end="188:19">gbc</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="192:5" pos:end="192:55">/* Extract how much pixel data the tiles contain */</comment>

    <if_stmt pos:start="194:5" pos:end="208:48"><if pos:start="194:5" pos:end="196:48">if <condition pos:start="194:8" pos:end="194:27">(<expr pos:start="194:9" pos:end="194:26"><name pos:start="194:9" pos:end="194:18">pixel_size</name> <operator pos:start="194:20" pos:end="194:20">&lt;</operator> <literal type="number" pos:start="194:22" pos:end="194:26">0x100</literal></expr>)</condition><block type="pseudo" pos:start="196:9" pos:end="196:48"><block_content pos:start="196:9" pos:end="196:48">

        <expr_stmt pos:start="196:9" pos:end="196:48"><expr pos:start="196:9" pos:end="196:47"><name pos:start="196:9" pos:end="196:19">packed_size</name> <operator pos:start="196:21" pos:end="196:21">=</operator> <call pos:start="196:23" pos:end="196:47"><name pos:start="196:23" pos:end="196:42">bytestream2_get_byte</name><argument_list pos:start="196:43" pos:end="196:47">(<argument pos:start="196:44" pos:end="196:46"><expr pos:start="196:44" pos:end="196:46"><name pos:start="196:44" pos:end="196:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="198:5" pos:end="200:48">else if <condition pos:start="198:13" pos:end="198:34">(<expr pos:start="198:14" pos:end="198:33"><name pos:start="198:14" pos:end="198:23">pixel_size</name> <operator pos:start="198:25" pos:end="198:25">&lt;</operator> <literal type="number" pos:start="198:27" pos:end="198:33">0x10000</literal></expr>)</condition><block type="pseudo" pos:start="200:9" pos:end="200:48"><block_content pos:start="200:9" pos:end="200:48">

        <expr_stmt pos:start="200:9" pos:end="200:48"><expr pos:start="200:9" pos:end="200:47"><name pos:start="200:9" pos:end="200:19">packed_size</name> <operator pos:start="200:21" pos:end="200:21">=</operator> <call pos:start="200:23" pos:end="200:47"><name pos:start="200:23" pos:end="200:42">bytestream2_get_le16</name><argument_list pos:start="200:43" pos:end="200:47">(<argument pos:start="200:44" pos:end="200:46"><expr pos:start="200:44" pos:end="200:46"><name pos:start="200:44" pos:end="200:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="202:5" pos:end="204:48">else if <condition pos:start="202:13" pos:end="202:36">(<expr pos:start="202:14" pos:end="202:35"><name pos:start="202:14" pos:end="202:23">pixel_size</name> <operator pos:start="202:25" pos:end="202:25">&lt;</operator> <literal type="number" pos:start="202:27" pos:end="202:35">0x1000000</literal></expr>)</condition><block type="pseudo" pos:start="204:9" pos:end="204:48"><block_content pos:start="204:9" pos:end="204:48">

        <expr_stmt pos:start="204:9" pos:end="204:48"><expr pos:start="204:9" pos:end="204:47"><name pos:start="204:9" pos:end="204:19">packed_size</name> <operator pos:start="204:21" pos:end="204:21">=</operator> <call pos:start="204:23" pos:end="204:47"><name pos:start="204:23" pos:end="204:42">bytestream2_get_le24</name><argument_list pos:start="204:43" pos:end="204:47">(<argument pos:start="204:44" pos:end="204:46"><expr pos:start="204:44" pos:end="204:46"><name pos:start="204:44" pos:end="204:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="206:5" pos:end="208:48">else<block type="pseudo" pos:start="208:9" pos:end="208:48"><block_content pos:start="208:9" pos:end="208:48">

        <expr_stmt pos:start="208:9" pos:end="208:48"><expr pos:start="208:9" pos:end="208:47"><name pos:start="208:9" pos:end="208:19">packed_size</name> <operator pos:start="208:21" pos:end="208:21">=</operator> <call pos:start="208:23" pos:end="208:47"><name pos:start="208:23" pos:end="208:42">bytestream2_get_le32</name><argument_list pos:start="208:43" pos:end="208:47">(<argument pos:start="208:44" pos:end="208:46"><expr pos:start="208:44" pos:end="208:46"><name pos:start="208:44" pos:end="208:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="212:5" pos:end="212:79"><expr pos:start="212:5" pos:end="212:78"><call pos:start="212:5" pos:end="212:78"><name pos:start="212:5" pos:end="212:11">ff_dlog</name><argument_list pos:start="212:12" pos:end="212:78">(<argument pos:start="212:13" pos:end="212:17"><expr pos:start="212:13" pos:end="212:17"><name pos:start="212:13" pos:end="212:17">avctx</name></expr></argument>, <argument pos:start="212:20" pos:end="212:52"><expr pos:start="212:20" pos:end="212:52"><literal type="string" pos:start="212:20" pos:end="212:52">"pixel_size %d packed_size %d.\n"</literal></expr></argument>, <argument pos:start="212:55" pos:end="212:64"><expr pos:start="212:55" pos:end="212:64"><name pos:start="212:55" pos:end="212:64">pixel_size</name></expr></argument>, <argument pos:start="212:67" pos:end="212:77"><expr pos:start="212:67" pos:end="212:77"><name pos:start="212:67" pos:end="212:77">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="216:5" pos:end="326:15"><if pos:start="216:5" pos:end="326:15">if <condition pos:start="216:8" pos:end="216:24">(<expr pos:start="216:9" pos:end="216:23"><name pos:start="216:9" pos:end="216:19">packed_size</name> <operator pos:start="216:21" pos:end="216:21">&lt;</operator> <literal type="number" pos:start="216:23" pos:end="216:23">0</literal></expr>)</condition> <block pos:start="216:26" pos:end="326:15">{<block_content pos:start="218:9" pos:end="326:15">

        <expr_stmt pos:start="218:9" pos:end="218:75"><expr pos:start="218:9" pos:end="218:74"><call pos:start="218:9" pos:end="218:74"><name pos:start="218:9" pos:end="218:14">av_log</name><argument_list pos:start="218:15" pos:end="218:74">(<argument pos:start="218:16" pos:end="218:20"><expr pos:start="218:16" pos:end="218:20"><name pos:start="218:16" pos:end="218:20">avctx</name></expr></argument>, <argument pos:start="218:23" pos:end="218:34"><expr pos:start="218:23" pos:end="218:34"><name pos:start="218:23" pos:end="218:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="218:37" pos:end="218:60"><expr pos:start="218:37" pos:end="218:60"><literal type="string" pos:start="218:37" pos:end="218:60">"Invalid tile size %d\n"</literal></expr></argument>, <argument pos:start="218:63" pos:end="218:73"><expr pos:start="218:63" pos:end="218:73"><name pos:start="218:63" pos:end="218:73">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <comment type="block" pos:start="225:5" pos:end="225:59">/* Get pixels buffer, it may be deflated or just raw */</comment>

    <if_stmt pos:start="227:5" pos:end="326:15"><if pos:start="227:5" pos:end="326:15">if <condition pos:start="227:8" pos:end="227:34">(<expr pos:start="227:9" pos:end="227:33"><name pos:start="227:9" pos:end="227:18">pixel_size</name> <operator pos:start="227:20" pos:end="227:21">==</operator> <name pos:start="227:23" pos:end="227:33">packed_size</name></expr>)</condition> <block pos:start="227:36" pos:end="326:15">{<block_content pos:start="229:9" pos:end="326:15">

        <if_stmt pos:start="229:9" pos:end="326:15"><if pos:start="229:9" pos:end="238:5">if <condition pos:start="229:12" pos:end="229:57">(<expr pos:start="229:13" pos:end="229:56"><call pos:start="229:13" pos:end="229:43"><name pos:start="229:13" pos:end="229:38">bytestream2_get_bytes_left</name><argument_list pos:start="229:39" pos:end="229:43">(<argument pos:start="229:40" pos:end="229:42"><expr pos:start="229:40" pos:end="229:42"><name pos:start="229:40" pos:end="229:42">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="229:45" pos:end="229:45">&lt;</operator> <name pos:start="229:47" pos:end="229:56">pixel_size</name></expr>)</condition> <block pos:start="229:59" pos:end="238:5">{<block_content pos:start="231:13" pos:end="236:29">

            <expr_stmt pos:start="231:13" pos:end="231:83"><expr pos:start="231:13" pos:end="231:82"><call pos:start="231:13" pos:end="231:82"><name pos:start="231:13" pos:end="231:18">av_log</name><argument_list pos:start="231:19" pos:end="231:82">(<argument pos:start="231:20" pos:end="231:24"><expr pos:start="231:20" pos:end="231:24"><name pos:start="231:20" pos:end="231:24">avctx</name></expr></argument>, <argument pos:start="231:27" pos:end="231:38"><expr pos:start="231:27" pos:end="231:38"><name pos:start="231:27" pos:end="231:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="231:41" pos:end="231:69"><expr pos:start="231:41" pos:end="231:69"><literal type="string" pos:start="231:41" pos:end="231:69">"Insufficient input for %d\n"</literal></expr></argument>, <argument pos:start="231:72" pos:end="231:81"><expr pos:start="231:72" pos:end="231:81"><name pos:start="231:72" pos:end="231:81">pixel_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <expr_stmt pos:start="236:9" pos:end="236:29"><expr pos:start="236:9" pos:end="236:28"><name pos:start="236:9" pos:end="236:14">pixels</name> <operator pos:start="236:16" pos:end="236:16">=</operator> <name pos:start="236:18" pos:end="236:28"><name pos:start="236:18" pos:end="236:20">gbc</name><operator pos:start="236:21" pos:end="236:22">-&gt;</operator><name pos:start="236:23" pos:end="236:28">buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="238:7" pos:end="326:15">else <block pos:start="238:12" pos:end="326:15">{<block_content pos:start="240:9" pos:end="326:15">

        <decl_stmt pos:start="240:9" pos:end="240:40"><decl pos:start="240:9" pos:end="240:39"><type pos:start="240:9" pos:end="240:14"><name pos:start="240:9" pos:end="240:14">uLongf</name></type> <name pos:start="240:16" pos:end="240:18">len</name> <init pos:start="240:20" pos:end="240:39">= <expr pos:start="240:22" pos:end="240:39"><name pos:start="240:22" pos:end="240:39"><name pos:start="240:22" pos:end="240:24">ctx</name><operator pos:start="240:25" pos:end="240:26">-&gt;</operator><name pos:start="240:27" pos:end="240:39">inflated_size</name></name></expr></init></decl>;</decl_stmt>






        <expr_stmt pos:start="247:9" pos:end="247:76"><expr pos:start="247:9" pos:end="247:75"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <call pos:start="247:15" pos:end="247:75"><name pos:start="247:15" pos:end="247:24">uncompress</name><argument_list pos:start="247:25" pos:end="247:75">(<argument pos:start="247:26" pos:end="247:42"><expr pos:start="247:26" pos:end="247:42"><name pos:start="247:26" pos:end="247:42"><name pos:start="247:26" pos:end="247:28">ctx</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:42">inflated_buf</name></name></expr></argument>, <argument pos:start="247:45" pos:end="247:48"><expr pos:start="247:45" pos:end="247:48"><operator pos:start="247:45" pos:end="247:45">&amp;</operator><name pos:start="247:46" pos:end="247:48">len</name></expr></argument>, <argument pos:start="247:51" pos:end="247:61"><expr pos:start="247:51" pos:end="247:61"><name pos:start="247:51" pos:end="247:61"><name pos:start="247:51" pos:end="247:53">gbc</name><operator pos:start="247:54" pos:end="247:55">-&gt;</operator><name pos:start="247:56" pos:end="247:61">buffer</name></name></expr></argument>, <argument pos:start="247:64" pos:end="247:74"><expr pos:start="247:64" pos:end="247:74"><name pos:start="247:64" pos:end="247:74">packed_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="326:15"><if pos:start="249:9" pos:end="326:15">if <condition pos:start="249:12" pos:end="249:16">(<expr pos:start="249:13" pos:end="249:15"><name pos:start="249:13" pos:end="249:15">ret</name></expr>)</condition> <block pos:start="249:18" pos:end="326:15">{<block_content pos:start="251:13" pos:end="326:15">

            <expr_stmt pos:start="251:13" pos:end="251:74"><expr pos:start="251:13" pos:end="251:73"><call pos:start="251:13" pos:end="251:73"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="251:73">(<argument pos:start="251:20" pos:end="251:24"><expr pos:start="251:20" pos:end="251:24"><name pos:start="251:20" pos:end="251:24">avctx</name></expr></argument>, <argument pos:start="251:27" pos:end="251:38"><expr pos:start="251:27" pos:end="251:38"><name pos:start="251:27" pos:end="251:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:41" pos:end="251:67"><expr pos:start="251:41" pos:end="251:67"><literal type="string" pos:start="251:41" pos:end="251:67">"Pixel deflate error %d.\n"</literal></expr></argument>, <argument pos:start="251:70" pos:end="251:72"><expr pos:start="251:70" pos:end="251:72"><name pos:start="251:70" pos:end="251:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:34"><expr pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:15">ret</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <name pos:start="253:19" pos:end="253:33">AVERROR_UNKNOWN</name></expr>;</expr_stmt>



        <expr_stmt pos:start="257:9" pos:end="257:35"><expr pos:start="257:9" pos:end="257:34"><name pos:start="257:9" pos:end="257:14">pixels</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <name pos:start="257:18" pos:end="257:34"><name pos:start="257:18" pos:end="257:20">ctx</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:34">inflated_buf</name></name></expr>;</expr_stmt>




    <comment type="block" pos:start="262:5" pos:end="262:30">/* Allocate when needed */</comment>

    <expr_stmt pos:start="264:5" pos:end="264:49"><expr pos:start="264:5" pos:end="264:48"><name pos:start="264:5" pos:end="264:7">ret</name> <operator pos:start="264:9" pos:end="264:9">=</operator> <call pos:start="264:11" pos:end="264:48"><name pos:start="264:11" pos:end="264:25">ff_reget_buffer</name><argument_list pos:start="264:26" pos:end="264:48">(<argument pos:start="264:27" pos:end="264:31"><expr pos:start="264:27" pos:end="264:31"><name pos:start="264:27" pos:end="264:31">avctx</name></expr></argument>, <argument pos:start="264:34" pos:end="264:47"><expr pos:start="264:34" pos:end="264:47"><name pos:start="264:34" pos:end="264:47"><name pos:start="264:34" pos:end="264:36">ctx</name><operator pos:start="264:37" pos:end="264:38">-&gt;</operator><name pos:start="264:39" pos:end="264:47">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="266:5" pos:end="273:17"><if pos:start="266:5" pos:end="273:17">if <condition pos:start="266:8" pos:end="266:16">(<expr pos:start="266:9" pos:end="266:15"><name pos:start="266:9" pos:end="266:11">ret</name> <operator pos:start="266:13" pos:end="266:13">&lt;</operator> <literal type="number" pos:start="266:15" pos:end="266:15">0</literal></expr>)</condition><block type="pseudo" pos:start="273:5" pos:end="273:17"><block_content pos:start="273:5" pos:end="273:17">




    <comment type="block" pos:start="271:5" pos:end="271:73">/* Pointer to actual pixels, will be updated when data is consumed */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:17"><expr pos:start="273:5" pos:end="273:16"><name pos:start="273:5" pos:end="273:7">raw</name> <operator pos:start="273:9" pos:end="273:9">=</operator> <name pos:start="273:11" pos:end="273:16">pixels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="275:5" pos:end="326:15">for <control pos:start="275:9" pos:end="275:34">(<init pos:start="275:10" pos:end="275:15"><expr pos:start="275:10" pos:end="275:14"><name pos:start="275:10" pos:end="275:10">i</name> <operator pos:start="275:12" pos:end="275:12">=</operator> <literal type="number" pos:start="275:14" pos:end="275:14">0</literal></expr>;</init> <condition pos:start="275:17" pos:end="275:29"><expr pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:17">i</name> <operator pos:start="275:19" pos:end="275:19">&lt;</operator> <name pos:start="275:21" pos:end="275:28">tiles_nb</name></expr>;</condition> <incr pos:start="275:31" pos:end="275:33"><expr pos:start="275:31" pos:end="275:33"><name pos:start="275:31" pos:end="275:31">i</name><operator pos:start="275:32" pos:end="275:33">++</operator></expr></incr>)</control> <block pos:start="275:36" pos:end="326:15">{<block_content pos:start="277:9" pos:end="326:15">

        <decl_stmt pos:start="277:9" pos:end="281:61"><decl pos:start="277:9" pos:end="281:60"><type pos:start="277:9" pos:end="277:17"><name pos:start="277:9" pos:end="277:15">uint8_t</name> <modifier pos:start="277:17" pos:end="277:17">*</modifier></type><name pos:start="277:18" pos:end="277:20">dst</name> <init pos:start="277:22" pos:end="281:60">= <expr pos:start="277:24" pos:end="281:60"><name pos:start="277:24" pos:end="277:46"><name pos:start="277:24" pos:end="277:26">ctx</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:37">reference</name><operator pos:start="277:38" pos:end="277:39">-&gt;</operator><name pos:start="277:40" pos:end="277:43">data</name><index pos:start="277:44" pos:end="277:46">[<expr pos:start="277:45" pos:end="277:45"><literal type="number" pos:start="277:45" pos:end="277:45">0</literal></expr>]</index></name> <operator pos:start="277:48" pos:end="277:48">+</operator> <name pos:start="277:50" pos:end="277:76"><name pos:start="277:50" pos:end="277:52">ctx</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:63">reference</name><operator pos:start="277:64" pos:end="277:65">-&gt;</operator><name pos:start="277:66" pos:end="277:73">linesize</name><index pos:start="277:74" pos:end="277:76">[<expr pos:start="277:75" pos:end="277:75"><literal type="number" pos:start="277:75" pos:end="277:75">0</literal></expr>]</index></name> <operator pos:start="277:78" pos:end="277:78">*</operator>

                       <operator pos:start="279:24" pos:end="279:24">(</operator><name pos:start="279:25" pos:end="279:37"><name pos:start="279:25" pos:end="279:29">avctx</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:37">height</name></name> <operator pos:start="279:39" pos:end="279:39">-</operator> <name pos:start="279:41" pos:end="279:53"><name pos:start="279:41" pos:end="279:43">ctx</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:50">tiles</name><index pos:start="279:51" pos:end="279:53">[<expr pos:start="279:52" pos:end="279:52"><name pos:start="279:52" pos:end="279:52">i</name></expr>]</index></name><operator pos:start="279:54" pos:end="279:54">.</operator><name pos:start="279:55" pos:end="279:55">y</name> <operator pos:start="279:57" pos:end="279:57">-</operator> <literal type="number" pos:start="279:59" pos:end="279:59">1</literal><operator pos:start="279:60" pos:end="279:60">)</operator> <operator pos:start="279:62" pos:end="279:62">+</operator>

                       <name pos:start="281:24" pos:end="281:36"><name pos:start="281:24" pos:end="281:26">ctx</name><operator pos:start="281:27" pos:end="281:28">-&gt;</operator><name pos:start="281:29" pos:end="281:33">tiles</name><index pos:start="281:34" pos:end="281:36">[<expr pos:start="281:35" pos:end="281:35"><name pos:start="281:35" pos:end="281:35">i</name></expr>]</index></name><operator pos:start="281:37" pos:end="281:37">.</operator><name pos:start="281:38" pos:end="281:38">x</name> <operator pos:start="281:40" pos:end="281:40">*</operator> <name pos:start="281:42" pos:end="281:60"><name pos:start="281:42" pos:end="281:44">ctx</name><operator pos:start="281:45" pos:end="281:46">-&gt;</operator><name pos:start="281:47" pos:end="281:60">component_size</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="283:9" pos:end="289:45"><expr pos:start="283:9" pos:end="289:44"><call pos:start="283:9" pos:end="289:44"><name pos:start="283:9" pos:end="283:27">av_image_copy_plane</name><argument_list pos:start="283:28" pos:end="289:44">(<argument pos:start="283:29" pos:end="283:31"><expr pos:start="283:29" pos:end="283:31"><name pos:start="283:29" pos:end="283:31">dst</name></expr></argument>, <argument pos:start="283:34" pos:end="283:65"><expr pos:start="283:34" pos:end="283:65"><operator pos:start="283:34" pos:end="283:34">-</operator><literal type="number" pos:start="283:35" pos:end="283:35">1</literal> <operator pos:start="283:37" pos:end="283:37">*</operator> <name pos:start="283:39" pos:end="283:65"><name pos:start="283:39" pos:end="283:41">ctx</name><operator pos:start="283:42" pos:end="283:43">-&gt;</operator><name pos:start="283:44" pos:end="283:52">reference</name><operator pos:start="283:53" pos:end="283:54">-&gt;</operator><name pos:start="283:55" pos:end="283:62">linesize</name><index pos:start="283:63" pos:end="283:65">[<expr pos:start="283:64" pos:end="283:64"><literal type="number" pos:start="283:64" pos:end="283:64">0</literal></expr>]</index></name></expr></argument>,

                            <argument pos:start="285:29" pos:end="285:31"><expr pos:start="285:29" pos:end="285:31"><name pos:start="285:29" pos:end="285:31">raw</name></expr></argument>, <argument pos:start="285:34" pos:end="285:70"><expr pos:start="285:34" pos:end="285:70"><name pos:start="285:34" pos:end="285:46"><name pos:start="285:34" pos:end="285:36">ctx</name><operator pos:start="285:37" pos:end="285:38">-&gt;</operator><name pos:start="285:39" pos:end="285:43">tiles</name><index pos:start="285:44" pos:end="285:46">[<expr pos:start="285:45" pos:end="285:45"><name pos:start="285:45" pos:end="285:45">i</name></expr>]</index></name><operator pos:start="285:47" pos:end="285:47">.</operator><name pos:start="285:48" pos:end="285:48">w</name> <operator pos:start="285:50" pos:end="285:50">*</operator> <name pos:start="285:52" pos:end="285:70"><name pos:start="285:52" pos:end="285:54">ctx</name><operator pos:start="285:55" pos:end="285:56">-&gt;</operator><name pos:start="285:57" pos:end="285:70">component_size</name></name></expr></argument>,

                            <argument pos:start="287:29" pos:end="287:65"><expr pos:start="287:29" pos:end="287:65"><name pos:start="287:29" pos:end="287:41"><name pos:start="287:29" pos:end="287:31">ctx</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:38">tiles</name><index pos:start="287:39" pos:end="287:41">[<expr pos:start="287:40" pos:end="287:40"><name pos:start="287:40" pos:end="287:40">i</name></expr>]</index></name><operator pos:start="287:42" pos:end="287:42">.</operator><name pos:start="287:43" pos:end="287:43">w</name> <operator pos:start="287:45" pos:end="287:45">*</operator> <name pos:start="287:47" pos:end="287:65"><name pos:start="287:47" pos:end="287:49">ctx</name><operator pos:start="287:50" pos:end="287:51">-&gt;</operator><name pos:start="287:52" pos:end="287:65">component_size</name></name></expr></argument>,

                            <argument pos:start="289:29" pos:end="289:43"><expr pos:start="289:29" pos:end="289:43"><name pos:start="289:29" pos:end="289:41"><name pos:start="289:29" pos:end="289:31">ctx</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:38">tiles</name><index pos:start="289:39" pos:end="289:41">[<expr pos:start="289:40" pos:end="289:40"><name pos:start="289:40" pos:end="289:40">i</name></expr>]</index></name><operator pos:start="289:42" pos:end="289:42">.</operator><name pos:start="289:43" pos:end="289:43">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:71"><expr pos:start="291:9" pos:end="291:70"><name pos:start="291:9" pos:end="291:11">raw</name> <operator pos:start="291:13" pos:end="291:14">+=</operator> <name pos:start="291:16" pos:end="291:28"><name pos:start="291:16" pos:end="291:18">ctx</name><operator pos:start="291:19" pos:end="291:20">-&gt;</operator><name pos:start="291:21" pos:end="291:25">tiles</name><index pos:start="291:26" pos:end="291:28">[<expr pos:start="291:27" pos:end="291:27"><name pos:start="291:27" pos:end="291:27">i</name></expr>]</index></name><operator pos:start="291:29" pos:end="291:29">.</operator><name pos:start="291:30" pos:end="291:30">w</name> <operator pos:start="291:32" pos:end="291:32">*</operator> <name pos:start="291:34" pos:end="291:52"><name pos:start="291:34" pos:end="291:36">ctx</name><operator pos:start="291:37" pos:end="291:38">-&gt;</operator><name pos:start="291:39" pos:end="291:52">component_size</name></name> <operator pos:start="291:54" pos:end="291:54">*</operator> <name pos:start="291:56" pos:end="291:68"><name pos:start="291:56" pos:end="291:58">ctx</name><operator pos:start="291:59" pos:end="291:60">-&gt;</operator><name pos:start="291:61" pos:end="291:65">tiles</name><index pos:start="291:66" pos:end="291:68">[<expr pos:start="291:67" pos:end="291:67"><name pos:start="291:67" pos:end="291:67">i</name></expr>]</index></name><operator pos:start="291:69" pos:end="291:69">.</operator><name pos:start="291:70" pos:end="291:70">h</name></expr>;</expr_stmt>




    <comment type="block" pos:start="296:5" pos:end="296:37">/* Frame is ready to be output */</comment>

    <expr_stmt pos:start="298:5" pos:end="298:46"><expr pos:start="298:5" pos:end="298:45"><name pos:start="298:5" pos:end="298:7">ret</name> <operator pos:start="298:9" pos:end="298:9">=</operator> <call pos:start="298:11" pos:end="298:45"><name pos:start="298:11" pos:end="298:22">av_frame_ref</name><argument_list pos:start="298:23" pos:end="298:45">(<argument pos:start="298:24" pos:end="298:28"><expr pos:start="298:24" pos:end="298:28"><name pos:start="298:24" pos:end="298:28">frame</name></expr></argument>, <argument pos:start="298:31" pos:end="298:44"><expr pos:start="298:31" pos:end="298:44"><name pos:start="298:31" pos:end="298:44"><name pos:start="298:31" pos:end="298:33">ctx</name><operator pos:start="298:34" pos:end="298:35">-&gt;</operator><name pos:start="298:36" pos:end="298:44">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="300:5" pos:end="326:15"><if pos:start="300:5" pos:end="326:15">if <condition pos:start="300:8" pos:end="300:16">(<expr pos:start="300:9" pos:end="300:15"><name pos:start="300:9" pos:end="300:11">ret</name> <operator pos:start="300:13" pos:end="300:13">&lt;</operator> <literal type="number" pos:start="300:15" pos:end="300:15">0</literal></expr>)</condition><block type="pseudo" pos:start="307:5" pos:end="326:15"><block_content pos:start="307:5" pos:end="326:15">




    <comment type="block" pos:start="305:5" pos:end="305:78">/* Keyframe when the number of pixels updated matches the whole surface */</comment>

    <if_stmt pos:start="307:5" pos:end="326:15"><if pos:start="307:5" pos:end="313:5">if <condition pos:start="307:8" pos:end="307:41">(<expr pos:start="307:9" pos:end="307:40"><name pos:start="307:9" pos:end="307:18">pixel_size</name> <operator pos:start="307:20" pos:end="307:21">==</operator> <name pos:start="307:23" pos:end="307:40"><name pos:start="307:23" pos:end="307:25">ctx</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:40">inflated_size</name></name></expr>)</condition> <block pos:start="307:43" pos:end="313:5">{<block_content pos:start="309:9" pos:end="311:29">

        <expr_stmt pos:start="309:9" pos:end="309:45"><expr pos:start="309:9" pos:end="309:44"><name pos:start="309:9" pos:end="309:24"><name pos:start="309:9" pos:end="309:13">frame</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:24">pict_type</name></name> <operator pos:start="309:26" pos:end="309:26">=</operator> <name pos:start="309:28" pos:end="309:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:29"><expr pos:start="311:9" pos:end="311:28"><name pos:start="311:9" pos:end="311:24"><name pos:start="311:9" pos:end="311:13">frame</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:24">key_frame</name></name> <operator pos:start="311:26" pos:end="311:26">=</operator> <literal type="number" pos:start="311:28" pos:end="311:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="313:7" pos:end="326:15">else <block pos:start="313:12" pos:end="326:15">{<block_content pos:start="315:9" pos:end="326:15">

        <expr_stmt pos:start="315:9" pos:end="315:45"><expr pos:start="315:9" pos:end="315:44"><name pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:13">frame</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:24">pict_type</name></name> <operator pos:start="315:26" pos:end="315:26">=</operator> <name pos:start="315:28" pos:end="315:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>


    <expr_stmt pos:start="318:5" pos:end="318:19"><expr pos:start="318:5" pos:end="318:18"><operator pos:start="318:5" pos:end="318:5">*</operator><name pos:start="318:6" pos:end="318:14">got_frame</name> <operator pos:start="318:16" pos:end="318:16">=</operator> <literal type="number" pos:start="318:18" pos:end="318:18">1</literal></expr>;</expr_stmt>



<label pos:start="322:1" pos:end="322:4"><name pos:start="322:1" pos:end="322:3">end</name>:</label>

    <expr_stmt pos:start="324:5" pos:end="324:28"><expr pos:start="324:5" pos:end="324:27"><call pos:start="324:5" pos:end="324:27"><name pos:start="324:5" pos:end="324:11">av_free</name><argument_list pos:start="324:12" pos:end="324:27">(<argument pos:start="324:13" pos:end="324:26"><expr pos:start="324:13" pos:end="324:26"><name pos:start="324:13" pos:end="324:26">inflated_tiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="326:5" pos:end="326:15">return <expr pos:start="326:12" pos:end="326:14"><name pos:start="326:12" pos:end="326:14">ret</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
