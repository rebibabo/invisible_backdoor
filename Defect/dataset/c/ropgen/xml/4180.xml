<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4180.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">rtas_set_tce_bypass</name><parameter_list pos:start="1:32" pos:end="7:65">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:42">PowerPCCPU</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">cpu</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:72"><decl pos:start="1:50" pos:end="1:72"><type pos:start="1:50" pos:end="1:72"><name pos:start="1:50" pos:end="1:65">sPAPREnvironment</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">spapr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint32_t</name></type> <name pos:start="3:42" pos:end="3:46">token</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:46"><decl pos:start="5:33" pos:end="5:46"><type pos:start="5:33" pos:end="5:46"><name pos:start="5:33" pos:end="5:40">uint32_t</name></type> <name pos:start="5:42" pos:end="5:46">nargs</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:65"><decl pos:start="5:49" pos:end="5:65"><type pos:start="5:49" pos:end="5:65"><name pos:start="5:49" pos:end="5:60">target_ulong</name></type> <name pos:start="5:62" pos:end="5:65">args</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:45"><decl pos:start="7:33" pos:end="7:45"><type pos:start="7:33" pos:end="7:45"><name pos:start="7:33" pos:end="7:40">uint32_t</name></type> <name pos:start="7:42" pos:end="7:45">nret</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:64"><decl pos:start="7:48" pos:end="7:64"><type pos:start="7:48" pos:end="7:64"><name pos:start="7:48" pos:end="7:59">target_ulong</name></type> <name pos:start="7:61" pos:end="7:64">rets</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="59:1">{<block_content pos:start="11:5" pos:end="57:39">

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">VIOsPAPRBus</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">bus</name> <init pos:start="11:22" pos:end="11:37">= <expr pos:start="11:24" pos:end="11:37"><name pos:start="11:24" pos:end="11:37"><name pos:start="11:24" pos:end="11:28">spapr</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:37">vio_bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">VIOsPAPRDevice</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">unit</name></decl>, <decl pos:start="15:20" pos:end="15:25"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:20" pos:end="15:25">enable</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:13">nargs</name> <operator pos:start="19:15" pos:end="19:16">!=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">2</literal></expr>)</condition> <block pos:start="19:21" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:15">rtas_st</name><argument_list pos:start="21:16" pos:end="21:46">(<argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">rets</name></expr></argument>, <argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:45"><expr pos:start="21:26" pos:end="21:45"><name pos:start="21:26" pos:end="21:45">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:8">unit</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:18">rtas_ld</name><argument_list pos:start="27:19" pos:end="27:27">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">args</name></expr></argument>, <argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:10">enable</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:29"><name pos:start="29:14" pos:end="29:20">rtas_ld</name><argument_list pos:start="29:21" pos:end="29:29">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">args</name></expr></argument>, <argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:7">dev</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:42"><name pos:start="31:11" pos:end="31:31">spapr_vio_find_by_reg</name><argument_list pos:start="31:32" pos:end="31:42">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">bus</name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">dev</name></expr>)</condition> <block pos:start="33:15" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:15">rtas_st</name><argument_list pos:start="35:16" pos:end="35:46">(<argument pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:20"><name pos:start="35:17" pos:end="35:20">rets</name></expr></argument>, <argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr></argument>, <argument pos:start="35:26" pos:end="35:45"><expr pos:start="35:26" pos:end="35:45"><name pos:start="35:26" pos:end="35:45">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:12">dev</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:18">tcet</name></name></expr>)</condition> <block pos:start="43:21" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><call pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:15">rtas_st</name><argument_list pos:start="45:16" pos:end="45:46">(<argument pos:start="45:17" pos:end="45:20"><expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">rets</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></argument>, <argument pos:start="45:26" pos:end="45:45"><expr pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:45">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><call pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:24">spapr_tce_set_bypass</name><argument_list pos:start="53:25" pos:end="53:45">(<argument pos:start="53:26" pos:end="53:34"><expr pos:start="53:26" pos:end="53:34"><name pos:start="53:26" pos:end="53:34"><name pos:start="53:26" pos:end="53:28">dev</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">tcet</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:44"><expr pos:start="53:37" pos:end="53:44"><operator pos:start="53:37" pos:end="53:37">!</operator><operator pos:start="53:38" pos:end="53:38">!</operator><name pos:start="53:39" pos:end="53:44">enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><call pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:11">rtas_st</name><argument_list pos:start="57:12" pos:end="57:38">(<argument pos:start="57:13" pos:end="57:16"><expr pos:start="57:13" pos:end="57:16"><name pos:start="57:13" pos:end="57:16">rets</name></expr></argument>, <argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr></argument>, <argument pos:start="57:22" pos:end="57:37"><expr pos:start="57:22" pos:end="57:37"><name pos:start="57:22" pos:end="57:37">RTAS_OUT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
