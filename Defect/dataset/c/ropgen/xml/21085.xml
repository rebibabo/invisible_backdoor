<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21085.c" pos:tabs="8"><function pos:start="1:1" pos:end="24:32"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">scsi_do_read</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">ret</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="24:32">{<block_content pos:start="3:5" pos:end="24:32">
    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">SCSIDiskReq</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:18">r</name> <init pos:start="3:20" pos:end="3:27">= <expr pos:start="3:22" pos:end="3:27"><name pos:start="3:22" pos:end="3:27">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:66"><decl pos:start="4:5" pos:end="4:65"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">SCSIDiskState</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:20">s</name> <init pos:start="4:22" pos:end="4:65">= <expr pos:start="4:24" pos:end="4:65"><call pos:start="4:24" pos:end="4:65"><name pos:start="4:24" pos:end="4:32">DO_UPCAST</name><argument_list pos:start="4:33" pos:end="4:65">(<argument pos:start="4:34" pos:end="4:46"><expr pos:start="4:34" pos:end="4:46"><name pos:start="4:34" pos:end="4:46">SCSIDiskState</name></expr></argument>, <argument pos:start="4:49" pos:end="4:52"><expr pos:start="4:49" pos:end="4:52"><name pos:start="4:49" pos:end="4:52">qdev</name></expr></argument>, <argument pos:start="4:55" pos:end="4:64"><expr pos:start="4:55" pos:end="4:64"><name pos:start="4:55" pos:end="4:64"><name pos:start="4:55" pos:end="4:55">r</name><operator pos:start="4:56" pos:end="4:57">-&gt;</operator><name pos:start="4:58" pos:end="4:60">req</name><operator pos:start="4:61" pos:end="4:61">.</operator><name pos:start="4:62" pos:end="4:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:14">n</name></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="24:32"><if pos:start="6:5" pos:end="24:32">if <condition pos:start="6:8" pos:end="6:29">(<expr pos:start="6:9" pos:end="6:28"><name pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:9">r</name><operator pos:start="6:10" pos:end="6:11">-&gt;</operator><name pos:start="6:12" pos:end="6:14">req</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:20">aiocb</name></name> <operator pos:start="6:22" pos:end="6:23">!=</operator> <name pos:start="6:25" pos:end="6:28">NULL</name></expr>)</condition> <block pos:start="6:31" pos:end="24:32">{<block_content pos:start="7:9" pos:end="24:32">
        <expr_stmt pos:start="7:9" pos:end="7:28"><expr pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:9">r</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:14">req</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:20">aiocb</name></name> <operator pos:start="7:22" pos:end="7:22">=</operator> <name pos:start="7:24" pos:end="7:27">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:50"><expr pos:start="8:9" pos:end="8:49"><call pos:start="8:9" pos:end="8:49"><name pos:start="8:9" pos:end="8:22">bdrv_acct_done</name><argument_list pos:start="8:23" pos:end="8:49">(<argument pos:start="8:24" pos:end="8:38"><expr pos:start="8:24" pos:end="8:38"><name pos:start="8:24" pos:end="8:38"><name pos:start="8:24" pos:end="8:24">s</name><operator pos:start="8:25" pos:end="8:26">-&gt;</operator><name pos:start="8:27" pos:end="8:30">qdev</name><operator pos:start="8:31" pos:end="8:31">.</operator><name pos:start="8:32" pos:end="8:35">conf</name><operator pos:start="8:36" pos:end="8:36">.</operator><name pos:start="8:37" pos:end="8:38">bs</name></name></expr></argument>, <argument pos:start="8:41" pos:end="8:48"><expr pos:start="8:41" pos:end="8:48"><operator pos:start="8:41" pos:end="8:41">&amp;</operator><name pos:start="8:42" pos:end="8:48"><name pos:start="8:42" pos:end="8:42">r</name><operator pos:start="8:43" pos:end="8:44">-&gt;</operator><name pos:start="8:45" pos:end="8:48">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="24:32"><if pos:start="9:5" pos:end="24:32">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>)</condition> <block pos:start="9:18" pos:end="24:32">{<block_content pos:start="10:9" pos:end="24:32">
        <if_stmt pos:start="10:9" pos:end="24:32"><if pos:start="10:9" pos:end="24:32">if <condition pos:start="10:12" pos:end="10:42">(<expr pos:start="10:13" pos:end="10:41"><call pos:start="10:13" pos:end="10:41"><name pos:start="10:13" pos:end="10:32">scsi_handle_rw_error</name><argument_list pos:start="10:33" pos:end="10:41">(<argument pos:start="10:34" pos:end="10:34"><expr pos:start="10:34" pos:end="10:34"><name pos:start="10:34" pos:end="10:34">r</name></expr></argument>, <argument pos:start="10:37" pos:end="10:40"><expr pos:start="10:37" pos:end="10:40"><operator pos:start="10:37" pos:end="10:37">-</operator><name pos:start="10:38" pos:end="10:40">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="10:44" pos:end="24:32">{<block_content pos:start="11:13" pos:end="24:32">
            <goto pos:start="11:13" pos:end="11:22">goto <name pos:start="11:18" pos:end="11:21">done</name>;</goto>
    <if_stmt pos:start="12:5" pos:end="24:32"><if pos:start="12:5" pos:end="17:5">if <condition pos:start="12:8" pos:end="12:18">(<expr pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:9">r</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:14">req</name><operator pos:start="12:15" pos:end="12:15">.</operator><name pos:start="12:16" pos:end="12:17">sg</name></name></expr>)</condition> <block pos:start="12:20" pos:end="17:5">{<block_content pos:start="13:9" pos:end="16:59">
        <expr_stmt pos:start="13:9" pos:end="13:77"><expr pos:start="13:9" pos:end="13:76"><call pos:start="13:9" pos:end="13:76"><name pos:start="13:9" pos:end="13:22">dma_acct_start</name><argument_list pos:start="13:23" pos:end="13:76">(<argument pos:start="13:24" pos:end="13:38"><expr pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">qdev</name><operator pos:start="13:31" pos:end="13:31">.</operator><name pos:start="13:32" pos:end="13:35">conf</name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:38">bs</name></name></expr></argument>, <argument pos:start="13:41" pos:end="13:48"><expr pos:start="13:41" pos:end="13:48"><operator pos:start="13:41" pos:end="13:41">&amp;</operator><name pos:start="13:42" pos:end="13:48"><name pos:start="13:42" pos:end="13:42">r</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:48">acct</name></name></expr></argument>, <argument pos:start="13:51" pos:end="13:59"><expr pos:start="13:51" pos:end="13:59"><name pos:start="13:51" pos:end="13:59"><name pos:start="13:51" pos:end="13:51">r</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:56">req</name><operator pos:start="13:57" pos:end="13:57">.</operator><name pos:start="13:58" pos:end="13:59">sg</name></name></expr></argument>, <argument pos:start="13:62" pos:end="13:75"><expr pos:start="13:62" pos:end="13:75"><name pos:start="13:62" pos:end="13:75">BDRV_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:40"><expr pos:start="14:9" pos:end="14:39"><name pos:start="14:9" pos:end="14:20"><name pos:start="14:9" pos:end="14:9">r</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:14">req</name><operator pos:start="14:15" pos:end="14:15">.</operator><name pos:start="14:16" pos:end="14:20">resid</name></name> <operator pos:start="14:22" pos:end="14:23">-=</operator> <name pos:start="14:25" pos:end="14:39"><name pos:start="14:25" pos:end="14:25">r</name><operator pos:start="14:26" pos:end="14:27">-&gt;</operator><name pos:start="14:28" pos:end="14:30">req</name><operator pos:start="14:31" pos:end="14:31">.</operator><name pos:start="14:32" pos:end="14:33">sg</name><operator pos:start="14:34" pos:end="14:35">-&gt;</operator><name pos:start="14:36" pos:end="14:39">size</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="16:59"><expr pos:start="15:9" pos:end="16:58"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">r</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">req</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:20">aiocb</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="16:58"><name pos:start="15:24" pos:end="15:36">dma_bdrv_read</name><argument_list pos:start="15:37" pos:end="16:58">(<argument pos:start="15:38" pos:end="15:52"><expr pos:start="15:38" pos:end="15:52"><name pos:start="15:38" pos:end="15:52"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:44">qdev</name><operator pos:start="15:45" pos:end="15:45">.</operator><name pos:start="15:46" pos:end="15:49">conf</name><operator pos:start="15:50" pos:end="15:50">.</operator><name pos:start="15:51" pos:end="15:52">bs</name></name></expr></argument>, <argument pos:start="15:55" pos:end="15:63"><expr pos:start="15:55" pos:end="15:63"><name pos:start="15:55" pos:end="15:63"><name pos:start="15:55" pos:end="15:55">r</name><operator pos:start="15:56" pos:end="15:57">-&gt;</operator><name pos:start="15:58" pos:end="15:60">req</name><operator pos:start="15:61" pos:end="15:61">.</operator><name pos:start="15:62" pos:end="15:63">sg</name></name></expr></argument>, <argument pos:start="15:66" pos:end="15:74"><expr pos:start="15:66" pos:end="15:74"><name pos:start="15:66" pos:end="15:74"><name pos:start="15:66" pos:end="15:66">r</name><operator pos:start="15:67" pos:end="15:68">-&gt;</operator><name pos:start="15:69" pos:end="15:74">sector</name></name></expr></argument>,
                                     <argument pos:start="16:38" pos:end="16:54"><expr pos:start="16:38" pos:end="16:54"><name pos:start="16:38" pos:end="16:54">scsi_dma_complete</name></expr></argument>, <argument pos:start="16:57" pos:end="16:57"><expr pos:start="16:57" pos:end="16:57"><name pos:start="16:57" pos:end="16:57">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="17:7" pos:end="24:32">else <block pos:start="17:12" pos:end="24:32">{<block_content pos:start="18:9" pos:end="24:32">
        <expr_stmt pos:start="18:9" pos:end="18:50"><expr pos:start="18:9" pos:end="18:49"><name pos:start="18:9" pos:end="18:9">n</name> <operator pos:start="18:11" pos:end="18:11">=</operator> <call pos:start="18:13" pos:end="18:49"><name pos:start="18:13" pos:end="18:27">scsi_init_iovec</name><argument_list pos:start="18:28" pos:end="18:49">(<argument pos:start="18:29" pos:end="18:29"><expr pos:start="18:29" pos:end="18:29"><name pos:start="18:29" pos:end="18:29">r</name></expr></argument>, <argument pos:start="18:32" pos:end="18:48"><expr pos:start="18:32" pos:end="18:48"><name pos:start="18:32" pos:end="18:48">SCSI_DMA_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:89"><expr pos:start="19:9" pos:end="19:88"><call pos:start="19:9" pos:end="19:88"><name pos:start="19:9" pos:end="19:23">bdrv_acct_start</name><argument_list pos:start="19:24" pos:end="19:88">(<argument pos:start="19:25" pos:end="19:39"><expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:31">qdev</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:36">conf</name><operator pos:start="19:37" pos:end="19:37">.</operator><name pos:start="19:38" pos:end="19:39">bs</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:49"><expr pos:start="19:42" pos:end="19:49"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:49"><name pos:start="19:43" pos:end="19:43">r</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:49">acct</name></name></expr></argument>, <argument pos:start="19:52" pos:end="19:71"><expr pos:start="19:52" pos:end="19:71"><name pos:start="19:52" pos:end="19:52">n</name> <operator pos:start="19:54" pos:end="19:54">*</operator> <name pos:start="19:56" pos:end="19:71">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="19:74" pos:end="19:87"><expr pos:start="19:74" pos:end="19:87"><name pos:start="19:74" pos:end="19:87">BDRV_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="21:61"><expr pos:start="20:9" pos:end="21:60"><name pos:start="20:9" pos:end="20:20"><name pos:start="20:9" pos:end="20:9">r</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:14">req</name><operator pos:start="20:15" pos:end="20:15">.</operator><name pos:start="20:16" pos:end="20:20">aiocb</name></name> <operator pos:start="20:22" pos:end="20:22">=</operator> <call pos:start="20:24" pos:end="21:60"><name pos:start="20:24" pos:end="20:37">bdrv_aio_readv</name><argument_list pos:start="20:38" pos:end="21:60">(<argument pos:start="20:39" pos:end="20:53"><expr pos:start="20:39" pos:end="20:53"><name pos:start="20:39" pos:end="20:53"><name pos:start="20:39" pos:end="20:39">s</name><operator pos:start="20:40" pos:end="20:41">-&gt;</operator><name pos:start="20:42" pos:end="20:45">qdev</name><operator pos:start="20:46" pos:end="20:46">.</operator><name pos:start="20:47" pos:end="20:50">conf</name><operator pos:start="20:51" pos:end="20:51">.</operator><name pos:start="20:52" pos:end="20:53">bs</name></name></expr></argument>, <argument pos:start="20:56" pos:end="20:64"><expr pos:start="20:56" pos:end="20:64"><name pos:start="20:56" pos:end="20:64"><name pos:start="20:56" pos:end="20:56">r</name><operator pos:start="20:57" pos:end="20:58">-&gt;</operator><name pos:start="20:59" pos:end="20:64">sector</name></name></expr></argument>, <argument pos:start="20:67" pos:end="20:74"><expr pos:start="20:67" pos:end="20:74"><operator pos:start="20:67" pos:end="20:67">&amp;</operator><name pos:start="20:68" pos:end="20:74"><name pos:start="20:68" pos:end="20:68">r</name><operator pos:start="20:69" pos:end="20:70">-&gt;</operator><name pos:start="20:71" pos:end="20:74">qiov</name></name></expr></argument>, <argument pos:start="20:77" pos:end="20:77"><expr pos:start="20:77" pos:end="20:77"><name pos:start="20:77" pos:end="20:77">n</name></expr></argument>,
                                      <argument pos:start="21:39" pos:end="21:56"><expr pos:start="21:39" pos:end="21:56"><name pos:start="21:39" pos:end="21:56">scsi_read_complete</name></expr></argument>, <argument pos:start="21:59" pos:end="21:59"><expr pos:start="21:59" pos:end="21:59"><name pos:start="21:59" pos:end="21:59">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="22:1" pos:end="22:5"><name pos:start="22:1" pos:end="22:4">done</name>:</label>
    <if_stmt pos:start="23:5" pos:end="24:32"><if pos:start="23:5" pos:end="24:32">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:10">r</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">req</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:27">io_canceled</name></name></expr>)</condition> <block pos:start="23:30" pos:end="24:32">{<block_content pos:start="24:9" pos:end="24:32">
        <expr_stmt pos:start="24:9" pos:end="24:32"><expr pos:start="24:9" pos:end="24:31"><call pos:start="24:9" pos:end="24:31"><name pos:start="24:9" pos:end="24:22">scsi_req_unref</name><argument_list pos:start="24:23" pos:end="24:31">(<argument pos:start="24:24" pos:end="24:30"><expr pos:start="24:24" pos:end="24:30"><operator pos:start="24:24" pos:end="24:24">&amp;</operator><name pos:start="24:25" pos:end="24:30"><name pos:start="24:25" pos:end="24:25">r</name><operator pos:start="24:26" pos:end="24:27">-&gt;</operator><name pos:start="24:28" pos:end="24:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
