<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9640.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">ssi_sd_init</name><parameter_list pos:start="1:23" pos:end="1:35">(<parameter pos:start="1:24" pos:end="1:34"><decl pos:start="1:24" pos:end="1:34"><type pos:start="1:24" pos:end="1:33"><name pos:start="1:24" pos:end="1:31">SSISlave</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><call pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:32">(<argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><name pos:start="5:31" pos:end="5:31">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ssi_sd_state</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:53">= <expr pos:start="7:23" pos:end="7:53"><call pos:start="7:23" pos:end="7:53"><name pos:start="7:23" pos:end="7:36">FROM_SSI_SLAVE</name><argument_list pos:start="7:37" pos:end="7:53">(<argument pos:start="7:38" pos:end="7:49"><expr pos:start="7:38" pos:end="7:49"><name pos:start="7:38" pos:end="7:49">ssi_sd_state</name></expr></argument>, <argument pos:start="7:52" pos:end="7:52"><expr pos:start="7:52" pos:end="7:52"><name pos:start="7:52" pos:end="7:52">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">dinfo</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">mode</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:24">SSI_SD_CMD</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:9">dinfo</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:33"><name pos:start="15:13" pos:end="15:26">drive_get_next</name><argument_list pos:start="15:27" pos:end="15:33">(<argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32">IF_SD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:77"><expr pos:start="17:5" pos:end="17:76"><name pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:9">sd</name></name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:76"><name pos:start="17:13" pos:end="17:19">sd_init</name><argument_list pos:start="17:20" pos:end="17:76">(<argument pos:start="17:21" pos:end="17:69"><expr pos:start="17:21" pos:end="17:69"><ternary pos:start="17:21" pos:end="17:69"><condition pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25">dinfo</name></expr> ?</condition><then pos:start="17:29" pos:end="17:62"> <expr pos:start="17:29" pos:end="17:62"><call pos:start="17:29" pos:end="17:62"><name pos:start="17:29" pos:end="17:34">blk_bs</name><argument_list pos:start="17:35" pos:end="17:62">(<argument pos:start="17:36" pos:end="17:61"><expr pos:start="17:36" pos:end="17:61"><call pos:start="17:36" pos:end="17:61"><name pos:start="17:36" pos:end="17:54">blk_by_legacy_dinfo</name><argument_list pos:start="17:55" pos:end="17:61">(<argument pos:start="17:56" pos:end="17:60"><expr pos:start="17:56" pos:end="17:60"><name pos:start="17:56" pos:end="17:60">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="17:64" pos:end="17:69">: <expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:69">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="17:72" pos:end="17:75"><expr pos:start="17:72" pos:end="17:75"><name pos:start="17:72" pos:end="17:75">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">sd</name></name> <operator pos:start="19:15" pos:end="19:16">==</operator> <name pos:start="19:18" pos:end="19:21">NULL</name></expr>)</condition> <block pos:start="19:24" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><call pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:19">register_savevm</name><argument_list pos:start="25:20" pos:end="25:70">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">dev</name></expr></argument>, <argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><literal type="string" pos:start="25:26" pos:end="25:33">"ssi_sd"</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:37"><expr pos:start="25:36" pos:end="25:37"><operator pos:start="25:36" pos:end="25:36">-</operator><literal type="number" pos:start="25:37" pos:end="25:37">1</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:40"><expr pos:start="25:40" pos:end="25:40"><literal type="number" pos:start="25:40" pos:end="25:40">1</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:53"><expr pos:start="25:43" pos:end="25:53"><name pos:start="25:43" pos:end="25:53">ssi_sd_save</name></expr></argument>, <argument pos:start="25:56" pos:end="25:66"><expr pos:start="25:56" pos:end="25:66"><name pos:start="25:56" pos:end="25:66">ssi_sd_load</name></expr></argument>, <argument pos:start="25:69" pos:end="25:69"><expr pos:start="25:69" pos:end="25:69"><name pos:start="25:69" pos:end="25:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
