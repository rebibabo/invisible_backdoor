<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18214.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">blkverify_verify_readv</name><parameter_list pos:start="1:35" pos:end="1:55">(<parameter pos:start="1:36" pos:end="1:54"><decl pos:start="1:36" pos:end="1:54"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">BlkverifyAIOCB</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:5">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:66"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name> <init pos:start="5:20" pos:end="5:66">= <expr pos:start="5:22" pos:end="5:66"><call pos:start="5:22" pos:end="5:66"><name pos:start="5:22" pos:end="5:39">qemu_iovec_compare</name><argument_list pos:start="5:40" pos:end="5:66">(<argument pos:start="5:41" pos:end="5:49"><expr pos:start="5:41" pos:end="5:49"><name pos:start="5:41" pos:end="5:49"><name pos:start="5:41" pos:end="5:43">acb</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:49">qiov</name></name></expr></argument>, <argument pos:start="5:52" pos:end="5:65"><expr pos:start="5:52" pos:end="5:65"><operator pos:start="5:52" pos:end="5:52">&amp;</operator><name pos:start="5:53" pos:end="5:65"><name pos:start="5:53" pos:end="5:55">acb</name><operator pos:start="5:56" pos:end="5:57">-&gt;</operator><name pos:start="5:58" pos:end="5:65">raw_qiov</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:21">(<expr pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:14">offset</name> <operator pos:start="7:16" pos:end="7:17">!=</operator> <operator pos:start="7:19" pos:end="7:19">-</operator><literal type="number" pos:start="7:20" pos:end="7:20">1</literal></expr>)</condition> <block pos:start="7:23" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:78">

        <expr_stmt pos:start="9:9" pos:end="11:78"><expr pos:start="9:9" pos:end="11:77"><call pos:start="9:9" pos:end="11:77"><name pos:start="9:9" pos:end="9:21">blkverify_err</name><argument_list pos:start="9:22" pos:end="11:77">(<argument pos:start="9:23" pos:end="9:25"><expr pos:start="9:23" pos:end="9:25"><name pos:start="9:23" pos:end="9:25">acb</name></expr></argument>, <argument pos:start="9:28" pos:end="9:65"><expr pos:start="9:28" pos:end="9:65"><literal type="string" pos:start="9:28" pos:end="9:58">"contents mismatch in sector %"</literal> <name pos:start="9:60" pos:end="9:65">PRId64</name></expr></argument>,

                      <argument pos:start="11:23" pos:end="11:76"><expr pos:start="11:23" pos:end="11:76"><name pos:start="11:23" pos:end="11:37"><name pos:start="11:23" pos:end="11:25">acb</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:37">sector_num</name></name> <operator pos:start="11:39" pos:end="11:39">+</operator> <operator pos:start="11:41" pos:end="11:41">(</operator><name pos:start="11:42" pos:end="11:48">int64_t</name><operator pos:start="11:49" pos:end="11:49">)</operator><operator pos:start="11:50" pos:end="11:50">(</operator><name pos:start="11:51" pos:end="11:56">offset</name> <operator pos:start="11:58" pos:end="11:58">/</operator> <name pos:start="11:60" pos:end="11:75">BDRV_SECTOR_SIZE</name><operator pos:start="11:76" pos:end="11:76">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
