<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26502.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">output_client_manifest</name><parameter_list pos:start="1:35" pos:end="3:67">(<parameter pos:start="1:36" pos:end="1:59"><decl pos:start="1:36" pos:end="1:59"><type pos:start="1:36" pos:end="1:59"><name pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:41">struct</name> <name pos:start="1:43" pos:end="1:52">VideoFiles</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">files</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:55"><decl pos:start="3:36" pos:end="3:55"><type pos:start="3:36" pos:end="3:55"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">char</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:55">basename</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:66"><decl pos:start="3:58" pos:end="3:66"><type pos:start="3:58" pos:end="3:66"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:66">split</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="159:1">{<block_content pos:start="7:5" pos:end="157:16">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:17">filename</name><index pos:start="7:18" pos:end="7:23">[<expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">1000</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:66"><if pos:start="15:5" pos:end="17:57">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:13">split</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:57"><block_content pos:start="17:9" pos:end="17:57">

        <expr_stmt pos:start="17:9" pos:end="17:57"><expr pos:start="17:9" pos:end="17:56"><call pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:16">snprintf</name><argument_list pos:start="17:17" pos:end="17:56">(<argument pos:start="17:18" pos:end="17:25"><expr pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:25">filename</name></expr></argument>, <argument pos:start="17:28" pos:end="17:43"><expr pos:start="17:28" pos:end="17:43"><sizeof pos:start="17:28" pos:end="17:43">sizeof<argument_list pos:start="17:34" pos:end="17:43">(<argument pos:start="17:35" pos:end="17:42"><expr pos:start="17:35" pos:end="17:42"><name pos:start="17:35" pos:end="17:42">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:46" pos:end="17:55"><expr pos:start="17:46" pos:end="17:55"><literal type="string" pos:start="17:46" pos:end="17:55">"Manifest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="21:66">else<block type="pseudo" pos:start="21:9" pos:end="21:66"><block_content pos:start="21:9" pos:end="21:66">

        <expr_stmt pos:start="21:9" pos:end="21:66"><expr pos:start="21:9" pos:end="21:65"><call pos:start="21:9" pos:end="21:65"><name pos:start="21:9" pos:end="21:16">snprintf</name><argument_list pos:start="21:17" pos:end="21:65">(<argument pos:start="21:18" pos:end="21:25"><expr pos:start="21:18" pos:end="21:25"><name pos:start="21:18" pos:end="21:25">filename</name></expr></argument>, <argument pos:start="21:28" pos:end="21:43"><expr pos:start="21:28" pos:end="21:43"><sizeof pos:start="21:28" pos:end="21:43">sizeof<argument_list pos:start="21:34" pos:end="21:43">(<argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:46" pos:end="21:54"><expr pos:start="21:46" pos:end="21:54"><literal type="string" pos:start="21:46" pos:end="21:54">"%s.ismc"</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:64"><expr pos:start="21:57" pos:end="21:64"><name pos:start="21:57" pos:end="21:64">basename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:7">out</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:30"><name pos:start="23:11" pos:end="23:15">fopen</name><argument_list pos:start="23:16" pos:end="23:30">(<argument pos:start="23:17" pos:end="23:24"><expr pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:24">filename</name></expr></argument>, <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><literal type="string" pos:start="23:27" pos:end="23:29">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">out</name></expr>)</condition> <block pos:start="25:15" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:14">perror</name><argument_list pos:start="27:15" pos:end="27:24">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><call pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:11">fprintf</name><argument_list pos:start="33:12" pos:end="33:64">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">out</name></expr></argument>, <argument pos:start="33:18" pos:end="33:63"><expr pos:start="33:18" pos:end="33:63"><literal type="string" pos:start="33:18" pos:end="33:63">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:69"><expr pos:start="35:5" pos:end="37:68"><call pos:start="35:5" pos:end="37:68"><name pos:start="35:5" pos:end="35:11">fprintf</name><argument_list pos:start="35:12" pos:end="37:68">(<argument pos:start="35:13" pos:end="35:15"><expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">out</name></expr></argument>, <argument pos:start="35:18" pos:end="37:45"><expr pos:start="35:18" pos:end="37:45"><literal type="string" pos:start="35:18" pos:end="35:79">"&lt;SmoothStreamingMedia MajorVersion=\"2\" MinorVersion=\"0\" "</literal>

                 <literal type="string" pos:start="37:18" pos:end="37:31">"Duration=\"%"</literal><name pos:start="37:32" pos:end="37:37">PRId64</name> <literal type="string" pos:start="37:39" pos:end="37:45">"\"&gt;\n"</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:67"><expr pos:start="37:48" pos:end="37:67"><name pos:start="37:48" pos:end="37:62"><name pos:start="37:48" pos:end="37:52">files</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:62">duration</name></name> <operator pos:start="37:64" pos:end="37:64">*</operator> <literal type="number" pos:start="37:66" pos:end="37:67">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="93:5"><if pos:start="39:5" pos:end="93:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">files</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">video_file</name></name> <operator pos:start="39:27" pos:end="39:28">&gt;=</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>)</condition> <block pos:start="39:33" pos:end="93:5">{<block_content pos:start="41:9" pos:end="91:43">

        <decl_stmt pos:start="41:9" pos:end="41:63"><decl pos:start="41:9" pos:end="41:62"><type pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:14">struct</name> <name pos:start="41:16" pos:end="41:24">VideoFile</name></name> <modifier pos:start="41:26" pos:end="41:26">*</modifier></type><name pos:start="41:27" pos:end="41:28">vf</name> <init pos:start="41:30" pos:end="41:62">= <expr pos:start="41:32" pos:end="41:62"><name pos:start="41:32" pos:end="41:62"><name pos:start="41:32" pos:end="41:36">files</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:43">files</name><index pos:start="41:44" pos:end="41:62">[<expr pos:start="41:45" pos:end="41:61"><name pos:start="41:45" pos:end="41:61"><name pos:start="41:45" pos:end="41:49">files</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:61">video_file</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:22"><decl pos:start="43:9" pos:end="43:21"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:17">index</name> <init pos:start="43:19" pos:end="43:21">= <expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="53:51"><expr pos:start="45:9" pos:end="53:50"><call pos:start="45:9" pos:end="53:50"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="53:50">(<argument pos:start="45:17" pos:end="45:19"><expr pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">out</name></expr></argument>,

                <argument pos:start="47:17" pos:end="51:83"><expr pos:start="47:17" pos:end="51:83"><literal type="string" pos:start="47:17" pos:end="47:69">"\t&lt;StreamIndex Type=\"video\" QualityLevels=\"%d\" "</literal>

                <literal type="string" pos:start="49:17" pos:end="49:32">"Chunks=\"%d\" "</literal>

                <literal type="string" pos:start="51:17" pos:end="51:83">"Url=\"QualityLevels({bitrate})/Fragments(video={start time})\"&gt;\n"</literal></expr></argument>,

                <argument pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:21">files</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:37">nb_video_files</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:49"><expr pos:start="53:40" pos:end="53:49"><name pos:start="53:40" pos:end="53:49"><name pos:start="53:40" pos:end="53:41">vf</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:49">chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="81:9">for <control pos:start="55:13" pos:end="55:45">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:40"><expr pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:39"><name pos:start="55:25" pos:end="55:29">files</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:39">nb_files</name></name></expr>;</condition> <incr pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:42">i</name><operator pos:start="55:43" pos:end="55:44">++</operator></expr></incr>)</control> <block pos:start="55:47" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:20">

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:14">vf</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:32"><name pos:start="57:18" pos:end="57:22">files</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:29">files</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:25"><if pos:start="59:13" pos:end="61:25">if <condition pos:start="59:16" pos:end="59:30">(<expr pos:start="59:17" pos:end="59:29"><operator pos:start="59:17" pos:end="59:17">!</operator><name pos:start="59:18" pos:end="59:29"><name pos:start="59:18" pos:end="59:19">vf</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:29">is_video</name></name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:25"><block_content pos:start="61:17" pos:end="61:25">

                <continue pos:start="61:17" pos:end="61:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="71:75"><expr pos:start="63:13" pos:end="71:74"><call pos:start="63:13" pos:end="71:74"><name pos:start="63:13" pos:end="63:19">fprintf</name><argument_list pos:start="63:20" pos:end="71:74">(<argument pos:start="63:21" pos:end="63:23"><expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">out</name></expr></argument>,

                    <argument pos:start="65:21" pos:end="69:41"><expr pos:start="65:21" pos:end="69:41"><literal type="string" pos:start="65:21" pos:end="65:68">"\t\t&lt;QualityLevel Index=\"%d\" Bitrate=\"%d\" "</literal>

                    <literal type="string" pos:start="67:21" pos:end="67:69">"FourCC=\"%s\" MaxWidth=\"%d\" MaxHeight=\"%d\" "</literal>

                    <literal type="string" pos:start="69:21" pos:end="69:41">"CodecPrivateData=\""</literal></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:25"><expr pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:25">index</name></expr></argument>, <argument pos:start="71:28" pos:end="71:38"><expr pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:29">vf</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:38">bitrate</name></name></expr></argument>, <argument pos:start="71:41" pos:end="71:50"><expr pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:42">vf</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:50">fourcc</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:61"><expr pos:start="71:53" pos:end="71:61"><name pos:start="71:53" pos:end="71:61"><name pos:start="71:53" pos:end="71:54">vf</name><operator pos:start="71:55" pos:end="71:56">-&gt;</operator><name pos:start="71:57" pos:end="71:61">width</name></name></expr></argument>, <argument pos:start="71:64" pos:end="71:73"><expr pos:start="71:64" pos:end="71:73"><name pos:start="71:64" pos:end="71:73"><name pos:start="71:64" pos:end="71:65">vf</name><operator pos:start="71:66" pos:end="71:67">-&gt;</operator><name pos:start="71:68" pos:end="71:73">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="73:13" pos:end="75:59">for <control pos:start="73:17" pos:end="73:56">(<init pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:18">j</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:51"><expr pos:start="73:25" pos:end="73:50"><name pos:start="73:25" pos:end="73:25">j</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <name pos:start="73:29" pos:end="73:50"><name pos:start="73:29" pos:end="73:30">vf</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:50">codec_private_size</name></name></expr>;</condition> <incr pos:start="73:53" pos:end="73:55"><expr pos:start="73:53" pos:end="73:55"><name pos:start="73:53" pos:end="73:53">j</name><operator pos:start="73:54" pos:end="73:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:17" pos:end="75:59"><block_content pos:start="75:17" pos:end="75:59">

                <expr_stmt pos:start="75:17" pos:end="75:59"><expr pos:start="75:17" pos:end="75:58"><call pos:start="75:17" pos:end="75:58"><name pos:start="75:17" pos:end="75:23">fprintf</name><argument_list pos:start="75:24" pos:end="75:58">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">out</name></expr></argument>, <argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><literal type="string" pos:start="75:30" pos:end="75:35">"%02X"</literal></expr></argument>, <argument pos:start="75:38" pos:end="75:57"><expr pos:start="75:38" pos:end="75:57"><name pos:start="75:38" pos:end="75:57"><name pos:start="75:38" pos:end="75:39">vf</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:54">codec_private</name><index pos:start="75:55" pos:end="75:57">[<expr pos:start="75:56" pos:end="75:56"><name pos:start="75:56" pos:end="75:56">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="77:13" pos:end="77:36"><expr pos:start="77:13" pos:end="77:35"><call pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:19">fprintf</name><argument_list pos:start="77:20" pos:end="77:35">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">out</name></expr></argument>, <argument pos:start="77:26" pos:end="77:34"><expr pos:start="77:26" pos:end="77:34"><literal type="string" pos:start="77:26" pos:end="77:34">"\" /&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:20"><expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:17">index</name><operator pos:start="79:18" pos:end="79:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="83:9" pos:end="83:45"><expr pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:10">vf</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:44"><name pos:start="83:14" pos:end="83:18">files</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:25">files</name><index pos:start="83:26" pos:end="83:44">[<expr pos:start="83:27" pos:end="83:43"><name pos:start="83:27" pos:end="83:43"><name pos:start="83:27" pos:end="83:31">files</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:43">video_file</name></name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="85:9" pos:end="89:45">for <control pos:start="85:13" pos:end="85:40">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:35"><expr pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:26">vf</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:34">chunks</name></name></expr>;</condition> <incr pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:37">i</name><operator pos:start="85:38" pos:end="85:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:13" pos:end="89:45"><block_content pos:start="87:13" pos:end="89:45">

            <expr_stmt pos:start="87:13" pos:end="89:45"><expr pos:start="87:13" pos:end="89:44"><call pos:start="87:13" pos:end="89:44"><name pos:start="87:13" pos:end="87:19">fprintf</name><argument_list pos:start="87:20" pos:end="89:44">(<argument pos:start="87:21" pos:end="87:23"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">out</name></expr></argument>, <argument pos:start="87:26" pos:end="87:56"><expr pos:start="87:26" pos:end="87:56"><literal type="string" pos:start="87:26" pos:end="87:56">"\t\t&lt;c n=\"%d\" d=\"%d\" /&gt;\n"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:59"><expr pos:start="87:59" pos:end="87:59"><name pos:start="87:59" pos:end="87:59">i</name></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:43"><expr pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:22">vf</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:31">offsets</name><index pos:start="89:32" pos:end="89:34">[<expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">i</name></expr>]</index></name><operator pos:start="89:35" pos:end="89:35">.</operator><name pos:start="89:36" pos:end="89:43">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="91:9" pos:end="91:43"><expr pos:start="91:9" pos:end="91:42"><call pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:15">fprintf</name><argument_list pos:start="91:16" pos:end="91:42">(<argument pos:start="91:17" pos:end="91:19"><expr pos:start="91:17" pos:end="91:19"><name pos:start="91:17" pos:end="91:19">out</name></expr></argument>, <argument pos:start="91:22" pos:end="91:41"><expr pos:start="91:22" pos:end="91:41"><literal type="string" pos:start="91:22" pos:end="91:41">"\t&lt;/StreamIndex&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="153:5"><if pos:start="95:5" pos:end="153:5">if <condition pos:start="95:8" pos:end="95:31">(<expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:13">files</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:25">audio_file</name></name> <operator pos:start="95:27" pos:end="95:28">&gt;=</operator> <literal type="number" pos:start="95:30" pos:end="95:30">0</literal></expr>)</condition> <block pos:start="95:33" pos:end="153:5">{<block_content pos:start="97:9" pos:end="151:43">

        <decl_stmt pos:start="97:9" pos:end="97:63"><decl pos:start="97:9" pos:end="97:62"><type pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:14">struct</name> <name pos:start="97:16" pos:end="97:24">VideoFile</name></name> <modifier pos:start="97:26" pos:end="97:26">*</modifier></type><name pos:start="97:27" pos:end="97:28">vf</name> <init pos:start="97:30" pos:end="97:62">= <expr pos:start="97:32" pos:end="97:62"><name pos:start="97:32" pos:end="97:62"><name pos:start="97:32" pos:end="97:36">files</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:43">files</name><index pos:start="97:44" pos:end="97:62">[<expr pos:start="97:45" pos:end="97:61"><name pos:start="97:45" pos:end="97:61"><name pos:start="97:45" pos:end="97:49">files</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:61">audio_file</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:22"><decl pos:start="99:9" pos:end="99:21"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:17">index</name> <init pos:start="99:19" pos:end="99:21">= <expr pos:start="99:21" pos:end="99:21"><literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="109:51"><expr pos:start="101:9" pos:end="109:50"><call pos:start="101:9" pos:end="109:50"><name pos:start="101:9" pos:end="101:15">fprintf</name><argument_list pos:start="101:16" pos:end="109:50">(<argument pos:start="101:17" pos:end="101:19"><expr pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">out</name></expr></argument>,

                <argument pos:start="103:17" pos:end="107:83"><expr pos:start="103:17" pos:end="107:83"><literal type="string" pos:start="103:17" pos:end="103:69">"\t&lt;StreamIndex Type=\"audio\" QualityLevels=\"%d\" "</literal>

                <literal type="string" pos:start="105:17" pos:end="105:32">"Chunks=\"%d\" "</literal>

                <literal type="string" pos:start="107:17" pos:end="107:83">"Url=\"QualityLevels({bitrate})/Fragments(audio={start time})\"&gt;\n"</literal></expr></argument>,

                <argument pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:21">files</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:37">nb_audio_files</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:49"><expr pos:start="109:40" pos:end="109:49"><name pos:start="109:40" pos:end="109:49"><name pos:start="109:40" pos:end="109:41">vf</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:49">chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="111:9" pos:end="141:9">for <control pos:start="111:13" pos:end="111:45">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:40"><expr pos:start="111:21" pos:end="111:39"><name pos:start="111:21" pos:end="111:21">i</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:39"><name pos:start="111:25" pos:end="111:29">files</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:39">nb_files</name></name></expr>;</condition> <incr pos:start="111:42" pos:end="111:44"><expr pos:start="111:42" pos:end="111:44"><name pos:start="111:42" pos:end="111:42">i</name><operator pos:start="111:43" pos:end="111:44">++</operator></expr></incr>)</control> <block pos:start="111:47" pos:end="141:9">{<block_content pos:start="113:13" pos:end="139:20">

            <expr_stmt pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:14">vf</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <name pos:start="113:18" pos:end="113:32"><name pos:start="113:18" pos:end="113:22">files</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:29">files</name><index pos:start="113:30" pos:end="113:32">[<expr pos:start="113:31" pos:end="113:31"><name pos:start="113:31" pos:end="113:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:25"><if pos:start="115:13" pos:end="117:25">if <condition pos:start="115:16" pos:end="115:30">(<expr pos:start="115:17" pos:end="115:29"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:29"><name pos:start="115:18" pos:end="115:19">vf</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:29">is_audio</name></name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:25"><block_content pos:start="117:17" pos:end="117:25">

                <continue pos:start="117:17" pos:end="117:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="131:58"><expr pos:start="119:13" pos:end="131:57"><call pos:start="119:13" pos:end="131:57"><name pos:start="119:13" pos:end="119:19">fprintf</name><argument_list pos:start="119:20" pos:end="131:57">(<argument pos:start="119:21" pos:end="119:23"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">out</name></expr></argument>,

                    <argument pos:start="121:21" pos:end="127:57"><expr pos:start="121:21" pos:end="127:57"><literal type="string" pos:start="121:21" pos:end="121:68">"\t\t&lt;QualityLevel Index=\"%d\" Bitrate=\"%d\" "</literal>

                    <literal type="string" pos:start="123:21" pos:end="123:72">"FourCC=\"%s\" SamplingRate=\"%d\" Channels=\"%d\" "</literal>

                    <literal type="string" pos:start="125:21" pos:end="125:61">"BitsPerSample=\"16\" PacketSize=\"%d\" "</literal>

                    <literal type="string" pos:start="127:21" pos:end="127:57">"AudioTag=\"%d\" CodecPrivateData=\""</literal></expr></argument>,

                    <argument pos:start="129:21" pos:end="129:25"><expr pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:25">index</name></expr></argument>, <argument pos:start="129:28" pos:end="129:38"><expr pos:start="129:28" pos:end="129:38"><name pos:start="129:28" pos:end="129:38"><name pos:start="129:28" pos:end="129:29">vf</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:38">bitrate</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:50"><expr pos:start="129:41" pos:end="129:50"><name pos:start="129:41" pos:end="129:50"><name pos:start="129:41" pos:end="129:42">vf</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:50">fourcc</name></name></expr></argument>, <argument pos:start="129:53" pos:end="129:67"><expr pos:start="129:53" pos:end="129:67"><name pos:start="129:53" pos:end="129:67"><name pos:start="129:53" pos:end="129:54">vf</name><operator pos:start="129:55" pos:end="129:56">-&gt;</operator><name pos:start="129:57" pos:end="129:67">sample_rate</name></name></expr></argument>,

                    <argument pos:start="131:21" pos:end="131:32"><expr pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:22">vf</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:32">channels</name></name></expr></argument>, <argument pos:start="131:35" pos:end="131:47"><expr pos:start="131:35" pos:end="131:47"><name pos:start="131:35" pos:end="131:47"><name pos:start="131:35" pos:end="131:36">vf</name><operator pos:start="131:37" pos:end="131:38">-&gt;</operator><name pos:start="131:39" pos:end="131:47">blocksize</name></name></expr></argument>, <argument pos:start="131:50" pos:end="131:56"><expr pos:start="131:50" pos:end="131:56"><name pos:start="131:50" pos:end="131:56"><name pos:start="131:50" pos:end="131:51">vf</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:56">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="133:13" pos:end="135:59">for <control pos:start="133:17" pos:end="133:56">(<init pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:22"><name pos:start="133:18" pos:end="133:18">j</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>;</init> <condition pos:start="133:25" pos:end="133:51"><expr pos:start="133:25" pos:end="133:50"><name pos:start="133:25" pos:end="133:25">j</name> <operator pos:start="133:27" pos:end="133:27">&lt;</operator> <name pos:start="133:29" pos:end="133:50"><name pos:start="133:29" pos:end="133:30">vf</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:50">codec_private_size</name></name></expr>;</condition> <incr pos:start="133:53" pos:end="133:55"><expr pos:start="133:53" pos:end="133:55"><name pos:start="133:53" pos:end="133:53">j</name><operator pos:start="133:54" pos:end="133:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="135:17" pos:end="135:59"><block_content pos:start="135:17" pos:end="135:59">

                <expr_stmt pos:start="135:17" pos:end="135:59"><expr pos:start="135:17" pos:end="135:58"><call pos:start="135:17" pos:end="135:58"><name pos:start="135:17" pos:end="135:23">fprintf</name><argument_list pos:start="135:24" pos:end="135:58">(<argument pos:start="135:25" pos:end="135:27"><expr pos:start="135:25" pos:end="135:27"><name pos:start="135:25" pos:end="135:27">out</name></expr></argument>, <argument pos:start="135:30" pos:end="135:35"><expr pos:start="135:30" pos:end="135:35"><literal type="string" pos:start="135:30" pos:end="135:35">"%02X"</literal></expr></argument>, <argument pos:start="135:38" pos:end="135:57"><expr pos:start="135:38" pos:end="135:57"><name pos:start="135:38" pos:end="135:57"><name pos:start="135:38" pos:end="135:39">vf</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:54">codec_private</name><index pos:start="135:55" pos:end="135:57">[<expr pos:start="135:56" pos:end="135:56"><name pos:start="135:56" pos:end="135:56">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="137:13" pos:end="137:36"><expr pos:start="137:13" pos:end="137:35"><call pos:start="137:13" pos:end="137:35"><name pos:start="137:13" pos:end="137:19">fprintf</name><argument_list pos:start="137:20" pos:end="137:35">(<argument pos:start="137:21" pos:end="137:23"><expr pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">out</name></expr></argument>, <argument pos:start="137:26" pos:end="137:34"><expr pos:start="137:26" pos:end="137:34"><literal type="string" pos:start="137:26" pos:end="137:34">"\" /&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:17">index</name><operator pos:start="139:18" pos:end="139:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="143:9" pos:end="143:45"><expr pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:10">vf</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:44"><name pos:start="143:14" pos:end="143:18">files</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:25">files</name><index pos:start="143:26" pos:end="143:44">[<expr pos:start="143:27" pos:end="143:43"><name pos:start="143:27" pos:end="143:43"><name pos:start="143:27" pos:end="143:31">files</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:43">audio_file</name></name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="145:9" pos:end="149:48">for <control pos:start="145:13" pos:end="145:40">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">i</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:35"><expr pos:start="145:21" pos:end="145:34"><name pos:start="145:21" pos:end="145:21">i</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:26">vf</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:34">chunks</name></name></expr>;</condition> <incr pos:start="145:37" pos:end="145:39"><expr pos:start="145:37" pos:end="145:39"><name pos:start="145:37" pos:end="145:37">i</name><operator pos:start="145:38" pos:end="145:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:13" pos:end="149:48"><block_content pos:start="147:13" pos:end="149:48">

            <expr_stmt pos:start="147:13" pos:end="149:48"><expr pos:start="147:13" pos:end="149:47"><call pos:start="147:13" pos:end="149:47"><name pos:start="147:13" pos:end="147:19">fprintf</name><argument_list pos:start="147:20" pos:end="149:47">(<argument pos:start="147:21" pos:end="147:23"><expr pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">out</name></expr></argument>, <argument pos:start="147:26" pos:end="147:56"><expr pos:start="147:26" pos:end="147:56"><literal type="string" pos:start="147:26" pos:end="147:56">"\t\t&lt;c n=\"%d\" d=\"%d\" /&gt;\n"</literal></expr></argument>,

                    <argument pos:start="149:21" pos:end="149:21"><expr pos:start="149:21" pos:end="149:21"><name pos:start="149:21" pos:end="149:21">i</name></expr></argument>, <argument pos:start="149:24" pos:end="149:46"><expr pos:start="149:24" pos:end="149:46"><name pos:start="149:24" pos:end="149:37"><name pos:start="149:24" pos:end="149:25">vf</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:34">offsets</name><index pos:start="149:35" pos:end="149:37">[<expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">i</name></expr>]</index></name><operator pos:start="149:38" pos:end="149:38">.</operator><name pos:start="149:39" pos:end="149:46">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="151:9" pos:end="151:43"><expr pos:start="151:9" pos:end="151:42"><call pos:start="151:9" pos:end="151:42"><name pos:start="151:9" pos:end="151:15">fprintf</name><argument_list pos:start="151:16" pos:end="151:42">(<argument pos:start="151:17" pos:end="151:19"><expr pos:start="151:17" pos:end="151:19"><name pos:start="151:17" pos:end="151:19">out</name></expr></argument>, <argument pos:start="151:22" pos:end="151:41"><expr pos:start="151:22" pos:end="151:41"><literal type="string" pos:start="151:22" pos:end="151:41">"\t&lt;/StreamIndex&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:46"><expr pos:start="155:5" pos:end="155:45"><call pos:start="155:5" pos:end="155:45"><name pos:start="155:5" pos:end="155:11">fprintf</name><argument_list pos:start="155:12" pos:end="155:45">(<argument pos:start="155:13" pos:end="155:15"><expr pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">out</name></expr></argument>, <argument pos:start="155:18" pos:end="155:44"><expr pos:start="155:18" pos:end="155:44"><literal type="string" pos:start="155:18" pos:end="155:44">"&lt;/SmoothStreamingMedia&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:16"><expr pos:start="157:5" pos:end="157:15"><call pos:start="157:5" pos:end="157:15"><name pos:start="157:5" pos:end="157:10">fclose</name><argument_list pos:start="157:11" pos:end="157:15">(<argument pos:start="157:12" pos:end="157:14"><expr pos:start="157:12" pos:end="157:14"><name pos:start="157:12" pos:end="157:14">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
