<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7710.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">EHCIQueue</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:36">ehci_state_fetchqh</name><parameter_list pos:start="1:37" pos:end="1:64">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:46">EHCIState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">ehci</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">EHCIPacket</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">entry</name></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:21" pos:end="7:27">devaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">EHCIQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">q</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:9">entry</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:31">ehci_get_fetch_addr</name><argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">ehci</name></expr></argument>, <argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:5">q</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:29">ehci_find_queue_by_qh</name><argument_list pos:start="15:30" pos:end="15:49">(<argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">ehci</name></expr></argument>, <argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41">entry</name></expr></argument>, <argument pos:start="15:44" pos:end="15:48"><expr pos:start="15:44" pos:end="15:48"><name pos:start="15:44" pos:end="15:48">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">NULL</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <name pos:start="17:17" pos:end="17:17">q</name></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:49">

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:9">q</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:48"><name pos:start="19:13" pos:end="19:28">ehci_alloc_queue</name><argument_list pos:start="19:29" pos:end="19:48">(<argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">ehci</name></expr></argument>, <argument pos:start="19:36" pos:end="19:40"><expr pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:40">entry</name></expr></argument>, <argument pos:start="19:43" pos:end="19:47"><expr pos:start="19:43" pos:end="19:47"><name pos:start="19:43" pos:end="19:47">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:20">QTAILQ_FIRST</name><argument_list pos:start="23:21" pos:end="23:33">(<argument pos:start="23:22" pos:end="23:32"><expr pos:start="23:22" pos:end="23:32"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:32"><name pos:start="23:23" pos:end="23:23">q</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:32">packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">q</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">seen</name></name><operator pos:start="27:12" pos:end="27:13">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">q</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">seen</name></name> <operator pos:start="29:17" pos:end="29:17">&gt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>)</condition> <block pos:start="29:22" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">

        <comment type="block" pos:start="31:9" pos:end="31:56">/* we are going in circles -- stop processing */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:22">ehci_set_state</name><argument_list pos:start="33:23" pos:end="33:47">(<argument pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:27">ehci</name></expr></argument>, <argument pos:start="33:30" pos:end="33:34"><expr pos:start="33:30" pos:end="33:34"><name pos:start="33:30" pos:end="33:34">async</name></expr></argument>, <argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46">EST_ACTIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:17"><expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:9">q</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:16">NULL</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:57"><expr pos:start="43:5" pos:end="45:56"><call pos:start="43:5" pos:end="45:56"><name pos:start="43:5" pos:end="43:14">get_dwords</name><argument_list pos:start="43:15" pos:end="45:56">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">ehci</name></expr></argument>, <argument pos:start="43:22" pos:end="43:41"><expr pos:start="43:22" pos:end="43:41"><call pos:start="43:22" pos:end="43:41"><name pos:start="43:22" pos:end="43:30">NLPTR_GET</name><argument_list pos:start="43:31" pos:end="43:41">(<argument pos:start="43:32" pos:end="43:40"><expr pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:32">q</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:40">qhaddr</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="45:16" pos:end="45:34"><expr pos:start="45:16" pos:end="45:34"><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:24">uint32_t</name> <operator pos:start="45:26" pos:end="45:26">*</operator><operator pos:start="45:27" pos:end="45:27">)</operator> <operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:30">q</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:34">qh</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:55"><expr pos:start="45:37" pos:end="45:55"><sizeof pos:start="45:37" pos:end="45:50">sizeof<argument_list pos:start="45:43" pos:end="45:50">(<argument pos:start="45:44" pos:end="45:49"><expr pos:start="45:44" pos:end="45:49"><name pos:start="45:44" pos:end="45:49">EHCIqh</name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:52" pos:end="45:53">&gt;&gt;</operator> <literal type="number" pos:start="45:55" pos:end="45:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><call pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:17">ehci_trace_qh</name><argument_list pos:start="47:18" pos:end="47:50">(<argument pos:start="47:19" pos:end="47:19"><expr pos:start="47:19" pos:end="47:19"><name pos:start="47:19" pos:end="47:19">q</name></expr></argument>, <argument pos:start="47:22" pos:end="47:41"><expr pos:start="47:22" pos:end="47:41"><call pos:start="47:22" pos:end="47:41"><name pos:start="47:22" pos:end="47:30">NLPTR_GET</name><argument_list pos:start="47:31" pos:end="47:41">(<argument pos:start="47:32" pos:end="47:40"><expr pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:32">q</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:40">qhaddr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:44" pos:end="47:49"><expr pos:start="47:44" pos:end="47:49"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:49"><name pos:start="47:45" pos:end="47:45">q</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:49">qh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:11">devaddr</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:56"><name pos:start="51:15" pos:end="51:23">get_field</name><argument_list pos:start="51:24" pos:end="51:56">(<argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:25">q</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:29">qh</name><operator pos:start="51:30" pos:end="51:30">.</operator><name pos:start="51:31" pos:end="51:36">epchar</name></name></expr></argument>, <argument pos:start="51:39" pos:end="51:55"><expr pos:start="51:39" pos:end="51:55"><name pos:start="51:39" pos:end="51:55">QH_EPCHAR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:50">(<expr pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:9">q</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:14">dev</name></name> <operator pos:start="53:16" pos:end="53:17">!=</operator> <name pos:start="53:19" pos:end="53:22">NULL</name> <operator pos:start="53:24" pos:end="53:25">&amp;&amp;</operator> <name pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:27">q</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:32">dev</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:38">addr</name></name> <operator pos:start="53:40" pos:end="53:41">!=</operator> <name pos:start="53:43" pos:end="53:49">devaddr</name></expr>)</condition> <block pos:start="53:52" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:22">

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:39">(<expr pos:start="55:13" pos:end="55:38"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:38"><name pos:start="55:14" pos:end="55:25">QTAILQ_EMPTY</name><argument_list pos:start="55:26" pos:end="55:38">(<argument pos:start="55:27" pos:end="55:37"><expr pos:start="55:27" pos:end="55:37"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:37"><name pos:start="55:28" pos:end="55:28">q</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:37">packets</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:41" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:33">

            <comment type="block" pos:start="57:13" pos:end="57:47">/* should not happen (guest bug) */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><call pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:29">ehci_cancel_queue</name><argument_list pos:start="59:30" pos:end="59:32">(<argument pos:start="59:31" pos:end="59:31"><expr pos:start="59:31" pos:end="59:31"><name pos:start="59:31" pos:end="59:31">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">q</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">dev</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:21">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:9">q</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:14">dev</name></name> <operator pos:start="67:16" pos:end="67:17">==</operator> <name pos:start="67:19" pos:end="67:22">NULL</name></expr>)</condition> <block pos:start="67:25" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:52">

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:9">q</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:14">dev</name></name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:51"><name pos:start="69:18" pos:end="69:33">ehci_find_device</name><argument_list pos:start="69:34" pos:end="69:51">(<argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:35">q</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:41">ehci</name></name></expr></argument>, <argument pos:start="69:44" pos:end="69:50"><expr pos:start="69:44" pos:end="69:50"><name pos:start="69:44" pos:end="69:50">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="85:5"><if pos:start="75:5" pos:end="85:5">if <condition pos:start="75:8" pos:end="75:45">(<expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:9">p</name> <operator pos:start="75:11" pos:end="75:12">&amp;&amp;</operator> <name pos:start="75:14" pos:end="75:21"><name pos:start="75:14" pos:end="75:14">p</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:21">async</name></name> <operator pos:start="75:23" pos:end="75:24">==</operator> <name pos:start="75:26" pos:end="75:44">EHCI_ASYNC_FINISHED</name></expr>)</condition> <block pos:start="75:47" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:17">

        <comment type="block" pos:start="77:9" pos:end="77:55">/* I/O finished -- continue processing queue */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:62"><expr pos:start="79:9" pos:end="79:61"><call pos:start="79:9" pos:end="79:61"><name pos:start="79:9" pos:end="79:36">trace_usb_ehci_packet_action</name><argument_list pos:start="79:37" pos:end="79:61">(<argument pos:start="79:38" pos:end="79:45"><expr pos:start="79:38" pos:end="79:45"><name pos:start="79:38" pos:end="79:45"><name pos:start="79:38" pos:end="79:38">p</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:45">queue</name></name></expr></argument>, <argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><name pos:start="79:48" pos:end="79:48">p</name></expr></argument>, <argument pos:start="79:51" pos:end="79:60"><expr pos:start="79:51" pos:end="79:60"><literal type="string" pos:start="79:51" pos:end="79:60">"complete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:51"><expr pos:start="81:9" pos:end="81:50"><call pos:start="81:9" pos:end="81:50"><name pos:start="81:9" pos:end="81:22">ehci_set_state</name><argument_list pos:start="81:23" pos:end="81:50">(<argument pos:start="81:24" pos:end="81:27"><expr pos:start="81:24" pos:end="81:27"><name pos:start="81:24" pos:end="81:27">ehci</name></expr></argument>, <argument pos:start="81:30" pos:end="81:34"><expr pos:start="81:30" pos:end="81:34"><name pos:start="81:30" pos:end="81:34">async</name></expr></argument>, <argument pos:start="81:37" pos:end="81:49"><expr pos:start="81:37" pos:end="81:49"><name pos:start="81:37" pos:end="81:49">EST_EXECUTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="118:0"><if pos:start="89:5" pos:end="118:0">if <condition pos:start="89:8" pos:end="89:46">(<expr pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:13">async</name> <operator pos:start="89:15" pos:end="89:16">&amp;&amp;</operator> <operator pos:start="89:18" pos:end="89:18">(</operator><name pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:19">q</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:23">qh</name><operator pos:start="89:24" pos:end="89:24">.</operator><name pos:start="89:25" pos:end="89:30">epchar</name></name> <operator pos:start="89:32" pos:end="89:32">&amp;</operator> <name pos:start="89:34" pos:end="89:44">QH_EPCHAR_H</name><operator pos:start="89:45" pos:end="89:45">)</operator></expr>)</condition> <block pos:start="89:48" pos:end="118:0">{<block_content pos:start="95:9" pos:end="111:9">



        <comment type="block" pos:start="93:9" pos:end="93:59">/*  EHCI spec version 1.0 Section 4.8.3 &amp; 4.10.1 */</comment>

        <if_stmt pos:start="95:9" pos:end="111:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:38">(<expr pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:16">ehci</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:24">usbsts</name></name> <operator pos:start="95:26" pos:end="95:26">&amp;</operator> <name pos:start="95:28" pos:end="95:37">USBSTS_REC</name></expr>)</condition> <block pos:start="95:40" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:48">

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:29">ehci_clear_usbsts</name><argument_list pos:start="97:30" pos:end="97:47">(<argument pos:start="97:31" pos:end="97:34"><expr pos:start="97:31" pos:end="97:34"><name pos:start="97:31" pos:end="97:34">ehci</name></expr></argument>, <argument pos:start="97:37" pos:end="97:46"><expr pos:start="97:37" pos:end="97:46"><name pos:start="97:37" pos:end="97:46">USBSTS_REC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="111:9">else <block pos:start="99:16" pos:end="111:9">{<block_content pos:start="101:13" pos:end="109:21">

            <expr_stmt pos:start="101:13" pos:end="103:58"><expr pos:start="101:13" pos:end="103:57"><call pos:start="101:13" pos:end="103:57"><name pos:start="101:13" pos:end="101:19">DPRINTF</name><argument_list pos:start="101:20" pos:end="103:57">(<argument pos:start="101:21" pos:end="103:45"><expr pos:start="101:21" pos:end="103:45"><literal type="string" pos:start="101:21" pos:end="101:78">"FETCHQH:  QH 0x%08x. H-bit set, reclamation status reset"</literal>

                       <literal type="string" pos:start="103:24" pos:end="103:45">" - done processing\n"</literal></expr></argument>, <argument pos:start="103:48" pos:end="103:56"><expr pos:start="103:48" pos:end="103:56"><name pos:start="103:48" pos:end="103:56"><name pos:start="103:48" pos:end="103:48">q</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:56">qhaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:52"><expr pos:start="105:13" pos:end="105:51"><call pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:26">ehci_set_state</name><argument_list pos:start="105:27" pos:end="105:51">(<argument pos:start="105:28" pos:end="105:31"><expr pos:start="105:28" pos:end="105:31"><name pos:start="105:28" pos:end="105:31">ehci</name></expr></argument>, <argument pos:start="105:34" pos:end="105:38"><expr pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:38">async</name></expr></argument>, <argument pos:start="105:41" pos:end="105:50"><expr pos:start="105:41" pos:end="105:50"><name pos:start="105:41" pos:end="105:50">EST_ACTIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:21"><expr pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:13">q</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:20">NULL</name></expr>;</expr_stmt>

            <goto pos:start="109:13" pos:end="109:21">goto <name pos:start="109:18" pos:end="109:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="117:1" pos:end="117:14">#<cpp:directive pos:start="117:2" pos:end="117:3">if</cpp:directive> <expr pos:start="117:5" pos:end="117:14"><name pos:start="117:5" pos:end="117:14">EHCI_DEBUG</name></expr></cpp:if>

    <if_stmt pos:start="119:5" pos:end="136:0"><if pos:start="119:5" pos:end="136:0">if <condition pos:start="119:8" pos:end="119:32">(<expr pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">q</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:17">qhaddr</name></name> <operator pos:start="119:19" pos:end="119:20">!=</operator> <name pos:start="119:22" pos:end="119:31"><name pos:start="119:22" pos:end="119:22">q</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:26">qh</name><operator pos:start="119:27" pos:end="119:27">.</operator><name pos:start="119:28" pos:end="119:31">next</name></name></expr>)</condition> <block pos:start="119:34" pos:end="136:0">{<block_content pos:start="121:5" pos:end="131:27">

    <expr_stmt pos:start="121:5" pos:end="131:27"><expr pos:start="121:5" pos:end="131:26"><call pos:start="121:5" pos:end="131:26"><name pos:start="121:5" pos:end="121:11">DPRINTF</name><argument_list pos:start="121:12" pos:end="131:26">(<argument pos:start="121:13" pos:end="121:72"><expr pos:start="121:13" pos:end="121:72"><literal type="string" pos:start="121:13" pos:end="121:72">"FETCHQH:  QH 0x%08x (h %x halt %x active %x) next 0x%08x\n"</literal></expr></argument>,

               <argument pos:start="123:16" pos:end="123:24"><expr pos:start="123:16" pos:end="123:24"><name pos:start="123:16" pos:end="123:24"><name pos:start="123:16" pos:end="123:16">q</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:24">qhaddr</name></name></expr></argument>,

               <argument pos:start="125:16" pos:end="125:41"><expr pos:start="125:16" pos:end="125:41"><name pos:start="125:16" pos:end="125:27"><name pos:start="125:16" pos:end="125:16">q</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:20">qh</name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:27">epchar</name></name> <operator pos:start="125:29" pos:end="125:29">&amp;</operator> <name pos:start="125:31" pos:end="125:41">QH_EPCHAR_H</name></expr></argument>,

               <argument pos:start="127:16" pos:end="127:43"><expr pos:start="127:16" pos:end="127:43"><name pos:start="127:16" pos:end="127:26"><name pos:start="127:16" pos:end="127:16">q</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:20">qh</name><operator pos:start="127:21" pos:end="127:21">.</operator><name pos:start="127:22" pos:end="127:26">token</name></name> <operator pos:start="127:28" pos:end="127:28">&amp;</operator> <name pos:start="127:30" pos:end="127:43">QTD_TOKEN_HALT</name></expr></argument>,

               <argument pos:start="129:16" pos:end="129:45"><expr pos:start="129:16" pos:end="129:45"><name pos:start="129:16" pos:end="129:26"><name pos:start="129:16" pos:end="129:16">q</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:20">qh</name><operator pos:start="129:21" pos:end="129:21">.</operator><name pos:start="129:22" pos:end="129:26">token</name></name> <operator pos:start="129:28" pos:end="129:28">&amp;</operator> <name pos:start="129:30" pos:end="129:45">QTD_TOKEN_ACTIVE</name></expr></argument>,

               <argument pos:start="131:16" pos:end="131:25"><expr pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:16">q</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:20">qh</name><operator pos:start="131:21" pos:end="131:21">.</operator><name pos:start="131:22" pos:end="131:25">next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="135:1" pos:end="135:6">#<cpp:directive pos:start="135:2" pos:end="135:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="139:5" pos:end="161:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:37">(<expr pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:9">q</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:13">qh</name><operator pos:start="139:14" pos:end="139:14">.</operator><name pos:start="139:15" pos:end="139:19">token</name></name> <operator pos:start="139:21" pos:end="139:21">&amp;</operator> <name pos:start="139:23" pos:end="139:36">QTD_TOKEN_HALT</name></expr>)</condition> <block pos:start="139:39" pos:end="145:5">{<block_content pos:start="141:9" pos:end="141:54">

        <expr_stmt pos:start="141:9" pos:end="141:54"><expr pos:start="141:9" pos:end="141:53"><call pos:start="141:9" pos:end="141:53"><name pos:start="141:9" pos:end="141:22">ehci_set_state</name><argument_list pos:start="141:23" pos:end="141:53">(<argument pos:start="141:24" pos:end="141:27"><expr pos:start="141:24" pos:end="141:27"><name pos:start="141:24" pos:end="141:27">ehci</name></expr></argument>, <argument pos:start="141:30" pos:end="141:34"><expr pos:start="141:30" pos:end="141:34"><name pos:start="141:30" pos:end="141:34">async</name></expr></argument>, <argument pos:start="141:37" pos:end="141:52"><expr pos:start="141:37" pos:end="141:52"><name pos:start="141:37" pos:end="141:52">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="145:7" pos:end="155:5">else if <condition pos:start="145:15" pos:end="147:52">(<expr pos:start="145:16" pos:end="147:51"><operator pos:start="145:16" pos:end="145:16">(</operator><name pos:start="145:17" pos:end="145:27"><name pos:start="145:17" pos:end="145:17">q</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:21">qh</name><operator pos:start="145:22" pos:end="145:22">.</operator><name pos:start="145:23" pos:end="145:27">token</name></name> <operator pos:start="145:29" pos:end="145:29">&amp;</operator> <name pos:start="145:31" pos:end="145:46">QTD_TOKEN_ACTIVE</name><operator pos:start="145:47" pos:end="145:47">)</operator> <operator pos:start="145:49" pos:end="145:50">&amp;&amp;</operator>

               <operator pos:start="147:16" pos:end="147:16">(</operator><call pos:start="147:17" pos:end="147:45"><name pos:start="147:17" pos:end="147:26">NLPTR_TBIT</name><argument_list pos:start="147:27" pos:end="147:45">(<argument pos:start="147:28" pos:end="147:44"><expr pos:start="147:28" pos:end="147:44"><name pos:start="147:28" pos:end="147:44"><name pos:start="147:28" pos:end="147:28">q</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:32">qh</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:44">current_qtd</name></name></expr></argument>)</argument_list></call> <operator pos:start="147:47" pos:end="147:48">==</operator> <literal type="number" pos:start="147:50" pos:end="147:50">0</literal><operator pos:start="147:51" pos:end="147:51">)</operator></expr>)</condition> <block pos:start="147:54" pos:end="155:5">{<block_content pos:start="149:9" pos:end="151:50">

        <expr_stmt pos:start="149:9" pos:end="149:39"><expr pos:start="149:9" pos:end="149:38"><name pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:9">q</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:18">qtdaddr</name></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:38"><name pos:start="149:22" pos:end="149:22">q</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:26">qh</name><operator pos:start="149:27" pos:end="149:27">.</operator><name pos:start="149:28" pos:end="149:38">current_qtd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:50"><expr pos:start="151:9" pos:end="151:49"><call pos:start="151:9" pos:end="151:49"><name pos:start="151:9" pos:end="151:22">ehci_set_state</name><argument_list pos:start="151:23" pos:end="151:49">(<argument pos:start="151:24" pos:end="151:27"><expr pos:start="151:24" pos:end="151:27"><name pos:start="151:24" pos:end="151:27">ehci</name></expr></argument>, <argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><name pos:start="151:30" pos:end="151:34">async</name></expr></argument>, <argument pos:start="151:37" pos:end="151:48"><expr pos:start="151:37" pos:end="151:48"><name pos:start="151:37" pos:end="151:48">EST_FETCHQTD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="155:7" pos:end="161:5">else <block pos:start="155:12" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:54">

        <comment type="block" pos:start="157:9" pos:end="157:51">/*  EHCI spec version 1.0 Section 4.10.2 */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:54"><expr pos:start="159:9" pos:end="159:53"><call pos:start="159:9" pos:end="159:53"><name pos:start="159:9" pos:end="159:22">ehci_set_state</name><argument_list pos:start="159:23" pos:end="159:53">(<argument pos:start="159:24" pos:end="159:27"><expr pos:start="159:24" pos:end="159:27"><name pos:start="159:24" pos:end="159:27">ehci</name></expr></argument>, <argument pos:start="159:30" pos:end="159:34"><expr pos:start="159:30" pos:end="159:34"><name pos:start="159:30" pos:end="159:34">async</name></expr></argument>, <argument pos:start="159:37" pos:end="159:52"><expr pos:start="159:37" pos:end="159:52"><name pos:start="159:37" pos:end="159:52">EST_ADVANCEQUEUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="165:1" pos:end="165:4"><name pos:start="165:1" pos:end="165:3">out</name>:</label>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><name pos:start="167:12" pos:end="167:12">q</name></expr>;</return>

</block_content>}</block></function>
</unit>
