<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8016.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_residual</name><parameter_list pos:start="1:27" pos:end="1:147">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">H264Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">h</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">GetBitContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">gb</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:69">DCTELEM</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">block</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:83"><decl pos:start="1:79" pos:end="1:83"><type pos:start="1:79" pos:end="1:83"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:83">n</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:109"><decl pos:start="1:86" pos:end="1:109"><type pos:start="1:86" pos:end="1:109"><specifier pos:start="1:86" pos:end="1:90">const</specifier> <name pos:start="1:92" pos:end="1:98">uint8_t</name> <modifier pos:start="1:100" pos:end="1:100">*</modifier></type><name pos:start="1:101" pos:end="1:109">scantable</name></decl></parameter>, <parameter pos:start="1:112" pos:end="1:131"><decl pos:start="1:112" pos:end="1:131"><type pos:start="1:112" pos:end="1:131"><specifier pos:start="1:112" pos:end="1:116">const</specifier> <name pos:start="1:118" pos:end="1:125">uint32_t</name> <modifier pos:start="1:127" pos:end="1:127">*</modifier></type><name pos:start="1:128" pos:end="1:131">qmul</name></decl></parameter>, <parameter pos:start="1:134" pos:end="1:146"><decl pos:start="1:134" pos:end="1:146"><type pos:start="1:134" pos:end="1:146"><name pos:start="1:134" pos:end="1:136">int</name></type> <name pos:start="1:138" pos:end="1:146">max_coeff</name></decl></parameter>)</parameter_list><block pos:start="1:148" pos:end="325:1">{<block_content pos:start="3:5" pos:end="323:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:102"><decl pos:start="5:5" pos:end="5:101"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:48"><name pos:start="5:22" pos:end="5:44">coeff_token_table_index</name><index pos:start="5:45" pos:end="5:48">[<expr pos:start="5:46" pos:end="5:47"><literal type="number" pos:start="5:46" pos:end="5:47">17</literal></expr>]</index></name><init pos:start="5:49" pos:end="5:101">= <expr pos:start="5:51" pos:end="5:101"><block pos:start="5:51" pos:end="5:101">{<expr pos:start="5:52" pos:end="5:52"><literal type="number" pos:start="5:52" pos:end="5:52">0</literal></expr>, <expr pos:start="5:55" pos:end="5:55"><literal type="number" pos:start="5:55" pos:end="5:55">0</literal></expr>, <expr pos:start="5:58" pos:end="5:58"><literal type="number" pos:start="5:58" pos:end="5:58">1</literal></expr>, <expr pos:start="5:61" pos:end="5:61"><literal type="number" pos:start="5:61" pos:end="5:61">1</literal></expr>, <expr pos:start="5:64" pos:end="5:64"><literal type="number" pos:start="5:64" pos:end="5:64">2</literal></expr>, <expr pos:start="5:67" pos:end="5:67"><literal type="number" pos:start="5:67" pos:end="5:67">2</literal></expr>, <expr pos:start="5:70" pos:end="5:70"><literal type="number" pos:start="5:70" pos:end="5:70">2</literal></expr>, <expr pos:start="5:73" pos:end="5:73"><literal type="number" pos:start="5:73" pos:end="5:73">2</literal></expr>, <expr pos:start="5:76" pos:end="5:76"><literal type="number" pos:start="5:76" pos:end="5:76">3</literal></expr>, <expr pos:start="5:79" pos:end="5:79"><literal type="number" pos:start="5:79" pos:end="5:79">3</literal></expr>, <expr pos:start="5:82" pos:end="5:82"><literal type="number" pos:start="5:82" pos:end="5:82">3</literal></expr>, <expr pos:start="5:85" pos:end="5:85"><literal type="number" pos:start="5:85" pos:end="5:85">3</literal></expr>, <expr pos:start="5:88" pos:end="5:88"><literal type="number" pos:start="5:88" pos:end="5:88">3</literal></expr>, <expr pos:start="5:91" pos:end="5:91"><literal type="number" pos:start="5:91" pos:end="5:91">3</literal></expr>, <expr pos:start="5:94" pos:end="5:94"><literal type="number" pos:start="5:94" pos:end="5:94">3</literal></expr>, <expr pos:start="5:97" pos:end="5:97"><literal type="number" pos:start="5:97" pos:end="5:97">3</literal></expr>, <expr pos:start="5:100" pos:end="5:100"><literal type="number" pos:start="5:100" pos:end="5:100">3</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:13">level</name><index pos:start="7:14" pos:end="7:17">[<expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:89"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">zeros_left</name></decl>, <decl pos:start="9:21" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:29">coeff_num</name></decl>, <decl pos:start="9:32" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:42">coeff_token</name></decl>, <decl pos:start="9:45" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:45" pos:end="9:55">total_coeff</name></decl>, <decl pos:start="9:58" pos:end="9:58"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:58" pos:end="9:58">i</name></decl>, <decl pos:start="9:61" pos:end="9:61"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:61" pos:end="9:61">j</name></decl>, <decl pos:start="9:64" pos:end="9:76"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:64" pos:end="9:76">trailing_ones</name></decl>, <decl pos:start="9:79" pos:end="9:88"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:79" pos:end="9:88">run_before</name></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:46">//FIXME put trailing_onex into the context</comment>



    <if_stmt pos:start="17:5" pos:end="45:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:34">(<expr pos:start="17:8" pos:end="17:33"><name pos:start="17:8" pos:end="17:8">n</name> <operator pos:start="17:10" pos:end="17:11">==</operator> <name pos:start="17:13" pos:end="17:33">CHROMA_DC_BLOCK_INDEX</name></expr>)</condition><block pos:start="17:35" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:36">

        <expr_stmt pos:start="19:9" pos:end="19:102"><expr pos:start="19:9" pos:end="19:101"><name pos:start="19:9" pos:end="19:19">coeff_token</name><operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:101"><name pos:start="19:22" pos:end="19:29">get_vlc2</name><argument_list pos:start="19:30" pos:end="19:101">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">gb</name></expr></argument>, <argument pos:start="19:35" pos:end="19:65"><expr pos:start="19:35" pos:end="19:65"><name pos:start="19:35" pos:end="19:65"><name pos:start="19:35" pos:end="19:59">chroma_dc_coeff_token_vlc</name><operator pos:start="19:60" pos:end="19:60">.</operator><name pos:start="19:61" pos:end="19:65">table</name></name></expr></argument>, <argument pos:start="19:68" pos:end="19:97"><expr pos:start="19:68" pos:end="19:97"><name pos:start="19:68" pos:end="19:97">CHROMA_DC_COEFF_TOKEN_VLC_BITS</name></expr></argument>, <argument pos:start="19:100" pos:end="19:100"><expr pos:start="19:100" pos:end="19:100"><literal type="number" pos:start="19:100" pos:end="19:100">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:19">total_coeff</name><operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:32">coeff_token</name><operator pos:start="21:33" pos:end="21:34">&gt;&gt;</operator><literal type="number" pos:start="21:35" pos:end="21:35">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="23:6" pos:end="45:5">else<block pos:start="23:10" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:9">

        <if_stmt pos:start="25:9" pos:end="43:9"><if pos:start="25:9" pos:end="33:9">if<condition pos:start="25:11" pos:end="25:36">(<expr pos:start="25:12" pos:end="25:35"><name pos:start="25:12" pos:end="25:12">n</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <name pos:start="25:17" pos:end="25:35">LUMA_DC_BLOCK_INDEX</name></expr>)</condition><block pos:start="25:37" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:40">

            <expr_stmt pos:start="27:13" pos:end="27:51"><expr pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:23">total_coeff</name><operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:50"><name pos:start="27:26" pos:end="27:44">pred_non_zero_count</name><argument_list pos:start="27:45" pos:end="27:50">(<argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><name pos:start="27:46" pos:end="27:46">h</name></expr></argument>, <argument pos:start="27:49" pos:end="27:49"><expr pos:start="27:49" pos:end="27:49"><literal type="number" pos:start="27:49" pos:end="27:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:126"><expr pos:start="29:13" pos:end="29:125"><name pos:start="29:13" pos:end="29:23">coeff_token</name><operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:125"><name pos:start="29:26" pos:end="29:33">get_vlc2</name><argument_list pos:start="29:34" pos:end="29:125">(<argument pos:start="29:35" pos:end="29:36"><expr pos:start="29:35" pos:end="29:36"><name pos:start="29:35" pos:end="29:36">gb</name></expr></argument>, <argument pos:start="29:39" pos:end="29:99"><expr pos:start="29:39" pos:end="29:99"><name pos:start="29:39" pos:end="29:93"><name pos:start="29:39" pos:end="29:53">coeff_token_vlc</name><index pos:start="29:54" pos:end="29:93">[ <expr pos:start="29:56" pos:end="29:91"><name pos:start="29:56" pos:end="29:91"><name pos:start="29:56" pos:end="29:78">coeff_token_table_index</name><index pos:start="29:79" pos:end="29:91">[<expr pos:start="29:80" pos:end="29:90"><name pos:start="29:80" pos:end="29:90">total_coeff</name></expr>]</index></name></expr> ]</index></name><operator pos:start="29:94" pos:end="29:94">.</operator><name pos:start="29:95" pos:end="29:99">table</name></expr></argument>, <argument pos:start="29:102" pos:end="29:121"><expr pos:start="29:102" pos:end="29:121"><name pos:start="29:102" pos:end="29:121">COEFF_TOKEN_VLC_BITS</name></expr></argument>, <argument pos:start="29:124" pos:end="29:124"><expr pos:start="29:124" pos:end="29:124"><literal type="number" pos:start="29:124" pos:end="29:124">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:23">total_coeff</name><operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:36">coeff_token</name><operator pos:start="31:37" pos:end="31:38">&gt;&gt;</operator><literal type="number" pos:start="31:39" pos:end="31:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="33:10" pos:end="43:9">else<block pos:start="33:14" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:61">

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:23">total_coeff</name><operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:50"><name pos:start="35:26" pos:end="35:44">pred_non_zero_count</name><argument_list pos:start="35:45" pos:end="35:50">(<argument pos:start="35:46" pos:end="35:46"><expr pos:start="35:46" pos:end="35:46"><name pos:start="35:46" pos:end="35:46">h</name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:126"><expr pos:start="37:13" pos:end="37:125"><name pos:start="37:13" pos:end="37:23">coeff_token</name><operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:125"><name pos:start="37:26" pos:end="37:33">get_vlc2</name><argument_list pos:start="37:34" pos:end="37:125">(<argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">gb</name></expr></argument>, <argument pos:start="37:39" pos:end="37:99"><expr pos:start="37:39" pos:end="37:99"><name pos:start="37:39" pos:end="37:93"><name pos:start="37:39" pos:end="37:53">coeff_token_vlc</name><index pos:start="37:54" pos:end="37:93">[ <expr pos:start="37:56" pos:end="37:91"><name pos:start="37:56" pos:end="37:91"><name pos:start="37:56" pos:end="37:78">coeff_token_table_index</name><index pos:start="37:79" pos:end="37:91">[<expr pos:start="37:80" pos:end="37:90"><name pos:start="37:80" pos:end="37:90">total_coeff</name></expr>]</index></name></expr> ]</index></name><operator pos:start="37:94" pos:end="37:94">.</operator><name pos:start="37:95" pos:end="37:99">table</name></expr></argument>, <argument pos:start="37:102" pos:end="37:121"><expr pos:start="37:102" pos:end="37:121"><name pos:start="37:102" pos:end="37:121">COEFF_TOKEN_VLC_BITS</name></expr></argument>, <argument pos:start="37:124" pos:end="37:124"><expr pos:start="37:124" pos:end="37:124"><literal type="number" pos:start="37:124" pos:end="37:124">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:23">total_coeff</name><operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:36">coeff_token</name><operator pos:start="39:37" pos:end="39:38">&gt;&gt;</operator><literal type="number" pos:start="39:39" pos:end="39:39">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:61"><expr pos:start="41:13" pos:end="41:60"><name pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:35">non_zero_count_cache</name><index pos:start="41:36" pos:end="41:47">[ <expr pos:start="41:38" pos:end="41:45"><name pos:start="41:38" pos:end="41:45"><name pos:start="41:38" pos:end="41:42">scan8</name><index pos:start="41:43" pos:end="41:45">[<expr pos:start="41:44" pos:end="41:44"><name pos:start="41:44" pos:end="41:44">n</name></expr>]</index></name></expr> ]</index></name><operator pos:start="41:48" pos:end="41:48">=</operator> <name pos:start="41:50" pos:end="41:60">total_coeff</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="49:5" pos:end="49:30">//FIXME set last_non_zero?</comment>



    <if_stmt pos:start="53:5" pos:end="55:17"><if pos:start="53:5" pos:end="55:17">if<condition pos:start="53:7" pos:end="53:22">(<expr pos:start="53:8" pos:end="53:21"><name pos:start="53:8" pos:end="53:18">total_coeff</name><operator pos:start="53:19" pos:end="53:20">==</operator><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:17"><block_content pos:start="55:9" pos:end="55:17">

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:41">(<expr pos:start="57:8" pos:end="57:40"><name pos:start="57:8" pos:end="57:18">total_coeff</name> <operator pos:start="57:20" pos:end="57:20">&gt;</operator> <operator pos:start="57:22" pos:end="57:22">(</operator><name pos:start="57:23" pos:end="57:30">unsigned</name><operator pos:start="57:31" pos:end="57:31">)</operator><name pos:start="57:32" pos:end="57:40">max_coeff</name></expr>)</condition> <block pos:start="57:43" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:121"><expr pos:start="59:9" pos:end="59:120"><call pos:start="59:9" pos:end="59:120"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:120">(<argument pos:start="59:16" pos:end="59:25"><expr pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:16">h</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:25">avctx</name></name></expr></argument>, <argument pos:start="59:28" pos:end="59:39"><expr pos:start="59:28" pos:end="59:39"><name pos:start="59:28" pos:end="59:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:42" pos:end="59:88"><expr pos:start="59:42" pos:end="59:88"><literal type="string" pos:start="59:42" pos:end="59:88">"corrupted macroblock %d %d (total_coeff=%d)\n"</literal></expr></argument>, <argument pos:start="59:91" pos:end="59:97"><expr pos:start="59:91" pos:end="59:97"><name pos:start="59:91" pos:end="59:97"><name pos:start="59:91" pos:end="59:91">s</name><operator pos:start="59:92" pos:end="59:93">-&gt;</operator><name pos:start="59:94" pos:end="59:97">mb_x</name></name></expr></argument>, <argument pos:start="59:100" pos:end="59:106"><expr pos:start="59:100" pos:end="59:106"><name pos:start="59:100" pos:end="59:106"><name pos:start="59:100" pos:end="59:100">s</name><operator pos:start="59:101" pos:end="59:102">-&gt;</operator><name pos:start="59:103" pos:end="59:106">mb_y</name></name></expr></argument>, <argument pos:start="59:109" pos:end="59:119"><expr pos:start="59:109" pos:end="59:119"><name pos:start="59:109" pos:end="59:119">total_coeff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:17">trailing_ones</name><operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:30">coeff_token</name><operator pos:start="67:31" pos:end="67:31">&amp;</operator><literal type="number" pos:start="67:32" pos:end="67:32">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:79"><expr pos:start="69:5" pos:end="69:78"><call pos:start="69:5" pos:end="69:78"><name pos:start="69:5" pos:end="69:11">tprintf</name><argument_list pos:start="69:12" pos:end="69:78">(<argument pos:start="69:13" pos:end="69:22"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">h</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:22">avctx</name></name></expr></argument>, <argument pos:start="69:25" pos:end="69:49"><expr pos:start="69:25" pos:end="69:49"><literal type="string" pos:start="69:25" pos:end="69:49">"trailing:%d, total:%d\n"</literal></expr></argument>, <argument pos:start="69:52" pos:end="69:64"><expr pos:start="69:52" pos:end="69:64"><name pos:start="69:52" pos:end="69:64">trailing_ones</name></expr></argument>, <argument pos:start="69:67" pos:end="69:77"><expr pos:start="69:67" pos:end="69:77"><name pos:start="69:67" pos:end="69:77">total_coeff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:10">assert</name><argument_list pos:start="71:11" pos:end="71:27">(<argument pos:start="71:12" pos:end="71:26"><expr pos:start="71:12" pos:end="71:26"><name pos:start="71:12" pos:end="71:22">total_coeff</name><operator pos:start="71:23" pos:end="71:24">&lt;=</operator><literal type="number" pos:start="71:25" pos:end="71:26">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:5">i</name> <operator pos:start="75:7" pos:end="75:7">=</operator> <call pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:17">show_bits</name><argument_list pos:start="75:18" pos:end="75:24">(<argument pos:start="75:19" pos:end="75:20"><expr pos:start="75:19" pos:end="75:20"><name pos:start="75:19" pos:end="75:20">gb</name></expr></argument>, <argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><call pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:13">skip_bits</name><argument_list pos:start="77:14" pos:end="77:32">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">gb</name></expr></argument>, <argument pos:start="77:19" pos:end="77:31"><expr pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:31">trailing_ones</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:9">level</name><index pos:start="79:10" pos:end="79:12">[<expr pos:start="79:11" pos:end="79:11"><literal type="number" pos:start="79:11" pos:end="79:11">0</literal></expr>]</index></name> <operator pos:start="79:14" pos:end="79:14">=</operator> <literal type="number" pos:start="79:16" pos:end="79:17">1</literal><operator pos:start="79:17" pos:end="79:17">-</operator><operator pos:start="79:18" pos:end="79:18">(</operator><operator pos:start="79:19" pos:end="79:19">(</operator><name pos:start="79:20" pos:end="79:20">i</name><operator pos:start="79:21" pos:end="79:21">&amp;</operator><literal type="number" pos:start="79:22" pos:end="79:22">4</literal><operator pos:start="79:23" pos:end="79:23">)</operator><operator pos:start="79:24" pos:end="79:25">&gt;&gt;</operator><literal type="number" pos:start="79:26" pos:end="79:26">1</literal><operator pos:start="79:27" pos:end="79:27">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:12"><name pos:start="81:5" pos:end="81:9">level</name><index pos:start="81:10" pos:end="81:12">[<expr pos:start="81:11" pos:end="81:11"><literal type="number" pos:start="81:11" pos:end="81:11">1</literal></expr>]</index></name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:17">1</literal><operator pos:start="81:17" pos:end="81:17">-</operator><operator pos:start="81:18" pos:end="81:18">(</operator><operator pos:start="81:19" pos:end="81:19">(</operator><name pos:start="81:20" pos:end="81:20">i</name><operator pos:start="81:21" pos:end="81:21">&amp;</operator><literal type="number" pos:start="81:22" pos:end="81:22">2</literal><operator pos:start="81:23" pos:end="81:23">)</operator>   <operator pos:start="81:27" pos:end="81:27">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:9">level</name><index pos:start="83:10" pos:end="83:12">[<expr pos:start="83:11" pos:end="83:11"><literal type="number" pos:start="83:11" pos:end="83:11">2</literal></expr>]</index></name> <operator pos:start="83:14" pos:end="83:14">=</operator> <literal type="number" pos:start="83:16" pos:end="83:17">1</literal><operator pos:start="83:17" pos:end="83:17">-</operator><operator pos:start="83:18" pos:end="83:18">(</operator><operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:20">i</name><operator pos:start="83:21" pos:end="83:21">&amp;</operator><literal type="number" pos:start="83:22" pos:end="83:22">1</literal><operator pos:start="83:23" pos:end="83:23">)</operator><operator pos:start="83:24" pos:end="83:25">&lt;&lt;</operator><literal type="number" pos:start="83:26" pos:end="83:26">1</literal><operator pos:start="83:27" pos:end="83:27">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="219:5"><if pos:start="87:5" pos:end="219:5">if<condition pos:start="87:7" pos:end="87:33">(<expr pos:start="87:8" pos:end="87:32"><name pos:start="87:8" pos:end="87:20">trailing_ones</name><operator pos:start="87:21" pos:end="87:21">&lt;</operator><name pos:start="87:22" pos:end="87:32">total_coeff</name></expr>)</condition> <block pos:start="87:35" pos:end="219:5">{<block_content pos:start="89:9" pos:end="217:9">

        <decl_stmt pos:start="89:9" pos:end="89:25"><decl pos:start="89:9" pos:end="89:16"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:16">mask</name></decl>, <decl pos:start="89:19" pos:end="89:24"><type ref="prev" pos:start="89:9" pos:end="89:11"/><name pos:start="89:19" pos:end="89:24">prefix</name></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:65"><decl pos:start="91:9" pos:end="91:64"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:25">suffix_length</name> <init pos:start="91:27" pos:end="91:64">= <expr pos:start="91:29" pos:end="91:64"><name pos:start="91:29" pos:end="91:39">total_coeff</name> <operator pos:start="91:41" pos:end="91:41">&gt;</operator> <literal type="number" pos:start="91:43" pos:end="91:44">10</literal> <operator pos:start="91:46" pos:end="91:46">&amp;</operator> <name pos:start="91:48" pos:end="91:60">trailing_ones</name> <operator pos:start="91:62" pos:end="91:62">&lt;</operator> <literal type="number" pos:start="91:64" pos:end="91:64">3</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:49"><decl pos:start="93:9" pos:end="93:48"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:17">bitsi</name><init pos:start="93:18" pos:end="93:48">= <expr pos:start="93:20" pos:end="93:48"><call pos:start="93:20" pos:end="93:48"><name pos:start="93:20" pos:end="93:28">show_bits</name><argument_list pos:start="93:29" pos:end="93:48">(<argument pos:start="93:30" pos:end="93:31"><expr pos:start="93:30" pos:end="93:31"><name pos:start="93:30" pos:end="93:31">gb</name></expr></argument>, <argument pos:start="93:34" pos:end="93:47"><expr pos:start="93:34" pos:end="93:47"><name pos:start="93:34" pos:end="93:47">LEVEL_TAB_BITS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:65"><decl pos:start="95:9" pos:end="95:64"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:22">level_code</name><init pos:start="95:23" pos:end="95:64">= <expr pos:start="95:25" pos:end="95:64"><name pos:start="95:25" pos:end="95:64"><name pos:start="95:25" pos:end="95:39">cavlc_level_tab</name><index pos:start="95:40" pos:end="95:54">[<expr pos:start="95:41" pos:end="95:53"><name pos:start="95:41" pos:end="95:53">suffix_length</name></expr>]</index><index pos:start="95:55" pos:end="95:61">[<expr pos:start="95:56" pos:end="95:60"><name pos:start="95:56" pos:end="95:60">bitsi</name></expr>]</index><index pos:start="95:62" pos:end="95:64">[<expr pos:start="95:63" pos:end="95:63"><literal type="number" pos:start="95:63" pos:end="95:63">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:64"><expr pos:start="99:9" pos:end="99:63"><call pos:start="99:9" pos:end="99:63"><name pos:start="99:9" pos:end="99:17">skip_bits</name><argument_list pos:start="99:18" pos:end="99:63">(<argument pos:start="99:19" pos:end="99:20"><expr pos:start="99:19" pos:end="99:20"><name pos:start="99:19" pos:end="99:20">gb</name></expr></argument>, <argument pos:start="99:23" pos:end="99:62"><expr pos:start="99:23" pos:end="99:62"><name pos:start="99:23" pos:end="99:62"><name pos:start="99:23" pos:end="99:37">cavlc_level_tab</name><index pos:start="99:38" pos:end="99:52">[<expr pos:start="99:39" pos:end="99:51"><name pos:start="99:39" pos:end="99:51">suffix_length</name></expr>]</index><index pos:start="99:53" pos:end="99:59">[<expr pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:58">bitsi</name></expr>]</index><index pos:start="99:60" pos:end="99:62">[<expr pos:start="99:61" pos:end="99:61"><literal type="number" pos:start="99:61" pos:end="99:61">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="165:9"><if pos:start="101:9" pos:end="155:9">if<condition pos:start="101:11" pos:end="101:29">(<expr pos:start="101:12" pos:end="101:28"><name pos:start="101:12" pos:end="101:21">level_code</name> <operator pos:start="101:23" pos:end="101:24">&gt;=</operator> <literal type="number" pos:start="101:26" pos:end="101:28">100</literal></expr>)</condition><block pos:start="101:30" pos:end="155:9">{<block_content pos:start="103:13" pos:end="153:70">

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:18">prefix</name><operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:30">level_code</name> <operator pos:start="103:32" pos:end="103:32">-</operator> <literal type="number" pos:start="103:34" pos:end="103:36">100</literal></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:47"><if pos:start="105:13" pos:end="107:47">if<condition pos:start="105:15" pos:end="105:40">(<expr pos:start="105:16" pos:end="105:39"><name pos:start="105:16" pos:end="105:21">prefix</name> <operator pos:start="105:23" pos:end="105:24">==</operator> <name pos:start="105:26" pos:end="105:39">LEVEL_TAB_BITS</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:47"><block_content pos:start="107:17" pos:end="107:47">

                <expr_stmt pos:start="107:17" pos:end="107:47"><expr pos:start="107:17" pos:end="107:46"><name pos:start="107:17" pos:end="107:22">prefix</name> <operator pos:start="107:24" pos:end="107:25">+=</operator> <call pos:start="107:27" pos:end="107:46"><name pos:start="107:27" pos:end="107:42">get_level_prefix</name><argument_list pos:start="107:43" pos:end="107:46">(<argument pos:start="107:44" pos:end="107:45"><expr pos:start="107:44" pos:end="107:45"><name pos:start="107:44" pos:end="107:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="line" pos:start="111:13" pos:end="111:65">//first coefficient has suffix_length equal to 0 or 1</comment>

            <if_stmt pos:start="113:13" pos:end="141:13"><if pos:start="113:13" pos:end="123:13">if<condition pos:start="113:15" pos:end="113:25">(<expr pos:start="113:16" pos:end="113:24"><name pos:start="113:16" pos:end="113:21">prefix</name><operator pos:start="113:22" pos:end="113:22">&lt;</operator><literal type="number" pos:start="113:23" pos:end="113:24">14</literal></expr>)</condition><block pos:start="113:26" pos:end="123:13">{<block_content pos:start="115:17" pos:end="121:39"> <comment type="line" pos:start="113:28" pos:end="113:86">//FIXME try to build a large unified VLC table for all this</comment>

                <if_stmt pos:start="115:17" pos:end="121:39"><if pos:start="115:17" pos:end="117:60">if<condition pos:start="115:19" pos:end="115:33">(<expr pos:start="115:20" pos:end="115:32"><name pos:start="115:20" pos:end="115:32">suffix_length</name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:60"><block_content pos:start="117:21" pos:end="117:60">

                    <expr_stmt pos:start="117:21" pos:end="117:60"><expr pos:start="117:21" pos:end="117:59"><name pos:start="117:21" pos:end="117:30">level_code</name><operator pos:start="117:31" pos:end="117:31">=</operator> <operator pos:start="117:33" pos:end="117:33">(</operator><name pos:start="117:34" pos:end="117:39">prefix</name><operator pos:start="117:40" pos:end="117:41">&lt;&lt;</operator><literal type="number" pos:start="117:42" pos:end="117:42">1</literal><operator pos:start="117:43" pos:end="117:43">)</operator> <operator pos:start="117:45" pos:end="117:45">+</operator> <call pos:start="117:47" pos:end="117:59"><name pos:start="117:47" pos:end="117:55">get_bits1</name><argument_list pos:start="117:56" pos:end="117:59">(<argument pos:start="117:57" pos:end="117:58"><expr pos:start="117:57" pos:end="117:58"><name pos:start="117:57" pos:end="117:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="117:62" pos:end="117:67">//part</comment>

                <else pos:start="119:17" pos:end="121:39">else<block type="pseudo" pos:start="121:21" pos:end="121:39"><block_content pos:start="121:21" pos:end="121:39">

                    <expr_stmt pos:start="121:21" pos:end="121:39"><expr pos:start="121:21" pos:end="121:38"><name pos:start="121:21" pos:end="121:30">level_code</name><operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:38">prefix</name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="121:41" pos:end="121:46">//part</comment>

            </block_content>}</block></if><if type="elseif" pos:start="123:14" pos:end="133:13">else if<condition pos:start="123:21" pos:end="123:32">(<expr pos:start="123:22" pos:end="123:31"><name pos:start="123:22" pos:end="123:27">prefix</name><operator pos:start="123:28" pos:end="123:29">==</operator><literal type="number" pos:start="123:30" pos:end="123:31">14</literal></expr>)</condition><block pos:start="123:33" pos:end="133:13">{<block_content pos:start="125:17" pos:end="131:57">

                <if_stmt pos:start="125:17" pos:end="131:57"><if pos:start="125:17" pos:end="127:60">if<condition pos:start="125:19" pos:end="125:33">(<expr pos:start="125:20" pos:end="125:32"><name pos:start="125:20" pos:end="125:32">suffix_length</name></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:60"><block_content pos:start="127:21" pos:end="127:60">

                    <expr_stmt pos:start="127:21" pos:end="127:60"><expr pos:start="127:21" pos:end="127:59"><name pos:start="127:21" pos:end="127:30">level_code</name><operator pos:start="127:31" pos:end="127:31">=</operator> <operator pos:start="127:33" pos:end="127:33">(</operator><name pos:start="127:34" pos:end="127:39">prefix</name><operator pos:start="127:40" pos:end="127:41">&lt;&lt;</operator><literal type="number" pos:start="127:42" pos:end="127:42">1</literal><operator pos:start="127:43" pos:end="127:43">)</operator> <operator pos:start="127:45" pos:end="127:45">+</operator> <call pos:start="127:47" pos:end="127:59"><name pos:start="127:47" pos:end="127:55">get_bits1</name><argument_list pos:start="127:56" pos:end="127:59">(<argument pos:start="127:57" pos:end="127:58"><expr pos:start="127:57" pos:end="127:58"><name pos:start="127:57" pos:end="127:58">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="127:62" pos:end="127:67">//part</comment>

                <else pos:start="129:17" pos:end="131:57">else<block type="pseudo" pos:start="131:21" pos:end="131:57"><block_content pos:start="131:21" pos:end="131:57">

                    <expr_stmt pos:start="131:21" pos:end="131:57"><expr pos:start="131:21" pos:end="131:56"><name pos:start="131:21" pos:end="131:30">level_code</name><operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:38">prefix</name> <operator pos:start="131:40" pos:end="131:40">+</operator> <call pos:start="131:42" pos:end="131:56"><name pos:start="131:42" pos:end="131:49">get_bits</name><argument_list pos:start="131:50" pos:end="131:56">(<argument pos:start="131:51" pos:end="131:52"><expr pos:start="131:51" pos:end="131:52"><name pos:start="131:51" pos:end="131:52">gb</name></expr></argument>, <argument pos:start="131:55" pos:end="131:55"><expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="131:59" pos:end="131:64">//part</comment>

            </block_content>}</block></if><else pos:start="133:14" pos:end="141:13">else<block pos:start="133:18" pos:end="141:13">{<block_content pos:start="135:17" pos:end="139:55">

                <expr_stmt pos:start="135:17" pos:end="135:56"><expr pos:start="135:17" pos:end="135:55"><name pos:start="135:17" pos:end="135:26">level_code</name><operator pos:start="135:27" pos:end="135:27">=</operator> <literal type="number" pos:start="135:29" pos:end="135:32">30</literal> <operator pos:start="135:32" pos:end="135:32">+</operator> <call pos:start="135:34" pos:end="135:55"><name pos:start="135:34" pos:end="135:41">get_bits</name><argument_list pos:start="135:42" pos:end="135:55">(<argument pos:start="135:43" pos:end="135:44"><expr pos:start="135:43" pos:end="135:44"><name pos:start="135:43" pos:end="135:44">gb</name></expr></argument>, <argument pos:start="135:47" pos:end="135:54"><expr pos:start="135:47" pos:end="135:54"><name pos:start="135:47" pos:end="135:52">prefix</name><operator pos:start="135:53" pos:end="135:53">-</operator><literal type="number" pos:start="135:54" pos:end="135:54">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="135:58" pos:end="135:63">//part</comment>

                <if_stmt pos:start="137:17" pos:end="139:55"><if pos:start="137:17" pos:end="139:55">if<condition pos:start="137:19" pos:end="137:30">(<expr pos:start="137:20" pos:end="137:29"><name pos:start="137:20" pos:end="137:25">prefix</name><operator pos:start="137:26" pos:end="137:27">&gt;=</operator><literal type="number" pos:start="137:28" pos:end="137:29">16</literal></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:55"><block_content pos:start="139:21" pos:end="139:55">

                    <expr_stmt pos:start="139:21" pos:end="139:55"><expr pos:start="139:21" pos:end="139:54"><name pos:start="139:21" pos:end="139:30">level_code</name> <operator pos:start="139:32" pos:end="139:33">+=</operator> <operator pos:start="139:35" pos:end="139:35">(</operator><literal type="number" pos:start="139:36" pos:end="139:36">1</literal><operator pos:start="139:37" pos:end="139:38">&lt;&lt;</operator><operator pos:start="139:39" pos:end="139:39">(</operator><name pos:start="139:40" pos:end="139:45">prefix</name><operator pos:start="139:46" pos:end="139:46">-</operator><literal type="number" pos:start="139:47" pos:end="139:47">3</literal><operator pos:start="139:48" pos:end="139:48">)</operator><operator pos:start="139:49" pos:end="139:49">)</operator><operator pos:start="139:50" pos:end="139:50">-</operator><literal type="number" pos:start="139:51" pos:end="139:54">4096</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="145:13" pos:end="145:50"><if pos:start="145:13" pos:end="145:50">if<condition pos:start="145:15" pos:end="145:33">(<expr pos:start="145:16" pos:end="145:32"><name pos:start="145:16" pos:end="145:28">trailing_ones</name> <operator pos:start="145:30" pos:end="145:30">&lt;</operator> <literal type="number" pos:start="145:32" pos:end="145:32">3</literal></expr>)</condition><block type="pseudo" pos:start="145:35" pos:end="145:50"><block_content pos:start="145:35" pos:end="145:50"> <expr_stmt pos:start="145:35" pos:end="145:50"><expr pos:start="145:35" pos:end="145:49"><name pos:start="145:35" pos:end="145:44">level_code</name> <operator pos:start="145:46" pos:end="145:47">+=</operator> <literal type="number" pos:start="145:49" pos:end="145:49">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:30"><expr pos:start="149:13" pos:end="149:29"><name pos:start="149:13" pos:end="149:25">suffix_length</name> <operator pos:start="149:27" pos:end="149:27">=</operator> <literal type="number" pos:start="149:29" pos:end="149:29">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:34"><expr pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:16">mask</name><operator pos:start="151:17" pos:end="151:17">=</operator> <operator pos:start="151:19" pos:end="151:19">-</operator><operator pos:start="151:20" pos:end="151:20">(</operator><name pos:start="151:21" pos:end="151:30">level_code</name><operator pos:start="151:31" pos:end="151:31">&amp;</operator><literal type="number" pos:start="151:32" pos:end="151:32">1</literal><operator pos:start="151:33" pos:end="151:33">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:70"><expr pos:start="153:13" pos:end="153:69"><name pos:start="153:13" pos:end="153:32"><name pos:start="153:13" pos:end="153:17">level</name><index pos:start="153:18" pos:end="153:32">[<expr pos:start="153:19" pos:end="153:31"><name pos:start="153:19" pos:end="153:31">trailing_ones</name></expr>]</index></name><operator pos:start="153:33" pos:end="153:33">=</operator> <operator pos:start="153:35" pos:end="153:35">(</operator><operator pos:start="153:36" pos:end="153:36">(</operator><operator pos:start="153:37" pos:end="153:37">(</operator><literal type="number" pos:start="153:38" pos:end="153:39">2</literal><operator pos:start="153:39" pos:end="153:39">+</operator><name pos:start="153:40" pos:end="153:49">level_code</name><operator pos:start="153:50" pos:end="153:50">)</operator><operator pos:start="153:51" pos:end="153:52">&gt;&gt;</operator><literal type="number" pos:start="153:53" pos:end="153:53">1</literal><operator pos:start="153:54" pos:end="153:54">)</operator> <operator pos:start="153:56" pos:end="153:56">^</operator> <name pos:start="153:58" pos:end="153:61">mask</name><operator pos:start="153:62" pos:end="153:62">)</operator> <operator pos:start="153:64" pos:end="153:64">-</operator> <name pos:start="153:66" pos:end="153:69">mask</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="155:10" pos:end="165:9">else<block pos:start="155:14" pos:end="165:9">{<block_content pos:start="157:13" pos:end="163:45">

            <expr_stmt pos:start="157:13" pos:end="157:70"><expr pos:start="157:13" pos:end="157:69"><name pos:start="157:13" pos:end="157:22">level_code</name> <operator pos:start="157:24" pos:end="157:25">+=</operator> <operator pos:start="157:27" pos:end="157:27">(</operator><operator pos:start="157:28" pos:end="157:28">(</operator><name pos:start="157:29" pos:end="157:38">level_code</name><operator pos:start="157:39" pos:end="157:40">&gt;&gt;</operator><literal type="number" pos:start="157:41" pos:end="157:42">31</literal><operator pos:start="157:43" pos:end="157:43">)</operator><operator pos:start="157:44" pos:end="157:44">|</operator><literal type="number" pos:start="157:45" pos:end="157:45">1</literal><operator pos:start="157:46" pos:end="157:46">)</operator> <operator pos:start="157:48" pos:end="157:48">&amp;</operator> <operator pos:start="157:50" pos:end="157:50">-</operator><operator pos:start="157:51" pos:end="157:51">(</operator><name pos:start="157:52" pos:end="157:64">trailing_ones</name> <operator pos:start="157:66" pos:end="157:66">&lt;</operator> <literal type="number" pos:start="157:68" pos:end="157:68">3</literal><operator pos:start="157:69" pos:end="157:69">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="161:13" pos:end="161:55"><expr pos:start="161:13" pos:end="161:54"><name pos:start="161:13" pos:end="161:25">suffix_length</name> <operator pos:start="161:27" pos:end="161:27">=</operator> <literal type="number" pos:start="161:29" pos:end="161:31">1</literal> <operator pos:start="161:31" pos:end="161:31">+</operator> <operator pos:start="161:33" pos:end="161:33">(</operator><name pos:start="161:34" pos:end="161:43">level_code</name> <operator pos:start="161:45" pos:end="161:45">+</operator> <literal type="number" pos:start="161:47" pos:end="161:48">3U</literal> <operator pos:start="161:50" pos:end="161:50">&gt;</operator> <literal type="number" pos:start="161:52" pos:end="161:53">6U</literal><operator pos:start="161:54" pos:end="161:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:45"><expr pos:start="163:13" pos:end="163:44"><name pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:17">level</name><index pos:start="163:18" pos:end="163:32">[<expr pos:start="163:19" pos:end="163:31"><name pos:start="163:19" pos:end="163:31">trailing_ones</name></expr>]</index></name><operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:44">level_code</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="line" pos:start="169:9" pos:end="169:55">//remaining coefficients have suffix_length &gt; 0</comment>

        <for pos:start="171:9" pos:end="217:9">for<control pos:start="171:12" pos:end="171:48">(<init pos:start="171:13" pos:end="171:30"><expr pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:13">i</name><operator pos:start="171:14" pos:end="171:14">=</operator><name pos:start="171:15" pos:end="171:27">trailing_ones</name><operator pos:start="171:28" pos:end="171:28">+</operator><literal type="number" pos:start="171:29" pos:end="171:29">1</literal></expr>;</init><condition pos:start="171:31" pos:end="171:44"><expr pos:start="171:31" pos:end="171:43"><name pos:start="171:31" pos:end="171:31">i</name><operator pos:start="171:32" pos:end="171:32">&lt;</operator><name pos:start="171:33" pos:end="171:43">total_coeff</name></expr>;</condition><incr pos:start="171:45" pos:end="171:47"><expr pos:start="171:45" pos:end="171:47"><name pos:start="171:45" pos:end="171:45">i</name><operator pos:start="171:46" pos:end="171:47">++</operator></expr></incr>)</control> <block pos:start="171:50" pos:end="217:9">{<block_content pos:start="173:13" pos:end="215:102">

            <decl_stmt pos:start="173:13" pos:end="173:82"><decl pos:start="173:13" pos:end="173:81"><type pos:start="173:13" pos:end="173:37"><specifier pos:start="173:13" pos:end="173:18">static</specifier> <specifier pos:start="173:20" pos:end="173:24">const</specifier> <name pos:start="173:26" pos:end="173:33">unsigned</name> <name pos:start="173:35" pos:end="173:37">int</name></type> <name pos:start="173:39" pos:end="173:53"><name pos:start="173:39" pos:end="173:50">suffix_limit</name><index pos:start="173:51" pos:end="173:53">[<expr pos:start="173:52" pos:end="173:52"><literal type="number" pos:start="173:52" pos:end="173:52">7</literal></expr>]</index></name> <init pos:start="173:55" pos:end="173:81">= <expr pos:start="173:57" pos:end="173:81"><block pos:start="173:57" pos:end="173:81">{<expr pos:start="173:58" pos:end="173:58"><literal type="number" pos:start="173:58" pos:end="173:58">0</literal></expr>,<expr pos:start="173:60" pos:end="173:60"><literal type="number" pos:start="173:60" pos:end="173:60">3</literal></expr>,<expr pos:start="173:62" pos:end="173:62"><literal type="number" pos:start="173:62" pos:end="173:62">6</literal></expr>,<expr pos:start="173:64" pos:end="173:65"><literal type="number" pos:start="173:64" pos:end="173:65">12</literal></expr>,<expr pos:start="173:67" pos:end="173:68"><literal type="number" pos:start="173:67" pos:end="173:68">24</literal></expr>,<expr pos:start="173:70" pos:end="173:71"><literal type="number" pos:start="173:70" pos:end="173:71">48</literal></expr>,<expr pos:start="173:73" pos:end="173:79"><name pos:start="173:73" pos:end="173:79">INT_MAX</name></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:53"><decl pos:start="175:13" pos:end="175:52"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:21">bitsi</name><init pos:start="175:22" pos:end="175:52">= <expr pos:start="175:24" pos:end="175:52"><call pos:start="175:24" pos:end="175:52"><name pos:start="175:24" pos:end="175:32">show_bits</name><argument_list pos:start="175:33" pos:end="175:52">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">gb</name></expr></argument>, <argument pos:start="175:38" pos:end="175:51"><expr pos:start="175:38" pos:end="175:51"><name pos:start="175:38" pos:end="175:51">LEVEL_TAB_BITS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:65"><expr pos:start="177:13" pos:end="177:64"><name pos:start="177:13" pos:end="177:22">level_code</name><operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:64"><name pos:start="177:25" pos:end="177:39">cavlc_level_tab</name><index pos:start="177:40" pos:end="177:54">[<expr pos:start="177:41" pos:end="177:53"><name pos:start="177:41" pos:end="177:53">suffix_length</name></expr>]</index><index pos:start="177:55" pos:end="177:61">[<expr pos:start="177:56" pos:end="177:60"><name pos:start="177:56" pos:end="177:60">bitsi</name></expr>]</index><index pos:start="177:62" pos:end="177:64">[<expr pos:start="177:63" pos:end="177:63"><literal type="number" pos:start="177:63" pos:end="177:63">0</literal></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:68"><expr pos:start="181:13" pos:end="181:67"><call pos:start="181:13" pos:end="181:67"><name pos:start="181:13" pos:end="181:21">skip_bits</name><argument_list pos:start="181:22" pos:end="181:67">(<argument pos:start="181:23" pos:end="181:24"><expr pos:start="181:23" pos:end="181:24"><name pos:start="181:23" pos:end="181:24">gb</name></expr></argument>, <argument pos:start="181:27" pos:end="181:66"><expr pos:start="181:27" pos:end="181:66"><name pos:start="181:27" pos:end="181:66"><name pos:start="181:27" pos:end="181:41">cavlc_level_tab</name><index pos:start="181:42" pos:end="181:56">[<expr pos:start="181:43" pos:end="181:55"><name pos:start="181:43" pos:end="181:55">suffix_length</name></expr>]</index><index pos:start="181:57" pos:end="181:63">[<expr pos:start="181:58" pos:end="181:62"><name pos:start="181:58" pos:end="181:62">bitsi</name></expr>]</index><index pos:start="181:64" pos:end="181:66">[<expr pos:start="181:65" pos:end="181:65"><literal type="number" pos:start="181:65" pos:end="181:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="183:13" pos:end="211:13"><if pos:start="183:13" pos:end="211:13">if<condition pos:start="183:15" pos:end="183:33">(<expr pos:start="183:16" pos:end="183:32"><name pos:start="183:16" pos:end="183:25">level_code</name> <operator pos:start="183:27" pos:end="183:28">&gt;=</operator> <literal type="number" pos:start="183:30" pos:end="183:32">100</literal></expr>)</condition><block pos:start="183:34" pos:end="211:13">{<block_content pos:start="185:17" pos:end="209:64">

                <expr_stmt pos:start="185:17" pos:end="185:41"><expr pos:start="185:17" pos:end="185:40"><name pos:start="185:17" pos:end="185:22">prefix</name><operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:34">level_code</name> <operator pos:start="185:36" pos:end="185:36">-</operator> <literal type="number" pos:start="185:38" pos:end="185:40">100</literal></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="191:17"><if pos:start="187:17" pos:end="191:17">if<condition pos:start="187:19" pos:end="187:44">(<expr pos:start="187:20" pos:end="187:43"><name pos:start="187:20" pos:end="187:25">prefix</name> <operator pos:start="187:27" pos:end="187:28">==</operator> <name pos:start="187:30" pos:end="187:43">LEVEL_TAB_BITS</name></expr>)</condition><block pos:start="187:45" pos:end="191:17">{<block_content pos:start="189:21" pos:end="189:51">

                    <expr_stmt pos:start="189:21" pos:end="189:51"><expr pos:start="189:21" pos:end="189:50"><name pos:start="189:21" pos:end="189:26">prefix</name> <operator pos:start="189:28" pos:end="189:29">+=</operator> <call pos:start="189:31" pos:end="189:50"><name pos:start="189:31" pos:end="189:46">get_level_prefix</name><argument_list pos:start="189:47" pos:end="189:50">(<argument pos:start="189:48" pos:end="189:49"><expr pos:start="189:48" pos:end="189:49"><name pos:start="189:48" pos:end="189:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="193:17" pos:end="205:17"><if pos:start="193:17" pos:end="197:17">if<condition pos:start="193:19" pos:end="193:29">(<expr pos:start="193:20" pos:end="193:28"><name pos:start="193:20" pos:end="193:25">prefix</name><operator pos:start="193:26" pos:end="193:26">&lt;</operator><literal type="number" pos:start="193:27" pos:end="193:28">15</literal></expr>)</condition><block pos:start="193:30" pos:end="197:17">{<block_content pos:start="195:21" pos:end="195:87">

                    <expr_stmt pos:start="195:21" pos:end="195:87"><expr pos:start="195:21" pos:end="195:86"><name pos:start="195:21" pos:end="195:30">level_code</name> <operator pos:start="195:32" pos:end="195:32">=</operator> <operator pos:start="195:34" pos:end="195:34">(</operator><name pos:start="195:35" pos:end="195:40">prefix</name><operator pos:start="195:41" pos:end="195:42">&lt;&lt;</operator><name pos:start="195:43" pos:end="195:55">suffix_length</name><operator pos:start="195:56" pos:end="195:56">)</operator> <operator pos:start="195:58" pos:end="195:58">+</operator> <call pos:start="195:60" pos:end="195:86"><name pos:start="195:60" pos:end="195:67">get_bits</name><argument_list pos:start="195:68" pos:end="195:86">(<argument pos:start="195:69" pos:end="195:70"><expr pos:start="195:69" pos:end="195:70"><name pos:start="195:69" pos:end="195:70">gb</name></expr></argument>, <argument pos:start="195:73" pos:end="195:85"><expr pos:start="195:73" pos:end="195:85"><name pos:start="195:73" pos:end="195:85">suffix_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="197:18" pos:end="205:17">else<block pos:start="197:22" pos:end="205:17">{<block_content pos:start="199:21" pos:end="203:59">

                    <expr_stmt pos:start="199:21" pos:end="199:78"><expr pos:start="199:21" pos:end="199:77"><name pos:start="199:21" pos:end="199:30">level_code</name> <operator pos:start="199:32" pos:end="199:32">=</operator> <operator pos:start="199:34" pos:end="199:34">(</operator><literal type="number" pos:start="199:35" pos:end="199:36">15</literal><operator pos:start="199:37" pos:end="199:38">&lt;&lt;</operator><name pos:start="199:39" pos:end="199:51">suffix_length</name><operator pos:start="199:52" pos:end="199:52">)</operator> <operator pos:start="199:54" pos:end="199:54">+</operator> <call pos:start="199:56" pos:end="199:77"><name pos:start="199:56" pos:end="199:63">get_bits</name><argument_list pos:start="199:64" pos:end="199:77">(<argument pos:start="199:65" pos:end="199:66"><expr pos:start="199:65" pos:end="199:66"><name pos:start="199:65" pos:end="199:66">gb</name></expr></argument>, <argument pos:start="199:69" pos:end="199:76"><expr pos:start="199:69" pos:end="199:76"><name pos:start="199:69" pos:end="199:74">prefix</name><operator pos:start="199:75" pos:end="199:75">-</operator><literal type="number" pos:start="199:76" pos:end="199:76">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="201:21" pos:end="203:59"><if pos:start="201:21" pos:end="203:59">if<condition pos:start="201:23" pos:end="201:34">(<expr pos:start="201:24" pos:end="201:33"><name pos:start="201:24" pos:end="201:29">prefix</name><operator pos:start="201:30" pos:end="201:31">&gt;=</operator><literal type="number" pos:start="201:32" pos:end="201:33">16</literal></expr>)</condition><block type="pseudo" pos:start="203:25" pos:end="203:59"><block_content pos:start="203:25" pos:end="203:59">

                        <expr_stmt pos:start="203:25" pos:end="203:59"><expr pos:start="203:25" pos:end="203:58"><name pos:start="203:25" pos:end="203:34">level_code</name> <operator pos:start="203:36" pos:end="203:37">+=</operator> <operator pos:start="203:39" pos:end="203:39">(</operator><literal type="number" pos:start="203:40" pos:end="203:40">1</literal><operator pos:start="203:41" pos:end="203:42">&lt;&lt;</operator><operator pos:start="203:43" pos:end="203:43">(</operator><name pos:start="203:44" pos:end="203:49">prefix</name><operator pos:start="203:50" pos:end="203:50">-</operator><literal type="number" pos:start="203:51" pos:end="203:51">3</literal><operator pos:start="203:52" pos:end="203:52">)</operator><operator pos:start="203:53" pos:end="203:53">)</operator><operator pos:start="203:54" pos:end="203:54">-</operator><literal type="number" pos:start="203:55" pos:end="203:58">4096</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:38"><expr pos:start="207:17" pos:end="207:37"><name pos:start="207:17" pos:end="207:20">mask</name><operator pos:start="207:21" pos:end="207:21">=</operator> <operator pos:start="207:23" pos:end="207:23">-</operator><operator pos:start="207:24" pos:end="207:24">(</operator><name pos:start="207:25" pos:end="207:34">level_code</name><operator pos:start="207:35" pos:end="207:35">&amp;</operator><literal type="number" pos:start="207:36" pos:end="207:36">1</literal><operator pos:start="207:37" pos:end="207:37">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:64"><expr pos:start="209:17" pos:end="209:63"><name pos:start="209:17" pos:end="209:26">level_code</name><operator pos:start="209:27" pos:end="209:27">=</operator> <operator pos:start="209:29" pos:end="209:29">(</operator><operator pos:start="209:30" pos:end="209:30">(</operator><operator pos:start="209:31" pos:end="209:31">(</operator><literal type="number" pos:start="209:32" pos:end="209:33">2</literal><operator pos:start="209:33" pos:end="209:33">+</operator><name pos:start="209:34" pos:end="209:43">level_code</name><operator pos:start="209:44" pos:end="209:44">)</operator><operator pos:start="209:45" pos:end="209:46">&gt;&gt;</operator><literal type="number" pos:start="209:47" pos:end="209:47">1</literal><operator pos:start="209:48" pos:end="209:48">)</operator> <operator pos:start="209:50" pos:end="209:50">^</operator> <name pos:start="209:52" pos:end="209:55">mask</name><operator pos:start="209:56" pos:end="209:56">)</operator> <operator pos:start="209:58" pos:end="209:58">-</operator> <name pos:start="209:60" pos:end="209:63">mask</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:33"><expr pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:20"><name pos:start="213:13" pos:end="213:17">level</name><index pos:start="213:18" pos:end="213:20">[<expr pos:start="213:19" pos:end="213:19"><name pos:start="213:19" pos:end="213:19">i</name></expr>]</index></name><operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:32">level_code</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:102"><expr pos:start="215:13" pos:end="215:101"><name pos:start="215:13" pos:end="215:25">suffix_length</name><operator pos:start="215:26" pos:end="215:27">+=</operator> <name pos:start="215:29" pos:end="215:55"><name pos:start="215:29" pos:end="215:40">suffix_limit</name><index pos:start="215:41" pos:end="215:55">[<expr pos:start="215:42" pos:end="215:54"><name pos:start="215:42" pos:end="215:54">suffix_length</name></expr>]</index></name> <operator pos:start="215:57" pos:end="215:57">+</operator> <name pos:start="215:59" pos:end="215:68">level_code</name> <operator pos:start="215:70" pos:end="215:70">&gt;</operator> <literal type="number" pos:start="215:72" pos:end="215:73">2U</literal><operator pos:start="215:74" pos:end="215:74">*</operator><name pos:start="215:75" pos:end="215:101"><name pos:start="215:75" pos:end="215:86">suffix_limit</name><index pos:start="215:87" pos:end="215:101">[<expr pos:start="215:88" pos:end="215:100"><name pos:start="215:88" pos:end="215:100">suffix_length</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="237:5"><if pos:start="223:5" pos:end="225:21">if<condition pos:start="223:7" pos:end="223:32">(<expr pos:start="223:8" pos:end="223:31"><name pos:start="223:8" pos:end="223:18">total_coeff</name> <operator pos:start="223:20" pos:end="223:21">==</operator> <name pos:start="223:23" pos:end="223:31">max_coeff</name></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:21"><block_content pos:start="225:9" pos:end="225:21">

        <expr_stmt pos:start="225:9" pos:end="225:21"><expr pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:18">zeros_left</name><operator pos:start="225:19" pos:end="225:19">=</operator><literal type="number" pos:start="225:20" pos:end="225:20">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="227:5" pos:end="237:5">else<block pos:start="227:9" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:104">

        <if_stmt pos:start="229:9" pos:end="235:104"><if pos:start="229:9" pos:end="231:124">if<condition pos:start="229:11" pos:end="229:38">(<expr pos:start="229:12" pos:end="229:37"><name pos:start="229:12" pos:end="229:12">n</name> <operator pos:start="229:14" pos:end="229:15">==</operator> <name pos:start="229:17" pos:end="229:37">CHROMA_DC_BLOCK_INDEX</name></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:124"><block_content pos:start="231:13" pos:end="231:124">

            <expr_stmt pos:start="231:13" pos:end="231:124"><expr pos:start="231:13" pos:end="231:123"><name pos:start="231:13" pos:end="231:22">zeros_left</name><operator pos:start="231:23" pos:end="231:23">=</operator> <call pos:start="231:25" pos:end="231:123"><name pos:start="231:25" pos:end="231:32">get_vlc2</name><argument_list pos:start="231:33" pos:end="231:123">(<argument pos:start="231:34" pos:end="231:35"><expr pos:start="231:34" pos:end="231:35"><name pos:start="231:34" pos:end="231:35">gb</name></expr></argument>, <argument pos:start="231:38" pos:end="231:87"><expr pos:start="231:38" pos:end="231:87"><operator pos:start="231:38" pos:end="231:38">(</operator><name pos:start="231:39" pos:end="231:63">chroma_dc_total_zeros_vlc</name><operator pos:start="231:64" pos:end="231:64">-</operator><literal type="number" pos:start="231:65" pos:end="231:65">1</literal><operator pos:start="231:66" pos:end="231:66">)</operator><index pos:start="231:67" pos:end="231:81">[ <expr pos:start="231:69" pos:end="231:79"><name pos:start="231:69" pos:end="231:79">total_coeff</name></expr> ]</index><operator pos:start="231:82" pos:end="231:82">.</operator><name pos:start="231:83" pos:end="231:87">table</name></expr></argument>, <argument pos:start="231:90" pos:end="231:119"><expr pos:start="231:90" pos:end="231:119"><name pos:start="231:90" pos:end="231:119">CHROMA_DC_TOTAL_ZEROS_VLC_BITS</name></expr></argument>, <argument pos:start="231:122" pos:end="231:122"><expr pos:start="231:122" pos:end="231:122"><literal type="number" pos:start="231:122" pos:end="231:122">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="233:9" pos:end="235:104">else<block type="pseudo" pos:start="235:13" pos:end="235:104"><block_content pos:start="235:13" pos:end="235:104">

            <expr_stmt pos:start="235:13" pos:end="235:104"><expr pos:start="235:13" pos:end="235:103"><name pos:start="235:13" pos:end="235:22">zeros_left</name><operator pos:start="235:23" pos:end="235:23">=</operator> <call pos:start="235:25" pos:end="235:103"><name pos:start="235:25" pos:end="235:32">get_vlc2</name><argument_list pos:start="235:33" pos:end="235:103">(<argument pos:start="235:34" pos:end="235:35"><expr pos:start="235:34" pos:end="235:35"><name pos:start="235:34" pos:end="235:35">gb</name></expr></argument>, <argument pos:start="235:38" pos:end="235:77"><expr pos:start="235:38" pos:end="235:77"><operator pos:start="235:38" pos:end="235:38">(</operator><name pos:start="235:39" pos:end="235:53">total_zeros_vlc</name><operator pos:start="235:54" pos:end="235:54">-</operator><literal type="number" pos:start="235:55" pos:end="235:55">1</literal><operator pos:start="235:56" pos:end="235:56">)</operator><index pos:start="235:57" pos:end="235:71">[ <expr pos:start="235:59" pos:end="235:69"><name pos:start="235:59" pos:end="235:69">total_coeff</name></expr> ]</index><operator pos:start="235:72" pos:end="235:72">.</operator><name pos:start="235:73" pos:end="235:77">table</name></expr></argument>, <argument pos:start="235:80" pos:end="235:99"><expr pos:start="235:80" pos:end="235:99"><name pos:start="235:80" pos:end="235:99">TOTAL_ZEROS_VLC_BITS</name></expr></argument>, <argument pos:start="235:102" pos:end="235:102"><expr pos:start="235:102" pos:end="235:102"><literal type="number" pos:start="235:102" pos:end="235:102">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:45"><expr pos:start="241:5" pos:end="241:44"><name pos:start="241:5" pos:end="241:13">coeff_num</name> <operator pos:start="241:15" pos:end="241:15">=</operator> <name pos:start="241:17" pos:end="241:26">zeros_left</name> <operator pos:start="241:28" pos:end="241:28">+</operator> <name pos:start="241:30" pos:end="241:40">total_coeff</name> <operator pos:start="241:42" pos:end="241:42">-</operator> <literal type="number" pos:start="241:44" pos:end="241:44">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:29"><expr pos:start="243:5" pos:end="243:28"><name pos:start="243:5" pos:end="243:5">j</name> <operator pos:start="243:7" pos:end="243:7">=</operator> <name pos:start="243:9" pos:end="243:28"><name pos:start="243:9" pos:end="243:17">scantable</name><index pos:start="243:18" pos:end="243:28">[<expr pos:start="243:19" pos:end="243:27"><name pos:start="243:19" pos:end="243:27">coeff_num</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="245:5" pos:end="309:5"><if pos:start="245:5" pos:end="277:5">if<condition pos:start="245:7" pos:end="245:14">(<expr pos:start="245:8" pos:end="245:13"><name pos:start="245:8" pos:end="245:8">n</name> <operator pos:start="245:10" pos:end="245:10">&gt;</operator> <literal type="number" pos:start="245:12" pos:end="245:13">24</literal></expr>)</condition><block pos:start="245:15" pos:end="277:5">{<block_content pos:start="247:9" pos:end="275:9">

        <expr_stmt pos:start="247:9" pos:end="247:28"><expr pos:start="247:9" pos:end="247:27"><name pos:start="247:9" pos:end="247:16"><name pos:start="247:9" pos:end="247:13">block</name><index pos:start="247:14" pos:end="247:16">[<expr pos:start="247:15" pos:end="247:15"><name pos:start="247:15" pos:end="247:15">j</name></expr>]</index></name> <operator pos:start="247:18" pos:end="247:18">=</operator> <name pos:start="247:20" pos:end="247:27"><name pos:start="247:20" pos:end="247:24">level</name><index pos:start="247:25" pos:end="247:27">[<expr pos:start="247:26" pos:end="247:26"><literal type="number" pos:start="247:26" pos:end="247:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="249:9" pos:end="275:9">for<control pos:start="249:12" pos:end="249:34">(<init pos:start="249:13" pos:end="249:16"><expr pos:start="249:13" pos:end="249:15"><name pos:start="249:13" pos:end="249:13">i</name><operator pos:start="249:14" pos:end="249:14">=</operator><literal type="number" pos:start="249:15" pos:end="249:15">1</literal></expr>;</init><condition pos:start="249:17" pos:end="249:30"><expr pos:start="249:17" pos:end="249:29"><name pos:start="249:17" pos:end="249:17">i</name><operator pos:start="249:18" pos:end="249:18">&lt;</operator><name pos:start="249:19" pos:end="249:29">total_coeff</name></expr>;</condition><incr pos:start="249:31" pos:end="249:33"><expr pos:start="249:31" pos:end="249:33"><name pos:start="249:31" pos:end="249:31">i</name><operator pos:start="249:32" pos:end="249:33">++</operator></expr></incr>)</control> <block pos:start="249:36" pos:end="275:9">{<block_content pos:start="251:13" pos:end="273:31">

            <if_stmt pos:start="251:13" pos:end="263:13"><if pos:start="251:13" pos:end="253:31">if<condition pos:start="251:15" pos:end="251:31">(<expr pos:start="251:16" pos:end="251:30"><name pos:start="251:16" pos:end="251:25">zeros_left</name> <operator pos:start="251:27" pos:end="251:28">&lt;=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">0</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:31"><block_content pos:start="253:17" pos:end="253:31">

                <expr_stmt pos:start="253:17" pos:end="253:31"><expr pos:start="253:17" pos:end="253:30"><name pos:start="253:17" pos:end="253:26">run_before</name> <operator pos:start="253:28" pos:end="253:28">=</operator> <literal type="number" pos:start="253:30" pos:end="253:30">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="255:13" pos:end="259:13">else if<condition pos:start="255:20" pos:end="255:35">(<expr pos:start="255:21" pos:end="255:34"><name pos:start="255:21" pos:end="255:30">zeros_left</name> <operator pos:start="255:32" pos:end="255:32">&lt;</operator> <literal type="number" pos:start="255:34" pos:end="255:34">7</literal></expr>)</condition><block pos:start="255:36" pos:end="259:13">{<block_content pos:start="257:17" pos:end="257:89">

                <expr_stmt pos:start="257:17" pos:end="257:89"><expr pos:start="257:17" pos:end="257:88"><name pos:start="257:17" pos:end="257:26">run_before</name><operator pos:start="257:27" pos:end="257:27">=</operator> <call pos:start="257:29" pos:end="257:88"><name pos:start="257:29" pos:end="257:36">get_vlc2</name><argument_list pos:start="257:37" pos:end="257:88">(<argument pos:start="257:38" pos:end="257:39"><expr pos:start="257:38" pos:end="257:39"><name pos:start="257:38" pos:end="257:39">gb</name></expr></argument>, <argument pos:start="257:42" pos:end="257:70"><expr pos:start="257:42" pos:end="257:70"><operator pos:start="257:42" pos:end="257:42">(</operator><name pos:start="257:43" pos:end="257:49">run_vlc</name><operator pos:start="257:50" pos:end="257:50">-</operator><literal type="number" pos:start="257:51" pos:end="257:51">1</literal><operator pos:start="257:52" pos:end="257:52">)</operator><index pos:start="257:53" pos:end="257:64">[<expr pos:start="257:54" pos:end="257:63"><name pos:start="257:54" pos:end="257:63">zeros_left</name></expr>]</index><operator pos:start="257:65" pos:end="257:65">.</operator><name pos:start="257:66" pos:end="257:70">table</name></expr></argument>, <argument pos:start="257:73" pos:end="257:84"><expr pos:start="257:73" pos:end="257:84"><name pos:start="257:73" pos:end="257:84">RUN_VLC_BITS</name></expr></argument>, <argument pos:start="257:87" pos:end="257:87"><expr pos:start="257:87" pos:end="257:87"><literal type="number" pos:start="257:87" pos:end="257:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="259:14" pos:end="263:13">else<block pos:start="259:18" pos:end="263:13">{<block_content pos:start="261:17" pos:end="261:75">

                <expr_stmt pos:start="261:17" pos:end="261:75"><expr pos:start="261:17" pos:end="261:74"><name pos:start="261:17" pos:end="261:26">run_before</name><operator pos:start="261:27" pos:end="261:27">=</operator> <call pos:start="261:29" pos:end="261:74"><name pos:start="261:29" pos:end="261:36">get_vlc2</name><argument_list pos:start="261:37" pos:end="261:74">(<argument pos:start="261:38" pos:end="261:39"><expr pos:start="261:38" pos:end="261:39"><name pos:start="261:38" pos:end="261:39">gb</name></expr></argument>, <argument pos:start="261:42" pos:end="261:55"><expr pos:start="261:42" pos:end="261:55"><name pos:start="261:42" pos:end="261:55"><name pos:start="261:42" pos:end="261:49">run7_vlc</name><operator pos:start="261:50" pos:end="261:50">.</operator><name pos:start="261:51" pos:end="261:55">table</name></name></expr></argument>, <argument pos:start="261:58" pos:end="261:70"><expr pos:start="261:58" pos:end="261:70"><name pos:start="261:58" pos:end="261:70">RUN7_VLC_BITS</name></expr></argument>, <argument pos:start="261:73" pos:end="261:73"><expr pos:start="261:73" pos:end="261:73"><literal type="number" pos:start="261:73" pos:end="261:73">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:37"><expr pos:start="265:13" pos:end="265:36"><name pos:start="265:13" pos:end="265:22">zeros_left</name> <operator pos:start="265:24" pos:end="265:25">-=</operator> <name pos:start="265:27" pos:end="265:36">run_before</name></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:40"><expr pos:start="267:13" pos:end="267:39"><name pos:start="267:13" pos:end="267:21">coeff_num</name> <operator pos:start="267:23" pos:end="267:24">-=</operator> <literal type="number" pos:start="267:26" pos:end="267:28">1</literal> <operator pos:start="267:28" pos:end="267:28">+</operator> <name pos:start="267:30" pos:end="267:39">run_before</name></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:38"><expr pos:start="269:13" pos:end="269:37"><name pos:start="269:13" pos:end="269:13">j</name><operator pos:start="269:14" pos:end="269:14">=</operator> <name pos:start="269:16" pos:end="269:37"><name pos:start="269:16" pos:end="269:24">scantable</name><index pos:start="269:25" pos:end="269:37">[ <expr pos:start="269:27" pos:end="269:35"><name pos:start="269:27" pos:end="269:35">coeff_num</name></expr> ]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="273:13" pos:end="273:31"><expr pos:start="273:13" pos:end="273:30"><name pos:start="273:13" pos:end="273:20"><name pos:start="273:13" pos:end="273:17">block</name><index pos:start="273:18" pos:end="273:20">[<expr pos:start="273:19" pos:end="273:19"><name pos:start="273:19" pos:end="273:19">j</name></expr>]</index></name><operator pos:start="273:21" pos:end="273:21">=</operator> <name pos:start="273:23" pos:end="273:30"><name pos:start="273:23" pos:end="273:27">level</name><index pos:start="273:28" pos:end="273:30">[<expr pos:start="273:29" pos:end="273:29"><name pos:start="273:29" pos:end="273:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if><else pos:start="277:6" pos:end="309:5">else<block pos:start="277:10" pos:end="309:5">{<block_content pos:start="279:9" pos:end="307:9">

        <expr_stmt pos:start="279:9" pos:end="279:48"><expr pos:start="279:9" pos:end="279:47"><name pos:start="279:9" pos:end="279:16"><name pos:start="279:9" pos:end="279:13">block</name><index pos:start="279:14" pos:end="279:16">[<expr pos:start="279:15" pos:end="279:15"><name pos:start="279:15" pos:end="279:15">j</name></expr>]</index></name> <operator pos:start="279:18" pos:end="279:18">=</operator> <operator pos:start="279:20" pos:end="279:20">(</operator><name pos:start="279:21" pos:end="279:28"><name pos:start="279:21" pos:end="279:25">level</name><index pos:start="279:26" pos:end="279:28">[<expr pos:start="279:27" pos:end="279:27"><literal type="number" pos:start="279:27" pos:end="279:27">0</literal></expr>]</index></name> <operator pos:start="279:30" pos:end="279:30">*</operator> <name pos:start="279:32" pos:end="279:38"><name pos:start="279:32" pos:end="279:35">qmul</name><index pos:start="279:36" pos:end="279:38">[<expr pos:start="279:37" pos:end="279:37"><name pos:start="279:37" pos:end="279:37">j</name></expr>]</index></name> <operator pos:start="279:40" pos:end="279:40">+</operator> <literal type="number" pos:start="279:42" pos:end="279:43">32</literal><operator pos:start="279:44" pos:end="279:44">)</operator><operator pos:start="279:45" pos:end="279:46">&gt;&gt;</operator><literal type="number" pos:start="279:47" pos:end="279:47">6</literal></expr>;</expr_stmt>

        <for pos:start="281:9" pos:end="307:9">for<control pos:start="281:12" pos:end="281:34">(<init pos:start="281:13" pos:end="281:16"><expr pos:start="281:13" pos:end="281:15"><name pos:start="281:13" pos:end="281:13">i</name><operator pos:start="281:14" pos:end="281:14">=</operator><literal type="number" pos:start="281:15" pos:end="281:15">1</literal></expr>;</init><condition pos:start="281:17" pos:end="281:30"><expr pos:start="281:17" pos:end="281:29"><name pos:start="281:17" pos:end="281:17">i</name><operator pos:start="281:18" pos:end="281:18">&lt;</operator><name pos:start="281:19" pos:end="281:29">total_coeff</name></expr>;</condition><incr pos:start="281:31" pos:end="281:33"><expr pos:start="281:31" pos:end="281:33"><name pos:start="281:31" pos:end="281:31">i</name><operator pos:start="281:32" pos:end="281:33">++</operator></expr></incr>)</control> <block pos:start="281:36" pos:end="307:9">{<block_content pos:start="283:13" pos:end="305:51">

            <if_stmt pos:start="283:13" pos:end="295:13"><if pos:start="283:13" pos:end="285:31">if<condition pos:start="283:15" pos:end="283:31">(<expr pos:start="283:16" pos:end="283:30"><name pos:start="283:16" pos:end="283:25">zeros_left</name> <operator pos:start="283:27" pos:end="283:28">&lt;=</operator> <literal type="number" pos:start="283:30" pos:end="283:30">0</literal></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:31"><block_content pos:start="285:17" pos:end="285:31">

                <expr_stmt pos:start="285:17" pos:end="285:31"><expr pos:start="285:17" pos:end="285:30"><name pos:start="285:17" pos:end="285:26">run_before</name> <operator pos:start="285:28" pos:end="285:28">=</operator> <literal type="number" pos:start="285:30" pos:end="285:30">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="287:13" pos:end="291:13">else if<condition pos:start="287:20" pos:end="287:35">(<expr pos:start="287:21" pos:end="287:34"><name pos:start="287:21" pos:end="287:30">zeros_left</name> <operator pos:start="287:32" pos:end="287:32">&lt;</operator> <literal type="number" pos:start="287:34" pos:end="287:34">7</literal></expr>)</condition><block pos:start="287:36" pos:end="291:13">{<block_content pos:start="289:17" pos:end="289:89">

                <expr_stmt pos:start="289:17" pos:end="289:89"><expr pos:start="289:17" pos:end="289:88"><name pos:start="289:17" pos:end="289:26">run_before</name><operator pos:start="289:27" pos:end="289:27">=</operator> <call pos:start="289:29" pos:end="289:88"><name pos:start="289:29" pos:end="289:36">get_vlc2</name><argument_list pos:start="289:37" pos:end="289:88">(<argument pos:start="289:38" pos:end="289:39"><expr pos:start="289:38" pos:end="289:39"><name pos:start="289:38" pos:end="289:39">gb</name></expr></argument>, <argument pos:start="289:42" pos:end="289:70"><expr pos:start="289:42" pos:end="289:70"><operator pos:start="289:42" pos:end="289:42">(</operator><name pos:start="289:43" pos:end="289:49">run_vlc</name><operator pos:start="289:50" pos:end="289:50">-</operator><literal type="number" pos:start="289:51" pos:end="289:51">1</literal><operator pos:start="289:52" pos:end="289:52">)</operator><index pos:start="289:53" pos:end="289:64">[<expr pos:start="289:54" pos:end="289:63"><name pos:start="289:54" pos:end="289:63">zeros_left</name></expr>]</index><operator pos:start="289:65" pos:end="289:65">.</operator><name pos:start="289:66" pos:end="289:70">table</name></expr></argument>, <argument pos:start="289:73" pos:end="289:84"><expr pos:start="289:73" pos:end="289:84"><name pos:start="289:73" pos:end="289:84">RUN_VLC_BITS</name></expr></argument>, <argument pos:start="289:87" pos:end="289:87"><expr pos:start="289:87" pos:end="289:87"><literal type="number" pos:start="289:87" pos:end="289:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="291:14" pos:end="295:13">else<block pos:start="291:18" pos:end="295:13">{<block_content pos:start="293:17" pos:end="293:75">

                <expr_stmt pos:start="293:17" pos:end="293:75"><expr pos:start="293:17" pos:end="293:74"><name pos:start="293:17" pos:end="293:26">run_before</name><operator pos:start="293:27" pos:end="293:27">=</operator> <call pos:start="293:29" pos:end="293:74"><name pos:start="293:29" pos:end="293:36">get_vlc2</name><argument_list pos:start="293:37" pos:end="293:74">(<argument pos:start="293:38" pos:end="293:39"><expr pos:start="293:38" pos:end="293:39"><name pos:start="293:38" pos:end="293:39">gb</name></expr></argument>, <argument pos:start="293:42" pos:end="293:55"><expr pos:start="293:42" pos:end="293:55"><name pos:start="293:42" pos:end="293:55"><name pos:start="293:42" pos:end="293:49">run7_vlc</name><operator pos:start="293:50" pos:end="293:50">.</operator><name pos:start="293:51" pos:end="293:55">table</name></name></expr></argument>, <argument pos:start="293:58" pos:end="293:70"><expr pos:start="293:58" pos:end="293:70"><name pos:start="293:58" pos:end="293:70">RUN7_VLC_BITS</name></expr></argument>, <argument pos:start="293:73" pos:end="293:73"><expr pos:start="293:73" pos:end="293:73"><literal type="number" pos:start="293:73" pos:end="293:73">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:37"><expr pos:start="297:13" pos:end="297:36"><name pos:start="297:13" pos:end="297:22">zeros_left</name> <operator pos:start="297:24" pos:end="297:25">-=</operator> <name pos:start="297:27" pos:end="297:36">run_before</name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:40"><expr pos:start="299:13" pos:end="299:39"><name pos:start="299:13" pos:end="299:21">coeff_num</name> <operator pos:start="299:23" pos:end="299:24">-=</operator> <literal type="number" pos:start="299:26" pos:end="299:28">1</literal> <operator pos:start="299:28" pos:end="299:28">+</operator> <name pos:start="299:30" pos:end="299:39">run_before</name></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:38"><expr pos:start="301:13" pos:end="301:37"><name pos:start="301:13" pos:end="301:13">j</name><operator pos:start="301:14" pos:end="301:14">=</operator> <name pos:start="301:16" pos:end="301:37"><name pos:start="301:16" pos:end="301:24">scantable</name><index pos:start="301:25" pos:end="301:37">[ <expr pos:start="301:27" pos:end="301:35"><name pos:start="301:27" pos:end="301:35">coeff_num</name></expr> ]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="305:13" pos:end="305:51"><expr pos:start="305:13" pos:end="305:50"><name pos:start="305:13" pos:end="305:20"><name pos:start="305:13" pos:end="305:17">block</name><index pos:start="305:18" pos:end="305:20">[<expr pos:start="305:19" pos:end="305:19"><name pos:start="305:19" pos:end="305:19">j</name></expr>]</index></name><operator pos:start="305:21" pos:end="305:21">=</operator> <operator pos:start="305:23" pos:end="305:23">(</operator><name pos:start="305:24" pos:end="305:31"><name pos:start="305:24" pos:end="305:28">level</name><index pos:start="305:29" pos:end="305:31">[<expr pos:start="305:30" pos:end="305:30"><name pos:start="305:30" pos:end="305:30">i</name></expr>]</index></name> <operator pos:start="305:33" pos:end="305:33">*</operator> <name pos:start="305:35" pos:end="305:41"><name pos:start="305:35" pos:end="305:38">qmul</name><index pos:start="305:39" pos:end="305:41">[<expr pos:start="305:40" pos:end="305:40"><name pos:start="305:40" pos:end="305:40">j</name></expr>]</index></name> <operator pos:start="305:43" pos:end="305:43">+</operator> <literal type="number" pos:start="305:45" pos:end="305:46">32</literal><operator pos:start="305:47" pos:end="305:47">)</operator><operator pos:start="305:48" pos:end="305:49">&gt;&gt;</operator><literal type="number" pos:start="305:50" pos:end="305:50">6</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="313:5" pos:end="319:5"><if pos:start="313:5" pos:end="319:5">if<condition pos:start="313:7" pos:end="313:20">(<expr pos:start="313:8" pos:end="313:19"><name pos:start="313:8" pos:end="313:17">zeros_left</name><operator pos:start="313:18" pos:end="313:18">&lt;</operator><literal type="number" pos:start="313:19" pos:end="313:19">0</literal></expr>)</condition><block pos:start="313:21" pos:end="319:5">{<block_content pos:start="315:9" pos:end="317:18">

        <expr_stmt pos:start="315:9" pos:end="315:104"><expr pos:start="315:9" pos:end="315:103"><call pos:start="315:9" pos:end="315:103"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="315:103">(<argument pos:start="315:16" pos:end="315:25"><expr pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:25"><name pos:start="315:16" pos:end="315:16">h</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:19">s</name><operator pos:start="315:20" pos:end="315:20">.</operator><name pos:start="315:21" pos:end="315:25">avctx</name></name></expr></argument>, <argument pos:start="315:28" pos:end="315:39"><expr pos:start="315:28" pos:end="315:39"><name pos:start="315:28" pos:end="315:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="315:42" pos:end="315:84"><expr pos:start="315:42" pos:end="315:84"><literal type="string" pos:start="315:42" pos:end="315:84">"negative number of zero coeffs at %d %d\n"</literal></expr></argument>, <argument pos:start="315:87" pos:end="315:93"><expr pos:start="315:87" pos:end="315:93"><name pos:start="315:87" pos:end="315:93"><name pos:start="315:87" pos:end="315:87">s</name><operator pos:start="315:88" pos:end="315:89">-&gt;</operator><name pos:start="315:90" pos:end="315:93">mb_x</name></name></expr></argument>, <argument pos:start="315:96" pos:end="315:102"><expr pos:start="315:96" pos:end="315:102"><name pos:start="315:96" pos:end="315:102"><name pos:start="315:96" pos:end="315:96">s</name><operator pos:start="315:97" pos:end="315:98">-&gt;</operator><name pos:start="315:99" pos:end="315:102">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="317:9" pos:end="317:18">return <expr pos:start="317:16" pos:end="317:17"><operator pos:start="317:16" pos:end="317:16">-</operator><literal type="number" pos:start="317:17" pos:end="317:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="323:5" pos:end="323:13">return <expr pos:start="323:12" pos:end="323:12"><literal type="number" pos:start="323:12" pos:end="323:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
