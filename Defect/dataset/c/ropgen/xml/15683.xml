<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15683.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:30">h_set_mode</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">PowerPCCPU</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">cpu</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><name pos:start="1:49" pos:end="1:64">sPAPREnvironment</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">spapr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:50"><decl pos:start="3:32" pos:end="3:50"><type pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:43">target_ulong</name></type> <name pos:start="3:45" pos:end="3:50">opcode</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:70"><decl pos:start="3:53" pos:end="3:70"><type pos:start="3:53" pos:end="3:70"><name pos:start="3:53" pos:end="3:64">target_ulong</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:15">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:23">mflags</name> <init pos:start="9:25" pos:end="9:33">= <expr pos:start="9:27" pos:end="9:33"><name pos:start="9:27" pos:end="9:33"><name pos:start="9:27" pos:end="9:30">args</name><index pos:start="9:31" pos:end="9:33">[<expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:25">resource</name> <init pos:start="11:27" pos:end="11:35">= <expr pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:32">args</name><index pos:start="11:33" pos:end="11:35">[<expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:23">value1</name> <init pos:start="13:25" pos:end="13:33">= <expr pos:start="13:27" pos:end="13:33"><name pos:start="13:27" pos:end="13:33"><name pos:start="13:27" pos:end="13:30">args</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:23">value2</name> <init pos:start="15:25" pos:end="15:33">= <expr pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:30">args</name><index pos:start="15:31" pos:end="15:33">[<expr pos:start="15:32" pos:end="15:32"><literal type="number" pos:start="15:32" pos:end="15:32">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:20">ret</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">H_P2</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="85:5"><if pos:start="21:5" pos:end="85:5">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:16">resource</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <name pos:start="21:21" pos:end="21:37">H_SET_MODE_ENDIAN</name></expr>)</condition> <block pos:start="21:40" pos:end="85:5">{<block_content pos:start="23:9" pos:end="83:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18">value1</name></expr>)</condition> <block pos:start="23:21" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:21">

            <expr_stmt pos:start="25:13" pos:end="25:23"><expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:22">H_P3</name></expr>;</expr_stmt>

            <goto pos:start="27:13" pos:end="27:21">goto <name pos:start="27:18" pos:end="27:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">value2</name></expr>)</condition> <block pos:start="31:21" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:21">

            <expr_stmt pos:start="33:13" pos:end="33:23"><expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:22">H_P4</name></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:21">goto <name pos:start="35:18" pos:end="35:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="41:9" pos:end="83:9">switch <condition pos:start="41:16" pos:end="41:23">(<expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">mflags</name></expr>)</condition> <block pos:start="41:25" pos:end="83:9">{<block_content pos:start="43:9" pos:end="81:37">

        <case pos:start="43:9" pos:end="43:35">case <expr pos:start="43:14" pos:end="43:34"><name pos:start="43:14" pos:end="43:34">H_SET_MODE_ENDIAN_BIG</name></expr>:</case>

            <macro pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:23">CPU_FOREACH</name><argument_list pos:start="45:24" pos:end="45:27">(<argument pos:start="45:25" pos:end="45:26">cs</argument>)</argument_list></macro> <block pos:start="45:29" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:48">

                <decl_stmt pos:start="47:17" pos:end="47:49"><decl pos:start="47:17" pos:end="47:48"><type pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:26">PowerPCCPU</name> <modifier pos:start="47:28" pos:end="47:28">*</modifier></type><name pos:start="47:29" pos:end="47:30">cp</name> <init pos:start="47:32" pos:end="47:48">= <expr pos:start="47:34" pos:end="47:48"><call pos:start="47:34" pos:end="47:48"><name pos:start="47:34" pos:end="47:44">POWERPC_CPU</name><argument_list pos:start="47:45" pos:end="47:48">(<argument pos:start="47:46" pos:end="47:47"><expr pos:start="47:46" pos:end="47:47"><name pos:start="47:46" pos:end="47:47">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="49:17" pos:end="49:44"><decl pos:start="49:17" pos:end="49:43"><type pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:27">CPUPPCState</name> <modifier pos:start="49:29" pos:end="49:29">*</modifier></type><name pos:start="49:30" pos:end="49:32">env</name> <init pos:start="49:34" pos:end="49:43">= <expr pos:start="49:36" pos:end="49:43"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:43"><name pos:start="49:37" pos:end="49:38">cp</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:43">env</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:48"><expr pos:start="51:17" pos:end="51:47"><name pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:19">env</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:24">spr</name><index pos:start="51:25" pos:end="51:34">[<expr pos:start="51:26" pos:end="51:33"><name pos:start="51:26" pos:end="51:33">SPR_LPCR</name></expr>]</index></name> <operator pos:start="51:36" pos:end="51:37">&amp;=</operator> <operator pos:start="51:39" pos:end="51:39">~</operator><name pos:start="51:40" pos:end="51:47">LPCR_ILE</name></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:27">H_SUCCESS</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>



        <case pos:start="61:9" pos:end="61:38">case <expr pos:start="61:14" pos:end="61:37"><name pos:start="61:14" pos:end="61:37">H_SET_MODE_ENDIAN_LITTLE</name></expr>:</case>

            <macro pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:23">CPU_FOREACH</name><argument_list pos:start="63:24" pos:end="63:27">(<argument pos:start="63:25" pos:end="63:26">cs</argument>)</argument_list></macro> <block pos:start="63:29" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:47">

                <decl_stmt pos:start="65:17" pos:end="65:49"><decl pos:start="65:17" pos:end="65:48"><type pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:26">PowerPCCPU</name> <modifier pos:start="65:28" pos:end="65:28">*</modifier></type><name pos:start="65:29" pos:end="65:30">cp</name> <init pos:start="65:32" pos:end="65:48">= <expr pos:start="65:34" pos:end="65:48"><call pos:start="65:34" pos:end="65:48"><name pos:start="65:34" pos:end="65:44">POWERPC_CPU</name><argument_list pos:start="65:45" pos:end="65:48">(<argument pos:start="65:46" pos:end="65:47"><expr pos:start="65:46" pos:end="65:47"><name pos:start="65:46" pos:end="65:47">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="67:17" pos:end="67:44"><decl pos:start="67:17" pos:end="67:43"><type pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:27">CPUPPCState</name> <modifier pos:start="67:29" pos:end="67:29">*</modifier></type><name pos:start="67:30" pos:end="67:32">env</name> <init pos:start="67:34" pos:end="67:43">= <expr pos:start="67:36" pos:end="67:43"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:43"><name pos:start="67:37" pos:end="67:38">cp</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:43">env</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:47"><expr pos:start="69:17" pos:end="69:46"><name pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:19">env</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:24">spr</name><index pos:start="69:25" pos:end="69:34">[<expr pos:start="69:26" pos:end="69:33"><name pos:start="69:26" pos:end="69:33">SPR_LPCR</name></expr>]</index></name> <operator pos:start="69:36" pos:end="69:37">|=</operator> <name pos:start="69:39" pos:end="69:46">LPCR_ILE</name></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="73:13" pos:end="73:28"><expr pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:27">H_SUCCESS</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>



        <default pos:start="79:9" pos:end="79:16">default:</default>

            <expr_stmt pos:start="81:13" pos:end="81:37"><expr pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:36">H_UNSUPPORTED_FLAG</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
