<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3565.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_hextile</name><parameter_list pos:start="1:26" pos:end="1:95">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">VmncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">uint8_t</name><modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:54">dst</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:63">uint8_t</name><modifier pos:start="1:64" pos:end="1:64">*</modifier></type> <name pos:start="1:66" pos:end="1:68">src</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:75"><decl pos:start="1:71" pos:end="1:75"><type pos:start="1:71" pos:end="1:75"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:75">w</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:82"><decl pos:start="1:78" pos:end="1:82"><type pos:start="1:78" pos:end="1:82"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:82">h</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:94"><decl pos:start="1:85" pos:end="1:94"><type pos:start="1:85" pos:end="1:94"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:94">stride</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:22">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">bg</name> <init pos:start="7:12" pos:end="7:14">= <expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr></init></decl>, <decl pos:start="7:17" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">fg</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:29">rects</name></decl>, <decl pos:start="7:32" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:36">color</name></decl>, <decl pos:start="7:39" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:39" pos:end="7:43">flags</name></decl>, <decl pos:start="7:46" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:47">xy</name></decl>, <decl pos:start="7:50" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:50" pos:end="7:51">wh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:17">bpp</name> <init pos:start="9:19" pos:end="9:27">= <expr pos:start="9:21" pos:end="9:27"><name pos:start="9:21" pos:end="9:27"><name pos:start="9:21" pos:end="9:21">c</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:27">bpp2</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">dst2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">bw</name> <init pos:start="13:12" pos:end="13:15">= <expr pos:start="13:14" pos:end="13:15"><literal type="number" pos:start="13:14" pos:end="13:15">16</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:19">bh</name> <init pos:start="13:21" pos:end="13:24">= <expr pos:start="13:23" pos:end="13:24"><literal type="number" pos:start="13:23" pos:end="13:24">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">ssrc</name><init pos:start="15:18" pos:end="15:21">=<expr pos:start="15:19" pos:end="15:21"><name pos:start="15:19" pos:end="15:21">src</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="89:5">for<control pos:start="19:8" pos:end="19:30">(<init pos:start="19:9" pos:end="19:14"><expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">j</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr>;</init> <condition pos:start="19:16" pos:end="19:21"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:16">j</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <name pos:start="19:20" pos:end="19:20">h</name></expr>;</condition> <incr pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:23">j</name> <operator pos:start="19:25" pos:end="19:26">+=</operator> <literal type="number" pos:start="19:28" pos:end="19:29">16</literal></expr></incr>)</control> <block pos:start="19:32" pos:end="89:5">{<block_content pos:start="21:9" pos:end="87:27">

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:12">dst2</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:18">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:10">bw</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:15">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="25:34"><if pos:start="25:9" pos:end="25:34">if<condition pos:start="25:11" pos:end="25:22">(<expr pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:12">j</name> <operator pos:start="25:14" pos:end="25:14">+</operator> <literal type="number" pos:start="25:16" pos:end="25:17">16</literal> <operator pos:start="25:19" pos:end="25:19">&gt;</operator> <name pos:start="25:21" pos:end="25:21">h</name></expr>)</condition><block type="pseudo" pos:start="25:24" pos:end="25:34"><block_content pos:start="25:24" pos:end="25:34"> <expr_stmt pos:start="25:24" pos:end="25:34"><expr pos:start="25:24" pos:end="25:33"><name pos:start="25:24" pos:end="25:25">bh</name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:29">h</name> <operator pos:start="25:31" pos:end="25:31">-</operator> <name pos:start="25:33" pos:end="25:33">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="27:9" pos:end="85:9">for<control pos:start="27:12" pos:end="27:52">(<init pos:start="27:13" pos:end="27:18"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">i</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>;</init> <condition pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <name pos:start="27:24" pos:end="27:24">w</name></expr>;</condition> <incr pos:start="27:27" pos:end="27:51"><expr pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:27">i</name> <operator pos:start="27:29" pos:end="27:30">+=</operator> <literal type="number" pos:start="27:32" pos:end="27:33">16</literal></expr><operator pos:start="27:34" pos:end="27:34">,</operator> <expr pos:start="27:36" pos:end="27:51"><name pos:start="27:36" pos:end="27:39">dst2</name> <operator pos:start="27:41" pos:end="27:42">+=</operator> <literal type="number" pos:start="27:44" pos:end="27:45">16</literal> <operator pos:start="27:47" pos:end="27:47">*</operator> <name pos:start="27:49" pos:end="27:51">bpp</name></expr></incr>)</control> <block pos:start="27:54" pos:end="85:9">{<block_content pos:start="29:13" pos:end="83:13">

            <if_stmt pos:start="29:13" pos:end="29:38"><if pos:start="29:13" pos:end="29:38">if<condition pos:start="29:15" pos:end="29:26">(<expr pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:16">i</name> <operator pos:start="29:18" pos:end="29:18">+</operator> <literal type="number" pos:start="29:20" pos:end="29:21">16</literal> <operator pos:start="29:23" pos:end="29:23">&gt;</operator> <name pos:start="29:25" pos:end="29:25">w</name></expr>)</condition><block type="pseudo" pos:start="29:28" pos:end="29:38"><block_content pos:start="29:28" pos:end="29:38"> <expr_stmt pos:start="29:28" pos:end="29:38"><expr pos:start="29:28" pos:end="29:37"><name pos:start="29:28" pos:end="29:29">bw</name> <operator pos:start="29:31" pos:end="29:31">=</operator> <name pos:start="29:33" pos:end="29:33">w</name> <operator pos:start="29:35" pos:end="29:35">-</operator> <name pos:start="29:37" pos:end="29:37">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">flags</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <operator pos:start="31:21" pos:end="31:21">*</operator><name pos:start="31:22" pos:end="31:24">src</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="83:13"><if pos:start="33:13" pos:end="39:13">if<condition pos:start="33:15" pos:end="33:30">(<expr pos:start="33:16" pos:end="33:29"><name pos:start="33:16" pos:end="33:20">flags</name> <operator pos:start="33:22" pos:end="33:22">&amp;</operator> <name pos:start="33:24" pos:end="33:29">HT_RAW</name></expr>)</condition> <block pos:start="33:32" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:37">

                <expr_stmt pos:start="35:17" pos:end="35:72"><expr pos:start="35:17" pos:end="35:71"><call pos:start="35:17" pos:end="35:71"><name pos:start="35:17" pos:end="35:25">paint_raw</name><argument_list pos:start="35:26" pos:end="35:71">(<argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">dst2</name></expr></argument>, <argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">bw</name></expr></argument>, <argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">bh</name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">src</name></expr></argument>, <argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">bpp</name></expr></argument>, <argument pos:start="35:51" pos:end="35:62"><expr pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:51">c</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:62">bigendian</name></name></expr></argument>, <argument pos:start="35:65" pos:end="35:70"><expr pos:start="35:65" pos:end="35:70"><name pos:start="35:65" pos:end="35:70">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:37"><expr pos:start="37:17" pos:end="37:36"><name pos:start="37:17" pos:end="37:19">src</name> <operator pos:start="37:21" pos:end="37:22">+=</operator> <name pos:start="37:24" pos:end="37:25">bw</name> <operator pos:start="37:27" pos:end="37:27">*</operator> <name pos:start="37:29" pos:end="37:30">bh</name> <operator pos:start="37:32" pos:end="37:32">*</operator> <name pos:start="37:34" pos:end="37:36">bpp</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="83:13">else <block pos:start="39:20" pos:end="83:13">{<block_content pos:start="41:17" pos:end="81:17">

                <if_stmt pos:start="41:17" pos:end="45:17"><if pos:start="41:17" pos:end="45:17">if<condition pos:start="41:19" pos:end="41:34">(<expr pos:start="41:20" pos:end="41:33"><name pos:start="41:20" pos:end="41:24">flags</name> <operator pos:start="41:26" pos:end="41:26">&amp;</operator> <name pos:start="41:28" pos:end="41:33">HT_BKG</name></expr>)</condition> <block pos:start="41:36" pos:end="45:17">{<block_content pos:start="43:21" pos:end="43:76">

                    <expr_stmt pos:start="43:21" pos:end="43:64"><expr pos:start="43:21" pos:end="43:63"><name pos:start="43:21" pos:end="43:22">bg</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:63"><name pos:start="43:26" pos:end="43:39">vmnc_get_pixel</name><argument_list pos:start="43:40" pos:end="43:63">(<argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:43">src</name></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:48">bpp</name></expr></argument>, <argument pos:start="43:51" pos:end="43:62"><expr pos:start="43:51" pos:end="43:62"><name pos:start="43:51" pos:end="43:62"><name pos:start="43:51" pos:end="43:51">c</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:62">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="43:66" pos:end="43:76"><expr pos:start="43:66" pos:end="43:75"><name pos:start="43:66" pos:end="43:68">src</name> <operator pos:start="43:70" pos:end="43:71">+=</operator> <name pos:start="43:73" pos:end="43:75">bpp</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="47:17" pos:end="51:17"><if pos:start="47:17" pos:end="51:17">if<condition pos:start="47:19" pos:end="47:33">(<expr pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:24">flags</name> <operator pos:start="47:26" pos:end="47:26">&amp;</operator> <name pos:start="47:28" pos:end="47:32">HT_FG</name></expr>)</condition> <block pos:start="47:35" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:76">

                    <expr_stmt pos:start="49:21" pos:end="49:64"><expr pos:start="49:21" pos:end="49:63"><name pos:start="49:21" pos:end="49:22">fg</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:63"><name pos:start="49:26" pos:end="49:39">vmnc_get_pixel</name><argument_list pos:start="49:40" pos:end="49:63">(<argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">src</name></expr></argument>, <argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:48">bpp</name></expr></argument>, <argument pos:start="49:51" pos:end="49:62"><expr pos:start="49:51" pos:end="49:62"><name pos:start="49:51" pos:end="49:62"><name pos:start="49:51" pos:end="49:51">c</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:62">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="49:66" pos:end="49:76"><expr pos:start="49:66" pos:end="49:75"><name pos:start="49:66" pos:end="49:68">src</name> <operator pos:start="49:70" pos:end="49:71">+=</operator> <name pos:start="49:73" pos:end="49:75">bpp</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:21">rects</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="57:35"><if pos:start="55:17" pos:end="57:35">if<condition pos:start="55:19" pos:end="55:34">(<expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:24">flags</name> <operator pos:start="55:26" pos:end="55:26">&amp;</operator> <name pos:start="55:28" pos:end="55:33">HT_SUB</name></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:35"><block_content pos:start="57:21" pos:end="57:35">

                    <expr_stmt pos:start="57:21" pos:end="57:35"><expr pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:25">rects</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <operator pos:start="57:29" pos:end="57:29">*</operator><name pos:start="57:30" pos:end="57:32">src</name><operator pos:start="57:33" pos:end="57:34">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:41"><expr pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:21">color</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:30">flags</name> <operator pos:start="59:32" pos:end="59:32">&amp;</operator> <name pos:start="59:34" pos:end="59:39">HT_CLR</name><operator pos:start="59:40" pos:end="59:40">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="63:17" pos:end="63:64"><expr pos:start="63:17" pos:end="63:63"><call pos:start="63:17" pos:end="63:63"><name pos:start="63:17" pos:end="63:26">paint_rect</name><argument_list pos:start="63:27" pos:end="63:63">(<argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><name pos:start="63:28" pos:end="63:31">dst2</name></expr></argument>, <argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><literal type="number" pos:start="63:34" pos:end="63:34">0</literal></expr></argument>, <argument pos:start="63:37" pos:end="63:37"><expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">0</literal></expr></argument>, <argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><name pos:start="63:40" pos:end="63:41">bw</name></expr></argument>, <argument pos:start="63:44" pos:end="63:45"><expr pos:start="63:44" pos:end="63:45"><name pos:start="63:44" pos:end="63:45">bh</name></expr></argument>, <argument pos:start="63:48" pos:end="63:49"><expr pos:start="63:48" pos:end="63:49"><name pos:start="63:48" pos:end="63:49">bg</name></expr></argument>, <argument pos:start="63:52" pos:end="63:54"><expr pos:start="63:52" pos:end="63:54"><name pos:start="63:52" pos:end="63:54">bpp</name></expr></argument>, <argument pos:start="63:57" pos:end="63:62"><expr pos:start="63:57" pos:end="63:62"><name pos:start="63:57" pos:end="63:62">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="67:17" pos:end="81:17">for<control pos:start="67:20" pos:end="67:42">(<init pos:start="67:21" pos:end="67:26"><expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:21">k</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>;</init> <condition pos:start="67:28" pos:end="67:37"><expr pos:start="67:28" pos:end="67:36"><name pos:start="67:28" pos:end="67:28">k</name> <operator pos:start="67:30" pos:end="67:30">&lt;</operator> <name pos:start="67:32" pos:end="67:36">rects</name></expr>;</condition> <incr pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><name pos:start="67:39" pos:end="67:39">k</name><operator pos:start="67:40" pos:end="67:41">++</operator></expr></incr>)</control> <block pos:start="67:44" pos:end="81:17">{<block_content pos:start="69:21" pos:end="79:98">

                    <if_stmt pos:start="69:21" pos:end="73:21"><if pos:start="69:21" pos:end="73:21">if<condition pos:start="69:23" pos:end="69:29">(<expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:28">color</name></expr>)</condition> <block pos:start="69:31" pos:end="73:21">{<block_content pos:start="71:25" pos:end="71:80">

                        <expr_stmt pos:start="71:25" pos:end="71:68"><expr pos:start="71:25" pos:end="71:67"><name pos:start="71:25" pos:end="71:26">fg</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:67"><name pos:start="71:30" pos:end="71:43">vmnc_get_pixel</name><argument_list pos:start="71:44" pos:end="71:67">(<argument pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><name pos:start="71:45" pos:end="71:47">src</name></expr></argument>, <argument pos:start="71:50" pos:end="71:52"><expr pos:start="71:50" pos:end="71:52"><name pos:start="71:50" pos:end="71:52">bpp</name></expr></argument>, <argument pos:start="71:55" pos:end="71:66"><expr pos:start="71:55" pos:end="71:66"><name pos:start="71:55" pos:end="71:66"><name pos:start="71:55" pos:end="71:55">c</name><operator pos:start="71:56" pos:end="71:57">-&gt;</operator><name pos:start="71:58" pos:end="71:66">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="71:70" pos:end="71:80"><expr pos:start="71:70" pos:end="71:79"><name pos:start="71:70" pos:end="71:72">src</name> <operator pos:start="71:74" pos:end="71:75">+=</operator> <name pos:start="71:77" pos:end="71:79">bpp</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:32"><expr pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:22">xy</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <operator pos:start="75:26" pos:end="75:26">*</operator><name pos:start="75:27" pos:end="75:29">src</name><operator pos:start="75:30" pos:end="75:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:22">wh</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <operator pos:start="77:26" pos:end="77:26">*</operator><name pos:start="77:27" pos:end="77:29">src</name><operator pos:start="77:30" pos:end="77:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:98"><expr pos:start="79:21" pos:end="79:97"><call pos:start="79:21" pos:end="79:97"><name pos:start="79:21" pos:end="79:30">paint_rect</name><argument_list pos:start="79:31" pos:end="79:97">(<argument pos:start="79:32" pos:end="79:35"><expr pos:start="79:32" pos:end="79:35"><name pos:start="79:32" pos:end="79:35">dst2</name></expr></argument>, <argument pos:start="79:38" pos:end="79:44"><expr pos:start="79:38" pos:end="79:44"><name pos:start="79:38" pos:end="79:39">xy</name> <operator pos:start="79:41" pos:end="79:42">&gt;&gt;</operator> <literal type="number" pos:start="79:44" pos:end="79:44">4</literal></expr></argument>, <argument pos:start="79:47" pos:end="79:54"><expr pos:start="79:47" pos:end="79:54"><name pos:start="79:47" pos:end="79:48">xy</name> <operator pos:start="79:50" pos:end="79:50">&amp;</operator> <literal type="number" pos:start="79:52" pos:end="79:54">0xF</literal></expr></argument>, <argument pos:start="79:57" pos:end="79:65"><expr pos:start="79:57" pos:end="79:65"><operator pos:start="79:57" pos:end="79:57">(</operator><name pos:start="79:58" pos:end="79:59">wh</name><operator pos:start="79:60" pos:end="79:61">&gt;&gt;</operator><literal type="number" pos:start="79:62" pos:end="79:62">4</literal><operator pos:start="79:63" pos:end="79:63">)</operator><operator pos:start="79:64" pos:end="79:64">+</operator><literal type="number" pos:start="79:65" pos:end="79:65">1</literal></expr></argument>, <argument pos:start="79:68" pos:end="79:79"><expr pos:start="79:68" pos:end="79:79"><operator pos:start="79:68" pos:end="79:68">(</operator><name pos:start="79:69" pos:end="79:70">wh</name> <operator pos:start="79:72" pos:end="79:72">&amp;</operator> <literal type="number" pos:start="79:74" pos:end="79:76">0xF</literal><operator pos:start="79:77" pos:end="79:77">)</operator><operator pos:start="79:78" pos:end="79:78">+</operator><literal type="number" pos:start="79:79" pos:end="79:79">1</literal></expr></argument>, <argument pos:start="79:82" pos:end="79:83"><expr pos:start="79:82" pos:end="79:83"><name pos:start="79:82" pos:end="79:83">fg</name></expr></argument>, <argument pos:start="79:86" pos:end="79:88"><expr pos:start="79:86" pos:end="79:88"><name pos:start="79:86" pos:end="79:88">bpp</name></expr></argument>, <argument pos:start="79:91" pos:end="79:96"><expr pos:start="79:91" pos:end="79:96"><name pos:start="79:91" pos:end="79:96">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:11">dst</name> <operator pos:start="87:13" pos:end="87:14">+=</operator> <name pos:start="87:16" pos:end="87:21">stride</name> <operator pos:start="87:23" pos:end="87:23">*</operator> <literal type="number" pos:start="87:25" pos:end="87:26">16</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="91:5" pos:end="91:22">return <expr pos:start="91:12" pos:end="91:21"><name pos:start="91:12" pos:end="91:14">src</name> <operator pos:start="91:16" pos:end="91:16">-</operator> <name pos:start="91:18" pos:end="91:21">ssrc</name></expr>;</return>

</block_content>}</block></function>
</unit>
