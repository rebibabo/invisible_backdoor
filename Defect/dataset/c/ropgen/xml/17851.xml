<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17851.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stsd</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:46"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:46">[<expr pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name> <operator pos:start="17:43" pos:end="17:43">-</operator> <literal type="number" pos:start="17:45" pos:end="17:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><call pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">avio_r8</name><argument_list pos:start="23:12" pos:end="23:15">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:18" pos:end="23:30">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb24</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:30">/* flags */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">sc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">stsd_count</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:34"><name pos:start="27:22" pos:end="27:30">avio_rb32</name><argument_list pos:start="27:31" pos:end="27:34">(<argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><name pos:start="27:32" pos:end="27:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:37" pos:end="27:49">/* entries */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:55">/* Prepare space for hosting multiple extradata. */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:77"><expr pos:start="33:5" pos:end="33:76"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">sc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">extradata</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:76"><name pos:start="33:21" pos:end="33:36">av_mallocz_array</name><argument_list pos:start="33:37" pos:end="33:76">(<argument pos:start="33:38" pos:end="33:51"><expr pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:39">sc</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:51">stsd_count</name></name></expr></argument>, <argument pos:start="33:54" pos:end="33:75"><expr pos:start="33:54" pos:end="33:75"><sizeof pos:start="33:54" pos:end="33:75">sizeof<argument_list pos:start="33:60" pos:end="33:75">(<argument pos:start="33:61" pos:end="33:74"><expr pos:start="33:61" pos:end="33:74"><operator pos:start="33:61" pos:end="33:61">*</operator><name pos:start="33:62" pos:end="33:74"><name pos:start="33:62" pos:end="33:63">sc</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:74">extradata</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:11">sc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:87"><expr pos:start="41:5" pos:end="41:86"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:6">sc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:22">extradata_size</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:86"><name pos:start="41:26" pos:end="41:41">av_mallocz_array</name><argument_list pos:start="41:42" pos:end="41:86">(<argument pos:start="41:43" pos:end="41:56"><expr pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:44">sc</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:56">stsd_count</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:85"><expr pos:start="41:59" pos:end="41:85"><sizeof pos:start="41:59" pos:end="41:85">sizeof<argument_list pos:start="41:65" pos:end="41:85">(<argument pos:start="41:66" pos:end="41:84"><expr pos:start="41:66" pos:end="41:84"><operator pos:start="41:66" pos:end="41:66">*</operator><name pos:start="41:67" pos:end="41:84"><name pos:start="41:67" pos:end="41:68">sc</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:84">extradata_size</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:28">(<expr pos:start="43:9" pos:end="43:27"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:11">sc</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:27">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:57"><name pos:start="49:11" pos:end="49:34">ff_mov_read_stsd_entries</name><argument_list pos:start="49:35" pos:end="49:57">(<argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">c</name></expr></argument>, <argument pos:start="49:39" pos:end="49:40"><expr pos:start="49:39" pos:end="49:40"><name pos:start="49:39" pos:end="49:40">pb</name></expr></argument>, <argument pos:start="49:43" pos:end="49:56"><expr pos:start="49:43" pos:end="49:56"><name pos:start="49:43" pos:end="49:56"><name pos:start="49:43" pos:end="49:44">sc</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:56">stsd_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:19"><if pos:start="51:5" pos:end="53:19">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:19"><block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:45">/* Restore back the primary extradata. */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><call pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:12">av_freep</name><argument_list pos:start="59:13" pos:end="59:38">(<argument pos:start="59:14" pos:end="59:37"><expr pos:start="59:14" pos:end="59:37"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:37"><name pos:start="59:15" pos:end="59:16">st</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:26">codecpar</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:37">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:57"><expr pos:start="61:5" pos:end="61:56"><name pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:16">codecpar</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:32">extradata_size</name></name> <operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:56"><name pos:start="61:36" pos:end="61:37">sc</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:53">extradata_size</name><index pos:start="61:54" pos:end="61:56">[<expr pos:start="61:55" pos:end="61:55"><literal type="number" pos:start="61:55" pos:end="61:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="63:30">(<expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:10">sc</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:26">extradata_size</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="63:32" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:81">

        <expr_stmt pos:start="65:9" pos:end="65:99"><expr pos:start="65:9" pos:end="65:98"><name pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:10">st</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:20">codecpar</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:31">extradata</name></name> <operator pos:start="65:33" pos:end="65:33">=</operator> <call pos:start="65:35" pos:end="65:98"><name pos:start="65:35" pos:end="65:44">av_mallocz</name><argument_list pos:start="65:45" pos:end="65:98">(<argument pos:start="65:46" pos:end="65:97"><expr pos:start="65:46" pos:end="65:97"><name pos:start="65:46" pos:end="65:66"><name pos:start="65:46" pos:end="65:47">sc</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:63">extradata_size</name><index pos:start="65:64" pos:end="65:66">[<expr pos:start="65:65" pos:end="65:65"><literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>]</index></name> <operator pos:start="65:68" pos:end="65:68">+</operator> <name pos:start="65:70" pos:end="65:97">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:35"><if pos:start="67:9" pos:end="69:35">if <condition pos:start="67:12" pos:end="67:37">(<expr pos:start="67:13" pos:end="67:36"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:36"><name pos:start="67:14" pos:end="67:15">st</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:25">codecpar</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:35"><block_content pos:start="69:13" pos:end="69:35">

            <return pos:start="69:13" pos:end="69:35">return <expr pos:start="69:20" pos:end="69:34"><call pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:81"><expr pos:start="71:9" pos:end="71:80"><call pos:start="71:9" pos:end="71:80"><name pos:start="71:9" pos:end="71:14">memcpy</name><argument_list pos:start="71:15" pos:end="71:80">(<argument pos:start="71:16" pos:end="71:38"><expr pos:start="71:16" pos:end="71:38"><name pos:start="71:16" pos:end="71:38"><name pos:start="71:16" pos:end="71:17">st</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">codecpar</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:38">extradata</name></name></expr></argument>, <argument pos:start="71:41" pos:end="71:56"><expr pos:start="71:41" pos:end="71:56"><name pos:start="71:41" pos:end="71:56"><name pos:start="71:41" pos:end="71:42">sc</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:53">extradata</name><index pos:start="71:54" pos:end="71:56">[<expr pos:start="71:55" pos:end="71:55"><literal type="number" pos:start="71:55" pos:end="71:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:59" pos:end="71:79"><expr pos:start="71:59" pos:end="71:79"><name pos:start="71:59" pos:end="71:79"><name pos:start="71:59" pos:end="71:60">sc</name><operator pos:start="71:61" pos:end="71:62">-&gt;</operator><name pos:start="71:63" pos:end="71:76">extradata_size</name><index pos:start="71:77" pos:end="71:79">[<expr pos:start="71:78" pos:end="71:78"><literal type="number" pos:start="71:78" pos:end="71:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
