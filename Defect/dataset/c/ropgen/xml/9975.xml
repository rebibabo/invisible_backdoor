<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9975.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">kvm_arch_sync_sregs</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">CPUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">cenv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:55">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">kvm_sregs</name></name></type> <name pos:start="5:22" pos:end="5:26">sregs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:47">(<expr pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:12">cenv</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:24">excp_model</name></name> <operator pos:start="11:26" pos:end="11:27">==</operator> <name pos:start="11:29" pos:end="11:46">POWERPC_EXCP_BOOKE</name></expr>)</condition> <block pos:start="11:49" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="23:5">else <block pos:start="15:12" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:25">cap_segstate</name></expr>)</condition> <block pos:start="17:28" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:53"><name pos:start="27:11" pos:end="27:24">kvm_vcpu_ioctl</name><argument_list pos:start="27:25" pos:end="27:53">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">cenv</name></expr></argument>, <argument pos:start="27:32" pos:end="27:44"><expr pos:start="27:32" pos:end="27:44"><name pos:start="27:32" pos:end="27:44">KVM_GET_SREGS</name></expr></argument>, <argument pos:start="27:47" pos:end="27:52"><expr pos:start="27:47" pos:end="27:52"><operator pos:start="27:47" pos:end="27:47">&amp;</operator><name pos:start="27:48" pos:end="27:52">sregs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">ret</name></expr>)</condition> <block pos:start="29:14" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:9">sregs</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:13">pvr</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:20">cenv</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:25">spr</name><index pos:start="37:26" pos:end="37:34">[<expr pos:start="37:27" pos:end="37:33"><name pos:start="37:27" pos:end="37:33">SPR_PVR</name></expr>]</index></name></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:55">return <expr pos:start="39:12" pos:end="39:54"><call pos:start="39:12" pos:end="39:54"><name pos:start="39:12" pos:end="39:25">kvm_vcpu_ioctl</name><argument_list pos:start="39:26" pos:end="39:54">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">cenv</name></expr></argument>, <argument pos:start="39:33" pos:end="39:45"><expr pos:start="39:33" pos:end="39:45"><name pos:start="39:33" pos:end="39:45">KVM_SET_SREGS</name></expr></argument>, <argument pos:start="39:48" pos:end="39:53"><expr pos:start="39:48" pos:end="39:53"><operator pos:start="39:48" pos:end="39:48">&amp;</operator><name pos:start="39:49" pos:end="39:53">sregs</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
