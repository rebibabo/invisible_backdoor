<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8895.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tee_write_header</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">avf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TeeContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">tee</name> <init pos:start="5:21" pos:end="5:36">= <expr pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:25">avf</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:22">nb_slaves</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>, <decl pos:start="7:29" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:29" pos:end="7:29">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name> <init pos:start="9:26" pos:end="9:40">= <expr pos:start="9:28" pos:end="9:40"><name pos:start="9:28" pos:end="9:40"><name pos:start="9:28" pos:end="9:30">avf</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:40">filename</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:28"><name pos:start="11:11" pos:end="11:16">slaves</name><index pos:start="11:17" pos:end="11:28">[<expr pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:27">MAX_SLAVES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="43:5">while <condition pos:start="17:11" pos:end="17:21">(<expr pos:start="17:12" pos:end="17:20"><operator pos:start="17:12" pos:end="17:12">*</operator><name pos:start="17:13" pos:end="17:20">filename</name></expr>)</condition> <block pos:start="17:23" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:23">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:36">(<expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:21">nb_slaves</name> <operator pos:start="19:23" pos:end="19:24">==</operator> <name pos:start="19:26" pos:end="19:35">MAX_SLAVES</name></expr>)</condition> <block pos:start="19:38" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:22">

            <expr_stmt pos:start="21:13" pos:end="23:31"><expr pos:start="21:13" pos:end="23:30"><call pos:start="21:13" pos:end="23:30"><name pos:start="21:13" pos:end="21:18">av_log</name><argument_list pos:start="21:19" pos:end="23:30">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">avf</name></expr></argument>, <argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:39" pos:end="21:74"><expr pos:start="21:39" pos:end="21:74"><literal type="string" pos:start="21:39" pos:end="21:74">"Maximum %d slave muxers reached.\n"</literal></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:29"><expr pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:29">MAX_SLAVES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:39"><expr pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:38">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

            <goto pos:start="27:13" pos:end="27:22">goto <name pos:start="27:18" pos:end="27:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:74">(<expr pos:start="31:13" pos:end="31:73"><operator pos:start="31:13" pos:end="31:13">!</operator><operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:33"><name pos:start="31:15" pos:end="31:20">slaves</name><index pos:start="31:21" pos:end="31:33">[<expr pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:30">nb_slaves</name><operator pos:start="31:31" pos:end="31:32">++</operator></expr>]</index></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <call pos:start="31:37" pos:end="31:72"><name pos:start="31:37" pos:end="31:48">av_get_token</name><argument_list pos:start="31:49" pos:end="31:72">(<argument pos:start="31:50" pos:end="31:58"><expr pos:start="31:50" pos:end="31:58"><operator pos:start="31:50" pos:end="31:50">&amp;</operator><name pos:start="31:51" pos:end="31:58">filename</name></expr></argument>, <argument pos:start="31:61" pos:end="31:71"><expr pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:71">slave_delim</name></expr></argument>)</argument_list></call><operator pos:start="31:73" pos:end="31:73">)</operator></expr>)</condition> <block pos:start="31:76" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:22">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:33"><name pos:start="33:19" pos:end="33:25">AVERROR</name><argument_list pos:start="33:26" pos:end="33:33">(<argument pos:start="33:27" pos:end="33:32"><expr pos:start="33:27" pos:end="33:32"><name pos:start="33:27" pos:end="33:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:22">goto <name pos:start="35:18" pos:end="35:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:42">(<expr pos:start="39:13" pos:end="39:41"><call pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:18">strspn</name><argument_list pos:start="39:19" pos:end="39:41">(<argument pos:start="39:20" pos:end="39:27"><expr pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:27">filename</name></expr></argument>, <argument pos:start="39:30" pos:end="39:40"><expr pos:start="39:30" pos:end="39:40"><name pos:start="39:30" pos:end="39:40">slave_delim</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:20">filename</name><operator pos:start="41:21" pos:end="41:22">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <for pos:start="47:5" pos:end="57:5">for <control pos:start="47:9" pos:end="47:35">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:29">nb_slaves</name></expr>;</condition> <incr pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:32">i</name><operator pos:start="47:33" pos:end="47:34">++</operator></expr></incr>)</control> <block pos:start="47:37" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:29">

        <if_stmt pos:start="49:9" pos:end="51:22"><if pos:start="49:9" pos:end="51:22">if <condition pos:start="49:12" pos:end="49:68">(<expr pos:start="49:13" pos:end="49:67"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:16">ret</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:62"><name pos:start="49:20" pos:end="49:29">open_slave</name><argument_list pos:start="49:30" pos:end="49:62">(<argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">avf</name></expr></argument>, <argument pos:start="49:36" pos:end="49:44"><expr pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:41">slaves</name><index pos:start="49:42" pos:end="49:44">[<expr pos:start="49:43" pos:end="49:43"><name pos:start="49:43" pos:end="49:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:47" pos:end="49:61"><expr pos:start="49:47" pos:end="49:61"><operator pos:start="49:47" pos:end="49:47">&amp;</operator><name pos:start="49:48" pos:end="49:61"><name pos:start="49:48" pos:end="49:50">tee</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:58">slaves</name><index pos:start="49:59" pos:end="49:61">[<expr pos:start="49:60" pos:end="49:60"><name pos:start="49:60" pos:end="49:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="49:63" pos:end="49:63">)</operator> <operator pos:start="49:65" pos:end="49:65">&lt;</operator> <literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:22"><block_content pos:start="51:13" pos:end="51:22">

            <goto pos:start="51:13" pos:end="51:22">goto <name pos:start="51:18" pos:end="51:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><call pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:17">log_slave</name><argument_list pos:start="53:18" pos:end="53:55">(<argument pos:start="53:19" pos:end="53:33"><expr pos:start="53:19" pos:end="53:33"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:33"><name pos:start="53:20" pos:end="53:22">tee</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:30">slaves</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:38">avf</name></expr></argument>, <argument pos:start="53:41" pos:end="53:54"><expr pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:54">AV_LOG_VERBOSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><call pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:16">av_freep</name><argument_list pos:start="55:17" pos:end="55:28">(<argument pos:start="55:18" pos:end="55:27"><expr pos:start="55:18" pos:end="55:27"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:24">slaves</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:31"><expr pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">tee</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">nb_slaves</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:30">nb_slaves</name></expr>;</expr_stmt>



    <for pos:start="65:5" pos:end="79:5">for <control pos:start="65:9" pos:end="65:41">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:36"><expr pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:23">avf</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:35">nb_streams</name></name></expr>;</condition> <incr pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:38">i</name><operator pos:start="65:39" pos:end="65:40">++</operator></expr></incr>)</control> <block pos:start="65:43" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:41">

        <decl_stmt pos:start="67:9" pos:end="67:26"><decl pos:start="67:9" pos:end="67:13"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">j</name></decl>, <decl pos:start="67:16" pos:end="67:25"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:16" pos:end="67:21">mapped</name> <init pos:start="67:23" pos:end="67:25">= <expr pos:start="67:25" pos:end="67:25"><literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="69:9" pos:end="71:56">for <control pos:start="69:13" pos:end="69:44">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">j</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:39"><expr pos:start="69:21" pos:end="69:38"><name pos:start="69:21" pos:end="69:21">j</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:27">tee</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:38">nb_slaves</name></name></expr>;</condition> <incr pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:41">j</name><operator pos:start="69:42" pos:end="69:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:13" pos:end="71:56"><block_content pos:start="71:13" pos:end="71:56">

            <expr_stmt pos:start="71:13" pos:end="71:56"><expr pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:18">mapped</name> <operator pos:start="71:20" pos:end="71:21">+=</operator> <name pos:start="71:23" pos:end="71:36"><name pos:start="71:23" pos:end="71:25">tee</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:33">slaves</name><index pos:start="71:34" pos:end="71:36">[<expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">j</name></expr>]</index></name><operator pos:start="71:37" pos:end="71:37">.</operator><name pos:start="71:38" pos:end="71:50"><name pos:start="71:38" pos:end="71:47">stream_map</name><index pos:start="71:48" pos:end="71:50">[<expr pos:start="71:49" pos:end="71:49"><name pos:start="71:49" pos:end="71:49">i</name></expr>]</index></name> <operator pos:start="71:52" pos:end="71:53">&gt;=</operator> <literal type="number" pos:start="71:55" pos:end="71:55">0</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="73:9" pos:end="77:41"><if pos:start="73:9" pos:end="77:41">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:19">mapped</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="77:41"><block_content pos:start="75:13" pos:end="77:41">

            <expr_stmt pos:start="75:13" pos:end="77:41"><expr pos:start="75:13" pos:end="77:40"><call pos:start="75:13" pos:end="77:40"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="77:40">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">avf</name></expr></argument>, <argument pos:start="75:25" pos:end="75:38"><expr pos:start="75:25" pos:end="75:38"><name pos:start="75:25" pos:end="75:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="75:41" pos:end="77:36"><expr pos:start="75:41" pos:end="77:36"><literal type="string" pos:start="75:41" pos:end="75:73">"Input stream #%d is not mapped "</literal>

                   <literal type="string" pos:start="77:20" pos:end="77:36">"to any slave.\n"</literal></expr></argument>, <argument pos:start="77:39" pos:end="77:39"><expr pos:start="77:39" pos:end="77:39"><name pos:start="77:39" pos:end="77:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>



<label pos:start="85:1" pos:end="85:5"><name pos:start="85:1" pos:end="85:4">fail</name>:</label>

    <for pos:start="87:5" pos:end="89:29">for <control pos:start="87:9" pos:end="87:35">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:30"><expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:29">nb_slaves</name></expr>;</condition> <incr pos:start="87:32" pos:end="87:34"><expr pos:start="87:32" pos:end="87:34"><name pos:start="87:32" pos:end="87:32">i</name><operator pos:start="87:33" pos:end="87:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:9" pos:end="89:29"><block_content pos:start="89:9" pos:end="89:29">

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:16">av_freep</name><argument_list pos:start="89:17" pos:end="89:28">(<argument pos:start="89:18" pos:end="89:27"><expr pos:start="89:18" pos:end="89:27"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:27"><name pos:start="89:19" pos:end="89:24">slaves</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="91:5" pos:end="91:22"><expr pos:start="91:5" pos:end="91:21"><call pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:16">close_slaves</name><argument_list pos:start="91:17" pos:end="91:21">(<argument pos:start="91:18" pos:end="91:20"><expr pos:start="91:18" pos:end="91:20"><name pos:start="91:18" pos:end="91:20">avf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:15">return <expr pos:start="93:12" pos:end="93:14"><name pos:start="93:12" pos:end="93:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
