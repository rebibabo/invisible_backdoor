<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8789.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:78"><decl pos:start="1:61" pos:end="1:78"><type pos:start="1:61" pos:end="1:78"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:78">got_frame_ptr</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">AVPacket</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:30">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name>  <init pos:start="7:25" pos:end="7:37">= <expr pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:31">avpkt</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:37">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>        <init pos:start="9:25" pos:end="9:37">= <expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:31">avpkt</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:37">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MPADecodeContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:23">s</name> <init pos:start="11:25" pos:end="11:42">= <expr pos:start="11:27" pos:end="11:42"><name pos:start="11:27" pos:end="11:42"><name pos:start="11:27" pos:end="11:31">avctx</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">skipped</name> <init pos:start="19:17" pos:end="19:19">= <expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</decl_stmt>

    <while pos:start="21:5" pos:end="29:5">while<condition pos:start="21:10" pos:end="21:28">(<expr pos:start="21:11" pos:end="21:27"><name pos:start="21:11" pos:end="21:18">buf_size</name> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">!</operator><operator pos:start="21:24" pos:end="21:24">*</operator><name pos:start="21:25" pos:end="21:27">buf</name></expr>)</condition><block pos:start="21:29" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:11">buf</name><operator pos:start="23:12" pos:end="23:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:16">buf_size</name><operator pos:start="25:17" pos:end="25:18">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:15">skipped</name><operator pos:start="27:16" pos:end="27:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:16">buf_size</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:30">HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:10">header</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:25"><name pos:start="39:14" pos:end="39:20">AV_RB32</name><argument_list pos:start="39:21" pos:end="39:25">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:39">(<expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:14">header</name><operator pos:start="41:15" pos:end="41:16">&gt;&gt;</operator><literal type="number" pos:start="41:17" pos:end="41:17">8</literal> <operator pos:start="41:19" pos:end="41:20">==</operator> <call pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:28">AV_RB32</name><argument_list pos:start="41:29" pos:end="41:35">(<argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><literal type="string" pos:start="41:30" pos:end="41:34">"TAG"</literal></expr></argument>)</argument_list></call><operator pos:start="41:36" pos:end="41:37">&gt;&gt;</operator><literal type="number" pos:start="41:38" pos:end="41:38">8</literal></expr>)</condition> <block pos:start="41:41" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:24">

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><call pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:59">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="43:37" pos:end="43:58"><expr pos:start="43:37" pos:end="43:58"><literal type="string" pos:start="43:37" pos:end="43:58">"discarding ID3 tag\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:24">return <expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:71"><expr pos:start="49:5" pos:end="49:70"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:70"><name pos:start="49:11" pos:end="49:40">avpriv_mpegaudio_decode_header</name><argument_list pos:start="49:41" pos:end="49:70">(<argument pos:start="49:42" pos:end="49:61"><expr pos:start="49:42" pos:end="49:61"><operator pos:start="49:42" pos:end="49:42">(</operator><name pos:start="49:43" pos:end="49:57">MPADecodeHeader</name> <operator pos:start="49:59" pos:end="49:59">*</operator><operator pos:start="49:60" pos:end="49:60">)</operator><name pos:start="49:61" pos:end="49:61">s</name></expr></argument>, <argument pos:start="49:64" pos:end="49:69"><expr pos:start="49:64" pos:end="49:69"><name pos:start="49:64" pos:end="49:69">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:35">

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><call pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:55">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:54"><expr pos:start="53:37" pos:end="53:54"><literal type="string" pos:start="53:37" pos:end="53:54">"Header missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="65:5">else if <condition pos:start="57:15" pos:end="57:24">(<expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:18">ret</name> <operator pos:start="57:20" pos:end="57:21">==</operator> <literal type="number" pos:start="57:23" pos:end="57:23">1</literal></expr>)</condition> <block pos:start="57:26" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:35">

        <comment type="block" pos:start="59:9" pos:end="59:56">/* free format: prepare to compute frame size */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">frame_size</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <operator pos:start="61:25" pos:end="61:25">-</operator><literal type="number" pos:start="61:26" pos:end="61:26">1</literal></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:35">return <expr pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:27">/* update codec info */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:9">avctx</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:19">channels</name></name>       <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:42"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:42">nb_channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:90"><expr pos:start="71:5" pos:end="71:89"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:9">avctx</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:25">channel_layout</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <ternary pos:start="71:29" pos:end="71:89"><condition pos:start="71:29" pos:end="71:49"><expr pos:start="71:29" pos:end="71:47"><name pos:start="71:29" pos:end="71:42"><name pos:start="71:29" pos:end="71:29">s</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:42">nb_channels</name></name> <operator pos:start="71:44" pos:end="71:45">==</operator> <literal type="number" pos:start="71:47" pos:end="71:47">1</literal></expr> ?</condition><then pos:start="71:51" pos:end="71:67"> <expr pos:start="71:51" pos:end="71:67"><name pos:start="71:51" pos:end="71:67">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="71:69" pos:end="71:89">: <expr pos:start="71:71" pos:end="71:89"><name pos:start="71:71" pos:end="71:89">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:38"><if pos:start="73:5" pos:end="75:38">if <condition pos:start="73:8" pos:end="73:25">(<expr pos:start="73:9" pos:end="73:24"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:24"><name pos:start="73:10" pos:end="73:14">avctx</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:38"><block_content pos:start="75:9" pos:end="75:38">

        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">bit_rate</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:37">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:27">(<expr pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">frame_size</name></name> <operator pos:start="79:23" pos:end="79:24">&lt;=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr>)</condition> <block pos:start="79:29" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:35">

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><call pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:57">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:56"><expr pos:start="81:37" pos:end="81:56"><literal type="string" pos:start="81:37" pos:end="81:56">"incomplete frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="91:5">else if <condition pos:start="85:15" pos:end="85:40">(<expr pos:start="85:16" pos:end="85:39"><name pos:start="85:16" pos:end="85:28"><name pos:start="85:16" pos:end="85:16">s</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:28">frame_size</name></name> <operator pos:start="85:30" pos:end="85:30">&lt;</operator> <name pos:start="85:32" pos:end="85:39">buf_size</name></expr>)</condition> <block pos:start="85:42" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:32">

        <expr_stmt pos:start="87:9" pos:end="87:91"><expr pos:start="87:9" pos:end="87:90"><call pos:start="87:9" pos:end="87:90"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:90">(<argument pos:start="87:16" pos:end="87:20"><expr pos:start="87:16" pos:end="87:20"><name pos:start="87:16" pos:end="87:20">avctx</name></expr></argument>, <argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:37" pos:end="87:89"><expr pos:start="87:37" pos:end="87:89"><literal type="string" pos:start="87:37" pos:end="87:89">"incorrect frame size - multiple frames in buffer?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:16">buf_size</name><operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:31"><name pos:start="89:19" pos:end="89:19">s</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:31">frame_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:20"><expr pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:12">frame</name></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:19">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:50"><expr pos:start="99:5" pos:end="99:49"><name pos:start="99:5" pos:end="99:7">ret</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <call pos:start="99:11" pos:end="99:49"><name pos:start="99:11" pos:end="99:25">mp_decode_frame</name><argument_list pos:start="99:26" pos:end="99:49">(<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">s</name></expr></argument>, <argument pos:start="99:30" pos:end="99:33"><expr pos:start="99:30" pos:end="99:33"><name pos:start="99:30" pos:end="99:33">NULL</name></expr></argument>, <argument pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><name pos:start="99:36" pos:end="99:38">buf</name></expr></argument>, <argument pos:start="99:41" pos:end="99:48"><expr pos:start="99:41" pos:end="99:48"><name pos:start="99:41" pos:end="99:48">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="131:5"><if pos:start="101:5" pos:end="111:5">if <condition pos:start="101:8" pos:end="101:17">(<expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:14">&gt;=</operator> <literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>)</condition> <block pos:start="101:19" pos:end="111:5">{<block_content pos:start="103:9" pos:end="107:46">

        <expr_stmt pos:start="103:9" pos:end="103:49"><expr pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:16">frame</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:28">nb_samples</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:48"><name pos:start="103:32" pos:end="103:36">avctx</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:48">frame_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:33"><expr pos:start="105:9" pos:end="105:32"><operator pos:start="105:9" pos:end="105:9">*</operator><name pos:start="105:10" pos:end="105:22">got_frame_ptr</name>       <operator pos:start="105:30" pos:end="105:30">=</operator> <literal type="number" pos:start="105:32" pos:end="105:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:46"><expr pos:start="107:9" pos:end="107:45"><name pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:26">sample_rate</name></name>   <operator pos:start="107:30" pos:end="107:30">=</operator> <name pos:start="107:32" pos:end="107:45"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:45">sample_rate</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="109:9" pos:end="109:73">//FIXME maybe move the other codec info stuff from above here too</comment>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="131:5">else <block pos:start="111:12" pos:end="131:5">{<block_content pos:start="113:9" pos:end="129:23">

        <expr_stmt pos:start="113:9" pos:end="113:80"><expr pos:start="113:9" pos:end="113:79"><call pos:start="113:9" pos:end="113:79"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:79">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:78"><expr pos:start="113:37" pos:end="113:78"><literal type="string" pos:start="113:37" pos:end="113:78">"Error while decoding MPEG audio frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="115:9" pos:end="123:21">/* Only return an error if the bad frame makes up the whole packet or

         * the error is related to buffer management.

         * If there is more data in the packet, just consume the bad frame

         * instead of returning an error, which would discard the whole

         * packet. */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:27"><expr pos:start="125:9" pos:end="125:26"><operator pos:start="125:9" pos:end="125:9">*</operator><name pos:start="125:10" pos:end="125:22">got_frame_ptr</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <literal type="number" pos:start="125:26" pos:end="125:26">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:23"><if pos:start="127:9" pos:end="129:23">if <condition pos:start="127:12" pos:end="127:66">(<expr pos:start="127:13" pos:end="127:65"><name pos:start="127:13" pos:end="127:20">buf_size</name> <operator pos:start="127:22" pos:end="127:23">==</operator> <name pos:start="127:25" pos:end="127:35"><name pos:start="127:25" pos:end="127:29">avpkt</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:35">size</name></name> <operator pos:start="127:37" pos:end="127:38">||</operator> <name pos:start="127:40" pos:end="127:42">ret</name> <operator pos:start="127:44" pos:end="127:45">!=</operator> <name pos:start="127:47" pos:end="127:65">AVERROR_INVALIDDATA</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:23"><block_content pos:start="129:13" pos:end="129:23">

            <return pos:start="129:13" pos:end="129:23">return <expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:22"><expr pos:start="133:5" pos:end="133:21"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:17">frame_size</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <literal type="number" pos:start="133:21" pos:end="133:21">0</literal></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:30">return <expr pos:start="135:12" pos:end="135:29"><name pos:start="135:12" pos:end="135:19">buf_size</name> <operator pos:start="135:21" pos:end="135:21">+</operator> <name pos:start="135:23" pos:end="135:29">skipped</name></expr>;</return>

</block_content>}</block></function>
</unit>
