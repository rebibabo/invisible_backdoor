<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20787.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">qcow2_read_snapshots</name><parameter_list pos:start="1:25" pos:end="1:46">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">QCowSnapshotHeader</name></type> <name pos:start="7:24" pos:end="7:24">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:25">QCowSnapshotExtraData</name></type> <name pos:start="9:27" pos:end="9:31">extra</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">QCowSnapshot</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:22">id_str_size</name></decl>, <decl pos:start="13:25" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:33">name_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:28">extra_data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:24">nb_snapshots</name></name></expr>)</condition> <block pos:start="23:27" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:17">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">snapshots</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">snapshots_size</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:10">offset</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:32"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:32">snapshots_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">snapshots</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:68"><name pos:start="37:20" pos:end="37:28">g_malloc0</name><argument_list pos:start="37:29" pos:end="37:68">(<argument pos:start="37:30" pos:end="37:67"><expr pos:start="37:30" pos:end="37:67"><name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:44">nb_snapshots</name></name> <operator pos:start="37:46" pos:end="37:46">*</operator> <sizeof pos:start="37:48" pos:end="37:67">sizeof<argument_list pos:start="37:54" pos:end="37:67">(<argument pos:start="37:55" pos:end="37:66"><expr pos:start="37:55" pos:end="37:66"><name pos:start="37:55" pos:end="37:66">QCowSnapshot</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="163:5">for<control pos:start="41:8" pos:end="41:40">(<init pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>;</init> <condition pos:start="41:16" pos:end="41:35"><expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:16">i</name> <operator pos:start="41:18" pos:end="41:18">&lt;</operator> <name pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:34">nb_snapshots</name></name></expr>;</condition> <incr pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:37">i</name><operator pos:start="41:38" pos:end="41:39">++</operator></expr></incr>)</control> <block pos:start="41:42" pos:end="163:5">{<block_content pos:start="45:9" pos:end="161:9">

        <comment type="block" pos:start="43:9" pos:end="43:63">/* Read statically sized part of the snapshot header */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:14">offset</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:40"><name pos:start="45:18" pos:end="45:29">align_offset</name><argument_list pos:start="45:30" pos:end="45:40">(<argument pos:start="45:31" pos:end="45:36"><expr pos:start="45:31" pos:end="45:36"><name pos:start="45:31" pos:end="45:36">offset</name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:57"><name pos:start="47:15" pos:end="47:24">bdrv_pread</name><argument_list pos:start="47:25" pos:end="47:57">(<argument pos:start="47:26" pos:end="47:33"><expr pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:27">bs</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:33">file</name></name></expr></argument>, <argument pos:start="47:36" pos:end="47:41"><expr pos:start="47:36" pos:end="47:41"><name pos:start="47:36" pos:end="47:41">offset</name></expr></argument>, <argument pos:start="47:44" pos:end="47:45"><expr pos:start="47:44" pos:end="47:45"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:45">h</name></expr></argument>, <argument pos:start="47:48" pos:end="47:56"><expr pos:start="47:48" pos:end="47:56"><sizeof pos:start="47:48" pos:end="47:56">sizeof<argument_list pos:start="47:54" pos:end="47:56">(<argument pos:start="47:55" pos:end="47:55"><expr pos:start="47:55" pos:end="47:55"><name pos:start="47:55" pos:end="47:55">h</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:22">

            <goto pos:start="51:13" pos:end="51:22">goto <name pos:start="51:18" pos:end="51:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:14">offset</name> <operator pos:start="57:16" pos:end="57:17">+=</operator> <sizeof pos:start="57:19" pos:end="57:27">sizeof<argument_list pos:start="57:25" pos:end="57:27">(<argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">h</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:10">sn</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:14">s</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:25">snapshots</name></name> <operator pos:start="59:27" pos:end="59:27">+</operator> <name pos:start="59:29" pos:end="59:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:10">sn</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:27">l1_table_offset</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:60"><name pos:start="61:31" pos:end="61:41">be64_to_cpu</name><argument_list pos:start="61:42" pos:end="61:60">(<argument pos:start="61:43" pos:end="61:59"><expr pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:43">h</name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:59">l1_table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:10">sn</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:19">l1_size</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:44"><name pos:start="63:23" pos:end="63:33">be32_to_cpu</name><argument_list pos:start="63:34" pos:end="63:44">(<argument pos:start="63:35" pos:end="63:43"><expr pos:start="63:35" pos:end="63:43"><name pos:start="63:35" pos:end="63:43"><name pos:start="63:35" pos:end="63:35">h</name><operator pos:start="63:36" pos:end="63:36">.</operator><name pos:start="63:37" pos:end="63:43">l1_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:57"><expr pos:start="65:9" pos:end="65:56"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:10">sn</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:25">vm_state_size</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:56"><name pos:start="65:29" pos:end="65:39">be32_to_cpu</name><argument_list pos:start="65:40" pos:end="65:56">(<argument pos:start="65:41" pos:end="65:55"><expr pos:start="65:41" pos:end="65:55"><name pos:start="65:41" pos:end="65:55"><name pos:start="65:41" pos:end="65:41">h</name><operator pos:start="65:42" pos:end="65:42">.</operator><name pos:start="65:43" pos:end="65:55">vm_state_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:10">sn</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:20">date_sec</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <call pos:start="67:24" pos:end="67:46"><name pos:start="67:24" pos:end="67:34">be32_to_cpu</name><argument_list pos:start="67:35" pos:end="67:46">(<argument pos:start="67:36" pos:end="67:45"><expr pos:start="67:36" pos:end="67:45"><name pos:start="67:36" pos:end="67:45"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:37">.</operator><name pos:start="67:38" pos:end="67:45">date_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:49"><expr pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">sn</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:21">date_nsec</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:48"><name pos:start="69:25" pos:end="69:35">be32_to_cpu</name><argument_list pos:start="69:36" pos:end="69:48">(<argument pos:start="69:37" pos:end="69:47"><expr pos:start="69:37" pos:end="69:47"><name pos:start="69:37" pos:end="69:47"><name pos:start="69:37" pos:end="69:37">h</name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:47">date_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:10">sn</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:25">vm_clock_nsec</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:56"><name pos:start="71:29" pos:end="71:39">be64_to_cpu</name><argument_list pos:start="71:40" pos:end="71:56">(<argument pos:start="71:41" pos:end="71:55"><expr pos:start="71:41" pos:end="71:55"><name pos:start="71:41" pos:end="71:55"><name pos:start="71:41" pos:end="71:41">h</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:55">vm_clock_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:57"><expr pos:start="73:9" pos:end="73:56"><name pos:start="73:9" pos:end="73:23">extra_data_size</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:56"><name pos:start="73:27" pos:end="73:37">be32_to_cpu</name><argument_list pos:start="73:38" pos:end="73:56">(<argument pos:start="73:39" pos:end="73:55"><expr pos:start="73:39" pos:end="73:55"><name pos:start="73:39" pos:end="73:55"><name pos:start="73:39" pos:end="73:39">h</name><operator pos:start="73:40" pos:end="73:40">.</operator><name pos:start="73:41" pos:end="73:55">extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:19">id_str_size</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:48"><name pos:start="77:23" pos:end="77:33">be16_to_cpu</name><argument_list pos:start="77:34" pos:end="77:48">(<argument pos:start="77:35" pos:end="77:47"><expr pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:35">h</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:47">id_str_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:45"><expr pos:start="79:9" pos:end="79:44"><name pos:start="79:9" pos:end="79:17">name_size</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:31">be16_to_cpu</name><argument_list pos:start="79:32" pos:end="79:44">(<argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><name pos:start="79:33" pos:end="79:43"><name pos:start="79:33" pos:end="79:33">h</name><operator pos:start="79:34" pos:end="79:34">.</operator><name pos:start="79:35" pos:end="79:43">name_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:29">/* Read extra data */</comment>

        <expr_stmt pos:start="85:9" pos:end="87:62"><expr pos:start="85:9" pos:end="87:61"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="87:61"><name pos:start="85:15" pos:end="85:24">bdrv_pread</name><argument_list pos:start="85:25" pos:end="87:61">(<argument pos:start="85:26" pos:end="85:33"><expr pos:start="85:26" pos:end="85:33"><name pos:start="85:26" pos:end="85:33"><name pos:start="85:26" pos:end="85:27">bs</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:33">file</name></name></expr></argument>, <argument pos:start="85:36" pos:end="85:41"><expr pos:start="85:36" pos:end="85:41"><name pos:start="85:36" pos:end="85:41">offset</name></expr></argument>, <argument pos:start="85:44" pos:end="85:49"><expr pos:start="85:44" pos:end="85:49"><operator pos:start="85:44" pos:end="85:44">&amp;</operator><name pos:start="85:45" pos:end="85:49">extra</name></expr></argument>,

                         <argument pos:start="87:26" pos:end="87:60"><expr pos:start="87:26" pos:end="87:60"><call pos:start="87:26" pos:end="87:60"><name pos:start="87:26" pos:end="87:28">MIN</name><argument_list pos:start="87:29" pos:end="87:60">(<argument pos:start="87:30" pos:end="87:42"><expr pos:start="87:30" pos:end="87:42"><sizeof pos:start="87:30" pos:end="87:42">sizeof<argument_list pos:start="87:36" pos:end="87:42">(<argument pos:start="87:37" pos:end="87:41"><expr pos:start="87:37" pos:end="87:41"><name pos:start="87:37" pos:end="87:41">extra</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="87:45" pos:end="87:59"><expr pos:start="87:45" pos:end="87:59"><name pos:start="87:45" pos:end="87:59">extra_data_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:20">(<expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">&lt;</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>)</condition> <block pos:start="89:22" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:22">

            <goto pos:start="91:13" pos:end="91:22">goto <name pos:start="91:18" pos:end="91:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:14">offset</name> <operator pos:start="95:16" pos:end="95:17">+=</operator> <name pos:start="95:19" pos:end="95:33">extra_data_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:33">(<expr pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:27">extra_data_size</name> <operator pos:start="99:29" pos:end="99:30">&gt;=</operator> <literal type="number" pos:start="99:32" pos:end="99:32">8</literal></expr>)</condition> <block pos:start="99:35" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:71">

            <expr_stmt pos:start="101:13" pos:end="101:71"><expr pos:start="101:13" pos:end="101:70"><name pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:14">sn</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:29">vm_state_size</name></name> <operator pos:start="101:31" pos:end="101:31">=</operator> <call pos:start="101:33" pos:end="101:70"><name pos:start="101:33" pos:end="101:43">be64_to_cpu</name><argument_list pos:start="101:44" pos:end="101:70">(<argument pos:start="101:45" pos:end="101:69"><expr pos:start="101:45" pos:end="101:69"><name pos:start="101:45" pos:end="101:69"><name pos:start="101:45" pos:end="101:49">extra</name><operator pos:start="101:50" pos:end="101:50">.</operator><name pos:start="101:51" pos:end="101:69">vm_state_size_large</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:34">(<expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:27">extra_data_size</name> <operator pos:start="107:29" pos:end="107:30">&gt;=</operator> <literal type="number" pos:start="107:32" pos:end="107:33">16</literal></expr>)</condition> <block pos:start="107:36" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:57">

            <expr_stmt pos:start="109:13" pos:end="109:57"><expr pos:start="109:13" pos:end="109:56"><name pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:14">sn</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:25">disk_size</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <call pos:start="109:29" pos:end="109:56"><name pos:start="109:29" pos:end="109:39">be64_to_cpu</name><argument_list pos:start="109:40" pos:end="109:56">(<argument pos:start="109:41" pos:end="109:55"><expr pos:start="109:41" pos:end="109:55"><name pos:start="109:41" pos:end="109:55"><name pos:start="109:41" pos:end="109:45">extra</name><operator pos:start="109:46" pos:end="109:46">.</operator><name pos:start="109:47" pos:end="109:55">disk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="115:9">else <block pos:start="111:16" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:65">

            <expr_stmt pos:start="113:13" pos:end="113:65"><expr pos:start="113:13" pos:end="113:64"><name pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:14">sn</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:25">disk_size</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <name pos:start="113:29" pos:end="113:45"><name pos:start="113:29" pos:end="113:30">bs</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:45">total_sectors</name></name> <operator pos:start="113:47" pos:end="113:47">*</operator> <name pos:start="113:49" pos:end="113:64">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:30">/* Read snapshot ID */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:10">sn</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:18">id_str</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:46"><name pos:start="121:22" pos:end="121:29">g_malloc</name><argument_list pos:start="121:30" pos:end="121:46">(<argument pos:start="121:31" pos:end="121:45"><expr pos:start="121:31" pos:end="121:45"><name pos:start="121:31" pos:end="121:41">id_str_size</name> <operator pos:start="121:43" pos:end="121:43">+</operator> <literal type="number" pos:start="121:45" pos:end="121:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:68"><expr pos:start="123:9" pos:end="123:67"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:67"><name pos:start="123:15" pos:end="123:24">bdrv_pread</name><argument_list pos:start="123:25" pos:end="123:67">(<argument pos:start="123:26" pos:end="123:33"><expr pos:start="123:26" pos:end="123:33"><name pos:start="123:26" pos:end="123:33"><name pos:start="123:26" pos:end="123:27">bs</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:33">file</name></name></expr></argument>, <argument pos:start="123:36" pos:end="123:41"><expr pos:start="123:36" pos:end="123:41"><name pos:start="123:36" pos:end="123:41">offset</name></expr></argument>, <argument pos:start="123:44" pos:end="123:53"><expr pos:start="123:44" pos:end="123:53"><name pos:start="123:44" pos:end="123:53"><name pos:start="123:44" pos:end="123:45">sn</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">id_str</name></name></expr></argument>, <argument pos:start="123:56" pos:end="123:66"><expr pos:start="123:56" pos:end="123:66"><name pos:start="123:56" pos:end="123:66">id_str_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="129:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:20">(<expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">&lt;</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>)</condition> <block pos:start="125:22" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:22">

            <goto pos:start="127:13" pos:end="127:22">goto <name pos:start="127:18" pos:end="127:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:30"><expr pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:14">offset</name> <operator pos:start="131:16" pos:end="131:17">+=</operator> <name pos:start="131:19" pos:end="131:29">id_str_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:39"><expr pos:start="133:9" pos:end="133:38"><name pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:10">sn</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:18">id_str</name><index pos:start="133:19" pos:end="133:31">[<expr pos:start="133:20" pos:end="133:30"><name pos:start="133:20" pos:end="133:30">id_str_size</name></expr>]</index></name> <operator pos:start="133:33" pos:end="133:33">=</operator> <literal type="char" pos:start="133:35" pos:end="133:38">'\0'</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:32">/* Read snapshot name */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:43"><expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:16"><name pos:start="139:9" pos:end="139:10">sn</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:16">name</name></name> <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:42"><name pos:start="139:20" pos:end="139:27">g_malloc</name><argument_list pos:start="139:28" pos:end="139:42">(<argument pos:start="139:29" pos:end="139:41"><expr pos:start="139:29" pos:end="139:41"><name pos:start="139:29" pos:end="139:37">name_size</name> <operator pos:start="139:39" pos:end="139:39">+</operator> <literal type="number" pos:start="139:41" pos:end="139:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:64"><expr pos:start="141:9" pos:end="141:63"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:63"><name pos:start="141:15" pos:end="141:24">bdrv_pread</name><argument_list pos:start="141:25" pos:end="141:63">(<argument pos:start="141:26" pos:end="141:33"><expr pos:start="141:26" pos:end="141:33"><name pos:start="141:26" pos:end="141:33"><name pos:start="141:26" pos:end="141:27">bs</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:33">file</name></name></expr></argument>, <argument pos:start="141:36" pos:end="141:41"><expr pos:start="141:36" pos:end="141:41"><name pos:start="141:36" pos:end="141:41">offset</name></expr></argument>, <argument pos:start="141:44" pos:end="141:51"><expr pos:start="141:44" pos:end="141:51"><name pos:start="141:44" pos:end="141:51"><name pos:start="141:44" pos:end="141:45">sn</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:51">name</name></name></expr></argument>, <argument pos:start="141:54" pos:end="141:62"><expr pos:start="141:54" pos:end="141:62"><name pos:start="141:54" pos:end="141:62">name_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">&lt;</operator> <literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>)</condition> <block pos:start="143:22" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:22">

            <goto pos:start="145:13" pos:end="145:22">goto <name pos:start="145:18" pos:end="145:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:14">offset</name> <operator pos:start="149:16" pos:end="149:17">+=</operator> <name pos:start="149:19" pos:end="149:27">name_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:10">sn</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:16">name</name><index pos:start="151:17" pos:end="151:27">[<expr pos:start="151:18" pos:end="151:26"><name pos:start="151:18" pos:end="151:26">name_size</name></expr>]</index></name> <operator pos:start="151:29" pos:end="151:29">=</operator> <literal type="char" pos:start="151:31" pos:end="151:34">'\0'</literal></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:67">(<expr pos:start="155:13" pos:end="155:66"><name pos:start="155:13" pos:end="155:18">offset</name> <operator pos:start="155:20" pos:end="155:20">-</operator> <name pos:start="155:22" pos:end="155:40"><name pos:start="155:22" pos:end="155:22">s</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:40">snapshots_offset</name></name> <operator pos:start="155:42" pos:end="155:42">&gt;</operator> <name pos:start="155:44" pos:end="155:66">QCOW_MAX_SNAPSHOTS_SIZE</name></expr>)</condition> <block pos:start="155:69" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:22">

            <expr_stmt pos:start="157:13" pos:end="157:25"><expr pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <operator pos:start="157:19" pos:end="157:19">-</operator><name pos:start="157:20" pos:end="157:24">EFBIG</name></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:22">goto <name pos:start="159:18" pos:end="159:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="167:5" pos:end="167:52"><expr pos:start="167:5" pos:end="167:51"><call pos:start="167:5" pos:end="167:51"><name pos:start="167:5" pos:end="167:10">assert</name><argument_list pos:start="167:11" pos:end="167:51">(<argument pos:start="167:12" pos:end="167:50"><expr pos:start="167:12" pos:end="167:50"><name pos:start="167:12" pos:end="167:17">offset</name> <operator pos:start="167:19" pos:end="167:19">-</operator> <name pos:start="167:21" pos:end="167:39"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:39">snapshots_offset</name></name> <operator pos:start="167:41" pos:end="167:42">&lt;=</operator> <name pos:start="167:44" pos:end="167:50">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:53"><expr pos:start="169:5" pos:end="169:52"><name pos:start="169:5" pos:end="169:21"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:21">snapshots_size</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <name pos:start="169:25" pos:end="169:30">offset</name> <operator pos:start="169:32" pos:end="169:32">-</operator> <name pos:start="169:34" pos:end="169:52"><name pos:start="169:34" pos:end="169:34">s</name><operator pos:start="169:35" pos:end="169:36">-&gt;</operator><name pos:start="169:37" pos:end="169:52">snapshots_offset</name></name></expr>;</expr_stmt>

    <return pos:start="171:5" pos:end="171:13">return <expr pos:start="171:12" pos:end="171:12"><literal type="number" pos:start="171:12" pos:end="171:12">0</literal></expr>;</return>



<label pos:start="175:1" pos:end="175:5"><name pos:start="175:1" pos:end="175:4">fail</name>:</label>

    <expr_stmt pos:start="177:5" pos:end="177:29"><expr pos:start="177:5" pos:end="177:28"><call pos:start="177:5" pos:end="177:28"><name pos:start="177:5" pos:end="177:24">qcow2_free_snapshots</name><argument_list pos:start="177:25" pos:end="177:28">(<argument pos:start="177:26" pos:end="177:27"><expr pos:start="177:26" pos:end="177:27"><name pos:start="177:26" pos:end="177:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="179:5" pos:end="179:15">return <expr pos:start="179:12" pos:end="179:14"><name pos:start="179:12" pos:end="179:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
