<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15350.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:35"><name pos:start="1:1" pos:end="1:16">ioapic_mem_write</name><argument_list pos:start="1:17" pos:end="3:35">(<argument pos:start="1:18" pos:end="1:29">void *opaque</argument>, <argument pos:start="1:32" pos:end="1:54">target_phys_addr_t addr</argument>, <argument pos:start="1:57" pos:end="1:68">uint64_t val</argument>,

                 <argument pos:start="3:18" pos:end="3:34">unsigned int size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:5">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">IOAPICCommonState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:33">= <expr pos:start="7:28" pos:end="7:33"><name pos:start="7:28" pos:end="7:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="73:5">switch <condition pos:start="13:12" pos:end="13:24">(<expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:16">addr</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <literal type="number" pos:start="13:20" pos:end="13:23">0xff</literal></expr>)</condition> <block pos:start="13:26" pos:end="73:5">{<block_content pos:start="15:5" pos:end="71:14">

    <case pos:start="15:5" pos:end="15:25">case <expr pos:start="15:10" pos:end="15:24"><name pos:start="15:10" pos:end="15:24">IOAPIC_IOREGSEL</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">ioregsel</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:25">val</name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:22">case <expr pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:21">IOAPIC_IOWIN</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:19">!=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">4</literal></expr>)</condition> <block pos:start="23:24" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:15">DPRINTF</name><argument_list pos:start="29:16" pos:end="29:66">(<argument pos:start="29:17" pos:end="29:47"><expr pos:start="29:17" pos:end="29:47"><literal type="string" pos:start="29:17" pos:end="29:35">"write: %08x = %08"</literal> <name pos:start="29:37" pos:end="29:42">PRIx64</name> <literal type="string" pos:start="29:44" pos:end="29:47">"\n"</literal></expr></argument>, <argument pos:start="29:50" pos:end="29:60"><expr pos:start="29:50" pos:end="29:60"><name pos:start="29:50" pos:end="29:60"><name pos:start="29:50" pos:end="29:50">s</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:60">ioregsel</name></name></expr></argument>, <argument pos:start="29:63" pos:end="29:65"><expr pos:start="29:63" pos:end="29:65"><name pos:start="29:63" pos:end="29:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="31:9" pos:end="69:9">switch <condition pos:start="31:16" pos:end="31:28">(<expr pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">ioregsel</name></name></expr>)</condition> <block pos:start="31:30" pos:end="69:9">{<block_content pos:start="33:9" pos:end="67:13">

        <case pos:start="33:9" pos:end="33:27">case <expr pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:26">IOAPIC_REG_ID</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:62"><expr pos:start="35:13" pos:end="35:61"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">id</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:24">val</name> <operator pos:start="35:26" pos:end="35:27">&gt;&gt;</operator> <name pos:start="35:29" pos:end="35:43">IOAPIC_ID_SHIFT</name><operator pos:start="35:44" pos:end="35:44">)</operator> <operator pos:start="35:46" pos:end="35:46">&amp;</operator> <name pos:start="35:48" pos:end="35:61">IOAPIC_ID_MASK</name></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:28">case <expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:27">IOAPIC_REG_VER</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:28">case <expr pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:27">IOAPIC_REG_ARB</name></expr>:</case>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <default pos:start="45:9" pos:end="45:16">default:</default>

            <expr_stmt pos:start="47:13" pos:end="47:64"><expr pos:start="47:13" pos:end="47:63"><name pos:start="47:13" pos:end="47:17">index</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:32">ioregsel</name></name> <operator pos:start="47:34" pos:end="47:34">-</operator> <name pos:start="47:36" pos:end="47:57">IOAPIC_REG_REDTBL_BASE</name><operator pos:start="47:58" pos:end="47:58">)</operator> <operator pos:start="47:60" pos:end="47:61">&gt;&gt;</operator> <literal type="number" pos:start="47:63" pos:end="47:63">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="67:13"><if pos:start="49:13" pos:end="67:13">if <condition pos:start="49:16" pos:end="49:54">(<expr pos:start="49:17" pos:end="49:53"><name pos:start="49:17" pos:end="49:21">index</name> <operator pos:start="49:23" pos:end="49:24">&gt;=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal> <operator pos:start="49:28" pos:end="49:29">&amp;&amp;</operator> <name pos:start="49:31" pos:end="49:35">index</name> <operator pos:start="49:37" pos:end="49:37">&lt;</operator> <name pos:start="49:39" pos:end="49:53">IOAPIC_NUM_PINS</name></expr>)</condition> <block pos:start="49:56" pos:end="67:13">{<block_content pos:start="51:17" pos:end="65:34">

                <if_stmt pos:start="51:17" pos:end="63:17"><if pos:start="51:17" pos:end="57:17">if <condition pos:start="51:20" pos:end="51:36">(<expr pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:31"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:31">ioregsel</name></name> <operator pos:start="51:33" pos:end="51:33">&amp;</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>)</condition> <block pos:start="51:38" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:62">

                    <expr_stmt pos:start="53:21" pos:end="53:53"><expr pos:start="53:21" pos:end="53:52"><name pos:start="53:21" pos:end="53:38"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:31">ioredtbl</name><index pos:start="53:32" pos:end="53:38">[<expr pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:37">index</name></expr>]</index></name> <operator pos:start="53:40" pos:end="53:41">&amp;=</operator> <literal type="number" pos:start="53:43" pos:end="53:52">0xffffffff</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:62"><expr pos:start="55:21" pos:end="55:61"><name pos:start="55:21" pos:end="55:38"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:31">ioredtbl</name><index pos:start="55:32" pos:end="55:38">[<expr pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:37">index</name></expr>]</index></name> <operator pos:start="55:40" pos:end="55:41">|=</operator> <operator pos:start="55:43" pos:end="55:43">(</operator><name pos:start="55:44" pos:end="55:51">uint64_t</name><operator pos:start="55:52" pos:end="55:52">)</operator><name pos:start="55:53" pos:end="55:55">val</name> <operator pos:start="55:57" pos:end="55:58">&lt;&lt;</operator> <literal type="number" pos:start="55:60" pos:end="55:61">32</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="57:19" pos:end="63:17">else <block pos:start="57:24" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:46">

                    <expr_stmt pos:start="59:21" pos:end="59:57"><expr pos:start="59:21" pos:end="59:56"><name pos:start="59:21" pos:end="59:38"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">ioredtbl</name><index pos:start="59:32" pos:end="59:38">[<expr pos:start="59:33" pos:end="59:37"><name pos:start="59:33" pos:end="59:37">index</name></expr>]</index></name> <operator pos:start="59:40" pos:end="59:41">&amp;=</operator> <operator pos:start="59:43" pos:end="59:43">~</operator><literal type="number" pos:start="59:44" pos:end="59:56">0xffffffffULL</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:46"><expr pos:start="61:21" pos:end="61:45"><name pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:31">ioredtbl</name><index pos:start="61:32" pos:end="61:38">[<expr pos:start="61:33" pos:end="61:37"><name pos:start="61:33" pos:end="61:37">index</name></expr>]</index></name> <operator pos:start="61:40" pos:end="61:41">|=</operator> <name pos:start="61:43" pos:end="61:45">val</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:33"><call pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:30">ioapic_service</name><argument_list pos:start="65:31" pos:end="65:33">(<argument pos:start="65:32" pos:end="65:32"><expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></switch>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block>
</unit>
