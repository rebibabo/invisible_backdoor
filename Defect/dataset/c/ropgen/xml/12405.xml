<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12405.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name> <parameter_list pos:start="1:15" pos:end="1:34">(<parameter pos:start="1:16" pos:end="1:33"><decl pos:start="1:16" pos:end="1:33"><type pos:start="1:16" pos:end="1:30"><name pos:start="1:16" pos:end="1:28">CPUSPARCState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">trapnr</name></decl>, <decl pos:start="5:17" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">target_siginfo_t</name></type> <name pos:start="7:22" pos:end="7:25">info</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="243:5">while <condition pos:start="11:11" pos:end="11:13">(<expr pos:start="11:12" pos:end="11:12"><literal type="number" pos:start="11:12" pos:end="11:12">1</literal></expr>)</condition> <block pos:start="11:15" pos:end="243:5">{<block_content pos:start="13:9" pos:end="241:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:14">trapnr</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:37"><name pos:start="13:18" pos:end="13:31">cpu_sparc_exec</name> <argument_list pos:start="13:33" pos:end="13:37">(<argument pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="17:9" pos:end="239:9">switch <condition pos:start="17:16" pos:end="17:23">(<expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">trapnr</name></expr>)</condition> <block pos:start="17:25" pos:end="239:9">{<block_content pos:start="21:9" pos:end="237:21">

<cpp:ifndef pos:start="19:1" pos:end="19:22">#<cpp:directive pos:start="19:2" pos:end="19:7">ifndef</cpp:directive> <name pos:start="19:9" pos:end="19:22">TARGET_SPARC64</name></cpp:ifndef>

        <case pos:start="21:9" pos:end="21:18">case <expr pos:start="21:14" pos:end="21:17"><literal type="number" pos:start="21:14" pos:end="21:17">0x88</literal></expr>:</case>

        <case pos:start="23:9" pos:end="26:0">case <expr pos:start="23:14" pos:end="23:17"><literal type="number" pos:start="23:14" pos:end="23:17">0x90</literal></expr>:</case>

<cpp:else pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:5">else</cpp:directive></cpp:else>

        <case pos:start="27:9" pos:end="27:19">case <expr pos:start="27:14" pos:end="27:18"><literal type="number" pos:start="27:14" pos:end="27:18">0x110</literal></expr>:</case>

        <case pos:start="29:9" pos:end="32:0">case <expr pos:start="29:14" pos:end="29:18"><literal type="number" pos:start="29:14" pos:end="29:18">0x16d</literal></expr>:</case>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="33:13" pos:end="39:64"><expr pos:start="33:13" pos:end="39:63"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="39:63"><name pos:start="33:19" pos:end="33:28">do_syscall</name> <argument_list pos:start="33:30" pos:end="39:63">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">env</name></expr></argument>, <argument pos:start="33:36" pos:end="33:48"><expr pos:start="33:36" pos:end="33:48"><name pos:start="33:36" pos:end="33:48"><name pos:start="33:36" pos:end="33:38">env</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:45">gregs</name><index pos:start="33:46" pos:end="33:48">[<expr pos:start="33:47" pos:end="33:47"><literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="35:31" pos:end="35:45"><expr pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:33">env</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:42">regwptr</name><index pos:start="35:43" pos:end="35:45">[<expr pos:start="35:44" pos:end="35:44"><literal type="number" pos:start="35:44" pos:end="35:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:48" pos:end="35:62"><expr pos:start="35:48" pos:end="35:62"><name pos:start="35:48" pos:end="35:62"><name pos:start="35:48" pos:end="35:50">env</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:59">regwptr</name><index pos:start="35:60" pos:end="35:62">[<expr pos:start="35:61" pos:end="35:61"><literal type="number" pos:start="35:61" pos:end="35:61">1</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="37:31" pos:end="37:45"><expr pos:start="37:31" pos:end="37:45"><name pos:start="37:31" pos:end="37:45"><name pos:start="37:31" pos:end="37:33">env</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">regwptr</name><index pos:start="37:43" pos:end="37:45">[<expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:48" pos:end="37:62"><expr pos:start="37:48" pos:end="37:62"><name pos:start="37:48" pos:end="37:62"><name pos:start="37:48" pos:end="37:50">env</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:59">regwptr</name><index pos:start="37:60" pos:end="37:62">[<expr pos:start="37:61" pos:end="37:61"><literal type="number" pos:start="37:61" pos:end="37:61">3</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="39:31" pos:end="39:45"><expr pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:45"><name pos:start="39:31" pos:end="39:33">env</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:42">regwptr</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><literal type="number" pos:start="39:44" pos:end="39:44">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:48" pos:end="39:62"><expr pos:start="39:48" pos:end="39:62"><name pos:start="39:48" pos:end="39:62"><name pos:start="39:48" pos:end="39:50">env</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:59">regwptr</name><index pos:start="39:60" pos:end="39:62">[<expr pos:start="39:61" pos:end="39:61"><literal type="number" pos:start="39:61" pos:end="39:61">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="67:13"><if pos:start="41:13" pos:end="55:13">if <condition pos:start="41:16" pos:end="41:58">(<expr pos:start="41:17" pos:end="41:57"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:25">unsigned</name> <name pos:start="41:27" pos:end="41:29">int</name><operator pos:start="41:30" pos:end="41:30">)</operator><name pos:start="41:31" pos:end="41:33">ret</name> <operator pos:start="41:35" pos:end="41:36">&gt;=</operator> <operator pos:start="41:38" pos:end="41:38">(</operator><name pos:start="41:39" pos:end="41:46">unsigned</name> <name pos:start="41:48" pos:end="41:50">int</name><operator pos:start="41:51" pos:end="41:51">)</operator><operator pos:start="41:52" pos:end="41:52">(</operator><operator pos:start="41:53" pos:end="41:53">-</operator><literal type="number" pos:start="41:54" pos:end="41:56">515</literal><operator pos:start="41:57" pos:end="41:57">)</operator></expr>)</condition> <block pos:start="41:60" pos:end="55:13">{<block_content pos:start="45:17" pos:end="53:27">

<cpp:if pos:start="43:1" pos:end="43:53">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:53"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:11">defined</name><argument_list pos:start="43:12" pos:end="43:27">(<argument pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:26">TARGET_SPARC64</name></expr></argument>)</argument_list></call> <operator pos:start="43:29" pos:end="43:30">&amp;&amp;</operator> <operator pos:start="43:32" pos:end="43:32">!</operator><call pos:start="43:33" pos:end="43:53"><name pos:start="43:33" pos:end="43:39">defined</name><argument_list pos:start="43:40" pos:end="43:53">(<argument pos:start="43:41" pos:end="43:52"><expr pos:start="43:41" pos:end="43:52"><name pos:start="43:41" pos:end="43:52">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="45:17" pos:end="48:0"><expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:19">env</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:24">xcc</name></name> <operator pos:start="45:26" pos:end="45:27">|=</operator> <name pos:start="45:29" pos:end="45:37">PSR_CARRY</name></expr>;</expr_stmt>

<cpp:else pos:start="47:1" pos:end="47:5">#<cpp:directive pos:start="47:2" pos:end="47:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="49:17" pos:end="52:0"><expr pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:19">env</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:24">psr</name></name> <operator pos:start="49:26" pos:end="49:27">|=</operator> <name pos:start="49:29" pos:end="49:37">PSR_CARRY</name></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="53:17" pos:end="53:27"><expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:19">ret</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <operator pos:start="53:23" pos:end="53:23">-</operator><name pos:start="53:24" pos:end="53:26">ret</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="55:15" pos:end="67:13">else <block pos:start="55:20" pos:end="67:13">{<block_content pos:start="59:17" pos:end="66:0">

<cpp:if pos:start="57:1" pos:end="57:53">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:53"><call pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:11">defined</name><argument_list pos:start="57:12" pos:end="57:27">(<argument pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:26">TARGET_SPARC64</name></expr></argument>)</argument_list></call> <operator pos:start="57:29" pos:end="57:30">&amp;&amp;</operator> <operator pos:start="57:32" pos:end="57:32">!</operator><call pos:start="57:33" pos:end="57:53"><name pos:start="57:33" pos:end="57:39">defined</name><argument_list pos:start="57:40" pos:end="57:53">(<argument pos:start="57:41" pos:end="57:52"><expr pos:start="57:41" pos:end="57:52"><name pos:start="57:41" pos:end="57:52">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="59:17" pos:end="62:0"><expr pos:start="59:17" pos:end="59:38"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:24">xcc</name></name> <operator pos:start="59:26" pos:end="59:27">&amp;=</operator> <operator pos:start="59:29" pos:end="59:29">~</operator><name pos:start="59:30" pos:end="59:38">PSR_CARRY</name></expr>;</expr_stmt>

<cpp:else pos:start="61:1" pos:end="61:5">#<cpp:directive pos:start="61:2" pos:end="61:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="63:17" pos:end="66:0"><expr pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:19">env</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:24">psr</name></name> <operator pos:start="63:26" pos:end="63:27">&amp;=</operator> <operator pos:start="63:29" pos:end="63:29">~</operator><name pos:start="63:30" pos:end="63:38">PSR_CARRY</name></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:15">env</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:24">regwptr</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>]</index></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:33">ret</name></expr>;</expr_stmt>

            <comment type="block" pos:start="71:13" pos:end="71:34">/* next instruction */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">env</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">pc</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:30"><name pos:start="73:23" pos:end="73:25">env</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:30">npc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:36"><expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:20">npc</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:31"><name pos:start="75:24" pos:end="75:26">env</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:31">npc</name></name> <operator pos:start="75:33" pos:end="75:33">+</operator> <literal type="number" pos:start="75:35" pos:end="75:35">4</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="82:0">case <expr pos:start="79:14" pos:end="79:17"><literal type="number" pos:start="79:14" pos:end="79:17">0x83</literal></expr>:</case> <comment type="block" pos:start="79:20" pos:end="79:38">/* flush windows */</comment>

<cpp:ifdef pos:start="81:1" pos:end="81:19">#<cpp:directive pos:start="81:2" pos:end="81:6">ifdef</cpp:directive> <name pos:start="81:8" pos:end="81:19">TARGET_ABI32</name></cpp:ifdef>

        <case pos:start="83:9" pos:end="86:0">case <expr pos:start="83:14" pos:end="83:18"><literal type="number" pos:start="83:14" pos:end="83:18">0x103</literal></expr>:</case>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="87:13" pos:end="87:31"><expr pos:start="87:13" pos:end="87:30"><call pos:start="87:13" pos:end="87:30"><name pos:start="87:13" pos:end="87:25">flush_windows</name><argument_list pos:start="87:26" pos:end="87:30">(<argument pos:start="87:27" pos:end="87:29"><expr pos:start="87:27" pos:end="87:29"><name pos:start="87:27" pos:end="87:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:34">/* next instruction */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">env</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:19">pc</name></name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:30"><name pos:start="91:23" pos:end="91:25">env</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:30">npc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:36"><expr pos:start="93:13" pos:end="93:35"><name pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:15">env</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:20">npc</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:26">env</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:31">npc</name></name> <operator pos:start="93:33" pos:end="93:33">+</operator> <literal type="number" pos:start="93:35" pos:end="93:35">4</literal></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="98:0">break;</break>

<cpp:ifndef pos:start="97:1" pos:end="97:22">#<cpp:directive pos:start="97:2" pos:end="97:7">ifndef</cpp:directive> <name pos:start="97:9" pos:end="97:22">TARGET_SPARC64</name></cpp:ifndef>

        <case pos:start="99:9" pos:end="99:24">case <expr pos:start="99:14" pos:end="99:23"><name pos:start="99:14" pos:end="99:23">TT_WIN_OVF</name></expr>:</case> <comment type="block" pos:start="99:26" pos:end="99:46">/* window overflow */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:29"><expr pos:start="101:13" pos:end="101:28"><call pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:23">save_window</name><argument_list pos:start="101:24" pos:end="101:28">(<argument pos:start="101:25" pos:end="101:27"><expr pos:start="101:25" pos:end="101:27"><name pos:start="101:25" pos:end="101:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:24">case <expr pos:start="105:14" pos:end="105:23"><name pos:start="105:14" pos:end="105:23">TT_WIN_UNF</name></expr>:</case> <comment type="block" pos:start="105:26" pos:end="105:47">/* window underflow */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:32"><expr pos:start="107:13" pos:end="107:31"><call pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:26">restore_window</name><argument_list pos:start="107:27" pos:end="107:31">(<argument pos:start="107:28" pos:end="107:30"><expr pos:start="107:28" pos:end="107:30"><name pos:start="107:28" pos:end="107:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:23">case <expr pos:start="111:14" pos:end="111:22"><name pos:start="111:14" pos:end="111:22">TT_TFAULT</name></expr>:</case>

        <case pos:start="113:9" pos:end="113:23">case <expr pos:start="113:14" pos:end="113:22"><name pos:start="113:14" pos:end="113:22">TT_DFAULT</name></expr>:</case>

            <block pos:start="115:13" pos:end="129:13">{<block_content pos:start="117:17" pos:end="127:56">

                <expr_stmt pos:start="117:17" pos:end="117:40"><expr pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:20">info</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:29">si_signo</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:39">SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:34"><expr pos:start="119:17" pos:end="119:33"><name pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:20">info</name><operator pos:start="119:21" pos:end="119:21">.</operator><name pos:start="119:22" pos:end="119:29">si_errno</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="121:17" pos:end="121:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="123:17" pos:end="123:50"><expr pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:20">info</name><operator pos:start="123:21" pos:end="123:21">.</operator><name pos:start="123:22" pos:end="123:28">si_code</name></name> <operator pos:start="123:30" pos:end="123:30">=</operator> <name pos:start="123:32" pos:end="123:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:65"><expr pos:start="125:17" pos:end="125:64"><name pos:start="125:17" pos:end="125:46"><name pos:start="125:17" pos:end="125:20">info</name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:30">_sifields</name><operator pos:start="125:31" pos:end="125:31">.</operator><name pos:start="125:32" pos:end="125:40">_sigfault</name><operator pos:start="125:41" pos:end="125:41">.</operator><name pos:start="125:42" pos:end="125:46">_addr</name></name> <operator pos:start="125:48" pos:end="125:48">=</operator> <name pos:start="125:50" pos:end="125:64"><name pos:start="125:50" pos:end="125:52">env</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:61">mmuregs</name><index pos:start="125:62" pos:end="125:64">[<expr pos:start="125:63" pos:end="125:63"><literal type="number" pos:start="125:63" pos:end="125:63">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:56"><expr pos:start="127:17" pos:end="127:55"><call pos:start="127:17" pos:end="127:55"><name pos:start="127:17" pos:end="127:28">queue_signal</name><argument_list pos:start="127:29" pos:end="127:55">(<argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:32">env</name></expr></argument>, <argument pos:start="127:35" pos:end="127:47"><expr pos:start="127:35" pos:end="127:47"><name pos:start="127:35" pos:end="127:47"><name pos:start="127:35" pos:end="127:38">info</name><operator pos:start="127:39" pos:end="127:39">.</operator><name pos:start="127:40" pos:end="127:47">si_signo</name></name></expr></argument>, <argument pos:start="127:50" pos:end="127:54"><expr pos:start="127:50" pos:end="127:54"><operator pos:start="127:50" pos:end="127:50">&amp;</operator><name pos:start="127:51" pos:end="127:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="131:13" pos:end="134:0">break;</break>

<cpp:else pos:start="133:1" pos:end="133:5">#<cpp:directive pos:start="133:2" pos:end="133:5">else</cpp:directive></cpp:else>

        <case pos:start="135:9" pos:end="135:22">case <expr pos:start="135:14" pos:end="135:21"><name pos:start="135:14" pos:end="135:21">TT_SPILL</name></expr>:</case> <comment type="block" pos:start="135:24" pos:end="135:44">/* window overflow */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><call pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:23">save_window</name><argument_list pos:start="137:24" pos:end="137:28">(<argument pos:start="137:25" pos:end="137:27"><expr pos:start="137:25" pos:end="137:27"><name pos:start="137:25" pos:end="137:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:21">case <expr pos:start="141:14" pos:end="141:20"><name pos:start="141:14" pos:end="141:20">TT_FILL</name></expr>:</case> <comment type="block" pos:start="141:23" pos:end="141:44">/* window underflow */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><call pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:26">restore_window</name><argument_list pos:start="143:27" pos:end="143:31">(<argument pos:start="143:28" pos:end="143:30"><expr pos:start="143:28" pos:end="143:30"><name pos:start="143:28" pos:end="143:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:23">case <expr pos:start="147:14" pos:end="147:22"><name pos:start="147:14" pos:end="147:22">TT_TFAULT</name></expr>:</case>

        <case pos:start="149:9" pos:end="149:23">case <expr pos:start="149:14" pos:end="149:22"><name pos:start="149:14" pos:end="149:22">TT_DFAULT</name></expr>:</case>

            <block pos:start="151:13" pos:end="171:13">{<block_content pos:start="153:17" pos:end="169:56">

                <expr_stmt pos:start="153:17" pos:end="153:40"><expr pos:start="153:17" pos:end="153:39"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:20">info</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:29">si_signo</name></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <name pos:start="153:33" pos:end="153:39">SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:34"><expr pos:start="155:17" pos:end="155:33"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:20">info</name><operator pos:start="155:21" pos:end="155:21">.</operator><name pos:start="155:22" pos:end="155:29">si_errno</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="157:17" pos:end="157:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="159:17" pos:end="159:50"><expr pos:start="159:17" pos:end="159:49"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:20">info</name><operator pos:start="159:21" pos:end="159:21">.</operator><name pos:start="159:22" pos:end="159:28">si_code</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="167:69"><if pos:start="161:17" pos:end="163:70">if <condition pos:start="161:20" pos:end="161:40">(<expr pos:start="161:21" pos:end="161:39"><name pos:start="161:21" pos:end="161:26">trapnr</name> <operator pos:start="161:28" pos:end="161:29">==</operator> <name pos:start="161:31" pos:end="161:39">TT_DFAULT</name></expr>)</condition><block type="pseudo" pos:start="163:21" pos:end="163:70"><block_content pos:start="163:21" pos:end="163:70">

                    <expr_stmt pos:start="163:21" pos:end="163:70"><expr pos:start="163:21" pos:end="163:69"><name pos:start="163:21" pos:end="163:50"><name pos:start="163:21" pos:end="163:24">info</name><operator pos:start="163:25" pos:end="163:25">.</operator><name pos:start="163:26" pos:end="163:34">_sifields</name><operator pos:start="163:35" pos:end="163:35">.</operator><name pos:start="163:36" pos:end="163:44">_sigfault</name><operator pos:start="163:45" pos:end="163:45">.</operator><name pos:start="163:46" pos:end="163:50">_addr</name></name> <operator pos:start="163:52" pos:end="163:52">=</operator> <name pos:start="163:54" pos:end="163:69"><name pos:start="163:54" pos:end="163:56">env</name><operator pos:start="163:57" pos:end="163:58">-&gt;</operator><name pos:start="163:59" pos:end="163:66">dmmuregs</name><index pos:start="163:67" pos:end="163:69">[<expr pos:start="163:68" pos:end="163:68"><literal type="number" pos:start="163:68" pos:end="163:68">4</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="165:17" pos:end="167:69">else<block type="pseudo" pos:start="167:21" pos:end="167:69"><block_content pos:start="167:21" pos:end="167:69">

                    <expr_stmt pos:start="167:21" pos:end="167:69"><expr pos:start="167:21" pos:end="167:68"><name pos:start="167:21" pos:end="167:50"><name pos:start="167:21" pos:end="167:24">info</name><operator pos:start="167:25" pos:end="167:25">.</operator><name pos:start="167:26" pos:end="167:34">_sifields</name><operator pos:start="167:35" pos:end="167:35">.</operator><name pos:start="167:36" pos:end="167:44">_sigfault</name><operator pos:start="167:45" pos:end="167:45">.</operator><name pos:start="167:46" pos:end="167:50">_addr</name></name> <operator pos:start="167:52" pos:end="167:52">=</operator> <name pos:start="167:54" pos:end="167:68"><name pos:start="167:54" pos:end="167:56">env</name><operator pos:start="167:57" pos:end="167:58">-&gt;</operator><name pos:start="167:59" pos:end="167:63">tsptr</name><operator pos:start="167:64" pos:end="167:65">-&gt;</operator><name pos:start="167:66" pos:end="167:68">tpc</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:56"><expr pos:start="169:17" pos:end="169:55"><call pos:start="169:17" pos:end="169:55"><name pos:start="169:17" pos:end="169:28">queue_signal</name><argument_list pos:start="169:29" pos:end="169:55">(<argument pos:start="169:30" pos:end="169:32"><expr pos:start="169:30" pos:end="169:32"><name pos:start="169:30" pos:end="169:32">env</name></expr></argument>, <argument pos:start="169:35" pos:end="169:47"><expr pos:start="169:35" pos:end="169:47"><name pos:start="169:35" pos:end="169:47"><name pos:start="169:35" pos:end="169:38">info</name><operator pos:start="169:39" pos:end="169:39">.</operator><name pos:start="169:40" pos:end="169:47">si_signo</name></name></expr></argument>, <argument pos:start="169:50" pos:end="169:54"><expr pos:start="169:50" pos:end="169:54"><operator pos:start="169:50" pos:end="169:50">&amp;</operator><name pos:start="169:51" pos:end="169:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="173:13" pos:end="176:0">break;</break>

<cpp:ifndef pos:start="175:1" pos:end="175:20">#<cpp:directive pos:start="175:2" pos:end="175:7">ifndef</cpp:directive> <name pos:start="175:9" pos:end="175:20">TARGET_ABI32</name></cpp:ifndef>

        <case pos:start="177:9" pos:end="177:19">case <expr pos:start="177:14" pos:end="177:18"><literal type="number" pos:start="177:14" pos:end="177:18">0x16e</literal></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:31"><expr pos:start="179:13" pos:end="179:30"><call pos:start="179:13" pos:end="179:30"><name pos:start="179:13" pos:end="179:25">flush_windows</name><argument_list pos:start="179:26" pos:end="179:30">(<argument pos:start="179:27" pos:end="179:29"><expr pos:start="179:27" pos:end="179:29"><name pos:start="179:27" pos:end="179:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:37"><expr pos:start="181:13" pos:end="181:36"><call pos:start="181:13" pos:end="181:36"><name pos:start="181:13" pos:end="181:31">sparc64_get_context</name><argument_list pos:start="181:32" pos:end="181:36">(<argument pos:start="181:33" pos:end="181:35"><expr pos:start="181:33" pos:end="181:35"><name pos:start="181:33" pos:end="181:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:19">case <expr pos:start="185:14" pos:end="185:18"><literal type="number" pos:start="185:14" pos:end="185:18">0x16f</literal></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><call pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:25">flush_windows</name><argument_list pos:start="187:26" pos:end="187:30">(<argument pos:start="187:27" pos:end="187:29"><expr pos:start="187:27" pos:end="187:29"><name pos:start="187:27" pos:end="187:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:37"><expr pos:start="189:13" pos:end="189:36"><call pos:start="189:13" pos:end="189:36"><name pos:start="189:13" pos:end="189:31">sparc64_set_context</name><argument_list pos:start="189:32" pos:end="189:36">(<argument pos:start="189:33" pos:end="189:35"><expr pos:start="189:33" pos:end="189:35"><name pos:start="189:33" pos:end="189:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="191:13" pos:end="196:0">break;</break>

<cpp:endif pos:start="193:1" pos:end="193:6">#<cpp:directive pos:start="193:2" pos:end="193:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="195:1" pos:end="195:6">#<cpp:directive pos:start="195:2" pos:end="195:6">endif</cpp:directive></cpp:endif>

        <case pos:start="197:9" pos:end="197:28">case <expr pos:start="197:14" pos:end="197:27"><name pos:start="197:14" pos:end="197:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="199:13" pos:end="199:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:24">case <expr pos:start="203:14" pos:end="203:23"><name pos:start="203:14" pos:end="203:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="205:13" pos:end="227:13">{<block_content pos:start="207:17" pos:end="225:19">

                <decl_stmt pos:start="207:17" pos:end="207:24"><decl pos:start="207:17" pos:end="207:23"><type pos:start="207:17" pos:end="207:19"><name pos:start="207:17" pos:end="207:19">int</name></type> <name pos:start="207:21" pos:end="207:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:58"><expr pos:start="211:17" pos:end="211:57"><name pos:start="211:17" pos:end="211:19">sig</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="211:57"><name pos:start="211:23" pos:end="211:35">gdb_handlesig</name> <argument_list pos:start="211:37" pos:end="211:57">(<argument pos:start="211:38" pos:end="211:40"><expr pos:start="211:38" pos:end="211:40"><name pos:start="211:38" pos:end="211:40">env</name></expr></argument>, <argument pos:start="211:43" pos:end="211:56"><expr pos:start="211:43" pos:end="211:56"><name pos:start="211:43" pos:end="211:56">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="213:17" pos:end="225:19"><if pos:start="213:17" pos:end="225:19">if <condition pos:start="213:20" pos:end="213:24">(<expr pos:start="213:21" pos:end="213:23"><name pos:start="213:21" pos:end="213:23">sig</name></expr>)</condition>

                  <block pos:start="215:19" pos:end="225:19">{<block_content pos:start="217:21" pos:end="223:60">

                    <expr_stmt pos:start="217:21" pos:end="217:40"><expr pos:start="217:21" pos:end="217:39"><name pos:start="217:21" pos:end="217:33"><name pos:start="217:21" pos:end="217:24">info</name><operator pos:start="217:25" pos:end="217:25">.</operator><name pos:start="217:26" pos:end="217:33">si_signo</name></name> <operator pos:start="217:35" pos:end="217:35">=</operator> <name pos:start="217:37" pos:end="217:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:38"><expr pos:start="219:21" pos:end="219:37"><name pos:start="219:21" pos:end="219:33"><name pos:start="219:21" pos:end="219:24">info</name><operator pos:start="219:25" pos:end="219:25">.</operator><name pos:start="219:26" pos:end="219:33">si_errno</name></name> <operator pos:start="219:35" pos:end="219:35">=</operator> <literal type="number" pos:start="219:37" pos:end="219:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:53"><expr pos:start="221:21" pos:end="221:52"><name pos:start="221:21" pos:end="221:32"><name pos:start="221:21" pos:end="221:24">info</name><operator pos:start="221:25" pos:end="221:25">.</operator><name pos:start="221:26" pos:end="221:32">si_code</name></name> <operator pos:start="221:34" pos:end="221:34">=</operator> <name pos:start="221:36" pos:end="221:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:60"><expr pos:start="223:21" pos:end="223:59"><call pos:start="223:21" pos:end="223:59"><name pos:start="223:21" pos:end="223:32">queue_signal</name><argument_list pos:start="223:33" pos:end="223:59">(<argument pos:start="223:34" pos:end="223:36"><expr pos:start="223:34" pos:end="223:36"><name pos:start="223:34" pos:end="223:36">env</name></expr></argument>, <argument pos:start="223:39" pos:end="223:51"><expr pos:start="223:39" pos:end="223:51"><name pos:start="223:39" pos:end="223:51"><name pos:start="223:39" pos:end="223:42">info</name><operator pos:start="223:43" pos:end="223:43">.</operator><name pos:start="223:44" pos:end="223:51">si_signo</name></name></expr></argument>, <argument pos:start="223:54" pos:end="223:58"><expr pos:start="223:54" pos:end="223:58"><operator pos:start="223:54" pos:end="223:54">&amp;</operator><name pos:start="223:55" pos:end="223:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <default pos:start="231:9" pos:end="231:16">default:</default>

            <expr_stmt pos:start="233:13" pos:end="233:54"><expr pos:start="233:13" pos:end="233:53"><call pos:start="233:13" pos:end="233:53"><name pos:start="233:13" pos:end="233:18">printf</name> <argument_list pos:start="233:20" pos:end="233:53">(<argument pos:start="233:21" pos:end="233:44"><expr pos:start="233:21" pos:end="233:44"><literal type="string" pos:start="233:21" pos:end="233:44">"Unhandled trap: 0x%x\n"</literal></expr></argument>, <argument pos:start="233:47" pos:end="233:52"><expr pos:start="233:47" pos:end="233:52"><name pos:start="233:47" pos:end="233:52">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:52"><expr pos:start="235:13" pos:end="235:51"><call pos:start="235:13" pos:end="235:51"><name pos:start="235:13" pos:end="235:26">cpu_dump_state</name><argument_list pos:start="235:27" pos:end="235:51">(<argument pos:start="235:28" pos:end="235:30"><expr pos:start="235:28" pos:end="235:30"><name pos:start="235:28" pos:end="235:30">env</name></expr></argument>, <argument pos:start="235:33" pos:end="235:38"><expr pos:start="235:33" pos:end="235:38"><name pos:start="235:33" pos:end="235:38">stderr</name></expr></argument>, <argument pos:start="235:41" pos:end="235:47"><expr pos:start="235:41" pos:end="235:47"><name pos:start="235:41" pos:end="235:47">fprintf</name></expr></argument>, <argument pos:start="235:50" pos:end="235:50"><expr pos:start="235:50" pos:end="235:50"><literal type="number" pos:start="235:50" pos:end="235:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:21"><expr pos:start="237:13" pos:end="237:20"><call pos:start="237:13" pos:end="237:20"><name pos:start="237:13" pos:end="237:16">exit</name> <argument_list pos:start="237:18" pos:end="237:20">(<argument pos:start="237:19" pos:end="237:19"><expr pos:start="237:19" pos:end="237:19"><literal type="number" pos:start="237:19" pos:end="237:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="241:9" pos:end="241:38"><expr pos:start="241:9" pos:end="241:37"><call pos:start="241:9" pos:end="241:37"><name pos:start="241:9" pos:end="241:31">process_pending_signals</name> <argument_list pos:start="241:33" pos:end="241:37">(<argument pos:start="241:34" pos:end="241:36"><expr pos:start="241:34" pos:end="241:36"><name pos:start="241:34" pos:end="241:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
