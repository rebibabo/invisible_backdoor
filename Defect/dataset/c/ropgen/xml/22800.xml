<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22800.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_video</name><parameter_list pos:start="1:24" pos:end="1:73">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">InputStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ist</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pkt</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">got_output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:31">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">err</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:31"><if pos:start="11:5" pos:end="13:31">if <condition pos:start="11:8" pos:end="11:72">(<expr pos:start="11:9" pos:end="11:71"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:12">ist</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:27">decoded_frame</name></name> <operator pos:start="11:29" pos:end="11:30">&amp;&amp;</operator> <operator pos:start="11:32" pos:end="11:32">!</operator><operator pos:start="11:33" pos:end="11:33">(</operator><name pos:start="11:34" pos:end="11:51"><name pos:start="11:34" pos:end="11:36">ist</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:51">decoded_frame</name></name> <operator pos:start="11:53" pos:end="11:53">=</operator> <call pos:start="11:55" pos:end="11:70"><name pos:start="11:55" pos:end="11:68">av_frame_alloc</name><argument_list pos:start="11:69" pos:end="11:70">()</argument_list></call><operator pos:start="11:71" pos:end="11:71">)</operator></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:31"><block_content pos:start="13:9" pos:end="13:31">

        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:70">(<expr pos:start="15:9" pos:end="15:69"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:12">ist</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:26">filter_frame</name></name> <operator pos:start="15:28" pos:end="15:29">&amp;&amp;</operator> <operator pos:start="15:31" pos:end="15:31">!</operator><operator pos:start="15:32" pos:end="15:32">(</operator><name pos:start="15:33" pos:end="15:49"><name pos:start="15:33" pos:end="15:35">ist</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:49">filter_frame</name></name> <operator pos:start="15:51" pos:end="15:51">=</operator> <call pos:start="15:53" pos:end="15:68"><name pos:start="15:53" pos:end="15:66">av_frame_alloc</name><argument_list pos:start="15:67" pos:end="15:68">()</argument_list></call><operator pos:start="15:69" pos:end="15:69">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:17">decoded_frame</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:38"><name pos:start="19:21" pos:end="19:23">ist</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:38">decoded_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:62"><name pos:start="23:11" pos:end="23:16">decode</name><argument_list pos:start="23:17" pos:end="23:62">(<argument pos:start="23:18" pos:end="23:29"><expr pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:20">ist</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:29">dec_ctx</name></name></expr></argument>, <argument pos:start="23:32" pos:end="23:44"><expr pos:start="23:32" pos:end="23:44"><name pos:start="23:32" pos:end="23:44">decoded_frame</name></expr></argument>, <argument pos:start="23:47" pos:end="23:56"><expr pos:start="23:47" pos:end="23:56"><name pos:start="23:47" pos:end="23:56">got_output</name></expr></argument>, <argument pos:start="23:59" pos:end="23:61"><expr pos:start="23:59" pos:end="23:61"><name pos:start="23:59" pos:end="23:61">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">*</operator><name pos:start="25:11" pos:end="25:20">got_output</name> <operator pos:start="25:22" pos:end="25:23">||</operator> <name pos:start="25:25" pos:end="25:27">ret</name> <operator pos:start="25:29" pos:end="25:29">&lt;</operator> <literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:7">ist</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:23">frames_decoded</name></name><operator pos:start="31:24" pos:end="31:25">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:84">(<expr pos:start="35:9" pos:end="35:83"><name pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:11">ist</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:34">hwaccel_retrieve_data</name></name> <operator pos:start="35:36" pos:end="35:37">&amp;&amp;</operator> <name pos:start="35:39" pos:end="35:59"><name pos:start="35:39" pos:end="35:51">decoded_frame</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:59">format</name></name> <operator pos:start="35:61" pos:end="35:62">==</operator> <name pos:start="35:64" pos:end="35:83"><name pos:start="35:64" pos:end="35:66">ist</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:83">hwaccel_pix_fmt</name></name></expr>)</condition> <block pos:start="35:86" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:22">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:69"><name pos:start="37:15" pos:end="37:40"><name pos:start="37:15" pos:end="37:17">ist</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:40">hwaccel_retrieve_data</name></name><argument_list pos:start="37:41" pos:end="37:69">(<argument pos:start="37:42" pos:end="37:53"><expr pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:44">ist</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:53">dec_ctx</name></name></expr></argument>, <argument pos:start="37:56" pos:end="37:68"><expr pos:start="37:56" pos:end="37:68"><name pos:start="37:56" pos:end="37:68">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">err</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <goto pos:start="41:13" pos:end="41:22">goto <name pos:start="41:18" pos:end="41:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:7">ist</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:34">hwaccel_retrieved_pix_fmt</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:58"><name pos:start="45:38" pos:end="45:50">decoded_frame</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:58">format</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:67"><expr pos:start="49:5" pos:end="51:66"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:17">decoded_frame</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:22">pts</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="51:66"><name pos:start="49:26" pos:end="49:42">guess_correct_pts</name><argument_list pos:start="49:43" pos:end="51:66">(<argument pos:start="49:44" pos:end="49:56"><expr pos:start="49:44" pos:end="49:56"><operator pos:start="49:44" pos:end="49:44">&amp;</operator><name pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:47">ist</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:56">pts_ctx</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:76"><expr pos:start="49:59" pos:end="49:76"><name pos:start="49:59" pos:end="49:76"><name pos:start="49:59" pos:end="49:71">decoded_frame</name><operator pos:start="49:72" pos:end="49:73">-&gt;</operator><name pos:start="49:74" pos:end="49:76">pts</name></name></expr></argument>,

                                           <argument pos:start="51:44" pos:end="51:65"><expr pos:start="51:44" pos:end="51:65"><name pos:start="51:44" pos:end="51:65"><name pos:start="51:44" pos:end="51:56">decoded_frame</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:65">pkt_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:49"><if pos:start="53:5" pos:end="55:49">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:11">ist</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">framerate</name><operator pos:start="53:23" pos:end="53:23">.</operator><name pos:start="53:24" pos:end="53:26">num</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:49"><block_content pos:start="55:9" pos:end="55:49">

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:21">decoded_frame</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">pts</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:46"><name pos:start="55:30" pos:end="55:32">ist</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:46">cfr_next_pts</name></name><operator pos:start="55:47" pos:end="55:48">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:74"><if pos:start="59:5" pos:end="61:74">if <condition pos:start="59:8" pos:end="59:41">(<expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:11">ist</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:15">st</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:36">sample_aspect_ratio</name><operator pos:start="59:37" pos:end="59:37">.</operator><name pos:start="59:38" pos:end="59:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:74"><block_content pos:start="61:9" pos:end="61:74">

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:21">decoded_frame</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:42">sample_aspect_ratio</name></name> <operator pos:start="61:44" pos:end="61:44">=</operator> <name pos:start="61:46" pos:end="61:73"><name pos:start="61:46" pos:end="61:48">ist</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:52">st</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:73">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="65:5" pos:end="89:5">for <control pos:start="65:9" pos:end="65:41">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:36"><expr pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:23">ist</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:35">nb_filters</name></name></expr>;</condition> <incr pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:38">i</name><operator pos:start="65:39" pos:end="65:40">++</operator></expr></incr>)</control> <block pos:start="65:43" pos:end="89:5">{<block_content pos:start="67:9" pos:end="87:18">

        <if_stmt pos:start="67:9" pos:end="79:30"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:36">(<expr pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:13">i</name> <operator pos:start="67:15" pos:end="67:15">&lt;</operator> <name pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:19">ist</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:31">nb_filters</name></name> <operator pos:start="67:33" pos:end="67:33">-</operator> <literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr>)</condition> <block pos:start="67:38" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:22">

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:13">f</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:19">ist</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:33">filter_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:49"><expr pos:start="71:13" pos:end="71:48"><name pos:start="71:13" pos:end="71:15">err</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:48"><name pos:start="71:19" pos:end="71:30">av_frame_ref</name><argument_list pos:start="71:31" pos:end="71:48">(<argument pos:start="71:32" pos:end="71:32"><expr pos:start="71:32" pos:end="71:32"><name pos:start="71:32" pos:end="71:32">f</name></expr></argument>, <argument pos:start="71:35" pos:end="71:47"><expr pos:start="71:35" pos:end="71:47"><name pos:start="71:35" pos:end="71:47">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:22"><if pos:start="73:13" pos:end="75:22">if <condition pos:start="73:16" pos:end="73:24">(<expr pos:start="73:17" pos:end="73:23"><name pos:start="73:17" pos:end="73:19">err</name> <operator pos:start="73:21" pos:end="73:21">&lt;</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:22"><block_content pos:start="75:17" pos:end="75:22">

                <break pos:start="75:17" pos:end="75:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="79:30">else<block type="pseudo" pos:start="79:13" pos:end="79:30"><block_content pos:start="79:13" pos:end="79:30">

            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:13">f</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:29">decoded_frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:53"><expr pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:11">err</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:52"><name pos:start="83:15" pos:end="83:32">ifilter_send_frame</name><argument_list pos:start="83:33" pos:end="83:52">(<argument pos:start="83:34" pos:end="83:48"><expr pos:start="83:34" pos:end="83:48"><name pos:start="83:34" pos:end="83:48"><name pos:start="83:34" pos:end="83:36">ist</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:45">filters</name><index pos:start="83:46" pos:end="83:48">[<expr pos:start="83:47" pos:end="83:47"><name pos:start="83:47" pos:end="83:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:51" pos:end="83:51"><expr pos:start="83:51" pos:end="83:51"><name pos:start="83:51" pos:end="83:51">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:18"><if pos:start="85:9" pos:end="87:18">if <condition pos:start="85:12" pos:end="85:20">(<expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:15">err</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:18"><block_content pos:start="87:13" pos:end="87:18">

            <break pos:start="87:13" pos:end="87:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="93:1" pos:end="93:5"><name pos:start="93:1" pos:end="93:4">fail</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><call pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:18">av_frame_unref</name><argument_list pos:start="95:19" pos:end="95:37">(<argument pos:start="95:20" pos:end="95:36"><expr pos:start="95:20" pos:end="95:36"><name pos:start="95:20" pos:end="95:36"><name pos:start="95:20" pos:end="95:22">ist</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:36">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><call pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:18">av_frame_unref</name><argument_list pos:start="97:19" pos:end="97:33">(<argument pos:start="97:20" pos:end="97:32"><expr pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:32">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="99:5" pos:end="99:31">return <expr pos:start="99:12" pos:end="99:30"><ternary pos:start="99:12" pos:end="99:30"><condition pos:start="99:12" pos:end="99:20"><expr pos:start="99:12" pos:end="99:18"><name pos:start="99:12" pos:end="99:14">err</name> <operator pos:start="99:16" pos:end="99:16">&lt;</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr> ?</condition><then pos:start="99:22" pos:end="99:24"> <expr pos:start="99:22" pos:end="99:24"><name pos:start="99:22" pos:end="99:24">err</name></expr> </then><else pos:start="99:26" pos:end="99:30">: <expr pos:start="99:28" pos:end="99:30"><name pos:start="99:28" pos:end="99:30">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
