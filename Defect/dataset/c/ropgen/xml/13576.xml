<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13576.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">ide_cfata_identify</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">IDEState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:54">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">uint16_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">cur_sec</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:5">p</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:17">uint16_t</name> <operator pos:start="11:19" pos:end="11:19">*</operator><operator pos:start="11:20" pos:end="11:20">)</operator> <name pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:37">identify_data</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:25"><if pos:start="13:5" pos:end="15:25">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:23">identify_set</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:25"><block_content pos:start="15:9" pos:end="15:25">

        <goto pos:start="15:9" pos:end="15:25">goto <name pos:start="15:14" pos:end="15:24">fill_buffer</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:42">(<argument pos:start="19:12" pos:end="19:12"><expr pos:start="19:12" pos:end="19:12"><name pos:start="19:12" pos:end="19:12">p</name></expr></argument>, <argument pos:start="19:15" pos:end="19:15"><expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></argument>, <argument pos:start="19:18" pos:end="19:41"><expr pos:start="19:18" pos:end="19:41"><sizeof pos:start="19:18" pos:end="19:41">sizeof<argument_list pos:start="19:24" pos:end="19:41">(<argument pos:start="19:25" pos:end="19:40"><expr pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:40">identify_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:11">cur_sec</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">cylinders</name></name> <operator pos:start="23:28" pos:end="23:28">*</operator> <name pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">heads</name></name> <operator pos:start="23:39" pos:end="23:39">*</operator> <name pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:41">s</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:50">sectors</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:12">put_le16</name><argument_list pos:start="27:13" pos:end="27:27">(<argument pos:start="27:14" pos:end="27:18"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">p</name> <operator pos:start="27:16" pos:end="27:16">+</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></argument>, <argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><literal type="number" pos:start="27:21" pos:end="27:26">0x848a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="27:49" pos:end="27:79">/* CF Storage Card signature */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><call pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:12">put_le16</name><argument_list pos:start="29:13" pos:end="29:33">(<argument pos:start="29:14" pos:end="29:18"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">p</name> <operator pos:start="29:16" pos:end="29:16">+</operator> <literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr></argument>, <argument pos:start="29:21" pos:end="29:32"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:32">cylinders</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="29:49" pos:end="29:71">/* Default cylinders */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:12">put_le16</name><argument_list pos:start="31:13" pos:end="31:29">(<argument pos:start="31:14" pos:end="31:18"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">p</name> <operator pos:start="31:16" pos:end="31:16">+</operator> <literal type="number" pos:start="31:18" pos:end="31:18">3</literal></expr></argument>, <argument pos:start="31:21" pos:end="31:28"><expr pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">heads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="31:49" pos:end="31:67">/* Default heads */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:12">put_le16</name><argument_list pos:start="33:13" pos:end="33:31">(<argument pos:start="33:14" pos:end="33:18"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">p</name> <operator pos:start="33:16" pos:end="33:16">+</operator> <literal type="number" pos:start="33:18" pos:end="33:18">6</literal></expr></argument>, <argument pos:start="33:21" pos:end="33:30"><expr pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:30">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="33:49" pos:end="33:79">/* Default sectors per track */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:12">put_le16</name><argument_list pos:start="35:13" pos:end="35:40">(<argument pos:start="35:14" pos:end="35:18"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">p</name> <operator pos:start="35:16" pos:end="35:16">+</operator> <literal type="number" pos:start="35:18" pos:end="35:18">7</literal></expr></argument>, <argument pos:start="35:21" pos:end="35:39"><expr pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:33">nb_sectors</name></name> <operator pos:start="35:35" pos:end="35:36">&gt;&gt;</operator> <literal type="number" pos:start="35:38" pos:end="35:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="35:49" pos:end="35:70">/* Sectors per card */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:12">put_le16</name><argument_list pos:start="37:13" pos:end="37:34">(<argument pos:start="37:14" pos:end="37:18"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">p</name> <operator pos:start="37:16" pos:end="37:16">+</operator> <literal type="number" pos:start="37:18" pos:end="37:18">8</literal></expr></argument>, <argument pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:33">nb_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="37:49" pos:end="37:70">/* Sectors per card */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:10">padstr</name><argument_list pos:start="39:11" pos:end="39:53">(<argument pos:start="39:12" pos:end="39:27"><expr pos:start="39:12" pos:end="39:27"><operator pos:start="39:12" pos:end="39:12">(</operator><name pos:start="39:13" pos:end="39:16">char</name> <operator pos:start="39:18" pos:end="39:18">*</operator><operator pos:start="39:19" pos:end="39:19">)</operator><operator pos:start="39:20" pos:end="39:20">(</operator><name pos:start="39:21" pos:end="39:21">p</name> <operator pos:start="39:23" pos:end="39:23">+</operator> <literal type="number" pos:start="39:25" pos:end="39:26">10</literal><operator pos:start="39:27" pos:end="39:27">)</operator></expr></argument>, <argument pos:start="39:30" pos:end="39:48"><expr pos:start="39:30" pos:end="39:48"><name pos:start="39:30" pos:end="39:48"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:48">drive_serial_str</name></name></expr></argument>, <argument pos:start="39:51" pos:end="39:52"><expr pos:start="39:51" pos:end="39:52"><literal type="number" pos:start="39:51" pos:end="39:52">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:56" pos:end="39:74">/* serial number */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><call pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:12">put_le16</name><argument_list pos:start="41:13" pos:end="41:28">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:14">p</name> <operator pos:start="41:16" pos:end="41:16">+</operator> <literal type="number" pos:start="41:18" pos:end="41:19">22</literal></expr></argument>, <argument pos:start="41:22" pos:end="41:27"><expr pos:start="41:22" pos:end="41:27"><literal type="number" pos:start="41:22" pos:end="41:27">0x0004</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="41:49" pos:end="41:63">/* ECC bytes */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><call pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:10">padstr</name><argument_list pos:start="43:11" pos:end="43:44">(<argument pos:start="43:12" pos:end="43:28"><expr pos:start="43:12" pos:end="43:28"><operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:16">char</name> <operator pos:start="43:18" pos:end="43:18">*</operator><operator pos:start="43:19" pos:end="43:19">)</operator> <operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:22">p</name> <operator pos:start="43:24" pos:end="43:24">+</operator> <literal type="number" pos:start="43:26" pos:end="43:27">23</literal><operator pos:start="43:28" pos:end="43:28">)</operator></expr></argument>, <argument pos:start="43:31" pos:end="43:40"><expr pos:start="43:31" pos:end="43:40"><name pos:start="43:31" pos:end="43:40"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">version</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="43:49" pos:end="43:71">/* Firmware Revision */</comment>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:10">padstr</name><argument_list pos:start="45:11" pos:end="45:52">(<argument pos:start="45:12" pos:end="45:28"><expr pos:start="45:12" pos:end="45:28"><operator pos:start="45:12" pos:end="45:12">(</operator><name pos:start="45:13" pos:end="45:16">char</name> <operator pos:start="45:18" pos:end="45:18">*</operator><operator pos:start="45:19" pos:end="45:19">)</operator> <operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:22">p</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <literal type="number" pos:start="45:26" pos:end="45:27">27</literal><operator pos:start="45:28" pos:end="45:28">)</operator></expr></argument>, <argument pos:start="45:31" pos:end="45:47"><expr pos:start="45:31" pos:end="45:47"><literal type="string" pos:start="45:31" pos:end="45:47">"QEMU MICRODRIVE"</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:51"><expr pos:start="45:50" pos:end="45:51"><literal type="number" pos:start="45:50" pos:end="45:51">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="block" pos:start="45:54" pos:end="45:71">/* Model number */</comment>

<cpp:if pos:start="47:1" pos:end="47:24">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:20">MAX_MULT_SECTORS</name> <operator pos:start="47:22" pos:end="47:22">&gt;</operator> <literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr></cpp:if>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:47"><call pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:12">put_le16</name><argument_list pos:start="49:13" pos:end="49:47">(<argument pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:19"><name pos:start="49:14" pos:end="49:14">p</name> <operator pos:start="49:16" pos:end="49:16">+</operator> <literal type="number" pos:start="49:18" pos:end="49:19">47</literal></expr></argument>, <argument pos:start="49:22" pos:end="49:46"><expr pos:start="49:22" pos:end="49:46"><literal type="number" pos:start="49:22" pos:end="49:27">0x8000</literal> <operator pos:start="49:29" pos:end="49:29">|</operator> <name pos:start="49:31" pos:end="49:46">MAX_MULT_SECTORS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="51:1" pos:end="51:5">#<cpp:directive pos:start="51:2" pos:end="51:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="53:5" pos:end="56:0"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:12">put_le16</name><argument_list pos:start="53:13" pos:end="53:28">(<argument pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:19"><name pos:start="53:14" pos:end="53:14">p</name> <operator pos:start="53:16" pos:end="53:16">+</operator> <literal type="number" pos:start="53:18" pos:end="53:19">47</literal></expr></argument>, <argument pos:start="53:22" pos:end="53:27"><expr pos:start="53:22" pos:end="53:27"><literal type="number" pos:start="53:22" pos:end="53:27">0x0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><call pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:12">put_le16</name><argument_list pos:start="57:13" pos:end="57:28">(<argument pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:19"><name pos:start="57:14" pos:end="57:14">p</name> <operator pos:start="57:16" pos:end="57:16">+</operator> <literal type="number" pos:start="57:18" pos:end="57:19">49</literal></expr></argument>, <argument pos:start="57:22" pos:end="57:27"><expr pos:start="57:22" pos:end="57:27"><literal type="number" pos:start="57:22" pos:end="57:27">0x0f00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="57:49" pos:end="57:66">/* Capabilities */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><call pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:12">put_le16</name><argument_list pos:start="59:13" pos:end="59:28">(<argument pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:19"><name pos:start="59:14" pos:end="59:14">p</name> <operator pos:start="59:16" pos:end="59:16">+</operator> <literal type="number" pos:start="59:18" pos:end="59:19">51</literal></expr></argument>, <argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><literal type="number" pos:start="59:22" pos:end="59:27">0x0002</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="59:49" pos:end="59:75">/* PIO cycle timing mode */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><call pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:12">put_le16</name><argument_list pos:start="61:13" pos:end="61:28">(<argument pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:19"><name pos:start="61:14" pos:end="61:14">p</name> <operator pos:start="61:16" pos:end="61:16">+</operator> <literal type="number" pos:start="61:18" pos:end="61:19">52</literal></expr></argument>, <argument pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:27"><literal type="number" pos:start="61:22" pos:end="61:27">0x0001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="61:49" pos:end="61:75">/* DMA cycle timing mode */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><call pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:12">put_le16</name><argument_list pos:start="63:13" pos:end="63:28">(<argument pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:19"><name pos:start="63:14" pos:end="63:14">p</name> <operator pos:start="63:16" pos:end="63:16">+</operator> <literal type="number" pos:start="63:18" pos:end="63:19">53</literal></expr></argument>, <argument pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:27"><literal type="number" pos:start="63:22" pos:end="63:27">0x0003</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="63:49" pos:end="63:78">/* Translation params valid */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><call pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:12">put_le16</name><argument_list pos:start="65:13" pos:end="65:34">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><name pos:start="65:14" pos:end="65:14">p</name> <operator pos:start="65:16" pos:end="65:16">+</operator> <literal type="number" pos:start="65:18" pos:end="65:19">54</literal></expr></argument>, <argument pos:start="65:22" pos:end="65:33"><expr pos:start="65:22" pos:end="65:33"><name pos:start="65:22" pos:end="65:33"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:33">cylinders</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="65:49" pos:end="65:71">/* Current cylinders */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:12">put_le16</name><argument_list pos:start="67:13" pos:end="67:30">(<argument pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:19"><name pos:start="67:14" pos:end="67:14">p</name> <operator pos:start="67:16" pos:end="67:16">+</operator> <literal type="number" pos:start="67:18" pos:end="67:19">55</literal></expr></argument>, <argument pos:start="67:22" pos:end="67:29"><expr pos:start="67:22" pos:end="67:29"><name pos:start="67:22" pos:end="67:29"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:29">heads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="67:49" pos:end="67:67">/* Current heads */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><call pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:12">put_le16</name><argument_list pos:start="69:13" pos:end="69:32">(<argument pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:14">p</name> <operator pos:start="69:16" pos:end="69:16">+</operator> <literal type="number" pos:start="69:18" pos:end="69:19">56</literal></expr></argument>, <argument pos:start="69:22" pos:end="69:31"><expr pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="69:49" pos:end="69:69">/* Current sectors */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:30"><expr pos:start="71:5" pos:end="71:29"><call pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:12">put_le16</name><argument_list pos:start="71:13" pos:end="71:29">(<argument pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:19"><name pos:start="71:14" pos:end="71:14">p</name> <operator pos:start="71:16" pos:end="71:16">+</operator> <literal type="number" pos:start="71:18" pos:end="71:19">57</literal></expr></argument>, <argument pos:start="71:22" pos:end="71:28"><expr pos:start="71:22" pos:end="71:28"><name pos:start="71:22" pos:end="71:28">cur_sec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="71:49" pos:end="71:70">/* Current capacity */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><call pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:12">put_le16</name><argument_list pos:start="73:13" pos:end="73:35">(<argument pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:19"><name pos:start="73:14" pos:end="73:14">p</name> <operator pos:start="73:16" pos:end="73:16">+</operator> <literal type="number" pos:start="73:18" pos:end="73:19">58</literal></expr></argument>, <argument pos:start="73:22" pos:end="73:34"><expr pos:start="73:22" pos:end="73:34"><name pos:start="73:22" pos:end="73:28">cur_sec</name> <operator pos:start="73:30" pos:end="73:31">&gt;&gt;</operator> <literal type="number" pos:start="73:33" pos:end="73:34">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="73:49" pos:end="73:70">/* Current capacity */</comment>

    <if_stmt pos:start="75:5" pos:end="77:50"><if pos:start="75:5" pos:end="77:50">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:23">mult_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:50"><block_content pos:start="77:9" pos:end="77:50">			<comment type="block" pos:start="75:49" pos:end="75:77">/* Multiple sector setting */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:50"><expr pos:start="77:9" pos:end="77:49"><call pos:start="77:9" pos:end="77:49"><name pos:start="77:9" pos:end="77:16">put_le16</name><argument_list pos:start="77:17" pos:end="77:49">(<argument pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:18">p</name> <operator pos:start="77:20" pos:end="77:20">+</operator> <literal type="number" pos:start="77:22" pos:end="77:23">59</literal></expr></argument>, <argument pos:start="77:26" pos:end="77:48"><expr pos:start="77:26" pos:end="77:48"><literal type="number" pos:start="77:26" pos:end="77:30">0x100</literal> <operator pos:start="77:32" pos:end="77:32">|</operator> <name pos:start="77:34" pos:end="77:48"><name pos:start="77:34" pos:end="77:34">s</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:48">mult_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:36"><expr pos:start="79:5" pos:end="79:35"><call pos:start="79:5" pos:end="79:35"><name pos:start="79:5" pos:end="79:12">put_le16</name><argument_list pos:start="79:13" pos:end="79:35">(<argument pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:19"><name pos:start="79:14" pos:end="79:14">p</name> <operator pos:start="79:16" pos:end="79:16">+</operator> <literal type="number" pos:start="79:18" pos:end="79:19">60</literal></expr></argument>, <argument pos:start="79:22" pos:end="79:34"><expr pos:start="79:22" pos:end="79:34"><name pos:start="79:22" pos:end="79:34"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:34">nb_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block" pos:start="79:49" pos:end="79:71">/* Total LBA sectors */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><call pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:12">put_le16</name><argument_list pos:start="81:13" pos:end="81:41">(<argument pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:19"><name pos:start="81:14" pos:end="81:14">p</name> <operator pos:start="81:16" pos:end="81:16">+</operator> <literal type="number" pos:start="81:18" pos:end="81:19">61</literal></expr></argument>, <argument pos:start="81:22" pos:end="81:40"><expr pos:start="81:22" pos:end="81:40"><name pos:start="81:22" pos:end="81:34"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:34">nb_sectors</name></name> <operator pos:start="81:36" pos:end="81:37">&gt;&gt;</operator> <literal type="number" pos:start="81:39" pos:end="81:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="81:49" pos:end="81:71">/* Total LBA sectors */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><call pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:12">put_le16</name><argument_list pos:start="83:13" pos:end="83:28">(<argument pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:19"><name pos:start="83:14" pos:end="83:14">p</name> <operator pos:start="83:16" pos:end="83:16">+</operator> <literal type="number" pos:start="83:18" pos:end="83:19">63</literal></expr></argument>, <argument pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:27"><literal type="number" pos:start="83:22" pos:end="83:27">0x0203</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="83:49" pos:end="83:78">/* Multiword DMA capability */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><call pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:12">put_le16</name><argument_list pos:start="85:13" pos:end="85:28">(<argument pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:19"><name pos:start="85:14" pos:end="85:14">p</name> <operator pos:start="85:16" pos:end="85:16">+</operator> <literal type="number" pos:start="85:18" pos:end="85:19">64</literal></expr></argument>, <argument pos:start="85:22" pos:end="85:27"><expr pos:start="85:22" pos:end="85:27"><literal type="number" pos:start="85:22" pos:end="85:27">0x0001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="85:49" pos:end="85:78">/* Flow Control PIO support */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><call pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:12">put_le16</name><argument_list pos:start="87:13" pos:end="87:28">(<argument pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:19"><name pos:start="87:14" pos:end="87:14">p</name> <operator pos:start="87:16" pos:end="87:16">+</operator> <literal type="number" pos:start="87:18" pos:end="87:19">65</literal></expr></argument>, <argument pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:27"><literal type="number" pos:start="87:22" pos:end="87:27">0x0096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="87:49" pos:end="87:78">/* Min. Multiword DMA cycle */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:12">put_le16</name><argument_list pos:start="89:13" pos:end="89:28">(<argument pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:19"><name pos:start="89:14" pos:end="89:14">p</name> <operator pos:start="89:16" pos:end="89:16">+</operator> <literal type="number" pos:start="89:18" pos:end="89:19">66</literal></expr></argument>, <argument pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:27"><literal type="number" pos:start="89:22" pos:end="89:27">0x0096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="89:49" pos:end="89:78">/* Rec. Multiword DMA cycle */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><call pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:12">put_le16</name><argument_list pos:start="91:13" pos:end="91:28">(<argument pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:19"><name pos:start="91:14" pos:end="91:14">p</name> <operator pos:start="91:16" pos:end="91:16">+</operator> <literal type="number" pos:start="91:18" pos:end="91:19">68</literal></expr></argument>, <argument pos:start="91:22" pos:end="91:27"><expr pos:start="91:22" pos:end="91:27"><literal type="number" pos:start="91:22" pos:end="91:27">0x00b4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="91:49" pos:end="91:73">/* Min. PIO cycle time */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:29"><expr pos:start="93:5" pos:end="93:28"><call pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:12">put_le16</name><argument_list pos:start="93:13" pos:end="93:28">(<argument pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:19"><name pos:start="93:14" pos:end="93:14">p</name> <operator pos:start="93:16" pos:end="93:16">+</operator> <literal type="number" pos:start="93:18" pos:end="93:19">82</literal></expr></argument>, <argument pos:start="93:22" pos:end="93:27"><expr pos:start="93:22" pos:end="93:27"><literal type="number" pos:start="93:22" pos:end="93:27">0x400c</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="93:49" pos:end="93:75">/* Command Set supported */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><call pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:12">put_le16</name><argument_list pos:start="95:13" pos:end="95:28">(<argument pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:19"><name pos:start="95:14" pos:end="95:14">p</name> <operator pos:start="95:16" pos:end="95:16">+</operator> <literal type="number" pos:start="95:18" pos:end="95:19">83</literal></expr></argument>, <argument pos:start="95:22" pos:end="95:27"><expr pos:start="95:22" pos:end="95:27"><literal type="number" pos:start="95:22" pos:end="95:27">0x7068</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="95:49" pos:end="95:75">/* Command Set supported */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:29"><expr pos:start="97:5" pos:end="97:28"><call pos:start="97:5" pos:end="97:28"><name pos:start="97:5" pos:end="97:12">put_le16</name><argument_list pos:start="97:13" pos:end="97:28">(<argument pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:19"><name pos:start="97:14" pos:end="97:14">p</name> <operator pos:start="97:16" pos:end="97:16">+</operator> <literal type="number" pos:start="97:18" pos:end="97:19">84</literal></expr></argument>, <argument pos:start="97:22" pos:end="97:27"><expr pos:start="97:22" pos:end="97:27"><literal type="number" pos:start="97:22" pos:end="97:27">0x4000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="97:49" pos:end="97:72">/* Features supported */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:12">put_le16</name><argument_list pos:start="99:13" pos:end="99:28">(<argument pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:19"><name pos:start="99:14" pos:end="99:14">p</name> <operator pos:start="99:16" pos:end="99:16">+</operator> <literal type="number" pos:start="99:18" pos:end="99:19">85</literal></expr></argument>, <argument pos:start="99:22" pos:end="99:27"><expr pos:start="99:22" pos:end="99:27"><literal type="number" pos:start="99:22" pos:end="99:27">0x000c</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="99:49" pos:end="99:73">/* Command Set enabled */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><call pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:12">put_le16</name><argument_list pos:start="101:13" pos:end="101:28">(<argument pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:19"><name pos:start="101:14" pos:end="101:14">p</name> <operator pos:start="101:16" pos:end="101:16">+</operator> <literal type="number" pos:start="101:18" pos:end="101:19">86</literal></expr></argument>, <argument pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:27"><literal type="number" pos:start="101:22" pos:end="101:27">0x7044</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="101:49" pos:end="101:73">/* Command Set enabled */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:29"><expr pos:start="103:5" pos:end="103:28"><call pos:start="103:5" pos:end="103:28"><name pos:start="103:5" pos:end="103:12">put_le16</name><argument_list pos:start="103:13" pos:end="103:28">(<argument pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:19"><name pos:start="103:14" pos:end="103:14">p</name> <operator pos:start="103:16" pos:end="103:16">+</operator> <literal type="number" pos:start="103:18" pos:end="103:19">87</literal></expr></argument>, <argument pos:start="103:22" pos:end="103:27"><expr pos:start="103:22" pos:end="103:27"><literal type="number" pos:start="103:22" pos:end="103:27">0x4000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="103:49" pos:end="103:70">/* Features enabled */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><call pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:12">put_le16</name><argument_list pos:start="105:13" pos:end="105:28">(<argument pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:19"><name pos:start="105:14" pos:end="105:14">p</name> <operator pos:start="105:16" pos:end="105:16">+</operator> <literal type="number" pos:start="105:18" pos:end="105:19">91</literal></expr></argument>, <argument pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:27"><literal type="number" pos:start="105:22" pos:end="105:27">0x4060</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="105:49" pos:end="105:71">/* Current APM level */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:30"><expr pos:start="107:5" pos:end="107:29"><call pos:start="107:5" pos:end="107:29"><name pos:start="107:5" pos:end="107:12">put_le16</name><argument_list pos:start="107:13" pos:end="107:29">(<argument pos:start="107:14" pos:end="107:20"><expr pos:start="107:14" pos:end="107:20"><name pos:start="107:14" pos:end="107:14">p</name> <operator pos:start="107:16" pos:end="107:16">+</operator> <literal type="number" pos:start="107:18" pos:end="107:20">129</literal></expr></argument>, <argument pos:start="107:23" pos:end="107:28"><expr pos:start="107:23" pos:end="107:28"><literal type="number" pos:start="107:23" pos:end="107:28">0x0002</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="107:49" pos:end="107:77">/* Current features option */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><call pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:12">put_le16</name><argument_list pos:start="109:13" pos:end="109:29">(<argument pos:start="109:14" pos:end="109:20"><expr pos:start="109:14" pos:end="109:20"><name pos:start="109:14" pos:end="109:14">p</name> <operator pos:start="109:16" pos:end="109:16">+</operator> <literal type="number" pos:start="109:18" pos:end="109:20">130</literal></expr></argument>, <argument pos:start="109:23" pos:end="109:28"><expr pos:start="109:23" pos:end="109:28"><literal type="number" pos:start="109:23" pos:end="109:28">0x0005</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="109:49" pos:end="109:72">/* Reassigned sectors */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:30"><expr pos:start="111:5" pos:end="111:29"><call pos:start="111:5" pos:end="111:29"><name pos:start="111:5" pos:end="111:12">put_le16</name><argument_list pos:start="111:13" pos:end="111:29">(<argument pos:start="111:14" pos:end="111:20"><expr pos:start="111:14" pos:end="111:20"><name pos:start="111:14" pos:end="111:14">p</name> <operator pos:start="111:16" pos:end="111:16">+</operator> <literal type="number" pos:start="111:18" pos:end="111:20">131</literal></expr></argument>, <argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><literal type="number" pos:start="111:23" pos:end="111:28">0x0001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="111:49" pos:end="111:72">/* Initial power mode */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:30"><expr pos:start="113:5" pos:end="113:29"><call pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:12">put_le16</name><argument_list pos:start="113:13" pos:end="113:29">(<argument pos:start="113:14" pos:end="113:20"><expr pos:start="113:14" pos:end="113:20"><name pos:start="113:14" pos:end="113:14">p</name> <operator pos:start="113:16" pos:end="113:16">+</operator> <literal type="number" pos:start="113:18" pos:end="113:20">132</literal></expr></argument>, <argument pos:start="113:23" pos:end="113:28"><expr pos:start="113:23" pos:end="113:28"><literal type="number" pos:start="113:23" pos:end="113:28">0x0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="113:49" pos:end="113:68">/* User signature */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:12">put_le16</name><argument_list pos:start="115:13" pos:end="115:29">(<argument pos:start="115:14" pos:end="115:20"><expr pos:start="115:14" pos:end="115:20"><name pos:start="115:14" pos:end="115:14">p</name> <operator pos:start="115:16" pos:end="115:16">+</operator> <literal type="number" pos:start="115:18" pos:end="115:20">160</literal></expr></argument>, <argument pos:start="115:23" pos:end="115:28"><expr pos:start="115:23" pos:end="115:28"><literal type="number" pos:start="115:23" pos:end="115:28">0x8100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="115:49" pos:end="115:71">/* Power requirement */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:30"><expr pos:start="117:5" pos:end="117:29"><call pos:start="117:5" pos:end="117:29"><name pos:start="117:5" pos:end="117:12">put_le16</name><argument_list pos:start="117:13" pos:end="117:29">(<argument pos:start="117:14" pos:end="117:20"><expr pos:start="117:14" pos:end="117:20"><name pos:start="117:14" pos:end="117:14">p</name> <operator pos:start="117:16" pos:end="117:16">+</operator> <literal type="number" pos:start="117:18" pos:end="117:20">161</literal></expr></argument>, <argument pos:start="117:23" pos:end="117:28"><expr pos:start="117:23" pos:end="117:28"><literal type="number" pos:start="117:23" pos:end="117:28">0x8001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>			<comment type="block" pos:start="117:49" pos:end="117:68">/* CF command set */</comment>



    <expr_stmt pos:start="121:5" pos:end="121:24"><expr pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:19"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:19">identify_set</name></name> <operator pos:start="121:21" pos:end="121:21">=</operator> <literal type="number" pos:start="121:23" pos:end="121:23">1</literal></expr>;</expr_stmt>



<label pos:start="125:1" pos:end="125:12"><name pos:start="125:1" pos:end="125:11">fill_buffer</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:54"><expr pos:start="127:5" pos:end="127:53"><call pos:start="127:5" pos:end="127:53"><name pos:start="127:5" pos:end="127:10">memcpy</name><argument_list pos:start="127:11" pos:end="127:53">(<argument pos:start="127:12" pos:end="127:23"><expr pos:start="127:12" pos:end="127:23"><name pos:start="127:12" pos:end="127:23"><name pos:start="127:12" pos:end="127:12">s</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:23">io_buffer</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:26"><expr pos:start="127:26" pos:end="127:26"><name pos:start="127:26" pos:end="127:26">p</name></expr></argument>, <argument pos:start="127:29" pos:end="127:52"><expr pos:start="127:29" pos:end="127:52"><sizeof pos:start="127:29" pos:end="127:52">sizeof<argument_list pos:start="127:35" pos:end="127:52">(<argument pos:start="127:36" pos:end="127:51"><expr pos:start="127:36" pos:end="127:51"><name pos:start="127:36" pos:end="127:51"><name pos:start="127:36" pos:end="127:36">s</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:51">identify_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
