<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17453.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:21">get_v</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:35">ByteIOContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">bc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:14">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">val</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="25:5">for<control pos:start="9:8" pos:end="9:31">(<init pos:start="9:9" pos:end="9:9">;</init> <condition pos:start="9:11" pos:end="9:29"><expr pos:start="9:11" pos:end="9:28"><call pos:start="9:11" pos:end="9:24"><name pos:start="9:11" pos:end="9:20">bytes_left</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">bc</name></expr></argument>)</argument_list></call> <operator pos:start="9:26" pos:end="9:26">&gt;</operator> <literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr>;</condition> <incr/>)</control>

    <block pos:start="11:5" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:34">

	<decl_stmt pos:start="13:9" pos:end="13:31"><decl pos:start="13:9" pos:end="13:30"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">tmp</name> <init pos:start="13:17" pos:end="13:30">= <expr pos:start="13:19" pos:end="13:30"><call pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:26">get_byte</name><argument_list pos:start="13:27" pos:end="13:30">(<argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><name pos:start="13:28" pos:end="13:29">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<if_stmt pos:start="17:9" pos:end="23:34"><if pos:start="17:9" pos:end="19:39">if <condition pos:start="17:12" pos:end="17:21">(<expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:15">tmp</name><operator pos:start="17:16" pos:end="17:16">&amp;</operator><literal type="number" pos:start="17:17" pos:end="17:20">0x80</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:39"><block_content pos:start="19:13" pos:end="19:39">

	    <expr_stmt pos:start="19:13" pos:end="19:39"><expr pos:start="19:13" pos:end="19:38"><name pos:start="19:13" pos:end="19:15">val</name><operator pos:start="19:16" pos:end="19:16">=</operator> <operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:21">val</name><operator pos:start="19:22" pos:end="19:23">&lt;&lt;</operator><literal type="number" pos:start="19:24" pos:end="19:24">7</literal><operator pos:start="19:25" pos:end="19:25">)</operator> <operator pos:start="19:27" pos:end="19:27">+</operator> <name pos:start="19:29" pos:end="19:31">tmp</name> <operator pos:start="19:33" pos:end="19:33">-</operator> <literal type="number" pos:start="19:35" pos:end="19:38">0x80</literal></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="21:9" pos:end="23:34">else<block type="pseudo" pos:start="23:13" pos:end="23:34"><block_content pos:start="23:13" pos:end="23:34">

	    <return pos:start="23:13" pos:end="23:34">return <expr pos:start="23:20" pos:end="23:33"><operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:23">val</name><operator pos:start="23:24" pos:end="23:25">&lt;&lt;</operator><literal type="number" pos:start="23:26" pos:end="23:26">7</literal><operator pos:start="23:27" pos:end="23:27">)</operator> <operator pos:start="23:29" pos:end="23:29">+</operator> <name pos:start="23:31" pos:end="23:33">tmp</name></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="27:5" pos:end="27:14">return <expr pos:start="27:12" pos:end="27:13"><operator pos:start="27:12" pos:end="27:12">-</operator><literal type="number" pos:start="27:13" pos:end="27:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
