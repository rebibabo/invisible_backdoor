<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1517.c" pos:tabs="8"><function pos:start="1:1" pos:end="144:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">avs_read_packet</name><parameter_list pos:start="1:27" pos:end="1:63">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type> <name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="144:1">{<block_content pos:start="5:5" pos:end="142:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">AvsFormat</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">avs</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">sub_type</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>, <decl pos:start="7:23" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">size</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">AvsBlockType</name></type> <name pos:start="9:18" pos:end="9:21">type</name> <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:32">AVS_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">palette_size</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:19">palette</name><index pos:start="13:20" pos:end="13:32">[<expr pos:start="13:21" pos:end="13:31"><literal type="number" pos:start="13:21" pos:end="13:21">4</literal> <operator pos:start="13:23" pos:end="13:23">+</operator> <literal type="number" pos:start="13:25" pos:end="13:25">3</literal> <operator pos:start="13:27" pos:end="13:27">*</operator> <literal type="number" pos:start="13:29" pos:end="13:31">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:21"><if pos:start="19:5" pos:end="23:21">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:11">avs</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:33">remaining_audio_size</name></name> <operator pos:start="19:35" pos:end="19:35">&gt;</operator> <literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="23:21"><block_content pos:start="21:9" pos:end="23:21">

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:46">(<expr pos:start="21:13" pos:end="21:45"><call pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:33">avs_read_audio_packet</name><argument_list pos:start="21:34" pos:end="21:41">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">s</name></expr></argument>, <argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:40">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="21:43" pos:end="21:43">&gt;</operator> <literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <while pos:start="27:5" pos:end="142:5">while <condition pos:start="27:11" pos:end="27:13">(<expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">1</literal></expr>)</condition> <block pos:start="27:15" pos:end="142:5">{<block_content pos:start="29:9" pos:end="140:9">

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:43">(<expr pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:15">avs</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:37">remaining_frame_size</name></name> <operator pos:start="29:39" pos:end="29:40">&lt;=</operator> <literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr>)</condition> <block pos:start="29:45" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:61">

            <if_stmt pos:start="31:13" pos:end="33:36"><if pos:start="31:13" pos:end="33:36">if <condition pos:start="31:16" pos:end="31:34">(<expr pos:start="31:17" pos:end="31:33"><operator pos:start="31:17" pos:end="31:17">!</operator><call pos:start="31:18" pos:end="31:33"><name pos:start="31:18" pos:end="31:26">avio_rl16</name><argument_list pos:start="31:27" pos:end="31:33">(<argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:32">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:36"><block_content pos:start="33:17" pos:end="33:36">    <comment type="block" pos:start="31:39" pos:end="31:53">/* found EOF */</comment>

                <return pos:start="33:17" pos:end="33:36">return <expr pos:start="33:24" pos:end="33:35"><call pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:30">AVERROR</name><argument_list pos:start="33:31" pos:end="33:35">(<argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:61"><expr pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">avs</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:37">remaining_frame_size</name></name> <operator pos:start="35:39" pos:end="35:39">=</operator> <call pos:start="35:41" pos:end="35:56"><name pos:start="35:41" pos:end="35:49">avio_rl16</name><argument_list pos:start="35:50" pos:end="35:56">(<argument pos:start="35:51" pos:end="35:55"><expr pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:55">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:58" pos:end="35:58">-</operator> <literal type="number" pos:start="35:60" pos:end="35:60">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="41:9" pos:end="140:9">while <condition pos:start="41:15" pos:end="41:45">(<expr pos:start="41:16" pos:end="41:44"><name pos:start="41:16" pos:end="41:40"><name pos:start="41:16" pos:end="41:18">avs</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:40">remaining_frame_size</name></name> <operator pos:start="41:42" pos:end="41:42">&gt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">0</literal></expr>)</condition> <block pos:start="41:47" pos:end="140:9">{<block_content pos:start="43:13" pos:end="138:13">

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:20">sub_type</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:37"><name pos:start="43:24" pos:end="43:30">avio_r8</name><argument_list pos:start="43:31" pos:end="43:37">(<argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:16">type</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:33"><name pos:start="45:20" pos:end="45:26">avio_r8</name><argument_list pos:start="45:27" pos:end="45:33">(<argument pos:start="45:28" pos:end="45:32"><expr pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:16">size</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:35"><name pos:start="47:20" pos:end="47:28">avio_rl16</name><argument_list pos:start="47:29" pos:end="47:35">(<argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="52:46"><if pos:start="49:13" pos:end="52:46">if <condition pos:start="49:16" pos:end="49:25">(<expr pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:20">size</name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr>)</condition><block type="pseudo" pos:start="52:13" pos:end="52:46"><block_content pos:start="52:13" pos:end="52:46">


            <expr_stmt pos:start="52:13" pos:end="52:46"><expr pos:start="52:13" pos:end="52:45"><name pos:start="52:13" pos:end="52:37"><name pos:start="52:13" pos:end="52:15">avs</name><operator pos:start="52:16" pos:end="52:17">-&gt;</operator><name pos:start="52:18" pos:end="52:37">remaining_frame_size</name></name> <operator pos:start="52:39" pos:end="52:40">-=</operator> <name pos:start="52:42" pos:end="52:45">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <switch pos:start="56:13" pos:end="138:13">switch <condition pos:start="56:20" pos:end="56:25">(<expr pos:start="56:21" pos:end="56:24"><name pos:start="56:21" pos:end="56:24">type</name></expr>)</condition> <block pos:start="56:27" pos:end="138:13">{<block_content pos:start="58:13" pos:end="136:43">

            <case pos:start="58:13" pos:end="58:29">case <expr pos:start="58:18" pos:end="58:28"><name pos:start="58:18" pos:end="58:28">AVS_PALETTE</name></expr>:</case>



                <expr_stmt pos:start="62:17" pos:end="62:58"><expr pos:start="62:17" pos:end="62:57"><name pos:start="62:17" pos:end="62:19">ret</name> <operator pos:start="62:21" pos:end="62:21">=</operator> <call pos:start="62:23" pos:end="62:57"><name pos:start="62:23" pos:end="62:31">avio_read</name><argument_list pos:start="62:32" pos:end="62:57">(<argument pos:start="62:33" pos:end="62:37"><expr pos:start="62:33" pos:end="62:37"><name pos:start="62:33" pos:end="62:37"><name pos:start="62:33" pos:end="62:33">s</name><operator pos:start="62:34" pos:end="62:35">-&gt;</operator><name pos:start="62:36" pos:end="62:37">pb</name></name></expr></argument>, <argument pos:start="62:40" pos:end="62:46"><expr pos:start="62:40" pos:end="62:46"><name pos:start="62:40" pos:end="62:46">palette</name></expr></argument>, <argument pos:start="62:49" pos:end="62:56"><expr pos:start="62:49" pos:end="62:56"><name pos:start="62:49" pos:end="62:52">size</name> <operator pos:start="62:54" pos:end="62:54">-</operator> <literal type="number" pos:start="62:56" pos:end="62:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="64:17" pos:end="66:40"><if pos:start="64:17" pos:end="66:40">if <condition pos:start="64:20" pos:end="64:35">(<expr pos:start="64:21" pos:end="64:34"><name pos:start="64:21" pos:end="64:23">ret</name> <operator pos:start="64:25" pos:end="64:25">&lt;</operator> <name pos:start="64:27" pos:end="64:30">size</name> <operator pos:start="64:32" pos:end="64:32">-</operator> <literal type="number" pos:start="64:34" pos:end="64:34">4</literal></expr>)</condition><block type="pseudo" pos:start="66:21" pos:end="66:40"><block_content pos:start="66:21" pos:end="66:40">

                    <return pos:start="66:21" pos:end="66:40">return <expr pos:start="66:28" pos:end="66:39"><call pos:start="66:28" pos:end="66:39"><name pos:start="66:28" pos:end="66:34">AVERROR</name><argument_list pos:start="66:35" pos:end="66:39">(<argument pos:start="66:36" pos:end="66:38"><expr pos:start="66:36" pos:end="66:38"><name pos:start="66:36" pos:end="66:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="68:17" pos:end="68:36"><expr pos:start="68:17" pos:end="68:35"><name pos:start="68:17" pos:end="68:28">palette_size</name> <operator pos:start="68:30" pos:end="68:30">=</operator> <name pos:start="68:32" pos:end="68:35">size</name></expr>;</expr_stmt>

                <break pos:start="70:17" pos:end="70:22">break;</break>



            <case pos:start="74:13" pos:end="74:27">case <expr pos:start="74:18" pos:end="74:26"><name pos:start="74:18" pos:end="74:26">AVS_VIDEO</name></expr>:</case>

                <if_stmt pos:start="76:17" pos:end="100:17"><if pos:start="76:17" pos:end="100:17">if <condition pos:start="76:20" pos:end="76:35">(<expr pos:start="76:21" pos:end="76:34"><operator pos:start="76:21" pos:end="76:21">!</operator><name pos:start="76:22" pos:end="76:34"><name pos:start="76:22" pos:end="76:24">avs</name><operator pos:start="76:25" pos:end="76:26">-&gt;</operator><name pos:start="76:27" pos:end="76:34">st_video</name></name></expr>)</condition> <block pos:start="76:37" pos:end="100:17">{<block_content pos:start="78:21" pos:end="98:33">

                    <expr_stmt pos:start="78:21" pos:end="78:64"><expr pos:start="78:21" pos:end="78:63"><name pos:start="78:21" pos:end="78:33"><name pos:start="78:21" pos:end="78:23">avs</name><operator pos:start="78:24" pos:end="78:25">-&gt;</operator><name pos:start="78:26" pos:end="78:33">st_video</name></name> <operator pos:start="78:35" pos:end="78:35">=</operator> <call pos:start="78:37" pos:end="78:63"><name pos:start="78:37" pos:end="78:49">av_new_stream</name><argument_list pos:start="78:50" pos:end="78:63">(<argument pos:start="78:51" pos:end="78:51"><expr pos:start="78:51" pos:end="78:51"><name pos:start="78:51" pos:end="78:51">s</name></expr></argument>, <argument pos:start="78:54" pos:end="78:62"><expr pos:start="78:54" pos:end="78:62"><name pos:start="78:54" pos:end="78:62">AVS_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="80:21" pos:end="82:47"><if pos:start="80:21" pos:end="82:47">if <condition pos:start="80:24" pos:end="80:46">(<expr pos:start="80:25" pos:end="80:45"><name pos:start="80:25" pos:end="80:37"><name pos:start="80:25" pos:end="80:27">avs</name><operator pos:start="80:28" pos:end="80:29">-&gt;</operator><name pos:start="80:30" pos:end="80:37">st_video</name></name> <operator pos:start="80:39" pos:end="80:40">==</operator> <name pos:start="80:42" pos:end="80:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="82:25" pos:end="82:47"><block_content pos:start="82:25" pos:end="82:47">

                        <return pos:start="82:25" pos:end="82:47">return <expr pos:start="82:32" pos:end="82:46"><call pos:start="82:32" pos:end="82:46"><name pos:start="82:32" pos:end="82:38">AVERROR</name><argument_list pos:start="82:39" pos:end="82:46">(<argument pos:start="82:40" pos:end="82:45"><expr pos:start="82:40" pos:end="82:45"><name pos:start="82:40" pos:end="82:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="84:21" pos:end="84:74"><expr pos:start="84:21" pos:end="84:73"><name pos:start="84:21" pos:end="84:52"><name pos:start="84:21" pos:end="84:23">avs</name><operator pos:start="84:24" pos:end="84:25">-&gt;</operator><name pos:start="84:26" pos:end="84:33">st_video</name><operator pos:start="84:34" pos:end="84:35">-&gt;</operator><name pos:start="84:36" pos:end="84:40">codec</name><operator pos:start="84:41" pos:end="84:42">-&gt;</operator><name pos:start="84:43" pos:end="84:52">codec_type</name></name> <operator pos:start="84:54" pos:end="84:54">=</operator> <name pos:start="84:56" pos:end="84:73">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="86:21" pos:end="86:66"><expr pos:start="86:21" pos:end="86:65"><name pos:start="86:21" pos:end="86:50"><name pos:start="86:21" pos:end="86:23">avs</name><operator pos:start="86:24" pos:end="86:25">-&gt;</operator><name pos:start="86:26" pos:end="86:33">st_video</name><operator pos:start="86:34" pos:end="86:35">-&gt;</operator><name pos:start="86:36" pos:end="86:40">codec</name><operator pos:start="86:41" pos:end="86:42">-&gt;</operator><name pos:start="86:43" pos:end="86:50">codec_id</name></name> <operator pos:start="86:52" pos:end="86:52">=</operator> <name pos:start="86:54" pos:end="86:65">CODEC_ID_AVS</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="88:21" pos:end="88:61"><expr pos:start="88:21" pos:end="88:60"><name pos:start="88:21" pos:end="88:47"><name pos:start="88:21" pos:end="88:23">avs</name><operator pos:start="88:24" pos:end="88:25">-&gt;</operator><name pos:start="88:26" pos:end="88:33">st_video</name><operator pos:start="88:34" pos:end="88:35">-&gt;</operator><name pos:start="88:36" pos:end="88:40">codec</name><operator pos:start="88:41" pos:end="88:42">-&gt;</operator><name pos:start="88:43" pos:end="88:47">width</name></name> <operator pos:start="88:49" pos:end="88:49">=</operator> <name pos:start="88:51" pos:end="88:60"><name pos:start="88:51" pos:end="88:53">avs</name><operator pos:start="88:54" pos:end="88:55">-&gt;</operator><name pos:start="88:56" pos:end="88:60">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="90:21" pos:end="90:63"><expr pos:start="90:21" pos:end="90:62"><name pos:start="90:21" pos:end="90:48"><name pos:start="90:21" pos:end="90:23">avs</name><operator pos:start="90:24" pos:end="90:25">-&gt;</operator><name pos:start="90:26" pos:end="90:33">st_video</name><operator pos:start="90:34" pos:end="90:35">-&gt;</operator><name pos:start="90:36" pos:end="90:40">codec</name><operator pos:start="90:41" pos:end="90:42">-&gt;</operator><name pos:start="90:43" pos:end="90:48">height</name></name> <operator pos:start="90:50" pos:end="90:50">=</operator> <name pos:start="90:52" pos:end="90:62"><name pos:start="90:52" pos:end="90:54">avs</name><operator pos:start="90:55" pos:end="90:56">-&gt;</operator><name pos:start="90:57" pos:end="90:62">height</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="92:21" pos:end="92:85"><expr pos:start="92:21" pos:end="92:84"><name pos:start="92:21" pos:end="92:63"><name pos:start="92:21" pos:end="92:23">avs</name><operator pos:start="92:24" pos:end="92:25">-&gt;</operator><name pos:start="92:26" pos:end="92:33">st_video</name><operator pos:start="92:34" pos:end="92:35">-&gt;</operator><name pos:start="92:36" pos:end="92:40">codec</name><operator pos:start="92:41" pos:end="92:42">-&gt;</operator><name pos:start="92:43" pos:end="92:63">bits_per_coded_sample</name></name><operator pos:start="92:64" pos:end="92:64">=</operator><name pos:start="92:65" pos:end="92:84"><name pos:start="92:65" pos:end="92:67">avs</name><operator pos:start="92:68" pos:end="92:69">-&gt;</operator><name pos:start="92:70" pos:end="92:84">bits_per_sample</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="94:21" pos:end="94:62"><expr pos:start="94:21" pos:end="94:61"><name pos:start="94:21" pos:end="94:44"><name pos:start="94:21" pos:end="94:23">avs</name><operator pos:start="94:24" pos:end="94:25">-&gt;</operator><name pos:start="94:26" pos:end="94:33">st_video</name><operator pos:start="94:34" pos:end="94:35">-&gt;</operator><name pos:start="94:36" pos:end="94:44">nb_frames</name></name> <operator pos:start="94:46" pos:end="94:46">=</operator> <name pos:start="94:48" pos:end="94:61"><name pos:start="94:48" pos:end="94:50">avs</name><operator pos:start="94:51" pos:end="94:52">-&gt;</operator><name pos:start="94:53" pos:end="94:61">nb_frames</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="96:21" pos:end="98:33"><expr pos:start="96:21" pos:end="98:32"><name pos:start="96:21" pos:end="96:51"><name pos:start="96:21" pos:end="96:23">avs</name><operator pos:start="96:24" pos:end="96:25">-&gt;</operator><name pos:start="96:26" pos:end="96:33">st_video</name><operator pos:start="96:34" pos:end="96:35">-&gt;</operator><name pos:start="96:36" pos:end="96:40">codec</name><operator pos:start="96:41" pos:end="96:42">-&gt;</operator><name pos:start="96:43" pos:end="96:51">time_base</name></name> <operator pos:start="96:53" pos:end="96:53">=</operator> <operator pos:start="96:55" pos:end="96:55">(</operator><name pos:start="96:56" pos:end="96:65">AVRational</name><operator pos:start="96:66" pos:end="96:66">)</operator> <block pos:start="96:68" pos:end="98:32">{

                    <expr pos:start="98:21" pos:end="98:21"><literal type="number" pos:start="98:21" pos:end="98:21">1</literal></expr>, <expr pos:start="98:24" pos:end="98:31"><name pos:start="98:24" pos:end="98:31"><name pos:start="98:24" pos:end="98:26">avs</name><operator pos:start="98:27" pos:end="98:28">-&gt;</operator><name pos:start="98:29" pos:end="98:31">fps</name></name></expr>}</block></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="102:17" pos:end="104:68">return <expr pos:start="102:24" pos:end="104:67"><call pos:start="102:24" pos:end="104:67"><name pos:start="102:24" pos:end="102:44">avs_read_video_packet</name><argument_list pos:start="102:45" pos:end="104:67">(<argument pos:start="102:46" pos:end="102:46"><expr pos:start="102:46" pos:end="102:46"><name pos:start="102:46" pos:end="102:46">s</name></expr></argument>, <argument pos:start="102:49" pos:end="102:51"><expr pos:start="102:49" pos:end="102:51"><name pos:start="102:49" pos:end="102:51">pkt</name></expr></argument>, <argument pos:start="102:54" pos:end="102:57"><expr pos:start="102:54" pos:end="102:57"><name pos:start="102:54" pos:end="102:57">type</name></expr></argument>, <argument pos:start="102:60" pos:end="102:67"><expr pos:start="102:60" pos:end="102:67"><name pos:start="102:60" pos:end="102:67">sub_type</name></expr></argument>, <argument pos:start="102:70" pos:end="102:73"><expr pos:start="102:70" pos:end="102:73"><name pos:start="102:70" pos:end="102:73">size</name></expr></argument>,

                                             <argument pos:start="104:46" pos:end="104:52"><expr pos:start="104:46" pos:end="104:52"><name pos:start="104:46" pos:end="104:52">palette</name></expr></argument>, <argument pos:start="104:55" pos:end="104:66"><expr pos:start="104:55" pos:end="104:66"><name pos:start="104:55" pos:end="104:66">palette_size</name></expr></argument>)</argument_list></call></expr>;</return>



            <case pos:start="108:13" pos:end="108:27">case <expr pos:start="108:18" pos:end="108:26"><name pos:start="108:18" pos:end="108:26">AVS_AUDIO</name></expr>:</case>

                <if_stmt pos:start="110:17" pos:end="120:17"><if pos:start="110:17" pos:end="120:17">if <condition pos:start="110:20" pos:end="110:35">(<expr pos:start="110:21" pos:end="110:34"><operator pos:start="110:21" pos:end="110:21">!</operator><name pos:start="110:22" pos:end="110:34"><name pos:start="110:22" pos:end="110:24">avs</name><operator pos:start="110:25" pos:end="110:26">-&gt;</operator><name pos:start="110:27" pos:end="110:34">st_audio</name></name></expr>)</condition> <block pos:start="110:37" pos:end="120:17">{<block_content pos:start="112:21" pos:end="118:74">

                    <expr_stmt pos:start="112:21" pos:end="112:64"><expr pos:start="112:21" pos:end="112:63"><name pos:start="112:21" pos:end="112:33"><name pos:start="112:21" pos:end="112:23">avs</name><operator pos:start="112:24" pos:end="112:25">-&gt;</operator><name pos:start="112:26" pos:end="112:33">st_audio</name></name> <operator pos:start="112:35" pos:end="112:35">=</operator> <call pos:start="112:37" pos:end="112:63"><name pos:start="112:37" pos:end="112:49">av_new_stream</name><argument_list pos:start="112:50" pos:end="112:63">(<argument pos:start="112:51" pos:end="112:51"><expr pos:start="112:51" pos:end="112:51"><name pos:start="112:51" pos:end="112:51">s</name></expr></argument>, <argument pos:start="112:54" pos:end="112:62"><expr pos:start="112:54" pos:end="112:62"><name pos:start="112:54" pos:end="112:62">AVS_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="114:21" pos:end="116:47"><if pos:start="114:21" pos:end="116:47">if <condition pos:start="114:24" pos:end="114:46">(<expr pos:start="114:25" pos:end="114:45"><name pos:start="114:25" pos:end="114:37"><name pos:start="114:25" pos:end="114:27">avs</name><operator pos:start="114:28" pos:end="114:29">-&gt;</operator><name pos:start="114:30" pos:end="114:37">st_audio</name></name> <operator pos:start="114:39" pos:end="114:40">==</operator> <name pos:start="114:42" pos:end="114:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="116:25" pos:end="116:47"><block_content pos:start="116:25" pos:end="116:47">

                        <return pos:start="116:25" pos:end="116:47">return <expr pos:start="116:32" pos:end="116:46"><call pos:start="116:32" pos:end="116:46"><name pos:start="116:32" pos:end="116:38">AVERROR</name><argument_list pos:start="116:39" pos:end="116:46">(<argument pos:start="116:40" pos:end="116:45"><expr pos:start="116:40" pos:end="116:45"><name pos:start="116:40" pos:end="116:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="118:21" pos:end="118:74"><expr pos:start="118:21" pos:end="118:73"><name pos:start="118:21" pos:end="118:52"><name pos:start="118:21" pos:end="118:23">avs</name><operator pos:start="118:24" pos:end="118:25">-&gt;</operator><name pos:start="118:26" pos:end="118:33">st_audio</name><operator pos:start="118:34" pos:end="118:35">-&gt;</operator><name pos:start="118:36" pos:end="118:40">codec</name><operator pos:start="118:41" pos:end="118:42">-&gt;</operator><name pos:start="118:43" pos:end="118:52">codec_type</name></name> <operator pos:start="118:54" pos:end="118:54">=</operator> <name pos:start="118:56" pos:end="118:73">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="122:17" pos:end="122:53"><expr pos:start="122:17" pos:end="122:52"><name pos:start="122:17" pos:end="122:41"><name pos:start="122:17" pos:end="122:19">avs</name><operator pos:start="122:20" pos:end="122:21">-&gt;</operator><name pos:start="122:22" pos:end="122:41">remaining_audio_size</name></name> <operator pos:start="122:43" pos:end="122:43">=</operator> <name pos:start="122:45" pos:end="122:48">size</name> <operator pos:start="122:50" pos:end="122:50">-</operator> <literal type="number" pos:start="122:52" pos:end="122:52">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="124:17" pos:end="124:53"><expr pos:start="124:17" pos:end="124:52"><name pos:start="124:17" pos:end="124:20">size</name> <operator pos:start="124:22" pos:end="124:22">=</operator> <call pos:start="124:24" pos:end="124:52"><name pos:start="124:24" pos:end="124:44">avs_read_audio_packet</name><argument_list pos:start="124:45" pos:end="124:52">(<argument pos:start="124:46" pos:end="124:46"><expr pos:start="124:46" pos:end="124:46"><name pos:start="124:46" pos:end="124:46">s</name></expr></argument>, <argument pos:start="124:49" pos:end="124:51"><expr pos:start="124:49" pos:end="124:51"><name pos:start="124:49" pos:end="124:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="126:17" pos:end="128:32"><if pos:start="126:17" pos:end="128:32">if <condition pos:start="126:20" pos:end="126:30">(<expr pos:start="126:21" pos:end="126:29"><name pos:start="126:21" pos:end="126:24">size</name> <operator pos:start="126:26" pos:end="126:27">!=</operator> <literal type="number" pos:start="126:29" pos:end="126:29">0</literal></expr>)</condition><block type="pseudo" pos:start="128:21" pos:end="128:32"><block_content pos:start="128:21" pos:end="128:32">

                    <return pos:start="128:21" pos:end="128:32">return <expr pos:start="128:28" pos:end="128:31"><name pos:start="128:28" pos:end="128:31">size</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="130:17" pos:end="130:22">break;</break>



            <default pos:start="134:13" pos:end="134:20">default:</default>

                <expr_stmt pos:start="136:17" pos:end="136:43"><expr pos:start="136:17" pos:end="136:42"><call pos:start="136:17" pos:end="136:42"><name pos:start="136:17" pos:end="136:25">avio_skip</name><argument_list pos:start="136:26" pos:end="136:42">(<argument pos:start="136:27" pos:end="136:31"><expr pos:start="136:27" pos:end="136:31"><name pos:start="136:27" pos:end="136:31"><name pos:start="136:27" pos:end="136:27">s</name><operator pos:start="136:28" pos:end="136:29">-&gt;</operator><name pos:start="136:30" pos:end="136:31">pb</name></name></expr></argument>, <argument pos:start="136:34" pos:end="136:41"><expr pos:start="136:34" pos:end="136:41"><name pos:start="136:34" pos:end="136:37">size</name> <operator pos:start="136:39" pos:end="136:39">-</operator> <literal type="number" pos:start="136:41" pos:end="136:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
