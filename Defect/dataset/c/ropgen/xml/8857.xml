<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8857.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">qemu_gluster_create</name><parameter_list pos:start="1:31" pos:end="3:60">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filename</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:39">QemuOpts</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">opts</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:52">Error</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier><modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">BlockdevOptionsGluster</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">gconf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">glfs</name></name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">glfs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">glfs_fd</name></name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">prealloc</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:22">total_size</name> <init pos:start="17:24" pos:end="17:26">= <expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">tmp</name> <init pos:start="19:15" pos:end="19:20">= <expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:9">gconf</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:18">g_new0</name><argument_list pos:start="23:19" pos:end="23:45">(<argument pos:start="23:20" pos:end="23:41"><expr pos:start="23:20" pos:end="23:41"><name pos:start="23:20" pos:end="23:41">BlockdevOptionsGluster</name></expr></argument>, <argument pos:start="23:44" pos:end="23:44"><expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:66"><expr pos:start="25:5" pos:end="27:65"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:9">gconf</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">debug</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="27:65"><name pos:start="25:20" pos:end="25:42">qemu_opt_get_number_del</name><argument_list pos:start="25:43" pos:end="27:65">(<argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">opts</name></expr></argument>, <argument pos:start="25:50" pos:end="25:66"><expr pos:start="25:50" pos:end="25:66"><name pos:start="25:50" pos:end="25:66">GLUSTER_OPT_DEBUG</name></expr></argument>,

                                           <argument pos:start="27:44" pos:end="27:64"><expr pos:start="27:44" pos:end="27:64"><name pos:start="27:44" pos:end="27:64">GLUSTER_DEBUG_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:13">gconf</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:20">debug</name></name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>)</condition> <block pos:start="29:27" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:25">

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:13">gconf</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">debug</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:48">(<expr pos:start="33:16" pos:end="33:47"><name pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:20">gconf</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">debug</name></name> <operator pos:start="33:29" pos:end="33:29">&gt;</operator> <name pos:start="33:31" pos:end="33:47">GLUSTER_DEBUG_MAX</name></expr>)</condition> <block pos:start="33:50" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:41">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:13">gconf</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">debug</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:40">GLUSTER_DEBUG_MAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:9">gconf</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">has_debug</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:27">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:65"><expr pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:9">gconf</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">logfile</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:64"><name pos:start="43:22" pos:end="43:37">qemu_opt_get_del</name><argument_list pos:start="43:38" pos:end="43:64">(<argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">opts</name></expr></argument>, <argument pos:start="43:45" pos:end="43:63"><expr pos:start="43:45" pos:end="43:63"><name pos:start="43:45" pos:end="43:63">GLUSTER_OPT_LOGFILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:23"><name pos:start="45:10" pos:end="45:14">gconf</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">logfile</name></name></expr>)</condition> <block pos:start="45:26" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:59">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:13">gconf</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">logfile</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:58"><name pos:start="47:26" pos:end="47:33">g_strdup</name><argument_list pos:start="47:34" pos:end="47:58">(<argument pos:start="47:35" pos:end="47:57"><expr pos:start="47:35" pos:end="47:57"><name pos:start="47:35" pos:end="47:57">GLUSTER_LOGFILE_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:9">gconf</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">has_logfile</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:29">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:58"><expr pos:start="55:5" pos:end="55:57"><name pos:start="55:5" pos:end="55:8">glfs</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:57"><name pos:start="55:12" pos:end="55:28">qemu_gluster_init</name><argument_list pos:start="55:29" pos:end="55:57">(<argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34">gconf</name></expr></argument>, <argument pos:start="55:37" pos:end="55:44"><expr pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:44">filename</name></expr></argument>, <argument pos:start="55:47" pos:end="55:50"><expr pos:start="55:47" pos:end="55:50"><name pos:start="55:47" pos:end="55:50">NULL</name></expr></argument>, <argument pos:start="55:53" pos:end="55:56"><expr pos:start="55:53" pos:end="55:56"><name pos:start="55:53" pos:end="55:56">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:14">(<expr pos:start="57:9" pos:end="57:13"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:13">glfs</name></expr>)</condition> <block pos:start="57:16" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:17">

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:20">errno</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:44"><expr pos:start="67:5" pos:end="69:43"><name pos:start="67:5" pos:end="67:14">total_size</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="69:43"><name pos:start="67:18" pos:end="67:25">ROUND_UP</name><argument_list pos:start="67:26" pos:end="69:43">(<argument pos:start="67:27" pos:end="67:72"><expr pos:start="67:27" pos:end="67:72"><call pos:start="67:27" pos:end="67:72"><name pos:start="67:27" pos:end="67:47">qemu_opt_get_size_del</name><argument_list pos:start="67:48" pos:end="67:72">(<argument pos:start="67:49" pos:end="67:52"><expr pos:start="67:49" pos:end="67:52"><name pos:start="67:49" pos:end="67:52">opts</name></expr></argument>, <argument pos:start="67:55" pos:end="67:68"><expr pos:start="67:55" pos:end="67:68"><name pos:start="67:55" pos:end="67:68">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="67:71" pos:end="67:71"><expr pos:start="67:71" pos:end="67:71"><literal type="number" pos:start="67:71" pos:end="67:71">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="69:27" pos:end="69:42"><expr pos:start="69:27" pos:end="69:42"><name pos:start="69:27" pos:end="69:42">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:7">tmp</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:52"><name pos:start="73:11" pos:end="73:26">qemu_opt_get_del</name><argument_list pos:start="73:27" pos:end="73:52">(<argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><name pos:start="73:28" pos:end="73:31">opts</name></expr></argument>, <argument pos:start="73:34" pos:end="73:51"><expr pos:start="73:34" pos:end="73:51"><name pos:start="73:34" pos:end="73:51">BLOCK_OPT_PREALLOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="93:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:36">(<expr pos:start="75:9" pos:end="75:35"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:12">tmp</name> <operator pos:start="75:14" pos:end="75:15">||</operator> <operator pos:start="75:17" pos:end="75:17">!</operator><call pos:start="75:18" pos:end="75:35"><name pos:start="75:18" pos:end="75:23">strcmp</name><argument_list pos:start="75:24" pos:end="75:35">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">tmp</name></expr></argument>, <argument pos:start="75:30" pos:end="75:34"><expr pos:start="75:30" pos:end="75:34"><literal type="string" pos:start="75:30" pos:end="75:34">"off"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:38" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:21">

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">prealloc</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="83:5">else if <condition pos:start="79:15" pos:end="79:67">(<expr pos:start="79:16" pos:end="79:66"><operator pos:start="79:16" pos:end="79:16">!</operator><call pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:22">strcmp</name><argument_list pos:start="79:23" pos:end="79:35">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">tmp</name></expr></argument>, <argument pos:start="79:29" pos:end="79:34"><expr pos:start="79:29" pos:end="79:34"><literal type="string" pos:start="79:29" pos:end="79:34">"full"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:37" pos:end="79:38">&amp;&amp;</operator> <call pos:start="79:40" pos:end="79:66"><name pos:start="79:40" pos:end="79:64">gluster_supports_zerofill</name><argument_list pos:start="79:65" pos:end="79:66">()</argument_list></call></expr>)</condition> <block pos:start="79:69" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:21">

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:16">prealloc</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <literal type="number" pos:start="81:20" pos:end="81:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="93:5">else <block pos:start="83:12" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:17">

        <expr_stmt pos:start="85:9" pos:end="87:76"><expr pos:start="85:9" pos:end="87:75"><call pos:start="85:9" pos:end="87:75"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="87:75">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="87:69"><expr pos:start="85:26" pos:end="87:69"><literal type="string" pos:start="85:26" pos:end="85:59">"Invalid preallocation mode: '%s'"</literal>

                         <literal type="string" pos:start="87:26" pos:end="87:69">" or GlusterFS doesn't support zerofill API"</literal></expr></argument>, <argument pos:start="87:72" pos:end="87:74"><expr pos:start="87:72" pos:end="87:74"><name pos:start="87:72" pos:end="87:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:22"><expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <operator pos:start="89:15" pos:end="89:15">-</operator><name pos:start="89:16" pos:end="89:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:17">goto <name pos:start="91:14" pos:end="91:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:80"><expr pos:start="97:5" pos:end="99:79"><name pos:start="97:5" pos:end="97:6">fd</name> <operator pos:start="97:8" pos:end="97:8">=</operator> <call pos:start="97:10" pos:end="99:79"><name pos:start="97:10" pos:end="97:19">glfs_creat</name><argument_list pos:start="97:20" pos:end="99:79">(<argument pos:start="97:21" pos:end="97:24"><expr pos:start="97:21" pos:end="97:24"><name pos:start="97:21" pos:end="97:24">glfs</name></expr></argument>, <argument pos:start="97:27" pos:end="97:37"><expr pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:31">gconf</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:37">path</name></name></expr></argument>,

                    <argument pos:start="99:21" pos:end="99:59"><expr pos:start="99:21" pos:end="99:59"><name pos:start="99:21" pos:end="99:28">O_WRONLY</name> <operator pos:start="99:30" pos:end="99:30">|</operator> <name pos:start="99:32" pos:end="99:38">O_CREAT</name> <operator pos:start="99:40" pos:end="99:40">|</operator> <name pos:start="99:42" pos:end="99:48">O_TRUNC</name> <operator pos:start="99:50" pos:end="99:50">|</operator> <name pos:start="99:52" pos:end="99:59">O_BINARY</name></expr></argument>, <argument pos:start="99:62" pos:end="99:78"><expr pos:start="99:62" pos:end="99:78"><name pos:start="99:62" pos:end="99:68">S_IRUSR</name> <operator pos:start="99:70" pos:end="99:70">|</operator> <name pos:start="99:72" pos:end="99:78">S_IWUSR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="129:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:12">(<expr pos:start="101:9" pos:end="101:11"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:11">fd</name></expr>)</condition> <block pos:start="101:14" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:21">

        <expr_stmt pos:start="103:9" pos:end="103:21"><expr pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <operator pos:start="103:15" pos:end="103:15">-</operator><name pos:start="103:16" pos:end="103:20">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="129:5">else <block pos:start="105:12" pos:end="129:5">{<block_content pos:start="107:9" pos:end="127:9">

        <if_stmt pos:start="107:9" pos:end="119:9"><if pos:start="107:9" pos:end="115:9">if <condition pos:start="107:12" pos:end="107:44">(<expr pos:start="107:13" pos:end="107:43"><operator pos:start="107:13" pos:end="107:13">!</operator><call pos:start="107:14" pos:end="107:43"><name pos:start="107:14" pos:end="107:27">glfs_ftruncate</name><argument_list pos:start="107:28" pos:end="107:43">(<argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><name pos:start="107:29" pos:end="107:30">fd</name></expr></argument>, <argument pos:start="107:33" pos:end="107:42"><expr pos:start="107:33" pos:end="107:42"><name pos:start="107:33" pos:end="107:42">total_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:46" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:13">

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:69">(<expr pos:start="109:17" pos:end="109:68"><name pos:start="109:17" pos:end="109:24">prealloc</name> <operator pos:start="109:26" pos:end="109:27">&amp;&amp;</operator> <call pos:start="109:29" pos:end="109:68"><name pos:start="109:29" pos:end="109:49">qemu_gluster_zerofill</name><argument_list pos:start="109:50" pos:end="109:68">(<argument pos:start="109:51" pos:end="109:52"><expr pos:start="109:51" pos:end="109:52"><name pos:start="109:51" pos:end="109:52">fd</name></expr></argument>, <argument pos:start="109:55" pos:end="109:55"><expr pos:start="109:55" pos:end="109:55"><literal type="number" pos:start="109:55" pos:end="109:55">0</literal></expr></argument>, <argument pos:start="109:58" pos:end="109:67"><expr pos:start="109:58" pos:end="109:67"><name pos:start="109:58" pos:end="109:67">total_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:71" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:29">

                <expr_stmt pos:start="111:17" pos:end="111:29"><expr pos:start="111:17" pos:end="111:28"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <operator pos:start="111:23" pos:end="111:23">-</operator><name pos:start="111:24" pos:end="111:28">errno</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="119:9">else <block pos:start="115:16" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:25">

            <expr_stmt pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <operator pos:start="117:19" pos:end="117:19">-</operator><name pos:start="117:20" pos:end="117:24">errno</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:32">(<expr pos:start="123:13" pos:end="123:31"><call pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:22">glfs_close</name><argument_list pos:start="123:23" pos:end="123:26">(<argument pos:start="123:24" pos:end="123:25"><expr pos:start="123:24" pos:end="123:25"><name pos:start="123:24" pos:end="123:25">fd</name></expr></argument>)</argument_list></call> <operator pos:start="123:28" pos:end="123:29">!=</operator> <literal type="number" pos:start="123:31" pos:end="123:31">0</literal></expr>)</condition> <block pos:start="123:34" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:25">

            <expr_stmt pos:start="125:13" pos:end="125:25"><expr pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">-</operator><name pos:start="125:20" pos:end="125:24">errno</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="131:1" pos:end="131:4"><name pos:start="131:1" pos:end="131:3">out</name>:</label>

    <expr_stmt pos:start="133:5" pos:end="133:16"><expr pos:start="133:5" pos:end="133:15"><call pos:start="133:5" pos:end="133:15"><name pos:start="133:5" pos:end="133:10">g_free</name><argument_list pos:start="133:11" pos:end="133:15">(<argument pos:start="133:12" pos:end="133:14"><expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:44"><expr pos:start="135:5" pos:end="135:43"><call pos:start="135:5" pos:end="135:43"><name pos:start="135:5" pos:end="135:36">qapi_free_BlockdevOptionsGluster</name><argument_list pos:start="135:37" pos:end="135:43">(<argument pos:start="135:38" pos:end="135:42"><expr pos:start="135:38" pos:end="135:42"><name pos:start="135:38" pos:end="135:42">gconf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:31"><expr pos:start="137:5" pos:end="137:30"><call pos:start="137:5" pos:end="137:30"><name pos:start="137:5" pos:end="137:24">glfs_clear_preopened</name><argument_list pos:start="137:25" pos:end="137:30">(<argument pos:start="137:26" pos:end="137:29"><expr pos:start="137:26" pos:end="137:29"><name pos:start="137:26" pos:end="137:29">glfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
