<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24306.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">omap_lpg_update</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:45">omap_lpg_s</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:23">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:14">on</name></decl>, <decl pos:start="5:17" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:17" pos:end="5:22">period</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">1</literal></expr></init></decl>, <decl pos:start="5:29" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:29" pos:end="5:33">ticks</name> <init pos:start="5:35" pos:end="5:40">= <expr pos:start="5:37" pos:end="5:40"><literal type="number" pos:start="5:37" pos:end="5:40">1000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:24">per</name><index pos:start="7:25" pos:end="7:27">[<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">8</literal></expr>]</index></name> <init pos:start="7:29" pos:end="7:60">= <expr pos:start="7:31" pos:end="7:60"><block pos:start="7:31" pos:end="7:60">{ <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">1</literal></expr>, <expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">2</literal></expr>, <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">4</literal></expr>, <expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">8</literal></expr>, <expr pos:start="7:45" pos:end="7:46"><literal type="number" pos:start="7:45" pos:end="7:46">12</literal></expr>, <expr pos:start="7:49" pos:end="7:50"><literal type="number" pos:start="7:49" pos:end="7:50">16</literal></expr>, <expr pos:start="7:53" pos:end="7:54"><literal type="number" pos:start="7:53" pos:end="7:54">20</literal></expr>, <expr pos:start="7:57" pos:end="7:58"><literal type="number" pos:start="7:57" pos:end="7:58">24</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><operator pos:start="11:9" pos:end="11:9">~</operator><name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:19">control</name></name> <operator pos:start="11:21" pos:end="11:21">&amp;</operator> <operator pos:start="11:23" pos:end="11:23">(</operator><literal type="number" pos:start="11:24" pos:end="11:24">1</literal> <operator pos:start="11:26" pos:end="11:27">&lt;&lt;</operator> <literal type="number" pos:start="11:29" pos:end="11:29">6</literal><operator pos:start="11:30" pos:end="11:30">)</operator></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">					<comment type="block" pos:start="11:65" pos:end="11:76">/* LPGRES */</comment>

        <expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">on</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="15:5" pos:end="17:20">else if <condition pos:start="15:13" pos:end="15:35">(<expr pos:start="15:14" pos:end="15:34"><name pos:start="15:14" pos:end="15:23"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">control</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <operator pos:start="15:27" pos:end="15:27">(</operator><literal type="number" pos:start="15:28" pos:end="15:28">1</literal> <operator pos:start="15:30" pos:end="15:31">&lt;&lt;</operator> <literal type="number" pos:start="15:33" pos:end="15:33">7</literal><operator pos:start="15:34" pos:end="15:34">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">				<comment type="block" pos:start="15:65" pos:end="15:77">/* PERM_ON */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:10">on</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:19">period</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="29:5">else <block pos:start="19:10" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:61">

        <expr_stmt pos:start="21:9" pos:end="23:34"><expr pos:start="21:9" pos:end="23:33"><name pos:start="21:9" pos:end="21:14">period</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="23:33"><name pos:start="21:18" pos:end="21:25">muldiv64</name><argument_list pos:start="21:26" pos:end="23:33">(<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">ticks</name></expr></argument>, <argument pos:start="21:34" pos:end="21:52"><expr pos:start="21:34" pos:end="21:52"><name pos:start="21:34" pos:end="21:52"><name pos:start="21:34" pos:end="21:36">per</name><index pos:start="21:37" pos:end="21:52">[<expr pos:start="21:38" pos:end="21:51"><name pos:start="21:38" pos:end="21:47"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:47">control</name></name> <operator pos:start="21:49" pos:end="21:49">&amp;</operator> <literal type="number" pos:start="21:51" pos:end="21:51">7</literal></expr>]</index></name></expr></argument>,		<comment type="block" pos:start="21:65" pos:end="21:77">/* PERCTRL */</comment>

                        <argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><literal type="number" pos:start="23:25" pos:end="23:27">256</literal> <operator pos:start="23:29" pos:end="23:29">/</operator> <literal type="number" pos:start="23:31" pos:end="23:32">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:61"><expr pos:start="25:9" pos:end="27:60"><name pos:start="25:9" pos:end="25:10">on</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <ternary pos:start="25:14" pos:end="27:60"><condition pos:start="25:14" pos:end="25:35"><expr pos:start="25:14" pos:end="25:33"><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:20"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">clk</name></name> <operator pos:start="25:22" pos:end="25:23">&amp;&amp;</operator> <name pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:32">power</name></name><operator pos:start="25:33" pos:end="25:33">)</operator></expr> ?</condition><then pos:start="25:37" pos:end="27:56"> <expr pos:start="25:37" pos:end="27:56"><call pos:start="25:37" pos:end="27:56"><name pos:start="25:37" pos:end="25:44">muldiv64</name><argument_list pos:start="25:45" pos:end="27:56">(<argument pos:start="25:46" pos:end="25:50"><expr pos:start="25:46" pos:end="25:50"><name pos:start="25:46" pos:end="25:50">ticks</name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:50"><expr pos:start="27:25" pos:end="27:50"><name pos:start="27:25" pos:end="27:50"><name pos:start="27:25" pos:end="27:27">per</name><index pos:start="27:28" pos:end="27:50">[<expr pos:start="27:29" pos:end="27:49"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:39">control</name></name> <operator pos:start="27:41" pos:end="27:42">&gt;&gt;</operator> <literal type="number" pos:start="27:44" pos:end="27:44">3</literal><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:47">&amp;</operator> <literal type="number" pos:start="27:49" pos:end="27:49">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:53" pos:end="27:55"><expr pos:start="27:53" pos:end="27:55"><literal type="number" pos:start="27:53" pos:end="27:55">256</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="27:58" pos:end="27:60">: <expr pos:start="27:60" pos:end="27:60"><literal type="number" pos:start="27:60" pos:end="27:60">0</literal></expr></else></ternary></expr>;</expr_stmt>	<comment type="block" pos:start="27:65" pos:end="27:76">/* ONCTRL */</comment>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13">timer_del</name><argument_list pos:start="33:14" pos:end="33:20">(<argument pos:start="33:15" pos:end="33:19"><expr pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:19">tm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="55:5"><if pos:start="35:5" pos:end="37:48">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:10">on</name> <operator pos:start="35:12" pos:end="35:13">==</operator> <name pos:start="35:15" pos:end="35:20">period</name> <operator pos:start="35:22" pos:end="35:23">&amp;&amp;</operator> <name pos:start="35:25" pos:end="35:29"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:29">on</name></name> <operator pos:start="35:31" pos:end="35:31">&lt;</operator> <name pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:41">period</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:48"><block_content pos:start="37:9" pos:end="37:48">

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:14">printf</name><argument_list pos:start="37:15" pos:end="37:47">(<argument pos:start="37:16" pos:end="37:32"><expr pos:start="37:16" pos:end="37:32"><literal type="string" pos:start="37:16" pos:end="37:32">"%s: LED is on\n"</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:46"><expr pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:46">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="39:5" pos:end="41:49">else if <condition pos:start="39:13" pos:end="39:30">(<expr pos:start="39:14" pos:end="39:29"><name pos:start="39:14" pos:end="39:15">on</name> <operator pos:start="39:17" pos:end="39:18">==</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal> <operator pos:start="39:22" pos:end="39:23">&amp;&amp;</operator> <name pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:29">on</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:49"><block_content pos:start="41:9" pos:end="41:49">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:14">printf</name><argument_list pos:start="41:15" pos:end="41:48">(<argument pos:start="41:16" pos:end="41:33"><expr pos:start="41:16" pos:end="41:33"><literal type="string" pos:start="41:16" pos:end="41:33">"%s: LED is off\n"</literal></expr></argument>, <argument pos:start="41:36" pos:end="41:47"><expr pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:47">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="43:5" pos:end="55:5">else if <condition pos:start="43:13" pos:end="43:56">(<expr pos:start="43:14" pos:end="43:55"><name pos:start="43:14" pos:end="43:15">on</name> <operator pos:start="43:17" pos:end="43:18">&amp;&amp;</operator> <operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:22">on</name> <operator pos:start="43:24" pos:end="43:25">!=</operator> <name pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:27">s</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:31">on</name></name> <operator pos:start="43:33" pos:end="43:34">||</operator> <name pos:start="43:36" pos:end="43:41">period</name> <operator pos:start="43:43" pos:end="43:44">!=</operator> <name pos:start="43:46" pos:end="43:54"><name pos:start="43:46" pos:end="43:46">s</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:54">period</name></name><operator pos:start="43:55" pos:end="43:55">)</operator></expr>)</condition> <block pos:start="43:58" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:15">

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">cycle</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">on</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:18">on</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">period</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:26">period</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:21">omap_lpg_tick</name><argument_list pos:start="51:22" pos:end="51:24">(<argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:15"><expr pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:9"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:9">on</name></name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:14">on</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:13">period</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:22">period</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
