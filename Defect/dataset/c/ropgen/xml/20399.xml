<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20399.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">disas_cc</name><parameter_list pos:start="1:21" pos:end="1:52">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:51">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:19">sf</name></decl>, <decl pos:start="5:22" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:22" pos:end="5:23">op</name></decl>, <decl pos:start="5:26" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:26" pos:end="5:26">y</name></decl>, <decl pos:start="5:29" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:29" pos:end="5:32">cond</name></decl>, <decl pos:start="5:35" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:35" pos:end="5:36">rn</name></decl>, <decl pos:start="5:39" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:39" pos:end="5:42">nzcv</name></decl>, <decl pos:start="5:45" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:45" pos:end="5:50">is_imm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">label_continue</name> <init pos:start="7:24" pos:end="7:27">= <expr pos:start="7:26" pos:end="7:27"><operator pos:start="7:26" pos:end="7:26">-</operator><literal type="number" pos:start="7:27" pos:end="7:27">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i64</name></type> <name pos:start="9:14" pos:end="9:20">tcg_tmp</name></decl>, <decl pos:start="9:23" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:27">tcg_y</name></decl>, <decl pos:start="9:30" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:30" pos:end="9:35">tcg_rn</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:31"><name pos:start="13:10" pos:end="13:18">extract32</name><argument_list pos:start="13:19" pos:end="13:31">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">insn</name></expr></argument>, <argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><literal type="number" pos:start="13:26" pos:end="13:27">29</literal></expr></argument>, <argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:34" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:28">unallocated_encoding</name><argument_list pos:start="15:29" pos:end="15:31">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:12">insn</name> <operator pos:start="21:14" pos:end="21:14">&amp;</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal> <operator pos:start="21:19" pos:end="21:20">&lt;&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:23">10</literal> <operator pos:start="21:25" pos:end="21:25">|</operator> <literal type="number" pos:start="21:27" pos:end="21:27">1</literal> <operator pos:start="21:29" pos:end="21:30">&lt;&lt;</operator> <literal type="number" pos:start="21:32" pos:end="21:32">4</literal><operator pos:start="21:33" pos:end="21:33">)</operator></expr>)</condition> <block pos:start="21:36" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:28">unallocated_encoding</name><argument_list pos:start="23:29" pos:end="23:31">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:6">sf</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:18">extract32</name><argument_list pos:start="29:19" pos:end="29:31">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">insn</name></expr></argument>, <argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><literal type="number" pos:start="29:26" pos:end="29:27">31</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:6">op</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:31"><name pos:start="31:10" pos:end="31:18">extract32</name><argument_list pos:start="31:19" pos:end="31:31">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">insn</name></expr></argument>, <argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><literal type="number" pos:start="31:26" pos:end="31:27">30</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:10">is_imm</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:35"><name pos:start="33:14" pos:end="33:22">extract32</name><argument_list pos:start="33:23" pos:end="33:35">(<argument pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:27">insn</name></expr></argument>, <argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><literal type="number" pos:start="33:30" pos:end="33:31">11</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:5">y</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:17">extract32</name><argument_list pos:start="35:18" pos:end="35:30">(<argument pos:start="35:19" pos:end="35:22"><expr pos:start="35:19" pos:end="35:22"><name pos:start="35:19" pos:end="35:22">insn</name></expr></argument>, <argument pos:start="35:25" pos:end="35:26"><expr pos:start="35:25" pos:end="35:26"><literal type="number" pos:start="35:25" pos:end="35:26">16</literal></expr></argument>, <argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:33" pos:end="35:64">/* y = rm (reg) or imm5 (imm) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:8">cond</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:33"><name pos:start="37:12" pos:end="37:20">extract32</name><argument_list pos:start="37:21" pos:end="37:33">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">insn</name></expr></argument>, <argument pos:start="37:28" pos:end="37:29"><expr pos:start="37:28" pos:end="37:29"><literal type="number" pos:start="37:28" pos:end="37:29">12</literal></expr></argument>, <argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:6">rn</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:30"><name pos:start="39:10" pos:end="39:18">extract32</name><argument_list pos:start="39:19" pos:end="39:30">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">insn</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">5</literal></expr></argument>, <argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:8">nzcv</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:32"><name pos:start="41:12" pos:end="41:20">extract32</name><argument_list pos:start="41:21" pos:end="41:32">(<argument pos:start="41:22" pos:end="41:25"><expr pos:start="41:22" pos:end="41:25"><name pos:start="41:22" pos:end="41:25">insn</name></expr></argument>, <argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="67:5"><if pos:start="45:5" pos:end="67:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:12">cond</name> <operator pos:start="45:14" pos:end="45:14">&lt;</operator> <literal type="number" pos:start="45:16" pos:end="45:19">0x0e</literal></expr>)</condition> <block pos:start="45:22" pos:end="67:5">{<block_content pos:start="47:9" pos:end="65:35"> <comment type="block" pos:start="45:24" pos:end="45:39">/* not always */</comment>

        <decl_stmt pos:start="47:9" pos:end="47:42"><decl pos:start="47:9" pos:end="47:41"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:23">label_match</name> <init pos:start="47:25" pos:end="47:41">= <expr pos:start="47:27" pos:end="47:41"><call pos:start="47:27" pos:end="47:41"><name pos:start="47:27" pos:end="47:39">gen_new_label</name><argument_list pos:start="47:40" pos:end="47:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:22">label_continue</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:40"><name pos:start="49:26" pos:end="49:38">gen_new_label</name><argument_list pos:start="49:39" pos:end="49:40">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:23">arm_gen_test_cc</name><argument_list pos:start="51:24" pos:end="51:42">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">cond</name></expr></argument>, <argument pos:start="51:31" pos:end="51:41"><expr pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:41">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="53:9" pos:end="53:22">/* nomatch: */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:15">tcg_tmp</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:36"><name pos:start="55:19" pos:end="55:34">tcg_temp_new_i64</name><argument_list pos:start="55:35" pos:end="55:36">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><call pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:24">tcg_gen_movi_i64</name><argument_list pos:start="57:25" pos:end="57:45">(<argument pos:start="57:26" pos:end="57:32"><expr pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:32">tcg_tmp</name></expr></argument>, <argument pos:start="57:35" pos:end="57:44"><expr pos:start="57:35" pos:end="57:44"><name pos:start="57:35" pos:end="57:38">nzcv</name> <operator pos:start="57:40" pos:end="57:41">&lt;&lt;</operator> <literal type="number" pos:start="57:43" pos:end="57:44">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><call pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:20">gen_set_nzcv</name><argument_list pos:start="59:21" pos:end="59:29">(<argument pos:start="59:22" pos:end="59:28"><expr pos:start="59:22" pos:end="59:28"><name pos:start="59:22" pos:end="59:28">tcg_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><call pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:25">tcg_temp_free_i64</name><argument_list pos:start="61:26" pos:end="61:34">(<argument pos:start="61:27" pos:end="61:33"><expr pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:33">tcg_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:18">tcg_gen_br</name><argument_list pos:start="63:19" pos:end="63:34">(<argument pos:start="63:20" pos:end="63:33"><expr pos:start="63:20" pos:end="63:33"><name pos:start="63:20" pos:end="63:33">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><call pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:21">gen_set_label</name><argument_list pos:start="65:22" pos:end="65:34">(<argument pos:start="65:23" pos:end="65:33"><expr pos:start="65:23" pos:end="65:33"><name pos:start="65:23" pos:end="65:33">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:39">/* match, or condition is always */</comment>

    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:15">(<expr pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">is_imm</name></expr>)</condition> <block pos:start="71:17" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:35">

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:13">tcg_y</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:27">new_tmp_a64</name><argument_list pos:start="73:28" pos:end="73:30">(<argument pos:start="73:29" pos:end="73:29"><expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:24">tcg_gen_movi_i64</name><argument_list pos:start="75:25" pos:end="75:34">(<argument pos:start="75:26" pos:end="75:30"><expr pos:start="75:26" pos:end="75:30"><name pos:start="75:26" pos:end="75:30">tcg_y</name></expr></argument>, <argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="81:5">else <block pos:start="77:12" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:30">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:13">tcg_y</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:23">cpu_reg</name><argument_list pos:start="79:24" pos:end="79:29">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">s</name></expr></argument>, <argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:10">tcg_rn</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:27"><name pos:start="83:14" pos:end="83:20">cpu_reg</name><argument_list pos:start="83:21" pos:end="83:27">(<argument pos:start="83:22" pos:end="83:22"><expr pos:start="83:22" pos:end="83:22"><name pos:start="83:22" pos:end="83:22">s</name></expr></argument>, <argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><name pos:start="83:25" pos:end="83:26">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:11">tcg_tmp</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:32"><name pos:start="87:15" pos:end="87:30">tcg_temp_new_i64</name><argument_list pos:start="87:31" pos:end="87:32">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:11">(<expr pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">op</name></expr>)</condition> <block pos:start="89:13" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:47">

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><call pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:18">gen_sub_CC</name><argument_list pos:start="91:19" pos:end="91:46">(<argument pos:start="91:20" pos:end="91:21"><expr pos:start="91:20" pos:end="91:21"><name pos:start="91:20" pos:end="91:21">sf</name></expr></argument>, <argument pos:start="91:24" pos:end="91:30"><expr pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:30">tcg_tmp</name></expr></argument>, <argument pos:start="91:33" pos:end="91:38"><expr pos:start="91:33" pos:end="91:38"><name pos:start="91:33" pos:end="91:38">tcg_rn</name></expr></argument>, <argument pos:start="91:41" pos:end="91:45"><expr pos:start="91:41" pos:end="91:45"><name pos:start="91:41" pos:end="91:45">tcg_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:47">

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><call pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:18">gen_add_CC</name><argument_list pos:start="95:19" pos:end="95:46">(<argument pos:start="95:20" pos:end="95:21"><expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">sf</name></expr></argument>, <argument pos:start="95:24" pos:end="95:30"><expr pos:start="95:24" pos:end="95:30"><name pos:start="95:24" pos:end="95:30">tcg_tmp</name></expr></argument>, <argument pos:start="95:33" pos:end="95:38"><expr pos:start="95:33" pos:end="95:38"><name pos:start="95:33" pos:end="95:38">tcg_rn</name></expr></argument>, <argument pos:start="95:41" pos:end="95:45"><expr pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:45">tcg_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><call pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:21">tcg_temp_free_i64</name><argument_list pos:start="99:22" pos:end="99:30">(<argument pos:start="99:23" pos:end="99:29"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:29">tcg_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:20">(<expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:12">cond</name> <operator pos:start="103:14" pos:end="103:14">&lt;</operator> <literal type="number" pos:start="103:16" pos:end="103:19">0x0e</literal></expr>)</condition> <block pos:start="103:22" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:38"> <comment type="block" pos:start="103:24" pos:end="103:37">/* continue */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><call pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:21">gen_set_label</name><argument_list pos:start="105:22" pos:end="105:37">(<argument pos:start="105:23" pos:end="105:36"><expr pos:start="105:23" pos:end="105:36"><name pos:start="105:23" pos:end="105:36">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
