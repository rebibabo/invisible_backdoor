<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8434.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">MPA_encode_init</name><parameter_list pos:start="1:20" pos:end="1:42">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="227:1">{<block_content pos:start="5:5" pos:end="225:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MpegAudioContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">freq</name> <init pos:start="7:14" pos:end="7:33">= <expr pos:start="7:16" pos:end="7:33"><name pos:start="7:16" pos:end="7:33"><name pos:start="7:16" pos:end="7:20">avctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:33">sample_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">bitrate</name> <init pos:start="9:17" pos:end="9:33">= <expr pos:start="9:19" pos:end="9:33"><name pos:start="9:19" pos:end="9:33"><name pos:start="9:19" pos:end="9:23">avctx</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">bit_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">channels</name> <init pos:start="11:18" pos:end="11:34">= <expr pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:24">avctx</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">v</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:11">a</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">channels</name> <operator pos:start="19:18" pos:end="19:18">&gt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">2</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:11">bitrate</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:21">bitrate</name> <operator pos:start="23:23" pos:end="23:23">/</operator> <literal type="number" pos:start="23:25" pos:end="23:28">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">nb_channels</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:29">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">freq</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:18">freq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">bit_rate</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:25">bitrate</name> <operator pos:start="29:27" pos:end="29:27">*</operator> <literal type="number" pos:start="29:29" pos:end="29:32">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">frame_size</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:38">MPA_FRAME_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">key_frame</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:27" pos:end="33:48">/* always key frame */</comment>



    <comment type="block" pos:start="37:5" pos:end="37:23">/* encoding freq */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:15"><expr pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">lsf</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="55:5">for<control pos:start="41:8" pos:end="41:20">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><literal type="number" pos:start="41:15" pos:end="41:15">3</literal></expr>;</condition><incr pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:17">i</name><operator pos:start="41:18" pos:end="41:19">++</operator></expr></incr>)</control> <block pos:start="41:22" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:36">(<expr pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:24">mpa_freq_tab</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">i</name></expr>]</index></name> <operator pos:start="43:29" pos:end="43:30">==</operator> <name pos:start="43:32" pos:end="43:35">freq</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18"> 

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:42">(<expr pos:start="47:13" pos:end="47:41"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:25">mpa_freq_tab</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name> <operator pos:start="47:30" pos:end="47:30">/</operator> <literal type="number" pos:start="47:32" pos:end="47:32">2</literal><operator pos:start="47:33" pos:end="47:33">)</operator> <operator pos:start="47:35" pos:end="47:36">==</operator> <name pos:start="47:38" pos:end="47:41">freq</name></expr>)</condition> <block pos:start="47:44" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:18">

            <expr_stmt pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">lsf</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="57:5" pos:end="59:18"><if pos:start="57:5" pos:end="59:18">if <condition pos:start="57:8" pos:end="57:15">(<expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">i</name> <operator pos:start="57:11" pos:end="57:12">==</operator> <literal type="number" pos:start="57:14" pos:end="57:14">3</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:18"><block_content pos:start="59:9" pos:end="59:18">

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">freq_index</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:21">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:38">/* encoding bitrate &amp; frequency */</comment>

    <for pos:start="67:5" pos:end="73:5">for<control pos:start="67:8" pos:end="67:21">(<init pos:start="67:9" pos:end="67:12"><expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:9">i</name><operator pos:start="67:10" pos:end="67:10">=</operator><literal type="number" pos:start="67:11" pos:end="67:11">0</literal></expr>;</init><condition pos:start="67:13" pos:end="67:17"><expr pos:start="67:13" pos:end="67:16"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">&lt;</operator><literal type="number" pos:start="67:15" pos:end="67:16">15</literal></expr>;</condition><incr pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><name pos:start="67:18" pos:end="67:18">i</name><operator pos:start="67:19" pos:end="67:20">++</operator></expr></incr>)</control> <block pos:start="67:23" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <if_stmt pos:start="69:9" pos:end="71:18"><if pos:start="69:9" pos:end="71:18">if <condition pos:start="69:12" pos:end="69:53">(<expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:27">mpa_bitrate_tab</name><index pos:start="69:28" pos:end="69:35">[<expr pos:start="69:29" pos:end="69:34"><name pos:start="69:29" pos:end="69:34"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:34">lsf</name></name></expr>]</index><index pos:start="69:36" pos:end="69:38">[<expr pos:start="69:37" pos:end="69:37"><literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr>]</index><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr>]</index></name> <operator pos:start="69:43" pos:end="69:44">==</operator> <name pos:start="69:46" pos:end="69:52">bitrate</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:18"><block_content pos:start="71:13" pos:end="71:18"> 

            <break pos:start="71:13" pos:end="71:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:9">i</name> <operator pos:start="75:11" pos:end="75:12">==</operator> <literal type="number" pos:start="75:14" pos:end="75:15">15</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:20">bitrate_index</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:24">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:45">/* compute total header size &amp; pad bit */</comment>

    

    <expr_stmt pos:start="87:5" pos:end="87:64"><expr pos:start="87:5" pos:end="87:63"><name pos:start="87:5" pos:end="87:5">a</name> <operator pos:start="87:7" pos:end="87:7">=</operator> <operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:14">float</name><operator pos:start="87:15" pos:end="87:15">)</operator><operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:23">bitrate</name> <operator pos:start="87:25" pos:end="87:25">*</operator> <literal type="number" pos:start="87:27" pos:end="87:30">1000</literal> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:47">MPA_FRAME_SIZE</name><operator pos:start="87:48" pos:end="87:48">)</operator> <operator pos:start="87:50" pos:end="87:50">/</operator> <operator pos:start="87:52" pos:end="87:52">(</operator><name pos:start="87:53" pos:end="87:56">freq</name> <operator pos:start="87:58" pos:end="87:58">*</operator> <literal type="number" pos:start="87:60" pos:end="87:62">8.0</literal><operator pos:start="87:63" pos:end="87:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:17">frame_size</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <operator pos:start="89:21" pos:end="89:21">(</operator><operator pos:start="89:22" pos:end="89:22">(</operator><name pos:start="89:23" pos:end="89:25">int</name><operator pos:start="89:26" pos:end="89:26">)</operator><name pos:start="89:27" pos:end="89:27">a</name><operator pos:start="89:28" pos:end="89:28">)</operator> <operator pos:start="89:30" pos:end="89:30">*</operator> <literal type="number" pos:start="89:32" pos:end="89:32">8</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:50">/* frame fractional size to compute padding */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:17">frame_frac</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:57"><expr pos:start="97:5" pos:end="97:56"><name pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:22">frame_frac_incr</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <operator pos:start="97:26" pos:end="97:26">(</operator><name pos:start="97:27" pos:end="97:29">int</name><operator pos:start="97:30" pos:end="97:30">)</operator><operator pos:start="97:31" pos:end="97:31">(</operator><operator pos:start="97:32" pos:end="97:32">(</operator><name pos:start="97:33" pos:end="97:33">a</name> <operator pos:start="97:35" pos:end="97:35">-</operator> <call pos:start="97:37" pos:end="97:44"><name pos:start="97:37" pos:end="97:41">floor</name><argument_list pos:start="97:42" pos:end="97:44">(<argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><name pos:start="97:43" pos:end="97:43">a</name></expr></argument>)</argument_list></call><operator pos:start="97:45" pos:end="97:45">)</operator> <operator pos:start="97:47" pos:end="97:47">*</operator> <literal type="number" pos:start="97:49" pos:end="97:55">65536.0</literal><operator pos:start="97:56" pos:end="97:56">)</operator></expr>;</expr_stmt>

    

    <comment type="block" pos:start="101:5" pos:end="101:43">/* select the right allocation table */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:67"><expr pos:start="103:5" pos:end="103:66"><name pos:start="103:5" pos:end="103:9">table</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <call pos:start="103:13" pos:end="103:66"><name pos:start="103:13" pos:end="103:27">l2_select_table</name><argument_list pos:start="103:28" pos:end="103:66">(<argument pos:start="103:29" pos:end="103:35"><expr pos:start="103:29" pos:end="103:35"><name pos:start="103:29" pos:end="103:35">bitrate</name></expr></argument>, <argument pos:start="103:38" pos:end="103:51"><expr pos:start="103:38" pos:end="103:51"><name pos:start="103:38" pos:end="103:51"><name pos:start="103:38" pos:end="103:38">s</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:51">nb_channels</name></name></expr></argument>, <argument pos:start="103:54" pos:end="103:57"><expr pos:start="103:54" pos:end="103:57"><name pos:start="103:54" pos:end="103:57">freq</name></expr></argument>, <argument pos:start="103:60" pos:end="103:65"><expr pos:start="103:60" pos:end="103:65"><name pos:start="103:60" pos:end="103:65"><name pos:start="103:60" pos:end="103:60">s</name><operator pos:start="103:61" pos:end="103:62">-&gt;</operator><name pos:start="103:63" pos:end="103:65">lsf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:33">/* number of used subbands */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">sblimit</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:37"><name pos:start="109:18" pos:end="109:30">sblimit_table</name><index pos:start="109:31" pos:end="109:37">[<expr pos:start="109:32" pos:end="109:36"><name pos:start="109:32" pos:end="109:36">table</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="116:0"><expr pos:start="111:5" pos:end="111:40"><name pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:18">alloc_table</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:40"><name pos:start="111:22" pos:end="111:33">alloc_tables</name><index pos:start="111:34" pos:end="111:40">[<expr pos:start="111:35" pos:end="111:39"><name pos:start="111:35" pos:end="111:39">table</name></expr>]</index></name></expr>;</expr_stmt>



<cpp:ifdef pos:start="115:1" pos:end="115:12">#<cpp:directive pos:start="115:2" pos:end="115:6">ifdef</cpp:directive> <name pos:start="115:8" pos:end="115:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="117:5" pos:end="122:0"><expr pos:start="117:5" pos:end="119:67"><call pos:start="117:5" pos:end="119:67"><name pos:start="117:5" pos:end="117:10">printf</name><argument_list pos:start="117:11" pos:end="119:67">(<argument pos:start="117:12" pos:end="117:71"><expr pos:start="117:12" pos:end="117:71"><literal type="string" pos:start="117:12" pos:end="117:71">"%d kb/s, %d Hz, frame_size=%d bits, table=%d, padincr=%x\n"</literal></expr></argument>, 

           <argument pos:start="119:12" pos:end="119:18"><expr pos:start="119:12" pos:end="119:18"><name pos:start="119:12" pos:end="119:18">bitrate</name></expr></argument>, <argument pos:start="119:21" pos:end="119:24"><expr pos:start="119:21" pos:end="119:24"><name pos:start="119:21" pos:end="119:24">freq</name></expr></argument>, <argument pos:start="119:27" pos:end="119:39"><expr pos:start="119:27" pos:end="119:39"><name pos:start="119:27" pos:end="119:39"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:39">frame_size</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:46"><expr pos:start="119:42" pos:end="119:46"><name pos:start="119:42" pos:end="119:46">table</name></expr></argument>, <argument pos:start="119:49" pos:end="119:66"><expr pos:start="119:49" pos:end="119:66"><name pos:start="119:49" pos:end="119:66"><name pos:start="119:49" pos:end="119:49">s</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:66">frame_frac_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>



    <for pos:start="125:5" pos:end="127:33">for<control pos:start="125:8" pos:end="125:33">(<init pos:start="125:9" pos:end="125:12"><expr pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:9">i</name><operator pos:start="125:10" pos:end="125:10">=</operator><literal type="number" pos:start="125:11" pos:end="125:11">0</literal></expr>;</init><condition pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:13">i</name><operator pos:start="125:14" pos:end="125:14">&lt;</operator><name pos:start="125:15" pos:end="125:28"><name pos:start="125:15" pos:end="125:15">s</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:28">nb_channels</name></name></expr>;</condition><incr pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:30">i</name><operator pos:start="125:31" pos:end="125:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:9" pos:end="127:33"><block_content pos:start="127:9" pos:end="127:33">

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:25">samples_offset</name><index pos:start="127:26" pos:end="127:28">[<expr pos:start="127:27" pos:end="127:27"><name pos:start="127:27" pos:end="127:27">i</name></expr>]</index></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <literal type="number" pos:start="127:32" pos:end="127:32">0</literal></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="131:5" pos:end="147:5">for<control pos:start="131:8" pos:end="131:22">(<init pos:start="131:9" pos:end="131:12"><expr pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:9">i</name><operator pos:start="131:10" pos:end="131:10">=</operator><literal type="number" pos:start="131:11" pos:end="131:11">0</literal></expr>;</init><condition pos:start="131:13" pos:end="131:18"><expr pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:13">i</name><operator pos:start="131:14" pos:end="131:14">&lt;</operator><literal type="number" pos:start="131:15" pos:end="131:17">257</literal></expr>;</condition><incr pos:start="131:19" pos:end="131:21"><expr pos:start="131:19" pos:end="131:21"><name pos:start="131:19" pos:end="131:19">i</name><operator pos:start="131:20" pos:end="131:21">++</operator></expr></incr>)</control> <block pos:start="131:24" pos:end="147:5">{<block_content pos:start="133:9" pos:end="145:37">

        <decl_stmt pos:start="133:9" pos:end="133:14"><decl pos:start="133:9" pos:end="133:13"><type pos:start="133:9" pos:end="133:11"><name pos:start="133:9" pos:end="133:11">int</name></type> <name pos:start="133:13" pos:end="133:13">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:9">v</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:28"><name pos:start="135:14" pos:end="135:25">mpa_enwindow</name><index pos:start="135:26" pos:end="135:28">[<expr pos:start="135:27" pos:end="135:27"><name pos:start="135:27" pos:end="135:27">i</name></expr>]</index></name> <operator pos:start="135:30" pos:end="135:30">+</operator> <literal type="number" pos:start="135:32" pos:end="135:32">2</literal><operator pos:start="135:33" pos:end="135:33">)</operator> <operator pos:start="135:35" pos:end="135:36">&gt;&gt;</operator> <literal type="number" pos:start="135:38" pos:end="135:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:19">filter_bank</name><index pos:start="137:20" pos:end="137:22">[<expr pos:start="137:21" pos:end="137:21"><name pos:start="137:21" pos:end="137:21">i</name></expr>]</index></name> <operator pos:start="137:24" pos:end="137:24">=</operator> <name pos:start="137:26" pos:end="137:26">v</name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:19"><if pos:start="139:9" pos:end="141:19">if <condition pos:start="139:12" pos:end="139:26">(<expr pos:start="139:13" pos:end="139:25"><operator pos:start="139:13" pos:end="139:13">(</operator><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">&amp;</operator> <literal type="number" pos:start="139:18" pos:end="139:19">63</literal><operator pos:start="139:20" pos:end="139:20">)</operator> <operator pos:start="139:22" pos:end="139:23">!=</operator> <literal type="number" pos:start="139:25" pos:end="139:25">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:19"><block_content pos:start="141:13" pos:end="141:19">

            <expr_stmt pos:start="141:13" pos:end="141:19"><expr pos:start="141:13" pos:end="141:18"><name pos:start="141:13" pos:end="141:13">v</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <operator pos:start="141:17" pos:end="141:17">-</operator><name pos:start="141:18" pos:end="141:18">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="143:9" pos:end="145:37"><if pos:start="143:9" pos:end="145:37">if <condition pos:start="143:12" pos:end="143:19">(<expr pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:13">i</name> <operator pos:start="143:15" pos:end="143:16">!=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:37"><block_content pos:start="145:13" pos:end="145:37">

            <expr_stmt pos:start="145:13" pos:end="145:37"><expr pos:start="145:13" pos:end="145:36"><name pos:start="145:13" pos:end="145:32"><name pos:start="145:13" pos:end="145:23">filter_bank</name><index pos:start="145:24" pos:end="145:32">[<expr pos:start="145:25" pos:end="145:31"><literal type="number" pos:start="145:25" pos:end="145:27">512</literal> <operator pos:start="145:29" pos:end="145:29">-</operator> <name pos:start="145:31" pos:end="145:31">i</name></expr>]</index></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:36">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="151:5" pos:end="175:5">for<control pos:start="151:8" pos:end="151:21">(<init pos:start="151:9" pos:end="151:12"><expr pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:9">i</name><operator pos:start="151:10" pos:end="151:10">=</operator><literal type="number" pos:start="151:11" pos:end="151:11">0</literal></expr>;</init><condition pos:start="151:13" pos:end="151:17"><expr pos:start="151:13" pos:end="151:16"><name pos:start="151:13" pos:end="151:13">i</name><operator pos:start="151:14" pos:end="151:14">&lt;</operator><literal type="number" pos:start="151:15" pos:end="151:16">64</literal></expr>;</condition><incr pos:start="151:18" pos:end="151:20"><expr pos:start="151:18" pos:end="151:20"><name pos:start="151:18" pos:end="151:18">i</name><operator pos:start="151:19" pos:end="151:20">++</operator></expr></incr>)</control> <block pos:start="151:23" pos:end="175:5">{<block_content pos:start="153:9" pos:end="174:0">

        <expr_stmt pos:start="153:9" pos:end="153:55"><expr pos:start="153:9" pos:end="153:54"><name pos:start="153:9" pos:end="153:9">v</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:16">int</name><operator pos:start="153:17" pos:end="153:17">)</operator><operator pos:start="153:18" pos:end="153:18">(</operator><call pos:start="153:19" pos:end="153:41"><name pos:start="153:19" pos:end="153:21">pow</name><argument_list pos:start="153:22" pos:end="153:41">(<argument pos:start="153:23" pos:end="153:25"><expr pos:start="153:23" pos:end="153:25"><literal type="number" pos:start="153:23" pos:end="153:25">2.0</literal></expr></argument>, <argument pos:start="153:28" pos:end="153:40"><expr pos:start="153:28" pos:end="153:40"><operator pos:start="153:28" pos:end="153:28">(</operator><literal type="number" pos:start="153:29" pos:end="153:31">3</literal> <operator pos:start="153:31" pos:end="153:31">-</operator> <name pos:start="153:33" pos:end="153:33">i</name><operator pos:start="153:34" pos:end="153:34">)</operator> <operator pos:start="153:36" pos:end="153:36">/</operator> <literal type="number" pos:start="153:38" pos:end="153:40">3.0</literal></expr></argument>)</argument_list></call> <operator pos:start="153:43" pos:end="153:43">*</operator> <operator pos:start="153:45" pos:end="153:45">(</operator><literal type="number" pos:start="153:46" pos:end="153:46">1</literal> <operator pos:start="153:48" pos:end="153:49">&lt;&lt;</operator> <literal type="number" pos:start="153:51" pos:end="153:52">20</literal><operator pos:start="153:53" pos:end="153:53">)</operator><operator pos:start="153:54" pos:end="153:54">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:18"><if pos:start="155:9" pos:end="157:18">if <condition pos:start="155:12" pos:end="155:19">(<expr pos:start="155:13" pos:end="155:18"><name pos:start="155:13" pos:end="155:13">v</name> <operator pos:start="155:15" pos:end="155:16">&lt;=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">0</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:18"><block_content pos:start="157:13" pos:end="157:18">

            <expr_stmt pos:start="157:13" pos:end="157:18"><expr pos:start="157:13" pos:end="157:17"><name pos:start="157:13" pos:end="157:13">v</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <literal type="number" pos:start="157:17" pos:end="157:17">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="162:0"><expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:26">scale_factor_table</name><index pos:start="159:27" pos:end="159:29">[<expr pos:start="159:28" pos:end="159:28"><name pos:start="159:28" pos:end="159:28">i</name></expr>]</index></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:33">v</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="161:1" pos:end="161:17">#<cpp:directive pos:start="161:2" pos:end="161:6">ifdef</cpp:directive> <name pos:start="161:8" pos:end="161:17">USE_FLOATS</name></cpp:ifdef>

        <expr_stmt pos:start="163:9" pos:end="168:0"><expr pos:start="163:9" pos:end="163:79"><name pos:start="163:9" pos:end="163:33"><name pos:start="163:9" pos:end="163:30">scale_factor_inv_table</name><index pos:start="163:31" pos:end="163:33">[<expr pos:start="163:32" pos:end="163:32"><name pos:start="163:32" pos:end="163:32">i</name></expr>]</index></name> <operator pos:start="163:35" pos:end="163:35">=</operator> <call pos:start="163:37" pos:end="163:60"><name pos:start="163:37" pos:end="163:39">pow</name><argument_list pos:start="163:40" pos:end="163:60">(<argument pos:start="163:41" pos:end="163:43"><expr pos:start="163:41" pos:end="163:43"><literal type="number" pos:start="163:41" pos:end="163:43">2.0</literal></expr></argument>, <argument pos:start="163:46" pos:end="163:59"><expr pos:start="163:46" pos:end="163:59"><operator pos:start="163:46" pos:end="163:46">-</operator><operator pos:start="163:47" pos:end="163:47">(</operator><literal type="number" pos:start="163:48" pos:end="163:50">3</literal> <operator pos:start="163:50" pos:end="163:50">-</operator> <name pos:start="163:52" pos:end="163:52">i</name><operator pos:start="163:53" pos:end="163:53">)</operator> <operator pos:start="163:55" pos:end="163:55">/</operator> <literal type="number" pos:start="163:57" pos:end="163:59">3.0</literal></expr></argument>)</argument_list></call> <operator pos:start="163:62" pos:end="163:62">/</operator> <operator pos:start="163:64" pos:end="163:64">(</operator><name pos:start="163:65" pos:end="163:69">float</name><operator pos:start="163:70" pos:end="163:70">)</operator><operator pos:start="163:71" pos:end="163:71">(</operator><literal type="number" pos:start="163:72" pos:end="163:72">1</literal> <operator pos:start="163:74" pos:end="163:75">&lt;&lt;</operator> <literal type="number" pos:start="163:77" pos:end="163:78">20</literal><operator pos:start="163:79" pos:end="163:79">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="165:1" pos:end="165:5">#<cpp:directive pos:start="165:2" pos:end="165:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="167:1" pos:end="167:12">#<cpp:directive pos:start="167:2" pos:end="167:7">define</cpp:directive> <cpp:macro pos:start="167:9" pos:end="167:9"><name pos:start="167:9" pos:end="167:9">P</name></cpp:macro> <cpp:value pos:start="167:11" pos:end="167:12">15</cpp:value></cpp:define>

        <expr_stmt pos:start="169:9" pos:end="169:49"><expr pos:start="169:9" pos:end="169:48"><name pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:26">scale_factor_shift</name><index pos:start="169:27" pos:end="169:29">[<expr pos:start="169:28" pos:end="169:28"><name pos:start="169:28" pos:end="169:28">i</name></expr>]</index></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <literal type="number" pos:start="169:33" pos:end="169:36">21</literal> <operator pos:start="169:36" pos:end="169:36">-</operator> <name pos:start="169:38" pos:end="169:38">P</name> <operator pos:start="169:40" pos:end="169:40">-</operator> <operator pos:start="169:42" pos:end="169:42">(</operator><name pos:start="169:43" pos:end="169:43">i</name> <operator pos:start="169:45" pos:end="169:45">/</operator> <literal type="number" pos:start="169:47" pos:end="169:47">3</literal><operator pos:start="169:48" pos:end="169:48">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="174:0"><expr pos:start="171:9" pos:end="171:65"><name pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:25">scale_factor_mult</name><index pos:start="171:26" pos:end="171:28">[<expr pos:start="171:27" pos:end="171:27"><name pos:start="171:27" pos:end="171:27">i</name></expr>]</index></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <operator pos:start="171:32" pos:end="171:32">(</operator><literal type="number" pos:start="171:33" pos:end="171:33">1</literal> <operator pos:start="171:35" pos:end="171:36">&lt;&lt;</operator> <name pos:start="171:38" pos:end="171:38">P</name><operator pos:start="171:39" pos:end="171:39">)</operator> <operator pos:start="171:41" pos:end="171:41">*</operator> <call pos:start="171:43" pos:end="171:65"><name pos:start="171:43" pos:end="171:45">pow</name><argument_list pos:start="171:46" pos:end="171:65">(<argument pos:start="171:47" pos:end="171:49"><expr pos:start="171:47" pos:end="171:49"><literal type="number" pos:start="171:47" pos:end="171:49">2.0</literal></expr></argument>, <argument pos:start="171:52" pos:end="171:64"><expr pos:start="171:52" pos:end="171:64"><operator pos:start="171:52" pos:end="171:52">(</operator><name pos:start="171:53" pos:end="171:53">i</name> <operator pos:start="171:55" pos:end="171:55">%</operator> <literal type="number" pos:start="171:57" pos:end="171:57">3</literal><operator pos:start="171:58" pos:end="171:58">)</operator> <operator pos:start="171:60" pos:end="171:60">/</operator> <literal type="number" pos:start="171:62" pos:end="171:64">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>

    <for pos:start="177:5" pos:end="203:5">for<control pos:start="177:8" pos:end="177:22">(<init pos:start="177:9" pos:end="177:12"><expr pos:start="177:9" pos:end="177:11"><name pos:start="177:9" pos:end="177:9">i</name><operator pos:start="177:10" pos:end="177:10">=</operator><literal type="number" pos:start="177:11" pos:end="177:11">0</literal></expr>;</init><condition pos:start="177:13" pos:end="177:18"><expr pos:start="177:13" pos:end="177:17"><name pos:start="177:13" pos:end="177:13">i</name><operator pos:start="177:14" pos:end="177:14">&lt;</operator><literal type="number" pos:start="177:15" pos:end="177:17">128</literal></expr>;</condition><incr pos:start="177:19" pos:end="177:21"><expr pos:start="177:19" pos:end="177:21"><name pos:start="177:19" pos:end="177:19">i</name><operator pos:start="177:20" pos:end="177:21">++</operator></expr></incr>)</control> <block pos:start="177:24" pos:end="203:5">{<block_content pos:start="179:9" pos:end="201:32">

        <expr_stmt pos:start="179:9" pos:end="179:19"><expr pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:9">v</name> <operator pos:start="179:11" pos:end="179:11">=</operator> <name pos:start="179:13" pos:end="179:13">i</name> <operator pos:start="179:15" pos:end="179:15">-</operator> <literal type="number" pos:start="179:17" pos:end="179:18">64</literal></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="199:18"><if pos:start="181:9" pos:end="183:18">if <condition pos:start="181:12" pos:end="181:20">(<expr pos:start="181:13" pos:end="181:19"><name pos:start="181:13" pos:end="181:13">v</name> <operator pos:start="181:15" pos:end="181:16">&lt;=</operator> <operator pos:start="181:18" pos:end="181:18">-</operator><literal type="number" pos:start="181:19" pos:end="181:19">3</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:18"><block_content pos:start="183:13" pos:end="183:18">

            <expr_stmt pos:start="183:13" pos:end="183:18"><expr pos:start="183:13" pos:end="183:17"><name pos:start="183:13" pos:end="183:13">v</name> <operator pos:start="183:15" pos:end="183:15">=</operator> <literal type="number" pos:start="183:17" pos:end="183:17">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="185:9" pos:end="187:18">else if <condition pos:start="185:17" pos:end="185:23">(<expr pos:start="185:18" pos:end="185:22"><name pos:start="185:18" pos:end="185:18">v</name> <operator pos:start="185:20" pos:end="185:20">&lt;</operator> <literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:18"><block_content pos:start="187:13" pos:end="187:18">

            <expr_stmt pos:start="187:13" pos:end="187:18"><expr pos:start="187:13" pos:end="187:17"><name pos:start="187:13" pos:end="187:13">v</name> <operator pos:start="187:15" pos:end="187:15">=</operator> <literal type="number" pos:start="187:17" pos:end="187:17">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="189:9" pos:end="191:18">else if <condition pos:start="189:17" pos:end="189:24">(<expr pos:start="189:18" pos:end="189:23"><name pos:start="189:18" pos:end="189:18">v</name> <operator pos:start="189:20" pos:end="189:21">==</operator> <literal type="number" pos:start="189:23" pos:end="189:23">0</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:18"><block_content pos:start="191:13" pos:end="191:18">

            <expr_stmt pos:start="191:13" pos:end="191:18"><expr pos:start="191:13" pos:end="191:17"><name pos:start="191:13" pos:end="191:13">v</name> <operator pos:start="191:15" pos:end="191:15">=</operator> <literal type="number" pos:start="191:17" pos:end="191:17">2</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="193:9" pos:end="195:18">else if <condition pos:start="193:17" pos:end="193:23">(<expr pos:start="193:18" pos:end="193:22"><name pos:start="193:18" pos:end="193:18">v</name> <operator pos:start="193:20" pos:end="193:20">&lt;</operator> <literal type="number" pos:start="193:22" pos:end="193:22">3</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:18"><block_content pos:start="195:13" pos:end="195:18">

            <expr_stmt pos:start="195:13" pos:end="195:18"><expr pos:start="195:13" pos:end="195:17"><name pos:start="195:13" pos:end="195:13">v</name> <operator pos:start="195:15" pos:end="195:15">=</operator> <literal type="number" pos:start="195:17" pos:end="195:17">3</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="197:9" pos:end="199:18">else<block type="pseudo" pos:start="199:13" pos:end="199:18"><block_content pos:start="199:13" pos:end="199:18"> 

            <expr_stmt pos:start="199:13" pos:end="199:18"><expr pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:13">v</name> <operator pos:start="199:15" pos:end="199:15">=</operator> <literal type="number" pos:start="199:17" pos:end="199:17">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:32"><expr pos:start="201:9" pos:end="201:31"><name pos:start="201:9" pos:end="201:27"><name pos:start="201:9" pos:end="201:24">scale_diff_table</name><index pos:start="201:25" pos:end="201:27">[<expr pos:start="201:26" pos:end="201:26"><name pos:start="201:26" pos:end="201:26">i</name></expr>]</index></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <name pos:start="201:31" pos:end="201:31">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="207:5" pos:end="221:5">for<control pos:start="207:8" pos:end="207:21">(<init pos:start="207:9" pos:end="207:12"><expr pos:start="207:9" pos:end="207:11"><name pos:start="207:9" pos:end="207:9">i</name><operator pos:start="207:10" pos:end="207:10">=</operator><literal type="number" pos:start="207:11" pos:end="207:11">0</literal></expr>;</init><condition pos:start="207:13" pos:end="207:17"><expr pos:start="207:13" pos:end="207:16"><name pos:start="207:13" pos:end="207:13">i</name><operator pos:start="207:14" pos:end="207:14">&lt;</operator><literal type="number" pos:start="207:15" pos:end="207:16">17</literal></expr>;</condition><incr pos:start="207:18" pos:end="207:20"><expr pos:start="207:18" pos:end="207:20"><name pos:start="207:18" pos:end="207:18">i</name><operator pos:start="207:19" pos:end="207:20">++</operator></expr></incr>)</control> <block pos:start="207:23" pos:end="221:5">{<block_content pos:start="209:9" pos:end="219:37">

        <expr_stmt pos:start="209:9" pos:end="209:26"><expr pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:9">v</name> <operator pos:start="209:11" pos:end="209:11">=</operator> <name pos:start="209:13" pos:end="209:25"><name pos:start="209:13" pos:end="209:22">quant_bits</name><index pos:start="209:23" pos:end="209:25">[<expr pos:start="209:24" pos:end="209:24"><name pos:start="209:24" pos:end="209:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="217:22"><if pos:start="211:9" pos:end="213:19">if <condition pos:start="211:12" pos:end="211:18">(<expr pos:start="211:13" pos:end="211:17"><name pos:start="211:13" pos:end="211:13">v</name> <operator pos:start="211:15" pos:end="211:15">&lt;</operator> <literal type="number" pos:start="211:17" pos:end="211:17">0</literal></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:19"><block_content pos:start="213:13" pos:end="213:19"> 

            <expr_stmt pos:start="213:13" pos:end="213:19"><expr pos:start="213:13" pos:end="213:18"><name pos:start="213:13" pos:end="213:13">v</name> <operator pos:start="213:15" pos:end="213:15">=</operator> <operator pos:start="213:17" pos:end="213:17">-</operator><name pos:start="213:18" pos:end="213:18">v</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="215:9" pos:end="217:22">else<block type="pseudo" pos:start="217:13" pos:end="217:22"><block_content pos:start="217:13" pos:end="217:22">

            <expr_stmt pos:start="217:13" pos:end="217:22"><expr pos:start="217:13" pos:end="217:21"><name pos:start="217:13" pos:end="217:13">v</name> <operator pos:start="217:15" pos:end="217:15">=</operator> <name pos:start="217:17" pos:end="217:17">v</name> <operator pos:start="217:19" pos:end="217:19">*</operator> <literal type="number" pos:start="217:21" pos:end="217:21">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:37"><expr pos:start="219:9" pos:end="219:36"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:24">total_quant_bits</name><index pos:start="219:25" pos:end="219:27">[<expr pos:start="219:26" pos:end="219:26"><name pos:start="219:26" pos:end="219:26">i</name></expr>]</index></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <literal type="number" pos:start="219:31" pos:end="219:32">12</literal> <operator pos:start="219:34" pos:end="219:34">*</operator> <name pos:start="219:36" pos:end="219:36">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
