<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6737.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">iscsi_nop_timed_event</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:40"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:47">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IscsiLun</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">iscsilun</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:47"><expr pos:start="9:5" pos:end="9:46"><call pos:start="9:5" pos:end="9:46"><name pos:start="9:5" pos:end="9:23">aio_context_acquire</name><argument_list pos:start="9:24" pos:end="9:46">(<argument pos:start="9:25" pos:end="9:45"><expr pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:32">iscsilun</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:45">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:70">(<expr pos:start="11:9" pos:end="11:69"><call pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:32">iscsi_get_nops_in_flight</name><argument_list pos:start="11:33" pos:end="11:49">(<argument pos:start="11:34" pos:end="11:48"><expr pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:48"><name pos:start="11:34" pos:end="11:41">iscsilun</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:48">iscsi</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:51" pos:end="11:52">&gt;=</operator> <name pos:start="11:54" pos:end="11:69">MAX_NOP_FAILURES</name></expr>)</condition> <block pos:start="11:72" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:43">

        <expr_stmt pos:start="13:9" pos:end="13:60"><expr pos:start="13:9" pos:end="13:59"><call pos:start="13:9" pos:end="13:59"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="13:59">(<argument pos:start="13:22" pos:end="13:58"><expr pos:start="13:22" pos:end="13:58"><literal type="string" pos:start="13:22" pos:end="13:58">"iSCSI: NOP timeout. Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:16">iscsilun</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:35">request_timed_out</name></name> <operator pos:start="15:37" pos:end="15:37">=</operator> <name pos:start="15:39" pos:end="15:42">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="17:78">(<expr pos:start="17:16" pos:end="17:77"><call pos:start="17:16" pos:end="17:72"><name pos:start="17:16" pos:end="17:34">iscsi_nop_out_async</name><argument_list pos:start="17:35" pos:end="17:72">(<argument pos:start="17:36" pos:end="17:50"><expr pos:start="17:36" pos:end="17:50"><name pos:start="17:36" pos:end="17:50"><name pos:start="17:36" pos:end="17:43">iscsilun</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:50">iscsi</name></name></expr></argument>, <argument pos:start="17:53" pos:end="17:56"><expr pos:start="17:53" pos:end="17:56"><name pos:start="17:53" pos:end="17:56">NULL</name></expr></argument>, <argument pos:start="17:59" pos:end="17:62"><expr pos:start="17:59" pos:end="17:62"><name pos:start="17:59" pos:end="17:62">NULL</name></expr></argument>, <argument pos:start="17:65" pos:end="17:65"><expr pos:start="17:65" pos:end="17:65"><literal type="number" pos:start="17:65" pos:end="17:65">0</literal></expr></argument>, <argument pos:start="17:68" pos:end="17:71"><expr pos:start="17:68" pos:end="17:71"><name pos:start="17:68" pos:end="17:71">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="17:74" pos:end="17:75">!=</operator> <literal type="number" pos:start="17:77" pos:end="17:77">0</literal></expr>)</condition> <block pos:start="17:80" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:79"><expr pos:start="19:9" pos:end="19:78"><call pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:78">(<argument pos:start="19:22" pos:end="19:77"><expr pos:start="19:22" pos:end="19:77"><literal type="string" pos:start="19:22" pos:end="19:77">"iSCSI: failed to sent NOP-Out. Disabling NOP messages."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:90"><expr pos:start="27:5" pos:end="27:89"><call pos:start="27:5" pos:end="27:89"><name pos:start="27:5" pos:end="27:13">timer_mod</name><argument_list pos:start="27:14" pos:end="27:89">(<argument pos:start="27:15" pos:end="27:33"><expr pos:start="27:15" pos:end="27:33"><name pos:start="27:15" pos:end="27:33"><name pos:start="27:15" pos:end="27:22">iscsilun</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:33">nop_timer</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:88"><expr pos:start="27:36" pos:end="27:88"><call pos:start="27:36" pos:end="27:73"><name pos:start="27:36" pos:end="27:52">qemu_clock_get_ms</name><argument_list pos:start="27:53" pos:end="27:73">(<argument pos:start="27:54" pos:end="27:72"><expr pos:start="27:54" pos:end="27:72"><name pos:start="27:54" pos:end="27:72">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call> <operator pos:start="27:75" pos:end="27:75">+</operator> <name pos:start="27:77" pos:end="27:88">NOP_INTERVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:20">iscsi_set_events</name><argument_list pos:start="29:21" pos:end="29:30">(<argument pos:start="29:22" pos:end="29:29"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:29">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="33:1" pos:end="33:4"><name pos:start="33:1" pos:end="33:3">out</name>:</label>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:23">aio_context_release</name><argument_list pos:start="35:24" pos:end="35:46">(<argument pos:start="35:25" pos:end="35:45"><expr pos:start="35:25" pos:end="35:45"><name pos:start="35:25" pos:end="35:45"><name pos:start="35:25" pos:end="35:32">iscsilun</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:45">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
