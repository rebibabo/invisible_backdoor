<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14760.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">parse_type_number</name><parameter_list pos:start="1:30" pos:end="3:43">(<parameter pos:start="1:31" pos:end="1:40"><decl pos:start="1:31" pos:end="1:40"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:37">Visitor</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">v</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">name</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:71"><decl pos:start="1:61" pos:end="1:71"><type pos:start="1:61" pos:end="1:71"><name pos:start="1:61" pos:end="1:66">double</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">obj</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:35">Error</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier><modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">StringInputVisitor</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">siv</name> <init pos:start="7:29" pos:end="7:39">= <expr pos:start="7:31" pos:end="7:39"><call pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:36">to_siv</name><argument_list pos:start="7:37" pos:end="7:39">(<argument pos:start="7:38" pos:end="7:38"><expr pos:start="7:38" pos:end="7:38"><name pos:start="7:38" pos:end="7:38">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">endp</name> <init pos:start="9:16" pos:end="9:37">= <expr pos:start="9:18" pos:end="9:37"><operator pos:start="9:18" pos:end="9:18">(</operator><name pos:start="9:19" pos:end="9:22">char</name> <operator pos:start="9:24" pos:end="9:24">*</operator><operator pos:start="9:25" pos:end="9:25">)</operator> <name pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:29">siv</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:37">string</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:14">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:9">errno</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">siv</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">string</name></name></expr>)</condition> <block pos:start="17:22" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:41">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:11">val</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:40"><name pos:start="19:15" pos:end="19:20">strtod</name><argument_list pos:start="19:21" pos:end="19:40">(<argument pos:start="19:22" pos:end="19:32"><expr pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:24">siv</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:32">string</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:39"><expr pos:start="19:35" pos:end="19:39"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:39">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:12">siv</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:20">string</name></name> <operator pos:start="23:22" pos:end="23:23">||</operator> <name pos:start="23:25" pos:end="23:29">errno</name> <operator pos:start="23:31" pos:end="23:32">||</operator> <name pos:start="23:34" pos:end="23:37">endp</name> <operator pos:start="23:39" pos:end="23:40">==</operator> <name pos:start="23:42" pos:end="23:52"><name pos:start="23:42" pos:end="23:44">siv</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:52">string</name></name> <operator pos:start="23:54" pos:end="23:55">||</operator> <operator pos:start="23:57" pos:end="23:57">*</operator><name pos:start="23:58" pos:end="23:61">endp</name></expr>)</condition> <block pos:start="23:64" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:15">

        <expr_stmt pos:start="25:9" pos:end="27:29"><expr pos:start="25:9" pos:end="27:28"><call pos:start="25:9" pos:end="27:28"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="27:28">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:52"><expr pos:start="25:26" pos:end="25:52"><name pos:start="25:26" pos:end="25:52">QERR_INVALID_PARAMETER_TYPE</name></expr></argument>, <argument pos:start="25:55" pos:end="25:74"><expr pos:start="25:55" pos:end="25:74"><ternary pos:start="25:55" pos:end="25:74"><condition pos:start="25:55" pos:end="25:60"><expr pos:start="25:55" pos:end="25:58"><name pos:start="25:55" pos:end="25:58">name</name></expr> ?</condition><then pos:start="25:62" pos:end="25:65"> <expr pos:start="25:62" pos:end="25:65"><name pos:start="25:62" pos:end="25:65">name</name></expr> </then><else pos:start="25:67" pos:end="25:74">: <expr pos:start="25:69" pos:end="25:74"><literal type="string" pos:start="25:69" pos:end="25:74">"null"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><literal type="string" pos:start="27:20" pos:end="27:27">"number"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:15"><expr pos:start="35:5" pos:end="35:14"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:8">obj</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:14">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
