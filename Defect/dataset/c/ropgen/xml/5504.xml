<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5504.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">xan_decode_chroma</name><parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:60">unsigned</name></type> <name pos:start="1:62" pos:end="1:71">chroma_off</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">XanContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">U</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">V</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">uval</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:23">vval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">src</name></decl>, <decl pos:start="13:25" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:32">src_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">mode</name></decl>, <decl pos:start="17:15" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:20">offset</name></decl>, <decl pos:start="17:23" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:30">dec_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:19">chroma_off</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:61">(<expr pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:18">chroma_off</name> <operator pos:start="25:20" pos:end="25:20">+</operator> <literal type="number" pos:start="25:22" pos:end="25:22">4</literal> <operator pos:start="25:24" pos:end="25:25">&gt;=</operator> <call pos:start="25:27" pos:end="25:60"><name pos:start="25:27" pos:end="25:52">bytestream2_get_bytes_left</name><argument_list pos:start="25:53" pos:end="25:60">(<argument pos:start="25:54" pos:end="25:59"><expr pos:start="25:54" pos:end="25:59"><operator pos:start="25:54" pos:end="25:54">&amp;</operator><name pos:start="25:55" pos:end="25:59"><name pos:start="25:55" pos:end="25:55">s</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:59">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:63" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:70">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:69"><expr pos:start="27:37" pos:end="27:69"><literal type="string" pos:start="27:37" pos:end="27:69">"Invalid chroma block position\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><call pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:20">bytestream2_seek</name><argument_list pos:start="33:21" pos:end="33:54">(<argument pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:27"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:27">gb</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:43"><expr pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:39">chroma_off</name> <operator pos:start="33:41" pos:end="33:41">+</operator> <literal type="number" pos:start="33:43" pos:end="33:43">4</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:53"><expr pos:start="33:46" pos:end="33:53"><name pos:start="33:46" pos:end="33:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:8">mode</name>   <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:41"><name pos:start="35:14" pos:end="35:33">bytestream2_get_le16</name><argument_list pos:start="35:34" pos:end="35:41">(<argument pos:start="35:35" pos:end="35:40"><expr pos:start="35:35" pos:end="35:40"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:40"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:9">table</name>  <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:25"><name pos:start="37:14" pos:end="37:14">s</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:18">gb</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:25">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:10">offset</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:41"><name pos:start="39:14" pos:end="39:33">bytestream2_get_le16</name><argument_list pos:start="39:34" pos:end="39:41">(<argument pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:40"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:40"><name pos:start="39:36" pos:end="39:36">s</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:40">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:43" pos:end="39:43">*</operator> <literal type="number" pos:start="39:45" pos:end="39:45">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:53">(<expr pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:14">offset</name> <operator pos:start="43:16" pos:end="43:17">&gt;=</operator> <call pos:start="43:19" pos:end="43:52"><name pos:start="43:19" pos:end="43:44">bytestream2_get_bytes_left</name><argument_list pos:start="43:45" pos:end="43:52">(<argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><operator pos:start="43:46" pos:end="43:46">&amp;</operator><name pos:start="43:47" pos:end="43:51"><name pos:start="43:47" pos:end="43:47">s</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:51">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:55" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:69"><expr pos:start="45:9" pos:end="45:68"><call pos:start="45:9" pos:end="45:68"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:68">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:67"><expr pos:start="45:37" pos:end="45:67"><literal type="string" pos:start="45:37" pos:end="45:67">"Invalid chroma block offset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><call pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:20">bytestream2_skip</name><argument_list pos:start="53:21" pos:end="53:36">(<argument pos:start="53:22" pos:end="53:27"><expr pos:start="53:22" pos:end="53:27"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:27"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:27">gb</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><name pos:start="53:30" pos:end="53:35">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><call pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:10">memset</name><argument_list pos:start="55:11" pos:end="55:48">(<argument pos:start="55:12" pos:end="55:28"><expr pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:12">s</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:28">scratch_buffer</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:31"><expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr></argument>, <argument pos:start="55:34" pos:end="55:47"><expr pos:start="55:34" pos:end="55:47"><name pos:start="55:34" pos:end="55:47"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:47">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:64"><expr pos:start="57:5" pos:end="57:63"><name pos:start="57:5" pos:end="57:12">dec_size</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:63"><name pos:start="57:16" pos:end="57:25">xan_unpack</name><argument_list pos:start="57:26" pos:end="57:63">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">s</name></expr></argument>, <argument pos:start="57:30" pos:end="57:46"><expr pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:30">s</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:46">scratch_buffer</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:62"><expr pos:start="57:49" pos:end="57:62"><name pos:start="57:49" pos:end="57:62"><name pos:start="57:49" pos:end="57:49">s</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:62">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:21">(<expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:16">dec_size</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>)</condition> <block pos:start="59:23" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><call pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:64">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">avctx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:37" pos:end="61:63"><expr pos:start="61:37" pos:end="61:63"><literal type="string" pos:start="61:37" pos:end="61:63">"Chroma unpacking failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:5">U</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:14">pic</name><operator pos:start="69:15" pos:end="69:15">.</operator><name pos:start="69:16" pos:end="69:19">data</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:5">V</name> <operator pos:start="71:7" pos:end="71:7">=</operator> <name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">pic</name><operator pos:start="71:15" pos:end="71:15">.</operator><name pos:start="71:16" pos:end="71:19">data</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:7">src</name>     <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:31"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:31">scratch_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:11">src_end</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:17">src</name> <operator pos:start="75:19" pos:end="75:19">+</operator> <name pos:start="75:21" pos:end="75:28">dec_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="151:5"><if pos:start="77:5" pos:end="111:5">if <condition pos:start="77:8" pos:end="77:13">(<expr pos:start="77:9" pos:end="77:12"><name pos:start="77:9" pos:end="77:12">mode</name></expr>)</condition> <block pos:start="77:15" pos:end="111:5">{<block_content pos:start="79:9" pos:end="109:9">

        <for pos:start="79:9" pos:end="109:9">for <control pos:start="79:13" pos:end="79:48">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">j</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:43"><expr pos:start="79:21" pos:end="79:42"><name pos:start="79:21" pos:end="79:39"><name pos:start="79:21" pos:end="79:21">j</name> <argument_list type="generic" pos:start="79:23" pos:end="79:39">&lt; <argument pos:start="79:25" pos:end="79:37"><expr pos:start="79:25" pos:end="79:37"><name pos:start="79:25" pos:end="79:37"><name pos:start="79:25" pos:end="79:29">avctx</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:37">height</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="79:40" pos:end="79:40">&gt;</operator> <literal type="number" pos:start="79:42" pos:end="79:42">1</literal></expr>;</condition> <incr pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><name pos:start="79:45" pos:end="79:45">j</name><operator pos:start="79:46" pos:end="79:47">++</operator></expr></incr>)</control> <block pos:start="79:50" pos:end="109:9">{<block_content pos:start="81:13" pos:end="107:36">

            <for pos:start="81:13" pos:end="103:13">for <control pos:start="81:17" pos:end="81:51">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:46"><expr pos:start="81:25" pos:end="81:45"><name pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:25">i</name> <argument_list type="generic" pos:start="81:27" pos:end="81:42">&lt; <argument pos:start="81:29" pos:end="81:40"><expr pos:start="81:29" pos:end="81:40"><name pos:start="81:29" pos:end="81:40"><name pos:start="81:29" pos:end="81:33">avctx</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:40">width</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="81:43" pos:end="81:43">&gt;</operator> <literal type="number" pos:start="81:45" pos:end="81:45">1</literal></expr>;</condition> <incr pos:start="81:48" pos:end="81:50"><expr pos:start="81:48" pos:end="81:50"><name pos:start="81:48" pos:end="81:48">i</name><operator pos:start="81:49" pos:end="81:50">++</operator></expr></incr>)</control> <block pos:start="81:53" pos:end="103:13">{<block_content pos:start="83:17" pos:end="101:29">

                <expr_stmt pos:start="83:17" pos:end="83:29"><expr pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:19">val</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <operator pos:start="83:23" pos:end="83:23">*</operator><name pos:start="83:24" pos:end="83:26">src</name><operator pos:start="83:27" pos:end="83:28">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="97:17"><if pos:start="85:17" pos:end="97:17">if <condition pos:start="85:20" pos:end="85:24">(<expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">val</name></expr>)</condition> <block pos:start="85:26" pos:end="97:17">{<block_content pos:start="87:21" pos:end="95:46">

                    <expr_stmt pos:start="87:21" pos:end="87:55"><expr pos:start="87:21" pos:end="87:54"><name pos:start="87:21" pos:end="87:23">val</name>  <operator pos:start="87:26" pos:end="87:26">=</operator> <call pos:start="87:28" pos:end="87:54"><name pos:start="87:28" pos:end="87:34">AV_RL16</name><argument_list pos:start="87:35" pos:end="87:54">(<argument pos:start="87:36" pos:end="87:53"><expr pos:start="87:36" pos:end="87:53"><name pos:start="87:36" pos:end="87:40">table</name> <operator pos:start="87:42" pos:end="87:42">+</operator> <operator pos:start="87:44" pos:end="87:44">(</operator><name pos:start="87:45" pos:end="87:47">val</name> <operator pos:start="87:49" pos:end="87:50">&lt;&lt;</operator> <literal type="number" pos:start="87:52" pos:end="87:52">1</literal><operator pos:start="87:53" pos:end="87:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:45"><expr pos:start="89:21" pos:end="89:44"><name pos:start="89:21" pos:end="89:24">uval</name> <operator pos:start="89:26" pos:end="89:26">=</operator> <operator pos:start="89:28" pos:end="89:28">(</operator><name pos:start="89:29" pos:end="89:31">val</name> <operator pos:start="89:33" pos:end="89:34">&gt;&gt;</operator> <literal type="number" pos:start="89:36" pos:end="89:36">3</literal><operator pos:start="89:37" pos:end="89:37">)</operator> <operator pos:start="89:39" pos:end="89:39">&amp;</operator> <literal type="number" pos:start="89:41" pos:end="89:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:45"><expr pos:start="91:21" pos:end="91:44"><name pos:start="91:21" pos:end="91:24">vval</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <operator pos:start="91:28" pos:end="91:28">(</operator><name pos:start="91:29" pos:end="91:31">val</name> <operator pos:start="91:33" pos:end="91:34">&gt;&gt;</operator> <literal type="number" pos:start="91:36" pos:end="91:36">8</literal><operator pos:start="91:37" pos:end="91:37">)</operator> <operator pos:start="91:39" pos:end="91:39">&amp;</operator> <literal type="number" pos:start="91:41" pos:end="91:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:46"><expr pos:start="93:21" pos:end="93:45"><name pos:start="93:21" pos:end="93:24"><name pos:start="93:21" pos:end="93:21">U</name><index pos:start="93:22" pos:end="93:24">[<expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">i</name></expr>]</index></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:31">uval</name> <operator pos:start="93:33" pos:end="93:33">|</operator> <operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:39">uval</name> <operator pos:start="93:41" pos:end="93:42">&gt;&gt;</operator> <literal type="number" pos:start="93:44" pos:end="93:44">5</literal><operator pos:start="93:45" pos:end="93:45">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:46"><expr pos:start="95:21" pos:end="95:45"><name pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:21">V</name><index pos:start="95:22" pos:end="95:24">[<expr pos:start="95:23" pos:end="95:23"><name pos:start="95:23" pos:end="95:23">i</name></expr>]</index></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:31">vval</name> <operator pos:start="95:33" pos:end="95:33">|</operator> <operator pos:start="95:35" pos:end="95:35">(</operator><name pos:start="95:36" pos:end="95:39">vval</name> <operator pos:start="95:41" pos:end="95:42">&gt;&gt;</operator> <literal type="number" pos:start="95:44" pos:end="95:44">5</literal><operator pos:start="95:45" pos:end="95:45">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="99:17" pos:end="101:29"><if pos:start="99:17" pos:end="101:29">if <condition pos:start="99:20" pos:end="99:35">(<expr pos:start="99:21" pos:end="99:34"><name pos:start="99:21" pos:end="99:23">src</name> <operator pos:start="99:25" pos:end="99:26">==</operator> <name pos:start="99:28" pos:end="99:34">src_end</name></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="101:29"><block_content pos:start="101:21" pos:end="101:29">

                    <return pos:start="101:21" pos:end="101:29">return <expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="105:13" pos:end="105:36"><expr pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:13">U</name> <operator pos:start="105:15" pos:end="105:16">+=</operator> <name pos:start="105:18" pos:end="105:35"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:23">pic</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:32">linesize</name><index pos:start="105:33" pos:end="105:35">[<expr pos:start="105:34" pos:end="105:34"><literal type="number" pos:start="105:34" pos:end="105:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:13">V</name> <operator pos:start="107:15" pos:end="107:16">+=</operator> <name pos:start="107:18" pos:end="107:35"><name pos:start="107:18" pos:end="107:18">s</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:23">pic</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:32">linesize</name><index pos:start="107:33" pos:end="107:35">[<expr pos:start="107:34" pos:end="107:34"><literal type="number" pos:start="107:34" pos:end="107:34">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="151:5">else <block pos:start="111:12" pos:end="151:5">{<block_content pos:start="113:9" pos:end="149:9">

        <decl_stmt pos:start="113:9" pos:end="113:45"><decl pos:start="113:9" pos:end="113:44"><type pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:15">uint8_t</name> <modifier pos:start="113:17" pos:end="113:17">*</modifier></type><name pos:start="113:18" pos:end="113:19">U2</name> <init pos:start="113:21" pos:end="113:44">= <expr pos:start="113:23" pos:end="113:44"><name pos:start="113:23" pos:end="113:23">U</name> <operator pos:start="113:25" pos:end="113:25">+</operator> <name pos:start="113:27" pos:end="113:44"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:32">pic</name><operator pos:start="113:33" pos:end="113:33">.</operator><name pos:start="113:34" pos:end="113:41">linesize</name><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="115:9" pos:end="115:45"><decl pos:start="115:9" pos:end="115:44"><type pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:15">uint8_t</name> <modifier pos:start="115:17" pos:end="115:17">*</modifier></type><name pos:start="115:18" pos:end="115:19">V2</name> <init pos:start="115:21" pos:end="115:44">= <expr pos:start="115:23" pos:end="115:44"><name pos:start="115:23" pos:end="115:23">V</name> <operator pos:start="115:25" pos:end="115:25">+</operator> <name pos:start="115:27" pos:end="115:44"><name pos:start="115:27" pos:end="115:27">s</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:32">pic</name><operator pos:start="115:33" pos:end="115:33">.</operator><name pos:start="115:34" pos:end="115:41">linesize</name><index pos:start="115:42" pos:end="115:44">[<expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="119:9" pos:end="149:9">for <control pos:start="119:13" pos:end="119:48">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">j</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:43"><expr pos:start="119:21" pos:end="119:42"><name pos:start="119:21" pos:end="119:39"><name pos:start="119:21" pos:end="119:21">j</name> <argument_list type="generic" pos:start="119:23" pos:end="119:39">&lt; <argument pos:start="119:25" pos:end="119:37"><expr pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:29">avctx</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:37">height</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="119:40" pos:end="119:40">&gt;</operator> <literal type="number" pos:start="119:42" pos:end="119:42">2</literal></expr>;</condition> <incr pos:start="119:45" pos:end="119:47"><expr pos:start="119:45" pos:end="119:47"><name pos:start="119:45" pos:end="119:45">j</name><operator pos:start="119:46" pos:end="119:47">++</operator></expr></incr>)</control> <block pos:start="119:50" pos:end="149:9">{<block_content pos:start="121:13" pos:end="147:41">

            <for pos:start="121:13" pos:end="139:13">for <control pos:start="121:17" pos:end="121:54">(<init pos:start="121:18" pos:end="121:23"><expr pos:start="121:18" pos:end="121:22"><name pos:start="121:18" pos:end="121:18">i</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</init> <condition pos:start="121:25" pos:end="121:46"><expr pos:start="121:25" pos:end="121:45"><name pos:start="121:25" pos:end="121:42"><name pos:start="121:25" pos:end="121:25">i</name> <argument_list type="generic" pos:start="121:27" pos:end="121:42">&lt; <argument pos:start="121:29" pos:end="121:40"><expr pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:33">avctx</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:40">width</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="121:43" pos:end="121:43">&gt;</operator> <literal type="number" pos:start="121:45" pos:end="121:45">1</literal></expr>;</condition> <incr pos:start="121:48" pos:end="121:53"><expr pos:start="121:48" pos:end="121:53"><name pos:start="121:48" pos:end="121:48">i</name> <operator pos:start="121:50" pos:end="121:51">+=</operator> <literal type="number" pos:start="121:53" pos:end="121:53">2</literal></expr></incr>)</control> <block pos:start="121:56" pos:end="139:13">{<block_content pos:start="123:17" pos:end="137:17">

                <expr_stmt pos:start="123:17" pos:end="123:29"><expr pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:19">val</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <operator pos:start="123:23" pos:end="123:23">*</operator><name pos:start="123:24" pos:end="123:26">src</name><operator pos:start="123:27" pos:end="123:28">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="125:17" pos:end="137:17"><if pos:start="125:17" pos:end="137:17">if <condition pos:start="125:20" pos:end="125:24">(<expr pos:start="125:21" pos:end="125:23"><name pos:start="125:21" pos:end="125:23">val</name></expr>)</condition> <block pos:start="125:26" pos:end="137:17">{<block_content pos:start="127:21" pos:end="135:73">

                    <expr_stmt pos:start="127:21" pos:end="127:55"><expr pos:start="127:21" pos:end="127:54"><name pos:start="127:21" pos:end="127:23">val</name>  <operator pos:start="127:26" pos:end="127:26">=</operator> <call pos:start="127:28" pos:end="127:54"><name pos:start="127:28" pos:end="127:34">AV_RL16</name><argument_list pos:start="127:35" pos:end="127:54">(<argument pos:start="127:36" pos:end="127:53"><expr pos:start="127:36" pos:end="127:53"><name pos:start="127:36" pos:end="127:40">table</name> <operator pos:start="127:42" pos:end="127:42">+</operator> <operator pos:start="127:44" pos:end="127:44">(</operator><name pos:start="127:45" pos:end="127:47">val</name> <operator pos:start="127:49" pos:end="127:50">&lt;&lt;</operator> <literal type="number" pos:start="127:52" pos:end="127:52">1</literal><operator pos:start="127:53" pos:end="127:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:45"><expr pos:start="129:21" pos:end="129:44"><name pos:start="129:21" pos:end="129:24">uval</name> <operator pos:start="129:26" pos:end="129:26">=</operator> <operator pos:start="129:28" pos:end="129:28">(</operator><name pos:start="129:29" pos:end="129:31">val</name> <operator pos:start="129:33" pos:end="129:34">&gt;&gt;</operator> <literal type="number" pos:start="129:36" pos:end="129:36">3</literal><operator pos:start="129:37" pos:end="129:37">)</operator> <operator pos:start="129:39" pos:end="129:39">&amp;</operator> <literal type="number" pos:start="129:41" pos:end="129:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:45"><expr pos:start="131:21" pos:end="131:44"><name pos:start="131:21" pos:end="131:24">vval</name> <operator pos:start="131:26" pos:end="131:26">=</operator> <operator pos:start="131:28" pos:end="131:28">(</operator><name pos:start="131:29" pos:end="131:31">val</name> <operator pos:start="131:33" pos:end="131:34">&gt;&gt;</operator> <literal type="number" pos:start="131:36" pos:end="131:36">8</literal><operator pos:start="131:37" pos:end="131:37">)</operator> <operator pos:start="131:39" pos:end="131:39">&amp;</operator> <literal type="number" pos:start="131:41" pos:end="131:44">0xF8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:73"><expr pos:start="133:21" pos:end="133:72"><name pos:start="133:21" pos:end="133:24"><name pos:start="133:21" pos:end="133:21">U</name><index pos:start="133:22" pos:end="133:24">[<expr pos:start="133:23" pos:end="133:23"><name pos:start="133:23" pos:end="133:23">i</name></expr>]</index></name> <operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:33"><name pos:start="133:28" pos:end="133:28">U</name><index pos:start="133:29" pos:end="133:33">[<expr pos:start="133:30" pos:end="133:32"><name pos:start="133:30" pos:end="133:30">i</name><operator pos:start="133:31" pos:end="133:31">+</operator><literal type="number" pos:start="133:32" pos:end="133:32">1</literal></expr>]</index></name> <operator pos:start="133:35" pos:end="133:35">=</operator> <name pos:start="133:37" pos:end="133:41"><name pos:start="133:37" pos:end="133:38">U2</name><index pos:start="133:39" pos:end="133:41">[<expr pos:start="133:40" pos:end="133:40"><name pos:start="133:40" pos:end="133:40">i</name></expr>]</index></name> <operator pos:start="133:43" pos:end="133:43">=</operator> <name pos:start="133:45" pos:end="133:51"><name pos:start="133:45" pos:end="133:46">U2</name><index pos:start="133:47" pos:end="133:51">[<expr pos:start="133:48" pos:end="133:50"><name pos:start="133:48" pos:end="133:48">i</name><operator pos:start="133:49" pos:end="133:49">+</operator><literal type="number" pos:start="133:50" pos:end="133:50">1</literal></expr>]</index></name> <operator pos:start="133:53" pos:end="133:53">=</operator> <name pos:start="133:55" pos:end="133:58">uval</name> <operator pos:start="133:60" pos:end="133:60">|</operator> <operator pos:start="133:62" pos:end="133:62">(</operator><name pos:start="133:63" pos:end="133:66">uval</name> <operator pos:start="133:68" pos:end="133:69">&gt;&gt;</operator> <literal type="number" pos:start="133:71" pos:end="133:71">5</literal><operator pos:start="133:72" pos:end="133:72">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:73"><expr pos:start="135:21" pos:end="135:72"><name pos:start="135:21" pos:end="135:24"><name pos:start="135:21" pos:end="135:21">V</name><index pos:start="135:22" pos:end="135:24">[<expr pos:start="135:23" pos:end="135:23"><name pos:start="135:23" pos:end="135:23">i</name></expr>]</index></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:33"><name pos:start="135:28" pos:end="135:28">V</name><index pos:start="135:29" pos:end="135:33">[<expr pos:start="135:30" pos:end="135:32"><name pos:start="135:30" pos:end="135:30">i</name><operator pos:start="135:31" pos:end="135:31">+</operator><literal type="number" pos:start="135:32" pos:end="135:32">1</literal></expr>]</index></name> <operator pos:start="135:35" pos:end="135:35">=</operator> <name pos:start="135:37" pos:end="135:41"><name pos:start="135:37" pos:end="135:38">V2</name><index pos:start="135:39" pos:end="135:41">[<expr pos:start="135:40" pos:end="135:40"><name pos:start="135:40" pos:end="135:40">i</name></expr>]</index></name> <operator pos:start="135:43" pos:end="135:43">=</operator> <name pos:start="135:45" pos:end="135:51"><name pos:start="135:45" pos:end="135:46">V2</name><index pos:start="135:47" pos:end="135:51">[<expr pos:start="135:48" pos:end="135:50"><name pos:start="135:48" pos:end="135:48">i</name><operator pos:start="135:49" pos:end="135:49">+</operator><literal type="number" pos:start="135:50" pos:end="135:50">1</literal></expr>]</index></name> <operator pos:start="135:53" pos:end="135:53">=</operator> <name pos:start="135:55" pos:end="135:58">vval</name> <operator pos:start="135:60" pos:end="135:60">|</operator> <operator pos:start="135:62" pos:end="135:62">(</operator><name pos:start="135:63" pos:end="135:66">vval</name> <operator pos:start="135:68" pos:end="135:69">&gt;&gt;</operator> <literal type="number" pos:start="135:71" pos:end="135:71">5</literal><operator pos:start="135:72" pos:end="135:72">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:13">U</name>  <operator pos:start="141:16" pos:end="141:17">+=</operator> <name pos:start="141:19" pos:end="141:36"><name pos:start="141:19" pos:end="141:19">s</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:24">pic</name><operator pos:start="141:25" pos:end="141:25">.</operator><name pos:start="141:26" pos:end="141:33">linesize</name><index pos:start="141:34" pos:end="141:36">[<expr pos:start="141:35" pos:end="141:35"><literal type="number" pos:start="141:35" pos:end="141:35">1</literal></expr>]</index></name> <operator pos:start="141:38" pos:end="141:38">*</operator> <literal type="number" pos:start="141:40" pos:end="141:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:41"><expr pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:13">V</name>  <operator pos:start="143:16" pos:end="143:17">+=</operator> <name pos:start="143:19" pos:end="143:36"><name pos:start="143:19" pos:end="143:19">s</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:24">pic</name><operator pos:start="143:25" pos:end="143:25">.</operator><name pos:start="143:26" pos:end="143:33">linesize</name><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><literal type="number" pos:start="143:35" pos:end="143:35">2</literal></expr>]</index></name> <operator pos:start="143:38" pos:end="143:38">*</operator> <literal type="number" pos:start="143:40" pos:end="143:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:41"><expr pos:start="145:13" pos:end="145:40"><name pos:start="145:13" pos:end="145:14">U2</name> <operator pos:start="145:16" pos:end="145:17">+=</operator> <name pos:start="145:19" pos:end="145:36"><name pos:start="145:19" pos:end="145:19">s</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:24">pic</name><operator pos:start="145:25" pos:end="145:25">.</operator><name pos:start="145:26" pos:end="145:33">linesize</name><index pos:start="145:34" pos:end="145:36">[<expr pos:start="145:35" pos:end="145:35"><literal type="number" pos:start="145:35" pos:end="145:35">1</literal></expr>]</index></name> <operator pos:start="145:38" pos:end="145:38">*</operator> <literal type="number" pos:start="145:40" pos:end="145:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:41"><expr pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:14">V2</name> <operator pos:start="147:16" pos:end="147:17">+=</operator> <name pos:start="147:19" pos:end="147:36"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:24">pic</name><operator pos:start="147:25" pos:end="147:25">.</operator><name pos:start="147:26" pos:end="147:33">linesize</name><index pos:start="147:34" pos:end="147:36">[<expr pos:start="147:35" pos:end="147:35"><literal type="number" pos:start="147:35" pos:end="147:35">2</literal></expr>]</index></name> <operator pos:start="147:38" pos:end="147:38">*</operator> <literal type="number" pos:start="147:40" pos:end="147:40">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
