<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22441.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">cris_cpu_class_init</name><parameter_list pos:start="1:32" pos:end="1:60">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:43">ObjectClass</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">oc</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:55">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">dc</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><call pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:34">DEVICE_CLASS</name><argument_list pos:start="5:35" pos:end="5:38">(<argument pos:start="5:36" pos:end="5:37"><expr pos:start="5:36" pos:end="5:37"><name pos:start="5:36" pos:end="5:37">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUClass</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cc</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:28">CPU_CLASS</name><argument_list pos:start="7:29" pos:end="7:32">(<argument pos:start="7:30" pos:end="7:31"><expr pos:start="7:30" pos:end="7:31"><name pos:start="7:30" pos:end="7:31">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CRISCPUClass</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ccc</name> <init pos:start="9:23" pos:end="9:42">= <expr pos:start="9:25" pos:end="9:42"><call pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:38">CRIS_CPU_CLASS</name><argument_list pos:start="9:39" pos:end="9:42">(<argument pos:start="9:40" pos:end="9:41"><expr pos:start="9:40" pos:end="9:41"><name pos:start="9:40" pos:end="9:41">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:7">ccc</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:23">parent_realize</name></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:37"><name pos:start="13:27" pos:end="13:28">dc</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:37">realize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">dc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:15">realize</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:36">cris_cpu_realizefn</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">ccc</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:21">parent_reset</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:26">cc</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">reset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">cc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">reset</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:30">cris_cpu_reset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:6">cc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:21">class_by_name</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:46">cris_cpu_class_by_name</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:6">cc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">has_work</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:36">cris_cpu_has_work</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:6">cc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:20">do_interrupt</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:44">cris_cpu_do_interrupt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:6">cc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:26">cpu_exec_interrupt</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:52">cris_cpu_exec_interrupt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:6">cc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:18">dump_state</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:40">cris_cpu_dump_state</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:6">cc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:14">set_pc</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:32">cris_cpu_set_pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:6">cc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:25">gdb_read_register</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:54">cris_cpu_gdb_read_register</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:6">cc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:26">gdb_write_register</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:56">cris_cpu_gdb_write_register</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="41:1" pos:end="41:23">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:23">CONFIG_USER_ONLY</name></cpp:ifdef>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:6">cc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:24">handle_mmu_fault</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:52">cris_cpu_handle_mmu_fault</name></expr>;</expr_stmt>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:6">cc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:27">get_phys_page_debug</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:58">cris_cpu_get_phys_page_debug</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:12">vmsd</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <operator pos:start="49:16" pos:end="49:16">&amp;</operator><name pos:start="49:17" pos:end="49:32">vmstate_cris_cpu</name></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="55:5" pos:end="55:31"><expr pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:6">cc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:25">gdb_num_core_regs</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:30">49</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:6">cc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:34">gdb_stop_before_watchpoint</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <name pos:start="57:38" pos:end="57:41">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:6">cc</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:22">disas_set_info</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:44">cris_disas_set_info</name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="73:7">/*

     * Reason: cris_cpu_initfn() calls cpu_exec_init(), which saves

     * the object in cpus -&gt; dangling pointer after final

     * object_unref().

     */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:55"><expr pos:start="75:5" pos:end="75:54"><name pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:6">dc</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:47">cannot_destroy_with_object_finalize_yet</name></name> <operator pos:start="75:49" pos:end="75:49">=</operator> <name pos:start="75:51" pos:end="75:54">true</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
