<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6971.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:71"><name pos:start="1:1" pos:end="1:14">MAKE_ACCESSORS</name><argument_list pos:start="1:15" pos:end="1:71">(<argument pos:start="1:16" pos:end="1:29">AVVDPAUContext</argument>, <argument pos:start="1:32" pos:end="1:44">vdpau_hwaccel</argument>, <argument pos:start="1:47" pos:end="1:61">AVVDPAU_Render2</argument>, <argument pos:start="1:64" pos:end="1:70">render2</argument>)</argument_list></macro>
<function pos:start="2:1" pos:end="33:31"><type pos:start="2:1" pos:end="2:3"><name pos:start="2:1" pos:end="2:3">int</name></type> <name pos:start="2:5" pos:end="2:24">ff_vdpau_common_init</name><parameter_list pos:start="2:25" pos:end="3:35">(<parameter pos:start="2:26" pos:end="2:46"><decl pos:start="2:26" pos:end="2:46"><type pos:start="2:26" pos:end="2:46"><name pos:start="2:26" pos:end="2:39">AVCodecContext</name> <modifier pos:start="2:41" pos:end="2:41">*</modifier></type><name pos:start="2:42" pos:end="2:46">avctx</name></decl></parameter>, <parameter pos:start="2:49" pos:end="2:73"><decl pos:start="2:49" pos:end="2:73"><type pos:start="2:49" pos:end="2:73"><name pos:start="2:49" pos:end="2:65">VdpDecoderProfile</name></type> <name pos:start="2:67" pos:end="2:73">profile</name></decl></parameter>,
                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:34">level</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="33:31">{<block_content pos:start="5:5" pos:end="33:31">
    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VDPAUHWContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">hwctx</name> <init pos:start="5:27" pos:end="5:50">= <expr pos:start="5:29" pos:end="5:50"><name pos:start="5:29" pos:end="5:50"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:50">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:61"><decl pos:start="6:5" pos:end="6:60"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:16">VDPAUContext</name> <modifier pos:start="6:18" pos:end="6:18">*</modifier></type><name pos:start="6:19" pos:end="6:23">vdctx</name> <init pos:start="6:25" pos:end="6:60">= <expr pos:start="6:27" pos:end="6:60"><name pos:start="6:27" pos:end="6:60"><name pos:start="6:27" pos:end="6:31">avctx</name><operator pos:start="6:32" pos:end="6:33">-&gt;</operator><name pos:start="6:34" pos:end="6:41">internal</name><operator pos:start="6:42" pos:end="6:43">-&gt;</operator><name pos:start="6:44" pos:end="6:60">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VdpDecoderCreate</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">create</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:14"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:8">void</name> <modifier pos:start="8:10" pos:end="8:10">*</modifier></type><name pos:start="8:11" pos:end="8:14">func</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">VdpStatus</name></type> <name pos:start="9:15" pos:end="9:20">status</name></decl>;</decl_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:54">/* See vdpau/vdpau.h for alignment constraints. */</comment>
    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">width</name>  <init pos:start="11:21" pos:end="11:51">= <expr pos:start="11:23" pos:end="11:51"><operator pos:start="11:23" pos:end="11:23">(</operator><name pos:start="11:24" pos:end="11:41"><name pos:start="11:24" pos:end="11:28">avctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:41">coded_width</name></name> <operator pos:start="11:43" pos:end="11:43">+</operator> <literal type="number" pos:start="11:45" pos:end="11:45">1</literal><operator pos:start="11:46" pos:end="11:46">)</operator> <operator pos:start="11:48" pos:end="11:48">&amp;</operator> <operator pos:start="11:50" pos:end="11:50">~</operator><literal type="number" pos:start="11:51" pos:end="11:51">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:53"><decl pos:start="12:5" pos:end="12:52"><type pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:12">uint32_t</name></type> <name pos:start="12:14" pos:end="12:19">height</name> <init pos:start="12:21" pos:end="12:52">= <expr pos:start="12:23" pos:end="12:52"><operator pos:start="12:23" pos:end="12:23">(</operator><name pos:start="12:24" pos:end="12:42"><name pos:start="12:24" pos:end="12:28">avctx</name><operator pos:start="12:29" pos:end="12:30">-&gt;</operator><name pos:start="12:31" pos:end="12:42">coded_height</name></name> <operator pos:start="12:44" pos:end="12:44">+</operator> <literal type="number" pos:start="12:46" pos:end="12:46">3</literal><operator pos:start="12:47" pos:end="12:47">)</operator> <operator pos:start="12:49" pos:end="12:49">&amp;</operator> <operator pos:start="12:51" pos:end="12:51">~</operator><literal type="number" pos:start="12:52" pos:end="12:52">3</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="13:5" pos:end="33:31"><if pos:start="13:5" pos:end="33:31">if <condition pos:start="13:8" pos:end="13:53">(<expr pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:13">hwctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:22">context</name><operator pos:start="13:23" pos:end="13:23">.</operator><name pos:start="13:24" pos:end="13:30">decoder</name></name> <operator pos:start="13:32" pos:end="13:33">!=</operator> <name pos:start="13:35" pos:end="13:52">VDP_INVALID_HANDLE</name></expr>)</condition> <block pos:start="13:55" pos:end="33:31">{<block_content pos:start="14:9" pos:end="33:31">
        <expr_stmt pos:start="14:9" pos:end="14:48"><expr pos:start="14:9" pos:end="14:47"><name pos:start="14:9" pos:end="14:22"><name pos:start="14:9" pos:end="14:13">vdctx</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:22">decoder</name></name> <operator pos:start="14:24" pos:end="14:24">=</operator> <name pos:start="14:26" pos:end="14:47"><name pos:start="14:26" pos:end="14:30">hwctx</name><operator pos:start="14:31" pos:end="14:32">-&gt;</operator><name pos:start="14:33" pos:end="14:39">context</name><operator pos:start="14:40" pos:end="14:40">.</operator><name pos:start="14:41" pos:end="14:47">decoder</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:13">vdctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">render</name></name>  <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:46"><name pos:start="15:26" pos:end="15:30">hwctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:39">context</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:46">render</name></name></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:17">return <expr pos:start="16:16" pos:end="16:16"><literal type="number" pos:start="16:16" pos:end="16:16">0</literal></expr>;</return> <comment type="block" pos:start="16:19" pos:end="16:47">/* Decoder created by user */</comment>
    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:9">vdctx</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:17">device</name></name>           <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:43"><name pos:start="17:31" pos:end="17:35">hwctx</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:43">device</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:54"><expr pos:start="18:5" pos:end="18:53"><name pos:start="18:5" pos:end="18:27"><name pos:start="18:5" pos:end="18:9">vdctx</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:27">get_proc_address</name></name> <operator pos:start="18:29" pos:end="18:29">=</operator> <name pos:start="18:31" pos:end="18:53"><name pos:start="18:31" pos:end="18:35">hwctx</name><operator pos:start="18:36" pos:end="18:37">-&gt;</operator><name pos:start="18:38" pos:end="18:53">get_proc_address</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="20:44"><expr pos:start="19:5" pos:end="20:43"><name pos:start="19:5" pos:end="19:10">status</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="20:43"><name pos:start="19:14" pos:end="19:36"><name pos:start="19:14" pos:end="19:18">vdctx</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:36">get_proc_address</name></name><argument_list pos:start="19:37" pos:end="20:43">(<argument pos:start="19:38" pos:end="19:50"><expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:42">vdctx</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:50">device</name></name></expr></argument>, <argument pos:start="19:53" pos:end="19:78"><expr pos:start="19:53" pos:end="19:78"><name pos:start="19:53" pos:end="19:78">VDP_FUNC_ID_DECODER_CREATE</name></expr></argument>,
                                     <argument pos:start="20:38" pos:end="20:42"><expr pos:start="20:38" pos:end="20:42"><operator pos:start="20:38" pos:end="20:38">&amp;</operator><name pos:start="20:39" pos:end="20:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="24:22"><if pos:start="21:5" pos:end="22:35">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:14">status</name> <operator pos:start="21:16" pos:end="21:17">!=</operator> <name pos:start="21:19" pos:end="21:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:35"><block_content pos:start="22:9" pos:end="22:35">
        <return pos:start="22:9" pos:end="22:35">return <expr pos:start="22:16" pos:end="22:34"><call pos:start="22:16" pos:end="22:34"><name pos:start="22:16" pos:end="22:26">vdpau_error</name><argument_list pos:start="22:27" pos:end="22:34">(<argument pos:start="22:28" pos:end="22:33"><expr pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <else pos:start="23:5" pos:end="24:22">else<block type="pseudo" pos:start="24:9" pos:end="24:22"><block_content pos:start="24:9" pos:end="24:22">
        <expr_stmt pos:start="24:9" pos:end="24:22"><expr pos:start="24:9" pos:end="24:21"><name pos:start="24:9" pos:end="24:14">create</name> <operator pos:start="24:16" pos:end="24:16">=</operator> <name pos:start="24:18" pos:end="24:21">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="25:5" pos:end="26:44"><expr pos:start="25:5" pos:end="26:43"><name pos:start="25:5" pos:end="25:10">status</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="26:43"><name pos:start="25:14" pos:end="25:36"><name pos:start="25:14" pos:end="25:18">vdctx</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:36">get_proc_address</name></name><argument_list pos:start="25:37" pos:end="26:43">(<argument pos:start="25:38" pos:end="25:50"><expr pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:42">vdctx</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:50">device</name></name></expr></argument>, <argument pos:start="25:53" pos:end="25:78"><expr pos:start="25:53" pos:end="25:78"><name pos:start="25:53" pos:end="25:78">VDP_FUNC_ID_DECODER_RENDER</name></expr></argument>,
                                     <argument pos:start="26:38" pos:end="26:42"><expr pos:start="26:38" pos:end="26:42"><operator pos:start="26:38" pos:end="26:38">&amp;</operator><name pos:start="26:39" pos:end="26:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="30:29"><if pos:start="27:5" pos:end="28:35">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:14">status</name> <operator pos:start="27:16" pos:end="27:17">!=</operator> <name pos:start="27:19" pos:end="27:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="28:9" pos:end="28:35"><block_content pos:start="28:9" pos:end="28:35">
        <return pos:start="28:9" pos:end="28:35">return <expr pos:start="28:16" pos:end="28:34"><call pos:start="28:16" pos:end="28:34"><name pos:start="28:16" pos:end="28:26">vdpau_error</name><argument_list pos:start="28:27" pos:end="28:34">(<argument pos:start="28:28" pos:end="28:33"><expr pos:start="28:28" pos:end="28:33"><name pos:start="28:28" pos:end="28:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>
    <else pos:start="29:5" pos:end="30:29">else<block type="pseudo" pos:start="30:9" pos:end="30:29"><block_content pos:start="30:9" pos:end="30:29">
        <expr_stmt pos:start="30:9" pos:end="30:29"><expr pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:21"><name pos:start="30:9" pos:end="30:13">vdctx</name><operator pos:start="30:14" pos:end="30:15">-&gt;</operator><name pos:start="30:16" pos:end="30:21">render</name></name> <operator pos:start="30:23" pos:end="30:23">=</operator> <name pos:start="30:25" pos:end="30:28">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="31:5" pos:end="32:37"><expr pos:start="31:5" pos:end="32:36"><name pos:start="31:5" pos:end="31:10">status</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="32:36"><name pos:start="31:14" pos:end="31:19">create</name><argument_list pos:start="31:20" pos:end="32:36">(<argument pos:start="31:21" pos:end="31:33"><expr pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:25">vdctx</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:33">device</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:42"><expr pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:42">profile</name></expr></argument>, <argument pos:start="31:45" pos:end="31:49"><expr pos:start="31:45" pos:end="31:49"><name pos:start="31:45" pos:end="31:49">width</name></expr></argument>, <argument pos:start="31:52" pos:end="31:57"><expr pos:start="31:52" pos:end="31:57"><name pos:start="31:52" pos:end="31:57">height</name></expr></argument>, <argument pos:start="31:60" pos:end="31:70"><expr pos:start="31:60" pos:end="31:70"><name pos:start="31:60" pos:end="31:70"><name pos:start="31:60" pos:end="31:64">avctx</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:70">refs</name></name></expr></argument>,
                    <argument pos:start="32:21" pos:end="32:35"><expr pos:start="32:21" pos:end="32:35"><operator pos:start="32:21" pos:end="32:21">&amp;</operator><name pos:start="32:22" pos:end="32:35"><name pos:start="32:22" pos:end="32:26">vdctx</name><operator pos:start="32:27" pos:end="32:28">-&gt;</operator><name pos:start="32:29" pos:end="32:35">decoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="33:5" pos:end="33:31">return <expr pos:start="33:12" pos:end="33:30"><call pos:start="33:12" pos:end="33:30"><name pos:start="33:12" pos:end="33:22">vdpau_error</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block_content></block></function></unit>
