<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21956.c" pos:tabs="8"><function pos:start="1:1" pos:end="791:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mpeg_decode_mb</name><parameter_list pos:start="1:26" pos:end="1:67">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">int16_t</name></type> <name pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:58">block</name><index pos:start="1:59" pos:end="1:62">[<expr pos:start="1:60" pos:end="1:61"><literal type="number" pos:start="1:60" pos:end="1:61">12</literal></expr>]</index><index pos:start="1:63" pos:end="1:66">[<expr pos:start="1:64" pos:end="1:65"><literal type="number" pos:start="1:64" pos:end="1:65">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="791:1">{<block_content pos:start="5:5" pos:end="789:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">k</name></decl>, <decl pos:start="5:18" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:20">cbp</name></decl>, <decl pos:start="5:23" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:25">val</name></decl>, <decl pos:start="5:28" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:34">mb_type</name></decl>, <decl pos:start="5:37" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:47">motion_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">mb_block_count</name> <init pos:start="7:30" pos:end="7:58">= <expr pos:start="7:32" pos:end="7:58"><literal type="number" pos:start="7:32" pos:end="7:34">4</literal> <operator pos:start="7:34" pos:end="7:34">+</operator> <operator pos:start="7:36" pos:end="7:36">(</operator><literal type="number" pos:start="7:37" pos:end="7:37">1</literal> <operator pos:start="7:39" pos:end="7:40">&lt;&lt;</operator> <name pos:start="7:42" pos:end="7:57"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:57">chroma_format</name></name><operator pos:start="7:58" pos:end="7:58">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><call pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:11">ff_tlog</name><argument_list pos:start="13:12" pos:end="13:65">(<argument pos:start="13:13" pos:end="13:20"><expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">avctx</name></name></expr></argument>, <argument pos:start="13:23" pos:end="13:46"><expr pos:start="13:23" pos:end="13:46"><literal type="string" pos:start="13:23" pos:end="13:46">"decode_mb: x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="13:49" pos:end="13:55"><expr pos:start="13:49" pos:end="13:55"><name pos:start="13:49" pos:end="13:55"><name pos:start="13:49" pos:end="13:49">s</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:55">mb_x</name></name></expr></argument>, <argument pos:start="13:58" pos:end="13:64"><expr pos:start="13:58" pos:end="13:64"><name pos:start="13:58" pos:end="13:64"><name pos:start="13:58" pos:end="13:58">s</name><operator pos:start="13:59" pos:end="13:60">-&gt;</operator><name pos:start="13:61" pos:end="13:64">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:14">av_assert2</name><argument_list pos:start="17:15" pos:end="17:34">(<argument pos:start="17:16" pos:end="17:33"><expr pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:28">mb_skipped</name></name> <operator pos:start="17:30" pos:end="17:31">==</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="71:5"><if pos:start="21:5" pos:end="71:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">mb_skip_run</name></name><operator pos:start="21:23" pos:end="21:24">--</operator> <operator pos:start="21:26" pos:end="21:27">!=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition> <block pos:start="21:32" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:17">

        <if_stmt pos:start="23:9" pos:end="65:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:46">(<expr pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:24">pict_type</name></name> <operator pos:start="23:26" pos:end="23:27">==</operator> <name pos:start="23:29" pos:end="23:45">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="23:48" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:58">

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">mb_skipped</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="29:58"><expr pos:start="27:13" pos:end="29:57"><name pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:30">current_picture</name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:38">mb_type</name><index pos:start="27:39" pos:end="27:72">[<expr pos:start="27:40" pos:end="27:71"><name pos:start="27:40" pos:end="27:46"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:46">mb_x</name></name> <operator pos:start="27:48" pos:end="27:48">+</operator> <name pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:50">s</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:56">mb_y</name></name> <operator pos:start="27:58" pos:end="27:58">*</operator> <name pos:start="27:60" pos:end="27:71"><name pos:start="27:60" pos:end="27:60">s</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:71">mb_stride</name></name></expr>]</index></name> <operator pos:start="27:74" pos:end="27:74">=</operator>

                <name pos:start="29:17" pos:end="29:28">MB_TYPE_SKIP</name> <operator pos:start="29:30" pos:end="29:30">|</operator> <name pos:start="29:32" pos:end="29:41">MB_TYPE_L0</name> <operator pos:start="29:43" pos:end="29:43">|</operator> <name pos:start="29:45" pos:end="29:57">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="65:9">else <block pos:start="31:16" pos:end="65:9">{<block_content pos:start="33:13" pos:end="63:34">

            <decl_stmt pos:start="33:13" pos:end="33:24"><decl pos:start="33:13" pos:end="33:23"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:23">mb_type</name></decl>;</decl_stmt>



            <if_stmt pos:start="37:13" pos:end="45:101"><if pos:start="37:13" pos:end="39:91">if <condition pos:start="37:16" pos:end="37:24">(<expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:91"><block_content pos:start="39:17" pos:end="39:91">

                <expr_stmt pos:start="39:17" pos:end="39:91"><expr pos:start="39:17" pos:end="39:90"><name pos:start="39:17" pos:end="39:23">mb_type</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:90"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:44">current_picture</name><operator pos:start="39:45" pos:end="39:45">.</operator><name pos:start="39:46" pos:end="39:52">mb_type</name><index pos:start="39:53" pos:end="39:90">[<expr pos:start="39:54" pos:end="39:89"><name pos:start="39:54" pos:end="39:60"><name pos:start="39:54" pos:end="39:54">s</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:60">mb_x</name></name> <operator pos:start="39:62" pos:end="39:62">+</operator> <name pos:start="39:64" pos:end="39:70"><name pos:start="39:64" pos:end="39:64">s</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:70">mb_y</name></name> <operator pos:start="39:72" pos:end="39:72">*</operator> <name pos:start="39:74" pos:end="39:85"><name pos:start="39:74" pos:end="39:74">s</name><operator pos:start="39:75" pos:end="39:76">-&gt;</operator><name pos:start="39:77" pos:end="39:85">mb_stride</name></name> <operator pos:start="39:87" pos:end="39:87">-</operator> <literal type="number" pos:start="39:89" pos:end="39:89">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="45:101">else<block type="pseudo" pos:start="45:17" pos:end="45:101"><block_content pos:start="45:17" pos:end="45:101">

                <comment type="line" pos:start="43:17" pos:end="43:67">// FIXME not sure if this is allowed in MPEG at all</comment>

                <expr_stmt pos:start="45:17" pos:end="45:101"><expr pos:start="45:17" pos:end="45:100"><name pos:start="45:17" pos:end="45:23">mb_type</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:100"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:44">current_picture</name><operator pos:start="45:45" pos:end="45:45">.</operator><name pos:start="45:46" pos:end="45:52">mb_type</name><index pos:start="45:53" pos:end="45:100">[<expr pos:start="45:54" pos:end="45:99"><name pos:start="45:54" pos:end="45:64"><name pos:start="45:54" pos:end="45:54">s</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:64">mb_width</name></name> <operator pos:start="45:66" pos:end="45:66">+</operator> <operator pos:start="45:68" pos:end="45:68">(</operator><name pos:start="45:69" pos:end="45:75"><name pos:start="45:69" pos:end="45:69">s</name><operator pos:start="45:70" pos:end="45:71">-&gt;</operator><name pos:start="45:72" pos:end="45:75">mb_y</name></name> <operator pos:start="45:77" pos:end="45:77">-</operator> <literal type="number" pos:start="45:79" pos:end="45:79">1</literal><operator pos:start="45:80" pos:end="45:80">)</operator> <operator pos:start="45:82" pos:end="45:82">*</operator> <name pos:start="45:84" pos:end="45:95"><name pos:start="45:84" pos:end="45:84">s</name><operator pos:start="45:85" pos:end="45:86">-&gt;</operator><name pos:start="45:87" pos:end="45:95">mb_stride</name></name> <operator pos:start="45:97" pos:end="45:97">-</operator> <literal type="number" pos:start="45:99" pos:end="45:99">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:34">(<expr pos:start="47:17" pos:end="47:33"><call pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:24">IS_INTRA</name><argument_list pos:start="47:25" pos:end="47:33">(<argument pos:start="47:26" pos:end="47:32"><expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:36" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:43">

                <expr_stmt pos:start="49:17" pos:end="49:72"><expr pos:start="49:17" pos:end="49:71"><call pos:start="49:17" pos:end="49:71"><name pos:start="49:17" pos:end="49:22">av_log</name><argument_list pos:start="49:23" pos:end="49:71">(<argument pos:start="49:24" pos:end="49:31"><expr pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">avctx</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:45"><expr pos:start="49:34" pos:end="49:45"><name pos:start="49:34" pos:end="49:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:48" pos:end="49:70"><expr pos:start="49:48" pos:end="49:70"><literal type="string" pos:start="49:48" pos:end="49:70">"skip with previntra\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:43">return <expr pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="57:39"><expr pos:start="55:13" pos:end="57:38"><name pos:start="55:13" pos:end="55:72"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:30">current_picture</name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:38">mb_type</name><index pos:start="55:39" pos:end="55:72">[<expr pos:start="55:40" pos:end="55:71"><name pos:start="55:40" pos:end="55:46"><name pos:start="55:40" pos:end="55:40">s</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:46">mb_x</name></name> <operator pos:start="55:48" pos:end="55:48">+</operator> <name pos:start="55:50" pos:end="55:56"><name pos:start="55:50" pos:end="55:50">s</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:56">mb_y</name></name> <operator pos:start="55:58" pos:end="55:58">*</operator> <name pos:start="55:60" pos:end="55:71"><name pos:start="55:60" pos:end="55:60">s</name><operator pos:start="55:61" pos:end="55:62">-&gt;</operator><name pos:start="55:63" pos:end="55:71">mb_stride</name></name></expr>]</index></name> <operator pos:start="55:74" pos:end="55:74">=</operator>

                <name pos:start="57:17" pos:end="57:23">mb_type</name> <operator pos:start="57:25" pos:end="57:25">|</operator> <name pos:start="57:27" pos:end="57:38">MB_TYPE_SKIP</name></expr>;</expr_stmt>



            <if_stmt pos:start="61:13" pos:end="63:34"><if pos:start="61:13" pos:end="63:34">if <condition pos:start="61:16" pos:end="61:89">(<expr pos:start="61:17" pos:end="61:88"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:31"><name pos:start="61:18" pos:end="61:18">s</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:22">mv</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>]</index><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr>]</index><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">|</operator> <name pos:start="61:35" pos:end="61:48"><name pos:start="61:35" pos:end="61:35">s</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:39">mv</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">0</literal></expr>]</index><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><literal type="number" pos:start="61:44" pos:end="61:44">0</literal></expr>]</index><index pos:start="61:46" pos:end="61:48">[<expr pos:start="61:47" pos:end="61:47"><literal type="number" pos:start="61:47" pos:end="61:47">1</literal></expr>]</index></name> <operator pos:start="61:50" pos:end="61:50">|</operator> <name pos:start="61:52" pos:end="61:65"><name pos:start="61:52" pos:end="61:52">s</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:56">mv</name><index pos:start="61:57" pos:end="61:59">[<expr pos:start="61:58" pos:end="61:58"><literal type="number" pos:start="61:58" pos:end="61:58">1</literal></expr>]</index><index pos:start="61:60" pos:end="61:62">[<expr pos:start="61:61" pos:end="61:61"><literal type="number" pos:start="61:61" pos:end="61:61">0</literal></expr>]</index><index pos:start="61:63" pos:end="61:65">[<expr pos:start="61:64" pos:end="61:64"><literal type="number" pos:start="61:64" pos:end="61:64">0</literal></expr>]</index></name> <operator pos:start="61:67" pos:end="61:67">|</operator> <name pos:start="61:69" pos:end="61:82"><name pos:start="61:69" pos:end="61:69">s</name><operator pos:start="61:70" pos:end="61:71">-&gt;</operator><name pos:start="61:72" pos:end="61:73">mv</name><index pos:start="61:74" pos:end="61:76">[<expr pos:start="61:75" pos:end="61:75"><literal type="number" pos:start="61:75" pos:end="61:75">1</literal></expr>]</index><index pos:start="61:77" pos:end="61:79">[<expr pos:start="61:78" pos:end="61:78"><literal type="number" pos:start="61:78" pos:end="61:78">0</literal></expr>]</index><index pos:start="61:80" pos:end="61:82">[<expr pos:start="61:81" pos:end="61:81"><literal type="number" pos:start="61:81" pos:end="61:81">1</literal></expr>]</index></name><operator pos:start="61:83" pos:end="61:83">)</operator> <operator pos:start="61:85" pos:end="61:86">==</operator> <literal type="number" pos:start="61:88" pos:end="61:88">0</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:34"><block_content pos:start="63:17" pos:end="63:34">

                <expr_stmt pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:29">mb_skipped</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <literal type="number" pos:start="63:33" pos:end="63:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="75:5" pos:end="141:5">switch <condition pos:start="75:12" pos:end="75:25">(<expr pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:24">pict_type</name></name></expr>)</condition> <block pos:start="75:27" pos:end="141:5">{<block_content pos:start="77:5" pos:end="139:14">

    <default pos:start="77:5" pos:end="77:12">default:</default>

    <case pos:start="79:5" pos:end="79:27">case <expr pos:start="79:10" pos:end="79:26"><name pos:start="79:10" pos:end="79:26">AV_PICTURE_TYPE_I</name></expr>:</case>

        <if_stmt pos:start="81:9" pos:end="101:9"><if pos:start="81:9" pos:end="97:9">if <condition pos:start="81:12" pos:end="81:35">(<expr pos:start="81:13" pos:end="81:34"><call pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:21">get_bits1</name><argument_list pos:start="81:22" pos:end="81:29">(<argument pos:start="81:23" pos:end="81:28"><expr pos:start="81:23" pos:end="81:28"><operator pos:start="81:23" pos:end="81:23">&amp;</operator><name pos:start="81:24" pos:end="81:28"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:31" pos:end="81:32">==</operator> <literal type="number" pos:start="81:34" pos:end="81:34">0</literal></expr>)</condition> <block pos:start="81:37" pos:end="97:9">{<block_content pos:start="83:13" pos:end="95:52">

            <if_stmt pos:start="83:13" pos:end="93:13"><if pos:start="83:13" pos:end="93:13">if <condition pos:start="83:16" pos:end="83:39">(<expr pos:start="83:17" pos:end="83:38"><call pos:start="83:17" pos:end="83:33"><name pos:start="83:17" pos:end="83:25">get_bits1</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:35" pos:end="83:36">==</operator> <literal type="number" pos:start="83:38" pos:end="83:38">0</literal></expr>)</condition> <block pos:start="83:41" pos:end="93:13">{<block_content pos:start="85:17" pos:end="91:43">

                <expr_stmt pos:start="85:17" pos:end="89:41"><expr pos:start="85:17" pos:end="89:40"><call pos:start="85:17" pos:end="89:40"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="89:40">(<argument pos:start="85:24" pos:end="85:31"><expr pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">avctx</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:45"><expr pos:start="85:34" pos:end="85:45"><name pos:start="85:34" pos:end="85:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="87:24" pos:end="87:62"><expr pos:start="87:24" pos:end="87:62"><literal type="string" pos:start="87:24" pos:end="87:62">"Invalid mb type in I-frame at %d %d\n"</literal></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:30"><expr pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">mb_x</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:39"><expr pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:39">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="91:17" pos:end="91:43">return <expr pos:start="91:24" pos:end="91:42"><name pos:start="91:24" pos:end="91:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:19">mb_type</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:35">MB_TYPE_QUANT</name> <operator pos:start="95:37" pos:end="95:37">|</operator> <name pos:start="95:39" pos:end="95:51">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="97:11" pos:end="101:9">else <block pos:start="97:16" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:36">

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:19">mb_type</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:35">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:27">case <expr pos:start="105:10" pos:end="105:26"><name pos:start="105:10" pos:end="105:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:80"><expr pos:start="107:9" pos:end="107:79"><name pos:start="107:9" pos:end="107:15">mb_type</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:79"><name pos:start="107:19" pos:end="107:26">get_vlc2</name><argument_list pos:start="107:27" pos:end="107:79">(<argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><operator pos:start="107:28" pos:end="107:28">&amp;</operator><name pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:29">s</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:33">gb</name></name></expr></argument>, <argument pos:start="107:36" pos:end="107:56"><expr pos:start="107:36" pos:end="107:56"><name pos:start="107:36" pos:end="107:56"><name pos:start="107:36" pos:end="107:50">ff_mb_ptype_vlc</name><operator pos:start="107:51" pos:end="107:51">.</operator><name pos:start="107:52" pos:end="107:56">table</name></name></expr></argument>, <argument pos:start="107:59" pos:end="107:75"><expr pos:start="107:59" pos:end="107:75"><name pos:start="107:59" pos:end="107:75">MB_PTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="107:78" pos:end="107:78"><expr pos:start="107:78" pos:end="107:78"><literal type="number" pos:start="107:78" pos:end="107:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="117:9"><if pos:start="109:9" pos:end="117:9">if <condition pos:start="109:12" pos:end="109:24">(<expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:19">mb_type</name> <operator pos:start="109:21" pos:end="109:21">&lt;</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>)</condition> <block pos:start="109:26" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:39">

            <expr_stmt pos:start="111:13" pos:end="113:78"><expr pos:start="111:13" pos:end="113:77"><call pos:start="111:13" pos:end="113:77"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="113:77">(<argument pos:start="111:20" pos:end="111:27"><expr pos:start="111:20" pos:end="111:27"><name pos:start="111:20" pos:end="111:27"><name pos:start="111:20" pos:end="111:20">s</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:27">avctx</name></name></expr></argument>, <argument pos:start="111:30" pos:end="111:41"><expr pos:start="111:30" pos:end="111:41"><name pos:start="111:30" pos:end="111:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="113:20" pos:end="113:58"><expr pos:start="113:20" pos:end="113:58"><literal type="string" pos:start="113:20" pos:end="113:58">"Invalid mb type in P-frame at %d %d\n"</literal></expr></argument>, <argument pos:start="113:61" pos:end="113:67"><expr pos:start="113:61" pos:end="113:67"><name pos:start="113:61" pos:end="113:67"><name pos:start="113:61" pos:end="113:61">s</name><operator pos:start="113:62" pos:end="113:63">-&gt;</operator><name pos:start="113:64" pos:end="113:67">mb_x</name></name></expr></argument>, <argument pos:start="113:70" pos:end="113:76"><expr pos:start="113:70" pos:end="113:76"><name pos:start="113:70" pos:end="113:76"><name pos:start="113:70" pos:end="113:70">s</name><operator pos:start="113:71" pos:end="113:72">-&gt;</operator><name pos:start="113:73" pos:end="113:76">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:39">return <expr pos:start="115:20" pos:end="115:38"><name pos:start="115:20" pos:end="115:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:41"><expr pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:15">mb_type</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:40"><name pos:start="119:19" pos:end="119:31">ptype2mb_type</name><index pos:start="119:32" pos:end="119:40">[<expr pos:start="119:33" pos:end="119:39"><name pos:start="119:33" pos:end="119:39">mb_type</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:27">case <expr pos:start="123:10" pos:end="123:26"><name pos:start="123:10" pos:end="123:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:80"><expr pos:start="125:9" pos:end="125:79"><name pos:start="125:9" pos:end="125:15">mb_type</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:79"><name pos:start="125:19" pos:end="125:26">get_vlc2</name><argument_list pos:start="125:27" pos:end="125:79">(<argument pos:start="125:28" pos:end="125:33"><expr pos:start="125:28" pos:end="125:33"><operator pos:start="125:28" pos:end="125:28">&amp;</operator><name pos:start="125:29" pos:end="125:33"><name pos:start="125:29" pos:end="125:29">s</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:33">gb</name></name></expr></argument>, <argument pos:start="125:36" pos:end="125:56"><expr pos:start="125:36" pos:end="125:56"><name pos:start="125:36" pos:end="125:56"><name pos:start="125:36" pos:end="125:50">ff_mb_btype_vlc</name><operator pos:start="125:51" pos:end="125:51">.</operator><name pos:start="125:52" pos:end="125:56">table</name></name></expr></argument>, <argument pos:start="125:59" pos:end="125:75"><expr pos:start="125:59" pos:end="125:75"><name pos:start="125:59" pos:end="125:75">MB_BTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="125:78" pos:end="125:78"><expr pos:start="125:78" pos:end="125:78"><literal type="number" pos:start="125:78" pos:end="125:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:24">(<expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:19">mb_type</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition> <block pos:start="127:26" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:39">

            <expr_stmt pos:start="129:13" pos:end="131:78"><expr pos:start="129:13" pos:end="131:77"><call pos:start="129:13" pos:end="131:77"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="131:77">(<argument pos:start="129:20" pos:end="129:27"><expr pos:start="129:20" pos:end="129:27"><name pos:start="129:20" pos:end="129:27"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:27">avctx</name></name></expr></argument>, <argument pos:start="129:30" pos:end="129:41"><expr pos:start="129:30" pos:end="129:41"><name pos:start="129:30" pos:end="129:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:58"><expr pos:start="131:20" pos:end="131:58"><literal type="string" pos:start="131:20" pos:end="131:58">"Invalid mb type in B-frame at %d %d\n"</literal></expr></argument>, <argument pos:start="131:61" pos:end="131:67"><expr pos:start="131:61" pos:end="131:67"><name pos:start="131:61" pos:end="131:67"><name pos:start="131:61" pos:end="131:61">s</name><operator pos:start="131:62" pos:end="131:63">-&gt;</operator><name pos:start="131:64" pos:end="131:67">mb_x</name></name></expr></argument>, <argument pos:start="131:70" pos:end="131:76"><expr pos:start="131:70" pos:end="131:76"><name pos:start="131:70" pos:end="131:76"><name pos:start="131:70" pos:end="131:70">s</name><operator pos:start="131:71" pos:end="131:72">-&gt;</operator><name pos:start="131:73" pos:end="131:76">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:39">return <expr pos:start="133:20" pos:end="133:38"><name pos:start="133:20" pos:end="133:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:41"><expr pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:15">mb_type</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:40"><name pos:start="137:19" pos:end="137:31">btype2mb_type</name><index pos:start="137:32" pos:end="137:40">[<expr pos:start="137:33" pos:end="137:39"><name pos:start="137:33" pos:end="137:39">mb_type</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="143:5" pos:end="143:47"><expr pos:start="143:5" pos:end="143:46"><call pos:start="143:5" pos:end="143:46"><name pos:start="143:5" pos:end="143:11">ff_tlog</name><argument_list pos:start="143:12" pos:end="143:46">(<argument pos:start="143:13" pos:end="143:20"><expr pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">avctx</name></name></expr></argument>, <argument pos:start="143:23" pos:end="143:36"><expr pos:start="143:23" pos:end="143:36"><literal type="string" pos:start="143:23" pos:end="143:36">"mb_type=%x\n"</literal></expr></argument>, <argument pos:start="143:39" pos:end="143:45"><expr pos:start="143:39" pos:end="143:45"><name pos:start="143:39" pos:end="143:45">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="145:1" pos:end="145:42">//    motion_type = 0; /* avoid warning */</comment>

    <if_stmt pos:start="147:5" pos:end="781:5"><if pos:start="147:5" pos:end="275:5">if <condition pos:start="147:8" pos:end="147:26">(<expr pos:start="147:9" pos:end="147:25"><call pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:16">IS_INTRA</name><argument_list pos:start="147:17" pos:end="147:25">(<argument pos:start="147:18" pos:end="147:24"><expr pos:start="147:18" pos:end="147:24"><name pos:start="147:18" pos:end="147:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:28" pos:end="275:5">{<block_content pos:start="149:9" pos:end="273:9">

        <expr_stmt pos:start="149:9" pos:end="149:42"><expr pos:start="149:9" pos:end="149:41"><call pos:start="149:9" pos:end="149:41"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">bdsp</name><operator pos:start="149:16" pos:end="149:16">.</operator><name pos:start="149:17" pos:end="149:28">clear_blocks</name></name><argument_list pos:start="149:29" pos:end="149:41">(<argument pos:start="149:30" pos:end="149:40"><expr pos:start="149:30" pos:end="149:40"><name pos:start="149:30" pos:end="149:40"><name pos:start="149:30" pos:end="149:30">s</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:37">block</name><index pos:start="149:38" pos:end="149:40">[<expr pos:start="149:39" pos:end="149:39"><literal type="number" pos:start="149:39" pos:end="149:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="155:46"><if pos:start="153:9" pos:end="155:46">if <condition pos:start="153:12" pos:end="153:31">(<expr pos:start="153:13" pos:end="153:30"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:30"><name pos:start="153:14" pos:end="153:14">s</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:30">chroma_y_shift</name></name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:46"><block_content pos:start="155:13" pos:end="155:46">

            <expr_stmt pos:start="155:13" pos:end="155:46"><expr pos:start="155:13" pos:end="155:45"><call pos:start="155:13" pos:end="155:45"><name pos:start="155:13" pos:end="155:32"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:19">bdsp</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:32">clear_blocks</name></name><argument_list pos:start="155:33" pos:end="155:45">(<argument pos:start="155:34" pos:end="155:44"><expr pos:start="155:34" pos:end="155:44"><name pos:start="155:34" pos:end="155:44"><name pos:start="155:34" pos:end="155:34">s</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:41">block</name><index pos:start="155:42" pos:end="155:44">[<expr pos:start="155:43" pos:end="155:43"><literal type="number" pos:start="155:43" pos:end="155:43">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="159:9" pos:end="159:30">/* compute DCT type */</comment>

        <comment type="line" pos:start="161:9" pos:end="161:50">// FIXME: add an interlaced_dct coded var?</comment>

        <if_stmt pos:start="163:9" pos:end="167:50"><if pos:start="163:9" pos:end="167:50">if <condition pos:start="163:12" pos:end="165:37">(<expr pos:start="163:13" pos:end="165:36"><name pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:32">picture_structure</name></name> <operator pos:start="163:34" pos:end="163:35">==</operator> <name pos:start="163:37" pos:end="163:46">PICT_FRAME</name> <operator pos:start="163:48" pos:end="163:49">&amp;&amp;</operator>

            <operator pos:start="165:13" pos:end="165:13">!</operator><name pos:start="165:14" pos:end="165:36"><name pos:start="165:14" pos:end="165:14">s</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:36">frame_pred_frame_dct</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:50"><block_content pos:start="167:13" pos:end="167:50">

            <expr_stmt pos:start="167:13" pos:end="167:50"><expr pos:start="167:13" pos:end="167:49"><name pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:29">interlaced_dct</name></name> <operator pos:start="167:31" pos:end="167:31">=</operator> <call pos:start="167:33" pos:end="167:49"><name pos:start="167:33" pos:end="167:41">get_bits1</name><argument_list pos:start="167:42" pos:end="167:49">(<argument pos:start="167:43" pos:end="167:48"><expr pos:start="167:43" pos:end="167:48"><operator pos:start="167:43" pos:end="167:43">&amp;</operator><name pos:start="167:44" pos:end="167:48"><name pos:start="167:44" pos:end="167:44">s</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="171:9" pos:end="173:38"><if pos:start="171:9" pos:end="173:38">if <condition pos:start="171:12" pos:end="171:30">(<expr pos:start="171:13" pos:end="171:29"><call pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:20">IS_QUANT</name><argument_list pos:start="171:21" pos:end="171:29">(<argument pos:start="171:22" pos:end="171:28"><expr pos:start="171:22" pos:end="171:28"><name pos:start="171:22" pos:end="171:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:38"><block_content pos:start="173:13" pos:end="173:38">

            <expr_stmt pos:start="173:13" pos:end="173:38"><expr pos:start="173:13" pos:end="173:37"><name pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:21">qscale</name></name> <operator pos:start="173:23" pos:end="173:23">=</operator> <call pos:start="173:25" pos:end="173:37"><name pos:start="173:25" pos:end="173:34">get_qscale</name><argument_list pos:start="173:35" pos:end="173:37">(<argument pos:start="173:36" pos:end="173:36"><expr pos:start="173:36" pos:end="173:36"><name pos:start="173:36" pos:end="173:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="213:9"><if pos:start="177:9" pos:end="207:9">if <condition pos:start="177:12" pos:end="177:42">(<expr pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:41">concealment_motion_vectors</name></name></expr>)</condition> <block pos:start="177:44" pos:end="207:9">{<block_content pos:start="181:13" pos:end="205:79">

            <comment type="block" pos:start="179:13" pos:end="179:33">/* just parse them */</comment>

            <if_stmt pos:start="181:13" pos:end="183:35"><if pos:start="181:13" pos:end="183:35">if <condition pos:start="181:16" pos:end="181:51">(<expr pos:start="181:17" pos:end="181:50"><name pos:start="181:17" pos:end="181:36"><name pos:start="181:17" pos:end="181:17">s</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:36">picture_structure</name></name> <operator pos:start="181:38" pos:end="181:39">!=</operator> <name pos:start="181:41" pos:end="181:50">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="183:35"><block_content pos:start="183:17" pos:end="183:35">

                <expr_stmt pos:start="183:17" pos:end="183:35"><expr pos:start="183:17" pos:end="183:34"><call pos:start="183:17" pos:end="183:34"><name pos:start="183:17" pos:end="183:26">skip_bits1</name><argument_list pos:start="183:27" pos:end="183:34">(<argument pos:start="183:28" pos:end="183:33"><expr pos:start="183:28" pos:end="183:33"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:33"><name pos:start="183:29" pos:end="183:29">s</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="183:38" pos:end="183:55">/* field select */</comment>



            <expr_stmt pos:start="187:13" pos:end="193:74"><expr pos:start="187:13" pos:end="193:73"><name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:17">mv</name><index pos:start="187:18" pos:end="187:20">[<expr pos:start="187:19" pos:end="187:19"><literal type="number" pos:start="187:19" pos:end="187:19">0</literal></expr>]</index><index pos:start="187:21" pos:end="187:23">[<expr pos:start="187:22" pos:end="187:22"><literal type="number" pos:start="187:22" pos:end="187:22">0</literal></expr>]</index><index pos:start="187:24" pos:end="187:26">[<expr pos:start="187:25" pos:end="187:25"><literal type="number" pos:start="187:25" pos:end="187:25">0</literal></expr>]</index></name>      <operator pos:start="187:33" pos:end="187:33">=</operator>

            <name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:22">last_mv</name><index pos:start="189:23" pos:end="189:25">[<expr pos:start="189:24" pos:end="189:24"><literal type="number" pos:start="189:24" pos:end="189:24">0</literal></expr>]</index><index pos:start="189:26" pos:end="189:28">[<expr pos:start="189:27" pos:end="189:27"><literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr>]</index><index pos:start="189:29" pos:end="189:31">[<expr pos:start="189:30" pos:end="189:30"><literal type="number" pos:start="189:30" pos:end="189:30">0</literal></expr>]</index></name> <operator pos:start="189:33" pos:end="189:33">=</operator>

            <name pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:22">last_mv</name><index pos:start="191:23" pos:end="191:25">[<expr pos:start="191:24" pos:end="191:24"><literal type="number" pos:start="191:24" pos:end="191:24">0</literal></expr>]</index><index pos:start="191:26" pos:end="191:28">[<expr pos:start="191:27" pos:end="191:27"><literal type="number" pos:start="191:27" pos:end="191:27">1</literal></expr>]</index><index pos:start="191:29" pos:end="191:31">[<expr pos:start="191:30" pos:end="191:30"><literal type="number" pos:start="191:30" pos:end="191:30">0</literal></expr>]</index></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <call pos:start="191:35" pos:end="193:73"><name pos:start="191:35" pos:end="191:52">mpeg_decode_motion</name><argument_list pos:start="191:53" pos:end="193:73">(<argument pos:start="191:54" pos:end="191:54"><expr pos:start="191:54" pos:end="191:54"><name pos:start="191:54" pos:end="191:54">s</name></expr></argument>, <argument pos:start="191:57" pos:end="191:76"><expr pos:start="191:57" pos:end="191:76"><name pos:start="191:57" pos:end="191:76"><name pos:start="191:57" pos:end="191:57">s</name><operator pos:start="191:58" pos:end="191:59">-&gt;</operator><name pos:start="191:60" pos:end="191:70">mpeg_f_code</name><index pos:start="191:71" pos:end="191:73">[<expr pos:start="191:72" pos:end="191:72"><literal type="number" pos:start="191:72" pos:end="191:72">0</literal></expr>]</index><index pos:start="191:74" pos:end="191:76">[<expr pos:start="191:75" pos:end="191:75"><literal type="number" pos:start="191:75" pos:end="191:75">0</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="193:54" pos:end="193:72"><expr pos:start="193:54" pos:end="193:72"><name pos:start="193:54" pos:end="193:72"><name pos:start="193:54" pos:end="193:54">s</name><operator pos:start="193:55" pos:end="193:56">-&gt;</operator><name pos:start="193:57" pos:end="193:63">last_mv</name><index pos:start="193:64" pos:end="193:66">[<expr pos:start="193:65" pos:end="193:65"><literal type="number" pos:start="193:65" pos:end="193:65">0</literal></expr>]</index><index pos:start="193:67" pos:end="193:69">[<expr pos:start="193:68" pos:end="193:68"><literal type="number" pos:start="193:68" pos:end="193:68">0</literal></expr>]</index><index pos:start="193:70" pos:end="193:72">[<expr pos:start="193:71" pos:end="193:71"><literal type="number" pos:start="193:71" pos:end="193:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="201:74"><expr pos:start="195:13" pos:end="201:73"><name pos:start="195:13" pos:end="195:26"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:17">mv</name><index pos:start="195:18" pos:end="195:20">[<expr pos:start="195:19" pos:end="195:19"><literal type="number" pos:start="195:19" pos:end="195:19">0</literal></expr>]</index><index pos:start="195:21" pos:end="195:23">[<expr pos:start="195:22" pos:end="195:22"><literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>]</index><index pos:start="195:24" pos:end="195:26">[<expr pos:start="195:25" pos:end="195:25"><literal type="number" pos:start="195:25" pos:end="195:25">1</literal></expr>]</index></name>      <operator pos:start="195:33" pos:end="195:33">=</operator>

            <name pos:start="197:13" pos:end="197:31"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:22">last_mv</name><index pos:start="197:23" pos:end="197:25">[<expr pos:start="197:24" pos:end="197:24"><literal type="number" pos:start="197:24" pos:end="197:24">0</literal></expr>]</index><index pos:start="197:26" pos:end="197:28">[<expr pos:start="197:27" pos:end="197:27"><literal type="number" pos:start="197:27" pos:end="197:27">0</literal></expr>]</index><index pos:start="197:29" pos:end="197:31">[<expr pos:start="197:30" pos:end="197:30"><literal type="number" pos:start="197:30" pos:end="197:30">1</literal></expr>]</index></name> <operator pos:start="197:33" pos:end="197:33">=</operator>

            <name pos:start="199:13" pos:end="199:31"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:22">last_mv</name><index pos:start="199:23" pos:end="199:25">[<expr pos:start="199:24" pos:end="199:24"><literal type="number" pos:start="199:24" pos:end="199:24">0</literal></expr>]</index><index pos:start="199:26" pos:end="199:28">[<expr pos:start="199:27" pos:end="199:27"><literal type="number" pos:start="199:27" pos:end="199:27">1</literal></expr>]</index><index pos:start="199:29" pos:end="199:31">[<expr pos:start="199:30" pos:end="199:30"><literal type="number" pos:start="199:30" pos:end="199:30">1</literal></expr>]</index></name> <operator pos:start="199:33" pos:end="199:33">=</operator> <call pos:start="199:35" pos:end="201:73"><name pos:start="199:35" pos:end="199:52">mpeg_decode_motion</name><argument_list pos:start="199:53" pos:end="201:73">(<argument pos:start="199:54" pos:end="199:54"><expr pos:start="199:54" pos:end="199:54"><name pos:start="199:54" pos:end="199:54">s</name></expr></argument>, <argument pos:start="199:57" pos:end="199:76"><expr pos:start="199:57" pos:end="199:76"><name pos:start="199:57" pos:end="199:76"><name pos:start="199:57" pos:end="199:57">s</name><operator pos:start="199:58" pos:end="199:59">-&gt;</operator><name pos:start="199:60" pos:end="199:70">mpeg_f_code</name><index pos:start="199:71" pos:end="199:73">[<expr pos:start="199:72" pos:end="199:72"><literal type="number" pos:start="199:72" pos:end="199:72">0</literal></expr>]</index><index pos:start="199:74" pos:end="199:76">[<expr pos:start="199:75" pos:end="199:75"><literal type="number" pos:start="199:75" pos:end="199:75">1</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="201:54" pos:end="201:72"><expr pos:start="201:54" pos:end="201:72"><name pos:start="201:54" pos:end="201:72"><name pos:start="201:54" pos:end="201:54">s</name><operator pos:start="201:55" pos:end="201:56">-&gt;</operator><name pos:start="201:57" pos:end="201:63">last_mv</name><index pos:start="201:64" pos:end="201:66">[<expr pos:start="201:65" pos:end="201:65"><literal type="number" pos:start="201:65" pos:end="201:65">0</literal></expr>]</index><index pos:start="201:67" pos:end="201:69">[<expr pos:start="201:68" pos:end="201:68"><literal type="number" pos:start="201:68" pos:end="201:68">0</literal></expr>]</index><index pos:start="201:70" pos:end="201:72">[<expr pos:start="201:71" pos:end="201:71"><literal type="number" pos:start="201:71" pos:end="201:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="205:13" pos:end="205:79"><expr pos:start="205:13" pos:end="205:78"><call pos:start="205:13" pos:end="205:78"><name pos:start="205:13" pos:end="205:24">check_marker</name><argument_list pos:start="205:25" pos:end="205:78">(<argument pos:start="205:26" pos:end="205:33"><expr pos:start="205:26" pos:end="205:33"><name pos:start="205:26" pos:end="205:33"><name pos:start="205:26" pos:end="205:26">s</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:33">avctx</name></name></expr></argument>, <argument pos:start="205:36" pos:end="205:41"><expr pos:start="205:36" pos:end="205:41"><operator pos:start="205:36" pos:end="205:36">&amp;</operator><name pos:start="205:37" pos:end="205:41"><name pos:start="205:37" pos:end="205:37">s</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:41">gb</name></name></expr></argument>, <argument pos:start="205:44" pos:end="205:77"><expr pos:start="205:44" pos:end="205:77"><literal type="string" pos:start="205:44" pos:end="205:77">"after concealment_motion_vectors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="207:11" pos:end="213:9">else <block pos:start="207:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:54">

            <comment type="block" pos:start="209:13" pos:end="209:37">/* reset mv prediction */</comment>

            <expr_stmt pos:start="211:13" pos:end="211:54"><expr pos:start="211:13" pos:end="211:53"><call pos:start="211:13" pos:end="211:53"><name pos:start="211:13" pos:end="211:18">memset</name><argument_list pos:start="211:19" pos:end="211:53">(<argument pos:start="211:20" pos:end="211:29"><expr pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:29">last_mv</name></name></expr></argument>, <argument pos:start="211:32" pos:end="211:32"><expr pos:start="211:32" pos:end="211:32"><literal type="number" pos:start="211:32" pos:end="211:32">0</literal></expr></argument>, <argument pos:start="211:35" pos:end="211:52"><expr pos:start="211:35" pos:end="211:52"><sizeof pos:start="211:35" pos:end="211:52">sizeof<argument_list pos:start="211:41" pos:end="211:52">(<argument pos:start="211:42" pos:end="211:51"><expr pos:start="211:42" pos:end="211:51"><name pos:start="211:42" pos:end="211:51"><name pos:start="211:42" pos:end="211:42">s</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:51">last_mv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:24"><expr pos:start="215:9" pos:end="215:23"><name pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:19">mb_intra</name></name> <operator pos:start="215:21" pos:end="215:21">=</operator> <literal type="number" pos:start="215:23" pos:end="215:23">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="217:9" pos:end="217:46">// if 1, we memcpy blocks in xvmcvideo</comment>

        <if_stmt pos:start="219:9" pos:end="221:40"><if pos:start="219:9" pos:end="221:40">if <condition pos:start="219:12" pos:end="219:88">(<expr pos:start="219:13" pos:end="219:87"><operator pos:start="219:13" pos:end="219:13">(</operator><name pos:start="219:14" pos:end="219:38">CONFIG_MPEG1_XVMC_HWACCEL</name> <operator pos:start="219:40" pos:end="219:41">||</operator> <name pos:start="219:43" pos:end="219:67">CONFIG_MPEG2_XVMC_HWACCEL</name><operator pos:start="219:68" pos:end="219:68">)</operator> <operator pos:start="219:70" pos:end="219:71">&amp;&amp;</operator> <name pos:start="219:73" pos:end="219:87"><name pos:start="219:73" pos:end="219:73">s</name><operator pos:start="219:74" pos:end="219:75">-&gt;</operator><name pos:start="219:76" pos:end="219:87">pack_pblocks</name></name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:40"><block_content pos:start="221:13" pos:end="221:40">

            <expr_stmt pos:start="221:13" pos:end="221:40"><expr pos:start="221:13" pos:end="221:39"><call pos:start="221:13" pos:end="221:39"><name pos:start="221:13" pos:end="221:32">ff_xvmc_pack_pblocks</name><argument_list pos:start="221:33" pos:end="221:39">(<argument pos:start="221:34" pos:end="221:34"><expr pos:start="221:34" pos:end="221:34"><name pos:start="221:34" pos:end="221:34">s</name></expr></argument>, <argument pos:start="221:37" pos:end="221:38"><expr pos:start="221:37" pos:end="221:38"><operator pos:start="221:37" pos:end="221:37">-</operator><literal type="number" pos:start="221:38" pos:end="221:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="221:42" pos:end="221:72">// inter are always full blocks</comment>



        <if_stmt pos:start="225:9" pos:end="273:9"><if pos:start="225:9" pos:end="243:9">if <condition pos:start="225:12" pos:end="225:50">(<expr pos:start="225:13" pos:end="225:49"><name pos:start="225:13" pos:end="225:23"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:23">codec_id</name></name> <operator pos:start="225:25" pos:end="225:26">==</operator> <name pos:start="225:28" pos:end="225:49">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="225:52" pos:end="243:9">{<block_content pos:start="227:13" pos:end="241:13">

            <if_stmt pos:start="227:13" pos:end="241:13"><if pos:start="227:13" pos:end="233:13">if <condition pos:start="227:16" pos:end="227:55">(<expr pos:start="227:17" pos:end="227:54"><name pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:24">avctx</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:32">flags2</name></name> <operator pos:start="227:34" pos:end="227:34">&amp;</operator> <name pos:start="227:36" pos:end="227:54">AV_CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="227:57" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:72">

                <for pos:start="229:17" pos:end="231:72">for <control pos:start="229:21" pos:end="229:39">(<init pos:start="229:22" pos:end="229:27"><expr pos:start="229:22" pos:end="229:26"><name pos:start="229:22" pos:end="229:22">i</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>;</init> <condition pos:start="229:29" pos:end="229:34"><expr pos:start="229:29" pos:end="229:33"><name pos:start="229:29" pos:end="229:29">i</name> <operator pos:start="229:31" pos:end="229:31">&lt;</operator> <literal type="number" pos:start="229:33" pos:end="229:33">6</literal></expr>;</condition> <incr pos:start="229:36" pos:end="229:38"><expr pos:start="229:36" pos:end="229:38"><name pos:start="229:36" pos:end="229:36">i</name><operator pos:start="229:37" pos:end="229:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="231:21" pos:end="231:72"><block_content pos:start="231:21" pos:end="231:72">

                    <expr_stmt pos:start="231:21" pos:end="231:72"><expr pos:start="231:21" pos:end="231:71"><call pos:start="231:21" pos:end="231:71"><name pos:start="231:21" pos:end="231:49">mpeg2_fast_decode_block_intra</name><argument_list pos:start="231:50" pos:end="231:71">(<argument pos:start="231:51" pos:end="231:51"><expr pos:start="231:51" pos:end="231:51"><name pos:start="231:51" pos:end="231:51">s</name></expr></argument>, <argument pos:start="231:54" pos:end="231:67"><expr pos:start="231:54" pos:end="231:67"><operator pos:start="231:54" pos:end="231:54">*</operator><name pos:start="231:55" pos:end="231:67"><name pos:start="231:55" pos:end="231:55">s</name><operator pos:start="231:56" pos:end="231:57">-&gt;</operator><name pos:start="231:58" pos:end="231:64">pblocks</name><index pos:start="231:65" pos:end="231:67">[<expr pos:start="231:66" pos:end="231:66"><name pos:start="231:66" pos:end="231:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="231:70" pos:end="231:70"><expr pos:start="231:70" pos:end="231:70"><name pos:start="231:70" pos:end="231:70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="233:15" pos:end="241:13">else <block pos:start="233:20" pos:end="241:13">{<block_content pos:start="235:17" pos:end="239:35">

                <for pos:start="235:17" pos:end="239:35">for <control pos:start="235:21" pos:end="235:52">(<init pos:start="235:22" pos:end="235:27"><expr pos:start="235:22" pos:end="235:26"><name pos:start="235:22" pos:end="235:22">i</name> <operator pos:start="235:24" pos:end="235:24">=</operator> <literal type="number" pos:start="235:26" pos:end="235:26">0</literal></expr>;</init> <condition pos:start="235:29" pos:end="235:47"><expr pos:start="235:29" pos:end="235:46"><name pos:start="235:29" pos:end="235:29">i</name> <operator pos:start="235:31" pos:end="235:31">&lt;</operator> <name pos:start="235:33" pos:end="235:46">mb_block_count</name></expr>;</condition> <incr pos:start="235:49" pos:end="235:51"><expr pos:start="235:49" pos:end="235:51"><name pos:start="235:49" pos:end="235:49">i</name><operator pos:start="235:50" pos:end="235:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="237:21" pos:end="239:35"><block_content pos:start="237:21" pos:end="239:35">

                    <if_stmt pos:start="237:21" pos:end="239:35"><if pos:start="237:21" pos:end="239:35">if <condition pos:start="237:24" pos:end="237:83">(<expr pos:start="237:25" pos:end="237:82"><operator pos:start="237:25" pos:end="237:25">(</operator><name pos:start="237:26" pos:end="237:28">ret</name> <operator pos:start="237:30" pos:end="237:30">=</operator> <call pos:start="237:32" pos:end="237:77"><name pos:start="237:32" pos:end="237:55">mpeg2_decode_block_intra</name><argument_list pos:start="237:56" pos:end="237:77">(<argument pos:start="237:57" pos:end="237:57"><expr pos:start="237:57" pos:end="237:57"><name pos:start="237:57" pos:end="237:57">s</name></expr></argument>, <argument pos:start="237:60" pos:end="237:73"><expr pos:start="237:60" pos:end="237:73"><operator pos:start="237:60" pos:end="237:60">*</operator><name pos:start="237:61" pos:end="237:73"><name pos:start="237:61" pos:end="237:61">s</name><operator pos:start="237:62" pos:end="237:63">-&gt;</operator><name pos:start="237:64" pos:end="237:70">pblocks</name><index pos:start="237:71" pos:end="237:73">[<expr pos:start="237:72" pos:end="237:72"><name pos:start="237:72" pos:end="237:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="237:76" pos:end="237:76"><expr pos:start="237:76" pos:end="237:76"><name pos:start="237:76" pos:end="237:76">i</name></expr></argument>)</argument_list></call><operator pos:start="237:78" pos:end="237:78">)</operator> <operator pos:start="237:80" pos:end="237:80">&lt;</operator> <literal type="number" pos:start="237:82" pos:end="237:82">0</literal></expr>)</condition><block type="pseudo" pos:start="239:25" pos:end="239:35"><block_content pos:start="239:25" pos:end="239:35">

                        <return pos:start="239:25" pos:end="239:35">return <expr pos:start="239:32" pos:end="239:34"><name pos:start="239:32" pos:end="239:34">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="243:11" pos:end="273:9">else <block pos:start="243:16" pos:end="273:9">{<block_content pos:start="245:13" pos:end="271:13">

            <for pos:start="245:13" pos:end="271:13">for <control pos:start="245:17" pos:end="245:35">(<init pos:start="245:18" pos:end="245:23"><expr pos:start="245:18" pos:end="245:22"><name pos:start="245:18" pos:end="245:18">i</name> <operator pos:start="245:20" pos:end="245:20">=</operator> <literal type="number" pos:start="245:22" pos:end="245:22">0</literal></expr>;</init> <condition pos:start="245:25" pos:end="245:30"><expr pos:start="245:25" pos:end="245:29"><name pos:start="245:25" pos:end="245:25">i</name> <operator pos:start="245:27" pos:end="245:27">&lt;</operator> <literal type="number" pos:start="245:29" pos:end="245:29">6</literal></expr>;</condition> <incr pos:start="245:32" pos:end="245:34"><expr pos:start="245:32" pos:end="245:34"><name pos:start="245:32" pos:end="245:32">i</name><operator pos:start="245:33" pos:end="245:34">++</operator></expr></incr>)</control> <block pos:start="245:37" pos:end="271:13">{<block_content pos:start="247:17" pos:end="269:45">

                <expr_stmt pos:start="247:17" pos:end="255:64"><expr pos:start="247:17" pos:end="255:63"><name pos:start="247:17" pos:end="247:19">ret</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <call pos:start="247:23" pos:end="255:63"><name pos:start="247:23" pos:end="247:49">ff_mpeg1_decode_block_intra</name><argument_list pos:start="247:50" pos:end="255:63">(<argument pos:start="247:51" pos:end="247:56"><expr pos:start="247:51" pos:end="247:56"><operator pos:start="247:51" pos:end="247:51">&amp;</operator><name pos:start="247:52" pos:end="247:56"><name pos:start="247:52" pos:end="247:52">s</name><operator pos:start="247:53" pos:end="247:54">-&gt;</operator><name pos:start="247:55" pos:end="247:56">gb</name></name></expr></argument>,

                                                  <argument pos:start="249:51" pos:end="249:65"><expr pos:start="249:51" pos:end="249:65"><name pos:start="249:51" pos:end="249:65"><name pos:start="249:51" pos:end="249:51">s</name><operator pos:start="249:52" pos:end="249:53">-&gt;</operator><name pos:start="249:54" pos:end="249:65">intra_matrix</name></name></expr></argument>,

                                                  <argument pos:start="251:51" pos:end="251:79"><expr pos:start="251:51" pos:end="251:79"><name pos:start="251:51" pos:end="251:79"><name pos:start="251:51" pos:end="251:51">s</name><operator pos:start="251:52" pos:end="251:53">-&gt;</operator><name pos:start="251:54" pos:end="251:68">intra_scantable</name><operator pos:start="251:69" pos:end="251:69">.</operator><name pos:start="251:70" pos:end="251:79">permutated</name></name></expr></argument>,

                                                  <argument pos:start="253:51" pos:end="253:60"><expr pos:start="253:51" pos:end="253:60"><name pos:start="253:51" pos:end="253:60"><name pos:start="253:51" pos:end="253:51">s</name><operator pos:start="253:52" pos:end="253:53">-&gt;</operator><name pos:start="253:54" pos:end="253:60">last_dc</name></name></expr></argument>, <argument pos:start="253:63" pos:end="253:76"><expr pos:start="253:63" pos:end="253:76"><operator pos:start="253:63" pos:end="253:63">*</operator><name pos:start="253:64" pos:end="253:76"><name pos:start="253:64" pos:end="253:64">s</name><operator pos:start="253:65" pos:end="253:66">-&gt;</operator><name pos:start="253:67" pos:end="253:73">pblocks</name><index pos:start="253:74" pos:end="253:76">[<expr pos:start="253:75" pos:end="253:75"><name pos:start="253:75" pos:end="253:75">i</name></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="255:51" pos:end="255:51"><expr pos:start="255:51" pos:end="255:51"><name pos:start="255:51" pos:end="255:51">i</name></expr></argument>, <argument pos:start="255:54" pos:end="255:62"><expr pos:start="255:54" pos:end="255:62"><name pos:start="255:54" pos:end="255:62"><name pos:start="255:54" pos:end="255:54">s</name><operator pos:start="255:55" pos:end="255:56">-&gt;</operator><name pos:start="255:57" pos:end="255:62">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="257:17" pos:end="265:17"><if pos:start="257:17" pos:end="265:17">if <condition pos:start="257:20" pos:end="257:28">(<expr pos:start="257:21" pos:end="257:27"><name pos:start="257:21" pos:end="257:23">ret</name> <operator pos:start="257:25" pos:end="257:25">&lt;</operator> <literal type="number" pos:start="257:27" pos:end="257:27">0</literal></expr>)</condition> <block pos:start="257:30" pos:end="265:17">{<block_content pos:start="259:21" pos:end="263:31">

                    <expr_stmt pos:start="259:21" pos:end="261:45"><expr pos:start="259:21" pos:end="261:44"><call pos:start="259:21" pos:end="261:44"><name pos:start="259:21" pos:end="259:26">av_log</name><argument_list pos:start="259:27" pos:end="261:44">(<argument pos:start="259:28" pos:end="259:35"><expr pos:start="259:28" pos:end="259:35"><name pos:start="259:28" pos:end="259:35"><name pos:start="259:28" pos:end="259:28">s</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:35">avctx</name></name></expr></argument>, <argument pos:start="259:38" pos:end="259:49"><expr pos:start="259:38" pos:end="259:49"><name pos:start="259:38" pos:end="259:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:52" pos:end="259:78"><expr pos:start="259:52" pos:end="259:78"><literal type="string" pos:start="259:52" pos:end="259:78">"ac-tex damaged at %d %d\n"</literal></expr></argument>,

                           <argument pos:start="261:28" pos:end="261:34"><expr pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:28">s</name><operator pos:start="261:29" pos:end="261:30">-&gt;</operator><name pos:start="261:31" pos:end="261:34">mb_x</name></name></expr></argument>, <argument pos:start="261:37" pos:end="261:43"><expr pos:start="261:37" pos:end="261:43"><name pos:start="261:37" pos:end="261:43"><name pos:start="261:37" pos:end="261:37">s</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:43">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="263:21" pos:end="263:31">return <expr pos:start="263:28" pos:end="263:30"><name pos:start="263:28" pos:end="263:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="269:17" pos:end="269:45"><expr pos:start="269:17" pos:end="269:44"><name pos:start="269:17" pos:end="269:38"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:35">block_last_index</name><index pos:start="269:36" pos:end="269:38">[<expr pos:start="269:37" pos:end="269:37"><name pos:start="269:37" pos:end="269:37">i</name></expr>]</index></name> <operator pos:start="269:40" pos:end="269:40">=</operator> <name pos:start="269:42" pos:end="269:44">ret</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="275:7" pos:end="781:5">else <block pos:start="275:12" pos:end="781:5">{<block_content pos:start="277:9" pos:end="779:9">

        <if_stmt pos:start="277:9" pos:end="643:9"><if pos:start="277:9" pos:end="325:9">if <condition pos:start="277:12" pos:end="277:38">(<expr pos:start="277:13" pos:end="277:37"><name pos:start="277:13" pos:end="277:19">mb_type</name> <operator pos:start="277:21" pos:end="277:21">&amp;</operator> <name pos:start="277:23" pos:end="277:37">MB_TYPE_ZERO_MV</name></expr>)</condition> <block pos:start="277:40" pos:end="325:9">{<block_content pos:start="279:13" pos:end="323:36">

            <expr_stmt pos:start="279:13" pos:end="279:46"><expr pos:start="279:13" pos:end="279:45"><call pos:start="279:13" pos:end="279:45"><name pos:start="279:13" pos:end="279:22">av_assert2</name><argument_list pos:start="279:23" pos:end="279:45">(<argument pos:start="279:24" pos:end="279:44"><expr pos:start="279:24" pos:end="279:44"><name pos:start="279:24" pos:end="279:30">mb_type</name> <operator pos:start="279:32" pos:end="279:32">&amp;</operator> <name pos:start="279:34" pos:end="279:44">MB_TYPE_CBP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="283:13" pos:end="283:39"><expr pos:start="283:13" pos:end="283:38"><name pos:start="283:13" pos:end="283:21"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:21">mv_dir</name></name> <operator pos:start="283:23" pos:end="283:23">=</operator> <name pos:start="283:25" pos:end="283:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <if_stmt pos:start="285:13" pos:end="303:13"><if pos:start="285:13" pos:end="295:13">if <condition pos:start="285:16" pos:end="285:51">(<expr pos:start="285:17" pos:end="285:50"><name pos:start="285:17" pos:end="285:36"><name pos:start="285:17" pos:end="285:17">s</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:36">picture_structure</name></name> <operator pos:start="285:38" pos:end="285:39">==</operator> <name pos:start="285:41" pos:end="285:50">PICT_FRAME</name></expr>)</condition> <block pos:start="285:53" pos:end="295:13">{<block_content pos:start="287:17" pos:end="293:43">

                <if_stmt pos:start="287:17" pos:end="291:58"><if pos:start="287:17" pos:end="291:58">if <condition pos:start="287:20" pos:end="289:48">(<expr pos:start="287:21" pos:end="289:47"><name pos:start="287:21" pos:end="287:40"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:40">picture_structure</name></name> <operator pos:start="287:42" pos:end="287:43">==</operator> <name pos:start="287:45" pos:end="287:54">PICT_FRAME</name>

                    <operator pos:start="289:21" pos:end="289:22">&amp;&amp;</operator> <operator pos:start="289:24" pos:end="289:24">!</operator><name pos:start="289:25" pos:end="289:47"><name pos:start="289:25" pos:end="289:25">s</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:47">frame_pred_frame_dct</name></name></expr>)</condition><block type="pseudo" pos:start="291:21" pos:end="291:58"><block_content pos:start="291:21" pos:end="291:58">

                    <expr_stmt pos:start="291:21" pos:end="291:58"><expr pos:start="291:21" pos:end="291:57"><name pos:start="291:21" pos:end="291:37"><name pos:start="291:21" pos:end="291:21">s</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:37">interlaced_dct</name></name> <operator pos:start="291:39" pos:end="291:39">=</operator> <call pos:start="291:41" pos:end="291:57"><name pos:start="291:41" pos:end="291:49">get_bits1</name><argument_list pos:start="291:50" pos:end="291:57">(<argument pos:start="291:51" pos:end="291:56"><expr pos:start="291:51" pos:end="291:56"><operator pos:start="291:51" pos:end="291:51">&amp;</operator><name pos:start="291:52" pos:end="291:56"><name pos:start="291:52" pos:end="291:52">s</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:43"><expr pos:start="293:17" pos:end="293:42"><name pos:start="293:17" pos:end="293:26"><name pos:start="293:17" pos:end="293:17">s</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:26">mv_type</name></name> <operator pos:start="293:28" pos:end="293:28">=</operator> <name pos:start="293:30" pos:end="293:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="295:15" pos:end="303:13">else <block pos:start="295:20" pos:end="303:13">{<block_content pos:start="297:17" pos:end="301:65">

                <expr_stmt pos:start="297:17" pos:end="297:54"><expr pos:start="297:17" pos:end="297:53"><name pos:start="297:17" pos:end="297:26"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:26">mv_type</name></name>            <operator pos:start="297:39" pos:end="297:39">=</operator> <name pos:start="297:41" pos:end="297:53">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:59"><expr pos:start="299:17" pos:end="299:58"><name pos:start="299:17" pos:end="299:23">mb_type</name>              <operator pos:start="299:38" pos:end="299:39">|=</operator> <name pos:start="299:41" pos:end="299:58">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:65"><expr pos:start="301:17" pos:end="301:64"><name pos:start="301:17" pos:end="301:37"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:31">field_select</name><index pos:start="301:32" pos:end="301:34">[<expr pos:start="301:33" pos:end="301:33"><literal type="number" pos:start="301:33" pos:end="301:33">0</literal></expr>]</index><index pos:start="301:35" pos:end="301:37">[<expr pos:start="301:36" pos:end="301:36"><literal type="number" pos:start="301:36" pos:end="301:36">0</literal></expr>]</index></name> <operator pos:start="301:39" pos:end="301:39">=</operator> <name pos:start="301:41" pos:end="301:60"><name pos:start="301:41" pos:end="301:41">s</name><operator pos:start="301:42" pos:end="301:43">-&gt;</operator><name pos:start="301:44" pos:end="301:60">picture_structure</name></name> <operator pos:start="301:62" pos:end="301:62">-</operator> <literal type="number" pos:start="301:64" pos:end="301:64">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="307:13" pos:end="309:42"><if pos:start="307:13" pos:end="309:42">if <condition pos:start="307:16" pos:end="307:34">(<expr pos:start="307:17" pos:end="307:33"><call pos:start="307:17" pos:end="307:33"><name pos:start="307:17" pos:end="307:24">IS_QUANT</name><argument_list pos:start="307:25" pos:end="307:33">(<argument pos:start="307:26" pos:end="307:32"><expr pos:start="307:26" pos:end="307:32"><name pos:start="307:26" pos:end="307:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="309:17" pos:end="309:42"><block_content pos:start="309:17" pos:end="309:42">

                <expr_stmt pos:start="309:17" pos:end="309:42"><expr pos:start="309:17" pos:end="309:41"><name pos:start="309:17" pos:end="309:25"><name pos:start="309:17" pos:end="309:17">s</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:25">qscale</name></name> <operator pos:start="309:27" pos:end="309:27">=</operator> <call pos:start="309:29" pos:end="309:41"><name pos:start="309:29" pos:end="309:38">get_qscale</name><argument_list pos:start="309:39" pos:end="309:41">(<argument pos:start="309:40" pos:end="309:40"><expr pos:start="309:40" pos:end="309:40"><name pos:start="309:40" pos:end="309:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="313:13" pos:end="313:36"><expr pos:start="313:13" pos:end="313:35"><name pos:start="313:13" pos:end="313:31"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:22">last_mv</name><index pos:start="313:23" pos:end="313:25">[<expr pos:start="313:24" pos:end="313:24"><literal type="number" pos:start="313:24" pos:end="313:24">0</literal></expr>]</index><index pos:start="313:26" pos:end="313:28">[<expr pos:start="313:27" pos:end="313:27"><literal type="number" pos:start="313:27" pos:end="313:27">0</literal></expr>]</index><index pos:start="313:29" pos:end="313:31">[<expr pos:start="313:30" pos:end="313:30"><literal type="number" pos:start="313:30" pos:end="313:30">0</literal></expr>]</index></name> <operator pos:start="313:33" pos:end="313:33">=</operator> <literal type="number" pos:start="313:35" pos:end="313:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:36"><expr pos:start="315:13" pos:end="315:35"><name pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:22">last_mv</name><index pos:start="315:23" pos:end="315:25">[<expr pos:start="315:24" pos:end="315:24"><literal type="number" pos:start="315:24" pos:end="315:24">0</literal></expr>]</index><index pos:start="315:26" pos:end="315:28">[<expr pos:start="315:27" pos:end="315:27"><literal type="number" pos:start="315:27" pos:end="315:27">0</literal></expr>]</index><index pos:start="315:29" pos:end="315:31">[<expr pos:start="315:30" pos:end="315:30"><literal type="number" pos:start="315:30" pos:end="315:30">1</literal></expr>]</index></name> <operator pos:start="315:33" pos:end="315:33">=</operator> <literal type="number" pos:start="315:35" pos:end="315:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:36"><expr pos:start="317:13" pos:end="317:35"><name pos:start="317:13" pos:end="317:31"><name pos:start="317:13" pos:end="317:13">s</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:22">last_mv</name><index pos:start="317:23" pos:end="317:25">[<expr pos:start="317:24" pos:end="317:24"><literal type="number" pos:start="317:24" pos:end="317:24">0</literal></expr>]</index><index pos:start="317:26" pos:end="317:28">[<expr pos:start="317:27" pos:end="317:27"><literal type="number" pos:start="317:27" pos:end="317:27">1</literal></expr>]</index><index pos:start="317:29" pos:end="317:31">[<expr pos:start="317:30" pos:end="317:30"><literal type="number" pos:start="317:30" pos:end="317:30">0</literal></expr>]</index></name> <operator pos:start="317:33" pos:end="317:33">=</operator> <literal type="number" pos:start="317:35" pos:end="317:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:36"><expr pos:start="319:13" pos:end="319:35"><name pos:start="319:13" pos:end="319:31"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:22">last_mv</name><index pos:start="319:23" pos:end="319:25">[<expr pos:start="319:24" pos:end="319:24"><literal type="number" pos:start="319:24" pos:end="319:24">0</literal></expr>]</index><index pos:start="319:26" pos:end="319:28">[<expr pos:start="319:27" pos:end="319:27"><literal type="number" pos:start="319:27" pos:end="319:27">1</literal></expr>]</index><index pos:start="319:29" pos:end="319:31">[<expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">1</literal></expr>]</index></name> <operator pos:start="319:33" pos:end="319:33">=</operator> <literal type="number" pos:start="319:35" pos:end="319:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:36"><expr pos:start="321:13" pos:end="321:35"><name pos:start="321:13" pos:end="321:26"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:17">mv</name><index pos:start="321:18" pos:end="321:20">[<expr pos:start="321:19" pos:end="321:19"><literal type="number" pos:start="321:19" pos:end="321:19">0</literal></expr>]</index><index pos:start="321:21" pos:end="321:23">[<expr pos:start="321:22" pos:end="321:22"><literal type="number" pos:start="321:22" pos:end="321:22">0</literal></expr>]</index><index pos:start="321:24" pos:end="321:26">[<expr pos:start="321:25" pos:end="321:25"><literal type="number" pos:start="321:25" pos:end="321:25">0</literal></expr>]</index></name>      <operator pos:start="321:33" pos:end="321:33">=</operator> <literal type="number" pos:start="321:35" pos:end="321:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:36"><expr pos:start="323:13" pos:end="323:35"><name pos:start="323:13" pos:end="323:26"><name pos:start="323:13" pos:end="323:13">s</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:17">mv</name><index pos:start="323:18" pos:end="323:20">[<expr pos:start="323:19" pos:end="323:19"><literal type="number" pos:start="323:19" pos:end="323:19">0</literal></expr>]</index><index pos:start="323:21" pos:end="323:23">[<expr pos:start="323:22" pos:end="323:22"><literal type="number" pos:start="323:22" pos:end="323:22">0</literal></expr>]</index><index pos:start="323:24" pos:end="323:26">[<expr pos:start="323:25" pos:end="323:25"><literal type="number" pos:start="323:25" pos:end="323:25">1</literal></expr>]</index></name>      <operator pos:start="323:33" pos:end="323:33">=</operator> <literal type="number" pos:start="323:35" pos:end="323:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="643:9">else <block pos:start="325:16" pos:end="643:9">{<block_content pos:start="327:13" pos:end="641:13">

            <expr_stmt pos:start="327:13" pos:end="327:47"><expr pos:start="327:13" pos:end="327:46"><call pos:start="327:13" pos:end="327:46"><name pos:start="327:13" pos:end="327:22">av_assert2</name><argument_list pos:start="327:23" pos:end="327:46">(<argument pos:start="327:24" pos:end="327:45"><expr pos:start="327:24" pos:end="327:45"><name pos:start="327:24" pos:end="327:30">mb_type</name> <operator pos:start="327:32" pos:end="327:32">&amp;</operator> <name pos:start="327:34" pos:end="327:45">MB_TYPE_L0L1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="329:13" pos:end="329:75">// FIXME decide if MBs in field pictures are MB_TYPE_INTERLACED</comment>

            <comment type="block" pos:start="331:13" pos:end="331:51">/* get additional motion vector type */</comment>

            <if_stmt pos:start="333:13" pos:end="345:13"><if pos:start="333:13" pos:end="337:13">if <condition pos:start="333:16" pos:end="333:78">(<expr pos:start="333:17" pos:end="333:77"><name pos:start="333:17" pos:end="333:36"><name pos:start="333:17" pos:end="333:17">s</name><operator pos:start="333:18" pos:end="333:19">-&gt;</operator><name pos:start="333:20" pos:end="333:36">picture_structure</name></name> <operator pos:start="333:38" pos:end="333:39">==</operator> <name pos:start="333:41" pos:end="333:50">PICT_FRAME</name> <operator pos:start="333:52" pos:end="333:53">&amp;&amp;</operator> <name pos:start="333:55" pos:end="333:77"><name pos:start="333:55" pos:end="333:55">s</name><operator pos:start="333:56" pos:end="333:57">-&gt;</operator><name pos:start="333:58" pos:end="333:77">frame_pred_frame_dct</name></name></expr>)</condition> <block pos:start="333:80" pos:end="337:13">{<block_content pos:start="335:17" pos:end="335:39">

                <expr_stmt pos:start="335:17" pos:end="335:39"><expr pos:start="335:17" pos:end="335:38"><name pos:start="335:17" pos:end="335:27">motion_type</name> <operator pos:start="335:29" pos:end="335:29">=</operator> <name pos:start="335:31" pos:end="335:38">MT_FRAME</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="337:15" pos:end="345:13">else <block pos:start="337:20" pos:end="345:13">{<block_content pos:start="339:17" pos:end="343:58">

                <expr_stmt pos:start="339:17" pos:end="339:50"><expr pos:start="339:17" pos:end="339:49"><name pos:start="339:17" pos:end="339:27">motion_type</name> <operator pos:start="339:29" pos:end="339:29">=</operator> <call pos:start="339:31" pos:end="339:49"><name pos:start="339:31" pos:end="339:38">get_bits</name><argument_list pos:start="339:39" pos:end="339:49">(<argument pos:start="339:40" pos:end="339:45"><expr pos:start="339:40" pos:end="339:45"><operator pos:start="339:40" pos:end="339:40">&amp;</operator><name pos:start="339:41" pos:end="339:45"><name pos:start="339:41" pos:end="339:41">s</name><operator pos:start="339:42" pos:end="339:43">-&gt;</operator><name pos:start="339:44" pos:end="339:45">gb</name></name></expr></argument>, <argument pos:start="339:48" pos:end="339:48"><expr pos:start="339:48" pos:end="339:48"><literal type="number" pos:start="339:48" pos:end="339:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="341:17" pos:end="343:58"><if pos:start="341:17" pos:end="343:58">if <condition pos:start="341:20" pos:end="341:75">(<expr pos:start="341:21" pos:end="341:74"><name pos:start="341:21" pos:end="341:40"><name pos:start="341:21" pos:end="341:21">s</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:40">picture_structure</name></name> <operator pos:start="341:42" pos:end="341:43">==</operator> <name pos:start="341:45" pos:end="341:54">PICT_FRAME</name> <operator pos:start="341:56" pos:end="341:57">&amp;&amp;</operator> <call pos:start="341:59" pos:end="341:74"><name pos:start="341:59" pos:end="341:65">HAS_CBP</name><argument_list pos:start="341:66" pos:end="341:74">(<argument pos:start="341:67" pos:end="341:73"><expr pos:start="341:67" pos:end="341:73"><name pos:start="341:67" pos:end="341:73">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="343:21" pos:end="343:58"><block_content pos:start="343:21" pos:end="343:58">

                    <expr_stmt pos:start="343:21" pos:end="343:58"><expr pos:start="343:21" pos:end="343:57"><name pos:start="343:21" pos:end="343:37"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:37">interlaced_dct</name></name> <operator pos:start="343:39" pos:end="343:39">=</operator> <call pos:start="343:41" pos:end="343:57"><name pos:start="343:41" pos:end="343:49">get_bits1</name><argument_list pos:start="343:50" pos:end="343:57">(<argument pos:start="343:51" pos:end="343:56"><expr pos:start="343:51" pos:end="343:56"><operator pos:start="343:51" pos:end="343:51">&amp;</operator><name pos:start="343:52" pos:end="343:56"><name pos:start="343:52" pos:end="343:52">s</name><operator pos:start="343:53" pos:end="343:54">-&gt;</operator><name pos:start="343:55" pos:end="343:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="349:13" pos:end="351:42"><if pos:start="349:13" pos:end="351:42">if <condition pos:start="349:16" pos:end="349:34">(<expr pos:start="349:17" pos:end="349:33"><call pos:start="349:17" pos:end="349:33"><name pos:start="349:17" pos:end="349:24">IS_QUANT</name><argument_list pos:start="349:25" pos:end="349:33">(<argument pos:start="349:26" pos:end="349:32"><expr pos:start="349:26" pos:end="349:32"><name pos:start="349:26" pos:end="349:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="351:17" pos:end="351:42"><block_content pos:start="351:17" pos:end="351:42">

                <expr_stmt pos:start="351:17" pos:end="351:42"><expr pos:start="351:17" pos:end="351:41"><name pos:start="351:17" pos:end="351:25"><name pos:start="351:17" pos:end="351:17">s</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:25">qscale</name></name> <operator pos:start="351:27" pos:end="351:27">=</operator> <call pos:start="351:29" pos:end="351:41"><name pos:start="351:29" pos:end="351:38">get_qscale</name><argument_list pos:start="351:39" pos:end="351:41">(<argument pos:start="351:40" pos:end="351:40"><expr pos:start="351:40" pos:end="351:40"><name pos:start="351:40" pos:end="351:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="355:13" pos:end="355:32">/* motion vectors */</comment>

            <expr_stmt pos:start="357:13" pos:end="357:44"><expr pos:start="357:13" pos:end="357:43"><name pos:start="357:13" pos:end="357:21"><name pos:start="357:13" pos:end="357:13">s</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:21">mv_dir</name></name> <operator pos:start="357:23" pos:end="357:23">=</operator> <operator pos:start="357:25" pos:end="357:25">(</operator><name pos:start="357:26" pos:end="357:32">mb_type</name> <operator pos:start="357:34" pos:end="357:35">&gt;&gt;</operator> <literal type="number" pos:start="357:37" pos:end="357:38">13</literal><operator pos:start="357:39" pos:end="357:39">)</operator> <operator pos:start="357:41" pos:end="357:41">&amp;</operator> <literal type="number" pos:start="357:43" pos:end="357:43">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:63"><expr pos:start="359:13" pos:end="359:62"><call pos:start="359:13" pos:end="359:62"><name pos:start="359:13" pos:end="359:19">ff_tlog</name><argument_list pos:start="359:20" pos:end="359:62">(<argument pos:start="359:21" pos:end="359:28"><expr pos:start="359:21" pos:end="359:28"><name pos:start="359:21" pos:end="359:28"><name pos:start="359:21" pos:end="359:21">s</name><operator pos:start="359:22" pos:end="359:23">-&gt;</operator><name pos:start="359:24" pos:end="359:28">avctx</name></name></expr></argument>, <argument pos:start="359:31" pos:end="359:48"><expr pos:start="359:31" pos:end="359:48"><literal type="string" pos:start="359:31" pos:end="359:48">"motion_type=%d\n"</literal></expr></argument>, <argument pos:start="359:51" pos:end="359:61"><expr pos:start="359:51" pos:end="359:61"><name pos:start="359:51" pos:end="359:61">motion_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="361:13" pos:end="641:13">switch <condition pos:start="361:20" pos:end="361:32">(<expr pos:start="361:21" pos:end="361:31"><name pos:start="361:21" pos:end="361:31">motion_type</name></expr>)</condition> <block pos:start="361:34" pos:end="641:13">{<block_content pos:start="363:13" pos:end="639:43">

            <case pos:start="363:13" pos:end="363:26">case <expr pos:start="363:18" pos:end="363:25"><name pos:start="363:18" pos:end="363:25">MT_FRAME</name></expr>:</case> <comment type="block" pos:start="363:28" pos:end="363:43">/* or MT_16X8 */</comment>

                <if_stmt pos:start="365:17" pos:end="445:17"><if pos:start="365:17" pos:end="411:17">if <condition pos:start="365:20" pos:end="365:55">(<expr pos:start="365:21" pos:end="365:54"><name pos:start="365:21" pos:end="365:40"><name pos:start="365:21" pos:end="365:21">s</name><operator pos:start="365:22" pos:end="365:23">-&gt;</operator><name pos:start="365:24" pos:end="365:40">picture_structure</name></name> <operator pos:start="365:42" pos:end="365:43">==</operator> <name pos:start="365:45" pos:end="365:54">PICT_FRAME</name></expr>)</condition> <block pos:start="365:57" pos:end="411:17">{<block_content pos:start="367:21" pos:end="409:21">

                    <expr_stmt pos:start="367:21" pos:end="367:47"><expr pos:start="367:21" pos:end="367:46"><name pos:start="367:21" pos:end="367:27">mb_type</name>   <operator pos:start="367:31" pos:end="367:32">|=</operator> <name pos:start="367:34" pos:end="367:46">MB_TYPE_16x16</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="369:21" pos:end="369:47"><expr pos:start="369:21" pos:end="369:46"><name pos:start="369:21" pos:end="369:30"><name pos:start="369:21" pos:end="369:21">s</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:30">mv_type</name></name> <operator pos:start="369:32" pos:end="369:32">=</operator> <name pos:start="369:34" pos:end="369:46">MV_TYPE_16X16</name></expr>;</expr_stmt>

                    <for pos:start="371:21" pos:end="409:21">for <control pos:start="371:25" pos:end="371:43">(<init pos:start="371:26" pos:end="371:31"><expr pos:start="371:26" pos:end="371:30"><name pos:start="371:26" pos:end="371:26">i</name> <operator pos:start="371:28" pos:end="371:28">=</operator> <literal type="number" pos:start="371:30" pos:end="371:30">0</literal></expr>;</init> <condition pos:start="371:33" pos:end="371:38"><expr pos:start="371:33" pos:end="371:37"><name pos:start="371:33" pos:end="371:33">i</name> <operator pos:start="371:35" pos:end="371:35">&lt;</operator> <literal type="number" pos:start="371:37" pos:end="371:37">2</literal></expr>;</condition> <incr pos:start="371:40" pos:end="371:42"><expr pos:start="371:40" pos:end="371:42"><name pos:start="371:40" pos:end="371:40">i</name><operator pos:start="371:41" pos:end="371:42">++</operator></expr></incr>)</control> <block pos:start="371:45" pos:end="409:21">{<block_content pos:start="373:25" pos:end="407:25">

                        <if_stmt pos:start="373:25" pos:end="407:25"><if pos:start="373:25" pos:end="407:25">if <condition pos:start="373:28" pos:end="373:50">(<expr pos:start="373:29" pos:end="373:49"><call pos:start="373:29" pos:end="373:49"><name pos:start="373:29" pos:end="373:37">USES_LIST</name><argument_list pos:start="373:38" pos:end="373:49">(<argument pos:start="373:39" pos:end="373:45"><expr pos:start="373:39" pos:end="373:45"><name pos:start="373:39" pos:end="373:45">mb_type</name></expr></argument>, <argument pos:start="373:48" pos:end="373:48"><expr pos:start="373:48" pos:end="373:48"><name pos:start="373:48" pos:end="373:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="373:52" pos:end="407:25">{<block_content pos:start="377:29" pos:end="405:29">

                            <comment type="block" pos:start="375:29" pos:end="375:42">/* MT_FRAME */</comment>

                            <expr_stmt pos:start="377:29" pos:end="385:72"><expr pos:start="377:29" pos:end="385:71"><name pos:start="377:29" pos:end="377:42"><name pos:start="377:29" pos:end="377:29">s</name><operator pos:start="377:30" pos:end="377:31">-&gt;</operator><name pos:start="377:32" pos:end="377:33">mv</name><index pos:start="377:34" pos:end="377:36">[<expr pos:start="377:35" pos:end="377:35"><name pos:start="377:35" pos:end="377:35">i</name></expr>]</index><index pos:start="377:37" pos:end="377:39">[<expr pos:start="377:38" pos:end="377:38"><literal type="number" pos:start="377:38" pos:end="377:38">0</literal></expr>]</index><index pos:start="377:40" pos:end="377:42">[<expr pos:start="377:41" pos:end="377:41"><literal type="number" pos:start="377:41" pos:end="377:41">0</literal></expr>]</index></name>      <operator pos:start="377:49" pos:end="377:49">=</operator>

                            <name pos:start="379:29" pos:end="379:47"><name pos:start="379:29" pos:end="379:29">s</name><operator pos:start="379:30" pos:end="379:31">-&gt;</operator><name pos:start="379:32" pos:end="379:38">last_mv</name><index pos:start="379:39" pos:end="379:41">[<expr pos:start="379:40" pos:end="379:40"><name pos:start="379:40" pos:end="379:40">i</name></expr>]</index><index pos:start="379:42" pos:end="379:44">[<expr pos:start="379:43" pos:end="379:43"><literal type="number" pos:start="379:43" pos:end="379:43">0</literal></expr>]</index><index pos:start="379:45" pos:end="379:47">[<expr pos:start="379:46" pos:end="379:46"><literal type="number" pos:start="379:46" pos:end="379:46">0</literal></expr>]</index></name> <operator pos:start="379:49" pos:end="379:49">=</operator>

                            <name pos:start="381:29" pos:end="381:47"><name pos:start="381:29" pos:end="381:29">s</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:38">last_mv</name><index pos:start="381:39" pos:end="381:41">[<expr pos:start="381:40" pos:end="381:40"><name pos:start="381:40" pos:end="381:40">i</name></expr>]</index><index pos:start="381:42" pos:end="381:44">[<expr pos:start="381:43" pos:end="381:43"><literal type="number" pos:start="381:43" pos:end="381:43">1</literal></expr>]</index><index pos:start="381:45" pos:end="381:47">[<expr pos:start="381:46" pos:end="381:46"><literal type="number" pos:start="381:46" pos:end="381:46">0</literal></expr>]</index></name> <operator pos:start="381:49" pos:end="381:49">=</operator>

                                <call pos:start="383:33" pos:end="385:71"><name pos:start="383:33" pos:end="383:50">mpeg_decode_motion</name><argument_list pos:start="383:51" pos:end="385:71">(<argument pos:start="383:52" pos:end="383:52"><expr pos:start="383:52" pos:end="383:52"><name pos:start="383:52" pos:end="383:52">s</name></expr></argument>, <argument pos:start="383:55" pos:end="383:74"><expr pos:start="383:55" pos:end="383:74"><name pos:start="383:55" pos:end="383:74"><name pos:start="383:55" pos:end="383:55">s</name><operator pos:start="383:56" pos:end="383:57">-&gt;</operator><name pos:start="383:58" pos:end="383:68">mpeg_f_code</name><index pos:start="383:69" pos:end="383:71">[<expr pos:start="383:70" pos:end="383:70"><name pos:start="383:70" pos:end="383:70">i</name></expr>]</index><index pos:start="383:72" pos:end="383:74">[<expr pos:start="383:73" pos:end="383:73"><literal type="number" pos:start="383:73" pos:end="383:73">0</literal></expr>]</index></name></expr></argument>,

                                                   <argument pos:start="385:52" pos:end="385:70"><expr pos:start="385:52" pos:end="385:70"><name pos:start="385:52" pos:end="385:70"><name pos:start="385:52" pos:end="385:52">s</name><operator pos:start="385:53" pos:end="385:54">-&gt;</operator><name pos:start="385:55" pos:end="385:61">last_mv</name><index pos:start="385:62" pos:end="385:64">[<expr pos:start="385:63" pos:end="385:63"><name pos:start="385:63" pos:end="385:63">i</name></expr>]</index><index pos:start="385:65" pos:end="385:67">[<expr pos:start="385:66" pos:end="385:66"><literal type="number" pos:start="385:66" pos:end="385:66">0</literal></expr>]</index><index pos:start="385:68" pos:end="385:70">[<expr pos:start="385:69" pos:end="385:69"><literal type="number" pos:start="385:69" pos:end="385:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="387:29" pos:end="395:72"><expr pos:start="387:29" pos:end="395:71"><name pos:start="387:29" pos:end="387:42"><name pos:start="387:29" pos:end="387:29">s</name><operator pos:start="387:30" pos:end="387:31">-&gt;</operator><name pos:start="387:32" pos:end="387:33">mv</name><index pos:start="387:34" pos:end="387:36">[<expr pos:start="387:35" pos:end="387:35"><name pos:start="387:35" pos:end="387:35">i</name></expr>]</index><index pos:start="387:37" pos:end="387:39">[<expr pos:start="387:38" pos:end="387:38"><literal type="number" pos:start="387:38" pos:end="387:38">0</literal></expr>]</index><index pos:start="387:40" pos:end="387:42">[<expr pos:start="387:41" pos:end="387:41"><literal type="number" pos:start="387:41" pos:end="387:41">1</literal></expr>]</index></name>      <operator pos:start="387:49" pos:end="387:49">=</operator>

                            <name pos:start="389:29" pos:end="389:47"><name pos:start="389:29" pos:end="389:29">s</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:38">last_mv</name><index pos:start="389:39" pos:end="389:41">[<expr pos:start="389:40" pos:end="389:40"><name pos:start="389:40" pos:end="389:40">i</name></expr>]</index><index pos:start="389:42" pos:end="389:44">[<expr pos:start="389:43" pos:end="389:43"><literal type="number" pos:start="389:43" pos:end="389:43">0</literal></expr>]</index><index pos:start="389:45" pos:end="389:47">[<expr pos:start="389:46" pos:end="389:46"><literal type="number" pos:start="389:46" pos:end="389:46">1</literal></expr>]</index></name> <operator pos:start="389:49" pos:end="389:49">=</operator>

                            <name pos:start="391:29" pos:end="391:47"><name pos:start="391:29" pos:end="391:29">s</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:38">last_mv</name><index pos:start="391:39" pos:end="391:41">[<expr pos:start="391:40" pos:end="391:40"><name pos:start="391:40" pos:end="391:40">i</name></expr>]</index><index pos:start="391:42" pos:end="391:44">[<expr pos:start="391:43" pos:end="391:43"><literal type="number" pos:start="391:43" pos:end="391:43">1</literal></expr>]</index><index pos:start="391:45" pos:end="391:47">[<expr pos:start="391:46" pos:end="391:46"><literal type="number" pos:start="391:46" pos:end="391:46">1</literal></expr>]</index></name> <operator pos:start="391:49" pos:end="391:49">=</operator>

                                <call pos:start="393:33" pos:end="395:71"><name pos:start="393:33" pos:end="393:50">mpeg_decode_motion</name><argument_list pos:start="393:51" pos:end="395:71">(<argument pos:start="393:52" pos:end="393:52"><expr pos:start="393:52" pos:end="393:52"><name pos:start="393:52" pos:end="393:52">s</name></expr></argument>, <argument pos:start="393:55" pos:end="393:74"><expr pos:start="393:55" pos:end="393:74"><name pos:start="393:55" pos:end="393:74"><name pos:start="393:55" pos:end="393:55">s</name><operator pos:start="393:56" pos:end="393:57">-&gt;</operator><name pos:start="393:58" pos:end="393:68">mpeg_f_code</name><index pos:start="393:69" pos:end="393:71">[<expr pos:start="393:70" pos:end="393:70"><name pos:start="393:70" pos:end="393:70">i</name></expr>]</index><index pos:start="393:72" pos:end="393:74">[<expr pos:start="393:73" pos:end="393:73"><literal type="number" pos:start="393:73" pos:end="393:73">1</literal></expr>]</index></name></expr></argument>,

                                                   <argument pos:start="395:52" pos:end="395:70"><expr pos:start="395:52" pos:end="395:70"><name pos:start="395:52" pos:end="395:70"><name pos:start="395:52" pos:end="395:52">s</name><operator pos:start="395:53" pos:end="395:54">-&gt;</operator><name pos:start="395:55" pos:end="395:61">last_mv</name><index pos:start="395:62" pos:end="395:64">[<expr pos:start="395:63" pos:end="395:63"><name pos:start="395:63" pos:end="395:63">i</name></expr>]</index><index pos:start="395:65" pos:end="395:67">[<expr pos:start="395:66" pos:end="395:66"><literal type="number" pos:start="395:66" pos:end="395:66">0</literal></expr>]</index><index pos:start="395:68" pos:end="395:70">[<expr pos:start="395:69" pos:end="395:69"><literal type="number" pos:start="395:69" pos:end="395:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <comment type="block" pos:start="397:29" pos:end="397:59">/* full_pel: only for MPEG-1 */</comment>

                            <if_stmt pos:start="399:29" pos:end="405:29"><if pos:start="399:29" pos:end="405:29">if <condition pos:start="399:32" pos:end="399:47">(<expr pos:start="399:33" pos:end="399:46"><name pos:start="399:33" pos:end="399:46"><name pos:start="399:33" pos:end="399:33">s</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:43">full_pel</name><index pos:start="399:44" pos:end="399:46">[<expr pos:start="399:45" pos:end="399:45"><name pos:start="399:45" pos:end="399:45">i</name></expr>]</index></name></expr>)</condition> <block pos:start="399:49" pos:end="405:29">{<block_content pos:start="401:33" pos:end="403:52">

                                <expr_stmt pos:start="401:33" pos:end="401:52"><expr pos:start="401:33" pos:end="401:51"><name pos:start="401:33" pos:end="401:46"><name pos:start="401:33" pos:end="401:33">s</name><operator pos:start="401:34" pos:end="401:35">-&gt;</operator><name pos:start="401:36" pos:end="401:37">mv</name><index pos:start="401:38" pos:end="401:40">[<expr pos:start="401:39" pos:end="401:39"><name pos:start="401:39" pos:end="401:39">i</name></expr>]</index><index pos:start="401:41" pos:end="401:43">[<expr pos:start="401:42" pos:end="401:42"><literal type="number" pos:start="401:42" pos:end="401:42">0</literal></expr>]</index><index pos:start="401:44" pos:end="401:46">[<expr pos:start="401:45" pos:end="401:45"><literal type="number" pos:start="401:45" pos:end="401:45">0</literal></expr>]</index></name> <operator pos:start="401:48" pos:end="401:49">*=</operator> <literal type="number" pos:start="401:51" pos:end="401:51">2</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="403:33" pos:end="403:52"><expr pos:start="403:33" pos:end="403:51"><name pos:start="403:33" pos:end="403:46"><name pos:start="403:33" pos:end="403:33">s</name><operator pos:start="403:34" pos:end="403:35">-&gt;</operator><name pos:start="403:36" pos:end="403:37">mv</name><index pos:start="403:38" pos:end="403:40">[<expr pos:start="403:39" pos:end="403:39"><name pos:start="403:39" pos:end="403:39">i</name></expr>]</index><index pos:start="403:41" pos:end="403:43">[<expr pos:start="403:42" pos:end="403:42"><literal type="number" pos:start="403:42" pos:end="403:42">0</literal></expr>]</index><index pos:start="403:44" pos:end="403:46">[<expr pos:start="403:45" pos:end="403:45"><literal type="number" pos:start="403:45" pos:end="403:45">1</literal></expr>]</index></name> <operator pos:start="403:48" pos:end="403:49">*=</operator> <literal type="number" pos:start="403:51" pos:end="403:51">2</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="411:19" pos:end="445:17">else <block pos:start="411:24" pos:end="445:17">{<block_content pos:start="413:21" pos:end="443:21">

                    <expr_stmt pos:start="413:21" pos:end="413:67"><expr pos:start="413:21" pos:end="413:66"><name pos:start="413:21" pos:end="413:27">mb_type</name>   <operator pos:start="413:31" pos:end="413:32">|=</operator> <name pos:start="413:34" pos:end="413:45">MB_TYPE_16x8</name> <operator pos:start="413:47" pos:end="413:47">|</operator> <name pos:start="413:49" pos:end="413:66">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="415:21" pos:end="415:46"><expr pos:start="415:21" pos:end="415:45"><name pos:start="415:21" pos:end="415:30"><name pos:start="415:21" pos:end="415:21">s</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:30">mv_type</name></name> <operator pos:start="415:32" pos:end="415:32">=</operator> <name pos:start="415:34" pos:end="415:45">MV_TYPE_16X8</name></expr>;</expr_stmt>

                    <for pos:start="417:21" pos:end="443:21">for <control pos:start="417:25" pos:end="417:43">(<init pos:start="417:26" pos:end="417:31"><expr pos:start="417:26" pos:end="417:30"><name pos:start="417:26" pos:end="417:26">i</name> <operator pos:start="417:28" pos:end="417:28">=</operator> <literal type="number" pos:start="417:30" pos:end="417:30">0</literal></expr>;</init> <condition pos:start="417:33" pos:end="417:38"><expr pos:start="417:33" pos:end="417:37"><name pos:start="417:33" pos:end="417:33">i</name> <operator pos:start="417:35" pos:end="417:35">&lt;</operator> <literal type="number" pos:start="417:37" pos:end="417:37">2</literal></expr>;</condition> <incr pos:start="417:40" pos:end="417:42"><expr pos:start="417:40" pos:end="417:42"><name pos:start="417:40" pos:end="417:40">i</name><operator pos:start="417:41" pos:end="417:42">++</operator></expr></incr>)</control> <block pos:start="417:45" pos:end="443:21">{<block_content pos:start="419:25" pos:end="441:25">

                        <if_stmt pos:start="419:25" pos:end="441:25"><if pos:start="419:25" pos:end="441:25">if <condition pos:start="419:28" pos:end="419:50">(<expr pos:start="419:29" pos:end="419:49"><call pos:start="419:29" pos:end="419:49"><name pos:start="419:29" pos:end="419:37">USES_LIST</name><argument_list pos:start="419:38" pos:end="419:49">(<argument pos:start="419:39" pos:end="419:45"><expr pos:start="419:39" pos:end="419:45"><name pos:start="419:39" pos:end="419:45">mb_type</name></expr></argument>, <argument pos:start="419:48" pos:end="419:48"><expr pos:start="419:48" pos:end="419:48"><name pos:start="419:48" pos:end="419:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="419:52" pos:end="441:25">{<block_content pos:start="423:29" pos:end="439:29">

                            <comment type="block" pos:start="421:29" pos:end="421:41">/* MT_16X8 */</comment>

                            <for pos:start="423:29" pos:end="439:29">for <control pos:start="423:33" pos:end="423:51">(<init pos:start="423:34" pos:end="423:39"><expr pos:start="423:34" pos:end="423:38"><name pos:start="423:34" pos:end="423:34">j</name> <operator pos:start="423:36" pos:end="423:36">=</operator> <literal type="number" pos:start="423:38" pos:end="423:38">0</literal></expr>;</init> <condition pos:start="423:41" pos:end="423:46"><expr pos:start="423:41" pos:end="423:45"><name pos:start="423:41" pos:end="423:41">j</name> <operator pos:start="423:43" pos:end="423:43">&lt;</operator> <literal type="number" pos:start="423:45" pos:end="423:45">2</literal></expr>;</condition> <incr pos:start="423:48" pos:end="423:50"><expr pos:start="423:48" pos:end="423:50"><name pos:start="423:48" pos:end="423:48">j</name><operator pos:start="423:49" pos:end="423:50">++</operator></expr></incr>)</control> <block pos:start="423:53" pos:end="439:29">{<block_content pos:start="425:33" pos:end="437:33">

                                <expr_stmt pos:start="425:33" pos:end="425:74"><expr pos:start="425:33" pos:end="425:73"><name pos:start="425:33" pos:end="425:53"><name pos:start="425:33" pos:end="425:33">s</name><operator pos:start="425:34" pos:end="425:35">-&gt;</operator><name pos:start="425:36" pos:end="425:47">field_select</name><index pos:start="425:48" pos:end="425:50">[<expr pos:start="425:49" pos:end="425:49"><name pos:start="425:49" pos:end="425:49">i</name></expr>]</index><index pos:start="425:51" pos:end="425:53">[<expr pos:start="425:52" pos:end="425:52"><name pos:start="425:52" pos:end="425:52">j</name></expr>]</index></name> <operator pos:start="425:55" pos:end="425:55">=</operator> <call pos:start="425:57" pos:end="425:73"><name pos:start="425:57" pos:end="425:65">get_bits1</name><argument_list pos:start="425:66" pos:end="425:73">(<argument pos:start="425:67" pos:end="425:72"><expr pos:start="425:67" pos:end="425:72"><operator pos:start="425:67" pos:end="425:67">&amp;</operator><name pos:start="425:68" pos:end="425:72"><name pos:start="425:68" pos:end="425:68">s</name><operator pos:start="425:69" pos:end="425:70">-&gt;</operator><name pos:start="425:71" pos:end="425:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <for pos:start="427:33" pos:end="437:33">for <control pos:start="427:37" pos:end="427:55">(<init pos:start="427:38" pos:end="427:43"><expr pos:start="427:38" pos:end="427:42"><name pos:start="427:38" pos:end="427:38">k</name> <operator pos:start="427:40" pos:end="427:40">=</operator> <literal type="number" pos:start="427:42" pos:end="427:42">0</literal></expr>;</init> <condition pos:start="427:45" pos:end="427:50"><expr pos:start="427:45" pos:end="427:49"><name pos:start="427:45" pos:end="427:45">k</name> <operator pos:start="427:47" pos:end="427:47">&lt;</operator> <literal type="number" pos:start="427:49" pos:end="427:49">2</literal></expr>;</condition> <incr pos:start="427:52" pos:end="427:54"><expr pos:start="427:52" pos:end="427:54"><name pos:start="427:52" pos:end="427:52">k</name><operator pos:start="427:53" pos:end="427:54">++</operator></expr></incr>)</control> <block pos:start="427:57" pos:end="437:33">{<block_content pos:start="429:37" pos:end="435:62">

                                    <expr_stmt pos:start="429:37" pos:end="431:82"><expr pos:start="429:37" pos:end="431:81"><name pos:start="429:37" pos:end="429:39">val</name> <operator pos:start="429:41" pos:end="429:41">=</operator> <call pos:start="429:43" pos:end="431:81"><name pos:start="429:43" pos:end="429:60">mpeg_decode_motion</name><argument_list pos:start="429:61" pos:end="431:81">(<argument pos:start="429:62" pos:end="429:62"><expr pos:start="429:62" pos:end="429:62"><name pos:start="429:62" pos:end="429:62">s</name></expr></argument>, <argument pos:start="429:65" pos:end="429:84"><expr pos:start="429:65" pos:end="429:84"><name pos:start="429:65" pos:end="429:84"><name pos:start="429:65" pos:end="429:65">s</name><operator pos:start="429:66" pos:end="429:67">-&gt;</operator><name pos:start="429:68" pos:end="429:78">mpeg_f_code</name><index pos:start="429:79" pos:end="429:81">[<expr pos:start="429:80" pos:end="429:80"><name pos:start="429:80" pos:end="429:80">i</name></expr>]</index><index pos:start="429:82" pos:end="429:84">[<expr pos:start="429:83" pos:end="429:83"><name pos:start="429:83" pos:end="429:83">k</name></expr>]</index></name></expr></argument>,

                                                             <argument pos:start="431:62" pos:end="431:80"><expr pos:start="431:62" pos:end="431:80"><name pos:start="431:62" pos:end="431:80"><name pos:start="431:62" pos:end="431:62">s</name><operator pos:start="431:63" pos:end="431:64">-&gt;</operator><name pos:start="431:65" pos:end="431:71">last_mv</name><index pos:start="431:72" pos:end="431:74">[<expr pos:start="431:73" pos:end="431:73"><name pos:start="431:73" pos:end="431:73">i</name></expr>]</index><index pos:start="431:75" pos:end="431:77">[<expr pos:start="431:76" pos:end="431:76"><name pos:start="431:76" pos:end="431:76">j</name></expr>]</index><index pos:start="431:78" pos:end="431:80">[<expr pos:start="431:79" pos:end="431:79"><name pos:start="431:79" pos:end="431:79">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="433:37" pos:end="433:62"><expr pos:start="433:37" pos:end="433:61"><name pos:start="433:37" pos:end="433:55"><name pos:start="433:37" pos:end="433:37">s</name><operator pos:start="433:38" pos:end="433:39">-&gt;</operator><name pos:start="433:40" pos:end="433:46">last_mv</name><index pos:start="433:47" pos:end="433:49">[<expr pos:start="433:48" pos:end="433:48"><name pos:start="433:48" pos:end="433:48">i</name></expr>]</index><index pos:start="433:50" pos:end="433:52">[<expr pos:start="433:51" pos:end="433:51"><name pos:start="433:51" pos:end="433:51">j</name></expr>]</index><index pos:start="433:53" pos:end="433:55">[<expr pos:start="433:54" pos:end="433:54"><name pos:start="433:54" pos:end="433:54">k</name></expr>]</index></name> <operator pos:start="433:57" pos:end="433:57">=</operator> <name pos:start="433:59" pos:end="433:61">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="435:37" pos:end="435:62"><expr pos:start="435:37" pos:end="435:61"><name pos:start="435:37" pos:end="435:50"><name pos:start="435:37" pos:end="435:37">s</name><operator pos:start="435:38" pos:end="435:39">-&gt;</operator><name pos:start="435:40" pos:end="435:41">mv</name><index pos:start="435:42" pos:end="435:44">[<expr pos:start="435:43" pos:end="435:43"><name pos:start="435:43" pos:end="435:43">i</name></expr>]</index><index pos:start="435:45" pos:end="435:47">[<expr pos:start="435:46" pos:end="435:46"><name pos:start="435:46" pos:end="435:46">j</name></expr>]</index><index pos:start="435:48" pos:end="435:50">[<expr pos:start="435:49" pos:end="435:49"><name pos:start="435:49" pos:end="435:49">k</name></expr>]</index></name>      <operator pos:start="435:57" pos:end="435:57">=</operator> <name pos:start="435:59" pos:end="435:61">val</name></expr>;</expr_stmt>

                                </block_content>}</block></for>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

                <break pos:start="447:17" pos:end="447:22">break;</break>

            <case pos:start="449:13" pos:end="449:26">case <expr pos:start="449:18" pos:end="449:25"><name pos:start="449:18" pos:end="449:25">MT_FIELD</name></expr>:</case>

                <expr_stmt pos:start="451:17" pos:end="451:43"><expr pos:start="451:17" pos:end="451:42"><name pos:start="451:17" pos:end="451:26"><name pos:start="451:17" pos:end="451:17">s</name><operator pos:start="451:18" pos:end="451:19">-&gt;</operator><name pos:start="451:20" pos:end="451:26">mv_type</name></name> <operator pos:start="451:28" pos:end="451:28">=</operator> <name pos:start="451:30" pos:end="451:42">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                <if_stmt pos:start="453:17" pos:end="521:17"><if pos:start="453:17" pos:end="491:17">if <condition pos:start="453:20" pos:end="453:55">(<expr pos:start="453:21" pos:end="453:54"><name pos:start="453:21" pos:end="453:40"><name pos:start="453:21" pos:end="453:21">s</name><operator pos:start="453:22" pos:end="453:23">-&gt;</operator><name pos:start="453:24" pos:end="453:40">picture_structure</name></name> <operator pos:start="453:42" pos:end="453:43">==</operator> <name pos:start="453:45" pos:end="453:54">PICT_FRAME</name></expr>)</condition> <block pos:start="453:57" pos:end="491:17">{<block_content pos:start="455:21" pos:end="489:21">

                    <expr_stmt pos:start="455:21" pos:end="455:65"><expr pos:start="455:21" pos:end="455:64"><name pos:start="455:21" pos:end="455:27">mb_type</name> <operator pos:start="455:29" pos:end="455:30">|=</operator> <name pos:start="455:32" pos:end="455:43">MB_TYPE_16x8</name> <operator pos:start="455:45" pos:end="455:45">|</operator> <name pos:start="455:47" pos:end="455:64">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <for pos:start="457:21" pos:end="489:21">for <control pos:start="457:25" pos:end="457:43">(<init pos:start="457:26" pos:end="457:31"><expr pos:start="457:26" pos:end="457:30"><name pos:start="457:26" pos:end="457:26">i</name> <operator pos:start="457:28" pos:end="457:28">=</operator> <literal type="number" pos:start="457:30" pos:end="457:30">0</literal></expr>;</init> <condition pos:start="457:33" pos:end="457:38"><expr pos:start="457:33" pos:end="457:37"><name pos:start="457:33" pos:end="457:33">i</name> <operator pos:start="457:35" pos:end="457:35">&lt;</operator> <literal type="number" pos:start="457:37" pos:end="457:37">2</literal></expr>;</condition> <incr pos:start="457:40" pos:end="457:42"><expr pos:start="457:40" pos:end="457:42"><name pos:start="457:40" pos:end="457:40">i</name><operator pos:start="457:41" pos:end="457:42">++</operator></expr></incr>)</control> <block pos:start="457:45" pos:end="489:21">{<block_content pos:start="459:25" pos:end="487:25">

                        <if_stmt pos:start="459:25" pos:end="487:25"><if pos:start="459:25" pos:end="487:25">if <condition pos:start="459:28" pos:end="459:50">(<expr pos:start="459:29" pos:end="459:49"><call pos:start="459:29" pos:end="459:49"><name pos:start="459:29" pos:end="459:37">USES_LIST</name><argument_list pos:start="459:38" pos:end="459:49">(<argument pos:start="459:39" pos:end="459:45"><expr pos:start="459:39" pos:end="459:45"><name pos:start="459:39" pos:end="459:45">mb_type</name></expr></argument>, <argument pos:start="459:48" pos:end="459:48"><expr pos:start="459:48" pos:end="459:48"><name pos:start="459:48" pos:end="459:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="459:52" pos:end="487:25">{<block_content pos:start="461:29" pos:end="485:29">

                            <for pos:start="461:29" pos:end="485:29">for <control pos:start="461:33" pos:end="461:51">(<init pos:start="461:34" pos:end="461:39"><expr pos:start="461:34" pos:end="461:38"><name pos:start="461:34" pos:end="461:34">j</name> <operator pos:start="461:36" pos:end="461:36">=</operator> <literal type="number" pos:start="461:38" pos:end="461:38">0</literal></expr>;</init> <condition pos:start="461:41" pos:end="461:46"><expr pos:start="461:41" pos:end="461:45"><name pos:start="461:41" pos:end="461:41">j</name> <operator pos:start="461:43" pos:end="461:43">&lt;</operator> <literal type="number" pos:start="461:45" pos:end="461:45">2</literal></expr>;</condition> <incr pos:start="461:48" pos:end="461:50"><expr pos:start="461:48" pos:end="461:50"><name pos:start="461:48" pos:end="461:48">j</name><operator pos:start="461:49" pos:end="461:50">++</operator></expr></incr>)</control> <block pos:start="461:53" pos:end="485:29">{<block_content pos:start="463:33" pos:end="483:67">

                                <expr_stmt pos:start="463:33" pos:end="463:74"><expr pos:start="463:33" pos:end="463:73"><name pos:start="463:33" pos:end="463:53"><name pos:start="463:33" pos:end="463:33">s</name><operator pos:start="463:34" pos:end="463:35">-&gt;</operator><name pos:start="463:36" pos:end="463:47">field_select</name><index pos:start="463:48" pos:end="463:50">[<expr pos:start="463:49" pos:end="463:49"><name pos:start="463:49" pos:end="463:49">i</name></expr>]</index><index pos:start="463:51" pos:end="463:53">[<expr pos:start="463:52" pos:end="463:52"><name pos:start="463:52" pos:end="463:52">j</name></expr>]</index></name> <operator pos:start="463:55" pos:end="463:55">=</operator> <call pos:start="463:57" pos:end="463:73"><name pos:start="463:57" pos:end="463:65">get_bits1</name><argument_list pos:start="463:66" pos:end="463:73">(<argument pos:start="463:67" pos:end="463:72"><expr pos:start="463:67" pos:end="463:72"><operator pos:start="463:67" pos:end="463:67">&amp;</operator><name pos:start="463:68" pos:end="463:72"><name pos:start="463:68" pos:end="463:68">s</name><operator pos:start="463:69" pos:end="463:70">-&gt;</operator><name pos:start="463:71" pos:end="463:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="465:33" pos:end="467:78"><expr pos:start="465:33" pos:end="467:77"><name pos:start="465:33" pos:end="465:35">val</name> <operator pos:start="465:37" pos:end="465:37">=</operator> <call pos:start="465:39" pos:end="467:77"><name pos:start="465:39" pos:end="465:56">mpeg_decode_motion</name><argument_list pos:start="465:57" pos:end="467:77">(<argument pos:start="465:58" pos:end="465:58"><expr pos:start="465:58" pos:end="465:58"><name pos:start="465:58" pos:end="465:58">s</name></expr></argument>, <argument pos:start="465:61" pos:end="465:80"><expr pos:start="465:61" pos:end="465:80"><name pos:start="465:61" pos:end="465:80"><name pos:start="465:61" pos:end="465:61">s</name><operator pos:start="465:62" pos:end="465:63">-&gt;</operator><name pos:start="465:64" pos:end="465:74">mpeg_f_code</name><index pos:start="465:75" pos:end="465:77">[<expr pos:start="465:76" pos:end="465:76"><name pos:start="465:76" pos:end="465:76">i</name></expr>]</index><index pos:start="465:78" pos:end="465:80">[<expr pos:start="465:79" pos:end="465:79"><literal type="number" pos:start="465:79" pos:end="465:79">0</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="467:58" pos:end="467:76"><expr pos:start="467:58" pos:end="467:76"><name pos:start="467:58" pos:end="467:76"><name pos:start="467:58" pos:end="467:58">s</name><operator pos:start="467:59" pos:end="467:60">-&gt;</operator><name pos:start="467:61" pos:end="467:67">last_mv</name><index pos:start="467:68" pos:end="467:70">[<expr pos:start="467:69" pos:end="467:69"><name pos:start="467:69" pos:end="467:69">i</name></expr>]</index><index pos:start="467:71" pos:end="467:73">[<expr pos:start="467:72" pos:end="467:72"><name pos:start="467:72" pos:end="467:72">j</name></expr>]</index><index pos:start="467:74" pos:end="467:76">[<expr pos:start="467:75" pos:end="467:75"><literal type="number" pos:start="467:75" pos:end="467:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="469:33" pos:end="469:58"><expr pos:start="469:33" pos:end="469:57"><name pos:start="469:33" pos:end="469:51"><name pos:start="469:33" pos:end="469:33">s</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:42">last_mv</name><index pos:start="469:43" pos:end="469:45">[<expr pos:start="469:44" pos:end="469:44"><name pos:start="469:44" pos:end="469:44">i</name></expr>]</index><index pos:start="469:46" pos:end="469:48">[<expr pos:start="469:47" pos:end="469:47"><name pos:start="469:47" pos:end="469:47">j</name></expr>]</index><index pos:start="469:49" pos:end="469:51">[<expr pos:start="469:50" pos:end="469:50"><literal type="number" pos:start="469:50" pos:end="469:50">0</literal></expr>]</index></name> <operator pos:start="469:53" pos:end="469:53">=</operator> <name pos:start="469:55" pos:end="469:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="471:33" pos:end="471:58"><expr pos:start="471:33" pos:end="471:57"><name pos:start="471:33" pos:end="471:46"><name pos:start="471:33" pos:end="471:33">s</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:37">mv</name><index pos:start="471:38" pos:end="471:40">[<expr pos:start="471:39" pos:end="471:39"><name pos:start="471:39" pos:end="471:39">i</name></expr>]</index><index pos:start="471:41" pos:end="471:43">[<expr pos:start="471:42" pos:end="471:42"><name pos:start="471:42" pos:end="471:42">j</name></expr>]</index><index pos:start="471:44" pos:end="471:46">[<expr pos:start="471:45" pos:end="471:45"><literal type="number" pos:start="471:45" pos:end="471:45">0</literal></expr>]</index></name>      <operator pos:start="471:53" pos:end="471:53">=</operator> <name pos:start="471:55" pos:end="471:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="473:33" pos:end="473:67"><expr pos:start="473:33" pos:end="473:66"><call pos:start="473:33" pos:end="473:66"><name pos:start="473:33" pos:end="473:39">ff_tlog</name><argument_list pos:start="473:40" pos:end="473:66">(<argument pos:start="473:41" pos:end="473:48"><expr pos:start="473:41" pos:end="473:48"><name pos:start="473:41" pos:end="473:48"><name pos:start="473:41" pos:end="473:41">s</name><operator pos:start="473:42" pos:end="473:43">-&gt;</operator><name pos:start="473:44" pos:end="473:48">avctx</name></name></expr></argument>, <argument pos:start="473:51" pos:end="473:60"><expr pos:start="473:51" pos:end="473:60"><literal type="string" pos:start="473:51" pos:end="473:60">"fmx=%d\n"</literal></expr></argument>, <argument pos:start="473:63" pos:end="473:65"><expr pos:start="473:63" pos:end="473:65"><name pos:start="473:63" pos:end="473:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="475:33" pos:end="477:83"><expr pos:start="475:33" pos:end="477:82"><name pos:start="475:33" pos:end="475:35">val</name> <operator pos:start="475:37" pos:end="475:37">=</operator> <call pos:start="475:39" pos:end="477:82"><name pos:start="475:39" pos:end="475:56">mpeg_decode_motion</name><argument_list pos:start="475:57" pos:end="477:82">(<argument pos:start="475:58" pos:end="475:58"><expr pos:start="475:58" pos:end="475:58"><name pos:start="475:58" pos:end="475:58">s</name></expr></argument>, <argument pos:start="475:61" pos:end="475:80"><expr pos:start="475:61" pos:end="475:80"><name pos:start="475:61" pos:end="475:80"><name pos:start="475:61" pos:end="475:61">s</name><operator pos:start="475:62" pos:end="475:63">-&gt;</operator><name pos:start="475:64" pos:end="475:74">mpeg_f_code</name><index pos:start="475:75" pos:end="475:77">[<expr pos:start="475:76" pos:end="475:76"><name pos:start="475:76" pos:end="475:76">i</name></expr>]</index><index pos:start="475:78" pos:end="475:80">[<expr pos:start="475:79" pos:end="475:79"><literal type="number" pos:start="475:79" pos:end="475:79">1</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="477:58" pos:end="477:81"><expr pos:start="477:58" pos:end="477:81"><name pos:start="477:58" pos:end="477:76"><name pos:start="477:58" pos:end="477:58">s</name><operator pos:start="477:59" pos:end="477:60">-&gt;</operator><name pos:start="477:61" pos:end="477:67">last_mv</name><index pos:start="477:68" pos:end="477:70">[<expr pos:start="477:69" pos:end="477:69"><name pos:start="477:69" pos:end="477:69">i</name></expr>]</index><index pos:start="477:71" pos:end="477:73">[<expr pos:start="477:72" pos:end="477:72"><name pos:start="477:72" pos:end="477:72">j</name></expr>]</index><index pos:start="477:74" pos:end="477:76">[<expr pos:start="477:75" pos:end="477:75"><literal type="number" pos:start="477:75" pos:end="477:75">1</literal></expr>]</index></name> <operator pos:start="477:78" pos:end="477:79">&gt;&gt;</operator> <literal type="number" pos:start="477:81" pos:end="477:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="479:33" pos:end="479:62"><expr pos:start="479:33" pos:end="479:61"><name pos:start="479:33" pos:end="479:51"><name pos:start="479:33" pos:end="479:33">s</name><operator pos:start="479:34" pos:end="479:35">-&gt;</operator><name pos:start="479:36" pos:end="479:42">last_mv</name><index pos:start="479:43" pos:end="479:45">[<expr pos:start="479:44" pos:end="479:44"><name pos:start="479:44" pos:end="479:44">i</name></expr>]</index><index pos:start="479:46" pos:end="479:48">[<expr pos:start="479:47" pos:end="479:47"><name pos:start="479:47" pos:end="479:47">j</name></expr>]</index><index pos:start="479:49" pos:end="479:51">[<expr pos:start="479:50" pos:end="479:50"><literal type="number" pos:start="479:50" pos:end="479:50">1</literal></expr>]</index></name> <operator pos:start="479:53" pos:end="479:53">=</operator> <literal type="number" pos:start="479:55" pos:end="479:55">2</literal> <operator pos:start="479:57" pos:end="479:57">*</operator> <name pos:start="479:59" pos:end="479:61">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="481:33" pos:end="481:58"><expr pos:start="481:33" pos:end="481:57"><name pos:start="481:33" pos:end="481:46"><name pos:start="481:33" pos:end="481:33">s</name><operator pos:start="481:34" pos:end="481:35">-&gt;</operator><name pos:start="481:36" pos:end="481:37">mv</name><index pos:start="481:38" pos:end="481:40">[<expr pos:start="481:39" pos:end="481:39"><name pos:start="481:39" pos:end="481:39">i</name></expr>]</index><index pos:start="481:41" pos:end="481:43">[<expr pos:start="481:42" pos:end="481:42"><name pos:start="481:42" pos:end="481:42">j</name></expr>]</index><index pos:start="481:44" pos:end="481:46">[<expr pos:start="481:45" pos:end="481:45"><literal type="number" pos:start="481:45" pos:end="481:45">1</literal></expr>]</index></name>      <operator pos:start="481:53" pos:end="481:53">=</operator> <name pos:start="481:55" pos:end="481:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="483:33" pos:end="483:67"><expr pos:start="483:33" pos:end="483:66"><call pos:start="483:33" pos:end="483:66"><name pos:start="483:33" pos:end="483:39">ff_tlog</name><argument_list pos:start="483:40" pos:end="483:66">(<argument pos:start="483:41" pos:end="483:48"><expr pos:start="483:41" pos:end="483:48"><name pos:start="483:41" pos:end="483:48"><name pos:start="483:41" pos:end="483:41">s</name><operator pos:start="483:42" pos:end="483:43">-&gt;</operator><name pos:start="483:44" pos:end="483:48">avctx</name></name></expr></argument>, <argument pos:start="483:51" pos:end="483:60"><expr pos:start="483:51" pos:end="483:60"><literal type="string" pos:start="483:51" pos:end="483:60">"fmy=%d\n"</literal></expr></argument>, <argument pos:start="483:63" pos:end="483:65"><expr pos:start="483:63" pos:end="483:65"><name pos:start="483:63" pos:end="483:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="491:19" pos:end="521:17">else <block pos:start="491:24" pos:end="521:17">{<block_content pos:start="493:21" pos:end="519:21">

                    <expr_stmt pos:start="493:21" pos:end="493:57"><expr pos:start="493:21" pos:end="493:56"><call pos:start="493:21" pos:end="493:56"><name pos:start="493:21" pos:end="493:30">av_assert0</name><argument_list pos:start="493:31" pos:end="493:56">(<argument pos:start="493:32" pos:end="493:55"><expr pos:start="493:32" pos:end="493:55"><operator pos:start="493:32" pos:end="493:32">!</operator><name pos:start="493:33" pos:end="493:55"><name pos:start="493:33" pos:end="493:33">s</name><operator pos:start="493:34" pos:end="493:35">-&gt;</operator><name pos:start="493:36" pos:end="493:55">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="495:21" pos:end="495:66"><expr pos:start="495:21" pos:end="495:65"><name pos:start="495:21" pos:end="495:27">mb_type</name> <operator pos:start="495:29" pos:end="495:30">|=</operator> <name pos:start="495:32" pos:end="495:44">MB_TYPE_16x16</name> <operator pos:start="495:46" pos:end="495:46">|</operator> <name pos:start="495:48" pos:end="495:65">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                    <for pos:start="497:21" pos:end="519:21">for <control pos:start="497:25" pos:end="497:43">(<init pos:start="497:26" pos:end="497:31"><expr pos:start="497:26" pos:end="497:30"><name pos:start="497:26" pos:end="497:26">i</name> <operator pos:start="497:28" pos:end="497:28">=</operator> <literal type="number" pos:start="497:30" pos:end="497:30">0</literal></expr>;</init> <condition pos:start="497:33" pos:end="497:38"><expr pos:start="497:33" pos:end="497:37"><name pos:start="497:33" pos:end="497:33">i</name> <operator pos:start="497:35" pos:end="497:35">&lt;</operator> <literal type="number" pos:start="497:37" pos:end="497:37">2</literal></expr>;</condition> <incr pos:start="497:40" pos:end="497:42"><expr pos:start="497:40" pos:end="497:42"><name pos:start="497:40" pos:end="497:40">i</name><operator pos:start="497:41" pos:end="497:42">++</operator></expr></incr>)</control> <block pos:start="497:45" pos:end="519:21">{<block_content pos:start="499:25" pos:end="517:25">

                        <if_stmt pos:start="499:25" pos:end="517:25"><if pos:start="499:25" pos:end="517:25">if <condition pos:start="499:28" pos:end="499:50">(<expr pos:start="499:29" pos:end="499:49"><call pos:start="499:29" pos:end="499:49"><name pos:start="499:29" pos:end="499:37">USES_LIST</name><argument_list pos:start="499:38" pos:end="499:49">(<argument pos:start="499:39" pos:end="499:45"><expr pos:start="499:39" pos:end="499:45"><name pos:start="499:39" pos:end="499:45">mb_type</name></expr></argument>, <argument pos:start="499:48" pos:end="499:48"><expr pos:start="499:48" pos:end="499:48"><name pos:start="499:48" pos:end="499:48">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="499:52" pos:end="517:25">{<block_content pos:start="501:29" pos:end="515:29">

                            <expr_stmt pos:start="501:29" pos:end="501:70"><expr pos:start="501:29" pos:end="501:69"><name pos:start="501:29" pos:end="501:49"><name pos:start="501:29" pos:end="501:29">s</name><operator pos:start="501:30" pos:end="501:31">-&gt;</operator><name pos:start="501:32" pos:end="501:43">field_select</name><index pos:start="501:44" pos:end="501:46">[<expr pos:start="501:45" pos:end="501:45"><name pos:start="501:45" pos:end="501:45">i</name></expr>]</index><index pos:start="501:47" pos:end="501:49">[<expr pos:start="501:48" pos:end="501:48"><literal type="number" pos:start="501:48" pos:end="501:48">0</literal></expr>]</index></name> <operator pos:start="501:51" pos:end="501:51">=</operator> <call pos:start="501:53" pos:end="501:69"><name pos:start="501:53" pos:end="501:61">get_bits1</name><argument_list pos:start="501:62" pos:end="501:69">(<argument pos:start="501:63" pos:end="501:68"><expr pos:start="501:63" pos:end="501:68"><operator pos:start="501:63" pos:end="501:63">&amp;</operator><name pos:start="501:64" pos:end="501:68"><name pos:start="501:64" pos:end="501:64">s</name><operator pos:start="501:65" pos:end="501:66">-&gt;</operator><name pos:start="501:67" pos:end="501:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <for pos:start="503:29" pos:end="515:29">for <control pos:start="503:33" pos:end="503:51">(<init pos:start="503:34" pos:end="503:39"><expr pos:start="503:34" pos:end="503:38"><name pos:start="503:34" pos:end="503:34">k</name> <operator pos:start="503:36" pos:end="503:36">=</operator> <literal type="number" pos:start="503:38" pos:end="503:38">0</literal></expr>;</init> <condition pos:start="503:41" pos:end="503:46"><expr pos:start="503:41" pos:end="503:45"><name pos:start="503:41" pos:end="503:41">k</name> <operator pos:start="503:43" pos:end="503:43">&lt;</operator> <literal type="number" pos:start="503:45" pos:end="503:45">2</literal></expr>;</condition> <incr pos:start="503:48" pos:end="503:50"><expr pos:start="503:48" pos:end="503:50"><name pos:start="503:48" pos:end="503:48">k</name><operator pos:start="503:49" pos:end="503:50">++</operator></expr></incr>)</control> <block pos:start="503:53" pos:end="515:29">{<block_content pos:start="505:33" pos:end="513:58">

                                <expr_stmt pos:start="505:33" pos:end="507:78"><expr pos:start="505:33" pos:end="507:77"><name pos:start="505:33" pos:end="505:35">val</name> <operator pos:start="505:37" pos:end="505:37">=</operator> <call pos:start="505:39" pos:end="507:77"><name pos:start="505:39" pos:end="505:56">mpeg_decode_motion</name><argument_list pos:start="505:57" pos:end="507:77">(<argument pos:start="505:58" pos:end="505:58"><expr pos:start="505:58" pos:end="505:58"><name pos:start="505:58" pos:end="505:58">s</name></expr></argument>, <argument pos:start="505:61" pos:end="505:80"><expr pos:start="505:61" pos:end="505:80"><name pos:start="505:61" pos:end="505:80"><name pos:start="505:61" pos:end="505:61">s</name><operator pos:start="505:62" pos:end="505:63">-&gt;</operator><name pos:start="505:64" pos:end="505:74">mpeg_f_code</name><index pos:start="505:75" pos:end="505:77">[<expr pos:start="505:76" pos:end="505:76"><name pos:start="505:76" pos:end="505:76">i</name></expr>]</index><index pos:start="505:78" pos:end="505:80">[<expr pos:start="505:79" pos:end="505:79"><name pos:start="505:79" pos:end="505:79">k</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="507:58" pos:end="507:76"><expr pos:start="507:58" pos:end="507:76"><name pos:start="507:58" pos:end="507:76"><name pos:start="507:58" pos:end="507:58">s</name><operator pos:start="507:59" pos:end="507:60">-&gt;</operator><name pos:start="507:61" pos:end="507:67">last_mv</name><index pos:start="507:68" pos:end="507:70">[<expr pos:start="507:69" pos:end="507:69"><name pos:start="507:69" pos:end="507:69">i</name></expr>]</index><index pos:start="507:71" pos:end="507:73">[<expr pos:start="507:72" pos:end="507:72"><literal type="number" pos:start="507:72" pos:end="507:72">0</literal></expr>]</index><index pos:start="507:74" pos:end="507:76">[<expr pos:start="507:75" pos:end="507:75"><name pos:start="507:75" pos:end="507:75">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="509:33" pos:end="509:58"><expr pos:start="509:33" pos:end="509:57"><name pos:start="509:33" pos:end="509:51"><name pos:start="509:33" pos:end="509:33">s</name><operator pos:start="509:34" pos:end="509:35">-&gt;</operator><name pos:start="509:36" pos:end="509:42">last_mv</name><index pos:start="509:43" pos:end="509:45">[<expr pos:start="509:44" pos:end="509:44"><name pos:start="509:44" pos:end="509:44">i</name></expr>]</index><index pos:start="509:46" pos:end="509:48">[<expr pos:start="509:47" pos:end="509:47"><literal type="number" pos:start="509:47" pos:end="509:47">0</literal></expr>]</index><index pos:start="509:49" pos:end="509:51">[<expr pos:start="509:50" pos:end="509:50"><name pos:start="509:50" pos:end="509:50">k</name></expr>]</index></name> <operator pos:start="509:53" pos:end="509:53">=</operator> <name pos:start="509:55" pos:end="509:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="511:33" pos:end="511:58"><expr pos:start="511:33" pos:end="511:57"><name pos:start="511:33" pos:end="511:51"><name pos:start="511:33" pos:end="511:33">s</name><operator pos:start="511:34" pos:end="511:35">-&gt;</operator><name pos:start="511:36" pos:end="511:42">last_mv</name><index pos:start="511:43" pos:end="511:45">[<expr pos:start="511:44" pos:end="511:44"><name pos:start="511:44" pos:end="511:44">i</name></expr>]</index><index pos:start="511:46" pos:end="511:48">[<expr pos:start="511:47" pos:end="511:47"><literal type="number" pos:start="511:47" pos:end="511:47">1</literal></expr>]</index><index pos:start="511:49" pos:end="511:51">[<expr pos:start="511:50" pos:end="511:50"><name pos:start="511:50" pos:end="511:50">k</name></expr>]</index></name> <operator pos:start="511:53" pos:end="511:53">=</operator> <name pos:start="511:55" pos:end="511:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="513:33" pos:end="513:58"><expr pos:start="513:33" pos:end="513:57"><name pos:start="513:33" pos:end="513:46"><name pos:start="513:33" pos:end="513:33">s</name><operator pos:start="513:34" pos:end="513:35">-&gt;</operator><name pos:start="513:36" pos:end="513:37">mv</name><index pos:start="513:38" pos:end="513:40">[<expr pos:start="513:39" pos:end="513:39"><name pos:start="513:39" pos:end="513:39">i</name></expr>]</index><index pos:start="513:41" pos:end="513:43">[<expr pos:start="513:42" pos:end="513:42"><literal type="number" pos:start="513:42" pos:end="513:42">0</literal></expr>]</index><index pos:start="513:44" pos:end="513:46">[<expr pos:start="513:45" pos:end="513:45"><name pos:start="513:45" pos:end="513:45">k</name></expr>]</index></name>      <operator pos:start="513:53" pos:end="513:53">=</operator> <name pos:start="513:55" pos:end="513:57">val</name></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

                <break pos:start="523:17" pos:end="523:22">break;</break>

            <case pos:start="525:13" pos:end="525:24">case <expr pos:start="525:18" pos:end="525:23"><name pos:start="525:18" pos:end="525:23">MT_DMV</name></expr>:</case>

                <if_stmt pos:start="527:17" pos:end="533:17"><if pos:start="527:17" pos:end="533:17">if <condition pos:start="527:20" pos:end="527:44">(<expr pos:start="527:21" pos:end="527:43"><name pos:start="527:21" pos:end="527:43"><name pos:start="527:21" pos:end="527:21">s</name><operator pos:start="527:22" pos:end="527:23">-&gt;</operator><name pos:start="527:24" pos:end="527:43">progressive_sequence</name></name></expr>)</condition><block pos:start="527:45" pos:end="533:17">{<block_content pos:start="529:21" pos:end="531:47">

                    <expr_stmt pos:start="529:21" pos:end="529:87"><expr pos:start="529:21" pos:end="529:86"><call pos:start="529:21" pos:end="529:86"><name pos:start="529:21" pos:end="529:26">av_log</name><argument_list pos:start="529:27" pos:end="529:86">(<argument pos:start="529:28" pos:end="529:35"><expr pos:start="529:28" pos:end="529:35"><name pos:start="529:28" pos:end="529:35"><name pos:start="529:28" pos:end="529:28">s</name><operator pos:start="529:29" pos:end="529:30">-&gt;</operator><name pos:start="529:31" pos:end="529:35">avctx</name></name></expr></argument>, <argument pos:start="529:38" pos:end="529:49"><expr pos:start="529:38" pos:end="529:49"><name pos:start="529:38" pos:end="529:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="529:52" pos:end="529:85"><expr pos:start="529:52" pos:end="529:85"><literal type="string" pos:start="529:52" pos:end="529:85">"MT_DMV in progressive_sequence\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="531:21" pos:end="531:47">return <expr pos:start="531:28" pos:end="531:46"><name pos:start="531:28" pos:end="531:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="535:17" pos:end="535:41"><expr pos:start="535:17" pos:end="535:40"><name pos:start="535:17" pos:end="535:26"><name pos:start="535:17" pos:end="535:17">s</name><operator pos:start="535:18" pos:end="535:19">-&gt;</operator><name pos:start="535:20" pos:end="535:26">mv_type</name></name> <operator pos:start="535:28" pos:end="535:28">=</operator> <name pos:start="535:30" pos:end="535:40">MV_TYPE_DMV</name></expr>;</expr_stmt>

                <for pos:start="537:17" pos:end="629:17">for <control pos:start="537:21" pos:end="537:39">(<init pos:start="537:22" pos:end="537:27"><expr pos:start="537:22" pos:end="537:26"><name pos:start="537:22" pos:end="537:22">i</name> <operator pos:start="537:24" pos:end="537:24">=</operator> <literal type="number" pos:start="537:26" pos:end="537:26">0</literal></expr>;</init> <condition pos:start="537:29" pos:end="537:34"><expr pos:start="537:29" pos:end="537:33"><name pos:start="537:29" pos:end="537:29">i</name> <operator pos:start="537:31" pos:end="537:31">&lt;</operator> <literal type="number" pos:start="537:33" pos:end="537:33">2</literal></expr>;</condition> <incr pos:start="537:36" pos:end="537:38"><expr pos:start="537:36" pos:end="537:38"><name pos:start="537:36" pos:end="537:36">i</name><operator pos:start="537:37" pos:end="537:38">++</operator></expr></incr>)</control> <block pos:start="537:41" pos:end="629:17">{<block_content pos:start="539:21" pos:end="627:21">

                    <if_stmt pos:start="539:21" pos:end="627:21"><if pos:start="539:21" pos:end="627:21">if <condition pos:start="539:24" pos:end="539:46">(<expr pos:start="539:25" pos:end="539:45"><call pos:start="539:25" pos:end="539:45"><name pos:start="539:25" pos:end="539:33">USES_LIST</name><argument_list pos:start="539:34" pos:end="539:45">(<argument pos:start="539:35" pos:end="539:41"><expr pos:start="539:35" pos:end="539:41"><name pos:start="539:35" pos:end="539:41">mb_type</name></expr></argument>, <argument pos:start="539:44" pos:end="539:44"><expr pos:start="539:44" pos:end="539:44"><name pos:start="539:44" pos:end="539:44">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:48" pos:end="627:21">{<block_content pos:start="541:25" pos:end="625:25">

                        <decl_stmt pos:start="541:25" pos:end="541:48"><decl pos:start="541:25" pos:end="541:31"><type pos:start="541:25" pos:end="541:27"><name pos:start="541:25" pos:end="541:27">int</name></type> <name pos:start="541:29" pos:end="541:31">dmx</name></decl>, <decl pos:start="541:34" pos:end="541:36"><type ref="prev" pos:start="541:25" pos:end="541:27"/><name pos:start="541:34" pos:end="541:36">dmy</name></decl>, <decl pos:start="541:39" pos:end="541:40"><type ref="prev" pos:start="541:25" pos:end="541:27"/><name pos:start="541:39" pos:end="541:40">mx</name></decl>, <decl pos:start="541:43" pos:end="541:44"><type ref="prev" pos:start="541:25" pos:end="541:27"/><name pos:start="541:43" pos:end="541:44">my</name></decl>, <decl pos:start="541:47" pos:end="541:47"><type ref="prev" pos:start="541:25" pos:end="541:27"/><name pos:start="541:47" pos:end="541:47">m</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="543:25" pos:end="543:80"><decl pos:start="543:25" pos:end="543:79"><type pos:start="543:25" pos:end="543:33"><specifier pos:start="543:25" pos:end="543:29">const</specifier> <name pos:start="543:31" pos:end="543:33">int</name></type> <name pos:start="543:35" pos:end="543:42">my_shift</name> <init pos:start="543:44" pos:end="543:79">= <expr pos:start="543:46" pos:end="543:79"><name pos:start="543:46" pos:end="543:65"><name pos:start="543:46" pos:end="543:46">s</name><operator pos:start="543:47" pos:end="543:48">-&gt;</operator><name pos:start="543:49" pos:end="543:65">picture_structure</name></name> <operator pos:start="543:67" pos:end="543:68">==</operator> <name pos:start="543:70" pos:end="543:79">PICT_FRAME</name></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="547:25" pos:end="549:69"><expr pos:start="547:25" pos:end="549:68"><name pos:start="547:25" pos:end="547:26">mx</name> <operator pos:start="547:28" pos:end="547:28">=</operator> <call pos:start="547:30" pos:end="549:68"><name pos:start="547:30" pos:end="547:47">mpeg_decode_motion</name><argument_list pos:start="547:48" pos:end="549:68">(<argument pos:start="547:49" pos:end="547:49"><expr pos:start="547:49" pos:end="547:49"><name pos:start="547:49" pos:end="547:49">s</name></expr></argument>, <argument pos:start="547:52" pos:end="547:71"><expr pos:start="547:52" pos:end="547:71"><name pos:start="547:52" pos:end="547:71"><name pos:start="547:52" pos:end="547:52">s</name><operator pos:start="547:53" pos:end="547:54">-&gt;</operator><name pos:start="547:55" pos:end="547:65">mpeg_f_code</name><index pos:start="547:66" pos:end="547:68">[<expr pos:start="547:67" pos:end="547:67"><name pos:start="547:67" pos:end="547:67">i</name></expr>]</index><index pos:start="547:69" pos:end="547:71">[<expr pos:start="547:70" pos:end="547:70"><literal type="number" pos:start="547:70" pos:end="547:70">0</literal></expr>]</index></name></expr></argument>,

                                                <argument pos:start="549:49" pos:end="549:67"><expr pos:start="549:49" pos:end="549:67"><name pos:start="549:49" pos:end="549:67"><name pos:start="549:49" pos:end="549:49">s</name><operator pos:start="549:50" pos:end="549:51">-&gt;</operator><name pos:start="549:52" pos:end="549:58">last_mv</name><index pos:start="549:59" pos:end="549:61">[<expr pos:start="549:60" pos:end="549:60"><name pos:start="549:60" pos:end="549:60">i</name></expr>]</index><index pos:start="549:62" pos:end="549:64">[<expr pos:start="549:63" pos:end="549:63"><literal type="number" pos:start="549:63" pos:end="549:63">0</literal></expr>]</index><index pos:start="549:65" pos:end="549:67">[<expr pos:start="549:66" pos:end="549:66"><literal type="number" pos:start="549:66" pos:end="549:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="551:25" pos:end="551:49"><expr pos:start="551:25" pos:end="551:48"><name pos:start="551:25" pos:end="551:43"><name pos:start="551:25" pos:end="551:25">s</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:34">last_mv</name><index pos:start="551:35" pos:end="551:37">[<expr pos:start="551:36" pos:end="551:36"><name pos:start="551:36" pos:end="551:36">i</name></expr>]</index><index pos:start="551:38" pos:end="551:40">[<expr pos:start="551:39" pos:end="551:39"><literal type="number" pos:start="551:39" pos:end="551:39">0</literal></expr>]</index><index pos:start="551:41" pos:end="551:43">[<expr pos:start="551:42" pos:end="551:42"><literal type="number" pos:start="551:42" pos:end="551:42">0</literal></expr>]</index></name> <operator pos:start="551:45" pos:end="551:45">=</operator> <name pos:start="551:47" pos:end="551:48">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="553:25" pos:end="553:49"><expr pos:start="553:25" pos:end="553:48"><name pos:start="553:25" pos:end="553:43"><name pos:start="553:25" pos:end="553:25">s</name><operator pos:start="553:26" pos:end="553:27">-&gt;</operator><name pos:start="553:28" pos:end="553:34">last_mv</name><index pos:start="553:35" pos:end="553:37">[<expr pos:start="553:36" pos:end="553:36"><name pos:start="553:36" pos:end="553:36">i</name></expr>]</index><index pos:start="553:38" pos:end="553:40">[<expr pos:start="553:39" pos:end="553:39"><literal type="number" pos:start="553:39" pos:end="553:39">1</literal></expr>]</index><index pos:start="553:41" pos:end="553:43">[<expr pos:start="553:42" pos:end="553:42"><literal type="number" pos:start="553:42" pos:end="553:42">0</literal></expr>]</index></name> <operator pos:start="553:45" pos:end="553:45">=</operator> <name pos:start="553:47" pos:end="553:48">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="555:25" pos:end="555:41"><expr pos:start="555:25" pos:end="555:40"><name pos:start="555:25" pos:end="555:27">dmx</name> <operator pos:start="555:29" pos:end="555:29">=</operator> <call pos:start="555:31" pos:end="555:40"><name pos:start="555:31" pos:end="555:37">get_dmv</name><argument_list pos:start="555:38" pos:end="555:40">(<argument pos:start="555:39" pos:end="555:39"><expr pos:start="555:39" pos:end="555:39"><name pos:start="555:39" pos:end="555:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="557:25" pos:end="559:82"><expr pos:start="557:25" pos:end="559:81"><name pos:start="557:25" pos:end="557:26">my</name>  <operator pos:start="557:29" pos:end="557:29">=</operator> <call pos:start="557:31" pos:end="559:81"><name pos:start="557:31" pos:end="557:48">mpeg_decode_motion</name><argument_list pos:start="557:49" pos:end="559:81">(<argument pos:start="557:50" pos:end="557:50"><expr pos:start="557:50" pos:end="557:50"><name pos:start="557:50" pos:end="557:50">s</name></expr></argument>, <argument pos:start="557:53" pos:end="557:72"><expr pos:start="557:53" pos:end="557:72"><name pos:start="557:53" pos:end="557:72"><name pos:start="557:53" pos:end="557:53">s</name><operator pos:start="557:54" pos:end="557:55">-&gt;</operator><name pos:start="557:56" pos:end="557:66">mpeg_f_code</name><index pos:start="557:67" pos:end="557:69">[<expr pos:start="557:68" pos:end="557:68"><name pos:start="557:68" pos:end="557:68">i</name></expr>]</index><index pos:start="557:70" pos:end="557:72">[<expr pos:start="557:71" pos:end="557:71"><literal type="number" pos:start="557:71" pos:end="557:71">1</literal></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="559:50" pos:end="559:80"><expr pos:start="559:50" pos:end="559:80"><name pos:start="559:50" pos:end="559:68"><name pos:start="559:50" pos:end="559:50">s</name><operator pos:start="559:51" pos:end="559:52">-&gt;</operator><name pos:start="559:53" pos:end="559:59">last_mv</name><index pos:start="559:60" pos:end="559:62">[<expr pos:start="559:61" pos:end="559:61"><name pos:start="559:61" pos:end="559:61">i</name></expr>]</index><index pos:start="559:63" pos:end="559:65">[<expr pos:start="559:64" pos:end="559:64"><literal type="number" pos:start="559:64" pos:end="559:64">0</literal></expr>]</index><index pos:start="559:66" pos:end="559:68">[<expr pos:start="559:67" pos:end="559:67"><literal type="number" pos:start="559:67" pos:end="559:67">1</literal></expr>]</index></name> <operator pos:start="559:70" pos:end="559:71">&gt;&gt;</operator> <name pos:start="559:73" pos:end="559:80">my_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="561:25" pos:end="561:41"><expr pos:start="561:25" pos:end="561:40"><name pos:start="561:25" pos:end="561:27">dmy</name> <operator pos:start="561:29" pos:end="561:29">=</operator> <call pos:start="561:31" pos:end="561:40"><name pos:start="561:31" pos:end="561:37">get_dmv</name><argument_list pos:start="561:38" pos:end="561:40">(<argument pos:start="561:39" pos:end="561:39"><expr pos:start="561:39" pos:end="561:39"><name pos:start="561:39" pos:end="561:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





                        <expr_stmt pos:start="567:25" pos:end="567:67"><expr pos:start="567:25" pos:end="567:66"><name pos:start="567:25" pos:end="567:43"><name pos:start="567:25" pos:end="567:25">s</name><operator pos:start="567:26" pos:end="567:27">-&gt;</operator><name pos:start="567:28" pos:end="567:34">last_mv</name><index pos:start="567:35" pos:end="567:37">[<expr pos:start="567:36" pos:end="567:36"><name pos:start="567:36" pos:end="567:36">i</name></expr>]</index><index pos:start="567:38" pos:end="567:40">[<expr pos:start="567:39" pos:end="567:39"><literal type="number" pos:start="567:39" pos:end="567:39">0</literal></expr>]</index><index pos:start="567:41" pos:end="567:43">[<expr pos:start="567:42" pos:end="567:42"><literal type="number" pos:start="567:42" pos:end="567:42">1</literal></expr>]</index></name> <operator pos:start="567:45" pos:end="567:45">=</operator> <name pos:start="567:47" pos:end="567:48">my</name> <operator pos:start="567:50" pos:end="567:50">*</operator> <operator pos:start="567:52" pos:end="567:52">(</operator><literal type="number" pos:start="567:53" pos:end="567:53">1</literal> <operator pos:start="567:55" pos:end="567:56">&lt;&lt;</operator> <name pos:start="567:58" pos:end="567:65">my_shift</name><operator pos:start="567:66" pos:end="567:66">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="569:25" pos:end="569:67"><expr pos:start="569:25" pos:end="569:66"><name pos:start="569:25" pos:end="569:43"><name pos:start="569:25" pos:end="569:25">s</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:34">last_mv</name><index pos:start="569:35" pos:end="569:37">[<expr pos:start="569:36" pos:end="569:36"><name pos:start="569:36" pos:end="569:36">i</name></expr>]</index><index pos:start="569:38" pos:end="569:40">[<expr pos:start="569:39" pos:end="569:39"><literal type="number" pos:start="569:39" pos:end="569:39">1</literal></expr>]</index><index pos:start="569:41" pos:end="569:43">[<expr pos:start="569:42" pos:end="569:42"><literal type="number" pos:start="569:42" pos:end="569:42">1</literal></expr>]</index></name> <operator pos:start="569:45" pos:end="569:45">=</operator> <name pos:start="569:47" pos:end="569:48">my</name> <operator pos:start="569:50" pos:end="569:50">*</operator> <operator pos:start="569:52" pos:end="569:52">(</operator><literal type="number" pos:start="569:53" pos:end="569:53">1</literal> <operator pos:start="569:55" pos:end="569:56">&lt;&lt;</operator> <name pos:start="569:58" pos:end="569:65">my_shift</name><operator pos:start="569:66" pos:end="569:66">)</operator></expr>;</expr_stmt>



                        <expr_stmt pos:start="573:25" pos:end="573:44"><expr pos:start="573:25" pos:end="573:43"><name pos:start="573:25" pos:end="573:38"><name pos:start="573:25" pos:end="573:25">s</name><operator pos:start="573:26" pos:end="573:27">-&gt;</operator><name pos:start="573:28" pos:end="573:29">mv</name><index pos:start="573:30" pos:end="573:32">[<expr pos:start="573:31" pos:end="573:31"><name pos:start="573:31" pos:end="573:31">i</name></expr>]</index><index pos:start="573:33" pos:end="573:35">[<expr pos:start="573:34" pos:end="573:34"><literal type="number" pos:start="573:34" pos:end="573:34">0</literal></expr>]</index><index pos:start="573:36" pos:end="573:38">[<expr pos:start="573:37" pos:end="573:37"><literal type="number" pos:start="573:37" pos:end="573:37">0</literal></expr>]</index></name> <operator pos:start="573:40" pos:end="573:40">=</operator> <name pos:start="573:42" pos:end="573:43">mx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="575:25" pos:end="575:44"><expr pos:start="575:25" pos:end="575:43"><name pos:start="575:25" pos:end="575:38"><name pos:start="575:25" pos:end="575:25">s</name><operator pos:start="575:26" pos:end="575:27">-&gt;</operator><name pos:start="575:28" pos:end="575:29">mv</name><index pos:start="575:30" pos:end="575:32">[<expr pos:start="575:31" pos:end="575:31"><name pos:start="575:31" pos:end="575:31">i</name></expr>]</index><index pos:start="575:33" pos:end="575:35">[<expr pos:start="575:34" pos:end="575:34"><literal type="number" pos:start="575:34" pos:end="575:34">0</literal></expr>]</index><index pos:start="575:36" pos:end="575:38">[<expr pos:start="575:37" pos:end="575:37"><literal type="number" pos:start="575:37" pos:end="575:37">1</literal></expr>]</index></name> <operator pos:start="575:40" pos:end="575:40">=</operator> <name pos:start="575:42" pos:end="575:43">my</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="577:25" pos:end="577:44"><expr pos:start="577:25" pos:end="577:43"><name pos:start="577:25" pos:end="577:38"><name pos:start="577:25" pos:end="577:25">s</name><operator pos:start="577:26" pos:end="577:27">-&gt;</operator><name pos:start="577:28" pos:end="577:29">mv</name><index pos:start="577:30" pos:end="577:32">[<expr pos:start="577:31" pos:end="577:31"><name pos:start="577:31" pos:end="577:31">i</name></expr>]</index><index pos:start="577:33" pos:end="577:35">[<expr pos:start="577:34" pos:end="577:34"><literal type="number" pos:start="577:34" pos:end="577:34">1</literal></expr>]</index><index pos:start="577:36" pos:end="577:38">[<expr pos:start="577:37" pos:end="577:37"><literal type="number" pos:start="577:37" pos:end="577:37">0</literal></expr>]</index></name> <operator pos:start="577:40" pos:end="577:40">=</operator> <name pos:start="577:42" pos:end="577:43">mx</name></expr>;</expr_stmt> <comment type="line" pos:start="577:46" pos:end="577:56">// not used</comment>

                        <expr_stmt pos:start="579:25" pos:end="579:44"><expr pos:start="579:25" pos:end="579:43"><name pos:start="579:25" pos:end="579:38"><name pos:start="579:25" pos:end="579:25">s</name><operator pos:start="579:26" pos:end="579:27">-&gt;</operator><name pos:start="579:28" pos:end="579:29">mv</name><index pos:start="579:30" pos:end="579:32">[<expr pos:start="579:31" pos:end="579:31"><name pos:start="579:31" pos:end="579:31">i</name></expr>]</index><index pos:start="579:33" pos:end="579:35">[<expr pos:start="579:34" pos:end="579:34"><literal type="number" pos:start="579:34" pos:end="579:34">1</literal></expr>]</index><index pos:start="579:36" pos:end="579:38">[<expr pos:start="579:37" pos:end="579:37"><literal type="number" pos:start="579:37" pos:end="579:37">1</literal></expr>]</index></name> <operator pos:start="579:40" pos:end="579:40">=</operator> <name pos:start="579:42" pos:end="579:43">my</name></expr>;</expr_stmt> <comment type="line" pos:start="579:46" pos:end="579:56">// not used</comment>



                        <if_stmt pos:start="583:25" pos:end="625:25"><if pos:start="583:25" pos:end="607:25">if <condition pos:start="583:28" pos:end="583:63">(<expr pos:start="583:29" pos:end="583:62"><name pos:start="583:29" pos:end="583:48"><name pos:start="583:29" pos:end="583:29">s</name><operator pos:start="583:30" pos:end="583:31">-&gt;</operator><name pos:start="583:32" pos:end="583:48">picture_structure</name></name> <operator pos:start="583:50" pos:end="583:51">==</operator> <name pos:start="583:53" pos:end="583:62">PICT_FRAME</name></expr>)</condition> <block pos:start="583:65" pos:end="607:25">{<block_content pos:start="585:29" pos:end="605:82">

                            <expr_stmt pos:start="585:29" pos:end="585:74"><expr pos:start="585:29" pos:end="585:73"><name pos:start="585:29" pos:end="585:35">mb_type</name> <operator pos:start="585:37" pos:end="585:38">|=</operator> <name pos:start="585:40" pos:end="585:52">MB_TYPE_16x16</name> <operator pos:start="585:54" pos:end="585:54">|</operator> <name pos:start="585:56" pos:end="585:73">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>



                            <comment type="line" pos:start="589:29" pos:end="589:62">// m = 1 + 2 * s-&gt;top_field_first;</comment>

                            <expr_stmt pos:start="591:29" pos:end="591:59"><expr pos:start="591:29" pos:end="591:58"><name pos:start="591:29" pos:end="591:29">m</name> <operator pos:start="591:31" pos:end="591:31">=</operator> <ternary pos:start="591:33" pos:end="591:58"><condition pos:start="591:33" pos:end="591:52"><expr pos:start="591:33" pos:end="591:50"><name pos:start="591:33" pos:end="591:50"><name pos:start="591:33" pos:end="591:33">s</name><operator pos:start="591:34" pos:end="591:35">-&gt;</operator><name pos:start="591:36" pos:end="591:50">top_field_first</name></name></expr> ?</condition><then pos:start="591:54" pos:end="591:54"> <expr pos:start="591:54" pos:end="591:54"><literal type="number" pos:start="591:54" pos:end="591:54">1</literal></expr> </then><else pos:start="591:56" pos:end="591:58">: <expr pos:start="591:58" pos:end="591:58"><literal type="number" pos:start="591:58" pos:end="591:58">3</literal></expr></else></ternary></expr>;</expr_stmt>



                            <comment type="block" pos:start="595:29" pos:end="595:49">/* top -&gt; top pred */</comment>

                            <expr_stmt pos:start="597:29" pos:end="597:78"><expr pos:start="597:29" pos:end="597:77"><name pos:start="597:29" pos:end="597:42"><name pos:start="597:29" pos:end="597:29">s</name><operator pos:start="597:30" pos:end="597:31">-&gt;</operator><name pos:start="597:32" pos:end="597:33">mv</name><index pos:start="597:34" pos:end="597:36">[<expr pos:start="597:35" pos:end="597:35"><name pos:start="597:35" pos:end="597:35">i</name></expr>]</index><index pos:start="597:37" pos:end="597:39">[<expr pos:start="597:38" pos:end="597:38"><literal type="number" pos:start="597:38" pos:end="597:38">2</literal></expr>]</index><index pos:start="597:40" pos:end="597:42">[<expr pos:start="597:41" pos:end="597:41"><literal type="number" pos:start="597:41" pos:end="597:41">0</literal></expr>]</index></name> <operator pos:start="597:44" pos:end="597:44">=</operator> <operator pos:start="597:46" pos:end="597:46">(</operator><operator pos:start="597:47" pos:end="597:47">(</operator><name pos:start="597:48" pos:end="597:49">mx</name> <operator pos:start="597:51" pos:end="597:51">*</operator> <name pos:start="597:53" pos:end="597:53">m</name> <operator pos:start="597:55" pos:end="597:55">+</operator> <operator pos:start="597:57" pos:end="597:57">(</operator><name pos:start="597:58" pos:end="597:59">mx</name> <operator pos:start="597:61" pos:end="597:61">&gt;</operator> <literal type="number" pos:start="597:63" pos:end="597:63">0</literal><operator pos:start="597:64" pos:end="597:64">)</operator><operator pos:start="597:65" pos:end="597:65">)</operator> <operator pos:start="597:67" pos:end="597:68">&gt;&gt;</operator> <literal type="number" pos:start="597:70" pos:end="597:70">1</literal><operator pos:start="597:71" pos:end="597:71">)</operator> <operator pos:start="597:73" pos:end="597:73">+</operator> <name pos:start="597:75" pos:end="597:77">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="599:29" pos:end="599:82"><expr pos:start="599:29" pos:end="599:81"><name pos:start="599:29" pos:end="599:42"><name pos:start="599:29" pos:end="599:29">s</name><operator pos:start="599:30" pos:end="599:31">-&gt;</operator><name pos:start="599:32" pos:end="599:33">mv</name><index pos:start="599:34" pos:end="599:36">[<expr pos:start="599:35" pos:end="599:35"><name pos:start="599:35" pos:end="599:35">i</name></expr>]</index><index pos:start="599:37" pos:end="599:39">[<expr pos:start="599:38" pos:end="599:38"><literal type="number" pos:start="599:38" pos:end="599:38">2</literal></expr>]</index><index pos:start="599:40" pos:end="599:42">[<expr pos:start="599:41" pos:end="599:41"><literal type="number" pos:start="599:41" pos:end="599:41">1</literal></expr>]</index></name> <operator pos:start="599:44" pos:end="599:44">=</operator> <operator pos:start="599:46" pos:end="599:46">(</operator><operator pos:start="599:47" pos:end="599:47">(</operator><name pos:start="599:48" pos:end="599:49">my</name> <operator pos:start="599:51" pos:end="599:51">*</operator> <name pos:start="599:53" pos:end="599:53">m</name> <operator pos:start="599:55" pos:end="599:55">+</operator> <operator pos:start="599:57" pos:end="599:57">(</operator><name pos:start="599:58" pos:end="599:59">my</name> <operator pos:start="599:61" pos:end="599:61">&gt;</operator> <literal type="number" pos:start="599:63" pos:end="599:63">0</literal><operator pos:start="599:64" pos:end="599:64">)</operator><operator pos:start="599:65" pos:end="599:65">)</operator> <operator pos:start="599:67" pos:end="599:68">&gt;&gt;</operator> <literal type="number" pos:start="599:70" pos:end="599:70">1</literal><operator pos:start="599:71" pos:end="599:71">)</operator> <operator pos:start="599:73" pos:end="599:73">+</operator> <name pos:start="599:75" pos:end="599:77">dmy</name> <operator pos:start="599:79" pos:end="599:79">-</operator> <literal type="number" pos:start="599:81" pos:end="599:81">1</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="601:29" pos:end="601:38"><expr pos:start="601:29" pos:end="601:37"><name pos:start="601:29" pos:end="601:29">m</name> <operator pos:start="601:31" pos:end="601:31">=</operator> <literal type="number" pos:start="601:33" pos:end="601:35">4</literal> <operator pos:start="601:35" pos:end="601:35">-</operator> <name pos:start="601:37" pos:end="601:37">m</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="603:29" pos:end="603:78"><expr pos:start="603:29" pos:end="603:77"><name pos:start="603:29" pos:end="603:42"><name pos:start="603:29" pos:end="603:29">s</name><operator pos:start="603:30" pos:end="603:31">-&gt;</operator><name pos:start="603:32" pos:end="603:33">mv</name><index pos:start="603:34" pos:end="603:36">[<expr pos:start="603:35" pos:end="603:35"><name pos:start="603:35" pos:end="603:35">i</name></expr>]</index><index pos:start="603:37" pos:end="603:39">[<expr pos:start="603:38" pos:end="603:38"><literal type="number" pos:start="603:38" pos:end="603:38">3</literal></expr>]</index><index pos:start="603:40" pos:end="603:42">[<expr pos:start="603:41" pos:end="603:41"><literal type="number" pos:start="603:41" pos:end="603:41">0</literal></expr>]</index></name> <operator pos:start="603:44" pos:end="603:44">=</operator> <operator pos:start="603:46" pos:end="603:46">(</operator><operator pos:start="603:47" pos:end="603:47">(</operator><name pos:start="603:48" pos:end="603:49">mx</name> <operator pos:start="603:51" pos:end="603:51">*</operator> <name pos:start="603:53" pos:end="603:53">m</name> <operator pos:start="603:55" pos:end="603:55">+</operator> <operator pos:start="603:57" pos:end="603:57">(</operator><name pos:start="603:58" pos:end="603:59">mx</name> <operator pos:start="603:61" pos:end="603:61">&gt;</operator> <literal type="number" pos:start="603:63" pos:end="603:63">0</literal><operator pos:start="603:64" pos:end="603:64">)</operator><operator pos:start="603:65" pos:end="603:65">)</operator> <operator pos:start="603:67" pos:end="603:68">&gt;&gt;</operator> <literal type="number" pos:start="603:70" pos:end="603:70">1</literal><operator pos:start="603:71" pos:end="603:71">)</operator> <operator pos:start="603:73" pos:end="603:73">+</operator> <name pos:start="603:75" pos:end="603:77">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="605:29" pos:end="605:82"><expr pos:start="605:29" pos:end="605:81"><name pos:start="605:29" pos:end="605:42"><name pos:start="605:29" pos:end="605:29">s</name><operator pos:start="605:30" pos:end="605:31">-&gt;</operator><name pos:start="605:32" pos:end="605:33">mv</name><index pos:start="605:34" pos:end="605:36">[<expr pos:start="605:35" pos:end="605:35"><name pos:start="605:35" pos:end="605:35">i</name></expr>]</index><index pos:start="605:37" pos:end="605:39">[<expr pos:start="605:38" pos:end="605:38"><literal type="number" pos:start="605:38" pos:end="605:38">3</literal></expr>]</index><index pos:start="605:40" pos:end="605:42">[<expr pos:start="605:41" pos:end="605:41"><literal type="number" pos:start="605:41" pos:end="605:41">1</literal></expr>]</index></name> <operator pos:start="605:44" pos:end="605:44">=</operator> <operator pos:start="605:46" pos:end="605:46">(</operator><operator pos:start="605:47" pos:end="605:47">(</operator><name pos:start="605:48" pos:end="605:49">my</name> <operator pos:start="605:51" pos:end="605:51">*</operator> <name pos:start="605:53" pos:end="605:53">m</name> <operator pos:start="605:55" pos:end="605:55">+</operator> <operator pos:start="605:57" pos:end="605:57">(</operator><name pos:start="605:58" pos:end="605:59">my</name> <operator pos:start="605:61" pos:end="605:61">&gt;</operator> <literal type="number" pos:start="605:63" pos:end="605:63">0</literal><operator pos:start="605:64" pos:end="605:64">)</operator><operator pos:start="605:65" pos:end="605:65">)</operator> <operator pos:start="605:67" pos:end="605:68">&gt;&gt;</operator> <literal type="number" pos:start="605:70" pos:end="605:70">1</literal><operator pos:start="605:71" pos:end="605:71">)</operator> <operator pos:start="605:73" pos:end="605:73">+</operator> <name pos:start="605:75" pos:end="605:77">dmy</name> <operator pos:start="605:79" pos:end="605:79">+</operator> <literal type="number" pos:start="605:81" pos:end="605:81">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="607:27" pos:end="625:25">else <block pos:start="607:32" pos:end="625:25">{<block_content pos:start="609:29" pos:end="623:49">

                            <expr_stmt pos:start="609:29" pos:end="609:53"><expr pos:start="609:29" pos:end="609:52"><name pos:start="609:29" pos:end="609:35">mb_type</name> <operator pos:start="609:37" pos:end="609:38">|=</operator> <name pos:start="609:40" pos:end="609:52">MB_TYPE_16x16</name></expr>;</expr_stmt>



                            <expr_stmt pos:start="613:29" pos:end="613:74"><expr pos:start="613:29" pos:end="613:73"><name pos:start="613:29" pos:end="613:42"><name pos:start="613:29" pos:end="613:29">s</name><operator pos:start="613:30" pos:end="613:31">-&gt;</operator><name pos:start="613:32" pos:end="613:33">mv</name><index pos:start="613:34" pos:end="613:36">[<expr pos:start="613:35" pos:end="613:35"><name pos:start="613:35" pos:end="613:35">i</name></expr>]</index><index pos:start="613:37" pos:end="613:39">[<expr pos:start="613:38" pos:end="613:38"><literal type="number" pos:start="613:38" pos:end="613:38">2</literal></expr>]</index><index pos:start="613:40" pos:end="613:42">[<expr pos:start="613:41" pos:end="613:41"><literal type="number" pos:start="613:41" pos:end="613:41">0</literal></expr>]</index></name> <operator pos:start="613:44" pos:end="613:44">=</operator> <operator pos:start="613:46" pos:end="613:46">(</operator><operator pos:start="613:47" pos:end="613:47">(</operator><name pos:start="613:48" pos:end="613:49">mx</name> <operator pos:start="613:51" pos:end="613:51">+</operator> <operator pos:start="613:53" pos:end="613:53">(</operator><name pos:start="613:54" pos:end="613:55">mx</name> <operator pos:start="613:57" pos:end="613:57">&gt;</operator> <literal type="number" pos:start="613:59" pos:end="613:59">0</literal><operator pos:start="613:60" pos:end="613:60">)</operator><operator pos:start="613:61" pos:end="613:61">)</operator> <operator pos:start="613:63" pos:end="613:64">&gt;&gt;</operator> <literal type="number" pos:start="613:66" pos:end="613:66">1</literal><operator pos:start="613:67" pos:end="613:67">)</operator> <operator pos:start="613:69" pos:end="613:69">+</operator> <name pos:start="613:71" pos:end="613:73">dmx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="615:29" pos:end="615:74"><expr pos:start="615:29" pos:end="615:73"><name pos:start="615:29" pos:end="615:42"><name pos:start="615:29" pos:end="615:29">s</name><operator pos:start="615:30" pos:end="615:31">-&gt;</operator><name pos:start="615:32" pos:end="615:33">mv</name><index pos:start="615:34" pos:end="615:36">[<expr pos:start="615:35" pos:end="615:35"><name pos:start="615:35" pos:end="615:35">i</name></expr>]</index><index pos:start="615:37" pos:end="615:39">[<expr pos:start="615:38" pos:end="615:38"><literal type="number" pos:start="615:38" pos:end="615:38">2</literal></expr>]</index><index pos:start="615:40" pos:end="615:42">[<expr pos:start="615:41" pos:end="615:41"><literal type="number" pos:start="615:41" pos:end="615:41">1</literal></expr>]</index></name> <operator pos:start="615:44" pos:end="615:44">=</operator> <operator pos:start="615:46" pos:end="615:46">(</operator><operator pos:start="615:47" pos:end="615:47">(</operator><name pos:start="615:48" pos:end="615:49">my</name> <operator pos:start="615:51" pos:end="615:51">+</operator> <operator pos:start="615:53" pos:end="615:53">(</operator><name pos:start="615:54" pos:end="615:55">my</name> <operator pos:start="615:57" pos:end="615:57">&gt;</operator> <literal type="number" pos:start="615:59" pos:end="615:59">0</literal><operator pos:start="615:60" pos:end="615:60">)</operator><operator pos:start="615:61" pos:end="615:61">)</operator> <operator pos:start="615:63" pos:end="615:64">&gt;&gt;</operator> <literal type="number" pos:start="615:66" pos:end="615:66">1</literal><operator pos:start="615:67" pos:end="615:67">)</operator> <operator pos:start="615:69" pos:end="615:69">+</operator> <name pos:start="615:71" pos:end="615:73">dmy</name></expr>;</expr_stmt>

                            <if_stmt pos:start="617:29" pos:end="623:49"><if pos:start="617:29" pos:end="619:49">if <condition pos:start="617:32" pos:end="617:71">(<expr pos:start="617:33" pos:end="617:70"><name pos:start="617:33" pos:end="617:52"><name pos:start="617:33" pos:end="617:33">s</name><operator pos:start="617:34" pos:end="617:35">-&gt;</operator><name pos:start="617:36" pos:end="617:52">picture_structure</name></name> <operator pos:start="617:54" pos:end="617:55">==</operator> <name pos:start="617:57" pos:end="617:70">PICT_TOP_FIELD</name></expr>)</condition><block type="pseudo" pos:start="619:33" pos:end="619:49"><block_content pos:start="619:33" pos:end="619:49">

                                <expr_stmt pos:start="619:33" pos:end="619:49"><expr pos:start="619:33" pos:end="619:48"><name pos:start="619:33" pos:end="619:46"><name pos:start="619:33" pos:end="619:33">s</name><operator pos:start="619:34" pos:end="619:35">-&gt;</operator><name pos:start="619:36" pos:end="619:37">mv</name><index pos:start="619:38" pos:end="619:40">[<expr pos:start="619:39" pos:end="619:39"><name pos:start="619:39" pos:end="619:39">i</name></expr>]</index><index pos:start="619:41" pos:end="619:43">[<expr pos:start="619:42" pos:end="619:42"><literal type="number" pos:start="619:42" pos:end="619:42">2</literal></expr>]</index><index pos:start="619:44" pos:end="619:46">[<expr pos:start="619:45" pos:end="619:45"><literal type="number" pos:start="619:45" pos:end="619:45">1</literal></expr>]</index></name><operator pos:start="619:47" pos:end="619:48">--</operator></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="621:29" pos:end="623:49">else<block type="pseudo" pos:start="623:33" pos:end="623:49"><block_content pos:start="623:33" pos:end="623:49">

                                <expr_stmt pos:start="623:33" pos:end="623:49"><expr pos:start="623:33" pos:end="623:48"><name pos:start="623:33" pos:end="623:46"><name pos:start="623:33" pos:end="623:33">s</name><operator pos:start="623:34" pos:end="623:35">-&gt;</operator><name pos:start="623:36" pos:end="623:37">mv</name><index pos:start="623:38" pos:end="623:40">[<expr pos:start="623:39" pos:end="623:39"><name pos:start="623:39" pos:end="623:39">i</name></expr>]</index><index pos:start="623:41" pos:end="623:43">[<expr pos:start="623:42" pos:end="623:42"><literal type="number" pos:start="623:42" pos:end="623:42">2</literal></expr>]</index><index pos:start="623:44" pos:end="623:46">[<expr pos:start="623:45" pos:end="623:45"><literal type="number" pos:start="623:45" pos:end="623:45">1</literal></expr>]</index></name><operator pos:start="623:47" pos:end="623:48">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <break pos:start="631:17" pos:end="631:22">break;</break>

            <default pos:start="633:13" pos:end="633:20">default:</default>

                <expr_stmt pos:start="635:17" pos:end="637:70"><expr pos:start="635:17" pos:end="637:69"><call pos:start="635:17" pos:end="637:69"><name pos:start="635:17" pos:end="635:22">av_log</name><argument_list pos:start="635:23" pos:end="637:69">(<argument pos:start="635:24" pos:end="635:31"><expr pos:start="635:24" pos:end="635:31"><name pos:start="635:24" pos:end="635:31"><name pos:start="635:24" pos:end="635:24">s</name><operator pos:start="635:25" pos:end="635:26">-&gt;</operator><name pos:start="635:27" pos:end="635:31">avctx</name></name></expr></argument>, <argument pos:start="635:34" pos:end="635:45"><expr pos:start="635:34" pos:end="635:45"><name pos:start="635:34" pos:end="635:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="637:24" pos:end="637:50"><expr pos:start="637:24" pos:end="637:50"><literal type="string" pos:start="637:24" pos:end="637:50">"00 motion_type at %d %d\n"</literal></expr></argument>, <argument pos:start="637:53" pos:end="637:59"><expr pos:start="637:53" pos:end="637:59"><name pos:start="637:53" pos:end="637:59"><name pos:start="637:53" pos:end="637:53">s</name><operator pos:start="637:54" pos:end="637:55">-&gt;</operator><name pos:start="637:56" pos:end="637:59">mb_x</name></name></expr></argument>, <argument pos:start="637:62" pos:end="637:68"><expr pos:start="637:62" pos:end="637:68"><name pos:start="637:62" pos:end="637:68"><name pos:start="637:62" pos:end="637:62">s</name><operator pos:start="637:63" pos:end="637:64">-&gt;</operator><name pos:start="637:65" pos:end="637:68">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="639:17" pos:end="639:43">return <expr pos:start="639:24" pos:end="639:42"><name pos:start="639:24" pos:end="639:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="647:9" pos:end="647:24"><expr pos:start="647:9" pos:end="647:23"><name pos:start="647:9" pos:end="647:19"><name pos:start="647:9" pos:end="647:9">s</name><operator pos:start="647:10" pos:end="647:11">-&gt;</operator><name pos:start="647:12" pos:end="647:19">mb_intra</name></name> <operator pos:start="647:21" pos:end="647:21">=</operator> <literal type="number" pos:start="647:23" pos:end="647:23">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="649:9" pos:end="779:9"><if pos:start="649:9" pos:end="773:9">if <condition pos:start="649:12" pos:end="649:29">(<expr pos:start="649:13" pos:end="649:28"><call pos:start="649:13" pos:end="649:28"><name pos:start="649:13" pos:end="649:19">HAS_CBP</name><argument_list pos:start="649:20" pos:end="649:28">(<argument pos:start="649:21" pos:end="649:27"><expr pos:start="649:21" pos:end="649:27"><name pos:start="649:21" pos:end="649:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="649:31" pos:end="773:9">{<block_content pos:start="651:13" pos:end="771:13">

            <expr_stmt pos:start="651:13" pos:end="651:46"><expr pos:start="651:13" pos:end="651:45"><call pos:start="651:13" pos:end="651:45"><name pos:start="651:13" pos:end="651:32"><name pos:start="651:13" pos:end="651:13">s</name><operator pos:start="651:14" pos:end="651:15">-&gt;</operator><name pos:start="651:16" pos:end="651:19">bdsp</name><operator pos:start="651:20" pos:end="651:20">.</operator><name pos:start="651:21" pos:end="651:32">clear_blocks</name></name><argument_list pos:start="651:33" pos:end="651:45">(<argument pos:start="651:34" pos:end="651:44"><expr pos:start="651:34" pos:end="651:44"><name pos:start="651:34" pos:end="651:44"><name pos:start="651:34" pos:end="651:34">s</name><operator pos:start="651:35" pos:end="651:36">-&gt;</operator><name pos:start="651:37" pos:end="651:41">block</name><index pos:start="651:42" pos:end="651:44">[<expr pos:start="651:43" pos:end="651:43"><literal type="number" pos:start="651:43" pos:end="651:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="655:13" pos:end="655:76"><expr pos:start="655:13" pos:end="655:75"><name pos:start="655:13" pos:end="655:15">cbp</name> <operator pos:start="655:17" pos:end="655:17">=</operator> <call pos:start="655:19" pos:end="655:75"><name pos:start="655:19" pos:end="655:26">get_vlc2</name><argument_list pos:start="655:27" pos:end="655:75">(<argument pos:start="655:28" pos:end="655:33"><expr pos:start="655:28" pos:end="655:33"><operator pos:start="655:28" pos:end="655:28">&amp;</operator><name pos:start="655:29" pos:end="655:33"><name pos:start="655:29" pos:end="655:29">s</name><operator pos:start="655:30" pos:end="655:31">-&gt;</operator><name pos:start="655:32" pos:end="655:33">gb</name></name></expr></argument>, <argument pos:start="655:36" pos:end="655:54"><expr pos:start="655:36" pos:end="655:54"><name pos:start="655:36" pos:end="655:54"><name pos:start="655:36" pos:end="655:48">ff_mb_pat_vlc</name><operator pos:start="655:49" pos:end="655:49">.</operator><name pos:start="655:50" pos:end="655:54">table</name></name></expr></argument>, <argument pos:start="655:57" pos:end="655:71"><expr pos:start="655:57" pos:end="655:71"><name pos:start="655:57" pos:end="655:71">MB_PAT_VLC_BITS</name></expr></argument>, <argument pos:start="655:74" pos:end="655:74"><expr pos:start="655:74" pos:end="655:74"><literal type="number" pos:start="655:74" pos:end="655:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="657:13" pos:end="665:13"><if pos:start="657:13" pos:end="665:13">if <condition pos:start="657:16" pos:end="657:35">(<expr pos:start="657:17" pos:end="657:34"><name pos:start="657:17" pos:end="657:30">mb_block_count</name> <operator pos:start="657:32" pos:end="657:32">&gt;</operator> <literal type="number" pos:start="657:34" pos:end="657:34">6</literal></expr>)</condition> <block pos:start="657:37" pos:end="665:13">{<block_content pos:start="659:17" pos:end="663:50">

                <expr_stmt pos:start="659:17" pos:end="659:43"><expr pos:start="659:17" pos:end="659:42"><name pos:start="659:17" pos:end="659:19">cbp</name> <operator pos:start="659:21" pos:end="659:23">&lt;&lt;=</operator> <name pos:start="659:25" pos:end="659:38">mb_block_count</name> <operator pos:start="659:40" pos:end="659:40">-</operator> <literal type="number" pos:start="659:42" pos:end="659:42">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="661:17" pos:end="661:61"><expr pos:start="661:17" pos:end="661:60"><name pos:start="661:17" pos:end="661:19">cbp</name>  <operator pos:start="661:22" pos:end="661:23">|=</operator> <call pos:start="661:25" pos:end="661:60"><name pos:start="661:25" pos:end="661:32">get_bits</name><argument_list pos:start="661:33" pos:end="661:60">(<argument pos:start="661:34" pos:end="661:39"><expr pos:start="661:34" pos:end="661:39"><operator pos:start="661:34" pos:end="661:34">&amp;</operator><name pos:start="661:35" pos:end="661:39"><name pos:start="661:35" pos:end="661:35">s</name><operator pos:start="661:36" pos:end="661:37">-&gt;</operator><name pos:start="661:38" pos:end="661:39">gb</name></name></expr></argument>, <argument pos:start="661:42" pos:end="661:59"><expr pos:start="661:42" pos:end="661:59"><name pos:start="661:42" pos:end="661:55">mb_block_count</name> <operator pos:start="661:57" pos:end="661:57">-</operator> <literal type="number" pos:start="661:59" pos:end="661:59">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:50"><expr pos:start="663:17" pos:end="663:49"><call pos:start="663:17" pos:end="663:49"><name pos:start="663:17" pos:end="663:36"><name pos:start="663:17" pos:end="663:17">s</name><operator pos:start="663:18" pos:end="663:19">-&gt;</operator><name pos:start="663:20" pos:end="663:23">bdsp</name><operator pos:start="663:24" pos:end="663:24">.</operator><name pos:start="663:25" pos:end="663:36">clear_blocks</name></name><argument_list pos:start="663:37" pos:end="663:49">(<argument pos:start="663:38" pos:end="663:48"><expr pos:start="663:38" pos:end="663:48"><name pos:start="663:38" pos:end="663:48"><name pos:start="663:38" pos:end="663:38">s</name><operator pos:start="663:39" pos:end="663:40">-&gt;</operator><name pos:start="663:41" pos:end="663:45">block</name><index pos:start="663:46" pos:end="663:48">[<expr pos:start="663:47" pos:end="663:47"><literal type="number" pos:start="663:47" pos:end="663:47">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="667:13" pos:end="675:13"><if pos:start="667:13" pos:end="675:13">if <condition pos:start="667:16" pos:end="667:25">(<expr pos:start="667:17" pos:end="667:24"><name pos:start="667:17" pos:end="667:19">cbp</name> <operator pos:start="667:21" pos:end="667:22">&lt;=</operator> <literal type="number" pos:start="667:24" pos:end="667:24">0</literal></expr>)</condition> <block pos:start="667:27" pos:end="675:13">{<block_content pos:start="669:17" pos:end="673:43">

                <expr_stmt pos:start="669:17" pos:end="671:75"><expr pos:start="669:17" pos:end="671:74"><call pos:start="669:17" pos:end="671:74"><name pos:start="669:17" pos:end="669:22">av_log</name><argument_list pos:start="669:23" pos:end="671:74">(<argument pos:start="669:24" pos:end="669:31"><expr pos:start="669:24" pos:end="669:31"><name pos:start="669:24" pos:end="669:31"><name pos:start="669:24" pos:end="669:24">s</name><operator pos:start="669:25" pos:end="669:26">-&gt;</operator><name pos:start="669:27" pos:end="669:31">avctx</name></name></expr></argument>, <argument pos:start="669:34" pos:end="669:45"><expr pos:start="669:34" pos:end="669:45"><name pos:start="669:34" pos:end="669:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="671:24" pos:end="671:50"><expr pos:start="671:24" pos:end="671:50"><literal type="string" pos:start="671:24" pos:end="671:50">"invalid cbp %d at %d %d\n"</literal></expr></argument>, <argument pos:start="671:53" pos:end="671:55"><expr pos:start="671:53" pos:end="671:55"><name pos:start="671:53" pos:end="671:55">cbp</name></expr></argument>, <argument pos:start="671:58" pos:end="671:64"><expr pos:start="671:58" pos:end="671:64"><name pos:start="671:58" pos:end="671:64"><name pos:start="671:58" pos:end="671:58">s</name><operator pos:start="671:59" pos:end="671:60">-&gt;</operator><name pos:start="671:61" pos:end="671:64">mb_x</name></name></expr></argument>, <argument pos:start="671:67" pos:end="671:73"><expr pos:start="671:67" pos:end="671:73"><name pos:start="671:67" pos:end="671:73"><name pos:start="671:67" pos:end="671:67">s</name><operator pos:start="671:68" pos:end="671:69">-&gt;</operator><name pos:start="671:70" pos:end="671:73">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="673:17" pos:end="673:43">return <expr pos:start="673:24" pos:end="673:42"><name pos:start="673:24" pos:end="673:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="679:13" pos:end="679:50">// if 1, we memcpy blocks in xvmcvideo</comment>

            <if_stmt pos:start="681:13" pos:end="683:45"><if pos:start="681:13" pos:end="683:45">if <condition pos:start="681:16" pos:end="681:92">(<expr pos:start="681:17" pos:end="681:91"><operator pos:start="681:17" pos:end="681:17">(</operator><name pos:start="681:18" pos:end="681:42">CONFIG_MPEG1_XVMC_HWACCEL</name> <operator pos:start="681:44" pos:end="681:45">||</operator> <name pos:start="681:47" pos:end="681:71">CONFIG_MPEG2_XVMC_HWACCEL</name><operator pos:start="681:72" pos:end="681:72">)</operator> <operator pos:start="681:74" pos:end="681:75">&amp;&amp;</operator> <name pos:start="681:77" pos:end="681:91"><name pos:start="681:77" pos:end="681:77">s</name><operator pos:start="681:78" pos:end="681:79">-&gt;</operator><name pos:start="681:80" pos:end="681:91">pack_pblocks</name></name></expr>)</condition><block type="pseudo" pos:start="683:17" pos:end="683:45"><block_content pos:start="683:17" pos:end="683:45">

                <expr_stmt pos:start="683:17" pos:end="683:45"><expr pos:start="683:17" pos:end="683:44"><call pos:start="683:17" pos:end="683:44"><name pos:start="683:17" pos:end="683:36">ff_xvmc_pack_pblocks</name><argument_list pos:start="683:37" pos:end="683:44">(<argument pos:start="683:38" pos:end="683:38"><expr pos:start="683:38" pos:end="683:38"><name pos:start="683:38" pos:end="683:38">s</name></expr></argument>, <argument pos:start="683:41" pos:end="683:43"><expr pos:start="683:41" pos:end="683:43"><name pos:start="683:41" pos:end="683:43">cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="687:13" pos:end="771:13"><if pos:start="687:13" pos:end="731:13">if <condition pos:start="687:16" pos:end="687:54">(<expr pos:start="687:17" pos:end="687:53"><name pos:start="687:17" pos:end="687:27"><name pos:start="687:17" pos:end="687:17">s</name><operator pos:start="687:18" pos:end="687:19">-&gt;</operator><name pos:start="687:20" pos:end="687:27">codec_id</name></name> <operator pos:start="687:29" pos:end="687:30">==</operator> <name pos:start="687:32" pos:end="687:53">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="687:56" pos:end="731:13">{<block_content pos:start="689:17" pos:end="729:17">

                <if_stmt pos:start="689:17" pos:end="729:17"><if pos:start="689:17" pos:end="705:17">if <condition pos:start="689:20" pos:end="689:59">(<expr pos:start="689:21" pos:end="689:58"><name pos:start="689:21" pos:end="689:36"><name pos:start="689:21" pos:end="689:21">s</name><operator pos:start="689:22" pos:end="689:23">-&gt;</operator><name pos:start="689:24" pos:end="689:28">avctx</name><operator pos:start="689:29" pos:end="689:30">-&gt;</operator><name pos:start="689:31" pos:end="689:36">flags2</name></name> <operator pos:start="689:38" pos:end="689:38">&amp;</operator> <name pos:start="689:40" pos:end="689:58">AV_CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="689:61" pos:end="705:17">{<block_content pos:start="691:21" pos:end="703:21">

                    <for pos:start="691:21" pos:end="703:21">for <control pos:start="691:25" pos:end="691:43">(<init pos:start="691:26" pos:end="691:31"><expr pos:start="691:26" pos:end="691:30"><name pos:start="691:26" pos:end="691:26">i</name> <operator pos:start="691:28" pos:end="691:28">=</operator> <literal type="number" pos:start="691:30" pos:end="691:30">0</literal></expr>;</init> <condition pos:start="691:33" pos:end="691:38"><expr pos:start="691:33" pos:end="691:37"><name pos:start="691:33" pos:end="691:33">i</name> <operator pos:start="691:35" pos:end="691:35">&lt;</operator> <literal type="number" pos:start="691:37" pos:end="691:37">6</literal></expr>;</condition> <incr pos:start="691:40" pos:end="691:42"><expr pos:start="691:40" pos:end="691:42"><name pos:start="691:40" pos:end="691:40">i</name><operator pos:start="691:41" pos:end="691:42">++</operator></expr></incr>)</control> <block pos:start="691:45" pos:end="703:21">{<block_content pos:start="693:25" pos:end="701:35">

                        <if_stmt pos:start="693:25" pos:end="699:56"><if pos:start="693:25" pos:end="695:84">if <condition pos:start="693:28" pos:end="693:37">(<expr pos:start="693:29" pos:end="693:36"><name pos:start="693:29" pos:end="693:31">cbp</name> <operator pos:start="693:33" pos:end="693:33">&amp;</operator> <literal type="number" pos:start="693:35" pos:end="693:36">32</literal></expr>)</condition><block type="pseudo" pos:start="695:29" pos:end="695:84"><block_content pos:start="695:29" pos:end="695:84">

                            <expr_stmt pos:start="695:29" pos:end="695:84"><expr pos:start="695:29" pos:end="695:83"><call pos:start="695:29" pos:end="695:83"><name pos:start="695:29" pos:end="695:61">mpeg2_fast_decode_block_non_intra</name><argument_list pos:start="695:62" pos:end="695:83">(<argument pos:start="695:63" pos:end="695:63"><expr pos:start="695:63" pos:end="695:63"><name pos:start="695:63" pos:end="695:63">s</name></expr></argument>, <argument pos:start="695:66" pos:end="695:79"><expr pos:start="695:66" pos:end="695:79"><operator pos:start="695:66" pos:end="695:66">*</operator><name pos:start="695:67" pos:end="695:79"><name pos:start="695:67" pos:end="695:67">s</name><operator pos:start="695:68" pos:end="695:69">-&gt;</operator><name pos:start="695:70" pos:end="695:76">pblocks</name><index pos:start="695:77" pos:end="695:79">[<expr pos:start="695:78" pos:end="695:78"><name pos:start="695:78" pos:end="695:78">i</name></expr>]</index></name></expr></argument>, <argument pos:start="695:82" pos:end="695:82"><expr pos:start="695:82" pos:end="695:82"><name pos:start="695:82" pos:end="695:82">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="697:25" pos:end="699:56">else<block type="pseudo" pos:start="699:29" pos:end="699:56"><block_content pos:start="699:29" pos:end="699:56">

                            <expr_stmt pos:start="699:29" pos:end="699:56"><expr pos:start="699:29" pos:end="699:55"><name pos:start="699:29" pos:end="699:50"><name pos:start="699:29" pos:end="699:29">s</name><operator pos:start="699:30" pos:end="699:31">-&gt;</operator><name pos:start="699:32" pos:end="699:47">block_last_index</name><index pos:start="699:48" pos:end="699:50">[<expr pos:start="699:49" pos:end="699:49"><name pos:start="699:49" pos:end="699:49">i</name></expr>]</index></name> <operator pos:start="699:52" pos:end="699:52">=</operator> <operator pos:start="699:54" pos:end="699:54">-</operator><literal type="number" pos:start="699:55" pos:end="699:55">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="701:25" pos:end="701:35"><expr pos:start="701:25" pos:end="701:34"><name pos:start="701:25" pos:end="701:27">cbp</name> <operator pos:start="701:29" pos:end="701:30">+=</operator> <name pos:start="701:32" pos:end="701:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="705:19" pos:end="729:17">else <block pos:start="705:24" pos:end="729:17">{<block_content pos:start="707:21" pos:end="727:21">

                    <expr_stmt pos:start="707:21" pos:end="707:48"><expr pos:start="707:21" pos:end="707:47"><name pos:start="707:21" pos:end="707:23">cbp</name> <operator pos:start="707:25" pos:end="707:27">&lt;&lt;=</operator> <literal type="number" pos:start="707:29" pos:end="707:32">12</literal> <operator pos:start="707:32" pos:end="707:32">-</operator> <name pos:start="707:34" pos:end="707:47">mb_block_count</name></expr>;</expr_stmt>



                    <for pos:start="711:21" pos:end="727:21">for <control pos:start="711:25" pos:end="711:56">(<init pos:start="711:26" pos:end="711:31"><expr pos:start="711:26" pos:end="711:30"><name pos:start="711:26" pos:end="711:26">i</name> <operator pos:start="711:28" pos:end="711:28">=</operator> <literal type="number" pos:start="711:30" pos:end="711:30">0</literal></expr>;</init> <condition pos:start="711:33" pos:end="711:51"><expr pos:start="711:33" pos:end="711:50"><name pos:start="711:33" pos:end="711:33">i</name> <operator pos:start="711:35" pos:end="711:35">&lt;</operator> <name pos:start="711:37" pos:end="711:50">mb_block_count</name></expr>;</condition> <incr pos:start="711:53" pos:end="711:55"><expr pos:start="711:53" pos:end="711:55"><name pos:start="711:53" pos:end="711:53">i</name><operator pos:start="711:54" pos:end="711:55">++</operator></expr></incr>)</control> <block pos:start="711:58" pos:end="727:21">{<block_content pos:start="713:25" pos:end="725:35">

                        <if_stmt pos:start="713:25" pos:end="723:25"><if pos:start="713:25" pos:end="719:25">if <condition pos:start="713:28" pos:end="713:44">(<expr pos:start="713:29" pos:end="713:43"><name pos:start="713:29" pos:end="713:31">cbp</name> <operator pos:start="713:33" pos:end="713:33">&amp;</operator> <operator pos:start="713:35" pos:end="713:35">(</operator><literal type="number" pos:start="713:36" pos:end="713:36">1</literal> <operator pos:start="713:38" pos:end="713:39">&lt;&lt;</operator> <literal type="number" pos:start="713:41" pos:end="713:42">11</literal><operator pos:start="713:43" pos:end="713:43">)</operator></expr>)</condition> <block pos:start="713:46" pos:end="719:25">{<block_content pos:start="715:29" pos:end="717:43">

                            <if_stmt pos:start="715:29" pos:end="717:43"><if pos:start="715:29" pos:end="717:43">if <condition pos:start="715:32" pos:end="715:95">(<expr pos:start="715:33" pos:end="715:94"><operator pos:start="715:33" pos:end="715:33">(</operator><name pos:start="715:34" pos:end="715:36">ret</name> <operator pos:start="715:38" pos:end="715:38">=</operator> <call pos:start="715:40" pos:end="715:89"><name pos:start="715:40" pos:end="715:67">mpeg2_decode_block_non_intra</name><argument_list pos:start="715:68" pos:end="715:89">(<argument pos:start="715:69" pos:end="715:69"><expr pos:start="715:69" pos:end="715:69"><name pos:start="715:69" pos:end="715:69">s</name></expr></argument>, <argument pos:start="715:72" pos:end="715:85"><expr pos:start="715:72" pos:end="715:85"><operator pos:start="715:72" pos:end="715:72">*</operator><name pos:start="715:73" pos:end="715:85"><name pos:start="715:73" pos:end="715:73">s</name><operator pos:start="715:74" pos:end="715:75">-&gt;</operator><name pos:start="715:76" pos:end="715:82">pblocks</name><index pos:start="715:83" pos:end="715:85">[<expr pos:start="715:84" pos:end="715:84"><name pos:start="715:84" pos:end="715:84">i</name></expr>]</index></name></expr></argument>, <argument pos:start="715:88" pos:end="715:88"><expr pos:start="715:88" pos:end="715:88"><name pos:start="715:88" pos:end="715:88">i</name></expr></argument>)</argument_list></call><operator pos:start="715:90" pos:end="715:90">)</operator> <operator pos:start="715:92" pos:end="715:92">&lt;</operator> <literal type="number" pos:start="715:94" pos:end="715:94">0</literal></expr>)</condition><block type="pseudo" pos:start="717:33" pos:end="717:43"><block_content pos:start="717:33" pos:end="717:43">

                                <return pos:start="717:33" pos:end="717:43">return <expr pos:start="717:40" pos:end="717:42"><name pos:start="717:40" pos:end="717:42">ret</name></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="719:27" pos:end="723:25">else <block pos:start="719:32" pos:end="723:25">{<block_content pos:start="721:29" pos:end="721:56">

                            <expr_stmt pos:start="721:29" pos:end="721:56"><expr pos:start="721:29" pos:end="721:55"><name pos:start="721:29" pos:end="721:50"><name pos:start="721:29" pos:end="721:29">s</name><operator pos:start="721:30" pos:end="721:31">-&gt;</operator><name pos:start="721:32" pos:end="721:47">block_last_index</name><index pos:start="721:48" pos:end="721:50">[<expr pos:start="721:49" pos:end="721:49"><name pos:start="721:49" pos:end="721:49">i</name></expr>]</index></name> <operator pos:start="721:52" pos:end="721:52">=</operator> <operator pos:start="721:54" pos:end="721:54">-</operator><literal type="number" pos:start="721:55" pos:end="721:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="725:25" pos:end="725:35"><expr pos:start="725:25" pos:end="725:34"><name pos:start="725:25" pos:end="725:27">cbp</name> <operator pos:start="725:29" pos:end="725:30">+=</operator> <name pos:start="725:32" pos:end="725:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="731:15" pos:end="771:13">else <block pos:start="731:20" pos:end="771:13">{<block_content pos:start="733:17" pos:end="769:17">

                <if_stmt pos:start="733:17" pos:end="769:17"><if pos:start="733:17" pos:end="749:17">if <condition pos:start="733:20" pos:end="733:59">(<expr pos:start="733:21" pos:end="733:58"><name pos:start="733:21" pos:end="733:36"><name pos:start="733:21" pos:end="733:21">s</name><operator pos:start="733:22" pos:end="733:23">-&gt;</operator><name pos:start="733:24" pos:end="733:28">avctx</name><operator pos:start="733:29" pos:end="733:30">-&gt;</operator><name pos:start="733:31" pos:end="733:36">flags2</name></name> <operator pos:start="733:38" pos:end="733:38">&amp;</operator> <name pos:start="733:40" pos:end="733:58">AV_CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="733:61" pos:end="749:17">{<block_content pos:start="735:21" pos:end="747:21">

                    <for pos:start="735:21" pos:end="747:21">for <control pos:start="735:25" pos:end="735:43">(<init pos:start="735:26" pos:end="735:31"><expr pos:start="735:26" pos:end="735:30"><name pos:start="735:26" pos:end="735:26">i</name> <operator pos:start="735:28" pos:end="735:28">=</operator> <literal type="number" pos:start="735:30" pos:end="735:30">0</literal></expr>;</init> <condition pos:start="735:33" pos:end="735:38"><expr pos:start="735:33" pos:end="735:37"><name pos:start="735:33" pos:end="735:33">i</name> <operator pos:start="735:35" pos:end="735:35">&lt;</operator> <literal type="number" pos:start="735:37" pos:end="735:37">6</literal></expr>;</condition> <incr pos:start="735:40" pos:end="735:42"><expr pos:start="735:40" pos:end="735:42"><name pos:start="735:40" pos:end="735:40">i</name><operator pos:start="735:41" pos:end="735:42">++</operator></expr></incr>)</control> <block pos:start="735:45" pos:end="747:21">{<block_content pos:start="737:25" pos:end="745:35">

                        <if_stmt pos:start="737:25" pos:end="743:56"><if pos:start="737:25" pos:end="739:80">if <condition pos:start="737:28" pos:end="737:37">(<expr pos:start="737:29" pos:end="737:36"><name pos:start="737:29" pos:end="737:31">cbp</name> <operator pos:start="737:33" pos:end="737:33">&amp;</operator> <literal type="number" pos:start="737:35" pos:end="737:36">32</literal></expr>)</condition><block type="pseudo" pos:start="739:29" pos:end="739:80"><block_content pos:start="739:29" pos:end="739:80">

                            <expr_stmt pos:start="739:29" pos:end="739:80"><expr pos:start="739:29" pos:end="739:79"><call pos:start="739:29" pos:end="739:79"><name pos:start="739:29" pos:end="739:57">mpeg1_fast_decode_block_inter</name><argument_list pos:start="739:58" pos:end="739:79">(<argument pos:start="739:59" pos:end="739:59"><expr pos:start="739:59" pos:end="739:59"><name pos:start="739:59" pos:end="739:59">s</name></expr></argument>, <argument pos:start="739:62" pos:end="739:75"><expr pos:start="739:62" pos:end="739:75"><operator pos:start="739:62" pos:end="739:62">*</operator><name pos:start="739:63" pos:end="739:75"><name pos:start="739:63" pos:end="739:63">s</name><operator pos:start="739:64" pos:end="739:65">-&gt;</operator><name pos:start="739:66" pos:end="739:72">pblocks</name><index pos:start="739:73" pos:end="739:75">[<expr pos:start="739:74" pos:end="739:74"><name pos:start="739:74" pos:end="739:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="739:78" pos:end="739:78"><expr pos:start="739:78" pos:end="739:78"><name pos:start="739:78" pos:end="739:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="741:25" pos:end="743:56">else<block type="pseudo" pos:start="743:29" pos:end="743:56"><block_content pos:start="743:29" pos:end="743:56">

                            <expr_stmt pos:start="743:29" pos:end="743:56"><expr pos:start="743:29" pos:end="743:55"><name pos:start="743:29" pos:end="743:50"><name pos:start="743:29" pos:end="743:29">s</name><operator pos:start="743:30" pos:end="743:31">-&gt;</operator><name pos:start="743:32" pos:end="743:47">block_last_index</name><index pos:start="743:48" pos:end="743:50">[<expr pos:start="743:49" pos:end="743:49"><name pos:start="743:49" pos:end="743:49">i</name></expr>]</index></name> <operator pos:start="743:52" pos:end="743:52">=</operator> <operator pos:start="743:54" pos:end="743:54">-</operator><literal type="number" pos:start="743:55" pos:end="743:55">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="745:25" pos:end="745:35"><expr pos:start="745:25" pos:end="745:34"><name pos:start="745:25" pos:end="745:27">cbp</name> <operator pos:start="745:29" pos:end="745:30">+=</operator> <name pos:start="745:32" pos:end="745:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="749:19" pos:end="769:17">else <block pos:start="749:24" pos:end="769:17">{<block_content pos:start="751:21" pos:end="767:21">

                    <for pos:start="751:21" pos:end="767:21">for <control pos:start="751:25" pos:end="751:43">(<init pos:start="751:26" pos:end="751:31"><expr pos:start="751:26" pos:end="751:30"><name pos:start="751:26" pos:end="751:26">i</name> <operator pos:start="751:28" pos:end="751:28">=</operator> <literal type="number" pos:start="751:30" pos:end="751:30">0</literal></expr>;</init> <condition pos:start="751:33" pos:end="751:38"><expr pos:start="751:33" pos:end="751:37"><name pos:start="751:33" pos:end="751:33">i</name> <operator pos:start="751:35" pos:end="751:35">&lt;</operator> <literal type="number" pos:start="751:37" pos:end="751:37">6</literal></expr>;</condition> <incr pos:start="751:40" pos:end="751:42"><expr pos:start="751:40" pos:end="751:42"><name pos:start="751:40" pos:end="751:40">i</name><operator pos:start="751:41" pos:end="751:42">++</operator></expr></incr>)</control> <block pos:start="751:45" pos:end="767:21">{<block_content pos:start="753:25" pos:end="765:35">

                        <if_stmt pos:start="753:25" pos:end="763:25"><if pos:start="753:25" pos:end="759:25">if <condition pos:start="753:28" pos:end="753:37">(<expr pos:start="753:29" pos:end="753:36"><name pos:start="753:29" pos:end="753:31">cbp</name> <operator pos:start="753:33" pos:end="753:33">&amp;</operator> <literal type="number" pos:start="753:35" pos:end="753:36">32</literal></expr>)</condition> <block pos:start="753:39" pos:end="759:25">{<block_content pos:start="755:29" pos:end="757:43">

                            <if_stmt pos:start="755:29" pos:end="757:43"><if pos:start="755:29" pos:end="757:43">if <condition pos:start="755:32" pos:end="755:91">(<expr pos:start="755:33" pos:end="755:90"><operator pos:start="755:33" pos:end="755:33">(</operator><name pos:start="755:34" pos:end="755:36">ret</name> <operator pos:start="755:38" pos:end="755:38">=</operator> <call pos:start="755:40" pos:end="755:85"><name pos:start="755:40" pos:end="755:63">mpeg1_decode_block_inter</name><argument_list pos:start="755:64" pos:end="755:85">(<argument pos:start="755:65" pos:end="755:65"><expr pos:start="755:65" pos:end="755:65"><name pos:start="755:65" pos:end="755:65">s</name></expr></argument>, <argument pos:start="755:68" pos:end="755:81"><expr pos:start="755:68" pos:end="755:81"><operator pos:start="755:68" pos:end="755:68">*</operator><name pos:start="755:69" pos:end="755:81"><name pos:start="755:69" pos:end="755:69">s</name><operator pos:start="755:70" pos:end="755:71">-&gt;</operator><name pos:start="755:72" pos:end="755:78">pblocks</name><index pos:start="755:79" pos:end="755:81">[<expr pos:start="755:80" pos:end="755:80"><name pos:start="755:80" pos:end="755:80">i</name></expr>]</index></name></expr></argument>, <argument pos:start="755:84" pos:end="755:84"><expr pos:start="755:84" pos:end="755:84"><name pos:start="755:84" pos:end="755:84">i</name></expr></argument>)</argument_list></call><operator pos:start="755:86" pos:end="755:86">)</operator> <operator pos:start="755:88" pos:end="755:88">&lt;</operator> <literal type="number" pos:start="755:90" pos:end="755:90">0</literal></expr>)</condition><block type="pseudo" pos:start="757:33" pos:end="757:43"><block_content pos:start="757:33" pos:end="757:43">

                                <return pos:start="757:33" pos:end="757:43">return <expr pos:start="757:40" pos:end="757:42"><name pos:start="757:40" pos:end="757:42">ret</name></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="759:27" pos:end="763:25">else <block pos:start="759:32" pos:end="763:25">{<block_content pos:start="761:29" pos:end="761:56">

                            <expr_stmt pos:start="761:29" pos:end="761:56"><expr pos:start="761:29" pos:end="761:55"><name pos:start="761:29" pos:end="761:50"><name pos:start="761:29" pos:end="761:29">s</name><operator pos:start="761:30" pos:end="761:31">-&gt;</operator><name pos:start="761:32" pos:end="761:47">block_last_index</name><index pos:start="761:48" pos:end="761:50">[<expr pos:start="761:49" pos:end="761:49"><name pos:start="761:49" pos:end="761:49">i</name></expr>]</index></name> <operator pos:start="761:52" pos:end="761:52">=</operator> <operator pos:start="761:54" pos:end="761:54">-</operator><literal type="number" pos:start="761:55" pos:end="761:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="765:25" pos:end="765:35"><expr pos:start="765:25" pos:end="765:34"><name pos:start="765:25" pos:end="765:27">cbp</name> <operator pos:start="765:29" pos:end="765:30">+=</operator> <name pos:start="765:32" pos:end="765:34">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="773:11" pos:end="779:9">else <block pos:start="773:16" pos:end="779:9">{<block_content pos:start="775:13" pos:end="777:44">

            <for pos:start="775:13" pos:end="777:44">for <control pos:start="775:17" pos:end="775:36">(<init pos:start="775:18" pos:end="775:23"><expr pos:start="775:18" pos:end="775:22"><name pos:start="775:18" pos:end="775:18">i</name> <operator pos:start="775:20" pos:end="775:20">=</operator> <literal type="number" pos:start="775:22" pos:end="775:22">0</literal></expr>;</init> <condition pos:start="775:25" pos:end="775:31"><expr pos:start="775:25" pos:end="775:30"><name pos:start="775:25" pos:end="775:25">i</name> <operator pos:start="775:27" pos:end="775:27">&lt;</operator> <literal type="number" pos:start="775:29" pos:end="775:30">12</literal></expr>;</condition> <incr pos:start="775:33" pos:end="775:35"><expr pos:start="775:33" pos:end="775:35"><name pos:start="775:33" pos:end="775:33">i</name><operator pos:start="775:34" pos:end="775:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="777:17" pos:end="777:44"><block_content pos:start="777:17" pos:end="777:44">

                <expr_stmt pos:start="777:17" pos:end="777:44"><expr pos:start="777:17" pos:end="777:43"><name pos:start="777:17" pos:end="777:38"><name pos:start="777:17" pos:end="777:17">s</name><operator pos:start="777:18" pos:end="777:19">-&gt;</operator><name pos:start="777:20" pos:end="777:35">block_last_index</name><index pos:start="777:36" pos:end="777:38">[<expr pos:start="777:37" pos:end="777:37"><name pos:start="777:37" pos:end="777:37">i</name></expr>]</index></name> <operator pos:start="777:40" pos:end="777:40">=</operator> <operator pos:start="777:42" pos:end="777:42">-</operator><literal type="number" pos:start="777:43" pos:end="777:43">1</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="785:5" pos:end="785:75"><expr pos:start="785:5" pos:end="785:74"><name pos:start="785:5" pos:end="785:64"><name pos:start="785:5" pos:end="785:5">s</name><operator pos:start="785:6" pos:end="785:7">-&gt;</operator><name pos:start="785:8" pos:end="785:22">current_picture</name><operator pos:start="785:23" pos:end="785:23">.</operator><name pos:start="785:24" pos:end="785:30">mb_type</name><index pos:start="785:31" pos:end="785:64">[<expr pos:start="785:32" pos:end="785:63"><name pos:start="785:32" pos:end="785:38"><name pos:start="785:32" pos:end="785:32">s</name><operator pos:start="785:33" pos:end="785:34">-&gt;</operator><name pos:start="785:35" pos:end="785:38">mb_x</name></name> <operator pos:start="785:40" pos:end="785:40">+</operator> <name pos:start="785:42" pos:end="785:48"><name pos:start="785:42" pos:end="785:42">s</name><operator pos:start="785:43" pos:end="785:44">-&gt;</operator><name pos:start="785:45" pos:end="785:48">mb_y</name></name> <operator pos:start="785:50" pos:end="785:50">*</operator> <name pos:start="785:52" pos:end="785:63"><name pos:start="785:52" pos:end="785:52">s</name><operator pos:start="785:53" pos:end="785:54">-&gt;</operator><name pos:start="785:55" pos:end="785:63">mb_stride</name></name></expr>]</index></name> <operator pos:start="785:66" pos:end="785:66">=</operator> <name pos:start="785:68" pos:end="785:74">mb_type</name></expr>;</expr_stmt>



    <return pos:start="789:5" pos:end="789:13">return <expr pos:start="789:12" pos:end="789:12"><literal type="number" pos:start="789:12" pos:end="789:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
