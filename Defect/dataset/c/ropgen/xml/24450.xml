<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24450.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:44"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:44">(<argument pos:start="1:32" pos:end="1:46">TriCoreCPU *cpu</argument>, <argument pos:start="1:49" pos:end="1:75">struct TranslationBlock *tb</argument>,

                              <argument pos:start="3:31" pos:end="3:43">int search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="128:0">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">CPUTriCoreState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">env</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:36"><name pos:start="9:29" pos:end="9:31">cpu</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:36">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">DisasContext</name></type> <name pos:start="11:18" pos:end="11:20">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint16_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:25">gen_opc_end</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">search_pc</name></expr>)</condition> <block pos:start="21:20" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><call pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:16">qemu_log</name><argument_list pos:start="23:17" pos:end="23:45">(<argument pos:start="23:18" pos:end="23:33"><expr pos:start="23:18" pos:end="23:33"><literal type="string" pos:start="23:18" pos:end="23:33">"search pc %d\n"</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:44"><expr pos:start="23:36" pos:end="23:44"><name pos:start="23:36" pos:end="23:44">search_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">num_insns</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:12">pc_start</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:17">tb</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:15">gen_opc_end</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:37"><name pos:start="33:19" pos:end="33:25">tcg_ctx</name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:37">gen_opc_buf</name></name> <operator pos:start="33:39" pos:end="33:39">+</operator> <name pos:start="33:41" pos:end="33:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:10">pc</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:16">saved_pc</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:10">tb</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:52"><expr pos:start="41:5" pos:end="41:51"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:8">.</operator><name pos:start="41:9" pos:end="41:26">singlestep_enabled</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:51"><name pos:start="41:30" pos:end="41:31">cs</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:51">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:14">bstate</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:24">BS_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:15">mem_idx</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:36"><name pos:start="45:19" pos:end="45:31">cpu_mmu_index</name><argument_list pos:start="45:32" pos:end="45:36">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><call pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:24">tcg_clear_temp_count</name><argument_list pos:start="49:25" pos:end="49:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><call pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:16">gen_tb_start</name><argument_list pos:start="51:17" pos:end="51:18">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="53:5" pos:end="87:5">while <condition pos:start="53:11" pos:end="53:33">(<expr pos:start="53:12" pos:end="53:32"><name pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:14">ctx</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:21">bstate</name></name> <operator pos:start="53:23" pos:end="53:24">==</operator> <name pos:start="53:26" pos:end="53:32">BS_NONE</name></expr>)</condition> <block pos:start="53:35" pos:end="87:5">{<block_content pos:start="55:9" pos:end="85:29">

        <expr_stmt pos:start="55:9" pos:end="55:47"><expr pos:start="55:9" pos:end="55:46"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:18">opcode</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:46"><name pos:start="55:22" pos:end="55:33">cpu_ldl_code</name><argument_list pos:start="55:34" pos:end="55:46">(<argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">env</name></expr></argument>, <argument pos:start="55:40" pos:end="55:45"><expr pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:42">ctx</name><operator pos:start="55:43" pos:end="55:43">.</operator><name pos:start="55:44" pos:end="55:45">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:18">decode_opc</name><argument_list pos:start="57:19" pos:end="57:32">(<argument pos:start="57:20" pos:end="57:22"><expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">env</name></expr></argument>, <argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:28">ctx</name></expr></argument>, <argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:17">num_insns</name><operator pos:start="61:18" pos:end="61:19">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="73:9">if <condition pos:start="65:12" pos:end="65:47">(<expr pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:19">tcg_ctx</name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:31">gen_opc_ptr</name></name> <operator pos:start="65:33" pos:end="65:34">&gt;=</operator> <name pos:start="65:36" pos:end="65:46">gen_opc_end</name></expr>)</condition> <block pos:start="65:49" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:18">

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:23">gen_save_pc</name><argument_list pos:start="67:24" pos:end="67:36">(<argument pos:start="67:25" pos:end="67:35"><expr pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:27">ctx</name><operator pos:start="67:28" pos:end="67:28">.</operator><name pos:start="67:29" pos:end="67:35">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:31"><expr pos:start="69:13" pos:end="69:30"><call pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:27">tcg_gen_exit_tb</name><argument_list pos:start="69:28" pos:end="69:30">(<argument pos:start="69:29" pos:end="69:29"><expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:23">(<expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:22">singlestep</name></expr>)</condition> <block pos:start="75:25" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:18">

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><call pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:23">gen_save_pc</name><argument_list pos:start="77:24" pos:end="77:36">(<argument pos:start="77:25" pos:end="77:35"><expr pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:27">ctx</name><operator pos:start="77:28" pos:end="77:28">.</operator><name pos:start="77:29" pos:end="77:35">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:31"><expr pos:start="79:13" pos:end="79:30"><call pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:27">tcg_gen_exit_tb</name><argument_list pos:start="79:28" pos:end="79:30">(<argument pos:start="79:29" pos:end="79:29"><expr pos:start="79:29" pos:end="79:29"><literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:12">.</operator><name pos:start="85:13" pos:end="85:14">pc</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:28"><name pos:start="85:18" pos:end="85:20">ctx</name><operator pos:start="85:21" pos:end="85:21">.</operator><name pos:start="85:22" pos:end="85:28">next_pc</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="91:5" pos:end="91:30"><expr pos:start="91:5" pos:end="91:29"><call pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:14">gen_tb_end</name><argument_list pos:start="91:15" pos:end="91:29">(<argument pos:start="91:16" pos:end="91:17"><expr pos:start="91:16" pos:end="91:17"><name pos:start="91:16" pos:end="91:17">tb</name></expr></argument>, <argument pos:start="91:20" pos:end="91:28"><expr pos:start="91:20" pos:end="91:28"><name pos:start="91:20" pos:end="91:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:40"><expr pos:start="93:5" pos:end="93:39"><operator pos:start="93:5" pos:end="93:5">*</operator><name pos:start="93:6" pos:end="93:24"><name pos:start="93:6" pos:end="93:12">tcg_ctx</name><operator pos:start="93:13" pos:end="93:13">.</operator><name pos:start="93:14" pos:end="93:24">gen_opc_ptr</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="105:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:18">(<expr pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:17">search_pc</name></expr>)</condition> <block pos:start="95:20" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:46">

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><call pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:14">printf</name><argument_list pos:start="97:15" pos:end="97:45">(<argument pos:start="97:16" pos:end="97:44"><expr pos:start="97:16" pos:end="97:44"><literal type="string" pos:start="97:16" pos:end="97:44">"done_generating search pc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="105:5">else <block pos:start="99:12" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:31">

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:10">tb</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:16">size</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:25"><name pos:start="101:20" pos:end="101:22">ctx</name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:25">pc</name></name> <operator pos:start="101:27" pos:end="101:27">-</operator> <name pos:start="101:29" pos:end="101:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:31"><expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:10">tb</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:18">icount</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="107:5" pos:end="116:0"><if pos:start="107:5" pos:end="116:0">if <condition pos:start="107:8" pos:end="107:31">(<expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:28">tcg_check_temp_count</name><argument_list pos:start="107:29" pos:end="107:30">()</argument_list></call></expr>)</condition> <block pos:start="107:33" pos:end="116:0">{<block_content pos:start="109:9" pos:end="109:42">

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><call pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:14">printf</name><argument_list pos:start="109:15" pos:end="109:41">(<argument pos:start="109:16" pos:end="109:31"><expr pos:start="109:16" pos:end="109:31"><literal type="string" pos:start="109:16" pos:end="109:31">"LEAK at %08x\n"</literal></expr></argument>, <argument pos:start="109:34" pos:end="109:40"><expr pos:start="109:34" pos:end="109:40"><name pos:start="109:34" pos:end="109:40"><name pos:start="109:34" pos:end="109:36">env</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:40">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="115:1" pos:end="115:18">#<cpp:directive pos:start="115:2" pos:end="115:6">ifdef</cpp:directive> <name pos:start="115:8" pos:end="115:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="117:5" pos:end="128:0"><if pos:start="117:5" pos:end="128:0">if <condition pos:start="117:8" pos:end="117:46">(<expr pos:start="117:9" pos:end="117:45"><call pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:26">qemu_loglevel_mask</name><argument_list pos:start="117:27" pos:end="117:45">(<argument pos:start="117:28" pos:end="117:44"><expr pos:start="117:28" pos:end="117:44"><name pos:start="117:28" pos:end="117:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:48" pos:end="128:0">{<block_content pos:start="119:9" pos:end="123:23">

        <expr_stmt pos:start="119:9" pos:end="119:54"><expr pos:start="119:9" pos:end="119:53"><call pos:start="119:9" pos:end="119:53"><name pos:start="119:9" pos:end="119:16">qemu_log</name><argument_list pos:start="119:17" pos:end="119:53">(<argument pos:start="119:18" pos:end="119:27"><expr pos:start="119:18" pos:end="119:27"><literal type="string" pos:start="119:18" pos:end="119:27">"IN: %s\n"</literal></expr></argument>, <argument pos:start="119:30" pos:end="119:52"><expr pos:start="119:30" pos:end="119:52"><call pos:start="119:30" pos:end="119:52"><name pos:start="119:30" pos:end="119:42">lookup_symbol</name><argument_list pos:start="119:43" pos:end="119:52">(<argument pos:start="119:44" pos:end="119:51"><expr pos:start="119:44" pos:end="119:51"><name pos:start="119:44" pos:end="119:51">pc_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:62"><expr pos:start="121:9" pos:end="121:61"><call pos:start="121:9" pos:end="121:61"><name pos:start="121:9" pos:end="121:24">log_target_disas</name><argument_list pos:start="121:25" pos:end="121:61">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">env</name></expr></argument>, <argument pos:start="121:31" pos:end="121:38"><expr pos:start="121:31" pos:end="121:38"><name pos:start="121:31" pos:end="121:38">pc_start</name></expr></argument>, <argument pos:start="121:41" pos:end="121:57"><expr pos:start="121:41" pos:end="121:57"><name pos:start="121:41" pos:end="121:46"><name pos:start="121:41" pos:end="121:43">ctx</name><operator pos:start="121:44" pos:end="121:44">.</operator><name pos:start="121:45" pos:end="121:46">pc</name></name> <operator pos:start="121:48" pos:end="121:48">-</operator> <name pos:start="121:50" pos:end="121:57">pc_start</name></expr></argument>, <argument pos:start="121:60" pos:end="121:60"><expr pos:start="121:60" pos:end="121:60"><literal type="number" pos:start="121:60" pos:end="121:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><call pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:16">qemu_log</name><argument_list pos:start="123:17" pos:end="123:22">(<argument pos:start="123:18" pos:end="123:21"><expr pos:start="123:18" pos:end="123:21"><literal type="string" pos:start="123:18" pos:end="123:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>

</block_content>}</block>
</unit>
