<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24079.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:55"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">avui_encode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:55">{<block_content pos:start="5:5" pos:end="31:55">

    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:9">avctx</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:22">coded_frame</name></name> <operator pos:start="5:24" pos:end="5:24">=</operator> <call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:39">av_frame_alloc</name><argument_list pos:start="5:40" pos:end="5:41">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:76">(<expr pos:start="9:9" pos:end="9:75"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:20">width</name></name> <operator pos:start="9:22" pos:end="9:23">!=</operator> <literal type="number" pos:start="9:25" pos:end="9:27">720</literal> <operator pos:start="9:29" pos:end="9:30">||</operator> <name pos:start="9:32" pos:end="9:44"><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:44">height</name></name> <operator pos:start="9:46" pos:end="9:47">!=</operator> <literal type="number" pos:start="9:49" pos:end="9:51">486</literal> <operator pos:start="9:53" pos:end="9:54">&amp;&amp;</operator> <name pos:start="9:56" pos:end="9:68"><name pos:start="9:56" pos:end="9:60">avctx</name><operator pos:start="9:61" pos:end="9:62">-&gt;</operator><name pos:start="9:63" pos:end="9:68">height</name></name> <operator pos:start="9:70" pos:end="9:71">!=</operator> <literal type="number" pos:start="9:73" pos:end="9:75">576</literal></expr>)</condition> <block pos:start="9:78" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:31">

        <expr_stmt pos:start="11:9" pos:end="11:81"><expr pos:start="11:9" pos:end="11:80"><call pos:start="11:9" pos:end="11:80"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:80">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:37" pos:end="11:79"><expr pos:start="11:37" pos:end="11:79"><literal type="string" pos:start="11:37" pos:end="11:79">"Only 720x486 and 720x576 are supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:14">avctx</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:27">coded_frame</name></name></expr>)</condition> <block pos:start="17:30" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:31">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><call pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:66">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:65"><expr pos:start="19:37" pos:end="19:65"><literal type="string" pos:start="19:37" pos:end="19:65">"Could not allocate frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:76">(<expr pos:start="25:9" pos:end="25:75"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:26"><name pos:start="25:11" pos:end="25:15">avctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:26">extradata</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <call pos:start="25:30" pos:end="25:74"><name pos:start="25:30" pos:end="25:39">av_mallocz</name><argument_list pos:start="25:40" pos:end="25:74">(<argument pos:start="25:41" pos:end="25:73"><expr pos:start="25:41" pos:end="25:73"><literal type="number" pos:start="25:41" pos:end="25:44">24</literal> <operator pos:start="25:44" pos:end="25:44">+</operator> <name pos:start="25:46" pos:end="25:73">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="25:75" pos:end="25:75">)</operator></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:9">avctx</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:25">extradata_size</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:30">24</literal></expr>;</expr_stmt>

    <macro pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:55">(<argument pos:start="31:12" pos:end="31:27">avctx-&gt;extradata</argument>, <argument pos:start="31:30" pos:end="31:55"><literal type="string" pos:start="31:30" pos:end="31:42">"\0\0\0\x18""</literal>APRGAPRG0001<literal type="string" pos:start="31:55" pos:end="31:55">"</literal></argument></argument_list></macro></block_content></block></function>, 16);

    if (avctx-&gt;field_order &gt; AV_FIELD_PROGRESSIVE) {

        avctx-&gt;extradata[19] = 2;

    } else {

        avctx-&gt;extradata[19] = 1;

    }





    return 0;

}
</unit>
