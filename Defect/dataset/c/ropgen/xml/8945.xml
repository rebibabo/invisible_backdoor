<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8945.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:35">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:29">CPUPPCState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:28">target_sigcontext</name></name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:32">sc</name> <init pos:start="5:34" pos:end="5:39">= <expr pos:start="5:36" pos:end="5:39"><name pos:start="5:36" pos:end="5:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_mcontext</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:30">sr</name> <init pos:start="7:32" pos:end="7:37">= <expr pos:start="7:34" pos:end="7:37"><name pos:start="7:34" pos:end="7:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:24">sr_addr</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></init></decl>, <decl pos:start="9:31" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:31" pos:end="9:37">sc_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:20">blocked</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">target_sigset_t</name></type> <name pos:start="13:21" pos:end="13:23">set</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:11">sc_addr</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:25"><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">gpr</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr>]</index></name> <operator pos:start="17:27" pos:end="17:27">+</operator> <name pos:start="17:29" pos:end="17:44">SIGNAL_FRAMESIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="26:0"><if pos:start="19:5" pos:end="26:0">if <condition pos:start="19:8" pos:end="19:55">(<expr pos:start="19:9" pos:end="19:54"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:54"><name pos:start="19:10" pos:end="19:25">lock_user_struct</name><argument_list pos:start="19:26" pos:end="19:54">(<argument pos:start="19:27" pos:end="19:37"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">VERIFY_READ</name></expr></argument>, <argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">sc</name></expr></argument>, <argument pos:start="19:44" pos:end="19:50"><expr pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:50">sc_addr</name></expr></argument>, <argument pos:start="19:53" pos:end="19:53"><expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="26:0"><block_content pos:start="21:9" pos:end="26:0">

        <goto pos:start="21:9" pos:end="26:0">goto <name pos:start="21:14" pos:end="21:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="25:1" pos:end="25:25">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:11">defined</name><argument_list pos:start="25:12" pos:end="25:25">(<argument pos:start="25:13" pos:end="25:24"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:7">set</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:11">sig</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:28"><name pos:start="27:18" pos:end="27:19">sc</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:28">oldmask</name></name> <operator pos:start="27:30" pos:end="27:30">+</operator> <operator pos:start="27:32" pos:end="27:32">(</operator><operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:37">long</name><operator pos:start="27:38" pos:end="27:38">)</operator><operator pos:start="27:39" pos:end="27:39">(</operator><name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:41">sc</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:50">_unused</name><index pos:start="27:51" pos:end="27:53">[<expr pos:start="27:52" pos:end="27:52"><literal type="number" pos:start="27:52" pos:end="27:52">3</literal></expr>]</index></name><operator pos:start="27:54" pos:end="27:54">)</operator> <operator pos:start="27:56" pos:end="27:57">&lt;&lt;</operator> <literal type="number" pos:start="27:59" pos:end="27:60">32</literal><operator pos:start="27:61" pos:end="27:61">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="31:5" pos:end="38:0"><if pos:start="31:5" pos:end="38:0">if<condition pos:start="31:7" pos:end="33:47">(<expr pos:start="31:8" pos:end="33:46"><call pos:start="31:8" pos:end="31:43"><name pos:start="31:8" pos:end="31:17">__get_user</name><argument_list pos:start="31:18" pos:end="31:43">(<argument pos:start="31:19" pos:end="31:28"><expr pos:start="31:19" pos:end="31:28"><name pos:start="31:19" pos:end="31:28"><name pos:start="31:19" pos:end="31:21">set</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:25">sig</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:33">sc</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oldmask</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:46">||</operator>

       <call pos:start="33:8" pos:end="33:46"><name pos:start="33:8" pos:end="33:17">__get_user</name><argument_list pos:start="33:18" pos:end="33:46">(<argument pos:start="33:19" pos:end="33:28"><expr pos:start="33:19" pos:end="33:28"><name pos:start="33:19" pos:end="33:28"><name pos:start="33:19" pos:end="33:21">set</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:25">sig</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:31" pos:end="33:45"><expr pos:start="33:31" pos:end="33:45"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:33">sc</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:42">_unused</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:8" pos:end="38:0"><block_content pos:start="35:8" pos:end="38:0">

       <goto pos:start="35:8" pos:end="38:0">goto <name pos:start="35:13" pos:end="35:19">sigsegv</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><call pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:34">target_to_host_sigset_internal</name><argument_list pos:start="39:35" pos:end="39:50">(<argument pos:start="39:36" pos:end="39:43"><expr pos:start="39:36" pos:end="39:43"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:43">blocked</name></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:49">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:15">sigprocmask</name><argument_list pos:start="41:16" pos:end="41:44">(<argument pos:start="41:17" pos:end="41:27"><expr pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:27">SIG_SETMASK</name></expr></argument>, <argument pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:37"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:37">blocked</name></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:21"><if pos:start="45:5" pos:end="47:21">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><call pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:18">__get_user</name><argument_list pos:start="45:19" pos:end="45:38">(<argument pos:start="45:20" pos:end="45:26"><expr pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:26">sr_addr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:37"><expr pos:start="45:29" pos:end="45:37"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:37"><name pos:start="45:30" pos:end="45:31">sc</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:37">regs</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:21"><block_content pos:start="47:9" pos:end="47:21">

        <goto pos:start="47:9" pos:end="47:21">goto <name pos:start="47:14" pos:end="47:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:21"><if pos:start="49:5" pos:end="51:21">if <condition pos:start="49:8" pos:end="49:55">(<expr pos:start="49:9" pos:end="49:54"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:54"><name pos:start="49:10" pos:end="49:25">lock_user_struct</name><argument_list pos:start="49:26" pos:end="49:54">(<argument pos:start="49:27" pos:end="49:37"><expr pos:start="49:27" pos:end="49:37"><name pos:start="49:27" pos:end="49:37">VERIFY_READ</name></expr></argument>, <argument pos:start="49:40" pos:end="49:41"><expr pos:start="49:40" pos:end="49:41"><name pos:start="49:40" pos:end="49:41">sr</name></expr></argument>, <argument pos:start="49:44" pos:end="49:50"><expr pos:start="49:44" pos:end="49:50"><name pos:start="49:44" pos:end="49:50">sr_addr</name></expr></argument>, <argument pos:start="49:53" pos:end="49:53"><expr pos:start="49:53" pos:end="49:53"><literal type="number" pos:start="49:53" pos:end="49:53">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:21"><block_content pos:start="51:9" pos:end="51:21">

        <goto pos:start="51:9" pos:end="51:21">goto <name pos:start="51:14" pos:end="51:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:21"><if pos:start="53:5" pos:end="55:21">if <condition pos:start="53:8" pos:end="53:38">(<expr pos:start="53:9" pos:end="53:37"><call pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:25">restore_user_regs</name><argument_list pos:start="53:26" pos:end="53:37">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">env</name></expr></argument>, <argument pos:start="53:32" pos:end="53:33"><expr pos:start="53:32" pos:end="53:33"><name pos:start="53:32" pos:end="53:33">sr</name></expr></argument>, <argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:21"><block_content pos:start="55:9" pos:end="55:21">

        <goto pos:start="55:9" pos:end="55:21">goto <name pos:start="55:14" pos:end="55:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><call pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:22">unlock_user_struct</name><argument_list pos:start="59:23" pos:end="59:38">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><name pos:start="59:24" pos:end="59:25">sr</name></expr></argument>, <argument pos:start="59:28" pos:end="59:34"><expr pos:start="59:28" pos:end="59:34"><name pos:start="59:28" pos:end="59:34">sr_addr</name></expr></argument>, <argument pos:start="59:37" pos:end="59:37"><expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:22">unlock_user_struct</name><argument_list pos:start="61:23" pos:end="61:38">(<argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><name pos:start="61:24" pos:end="61:25">sc</name></expr></argument>, <argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:34">sc_addr</name></expr></argument>, <argument pos:start="61:37" pos:end="61:37"><expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:35">return <expr pos:start="63:12" pos:end="63:34"><operator pos:start="63:12" pos:end="63:12">-</operator><name pos:start="63:13" pos:end="63:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="67:1" pos:end="67:8"><name pos:start="67:1" pos:end="67:7">sigsegv</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><call pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:22">unlock_user_struct</name><argument_list pos:start="69:23" pos:end="69:38">(<argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">sr</name></expr></argument>, <argument pos:start="69:28" pos:end="69:34"><expr pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:34">sr_addr</name></expr></argument>, <argument pos:start="69:37" pos:end="69:37"><expr pos:start="69:37" pos:end="69:37"><literal type="number" pos:start="69:37" pos:end="69:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:22">unlock_user_struct</name><argument_list pos:start="71:23" pos:end="71:38">(<argument pos:start="71:24" pos:end="71:25"><expr pos:start="71:24" pos:end="71:25"><name pos:start="71:24" pos:end="71:25">sc</name></expr></argument>, <argument pos:start="71:28" pos:end="71:34"><expr pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:34">sc_addr</name></expr></argument>, <argument pos:start="71:37" pos:end="71:37"><expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><call pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:12">qemu_log</name><argument_list pos:start="73:13" pos:end="73:47">(<argument pos:start="73:14" pos:end="73:46"><expr pos:start="73:14" pos:end="73:46"><literal type="string" pos:start="73:14" pos:end="73:46">"segfaulting from do_sigreturn\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:13">force_sig</name><argument_list pos:start="75:14" pos:end="75:29">(<argument pos:start="75:15" pos:end="75:28"><expr pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
