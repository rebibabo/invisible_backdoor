<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25778.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">data_size</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="263:1">{<block_content pos:start="7:5" pos:end="261:18">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name>  <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">current</name></decl>, <decl pos:start="13:23" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:31">previous</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">result</name></decl>, <decl pos:start="15:17" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:17">i</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:20">x</name></decl>, <decl pos:start="15:23" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:23">y</name></decl>, <decl pos:start="15:26" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:26" pos:end="15:30">width</name></decl>, <decl pos:start="15:33" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:38">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">svq1_pmv</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">pmv</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:31">/* initialize bit buffer */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:17">init_get_bits</name><argument_list pos:start="25:18" pos:end="25:44">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:24">gb</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">buf</name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:39">buf_size</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <literal type="number" pos:start="25:43" pos:end="25:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* decode frame header */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">f_code</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:24">get_bits</name><argument_list pos:start="31:25" pos:end="31:36">(<argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:31">gb</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><literal type="number" pos:start="31:34" pos:end="31:35">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:51">(<expr pos:start="35:9" pos:end="35:50"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">f_code</name></name> <operator pos:start="35:20" pos:end="35:20">&amp;</operator> <operator pos:start="35:22" pos:end="35:22">~</operator><literal type="number" pos:start="35:23" pos:end="35:26">0x70</literal><operator pos:start="35:27" pos:end="35:27">)</operator> <operator pos:start="35:29" pos:end="35:30">||</operator> <operator pos:start="35:32" pos:end="35:32">!</operator><operator pos:start="35:33" pos:end="35:33">(</operator><name pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:42">f_code</name></name> <operator pos:start="35:44" pos:end="35:44">&amp;</operator> <literal type="number" pos:start="35:46" pos:end="35:49">0x60</literal><operator pos:start="35:50" pos:end="35:50">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:39">/* swap some header bytes (why?) */</comment>

    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">f_code</name></name> <operator pos:start="43:19" pos:end="43:20">!=</operator> <literal type="number" pos:start="43:22" pos:end="43:25">0x20</literal></expr>)</condition> <block pos:start="43:28" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:68">

        <decl_stmt pos:start="45:9" pos:end="45:46"><decl pos:start="45:9" pos:end="45:45"><type pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:16">uint32_t</name> <modifier pos:start="45:18" pos:end="45:18">*</modifier></type><name pos:start="45:19" pos:end="45:21">src</name> <init pos:start="45:23" pos:end="45:45">= <expr pos:start="45:25" pos:end="45:45"><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:33">uint32_t</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:40">buf</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <literal type="number" pos:start="45:44" pos:end="45:44">4</literal><operator pos:start="45:45" pos:end="45:45">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:26">(<expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:20">buf_size</name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <literal type="number" pos:start="49:24" pos:end="49:25">36</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="55:9" pos:end="57:68">for <control pos:start="55:13" pos:end="55:31">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal></expr>;</condition> <incr pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:28">i</name><operator pos:start="55:29" pos:end="55:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:68"><block_content pos:start="57:13" pos:end="57:68">

            <expr_stmt pos:start="57:13" pos:end="57:68"><expr pos:start="57:13" pos:end="57:67"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:15">src</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">i</name></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <operator pos:start="57:22" pos:end="57:22">(</operator><operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:26">src</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">i</name></expr>]</index></name> <operator pos:start="57:31" pos:end="57:32">&lt;&lt;</operator> <literal type="number" pos:start="57:34" pos:end="57:35">16</literal><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:38">|</operator> <operator pos:start="57:40" pos:end="57:40">(</operator><name pos:start="57:41" pos:end="57:46"><name pos:start="57:41" pos:end="57:43">src</name><index pos:start="57:44" pos:end="57:46">[<expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">i</name></expr>]</index></name> <operator pos:start="57:48" pos:end="57:49">&gt;&gt;</operator> <literal type="number" pos:start="57:51" pos:end="57:52">16</literal><operator pos:start="57:53" pos:end="57:53">)</operator><operator pos:start="57:54" pos:end="57:54">)</operator> <operator pos:start="57:56" pos:end="57:56">^</operator> <name pos:start="57:58" pos:end="57:67"><name pos:start="57:58" pos:end="57:60">src</name><index pos:start="57:61" pos:end="57:67">[<expr pos:start="57:62" pos:end="57:66"><literal type="number" pos:start="57:62" pos:end="57:62">7</literal> <operator pos:start="57:64" pos:end="57:64">-</operator> <name pos:start="57:66" pos:end="57:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:10">result</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:48"><name pos:start="63:14" pos:end="63:37">svq1_decode_frame_header</name><argument_list pos:start="63:38" pos:end="63:48">(<argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:40">s</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:44">gb</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:47"><expr pos:start="63:47" pos:end="63:47"><name pos:start="63:47" pos:end="63:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:20">(<expr pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:14">result</name> <operator pos:start="67:16" pos:end="67:17">!=</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition> <block pos:start="67:22" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:22">

        <expr_stmt pos:start="69:9" pos:end="69:76"><expr pos:start="69:9" pos:end="69:75"><call pos:start="69:9" pos:end="69:75"><name pos:start="69:9" pos:end="69:15">av_dlog</name><argument_list pos:start="69:16" pos:end="69:75">(<argument pos:start="69:17" pos:end="69:24"><expr pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:24">avctx</name></name></expr></argument>, <argument pos:start="69:27" pos:end="69:66"><expr pos:start="69:27" pos:end="69:66"><literal type="string" pos:start="69:27" pos:end="69:66">"Error in svq1_decode_frame_header %i\n"</literal></expr></argument>, <argument pos:start="69:69" pos:end="69:74"><expr pos:start="69:69" pos:end="69:74"><name pos:start="69:69" pos:end="69:74">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:22">return <expr pos:start="71:16" pos:end="71:21"><name pos:start="71:16" pos:end="71:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:55"><expr pos:start="75:5" pos:end="75:54"><call pos:start="75:5" pos:end="75:54"><name pos:start="75:5" pos:end="75:26">avcodec_set_dimensions</name><argument_list pos:start="75:27" pos:end="75:54">(<argument pos:start="75:28" pos:end="75:32"><expr pos:start="75:28" pos:end="75:32"><name pos:start="75:28" pos:end="75:32">avctx</name></expr></argument>, <argument pos:start="75:35" pos:end="75:42"><expr pos:start="75:35" pos:end="75:42"><name pos:start="75:35" pos:end="75:42"><name pos:start="75:35" pos:end="75:35">s</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:42">width</name></name></expr></argument>, <argument pos:start="75:45" pos:end="75:53"><expr pos:start="75:45" pos:end="75:53"><name pos:start="75:45" pos:end="75:53"><name pos:start="75:45" pos:end="75:45">s</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:53">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="83:34">/* FIXME: This avoids some confusion for "B frames" without 2 references.

     * This should be removed after libavcodec can handle more flexible

     * picture types &amp; ordering */</comment>

    <if_stmt pos:start="85:5" pos:end="87:24"><if pos:start="85:5" pos:end="87:24">if <condition pos:start="85:8" pos:end="85:73">(<expr pos:start="85:9" pos:end="85:72"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:20">pict_type</name></name> <operator pos:start="85:22" pos:end="85:23">==</operator> <name pos:start="85:25" pos:end="85:41">AV_PICTURE_TYPE_B</name> <operator pos:start="85:43" pos:end="85:44">&amp;&amp;</operator> <name pos:start="85:46" pos:end="85:64"><name pos:start="85:46" pos:end="85:46">s</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:64">last_picture_ptr</name></name> <operator pos:start="85:66" pos:end="85:67">==</operator> <name pos:start="85:69" pos:end="85:72">NULL</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:24"><block_content pos:start="87:9" pos:end="87:24">

        <return pos:start="87:9" pos:end="87:24">return <expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="101:24"><if pos:start="91:5" pos:end="101:24">if <condition pos:start="91:8" pos:end="99:43">(<expr pos:start="91:9" pos:end="99:42"><operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:26"><name pos:start="91:10" pos:end="91:14">avctx</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:26">skip_frame</name></name> <operator pos:start="91:28" pos:end="91:29">&gt;=</operator> <name pos:start="91:31" pos:end="91:46">AVDISCARD_NONREF</name> <operator pos:start="91:48" pos:end="91:49">&amp;&amp;</operator>

         <name pos:start="93:10" pos:end="93:21"><name pos:start="93:10" pos:end="93:10">s</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:21">pict_type</name></name> <operator pos:start="93:23" pos:end="93:24">==</operator> <name pos:start="93:26" pos:end="93:42">AV_PICTURE_TYPE_B</name><operator pos:start="93:43" pos:end="93:43">)</operator>    <operator pos:start="93:48" pos:end="93:49">||</operator>

        <operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:14">avctx</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:26">skip_frame</name></name> <operator pos:start="95:28" pos:end="95:29">&gt;=</operator> <name pos:start="95:31" pos:end="95:46">AVDISCARD_NONKEY</name> <operator pos:start="95:48" pos:end="95:49">&amp;&amp;</operator>

         <name pos:start="97:10" pos:end="97:21"><name pos:start="97:10" pos:end="97:10">s</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:21">pict_type</name></name> <operator pos:start="97:23" pos:end="97:24">!=</operator> <name pos:start="97:26" pos:end="97:42">AV_PICTURE_TYPE_I</name><operator pos:start="97:43" pos:end="97:43">)</operator>    <operator pos:start="97:48" pos:end="97:49">||</operator>

        <name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">skip_frame</name></name> <operator pos:start="99:27" pos:end="99:28">&gt;=</operator> <name pos:start="99:30" pos:end="99:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:24"><block_content pos:start="101:9" pos:end="101:24">

        <return pos:start="101:9" pos:end="101:24">return <expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="107:22"><if pos:start="105:5" pos:end="107:22">if <condition pos:start="105:8" pos:end="105:52">(<expr pos:start="105:9" pos:end="105:51"><operator pos:start="105:9" pos:end="105:9">(</operator><name pos:start="105:10" pos:end="105:15">result</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:46"><name pos:start="105:19" pos:end="105:36">ff_MPV_frame_start</name><argument_list pos:start="105:37" pos:end="105:46">(<argument pos:start="105:38" pos:end="105:38"><expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">s</name></expr></argument>, <argument pos:start="105:41" pos:end="105:45"><expr pos:start="105:41" pos:end="105:45"><name pos:start="105:41" pos:end="105:45">avctx</name></expr></argument>)</argument_list></call><operator pos:start="105:47" pos:end="105:47">)</operator> <operator pos:start="105:49" pos:end="105:49">&lt;</operator> <literal type="number" pos:start="105:51" pos:end="105:51">0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:22"><block_content pos:start="107:9" pos:end="107:22">

        <return pos:start="107:9" pos:end="107:22">return <expr pos:start="107:16" pos:end="107:21"><name pos:start="107:16" pos:end="107:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:68"><expr pos:start="111:5" pos:end="111:67"><name pos:start="111:5" pos:end="111:7">pmv</name> <operator pos:start="111:9" pos:end="111:9">=</operator> <call pos:start="111:11" pos:end="111:67"><name pos:start="111:11" pos:end="111:19">av_malloc</name><argument_list pos:start="111:20" pos:end="111:67">(<argument pos:start="111:21" pos:end="111:66"><expr pos:start="111:21" pos:end="111:66"><operator pos:start="111:21" pos:end="111:21">(</operator><call pos:start="111:22" pos:end="111:42"><name pos:start="111:22" pos:end="111:28">FFALIGN</name><argument_list pos:start="111:29" pos:end="111:42">(<argument pos:start="111:30" pos:end="111:37"><expr pos:start="111:30" pos:end="111:37"><name pos:start="111:30" pos:end="111:37"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:37">width</name></name></expr></argument>, <argument pos:start="111:40" pos:end="111:41"><expr pos:start="111:40" pos:end="111:41"><literal type="number" pos:start="111:40" pos:end="111:41">16</literal></expr></argument>)</argument_list></call> <operator pos:start="111:44" pos:end="111:44">/</operator> <literal type="number" pos:start="111:46" pos:end="111:48">8</literal> <operator pos:start="111:48" pos:end="111:48">+</operator> <literal type="number" pos:start="111:50" pos:end="111:50">3</literal><operator pos:start="111:51" pos:end="111:51">)</operator> <operator pos:start="111:53" pos:end="111:53">*</operator> <sizeof pos:start="111:55" pos:end="111:66">sizeof<argument_list pos:start="111:61" pos:end="111:66">(<argument pos:start="111:62" pos:end="111:65"><expr pos:start="111:62" pos:end="111:65"><operator pos:start="111:62" pos:end="111:62">*</operator><name pos:start="111:63" pos:end="111:65">pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:31"><if pos:start="113:5" pos:end="115:31">if <condition pos:start="113:8" pos:end="113:13">(<expr pos:start="113:9" pos:end="113:12"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:12">pmv</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:31"><block_content pos:start="115:9" pos:end="115:31">

        <return pos:start="115:9" pos:end="115:31">return <expr pos:start="115:16" pos:end="115:30"><call pos:start="115:16" pos:end="115:30"><name pos:start="115:16" pos:end="115:22">AVERROR</name><argument_list pos:start="115:23" pos:end="115:30">(<argument pos:start="115:24" pos:end="115:29"><expr pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:38">/* decode y, u and v components */</comment>

    <for pos:start="121:5" pos:end="239:5">for <control pos:start="121:9" pos:end="121:27">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <literal type="number" pos:start="121:21" pos:end="121:21">3</literal></expr>;</condition> <incr pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:24">i</name><operator pos:start="121:25" pos:end="121:26">++</operator></expr></incr>)</control> <block pos:start="121:29" pos:end="239:5">{<block_content pos:start="123:9" pos:end="237:9">

        <decl_stmt pos:start="123:9" pos:end="123:21"><decl pos:start="123:9" pos:end="123:20"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:20">linesize</name></decl>;</decl_stmt>

        <if_stmt pos:start="125:9" pos:end="145:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="125:19">(<expr pos:start="125:13" pos:end="125:18"><name pos:start="125:13" pos:end="125:13">i</name> <operator pos:start="125:15" pos:end="125:16">==</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>)</condition> <block pos:start="125:21" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:35">

            <expr_stmt pos:start="127:13" pos:end="127:46"><expr pos:start="127:13" pos:end="127:45"><name pos:start="127:13" pos:end="127:17">width</name>    <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:45"><name pos:start="127:24" pos:end="127:30">FFALIGN</name><argument_list pos:start="127:31" pos:end="127:45">(<argument pos:start="127:32" pos:end="127:39"><expr pos:start="127:32" pos:end="127:39"><name pos:start="127:32" pos:end="127:39"><name pos:start="127:32" pos:end="127:32">s</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:39">width</name></name></expr></argument>,  <argument pos:start="127:43" pos:end="127:44"><expr pos:start="127:43" pos:end="127:44"><literal type="number" pos:start="127:43" pos:end="127:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:46"><expr pos:start="129:13" pos:end="129:45"><name pos:start="129:13" pos:end="129:18">height</name>   <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:45"><name pos:start="129:24" pos:end="129:30">FFALIGN</name><argument_list pos:start="129:31" pos:end="129:45">(<argument pos:start="129:32" pos:end="129:40"><expr pos:start="129:32" pos:end="129:40"><name pos:start="129:32" pos:end="129:40"><name pos:start="129:32" pos:end="129:32">s</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:40">height</name></name></expr></argument>, <argument pos:start="129:43" pos:end="129:44"><expr pos:start="129:43" pos:end="129:44"><literal type="number" pos:start="129:43" pos:end="129:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:34"><name pos:start="131:13" pos:end="131:20">linesize</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:34"><name pos:start="131:24" pos:end="131:24">s</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:34">linesize</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="145:9">else <block pos:start="133:16" pos:end="145:9">{<block_content pos:start="135:13" pos:end="143:37">

            <if_stmt pos:start="135:13" pos:end="137:22"><if pos:start="135:13" pos:end="137:22">if <condition pos:start="135:16" pos:end="135:43">(<expr pos:start="135:17" pos:end="135:42"><name pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:24">flags</name></name> <operator pos:start="135:26" pos:end="135:26">&amp;</operator> <name pos:start="135:28" pos:end="135:42">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:22"><block_content pos:start="137:17" pos:end="137:22">

                <break pos:start="137:17" pos:end="137:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:50"><expr pos:start="139:13" pos:end="139:49"><name pos:start="139:13" pos:end="139:17">width</name>    <operator pos:start="139:22" pos:end="139:22">=</operator> <call pos:start="139:24" pos:end="139:49"><name pos:start="139:24" pos:end="139:30">FFALIGN</name><argument_list pos:start="139:31" pos:end="139:49">(<argument pos:start="139:32" pos:end="139:44"><expr pos:start="139:32" pos:end="139:44"><name pos:start="139:32" pos:end="139:39"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:39">width</name></name>  <operator pos:start="139:42" pos:end="139:42">/</operator> <literal type="number" pos:start="139:44" pos:end="139:44">4</literal></expr></argument>, <argument pos:start="139:47" pos:end="139:48"><expr pos:start="139:47" pos:end="139:48"><literal type="number" pos:start="139:47" pos:end="139:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:50"><expr pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:18">height</name>   <operator pos:start="141:22" pos:end="141:22">=</operator> <call pos:start="141:24" pos:end="141:49"><name pos:start="141:24" pos:end="141:30">FFALIGN</name><argument_list pos:start="141:31" pos:end="141:49">(<argument pos:start="141:32" pos:end="141:44"><expr pos:start="141:32" pos:end="141:44"><name pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:32">s</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:40">height</name></name> <operator pos:start="141:42" pos:end="141:42">/</operator> <literal type="number" pos:start="141:44" pos:end="141:44">4</literal></expr></argument>, <argument pos:start="141:47" pos:end="141:48"><expr pos:start="141:47" pos:end="141:48"><literal type="number" pos:start="141:47" pos:end="141:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:37"><expr pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:20">linesize</name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:36"><name pos:start="143:24" pos:end="143:24">s</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:36">uvlinesize</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:47"><expr pos:start="149:9" pos:end="149:46"><name pos:start="149:9" pos:end="149:15">current</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <name pos:start="149:19" pos:end="149:46"><name pos:start="149:19" pos:end="149:19">s</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:36">current_picture</name><operator pos:start="149:37" pos:end="149:37">.</operator><name pos:start="149:38" pos:end="149:38">f</name><operator pos:start="149:39" pos:end="149:39">.</operator><name pos:start="149:40" pos:end="149:43">data</name><index pos:start="149:44" pos:end="149:46">[<expr pos:start="149:45" pos:end="149:45"><name pos:start="149:45" pos:end="149:45">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="159:49"><if pos:start="153:9" pos:end="155:49">if <condition pos:start="153:12" pos:end="153:46">(<expr pos:start="153:13" pos:end="153:45"><name pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:24">pict_type</name></name> <operator pos:start="153:26" pos:end="153:27">==</operator> <name pos:start="153:29" pos:end="153:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:49"><block_content pos:start="155:13" pos:end="155:49">

            <expr_stmt pos:start="155:13" pos:end="155:49"><expr pos:start="155:13" pos:end="155:48"><name pos:start="155:13" pos:end="155:20">previous</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <name pos:start="155:24" pos:end="155:48"><name pos:start="155:24" pos:end="155:24">s</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:38">next_picture</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:40">f</name><operator pos:start="155:41" pos:end="155:41">.</operator><name pos:start="155:42" pos:end="155:45">data</name><index pos:start="155:46" pos:end="155:48">[<expr pos:start="155:47" pos:end="155:47"><name pos:start="155:47" pos:end="155:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="157:9" pos:end="159:49">else<block type="pseudo" pos:start="159:13" pos:end="159:49"><block_content pos:start="159:13" pos:end="159:49">

            <expr_stmt pos:start="159:13" pos:end="159:49"><expr pos:start="159:13" pos:end="159:48"><name pos:start="159:13" pos:end="159:20">previous</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:48"><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:38">last_picture</name><operator pos:start="159:39" pos:end="159:39">.</operator><name pos:start="159:40" pos:end="159:40">f</name><operator pos:start="159:41" pos:end="159:41">.</operator><name pos:start="159:42" pos:end="159:45">data</name><index pos:start="159:46" pos:end="159:48">[<expr pos:start="159:47" pos:end="159:47"><name pos:start="159:47" pos:end="159:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="163:9" pos:end="237:9"><if pos:start="163:9" pos:end="193:9">if <condition pos:start="163:12" pos:end="163:46">(<expr pos:start="163:13" pos:end="163:45"><name pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:24">pict_type</name></name> <operator pos:start="163:26" pos:end="163:27">==</operator> <name pos:start="163:29" pos:end="163:45">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="163:48" pos:end="193:9">{<block_content pos:start="167:13" pos:end="191:13">

            <comment type="block" pos:start="165:13" pos:end="165:26">/* keyframe */</comment>

            <for pos:start="167:13" pos:end="191:13">for <control pos:start="167:17" pos:end="167:44">(<init pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:22"><name pos:start="167:18" pos:end="167:18">y</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</init> <condition pos:start="167:25" pos:end="167:35"><expr pos:start="167:25" pos:end="167:34"><name pos:start="167:25" pos:end="167:25">y</name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <name pos:start="167:29" pos:end="167:34">height</name></expr>;</condition> <incr pos:start="167:37" pos:end="167:43"><expr pos:start="167:37" pos:end="167:43"><name pos:start="167:37" pos:end="167:37">y</name> <operator pos:start="167:39" pos:end="167:40">+=</operator> <literal type="number" pos:start="167:42" pos:end="167:43">16</literal></expr></incr>)</control> <block pos:start="167:46" pos:end="191:13">{<block_content pos:start="169:17" pos:end="189:41">

                <for pos:start="169:17" pos:end="187:17">for <control pos:start="169:21" pos:end="169:47">(<init pos:start="169:22" pos:end="169:27"><expr pos:start="169:22" pos:end="169:26"><name pos:start="169:22" pos:end="169:22">x</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal></expr>;</init> <condition pos:start="169:29" pos:end="169:38"><expr pos:start="169:29" pos:end="169:37"><name pos:start="169:29" pos:end="169:29">x</name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <name pos:start="169:33" pos:end="169:37">width</name></expr>;</condition> <incr pos:start="169:40" pos:end="169:46"><expr pos:start="169:40" pos:end="169:46"><name pos:start="169:40" pos:end="169:40">x</name> <operator pos:start="169:42" pos:end="169:43">+=</operator> <literal type="number" pos:start="169:45" pos:end="169:46">16</literal></expr></incr>)</control> <block pos:start="169:49" pos:end="187:17">{<block_content pos:start="171:21" pos:end="185:21">

                    <expr_stmt pos:start="171:21" pos:end="173:63"><expr pos:start="171:21" pos:end="173:62"><name pos:start="171:21" pos:end="171:26">result</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <call pos:start="171:30" pos:end="173:62"><name pos:start="171:30" pos:end="171:52">svq1_decode_block_intra</name><argument_list pos:start="171:53" pos:end="173:62">(<argument pos:start="171:54" pos:end="171:59"><expr pos:start="171:54" pos:end="171:59"><operator pos:start="171:54" pos:end="171:54">&amp;</operator><name pos:start="171:55" pos:end="171:59"><name pos:start="171:55" pos:end="171:55">s</name><operator pos:start="171:56" pos:end="171:57">-&gt;</operator><name pos:start="171:58" pos:end="171:59">gb</name></name></expr></argument>, <argument pos:start="171:62" pos:end="171:72"><expr pos:start="171:62" pos:end="171:72"><operator pos:start="171:62" pos:end="171:62">&amp;</operator><name pos:start="171:63" pos:end="171:72"><name pos:start="171:63" pos:end="171:69">current</name><index pos:start="171:70" pos:end="171:72">[<expr pos:start="171:71" pos:end="171:71"><name pos:start="171:71" pos:end="171:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="173:54" pos:end="173:61"><expr pos:start="173:54" pos:end="173:61"><name pos:start="173:54" pos:end="173:61">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="175:21" pos:end="185:21"><if pos:start="175:21" pos:end="185:21">if <condition pos:start="175:24" pos:end="175:36">(<expr pos:start="175:25" pos:end="175:35"><name pos:start="175:25" pos:end="175:30">result</name> <operator pos:start="175:32" pos:end="175:33">!=</operator> <literal type="number" pos:start="175:35" pos:end="175:35">0</literal></expr>)</condition> <block pos:start="175:38" pos:end="185:21">{<block_content pos:start="177:25" pos:end="183:33">

                        <expr_stmt pos:start="177:25" pos:end="181:39"><expr pos:start="177:25" pos:end="181:38"><call pos:start="177:25" pos:end="181:38"><name pos:start="177:25" pos:end="177:30">av_log</name><argument_list pos:start="177:31" pos:end="181:38">(<argument pos:start="177:32" pos:end="177:39"><expr pos:start="177:32" pos:end="177:39"><name pos:start="177:32" pos:end="177:39"><name pos:start="177:32" pos:end="177:32">s</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:39">avctx</name></name></expr></argument>, <argument pos:start="177:42" pos:end="177:52"><expr pos:start="177:42" pos:end="177:52"><name pos:start="177:42" pos:end="177:52">AV_LOG_INFO</name></expr></argument>,

                               <argument pos:start="179:32" pos:end="179:75"><expr pos:start="179:32" pos:end="179:75"><literal type="string" pos:start="179:32" pos:end="179:75">"Error in svq1_decode_block %i (keyframe)\n"</literal></expr></argument>,

                               <argument pos:start="181:32" pos:end="181:37"><expr pos:start="181:32" pos:end="181:37"><name pos:start="181:32" pos:end="181:37">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="183:25" pos:end="183:33">goto <name pos:start="183:30" pos:end="183:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="189:17" pos:end="189:41"><expr pos:start="189:17" pos:end="189:40"><name pos:start="189:17" pos:end="189:23">current</name> <operator pos:start="189:25" pos:end="189:26">+=</operator> <literal type="number" pos:start="189:28" pos:end="189:29">16</literal> <operator pos:start="189:31" pos:end="189:31">*</operator> <name pos:start="189:33" pos:end="189:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="237:9">else <block pos:start="193:16" pos:end="237:9">{<block_content pos:start="197:13" pos:end="235:13">

            <comment type="block" pos:start="195:13" pos:end="195:29">/* delta frame */</comment>

            <expr_stmt pos:start="197:13" pos:end="197:65"><expr pos:start="197:13" pos:end="197:64"><call pos:start="197:13" pos:end="197:64"><name pos:start="197:13" pos:end="197:18">memset</name><argument_list pos:start="197:19" pos:end="197:64">(<argument pos:start="197:20" pos:end="197:22"><expr pos:start="197:20" pos:end="197:22"><name pos:start="197:20" pos:end="197:22">pmv</name></expr></argument>, <argument pos:start="197:25" pos:end="197:25"><expr pos:start="197:25" pos:end="197:25"><literal type="number" pos:start="197:25" pos:end="197:25">0</literal></expr></argument>, <argument pos:start="197:28" pos:end="197:63"><expr pos:start="197:28" pos:end="197:63"><operator pos:start="197:28" pos:end="197:28">(</operator><operator pos:start="197:29" pos:end="197:29">(</operator><name pos:start="197:30" pos:end="197:34">width</name> <operator pos:start="197:36" pos:end="197:36">/</operator> <literal type="number" pos:start="197:38" pos:end="197:38">8</literal><operator pos:start="197:39" pos:end="197:39">)</operator> <operator pos:start="197:41" pos:end="197:41">+</operator> <literal type="number" pos:start="197:43" pos:end="197:43">3</literal><operator pos:start="197:44" pos:end="197:44">)</operator> <operator pos:start="197:46" pos:end="197:46">*</operator> <sizeof pos:start="197:48" pos:end="197:63">sizeof<argument_list pos:start="197:54" pos:end="197:63">(<argument pos:start="197:55" pos:end="197:62"><expr pos:start="197:55" pos:end="197:62"><name pos:start="197:55" pos:end="197:62">svq1_pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="201:13" pos:end="235:13">for <control pos:start="201:17" pos:end="201:44">(<init pos:start="201:18" pos:end="201:23"><expr pos:start="201:18" pos:end="201:22"><name pos:start="201:18" pos:end="201:18">y</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>;</init> <condition pos:start="201:25" pos:end="201:35"><expr pos:start="201:25" pos:end="201:34"><name pos:start="201:25" pos:end="201:25">y</name> <operator pos:start="201:27" pos:end="201:27">&lt;</operator> <name pos:start="201:29" pos:end="201:34">height</name></expr>;</condition> <incr pos:start="201:37" pos:end="201:43"><expr pos:start="201:37" pos:end="201:43"><name pos:start="201:37" pos:end="201:37">y</name> <operator pos:start="201:39" pos:end="201:40">+=</operator> <literal type="number" pos:start="201:42" pos:end="201:43">16</literal></expr></incr>)</control> <block pos:start="201:46" pos:end="235:13">{<block_content pos:start="203:17" pos:end="233:41">

                <for pos:start="203:17" pos:end="223:17">for <control pos:start="203:21" pos:end="203:47">(<init pos:start="203:22" pos:end="203:27"><expr pos:start="203:22" pos:end="203:26"><name pos:start="203:22" pos:end="203:22">x</name> <operator pos:start="203:24" pos:end="203:24">=</operator> <literal type="number" pos:start="203:26" pos:end="203:26">0</literal></expr>;</init> <condition pos:start="203:29" pos:end="203:38"><expr pos:start="203:29" pos:end="203:37"><name pos:start="203:29" pos:end="203:29">x</name> <operator pos:start="203:31" pos:end="203:31">&lt;</operator> <name pos:start="203:33" pos:end="203:37">width</name></expr>;</condition> <incr pos:start="203:40" pos:end="203:46"><expr pos:start="203:40" pos:end="203:46"><name pos:start="203:40" pos:end="203:40">x</name> <operator pos:start="203:42" pos:end="203:43">+=</operator> <literal type="number" pos:start="203:45" pos:end="203:46">16</literal></expr></incr>)</control> <block pos:start="203:49" pos:end="223:17">{<block_content pos:start="205:21" pos:end="221:21">

                    <expr_stmt pos:start="205:21" pos:end="209:64"><expr pos:start="205:21" pos:end="209:63"><name pos:start="205:21" pos:end="205:26">result</name> <operator pos:start="205:28" pos:end="205:28">=</operator> <call pos:start="205:30" pos:end="209:63"><name pos:start="205:30" pos:end="205:52">svq1_decode_delta_block</name><argument_list pos:start="205:53" pos:end="209:63">(<argument pos:start="205:54" pos:end="205:54"><expr pos:start="205:54" pos:end="205:54"><name pos:start="205:54" pos:end="205:54">s</name></expr></argument>, <argument pos:start="205:57" pos:end="205:62"><expr pos:start="205:57" pos:end="205:62"><operator pos:start="205:57" pos:end="205:57">&amp;</operator><name pos:start="205:58" pos:end="205:62"><name pos:start="205:58" pos:end="205:58">s</name><operator pos:start="205:59" pos:end="205:60">-&gt;</operator><name pos:start="205:61" pos:end="205:62">gb</name></name></expr></argument>, <argument pos:start="205:65" pos:end="205:75"><expr pos:start="205:65" pos:end="205:75"><operator pos:start="205:65" pos:end="205:65">&amp;</operator><name pos:start="205:66" pos:end="205:75"><name pos:start="205:66" pos:end="205:72">current</name><index pos:start="205:73" pos:end="205:75">[<expr pos:start="205:74" pos:end="205:74"><name pos:start="205:74" pos:end="205:74">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="207:54" pos:end="207:61"><expr pos:start="207:54" pos:end="207:61"><name pos:start="207:54" pos:end="207:61">previous</name></expr></argument>, <argument pos:start="207:64" pos:end="207:71"><expr pos:start="207:64" pos:end="207:71"><name pos:start="207:64" pos:end="207:71">linesize</name></expr></argument>,

                                                     <argument pos:start="209:54" pos:end="209:56"><expr pos:start="209:54" pos:end="209:56"><name pos:start="209:54" pos:end="209:56">pmv</name></expr></argument>, <argument pos:start="209:59" pos:end="209:59"><expr pos:start="209:59" pos:end="209:59"><name pos:start="209:59" pos:end="209:59">x</name></expr></argument>, <argument pos:start="209:62" pos:end="209:62"><expr pos:start="209:62" pos:end="209:62"><name pos:start="209:62" pos:end="209:62">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="211:21" pos:end="221:21"><if pos:start="211:21" pos:end="221:21">if <condition pos:start="211:24" pos:end="211:36">(<expr pos:start="211:25" pos:end="211:35"><name pos:start="211:25" pos:end="211:30">result</name> <operator pos:start="211:32" pos:end="211:33">!=</operator> <literal type="number" pos:start="211:35" pos:end="211:35">0</literal></expr>)</condition> <block pos:start="211:38" pos:end="221:21">{<block_content pos:start="213:25" pos:end="219:33">

                        <expr_stmt pos:start="213:25" pos:end="217:40"><expr pos:start="213:25" pos:end="217:39"><call pos:start="213:25" pos:end="217:39"><name pos:start="213:25" pos:end="213:31">av_dlog</name><argument_list pos:start="213:32" pos:end="217:39">(<argument pos:start="213:33" pos:end="213:40"><expr pos:start="213:33" pos:end="213:40"><name pos:start="213:33" pos:end="213:40"><name pos:start="213:33" pos:end="213:33">s</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:40">avctx</name></name></expr></argument>,

                                <argument pos:start="215:33" pos:end="215:71"><expr pos:start="215:33" pos:end="215:71"><literal type="string" pos:start="215:33" pos:end="215:71">"Error in svq1_decode_delta_block %i\n"</literal></expr></argument>,

                                <argument pos:start="217:33" pos:end="217:38"><expr pos:start="217:33" pos:end="217:38"><name pos:start="217:33" pos:end="217:38">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="219:25" pos:end="219:33">goto <name pos:start="219:30" pos:end="219:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="227:17" pos:end="229:33"><expr pos:start="227:17" pos:end="229:32"><name pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:19">pmv</name><index pos:start="227:20" pos:end="227:22">[<expr pos:start="227:21" pos:end="227:21"><literal type="number" pos:start="227:21" pos:end="227:21">0</literal></expr>]</index></name><operator pos:start="227:23" pos:end="227:23">.</operator><name pos:start="227:24" pos:end="227:24">x</name>     <operator pos:start="227:30" pos:end="227:30">=</operator>

                    <name pos:start="229:21" pos:end="229:26"><name pos:start="229:21" pos:end="229:23">pmv</name><index pos:start="229:24" pos:end="229:26">[<expr pos:start="229:25" pos:end="229:25"><literal type="number" pos:start="229:25" pos:end="229:25">0</literal></expr>]</index></name><operator pos:start="229:27" pos:end="229:27">.</operator><name pos:start="229:28" pos:end="229:28">y</name> <operator pos:start="229:30" pos:end="229:30">=</operator> <literal type="number" pos:start="229:32" pos:end="229:32">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="233:17" pos:end="233:41"><expr pos:start="233:17" pos:end="233:40"><name pos:start="233:17" pos:end="233:23">current</name> <operator pos:start="233:25" pos:end="233:26">+=</operator> <literal type="number" pos:start="233:28" pos:end="233:29">16</literal> <operator pos:start="233:31" pos:end="233:31">*</operator> <name pos:start="233:33" pos:end="233:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="243:5" pos:end="243:33"><expr pos:start="243:5" pos:end="243:32"><operator pos:start="243:5" pos:end="243:5">*</operator><name pos:start="243:6" pos:end="243:9">pict</name> <operator pos:start="243:11" pos:end="243:11">=</operator> <name pos:start="243:13" pos:end="243:32"><name pos:start="243:13" pos:end="243:13">s</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:30">current_picture</name><operator pos:start="243:31" pos:end="243:31">.</operator><name pos:start="243:32" pos:end="243:32">f</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:24"><expr pos:start="247:5" pos:end="247:23"><call pos:start="247:5" pos:end="247:23"><name pos:start="247:5" pos:end="247:20">ff_MPV_frame_end</name><argument_list pos:start="247:21" pos:end="247:23">(<argument pos:start="247:22" pos:end="247:22"><expr pos:start="247:22" pos:end="247:22"><name pos:start="247:22" pos:end="247:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:33"><expr pos:start="251:5" pos:end="251:32"><operator pos:start="251:5" pos:end="251:5">*</operator><name pos:start="251:6" pos:end="251:14">data_size</name> <operator pos:start="251:16" pos:end="251:16">=</operator> <sizeof pos:start="251:18" pos:end="251:32">sizeof<argument_list pos:start="251:24" pos:end="251:32">(<argument pos:start="251:25" pos:end="251:31"><expr pos:start="251:25" pos:end="251:31"><name pos:start="251:25" pos:end="251:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:26"><expr pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:10">result</name>     <operator pos:start="253:16" pos:end="253:16">=</operator> <name pos:start="253:18" pos:end="253:25">buf_size</name></expr>;</expr_stmt>



<label pos:start="257:1" pos:end="257:4"><name pos:start="257:1" pos:end="257:3">err</name>:</label>

    <expr_stmt pos:start="259:5" pos:end="259:17"><expr pos:start="259:5" pos:end="259:16"><call pos:start="259:5" pos:end="259:16"><name pos:start="259:5" pos:end="259:11">av_free</name><argument_list pos:start="259:12" pos:end="259:16">(<argument pos:start="259:13" pos:end="259:15"><expr pos:start="259:13" pos:end="259:15"><name pos:start="259:13" pos:end="259:15">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="261:5" pos:end="261:18">return <expr pos:start="261:12" pos:end="261:17"><name pos:start="261:12" pos:end="261:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
