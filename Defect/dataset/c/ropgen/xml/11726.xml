<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11726.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">test_yield</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:30">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:24">coroutine</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:13">done</name> <init pos:start="7:15" pos:end="7:21">= <expr pos:start="7:17" pos:end="7:21"><name pos:start="7:17" pos:end="7:21">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name> <init pos:start="9:11" pos:end="9:14">= <expr pos:start="9:13" pos:end="9:14"><operator pos:start="9:13" pos:end="9:13">-</operator><literal type="number" pos:start="9:14" pos:end="9:14">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="9:17" pos:end="9:61">/* one extra time to return from coroutine */</comment>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:13">coroutine</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:52"><name pos:start="13:17" pos:end="13:37">qemu_coroutine_create</name><argument_list pos:start="13:38" pos:end="13:52">(<argument pos:start="13:39" pos:end="13:51"><expr pos:start="13:39" pos:end="13:51"><name pos:start="13:39" pos:end="13:51">yield_5_times</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="15:5" pos:end="21:5">while <condition pos:start="15:11" pos:end="15:17">(<expr pos:start="15:12" pos:end="15:16"><operator pos:start="15:12" pos:end="15:12">!</operator><name pos:start="15:13" pos:end="15:16">done</name></expr>)</condition> <block pos:start="15:19" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:12">

        <expr_stmt pos:start="17:9" pos:end="17:47"><expr pos:start="17:9" pos:end="17:46"><call pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:28">qemu_coroutine_enter</name><argument_list pos:start="17:29" pos:end="17:46">(<argument pos:start="17:30" pos:end="17:38"><expr pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:38">coroutine</name></expr></argument>, <argument pos:start="17:41" pos:end="17:45"><expr pos:start="17:41" pos:end="17:45"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:45">done</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><call pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:19">g_assert_cmpint</name><argument_list pos:start="23:20" pos:end="23:29">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">i</name></expr></argument>, <argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><operator pos:start="23:24" pos:end="23:25">==</operator></expr></argument>, <argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:32" pos:end="23:65">/* coroutine must yield 5 times */</comment>

</block_content>}</block></function>
</unit>
