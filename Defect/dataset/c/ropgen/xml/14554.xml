<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14554.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:38">assigned_dev_ioport_rw</name><parameter_list pos:start="1:39" pos:end="5:54">(<parameter pos:start="1:40" pos:end="1:68"><decl pos:start="1:40" pos:end="1:68"><type pos:start="1:40" pos:end="1:68"><name pos:start="1:40" pos:end="1:56">AssignedDevRegion</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:68">dev_region</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:62"><decl pos:start="3:40" pos:end="3:62"><type pos:start="3:40" pos:end="3:62"><name pos:start="3:40" pos:end="3:57">target_phys_addr_t</name></type> <name pos:start="3:59" pos:end="3:62">addr</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:72"><decl pos:start="3:65" pos:end="3:72"><type pos:start="3:65" pos:end="3:72"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:72">size</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:53"><decl pos:start="5:40" pos:end="5:53"><type pos:start="5:40" pos:end="5:53"><name pos:start="5:40" pos:end="5:47">uint64_t</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:53">data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="115:15">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">fd</name> <init pos:start="11:12" pos:end="11:44">= <expr pos:start="11:14" pos:end="11:44"><name pos:start="11:14" pos:end="11:44"><name pos:start="11:14" pos:end="11:23">dev_region</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:31">region</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:44">resource_fd</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="113:5"><if pos:start="15:5" pos:end="49:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:13">&gt;=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:9">

        <if_stmt pos:start="17:9" pos:end="47:9"><if pos:start="17:9" pos:end="31:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">data</name></expr>)</condition> <block pos:start="17:19" pos:end="31:9">{<block_content pos:start="19:13" pos:end="29:13">

            <expr_stmt pos:start="19:13" pos:end="21:72"><expr pos:start="19:13" pos:end="21:71"><call pos:start="19:13" pos:end="21:71"><name pos:start="19:13" pos:end="19:17">DEBUG</name><argument_list pos:start="19:18" pos:end="21:71">(<argument pos:start="19:19" pos:end="21:45"><expr pos:start="19:19" pos:end="21:45"><literal type="string" pos:start="19:19" pos:end="19:33">"pwrite data=%"</literal> <name pos:start="19:35" pos:end="19:40">PRIx64</name> <literal type="string" pos:start="19:42" pos:end="19:61">", size=%d, e_phys="</literal> <name pos:start="19:63" pos:end="19:76">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="21:19" pos:end="21:27">", addr="</literal><name pos:start="21:28" pos:end="21:41">TARGET_FMT_plx</name><literal type="string" pos:start="21:42" pos:end="21:45">"\n"</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:52"><expr pos:start="21:48" pos:end="21:52"><operator pos:start="21:48" pos:end="21:48">*</operator><name pos:start="21:49" pos:end="21:52">data</name></expr></argument>, <argument pos:start="21:55" pos:end="21:58"><expr pos:start="21:55" pos:end="21:58"><name pos:start="21:55" pos:end="21:58">size</name></expr></argument>, <argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><name pos:start="21:61" pos:end="21:64">addr</name></expr></argument>, <argument pos:start="21:67" pos:end="21:70"><expr pos:start="21:67" pos:end="21:70"><name pos:start="21:67" pos:end="21:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:53">(<expr pos:start="23:17" pos:end="23:52"><call pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:22">pwrite</name><argument_list pos:start="23:23" pos:end="23:44">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">fd</name></expr></argument>, <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">data</name></expr></argument>, <argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">size</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">addr</name></expr></argument>)</argument_list></call> <operator pos:start="23:46" pos:end="23:47">!=</operator> <name pos:start="23:49" pos:end="23:52">size</name></expr>)</condition> <block pos:start="23:55" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:56">

                <expr_stmt pos:start="25:17" pos:end="27:56"><expr pos:start="25:17" pos:end="27:55"><call pos:start="25:17" pos:end="27:55"><name pos:start="25:17" pos:end="25:28">error_report</name><argument_list pos:start="25:29" pos:end="27:55">(<argument pos:start="25:30" pos:end="25:52"><expr pos:start="25:30" pos:end="25:52"><literal type="string" pos:start="25:30" pos:end="25:52">"%s - pwrite failed %s"</literal></expr></argument>,

                             <argument pos:start="27:30" pos:end="27:37"><expr pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:37">__func__</name></expr></argument>, <argument pos:start="27:40" pos:end="27:54"><expr pos:start="27:40" pos:end="27:54"><call pos:start="27:40" pos:end="27:54"><name pos:start="27:40" pos:end="27:47">strerror</name><argument_list pos:start="27:48" pos:end="27:54">(<argument pos:start="27:49" pos:end="27:53"><expr pos:start="27:49" pos:end="27:53"><name pos:start="27:49" pos:end="27:53">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="47:9">else <block pos:start="31:16" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:72">

            <if_stmt pos:start="33:13" pos:end="41:13"><if pos:start="33:13" pos:end="41:13">if <condition pos:start="33:16" pos:end="33:52">(<expr pos:start="33:17" pos:end="33:51"><call pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:21">pread</name><argument_list pos:start="33:22" pos:end="33:43">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">fd</name></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:30">val</name></expr></argument>, <argument pos:start="33:33" pos:end="33:36"><expr pos:start="33:33" pos:end="33:36"><name pos:start="33:33" pos:end="33:36">size</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">addr</name></expr></argument>)</argument_list></call> <operator pos:start="33:45" pos:end="33:46">!=</operator> <name pos:start="33:48" pos:end="33:51">size</name></expr>)</condition> <block pos:start="33:54" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:46">

                <expr_stmt pos:start="35:17" pos:end="37:56"><expr pos:start="35:17" pos:end="37:55"><call pos:start="35:17" pos:end="37:55"><name pos:start="35:17" pos:end="35:28">error_report</name><argument_list pos:start="35:29" pos:end="37:55">(<argument pos:start="35:30" pos:end="35:51"><expr pos:start="35:30" pos:end="35:51"><literal type="string" pos:start="35:30" pos:end="35:51">"%s - pread failed %s"</literal></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:37">__func__</name></expr></argument>, <argument pos:start="37:40" pos:end="37:54"><expr pos:start="37:40" pos:end="37:54"><call pos:start="37:40" pos:end="37:54"><name pos:start="37:40" pos:end="37:47">strerror</name><argument_list pos:start="37:48" pos:end="37:54">(<argument pos:start="37:49" pos:end="37:53"><expr pos:start="37:49" pos:end="37:53"><name pos:start="37:49" pos:end="37:53">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:46"><expr pos:start="39:17" pos:end="39:45"><name pos:start="39:17" pos:end="39:19">val</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <operator pos:start="39:23" pos:end="39:23">(</operator><literal type="number" pos:start="39:24" pos:end="39:26">1UL</literal> <operator pos:start="39:28" pos:end="39:29">&lt;&lt;</operator> <operator pos:start="39:31" pos:end="39:31">(</operator><name pos:start="39:32" pos:end="39:35">size</name> <operator pos:start="39:37" pos:end="39:37">*</operator> <literal type="number" pos:start="39:39" pos:end="39:39">8</literal><operator pos:start="39:40" pos:end="39:40">)</operator><operator pos:start="39:41" pos:end="39:41">)</operator> <operator pos:start="39:43" pos:end="39:43">-</operator> <literal type="number" pos:start="39:45" pos:end="39:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:72"><expr pos:start="43:13" pos:end="45:71"><call pos:start="43:13" pos:end="45:71"><name pos:start="43:13" pos:end="43:17">DEBUG</name><argument_list pos:start="43:18" pos:end="45:71">(<argument pos:start="43:19" pos:end="45:47"><expr pos:start="43:19" pos:end="45:47"><literal type="string" pos:start="43:19" pos:end="43:31">"pread val=%"</literal> <name pos:start="43:33" pos:end="43:38">PRIx64</name> <literal type="string" pos:start="43:40" pos:end="43:59">", size=%d, e_phys="</literal> <name pos:start="43:61" pos:end="43:74">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="45:19" pos:end="45:27">", addr="</literal> <name pos:start="45:29" pos:end="45:42">TARGET_FMT_plx</name> <literal type="string" pos:start="45:44" pos:end="45:47">"\n"</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:52"><expr pos:start="45:50" pos:end="45:52"><name pos:start="45:50" pos:end="45:52">val</name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">size</name></expr></argument>, <argument pos:start="45:61" pos:end="45:64"><expr pos:start="45:61" pos:end="45:64"><name pos:start="45:61" pos:end="45:64">addr</name></expr></argument>, <argument pos:start="45:67" pos:end="45:70"><expr pos:start="45:67" pos:end="45:70"><name pos:start="45:67" pos:end="45:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="113:5">else <block pos:start="49:12" pos:end="113:5">{<block_content pos:start="51:9" pos:end="111:9">

        <decl_stmt pos:start="51:9" pos:end="51:56"><decl pos:start="51:9" pos:end="51:55"><type pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:16">uint32_t</name></type> <name pos:start="51:18" pos:end="51:21">port</name> <init pos:start="51:23" pos:end="51:55">= <expr pos:start="51:25" pos:end="51:55"><name pos:start="51:25" pos:end="51:28">addr</name> <operator pos:start="51:30" pos:end="51:30">+</operator> <name pos:start="51:32" pos:end="51:55"><name pos:start="51:32" pos:end="51:41">dev_region</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:44">u</name><operator pos:start="51:45" pos:end="51:45">.</operator><name pos:start="51:46" pos:end="51:55">r_baseport</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="111:9"><if pos:start="55:9" pos:end="83:9">if <condition pos:start="55:12" pos:end="55:17">(<expr pos:start="55:13" pos:end="55:16"><name pos:start="55:13" pos:end="55:16">data</name></expr>)</condition> <block pos:start="55:19" pos:end="83:9">{<block_content pos:start="57:13" pos:end="81:13">

            <expr_stmt pos:start="57:13" pos:end="59:58"><expr pos:start="57:13" pos:end="59:57"><call pos:start="57:13" pos:end="59:57"><name pos:start="57:13" pos:end="57:17">DEBUG</name><argument_list pos:start="57:18" pos:end="59:57">(<argument pos:start="57:19" pos:end="59:31"><expr pos:start="57:19" pos:end="59:31"><literal type="string" pos:start="57:19" pos:end="57:30">"out data=%"</literal> <name pos:start="57:32" pos:end="57:37">PRIx64</name> <literal type="string" pos:start="57:39" pos:end="57:58">", size=%d, e_phys="</literal> <name pos:start="57:60" pos:end="57:73">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="59:19" pos:end="59:31">", host=%x\n"</literal></expr></argument>, <argument pos:start="59:34" pos:end="59:38"><expr pos:start="59:34" pos:end="59:38"><operator pos:start="59:34" pos:end="59:34">*</operator><name pos:start="59:35" pos:end="59:38">data</name></expr></argument>, <argument pos:start="59:41" pos:end="59:44"><expr pos:start="59:41" pos:end="59:44"><name pos:start="59:41" pos:end="59:44">size</name></expr></argument>, <argument pos:start="59:47" pos:end="59:50"><expr pos:start="59:47" pos:end="59:50"><name pos:start="59:47" pos:end="59:50">addr</name></expr></argument>, <argument pos:start="59:53" pos:end="59:56"><expr pos:start="59:53" pos:end="59:56"><name pos:start="59:53" pos:end="59:56">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="61:13" pos:end="81:13">switch <condition pos:start="61:20" pos:end="61:25">(<expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:24">size</name></expr>)</condition> <block pos:start="61:27" pos:end="81:13">{<block_content pos:start="63:13" pos:end="79:22">

            <case pos:start="63:13" pos:end="63:19">case <expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>:</case>

                <expr_stmt pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:33"><call pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:20">outb</name><argument_list pos:start="65:21" pos:end="65:33">(<argument pos:start="65:22" pos:end="65:26"><expr pos:start="65:22" pos:end="65:26"><operator pos:start="65:22" pos:end="65:22">*</operator><name pos:start="65:23" pos:end="65:26">data</name></expr></argument>, <argument pos:start="65:29" pos:end="65:32"><expr pos:start="65:29" pos:end="65:32"><name pos:start="65:29" pos:end="65:32">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            <case pos:start="69:13" pos:end="69:19">case <expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">2</literal></expr>:</case>

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><call pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:20">outw</name><argument_list pos:start="71:21" pos:end="71:33">(<argument pos:start="71:22" pos:end="71:26"><expr pos:start="71:22" pos:end="71:26"><operator pos:start="71:22" pos:end="71:22">*</operator><name pos:start="71:23" pos:end="71:26">data</name></expr></argument>, <argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            <case pos:start="75:13" pos:end="75:19">case <expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">4</literal></expr>:</case>

                <expr_stmt pos:start="77:17" pos:end="77:34"><expr pos:start="77:17" pos:end="77:33"><call pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:20">outl</name><argument_list pos:start="77:21" pos:end="77:33">(<argument pos:start="77:22" pos:end="77:26"><expr pos:start="77:22" pos:end="77:26"><operator pos:start="77:22" pos:end="77:22">*</operator><name pos:start="77:23" pos:end="77:26">data</name></expr></argument>, <argument pos:start="77:29" pos:end="77:32"><expr pos:start="77:29" pos:end="77:32"><name pos:start="77:29" pos:end="77:32">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="111:9">else <block pos:start="83:16" pos:end="111:9">{<block_content pos:start="85:13" pos:end="109:56">

            <switch pos:start="85:13" pos:end="105:13">switch <condition pos:start="85:20" pos:end="85:25">(<expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:24">size</name></expr>)</condition> <block pos:start="85:27" pos:end="105:13">{<block_content pos:start="87:13" pos:end="103:22">

            <case pos:start="87:13" pos:end="87:19">case <expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr>:</case>

                <expr_stmt pos:start="89:17" pos:end="89:32"><expr pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:19">val</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:31"><name pos:start="89:23" pos:end="89:25">inb</name><argument_list pos:start="89:26" pos:end="89:31">(<argument pos:start="89:27" pos:end="89:30"><expr pos:start="89:27" pos:end="89:30"><name pos:start="89:27" pos:end="89:30">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="91:17" pos:end="91:22">break;</break>

            <case pos:start="93:13" pos:end="93:19">case <expr pos:start="93:18" pos:end="93:18"><literal type="number" pos:start="93:18" pos:end="93:18">2</literal></expr>:</case>

                <expr_stmt pos:start="95:17" pos:end="95:32"><expr pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:19">val</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:31"><name pos:start="95:23" pos:end="95:25">inw</name><argument_list pos:start="95:26" pos:end="95:31">(<argument pos:start="95:27" pos:end="95:30"><expr pos:start="95:27" pos:end="95:30"><name pos:start="95:27" pos:end="95:30">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            <case pos:start="99:13" pos:end="99:19">case <expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">4</literal></expr>:</case>

                <expr_stmt pos:start="101:17" pos:end="101:32"><expr pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:19">val</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="101:31"><name pos:start="101:23" pos:end="101:25">inl</name><argument_list pos:start="101:26" pos:end="101:31">(<argument pos:start="101:27" pos:end="101:30"><expr pos:start="101:27" pos:end="101:30"><name pos:start="101:27" pos:end="101:30">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="107:13" pos:end="109:56"><expr pos:start="107:13" pos:end="109:55"><call pos:start="107:13" pos:end="109:55"><name pos:start="107:13" pos:end="107:17">DEBUG</name><argument_list pos:start="107:18" pos:end="109:55">(<argument pos:start="107:19" pos:end="109:31"><expr pos:start="107:19" pos:end="109:31"><literal type="string" pos:start="107:19" pos:end="107:29">"in data=%"</literal> <name pos:start="107:31" pos:end="107:36">PRIx64</name> <literal type="string" pos:start="107:38" pos:end="107:57">", size=%d, e_phys="</literal> <name pos:start="107:59" pos:end="107:72">TARGET_FMT_plx</name>

                  <literal type="string" pos:start="109:19" pos:end="109:31">", host=%x\n"</literal></expr></argument>, <argument pos:start="109:34" pos:end="109:36"><expr pos:start="109:34" pos:end="109:36"><name pos:start="109:34" pos:end="109:36">val</name></expr></argument>, <argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">size</name></expr></argument>, <argument pos:start="109:45" pos:end="109:48"><expr pos:start="109:45" pos:end="109:48"><name pos:start="109:45" pos:end="109:48">addr</name></expr></argument>, <argument pos:start="109:51" pos:end="109:54"><expr pos:start="109:51" pos:end="109:54"><name pos:start="109:51" pos:end="109:54">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
