<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24043.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">do_branch_reg</name><parameter_list pos:start="1:26" pos:end="3:50">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">dc</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:51">int32_t</name></type> <name pos:start="1:53" pos:end="1:58">offset</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:68">uint32_t</name></type> <name pos:start="1:70" pos:end="1:73">insn</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:37"><decl pos:start="3:27" pos:end="3:37"><type pos:start="3:27" pos:end="3:37"><name pos:start="3:27" pos:end="3:30">TCGv</name></type> <name pos:start="3:32" pos:end="3:37">r_cond</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:49"><decl pos:start="3:40" pos:end="3:49"><type pos:start="3:40" pos:end="3:49"><name pos:start="3:40" pos:end="3:43">TCGv</name></type> <name pos:start="3:45" pos:end="3:49">r_reg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">cond</name> <init pos:start="7:23" pos:end="7:50">= <expr pos:start="7:25" pos:end="7:50"><call pos:start="7:25" pos:end="7:50"><name pos:start="7:25" pos:end="7:36">GET_FIELD_SP</name><argument_list pos:start="7:37" pos:end="7:50">(<argument pos:start="7:38" pos:end="7:41"><expr pos:start="7:38" pos:end="7:41"><name pos:start="7:38" pos:end="7:41">insn</name></expr></argument>, <argument pos:start="7:44" pos:end="7:45"><expr pos:start="7:44" pos:end="7:45"><literal type="number" pos:start="7:44" pos:end="7:45">25</literal></expr></argument>, <argument pos:start="7:48" pos:end="7:49"><expr pos:start="7:48" pos:end="7:49"><literal type="number" pos:start="7:48" pos:end="7:49">27</literal></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="7:53" pos:end="7:74"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:53" pos:end="7:53">a</name> <init pos:start="7:55" pos:end="7:74">= <expr pos:start="7:57" pos:end="7:74"><operator pos:start="7:57" pos:end="7:57">(</operator><name pos:start="7:58" pos:end="7:61">insn</name> <operator pos:start="7:63" pos:end="7:63">&amp;</operator> <operator pos:start="7:65" pos:end="7:65">(</operator><literal type="number" pos:start="7:66" pos:end="7:66">1</literal> <operator pos:start="7:68" pos:end="7:69">&lt;&lt;</operator> <literal type="number" pos:start="7:71" pos:end="7:72">29</literal><operator pos:start="7:73" pos:end="7:73">)</operator><operator pos:start="7:74" pos:end="7:74">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:23">target</name> <init pos:start="9:25" pos:end="9:41">= <expr pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:28">dc</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">pc</name></name> <operator pos:start="9:34" pos:end="9:34">+</operator> <name pos:start="9:36" pos:end="9:41">offset</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:14">flush_cond</name><argument_list pos:start="13:15" pos:end="13:26">(<argument pos:start="13:16" pos:end="13:17"><expr pos:start="13:16" pos:end="13:17"><name pos:start="13:16" pos:end="13:17">dc</name></expr></argument>, <argument pos:start="13:20" pos:end="13:25"><expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">r_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><call pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:16">gen_cond_reg</name><argument_list pos:start="15:17" pos:end="15:37">(<argument pos:start="15:18" pos:end="15:23"><expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23">r_cond</name></expr></argument>, <argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">cond</name></expr></argument>, <argument pos:start="15:32" pos:end="15:36"><expr pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:36">r_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:10">(<expr pos:start="17:9" pos:end="17:9"><name pos:start="17:9" pos:end="17:9">a</name></expr>)</condition> <block pos:start="17:12" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:22">

        <expr_stmt pos:start="19:9" pos:end="19:50"><expr pos:start="19:9" pos:end="19:49"><call pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:20">gen_branch_a</name><argument_list pos:start="19:21" pos:end="19:49">(<argument pos:start="19:22" pos:end="19:23"><expr pos:start="19:22" pos:end="19:23"><name pos:start="19:22" pos:end="19:23">dc</name></expr></argument>, <argument pos:start="19:26" pos:end="19:31"><expr pos:start="19:26" pos:end="19:31"><name pos:start="19:26" pos:end="19:31">target</name></expr></argument>, <argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:35">dc</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:40">npc</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:48"><expr pos:start="19:43" pos:end="19:48"><name pos:start="19:43" pos:end="19:48">r_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:10">dc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">is_br</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="33:5">else <block pos:start="23:12" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:26">

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:10">dc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:14">pc</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:19">dc</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:24">npc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">dc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:19">jump_pc</name><index pos:start="27:20" pos:end="27:22">[<expr pos:start="27:21" pos:end="27:21"><literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>]</index></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:31">target</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:10">dc</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:19">jump_pc</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>]</index></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:32"><name pos:start="29:26" pos:end="29:27">dc</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:32">npc</name></name> <operator pos:start="29:34" pos:end="29:34">+</operator> <literal type="number" pos:start="29:36" pos:end="29:36">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:10">dc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">npc</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:25">JUMP_PC</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
