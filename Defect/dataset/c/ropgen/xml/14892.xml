<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14892.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_blk_handle_flush</name><parameter_list pos:start="1:36" pos:end="3:24">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:48">BlockRequest</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">blkreq</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:73">num_writes</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:23"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:18">VirtIOBlockReq</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:23">req</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverAIOCB</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">acb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:7">/*

     * Make sure all outstanding writes are posted to the backing device.

     */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:19">num_writes</name> <operator pos:start="17:21" pos:end="17:21">&gt;</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>)</condition> <block pos:start="17:26" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:57">

        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:21">do_multiwrite</name><argument_list pos:start="19:22" pos:end="19:56">(<argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:25">req</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:30">dev</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">bs</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><name pos:start="19:37" pos:end="19:42">blkreq</name></expr></argument>, <argument pos:start="19:45" pos:end="19:55"><expr pos:start="19:45" pos:end="19:55"><operator pos:start="19:45" pos:end="19:45">*</operator><name pos:start="19:46" pos:end="19:55">num_writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:15">num_writes</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:71"><expr pos:start="27:5" pos:end="27:70"><name pos:start="27:5" pos:end="27:7">acb</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:70"><name pos:start="27:11" pos:end="27:24">bdrv_aio_flush</name><argument_list pos:start="27:25" pos:end="27:70">(<argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:28">req</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:33">dev</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:37">bs</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:64"><expr pos:start="27:40" pos:end="27:64"><name pos:start="27:40" pos:end="27:64">virtio_blk_flush_complete</name></expr></argument>, <argument pos:start="27:67" pos:end="27:69"><expr pos:start="27:67" pos:end="27:69"><name pos:start="27:67" pos:end="27:69">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">acb</name></expr>)</condition> <block pos:start="29:15" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:57">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:31">virtio_blk_req_complete</name><argument_list pos:start="31:32" pos:end="31:56">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">req</name></expr></argument>, <argument pos:start="31:38" pos:end="31:55"><expr pos:start="31:38" pos:end="31:55"><name pos:start="31:38" pos:end="31:55">VIRTIO_BLK_S_IOERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
