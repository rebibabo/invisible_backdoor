<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25019.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">kvm_init_irq_routing</name><parameter_list pos:start="1:33" pos:end="1:45">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:41">KVMState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:33">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">gsi_count</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:60"><expr pos:start="9:5" pos:end="9:59"><name pos:start="9:5" pos:end="9:13">gsi_count</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:59"><name pos:start="9:17" pos:end="9:35">kvm_check_extension</name><argument_list pos:start="9:36" pos:end="9:59">(<argument pos:start="9:37" pos:end="9:37"><expr pos:start="9:37" pos:end="9:37"><name pos:start="9:37" pos:end="9:37">s</name></expr></argument>, <argument pos:start="9:40" pos:end="9:58"><expr pos:start="9:40" pos:end="9:58"><name pos:start="9:40" pos:end="9:58">KVM_CAP_IRQ_ROUTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="35:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:17">gsi_count</name> <operator pos:start="11:19" pos:end="11:19">&gt;</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>)</condition> <block pos:start="11:24" pos:end="35:5">{<block_content pos:start="13:9" pos:end="33:9">

        <decl_stmt pos:start="13:9" pos:end="13:33"><decl pos:start="13:9" pos:end="13:29"><type pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:16">unsigned</name> <name pos:start="13:18" pos:end="13:20">int</name></type> <name pos:start="13:22" pos:end="13:29">gsi_bits</name></decl>, <decl pos:start="13:32" pos:end="13:32"><type ref="prev" pos:start="13:9" pos:end="13:20"/><name pos:start="13:32" pos:end="13:32">i</name></decl>;</decl_stmt>



        <comment type="block" pos:start="17:9" pos:end="17:54">/* Round up so we can search ints using ffs */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:16">gsi_bits</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:39"><name pos:start="19:20" pos:end="19:24">ALIGN</name><argument_list pos:start="19:25" pos:end="19:39">(<argument pos:start="19:26" pos:end="19:34"><expr pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:34">gsi_count</name></expr></argument>, <argument pos:start="19:37" pos:end="19:38"><expr pos:start="19:37" pos:end="19:38"><literal type="number" pos:start="19:37" pos:end="19:38">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:26">used_gsi_bitmap</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <call pos:start="21:30" pos:end="21:52"><name pos:start="21:30" pos:end="21:38">g_malloc0</name><argument_list pos:start="21:39" pos:end="21:52">(<argument pos:start="21:40" pos:end="21:51"><expr pos:start="21:40" pos:end="21:51"><name pos:start="21:40" pos:end="21:47">gsi_bits</name> <operator pos:start="21:49" pos:end="21:49">/</operator> <literal type="number" pos:start="21:51" pos:end="21:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">max_gsi</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:29">gsi_bits</name></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:60">/* Mark any over-allocated bits as already in use */</comment>

        <for pos:start="29:9" pos:end="33:9">for <control pos:start="29:13" pos:end="29:46">(<init pos:start="29:14" pos:end="29:27"><expr pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:26">gsi_count</name></expr>;</init> <condition pos:start="29:29" pos:end="29:41"><expr pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:29">i</name> <operator pos:start="29:31" pos:end="29:31">&lt;</operator> <name pos:start="29:33" pos:end="29:40">gsi_bits</name></expr>;</condition> <incr pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:43">i</name><operator pos:start="29:44" pos:end="29:45">++</operator></expr></incr>)</control> <block pos:start="29:48" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:26">

            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><call pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:19">set_gsi</name><argument_list pos:start="31:20" pos:end="31:25">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">s</name></expr></argument>, <argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:17">irq_routes</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:53"><name pos:start="39:21" pos:end="39:29">g_malloc0</name><argument_list pos:start="39:30" pos:end="39:53">(<argument pos:start="39:31" pos:end="39:52"><expr pos:start="39:31" pos:end="39:52"><sizeof pos:start="39:31" pos:end="39:52">sizeof<argument_list pos:start="39:37" pos:end="39:52">(<argument pos:start="39:38" pos:end="39:51"><expr pos:start="39:38" pos:end="39:51"><operator pos:start="39:38" pos:end="39:38">*</operator><name pos:start="39:39" pos:end="39:51"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:51">irq_routes</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:30">nr_allocated_irq_routes</name></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:29">kvm_arch_init_irq_routing</name><argument_list pos:start="45:30" pos:end="45:32">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
