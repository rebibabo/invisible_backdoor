<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9202.c" pos:tabs="8"><function pos:start="1:1" pos:end="585:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">rgb24toyv12</name>)<parameter_list pos:start="1:39" pos:end="5:88">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">src</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">ydst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:81">uint8_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:87">udst</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:102"><decl pos:start="1:90" pos:end="1:102"><type pos:start="1:90" pos:end="1:102"><name pos:start="1:90" pos:end="1:96">uint8_t</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:102">vdst</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:49"><decl pos:start="3:40" pos:end="3:49"><type pos:start="3:40" pos:end="3:49"><name pos:start="3:40" pos:end="3:43">long</name></type> <name pos:start="3:45" pos:end="3:49">width</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:62"><decl pos:start="3:52" pos:end="3:62"><type pos:start="3:52" pos:end="3:62"><name pos:start="3:52" pos:end="3:55">long</name></type> <name pos:start="3:57" pos:end="3:62">height</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:53"><decl pos:start="5:40" pos:end="5:53"><type pos:start="5:40" pos:end="5:53"><name pos:start="5:40" pos:end="5:43">long</name></type> <name pos:start="5:45" pos:end="5:53">lumStride</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:71"><decl pos:start="5:56" pos:end="5:71"><type pos:start="5:56" pos:end="5:71"><name pos:start="5:56" pos:end="5:59">long</name></type> <name pos:start="5:61" pos:end="5:71">chromStride</name></decl></parameter>, <parameter pos:start="5:74" pos:end="5:87"><decl pos:start="5:74" pos:end="5:87"><type pos:start="5:74" pos:end="5:87"><name pos:start="5:74" pos:end="5:77">long</name></type> <name pos:start="5:79" pos:end="5:87">srcStride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="585:1">{<block_content pos:start="9:5" pos:end="583:5">

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">long</name></type> <name pos:start="9:10" pos:end="9:10">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">x86_reg</name></type> <name pos:start="11:19" pos:end="11:28">chromWidth</name><init pos:start="11:29" pos:end="11:38">= <expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:35">width</name><operator pos:start="11:36" pos:end="11:37">&gt;&gt;</operator><literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="13:1" pos:end="13:24">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <for pos:start="15:5" pos:end="471:5">for <control pos:start="15:9" pos:end="15:31">(<init pos:start="15:10" pos:end="15:13"><expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:10">y</name><operator pos:start="15:11" pos:end="15:11">=</operator><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</init> <condition pos:start="15:15" pos:end="15:25"><expr pos:start="15:15" pos:end="15:24"><name pos:start="15:15" pos:end="15:15">y</name><operator pos:start="15:16" pos:end="15:16">&lt;</operator><name pos:start="15:17" pos:end="15:22">height</name><operator pos:start="15:23" pos:end="15:23">-</operator><literal type="number" pos:start="15:24" pos:end="15:24">2</literal></expr>;</condition> <incr pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:27">y</name><operator pos:start="15:28" pos:end="15:29">+=</operator><literal type="number" pos:start="15:30" pos:end="15:30">2</literal></expr></incr>)</control> <block pos:start="15:33" pos:end="471:5">{<block_content pos:start="17:9" pos:end="469:28">

        <decl_stmt pos:start="17:9" pos:end="17:15"><decl pos:start="17:9" pos:end="17:14"><type pos:start="17:9" pos:end="17:12"><name pos:start="17:9" pos:end="17:12">long</name></type> <name pos:start="17:14" pos:end="17:14">i</name></decl>;</decl_stmt>

        <for pos:start="19:9" pos:end="163:9">for <control pos:start="19:13" pos:end="19:27">(<init pos:start="19:14" pos:end="19:17"><expr pos:start="19:14" pos:end="19:16"><name pos:start="19:14" pos:end="19:14">i</name><operator pos:start="19:15" pos:end="19:15">=</operator><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</init> <condition pos:start="19:19" pos:end="19:22"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:19">i</name><operator pos:start="19:20" pos:end="19:20">&lt;</operator><literal type="number" pos:start="19:21" pos:end="19:21">2</literal></expr>;</condition> <incr pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:24">i</name><operator pos:start="19:25" pos:end="19:26">++</operator></expr></incr>)</control> <block pos:start="19:29" pos:end="163:9">{<block_content pos:start="21:13" pos:end="161:30">

            <asm pos:start="21:13" pos:end="157:14">__asm__ <specifier pos:start="21:21" pos:end="21:28">volatile</specifier>(

                "mov                        %2, %%"REG_a"   \n\t"

                "movq  "MANGLE(ff_bgr2YCoeff)", %%mm6       \n\t"

                "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

                "pxor                    %%mm7, %%mm7       \n\t"

                "lea (%%"REG_a", %%"REG_a", 2), %%"REG_d"   \n\t"

                ".p2align                    4              \n\t"

                "1:                                         \n\t"

                PREFETCH"    64(%0, %%"REG_d")              \n\t"

                "movd          (%0, %%"REG_d"), %%mm0       \n\t"

                "movd         3(%0, %%"REG_d"), %%mm1       \n\t"

                "punpcklbw               %%mm7, %%mm0       \n\t"

                "punpcklbw               %%mm7, %%mm1       \n\t"

                "movd         6(%0, %%"REG_d"), %%mm2       \n\t"

                "movd         9(%0, %%"REG_d"), %%mm3       \n\t"

                "punpcklbw               %%mm7, %%mm2       \n\t"

                "punpcklbw               %%mm7, %%mm3       \n\t"

                "pmaddwd                 %%mm6, %%mm0       \n\t"

                "pmaddwd                 %%mm6, %%mm1       \n\t"

                "pmaddwd                 %%mm6, %%mm2       \n\t"

                "pmaddwd                 %%mm6, %%mm3       \n\t"

<cpp:ifndef pos:start="63:1" pos:end="63:21">#<cpp:directive pos:start="63:2" pos:end="63:7">ifndef</cpp:directive> <name pos:start="63:9" pos:end="63:21">FAST_BGR2YV12</name></cpp:ifndef>

                "psrad                      $8, %%mm0       \n\t"

                "psrad                      $8, %%mm1       \n\t"

                "psrad                      $8, %%mm2       \n\t"

                "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

                "packssdw                %%mm1, %%mm0       \n\t"

                "packssdw                %%mm3, %%mm2       \n\t"

                "pmaddwd                 %%mm5, %%mm0       \n\t"

                "pmaddwd                 %%mm5, %%mm2       \n\t"

                "packssdw                %%mm2, %%mm0       \n\t"

                "psraw                      $7, %%mm0       \n\t"



                "movd        12(%0, %%"REG_d"), %%mm4       \n\t"

                "movd        15(%0, %%"REG_d"), %%mm1       \n\t"

                "punpcklbw               %%mm7, %%mm4       \n\t"

                "punpcklbw               %%mm7, %%mm1       \n\t"

                "movd        18(%0, %%"REG_d"), %%mm2       \n\t"

                "movd        21(%0, %%"REG_d"), %%mm3       \n\t"

                "punpcklbw               %%mm7, %%mm2       \n\t"

                "punpcklbw               %%mm7, %%mm3       \n\t"

                "pmaddwd                 %%mm6, %%mm4       \n\t"

                "pmaddwd                 %%mm6, %%mm1       \n\t"

                "pmaddwd                 %%mm6, %%mm2       \n\t"

                "pmaddwd                 %%mm6, %%mm3       \n\t"

<cpp:ifndef pos:start="113:1" pos:end="113:21">#<cpp:directive pos:start="113:2" pos:end="113:7">ifndef</cpp:directive> <name pos:start="113:9" pos:end="113:21">FAST_BGR2YV12</name></cpp:ifndef>

                "psrad                      $8, %%mm4       \n\t"

                "psrad                      $8, %%mm1       \n\t"

                "psrad                      $8, %%mm2       \n\t"

                "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

                "packssdw                %%mm1, %%mm4       \n\t"

                "packssdw                %%mm3, %%mm2       \n\t"

                "pmaddwd                 %%mm5, %%mm4       \n\t"

                "pmaddwd                 %%mm5, %%mm2       \n\t"

                "add                       $24, %%"REG_d"   \n\t"

                "packssdw                %%mm2, %%mm4       \n\t"

                "psraw                      $7, %%mm4       \n\t"



                "packuswb                %%mm4, %%mm0       \n\t"

                "paddusb "MANGLE(ff_bgr2YOffset)", %%mm0    \n\t"



                MOVNTQ"                  %%mm0, (%1, %%"REG_a") \n\t"

                "add                        $8,      %%"REG_a"  \n\t"

                " js                        1b                  \n\t"

                : : "r" (src+width*3), "r" (ydst+width), "g" ((x86_reg)-width)

                : "%"REG_a, "%"REG_d

            );</asm>

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:16">ydst</name> <operator pos:start="159:18" pos:end="159:19">+=</operator> <name pos:start="159:21" pos:end="159:29">lumStride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:30"><expr pos:start="161:13" pos:end="161:29"><name pos:start="161:13" pos:end="161:15">src</name>  <operator pos:start="161:18" pos:end="161:19">+=</operator> <name pos:start="161:21" pos:end="161:29">srcStride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="165:9" pos:end="165:27"><expr pos:start="165:9" pos:end="165:26"><name pos:start="165:9" pos:end="165:11">src</name> <operator pos:start="165:13" pos:end="165:14">-=</operator> <name pos:start="165:16" pos:end="165:24">srcStride</name><operator pos:start="165:25" pos:end="165:25">*</operator><literal type="number" pos:start="165:26" pos:end="165:26">2</literal></expr>;</expr_stmt>

        <asm pos:start="167:9" pos:end="461:10">__asm__ <specifier pos:start="167:17" pos:end="167:24">volatile</specifier>(

            "mov                        %4, %%"REG_a"   \n\t"

            "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

            "movq  "MANGLE(ff_bgr2UCoeff)", %%mm6       \n\t"

            "pxor                    %%mm7, %%mm7       \n\t"

            "lea (%%"REG_a", %%"REG_a", 2), %%"REG_d"   \n\t"

            "add                 %%"REG_d", %%"REG_d"   \n\t"

            ".p2align                    4              \n\t"

            "1:                                         \n\t"

            PREFETCH"    64(%0, %%"REG_d")              \n\t"

            PREFETCH"    64(%1, %%"REG_d")              \n\t"

<cpp:if pos:start="189:1" pos:end="189:54">#<cpp:directive pos:start="189:2" pos:end="189:3">if</cpp:directive> <expr pos:start="189:5" pos:end="189:54"><name pos:start="189:5" pos:end="189:25">COMPILE_TEMPLATE_MMX2</name> <operator pos:start="189:27" pos:end="189:28">||</operator> <name pos:start="189:30" pos:end="189:54">COMPILE_TEMPLATE_AMD3DNOW</name></expr></cpp:if>

            "movq          (%0, %%"REG_d"), %%mm0       \n\t"

            "movq          (%1, %%"REG_d"), %%mm1       \n\t"

            "movq         6(%0, %%"REG_d"), %%mm2       \n\t"

            "movq         6(%1, %%"REG_d"), %%mm3       \n\t"

            PAVGB"                   %%mm1, %%mm0       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "movq                    %%mm0, %%mm1       \n\t"

            "movq                    %%mm2, %%mm3       \n\t"

            "psrlq                     $24, %%mm0       \n\t"

            "psrlq                     $24, %%mm2       \n\t"

            PAVGB"                   %%mm1, %%mm0       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm0       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

<cpp:else pos:start="219:1" pos:end="219:5">#<cpp:directive pos:start="219:2" pos:end="219:5">else</cpp:directive></cpp:else>

            "movd          (%0, %%"REG_d"), %%mm0       \n\t"

            "movd          (%1, %%"REG_d"), %%mm1       \n\t"

            "movd         3(%0, %%"REG_d"), %%mm2       \n\t"

            "movd         3(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm0       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm0       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm2, %%mm0       \n\t"

            "movd         6(%0, %%"REG_d"), %%mm4       \n\t"

            "movd         6(%1, %%"REG_d"), %%mm1       \n\t"

            "movd         9(%0, %%"REG_d"), %%mm2       \n\t"

            "movd         9(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm4       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm4, %%mm2       \n\t"

            "psrlw                      $2, %%mm0       \n\t"

            "psrlw                      $2, %%mm2       \n\t"

<cpp:endif pos:start="269:1" pos:end="269:6">#<cpp:directive pos:start="269:2" pos:end="269:6">endif</cpp:directive></cpp:endif>

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm1       \n\t"

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm3       \n\t"



            "pmaddwd                 %%mm0, %%mm1       \n\t"

            "pmaddwd                 %%mm2, %%mm3       \n\t"

            "pmaddwd                 %%mm6, %%mm0       \n\t"

            "pmaddwd                 %%mm6, %%mm2       \n\t"

<cpp:ifndef pos:start="285:1" pos:end="285:21">#<cpp:directive pos:start="285:2" pos:end="285:7">ifndef</cpp:directive> <name pos:start="285:9" pos:end="285:21">FAST_BGR2YV12</name></cpp:ifndef>

            "psrad                      $8, %%mm0       \n\t"

            "psrad                      $8, %%mm1       \n\t"

            "psrad                      $8, %%mm2       \n\t"

            "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="295:1" pos:end="295:6">#<cpp:directive pos:start="295:2" pos:end="295:6">endif</cpp:directive></cpp:endif>

            "packssdw                %%mm2, %%mm0       \n\t"

            "packssdw                %%mm3, %%mm1       \n\t"

            "pmaddwd                 %%mm5, %%mm0       \n\t"

            "pmaddwd                 %%mm5, %%mm1       \n\t"

            "packssdw                %%mm1, %%mm0       \n\t" <comment type="line" pos:start="305:63" pos:end="305:76">// V1 V0 U1 U0</comment>

            "psraw                      $7, %%mm0       \n\t"



<cpp:if pos:start="311:1" pos:end="311:54">#<cpp:directive pos:start="311:2" pos:end="311:3">if</cpp:directive> <expr pos:start="311:5" pos:end="311:54"><name pos:start="311:5" pos:end="311:25">COMPILE_TEMPLATE_MMX2</name> <operator pos:start="311:27" pos:end="311:28">||</operator> <name pos:start="311:30" pos:end="311:54">COMPILE_TEMPLATE_AMD3DNOW</name></expr></cpp:if>

            "movq        12(%0, %%"REG_d"), %%mm4       \n\t"

            "movq        12(%1, %%"REG_d"), %%mm1       \n\t"

            "movq        18(%0, %%"REG_d"), %%mm2       \n\t"

            "movq        18(%1, %%"REG_d"), %%mm3       \n\t"

            PAVGB"                   %%mm1, %%mm4       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "movq                    %%mm4, %%mm1       \n\t"

            "movq                    %%mm2, %%mm3       \n\t"

            "psrlq                     $24, %%mm4       \n\t"

            "psrlq                     $24, %%mm2       \n\t"

            PAVGB"                   %%mm1, %%mm4       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

<cpp:else pos:start="341:1" pos:end="341:5">#<cpp:directive pos:start="341:2" pos:end="341:5">else</cpp:directive></cpp:else>

            "movd        12(%0, %%"REG_d"), %%mm4       \n\t"

            "movd        12(%1, %%"REG_d"), %%mm1       \n\t"

            "movd        15(%0, %%"REG_d"), %%mm2       \n\t"

            "movd        15(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm4       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm2, %%mm4       \n\t"

            "movd        18(%0, %%"REG_d"), %%mm5       \n\t"

            "movd        18(%1, %%"REG_d"), %%mm1       \n\t"

            "movd        21(%0, %%"REG_d"), %%mm2       \n\t"

            "movd        21(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm5       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm5       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm5, %%mm2       \n\t"

            "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

            "psrlw                      $2, %%mm4       \n\t"

            "psrlw                      $2, %%mm2       \n\t"

<cpp:endif pos:start="393:1" pos:end="393:6">#<cpp:directive pos:start="393:2" pos:end="393:6">endif</cpp:directive></cpp:endif>

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm1       \n\t"

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm3       \n\t"



            "pmaddwd                 %%mm4, %%mm1       \n\t"

            "pmaddwd                 %%mm2, %%mm3       \n\t"

            "pmaddwd                 %%mm6, %%mm4       \n\t"

            "pmaddwd                 %%mm6, %%mm2       \n\t"

<cpp:ifndef pos:start="409:1" pos:end="409:21">#<cpp:directive pos:start="409:2" pos:end="409:7">ifndef</cpp:directive> <name pos:start="409:9" pos:end="409:21">FAST_BGR2YV12</name></cpp:ifndef>

            "psrad                      $8, %%mm4       \n\t"

            "psrad                      $8, %%mm1       \n\t"

            "psrad                      $8, %%mm2       \n\t"

            "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="419:1" pos:end="419:6">#<cpp:directive pos:start="419:2" pos:end="419:6">endif</cpp:directive></cpp:endif>

            "packssdw                %%mm2, %%mm4       \n\t"

            "packssdw                %%mm3, %%mm1       \n\t"

            "pmaddwd                 %%mm5, %%mm4       \n\t"

            "pmaddwd                 %%mm5, %%mm1       \n\t"

            "add                       $24, %%"REG_d"   \n\t"

            "packssdw                %%mm1, %%mm4       \n\t" <comment type="line" pos:start="431:63" pos:end="431:76">// V3 V2 U3 U2</comment>

            "psraw                      $7, %%mm4       \n\t"



            "movq                    %%mm0, %%mm1           \n\t"

            "punpckldq               %%mm4, %%mm0           \n\t"

            "punpckhdq               %%mm4, %%mm1           \n\t"

            "packsswb                %%mm1, %%mm0           \n\t"

            "paddb "MANGLE(ff_bgr2UVOffset)", %%mm0         \n\t"

            "movd                    %%mm0, (%2, %%"REG_a") \n\t"

            "punpckhdq               %%mm0, %%mm0           \n\t"

            "movd                    %%mm0, (%3, %%"REG_a") \n\t"

            "add                        $4, %%"REG_a"       \n\t"

            " js                        1b                  \n\t"

            : : "r" (src+chromWidth*6), "r" (src+srcStride+chromWidth*6), "r" (udst+chromWidth), "r" (vdst+chromWidth), "g" (-chromWidth)

            : "%"REG_a, "%"REG_d

        );</asm>



        <expr_stmt pos:start="465:9" pos:end="465:28"><expr pos:start="465:9" pos:end="465:27"><name pos:start="465:9" pos:end="465:12">udst</name> <operator pos:start="465:14" pos:end="465:15">+=</operator> <name pos:start="465:17" pos:end="465:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:28"><expr pos:start="467:9" pos:end="467:27"><name pos:start="467:9" pos:end="467:12">vdst</name> <operator pos:start="467:14" pos:end="467:15">+=</operator> <name pos:start="467:17" pos:end="467:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:28"><expr pos:start="469:9" pos:end="469:27"><name pos:start="469:9" pos:end="469:11">src</name>  <operator pos:start="469:14" pos:end="469:15">+=</operator> <name pos:start="469:17" pos:end="469:25">srcStride</name><operator pos:start="469:26" pos:end="469:26">*</operator><literal type="number" pos:start="469:27" pos:end="469:27">2</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <asm pos:start="475:5" pos:end="482:0">__asm__ <specifier pos:start="475:13" pos:end="475:20">volatile</specifier>(EMMS"       \n\t"

                     SFENCE"     \n\t"

                     :::"memory");</asm>

<cpp:else pos:start="481:1" pos:end="481:5">#<cpp:directive pos:start="481:2" pos:end="481:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="483:5" pos:end="486:0"><expr pos:start="483:5" pos:end="483:7"><name pos:start="483:5" pos:end="483:5">y</name><operator pos:start="483:6" pos:end="483:6">=</operator><literal type="number" pos:start="483:7" pos:end="483:7">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="485:1" pos:end="485:6">#<cpp:directive pos:start="485:2" pos:end="485:6">endif</cpp:directive></cpp:endif>

    <for pos:start="487:5" pos:end="583:5">for <control pos:start="487:9" pos:end="487:26">(<init pos:start="487:10" pos:end="487:10">;</init> <condition pos:start="487:12" pos:end="487:20"><expr pos:start="487:12" pos:end="487:19"><name pos:start="487:12" pos:end="487:12">y</name><operator pos:start="487:13" pos:end="487:13">&lt;</operator><name pos:start="487:14" pos:end="487:19">height</name></expr>;</condition> <incr pos:start="487:22" pos:end="487:25"><expr pos:start="487:22" pos:end="487:25"><name pos:start="487:22" pos:end="487:22">y</name><operator pos:start="487:23" pos:end="487:24">+=</operator><literal type="number" pos:start="487:25" pos:end="487:25">2</literal></expr></incr>)</control> <block pos:start="487:28" pos:end="583:5">{<block_content pos:start="489:9" pos:end="581:26">

        <decl_stmt pos:start="489:9" pos:end="489:15"><decl pos:start="489:9" pos:end="489:14"><type pos:start="489:9" pos:end="489:12"><name pos:start="489:9" pos:end="489:12">long</name></type> <name pos:start="489:14" pos:end="489:14">i</name></decl>;</decl_stmt>

        <for pos:start="491:9" pos:end="529:9">for <control pos:start="491:13" pos:end="491:36">(<init pos:start="491:14" pos:end="491:17"><expr pos:start="491:14" pos:end="491:16"><name pos:start="491:14" pos:end="491:14">i</name><operator pos:start="491:15" pos:end="491:15">=</operator><literal type="number" pos:start="491:16" pos:end="491:16">0</literal></expr>;</init> <condition pos:start="491:19" pos:end="491:31"><expr pos:start="491:19" pos:end="491:30"><name pos:start="491:19" pos:end="491:19">i</name><operator pos:start="491:20" pos:end="491:20">&lt;</operator><name pos:start="491:21" pos:end="491:30">chromWidth</name></expr>;</condition> <incr pos:start="491:33" pos:end="491:35"><expr pos:start="491:33" pos:end="491:35"><name pos:start="491:33" pos:end="491:33">i</name><operator pos:start="491:34" pos:end="491:35">++</operator></expr></incr>)</control> <block pos:start="491:38" pos:end="529:9">{<block_content pos:start="493:13" pos:end="527:32">

            <decl_stmt pos:start="493:13" pos:end="493:40"><decl pos:start="493:13" pos:end="493:39"><type pos:start="493:13" pos:end="493:24"><name pos:start="493:13" pos:end="493:20">unsigned</name> <name pos:start="493:22" pos:end="493:24">int</name></type> <name pos:start="493:26" pos:end="493:26">b</name> <init pos:start="493:28" pos:end="493:39">= <expr pos:start="493:30" pos:end="493:39"><name pos:start="493:30" pos:end="493:39"><name pos:start="493:30" pos:end="493:32">src</name><index pos:start="493:33" pos:end="493:39">[<expr pos:start="493:34" pos:end="493:38"><literal type="number" pos:start="493:34" pos:end="493:34">6</literal><operator pos:start="493:35" pos:end="493:35">*</operator><name pos:start="493:36" pos:end="493:36">i</name><operator pos:start="493:37" pos:end="493:37">+</operator><literal type="number" pos:start="493:38" pos:end="493:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="495:13" pos:end="495:40"><decl pos:start="495:13" pos:end="495:39"><type pos:start="495:13" pos:end="495:24"><name pos:start="495:13" pos:end="495:20">unsigned</name> <name pos:start="495:22" pos:end="495:24">int</name></type> <name pos:start="495:26" pos:end="495:26">g</name> <init pos:start="495:28" pos:end="495:39">= <expr pos:start="495:30" pos:end="495:39"><name pos:start="495:30" pos:end="495:39"><name pos:start="495:30" pos:end="495:32">src</name><index pos:start="495:33" pos:end="495:39">[<expr pos:start="495:34" pos:end="495:38"><literal type="number" pos:start="495:34" pos:end="495:34">6</literal><operator pos:start="495:35" pos:end="495:35">*</operator><name pos:start="495:36" pos:end="495:36">i</name><operator pos:start="495:37" pos:end="495:37">+</operator><literal type="number" pos:start="495:38" pos:end="495:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="497:13" pos:end="497:40"><decl pos:start="497:13" pos:end="497:39"><type pos:start="497:13" pos:end="497:24"><name pos:start="497:13" pos:end="497:20">unsigned</name> <name pos:start="497:22" pos:end="497:24">int</name></type> <name pos:start="497:26" pos:end="497:26">r</name> <init pos:start="497:28" pos:end="497:39">= <expr pos:start="497:30" pos:end="497:39"><name pos:start="497:30" pos:end="497:39"><name pos:start="497:30" pos:end="497:32">src</name><index pos:start="497:33" pos:end="497:39">[<expr pos:start="497:34" pos:end="497:38"><literal type="number" pos:start="497:34" pos:end="497:34">6</literal><operator pos:start="497:35" pos:end="497:35">*</operator><name pos:start="497:36" pos:end="497:36">i</name><operator pos:start="497:37" pos:end="497:37">+</operator><literal type="number" pos:start="497:38" pos:end="497:38">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="501:13" pos:end="501:74"><decl pos:start="501:13" pos:end="501:73"><type pos:start="501:13" pos:end="501:24"><name pos:start="501:13" pos:end="501:20">unsigned</name> <name pos:start="501:22" pos:end="501:24">int</name></type> <name pos:start="501:26" pos:end="501:26">Y</name>  <init pos:start="501:29" pos:end="501:73">=  <expr pos:start="501:32" pos:end="501:73"><operator pos:start="501:32" pos:end="501:32">(</operator><operator pos:start="501:33" pos:end="501:33">(</operator><name pos:start="501:34" pos:end="501:35">RY</name><operator pos:start="501:36" pos:end="501:36">*</operator><name pos:start="501:37" pos:end="501:37">r</name> <operator pos:start="501:39" pos:end="501:39">+</operator> <name pos:start="501:41" pos:end="501:42">GY</name><operator pos:start="501:43" pos:end="501:43">*</operator><name pos:start="501:44" pos:end="501:44">g</name> <operator pos:start="501:46" pos:end="501:46">+</operator> <name pos:start="501:48" pos:end="501:49">BY</name><operator pos:start="501:50" pos:end="501:50">*</operator><name pos:start="501:51" pos:end="501:51">b</name><operator pos:start="501:52" pos:end="501:52">)</operator><operator pos:start="501:53" pos:end="501:54">&gt;&gt;</operator><name pos:start="501:55" pos:end="501:67">RGB2YUV_SHIFT</name><operator pos:start="501:68" pos:end="501:68">)</operator> <operator pos:start="501:70" pos:end="501:70">+</operator> <literal type="number" pos:start="501:72" pos:end="501:73">16</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="503:13" pos:end="503:75"><decl pos:start="503:13" pos:end="503:74"><type pos:start="503:13" pos:end="503:24"><name pos:start="503:13" pos:end="503:20">unsigned</name> <name pos:start="503:22" pos:end="503:24">int</name></type> <name pos:start="503:26" pos:end="503:26">V</name>  <init pos:start="503:29" pos:end="503:74">=  <expr pos:start="503:32" pos:end="503:74"><operator pos:start="503:32" pos:end="503:32">(</operator><operator pos:start="503:33" pos:end="503:33">(</operator><name pos:start="503:34" pos:end="503:35">RV</name><operator pos:start="503:36" pos:end="503:36">*</operator><name pos:start="503:37" pos:end="503:37">r</name> <operator pos:start="503:39" pos:end="503:39">+</operator> <name pos:start="503:41" pos:end="503:42">GV</name><operator pos:start="503:43" pos:end="503:43">*</operator><name pos:start="503:44" pos:end="503:44">g</name> <operator pos:start="503:46" pos:end="503:46">+</operator> <name pos:start="503:48" pos:end="503:49">BV</name><operator pos:start="503:50" pos:end="503:50">*</operator><name pos:start="503:51" pos:end="503:51">b</name><operator pos:start="503:52" pos:end="503:52">)</operator><operator pos:start="503:53" pos:end="503:54">&gt;&gt;</operator><name pos:start="503:55" pos:end="503:67">RGB2YUV_SHIFT</name><operator pos:start="503:68" pos:end="503:68">)</operator> <operator pos:start="503:70" pos:end="503:70">+</operator> <literal type="number" pos:start="503:72" pos:end="503:74">128</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="505:13" pos:end="505:75"><decl pos:start="505:13" pos:end="505:74"><type pos:start="505:13" pos:end="505:24"><name pos:start="505:13" pos:end="505:20">unsigned</name> <name pos:start="505:22" pos:end="505:24">int</name></type> <name pos:start="505:26" pos:end="505:26">U</name>  <init pos:start="505:29" pos:end="505:74">=  <expr pos:start="505:32" pos:end="505:74"><operator pos:start="505:32" pos:end="505:32">(</operator><operator pos:start="505:33" pos:end="505:33">(</operator><name pos:start="505:34" pos:end="505:35">RU</name><operator pos:start="505:36" pos:end="505:36">*</operator><name pos:start="505:37" pos:end="505:37">r</name> <operator pos:start="505:39" pos:end="505:39">+</operator> <name pos:start="505:41" pos:end="505:42">GU</name><operator pos:start="505:43" pos:end="505:43">*</operator><name pos:start="505:44" pos:end="505:44">g</name> <operator pos:start="505:46" pos:end="505:46">+</operator> <name pos:start="505:48" pos:end="505:49">BU</name><operator pos:start="505:50" pos:end="505:50">*</operator><name pos:start="505:51" pos:end="505:51">b</name><operator pos:start="505:52" pos:end="505:52">)</operator><operator pos:start="505:53" pos:end="505:54">&gt;&gt;</operator><name pos:start="505:55" pos:end="505:67">RGB2YUV_SHIFT</name><operator pos:start="505:68" pos:end="505:68">)</operator> <operator pos:start="505:70" pos:end="505:70">+</operator> <literal type="number" pos:start="505:72" pos:end="505:74">128</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="509:13" pos:end="509:28"><expr pos:start="509:13" pos:end="509:27"><name pos:start="509:13" pos:end="509:19"><name pos:start="509:13" pos:end="509:16">udst</name><index pos:start="509:17" pos:end="509:19">[<expr pos:start="509:18" pos:end="509:18"><name pos:start="509:18" pos:end="509:18">i</name></expr>]</index></name>     <operator pos:start="509:25" pos:end="509:25">=</operator> <name pos:start="509:27" pos:end="509:27">U</name></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:28"><expr pos:start="511:13" pos:end="511:27"><name pos:start="511:13" pos:end="511:19"><name pos:start="511:13" pos:end="511:16">vdst</name><index pos:start="511:17" pos:end="511:19">[<expr pos:start="511:18" pos:end="511:18"><name pos:start="511:18" pos:end="511:18">i</name></expr>]</index></name>     <operator pos:start="511:25" pos:end="511:25">=</operator> <name pos:start="511:27" pos:end="511:27">V</name></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:28"><expr pos:start="513:13" pos:end="513:27"><name pos:start="513:13" pos:end="513:21"><name pos:start="513:13" pos:end="513:16">ydst</name><index pos:start="513:17" pos:end="513:21">[<expr pos:start="513:18" pos:end="513:20"><literal type="number" pos:start="513:18" pos:end="513:18">2</literal><operator pos:start="513:19" pos:end="513:19">*</operator><name pos:start="513:20" pos:end="513:20">i</name></expr>]</index></name>   <operator pos:start="513:25" pos:end="513:25">=</operator> <name pos:start="513:27" pos:end="513:27">Y</name></expr>;</expr_stmt>



            <expr_stmt pos:start="517:13" pos:end="517:27"><expr pos:start="517:13" pos:end="517:26"><name pos:start="517:13" pos:end="517:13">b</name> <operator pos:start="517:15" pos:end="517:15">=</operator> <name pos:start="517:17" pos:end="517:26"><name pos:start="517:17" pos:end="517:19">src</name><index pos:start="517:20" pos:end="517:26">[<expr pos:start="517:21" pos:end="517:25"><literal type="number" pos:start="517:21" pos:end="517:21">6</literal><operator pos:start="517:22" pos:end="517:22">*</operator><name pos:start="517:23" pos:end="517:23">i</name><operator pos:start="517:24" pos:end="517:24">+</operator><literal type="number" pos:start="517:25" pos:end="517:25">3</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:27"><expr pos:start="519:13" pos:end="519:26"><name pos:start="519:13" pos:end="519:13">g</name> <operator pos:start="519:15" pos:end="519:15">=</operator> <name pos:start="519:17" pos:end="519:26"><name pos:start="519:17" pos:end="519:19">src</name><index pos:start="519:20" pos:end="519:26">[<expr pos:start="519:21" pos:end="519:25"><literal type="number" pos:start="519:21" pos:end="519:21">6</literal><operator pos:start="519:22" pos:end="519:22">*</operator><name pos:start="519:23" pos:end="519:23">i</name><operator pos:start="519:24" pos:end="519:24">+</operator><literal type="number" pos:start="519:25" pos:end="519:25">4</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:27"><expr pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:13">r</name> <operator pos:start="521:15" pos:end="521:15">=</operator> <name pos:start="521:17" pos:end="521:26"><name pos:start="521:17" pos:end="521:19">src</name><index pos:start="521:20" pos:end="521:26">[<expr pos:start="521:21" pos:end="521:25"><literal type="number" pos:start="521:21" pos:end="521:21">6</literal><operator pos:start="521:22" pos:end="521:22">*</operator><name pos:start="521:23" pos:end="521:23">i</name><operator pos:start="521:24" pos:end="521:24">+</operator><literal type="number" pos:start="521:25" pos:end="521:25">5</literal></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="525:13" pos:end="525:61"><expr pos:start="525:13" pos:end="525:60"><name pos:start="525:13" pos:end="525:13">Y</name>  <operator pos:start="525:16" pos:end="525:16">=</operator>  <operator pos:start="525:19" pos:end="525:19">(</operator><operator pos:start="525:20" pos:end="525:20">(</operator><name pos:start="525:21" pos:end="525:22">RY</name><operator pos:start="525:23" pos:end="525:23">*</operator><name pos:start="525:24" pos:end="525:24">r</name> <operator pos:start="525:26" pos:end="525:26">+</operator> <name pos:start="525:28" pos:end="525:29">GY</name><operator pos:start="525:30" pos:end="525:30">*</operator><name pos:start="525:31" pos:end="525:31">g</name> <operator pos:start="525:33" pos:end="525:33">+</operator> <name pos:start="525:35" pos:end="525:36">BY</name><operator pos:start="525:37" pos:end="525:37">*</operator><name pos:start="525:38" pos:end="525:38">b</name><operator pos:start="525:39" pos:end="525:39">)</operator><operator pos:start="525:40" pos:end="525:41">&gt;&gt;</operator><name pos:start="525:42" pos:end="525:54">RGB2YUV_SHIFT</name><operator pos:start="525:55" pos:end="525:55">)</operator> <operator pos:start="525:57" pos:end="525:57">+</operator> <literal type="number" pos:start="525:59" pos:end="525:60">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:32"><expr pos:start="527:13" pos:end="527:31"><name pos:start="527:13" pos:end="527:23"><name pos:start="527:13" pos:end="527:16">ydst</name><index pos:start="527:17" pos:end="527:23">[<expr pos:start="527:18" pos:end="527:22"><literal type="number" pos:start="527:18" pos:end="527:18">2</literal><operator pos:start="527:19" pos:end="527:19">*</operator><name pos:start="527:20" pos:end="527:20">i</name><operator pos:start="527:21" pos:end="527:21">+</operator><literal type="number" pos:start="527:22" pos:end="527:22">1</literal></expr>]</index></name>     <operator pos:start="527:29" pos:end="527:29">=</operator> <name pos:start="527:31" pos:end="527:31">Y</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="531:9" pos:end="531:26"><expr pos:start="531:9" pos:end="531:25"><name pos:start="531:9" pos:end="531:12">ydst</name> <operator pos:start="531:14" pos:end="531:15">+=</operator> <name pos:start="531:17" pos:end="531:25">lumStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:26"><expr pos:start="533:9" pos:end="533:25"><name pos:start="533:9" pos:end="533:11">src</name>  <operator pos:start="533:14" pos:end="533:15">+=</operator> <name pos:start="533:17" pos:end="533:25">srcStride</name></expr>;</expr_stmt>



        <if_stmt pos:start="537:9" pos:end="539:18"><if pos:start="537:9" pos:end="539:18">if<condition pos:start="537:11" pos:end="537:25">(<expr pos:start="537:12" pos:end="537:24"><name pos:start="537:12" pos:end="537:12">y</name><operator pos:start="537:13" pos:end="537:13">+</operator><literal type="number" pos:start="537:14" pos:end="537:14">1</literal> <operator pos:start="537:16" pos:end="537:17">==</operator> <name pos:start="537:19" pos:end="537:24">height</name></expr>)</condition><block type="pseudo" pos:start="539:13" pos:end="539:18"><block_content pos:start="539:13" pos:end="539:18">

            <break pos:start="539:13" pos:end="539:18">break;</break></block_content></block></if></if_stmt>



        <for pos:start="543:9" pos:end="573:9">for <control pos:start="543:13" pos:end="543:36">(<init pos:start="543:14" pos:end="543:17"><expr pos:start="543:14" pos:end="543:16"><name pos:start="543:14" pos:end="543:14">i</name><operator pos:start="543:15" pos:end="543:15">=</operator><literal type="number" pos:start="543:16" pos:end="543:16">0</literal></expr>;</init> <condition pos:start="543:19" pos:end="543:31"><expr pos:start="543:19" pos:end="543:30"><name pos:start="543:19" pos:end="543:19">i</name><operator pos:start="543:20" pos:end="543:20">&lt;</operator><name pos:start="543:21" pos:end="543:30">chromWidth</name></expr>;</condition> <incr pos:start="543:33" pos:end="543:35"><expr pos:start="543:33" pos:end="543:35"><name pos:start="543:33" pos:end="543:33">i</name><operator pos:start="543:34" pos:end="543:35">++</operator></expr></incr>)</control> <block pos:start="543:38" pos:end="573:9">{<block_content pos:start="545:13" pos:end="571:32">

            <decl_stmt pos:start="545:13" pos:end="545:40"><decl pos:start="545:13" pos:end="545:39"><type pos:start="545:13" pos:end="545:24"><name pos:start="545:13" pos:end="545:20">unsigned</name> <name pos:start="545:22" pos:end="545:24">int</name></type> <name pos:start="545:26" pos:end="545:26">b</name> <init pos:start="545:28" pos:end="545:39">= <expr pos:start="545:30" pos:end="545:39"><name pos:start="545:30" pos:end="545:39"><name pos:start="545:30" pos:end="545:32">src</name><index pos:start="545:33" pos:end="545:39">[<expr pos:start="545:34" pos:end="545:38"><literal type="number" pos:start="545:34" pos:end="545:34">6</literal><operator pos:start="545:35" pos:end="545:35">*</operator><name pos:start="545:36" pos:end="545:36">i</name><operator pos:start="545:37" pos:end="545:37">+</operator><literal type="number" pos:start="545:38" pos:end="545:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="547:13" pos:end="547:40"><decl pos:start="547:13" pos:end="547:39"><type pos:start="547:13" pos:end="547:24"><name pos:start="547:13" pos:end="547:20">unsigned</name> <name pos:start="547:22" pos:end="547:24">int</name></type> <name pos:start="547:26" pos:end="547:26">g</name> <init pos:start="547:28" pos:end="547:39">= <expr pos:start="547:30" pos:end="547:39"><name pos:start="547:30" pos:end="547:39"><name pos:start="547:30" pos:end="547:32">src</name><index pos:start="547:33" pos:end="547:39">[<expr pos:start="547:34" pos:end="547:38"><literal type="number" pos:start="547:34" pos:end="547:34">6</literal><operator pos:start="547:35" pos:end="547:35">*</operator><name pos:start="547:36" pos:end="547:36">i</name><operator pos:start="547:37" pos:end="547:37">+</operator><literal type="number" pos:start="547:38" pos:end="547:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="549:13" pos:end="549:40"><decl pos:start="549:13" pos:end="549:39"><type pos:start="549:13" pos:end="549:24"><name pos:start="549:13" pos:end="549:20">unsigned</name> <name pos:start="549:22" pos:end="549:24">int</name></type> <name pos:start="549:26" pos:end="549:26">r</name> <init pos:start="549:28" pos:end="549:39">= <expr pos:start="549:30" pos:end="549:39"><name pos:start="549:30" pos:end="549:39"><name pos:start="549:30" pos:end="549:32">src</name><index pos:start="549:33" pos:end="549:39">[<expr pos:start="549:34" pos:end="549:38"><literal type="number" pos:start="549:34" pos:end="549:34">6</literal><operator pos:start="549:35" pos:end="549:35">*</operator><name pos:start="549:36" pos:end="549:36">i</name><operator pos:start="549:37" pos:end="549:37">+</operator><literal type="number" pos:start="549:38" pos:end="549:38">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="553:13" pos:end="553:74"><decl pos:start="553:13" pos:end="553:73"><type pos:start="553:13" pos:end="553:24"><name pos:start="553:13" pos:end="553:20">unsigned</name> <name pos:start="553:22" pos:end="553:24">int</name></type> <name pos:start="553:26" pos:end="553:26">Y</name>  <init pos:start="553:29" pos:end="553:73">=  <expr pos:start="553:32" pos:end="553:73"><operator pos:start="553:32" pos:end="553:32">(</operator><operator pos:start="553:33" pos:end="553:33">(</operator><name pos:start="553:34" pos:end="553:35">RY</name><operator pos:start="553:36" pos:end="553:36">*</operator><name pos:start="553:37" pos:end="553:37">r</name> <operator pos:start="553:39" pos:end="553:39">+</operator> <name pos:start="553:41" pos:end="553:42">GY</name><operator pos:start="553:43" pos:end="553:43">*</operator><name pos:start="553:44" pos:end="553:44">g</name> <operator pos:start="553:46" pos:end="553:46">+</operator> <name pos:start="553:48" pos:end="553:49">BY</name><operator pos:start="553:50" pos:end="553:50">*</operator><name pos:start="553:51" pos:end="553:51">b</name><operator pos:start="553:52" pos:end="553:52">)</operator><operator pos:start="553:53" pos:end="553:54">&gt;&gt;</operator><name pos:start="553:55" pos:end="553:67">RGB2YUV_SHIFT</name><operator pos:start="553:68" pos:end="553:68">)</operator> <operator pos:start="553:70" pos:end="553:70">+</operator> <literal type="number" pos:start="553:72" pos:end="553:73">16</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="557:13" pos:end="557:30"><expr pos:start="557:13" pos:end="557:29"><name pos:start="557:13" pos:end="557:21"><name pos:start="557:13" pos:end="557:16">ydst</name><index pos:start="557:17" pos:end="557:21">[<expr pos:start="557:18" pos:end="557:20"><literal type="number" pos:start="557:18" pos:end="557:18">2</literal><operator pos:start="557:19" pos:end="557:19">*</operator><name pos:start="557:20" pos:end="557:20">i</name></expr>]</index></name>     <operator pos:start="557:27" pos:end="557:27">=</operator> <name pos:start="557:29" pos:end="557:29">Y</name></expr>;</expr_stmt>



            <expr_stmt pos:start="561:13" pos:end="561:27"><expr pos:start="561:13" pos:end="561:26"><name pos:start="561:13" pos:end="561:13">b</name> <operator pos:start="561:15" pos:end="561:15">=</operator> <name pos:start="561:17" pos:end="561:26"><name pos:start="561:17" pos:end="561:19">src</name><index pos:start="561:20" pos:end="561:26">[<expr pos:start="561:21" pos:end="561:25"><literal type="number" pos:start="561:21" pos:end="561:21">6</literal><operator pos:start="561:22" pos:end="561:22">*</operator><name pos:start="561:23" pos:end="561:23">i</name><operator pos:start="561:24" pos:end="561:24">+</operator><literal type="number" pos:start="561:25" pos:end="561:25">3</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:27"><expr pos:start="563:13" pos:end="563:26"><name pos:start="563:13" pos:end="563:13">g</name> <operator pos:start="563:15" pos:end="563:15">=</operator> <name pos:start="563:17" pos:end="563:26"><name pos:start="563:17" pos:end="563:19">src</name><index pos:start="563:20" pos:end="563:26">[<expr pos:start="563:21" pos:end="563:25"><literal type="number" pos:start="563:21" pos:end="563:21">6</literal><operator pos:start="563:22" pos:end="563:22">*</operator><name pos:start="563:23" pos:end="563:23">i</name><operator pos:start="563:24" pos:end="563:24">+</operator><literal type="number" pos:start="563:25" pos:end="563:25">4</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="565:13" pos:end="565:27"><expr pos:start="565:13" pos:end="565:26"><name pos:start="565:13" pos:end="565:13">r</name> <operator pos:start="565:15" pos:end="565:15">=</operator> <name pos:start="565:17" pos:end="565:26"><name pos:start="565:17" pos:end="565:19">src</name><index pos:start="565:20" pos:end="565:26">[<expr pos:start="565:21" pos:end="565:25"><literal type="number" pos:start="565:21" pos:end="565:21">6</literal><operator pos:start="565:22" pos:end="565:22">*</operator><name pos:start="565:23" pos:end="565:23">i</name><operator pos:start="565:24" pos:end="565:24">+</operator><literal type="number" pos:start="565:25" pos:end="565:25">5</literal></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="569:13" pos:end="569:61"><expr pos:start="569:13" pos:end="569:60"><name pos:start="569:13" pos:end="569:13">Y</name>  <operator pos:start="569:16" pos:end="569:16">=</operator>  <operator pos:start="569:19" pos:end="569:19">(</operator><operator pos:start="569:20" pos:end="569:20">(</operator><name pos:start="569:21" pos:end="569:22">RY</name><operator pos:start="569:23" pos:end="569:23">*</operator><name pos:start="569:24" pos:end="569:24">r</name> <operator pos:start="569:26" pos:end="569:26">+</operator> <name pos:start="569:28" pos:end="569:29">GY</name><operator pos:start="569:30" pos:end="569:30">*</operator><name pos:start="569:31" pos:end="569:31">g</name> <operator pos:start="569:33" pos:end="569:33">+</operator> <name pos:start="569:35" pos:end="569:36">BY</name><operator pos:start="569:37" pos:end="569:37">*</operator><name pos:start="569:38" pos:end="569:38">b</name><operator pos:start="569:39" pos:end="569:39">)</operator><operator pos:start="569:40" pos:end="569:41">&gt;&gt;</operator><name pos:start="569:42" pos:end="569:54">RGB2YUV_SHIFT</name><operator pos:start="569:55" pos:end="569:55">)</operator> <operator pos:start="569:57" pos:end="569:57">+</operator> <literal type="number" pos:start="569:59" pos:end="569:60">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:32"><expr pos:start="571:13" pos:end="571:31"><name pos:start="571:13" pos:end="571:23"><name pos:start="571:13" pos:end="571:16">ydst</name><index pos:start="571:17" pos:end="571:23">[<expr pos:start="571:18" pos:end="571:22"><literal type="number" pos:start="571:18" pos:end="571:18">2</literal><operator pos:start="571:19" pos:end="571:19">*</operator><name pos:start="571:20" pos:end="571:20">i</name><operator pos:start="571:21" pos:end="571:21">+</operator><literal type="number" pos:start="571:22" pos:end="571:22">1</literal></expr>]</index></name>     <operator pos:start="571:29" pos:end="571:29">=</operator> <name pos:start="571:31" pos:end="571:31">Y</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="575:9" pos:end="575:28"><expr pos:start="575:9" pos:end="575:27"><name pos:start="575:9" pos:end="575:12">udst</name> <operator pos:start="575:14" pos:end="575:15">+=</operator> <name pos:start="575:17" pos:end="575:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="577:9" pos:end="577:28"><expr pos:start="577:9" pos:end="577:27"><name pos:start="577:9" pos:end="577:12">vdst</name> <operator pos:start="577:14" pos:end="577:15">+=</operator> <name pos:start="577:17" pos:end="577:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="579:9" pos:end="579:26"><expr pos:start="579:9" pos:end="579:25"><name pos:start="579:9" pos:end="579:12">ydst</name> <operator pos:start="579:14" pos:end="579:15">+=</operator> <name pos:start="579:17" pos:end="579:25">lumStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="581:9" pos:end="581:26"><expr pos:start="581:9" pos:end="581:25"><name pos:start="581:9" pos:end="581:11">src</name>  <operator pos:start="581:14" pos:end="581:15">+=</operator> <name pos:start="581:17" pos:end="581:25">srcStride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
