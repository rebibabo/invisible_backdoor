<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14078.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">v9fs_synth_get_dentry</name><parameter_list pos:start="1:33" pos:end="3:67">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:46">V9fsSynthNode</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dir</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:59">struct</name> <name pos:start="1:61" pos:end="1:66">dirent</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">entry</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:55"><decl pos:start="3:34" pos:end="3:55"><type pos:start="3:34" pos:end="3:55"><name pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:39">struct</name> <name pos:start="3:41" pos:end="3:46">dirent</name></name> <modifier pos:start="3:48" pos:end="3:48">*</modifier><modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:55">result</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:66"><decl pos:start="3:58" pos:end="3:66"><type pos:start="3:58" pos:end="3:66"><name pos:start="3:58" pos:end="3:62">off_t</name></type> <name pos:start="3:64" pos:end="3:66">off</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">V9fsSynthNode</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">node</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><call pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">rcu_read_lock</name><argument_list pos:start="13:18" pos:end="13:19">()</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:17">QLIST_FOREACH</name><argument_list pos:start="15:18" pos:end="15:45">(<argument pos:start="15:19" pos:end="15:22">node</argument>, <argument pos:start="15:25" pos:end="15:35">&amp;dir-&gt;child</argument>, <argument pos:start="15:38" pos:end="15:44">sibling</argument>)</argument_list></macro> <block pos:start="15:47" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:12">

        <comment type="block" pos:start="17:9" pos:end="17:52">/* This is the off child of the directory */</comment>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:21">(<expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:13">i</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <name pos:start="19:18" pos:end="19:20">off</name></expr>)</condition> <block pos:start="19:23" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">i</name><operator pos:start="25:10" pos:end="25:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:19">rcu_read_unlock</name><argument_list pos:start="29:20" pos:end="29:21">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:13">node</name></expr>)</condition> <block pos:start="31:16" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <comment type="block" pos:start="33:9" pos:end="33:30">/* end of directory */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:15">result</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:22">NULL</name></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:23">v9fs_synth_direntry</name><argument_list pos:start="41:24" pos:end="41:41">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">node</name></expr></argument>, <argument pos:start="41:31" pos:end="41:35"><expr pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:35">entry</name></expr></argument>, <argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:11">result</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:19">entry</name></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
