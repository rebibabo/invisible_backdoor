<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11756.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">usbredir_iso_packet</name><parameter_list pos:start="1:32" pos:end="5:32">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">priv</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">uint64_t</name></type> <name pos:start="1:54" pos:end="1:55">id</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:50"><decl pos:start="3:5" pos:end="3:50"><type pos:start="3:5" pos:end="3:50"><name pos:start="3:5" pos:end="3:38"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:38">usb_redir_iso_packet_header</name></name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:50">iso_packet</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">data</name></decl></parameter>, <parameter pos:start="5:20" pos:end="5:31"><decl pos:start="5:20" pos:end="5:31"><type pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:22">int</name></type> <name pos:start="5:24" pos:end="5:31">data_len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:60">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">USBRedirDevice</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">dev</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">priv</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:14">ep</name> <init pos:start="11:16" pos:end="11:37">= <expr pos:start="11:18" pos:end="11:37"><name pos:start="11:18" pos:end="11:37"><name pos:start="11:18" pos:end="11:27">iso_packet</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:37">endpoint</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:51"><expr pos:start="15:5" pos:end="17:50"><call pos:start="15:5" pos:end="17:50"><name pos:start="15:5" pos:end="15:12">DPRINTF2</name><argument_list pos:start="15:13" pos:end="17:50">(<argument pos:start="15:14" pos:end="15:61"><expr pos:start="15:14" pos:end="15:61"><literal type="string" pos:start="15:14" pos:end="15:51">"iso-in status %d ep %02X len %d id %"</literal><name pos:start="15:52" pos:end="15:57">PRIu64</name><literal type="string" pos:start="15:58" pos:end="15:61">"\n"</literal></expr></argument>,

             <argument pos:start="17:14" pos:end="17:31"><expr pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:23">iso_packet</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:31">status</name></name></expr></argument>, <argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">ep</name></expr></argument>, <argument pos:start="17:38" pos:end="17:45"><expr pos:start="17:38" pos:end="17:45"><name pos:start="17:38" pos:end="17:45">data_len</name></expr></argument>, <argument pos:start="17:48" pos:end="17:49"><expr pos:start="17:48" pos:end="17:49"><name pos:start="17:48" pos:end="17:49">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:63">(<expr pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">endpoint</name><index pos:start="21:22" pos:end="21:31">[<expr pos:start="21:23" pos:end="21:30"><call pos:start="21:23" pos:end="21:30"><name pos:start="21:23" pos:end="21:26">EP2I</name><argument_list pos:start="21:27" pos:end="21:30">(<argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><name pos:start="21:28" pos:end="21:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:36">type</name> <operator pos:start="21:38" pos:end="21:39">!=</operator> <name pos:start="21:41" pos:end="21:62">USB_ENDPOINT_XFER_ISOC</name></expr>)</condition> <block pos:start="21:65" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="23:69"><expr pos:start="23:9" pos:end="23:68"><call pos:start="23:9" pos:end="23:68"><name pos:start="23:9" pos:end="23:13">ERROR</name><argument_list pos:start="23:14" pos:end="23:68">(<argument pos:start="23:15" pos:end="23:63"><expr pos:start="23:15" pos:end="23:63"><literal type="string" pos:start="23:15" pos:end="23:63">"received iso packet for non iso endpoint %02X\n"</literal></expr></argument>, <argument pos:start="23:66" pos:end="23:67"><expr pos:start="23:66" pos:end="23:67"><name pos:start="23:66" pos:end="23:67">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><call pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:12">free</name><argument_list pos:start="25:13" pos:end="25:18">(<argument pos:start="25:14" pos:end="25:17"><expr pos:start="25:14" pos:end="25:17"><name pos:start="25:14" pos:end="25:17">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:11">dev</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">endpoint</name><index pos:start="33:22" pos:end="33:31">[<expr pos:start="33:23" pos:end="33:30"><call pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:26">EP2I</name><argument_list pos:start="33:27" pos:end="33:30">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:43">iso_started</name> <operator pos:start="33:45" pos:end="33:46">==</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>)</condition> <block pos:start="33:51" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:15">

        <expr_stmt pos:start="35:9" pos:end="35:76"><expr pos:start="35:9" pos:end="35:75"><call pos:start="35:9" pos:end="35:75"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="35:75">(<argument pos:start="35:17" pos:end="35:70"><expr pos:start="35:17" pos:end="35:70"><literal type="string" pos:start="35:17" pos:end="35:70">"received iso packet for non started stream ep %02X\n"</literal></expr></argument>, <argument pos:start="35:73" pos:end="35:74"><expr pos:start="35:73" pos:end="35:74"><name pos:start="35:73" pos:end="35:74">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><call pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">free</name><argument_list pos:start="37:13" pos:end="37:18">(<argument pos:start="37:14" pos:end="37:17"><expr pos:start="37:14" pos:end="37:17"><name pos:start="37:14" pos:end="37:17">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:57">/* bufp_alloc also adds the packet to the ep queue */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><call pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:14">bufp_alloc</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:18"><expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">dev</name></expr></argument>, <argument pos:start="47:21" pos:end="47:24"><expr pos:start="47:21" pos:end="47:24"><name pos:start="47:21" pos:end="47:24">data</name></expr></argument>, <argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34">data_len</name></expr></argument>, <argument pos:start="47:37" pos:end="47:54"><expr pos:start="47:37" pos:end="47:54"><name pos:start="47:37" pos:end="47:54"><name pos:start="47:37" pos:end="47:46">iso_packet</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:54">status</name></name></expr></argument>, <argument pos:start="47:57" pos:end="47:58"><expr pos:start="47:57" pos:end="47:58"><name pos:start="47:57" pos:end="47:58">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
