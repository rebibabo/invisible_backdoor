<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9163.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">qxl_set_mode</name><parameter_list pos:start="1:25" pos:end="1:65">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:37">PCIQXLDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:52">modenr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:64">loadvm</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:25">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">pcibus_t</name></type> <name pos:start="5:14" pos:end="5:18">start</name> <init pos:start="5:20" pos:end="5:64">= <expr pos:start="5:22" pos:end="5:64"><name pos:start="5:22" pos:end="5:59"><name pos:start="5:22" pos:end="5:22">d</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:27">pci</name><operator pos:start="5:28" pos:end="5:28">.</operator><name pos:start="5:29" pos:end="5:38">io_regions</name><index pos:start="5:39" pos:end="5:59">[<expr pos:start="5:40" pos:end="5:58"><name pos:start="5:40" pos:end="5:58">QXL_RAM_RANGE_INDEX</name></expr>]</index></name><operator pos:start="5:60" pos:end="5:60">.</operator><name pos:start="5:61" pos:end="5:64">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:73"><decl pos:start="7:5" pos:end="7:72"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">pcibus_t</name></type> <name pos:start="7:14" pos:end="7:16">end</name>   <init pos:start="7:20" pos:end="7:72">= <expr pos:start="7:22" pos:end="7:72"><name pos:start="7:22" pos:end="7:59"><name pos:start="7:22" pos:end="7:22">d</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">pci</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:38">io_regions</name><index pos:start="7:39" pos:end="7:59">[<expr pos:start="7:40" pos:end="7:58"><name pos:start="7:40" pos:end="7:58">QXL_RAM_RANGE_INDEX</name></expr>]</index></name><operator pos:start="7:60" pos:end="7:60">.</operator><name pos:start="7:61" pos:end="7:64">size</name> <operator pos:start="7:66" pos:end="7:66">+</operator> <name pos:start="7:68" pos:end="7:72">start</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">QXLMode</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">mode</name> <init pos:start="9:19" pos:end="9:44">= <expr pos:start="9:21" pos:end="9:44"><name pos:start="9:21" pos:end="9:35"><name pos:start="9:21" pos:end="9:21">d</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:28">modes</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">modes</name></name> <operator pos:start="9:37" pos:end="9:37">+</operator> <name pos:start="9:39" pos:end="9:44">modenr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">devmem</name> <init pos:start="11:21" pos:end="11:65">= <expr pos:start="11:23" pos:end="11:65"><name pos:start="11:23" pos:end="11:60"><name pos:start="11:23" pos:end="11:23">d</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:28">pci</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">io_regions</name><index pos:start="11:40" pos:end="11:60">[<expr pos:start="11:41" pos:end="11:59"><name pos:start="11:41" pos:end="11:59">QXL_RAM_RANGE_INDEX</name></expr>]</index></name><operator pos:start="11:61" pos:end="11:61">.</operator><name pos:start="11:62" pos:end="11:65">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="19:6"><decl pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">QXLMemSlot</name></type> <name pos:start="13:16" pos:end="13:19">slot</name> <init pos:start="13:21" pos:end="19:5">= <expr pos:start="13:23" pos:end="19:5"><block pos:start="13:23" pos:end="19:5">{

        <expr pos:start="15:9" pos:end="15:26"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:18">mem_start</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:26">start</name></expr>,

        <expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:16">mem_end</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:22">end</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="37:6"><decl pos:start="21:5" pos:end="37:5"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:20">QXLSurfaceCreate</name></type> <name pos:start="21:22" pos:end="21:28">surface</name> <init pos:start="21:30" pos:end="37:5">= <expr pos:start="21:32" pos:end="37:5"><block pos:start="21:32" pos:end="37:5">{

        <expr pos:start="23:9" pos:end="23:33"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:14">width</name>      <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:26">mode</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">x_res</name></name></expr>,

        <expr pos:start="25:9" pos:end="25:33"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:15">height</name>     <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:33"><name pos:start="25:23" pos:end="25:26">mode</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:33">y_res</name></name></expr>,

        <expr pos:start="27:9" pos:end="27:38"><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:15">stride</name>     <operator pos:start="27:21" pos:end="27:21">=</operator> <operator pos:start="27:23" pos:end="27:23">-</operator><name pos:start="27:24" pos:end="27:34"><name pos:start="27:24" pos:end="27:27">mode</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:34">x_res</name></name> <operator pos:start="27:36" pos:end="27:36">*</operator> <literal type="number" pos:start="27:38" pos:end="27:38">4</literal></expr>,

        <expr pos:start="29:9" pos:end="29:47"><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:15">format</name>     <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:47">SPICE_SURFACE_FMT_32_xRGB</name></expr>,

        <expr pos:start="31:9" pos:end="31:58"><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:14">flags</name>      <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:28">loadvm</name> <operator pos:start="31:30" pos:end="31:30">?</operator> <name pos:start="31:32" pos:end="31:54">QXL_SURF_FLAG_KEEP_DATA</name> <operator pos:start="31:56" pos:end="31:56">:</operator> <literal type="number" pos:start="31:58" pos:end="31:58">0</literal></expr>,

        <expr pos:start="33:9" pos:end="33:26"><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:19">mouse_mode</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:26">true</name></expr>,

        <expr pos:start="35:9" pos:end="35:61"><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:12">mem</name>        <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:28">devmem</name> <operator pos:start="35:30" pos:end="35:30">+</operator> <name pos:start="35:32" pos:end="35:61"><name pos:start="35:32" pos:end="35:32">d</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">shadow_rom</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:61">draw_area_offset</name></name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:31"><expr pos:start="41:5" pos:end="43:30"><call pos:start="41:5" pos:end="43:30"><name pos:start="41:5" pos:end="41:22">trace_qxl_set_mode</name><argument_list pos:start="41:23" pos:end="43:30">(<argument pos:start="41:24" pos:end="41:28"><expr pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:24">d</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:28">id</name></name></expr></argument>, <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36">modenr</name></expr></argument>, <argument pos:start="41:39" pos:end="41:49"><expr pos:start="41:39" pos:end="41:49"><name pos:start="41:39" pos:end="41:49"><name pos:start="41:39" pos:end="41:42">mode</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:49">x_res</name></name></expr></argument>, <argument pos:start="41:52" pos:end="41:62"><expr pos:start="41:52" pos:end="41:62"><name pos:start="41:52" pos:end="41:62"><name pos:start="41:52" pos:end="41:55">mode</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:62">y_res</name></name></expr></argument>, <argument pos:start="41:65" pos:end="41:74"><expr pos:start="41:65" pos:end="41:74"><name pos:start="41:65" pos:end="41:74"><name pos:start="41:65" pos:end="41:68">mode</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:74">bits</name></name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">devmem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">loadvm</name></expr>)</condition> <block pos:start="45:18" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:29">

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><call pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:22">qxl_hard_reset</name><argument_list pos:start="47:23" pos:end="47:28">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">d</name></expr></argument>, <argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:5">d</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:18">guest_slots</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>]</index></name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:26">slot</name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:33">slot</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><call pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:19">qxl_add_memslot</name><argument_list pos:start="55:20" pos:end="55:43">(<argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><name pos:start="55:21" pos:end="55:21">d</name></expr></argument>, <argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr></argument>, <argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:32">devmem</name></expr></argument>, <argument pos:start="55:35" pos:end="55:42"><expr pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:42">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:5">d</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:20">guest_primary</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:28">surface</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:38">surface</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><call pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:28">qxl_create_guest_primary</name><argument_list pos:start="61:29" pos:end="61:44">(<argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">d</name></expr></argument>, <argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr></argument>, <argument pos:start="61:36" pos:end="61:43"><expr pos:start="61:36" pos:end="61:43"><name pos:start="61:36" pos:end="61:43">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:5">d</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:11">mode</name></name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:29">QXL_MODE_COMPAT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="70:0"><expr pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:5">d</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:15">cmdflags</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:41">QXL_COMMAND_FLAG_COMPAT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="69:1" pos:end="69:36">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:36">QXL_COMMAND_FLAG_COMPAT_16BPP</name></cpp:ifdef> <comment type="block" pos:start="69:38" pos:end="69:61">/* new in spice 0.6.1 */</comment>

    <if_stmt pos:start="71:5" pos:end="78:0"><if pos:start="71:5" pos:end="78:0">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:12">mode</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:18">bits</name></name> <operator pos:start="71:20" pos:end="71:21">==</operator> <literal type="number" pos:start="71:23" pos:end="71:24">16</literal></expr>)</condition> <block pos:start="71:27" pos:end="78:0">{<block_content pos:start="73:9" pos:end="73:53">

        <expr_stmt pos:start="73:9" pos:end="73:53"><expr pos:start="73:9" pos:end="73:52"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">d</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:19">cmdflags</name></name> <operator pos:start="73:21" pos:end="73:22">|=</operator> <name pos:start="73:24" pos:end="73:52">QXL_COMMAND_FLAG_COMPAT_16BPP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:5">d</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">shadow_rom</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:22">mode</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:44"><name pos:start="79:26" pos:end="79:36">cpu_to_le32</name><argument_list pos:start="79:37" pos:end="79:44">(<argument pos:start="79:38" pos:end="79:43"><expr pos:start="79:38" pos:end="79:43"><name pos:start="79:38" pos:end="79:43">modenr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:39"><expr pos:start="81:5" pos:end="81:38"><name pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:5">d</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:10">rom</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:16">mode</name></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:38"><name pos:start="81:20" pos:end="81:30">cpu_to_le32</name><argument_list pos:start="81:31" pos:end="81:38">(<argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><name pos:start="81:32" pos:end="81:37">modenr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:25"><expr pos:start="83:5" pos:end="83:24"><call pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:21">qxl_rom_set_dirty</name><argument_list pos:start="83:22" pos:end="83:24">(<argument pos:start="83:23" pos:end="83:23"><expr pos:start="83:23" pos:end="83:23"><name pos:start="83:23" pos:end="83:23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
