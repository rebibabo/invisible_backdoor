<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14400.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:12">i2c_send</name><parameter_list pos:start="1:13" pos:end="1:39">(<parameter pos:start="1:14" pos:end="1:24"><decl pos:start="1:14" pos:end="1:24"><type pos:start="1:14" pos:end="1:24"><name pos:start="1:14" pos:end="1:19">I2CBus</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:24">bus</name></decl></parameter>, <parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:33">uint8_t</name></type> <name pos:start="1:35" pos:end="1:38">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:24">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">I2CSlaveClass</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">I2CNode</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">node</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:17">QLIST_FOREACH</name><argument_list pos:start="13:18" pos:end="13:49">(<argument pos:start="13:19" pos:end="13:22">node</argument>, <argument pos:start="13:25" pos:end="13:42">&amp;bus-&gt;current_devs</argument>, <argument pos:start="13:45" pos:end="13:48">next</argument>)</argument_list></macro> <block pos:start="13:51" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:9">

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:10">sc</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:43"><name pos:start="15:14" pos:end="15:32">I2C_SLAVE_GET_CLASS</name><argument_list pos:start="15:33" pos:end="15:43">(<argument pos:start="15:34" pos:end="15:42"><expr pos:start="15:34" pos:end="15:42"><name pos:start="15:34" pos:end="15:42"><name pos:start="15:34" pos:end="15:37">node</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:42">elt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:21">(<expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:14">sc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:20">send</name></name></expr>)</condition> <block pos:start="17:23" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:51">

            <expr_stmt pos:start="19:13" pos:end="19:51"><expr pos:start="19:13" pos:end="19:50"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:21">ret</name> <operator pos:start="19:23" pos:end="19:24">||</operator> <call pos:start="19:26" pos:end="19:50"><name pos:start="19:26" pos:end="19:33"><name pos:start="19:26" pos:end="19:27">sc</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">send</name></name><argument_list pos:start="19:34" pos:end="19:50">(<argument pos:start="19:35" pos:end="19:43"><expr pos:start="19:35" pos:end="19:43"><name pos:start="19:35" pos:end="19:43"><name pos:start="19:35" pos:end="19:38">node</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:43">elt</name></name></expr></argument>, <argument pos:start="19:46" pos:end="19:49"><expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <expr_stmt pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <operator pos:start="23:19" pos:end="23:19">-</operator><literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

    <return pos:start="29:5" pos:end="29:24">return <expr pos:start="29:12" pos:end="29:23"><ternary pos:start="29:12" pos:end="29:23"><condition pos:start="29:12" pos:end="29:16"><expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr> ?</condition><then pos:start="29:18" pos:end="29:19"> <expr pos:start="29:18" pos:end="29:19"><operator pos:start="29:18" pos:end="29:18">-</operator><literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr> </then><else pos:start="29:21" pos:end="29:23">: <expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
