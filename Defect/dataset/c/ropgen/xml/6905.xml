<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6905.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">ljpeg_encode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="82:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">LJpegEncContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="27:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="17:64">(<expr pos:start="9:9" pos:end="17:63"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:23"><name pos:start="9:10" pos:end="9:14">avctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:23">pix_fmt</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <name pos:start="9:28" pos:end="9:45">AV_PIX_FMT_YUV420P</name> <operator pos:start="9:47" pos:end="9:48">||</operator>

         <name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:14">avctx</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:23">pix_fmt</name></name> <operator pos:start="11:25" pos:end="11:26">==</operator> <name pos:start="11:28" pos:end="11:45">AV_PIX_FMT_YUV422P</name> <operator pos:start="11:47" pos:end="11:48">||</operator>

         <name pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:14">avctx</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:23">pix_fmt</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:45">AV_PIX_FMT_YUV444P</name> <operator pos:start="13:47" pos:end="13:48">||</operator>

         <name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:14">avctx</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:27">color_range</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <name pos:start="15:32" pos:end="15:47">AVCOL_RANGE_MPEG</name><operator pos:start="15:48" pos:end="15:48">)</operator> <operator pos:start="15:50" pos:end="15:51">&amp;&amp;</operator>

        <name pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:36">strict_std_compliance</name></name> <operator pos:start="17:38" pos:end="17:38">&gt;</operator> <name pos:start="17:40" pos:end="17:63">FF_COMPLIANCE_UNOFFICIAL</name></expr>)</condition> <block pos:start="17:66" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:31">

        <expr_stmt pos:start="19:9" pos:end="23:51"><expr pos:start="19:9" pos:end="23:50"><call pos:start="19:9" pos:end="23:50"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="23:50">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="21:16" pos:end="23:49"><expr pos:start="21:16" pos:end="23:49"><literal type="string" pos:start="21:16" pos:end="21:81">"Limited range YUV is non-standard, set strict_std_compliance to "</literal>

               <literal type="string" pos:start="23:16" pos:end="23:49">"at least unofficial to use it.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:22">coded_frame</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:41"><name pos:start="31:26" pos:end="31:39">av_frame_alloc</name><argument_list pos:start="31:40" pos:end="31:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="38:54"><if pos:start="33:5" pos:end="38:54">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:14">avctx</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="38:5" pos:end="38:54"><block_content pos:start="38:5" pos:end="38:54">




    <expr_stmt pos:start="38:5" pos:end="38:54"><expr pos:start="38:5" pos:end="38:53"><name pos:start="38:5" pos:end="38:33"><name pos:start="38:5" pos:end="38:9">avctx</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:22">coded_frame</name><operator pos:start="38:23" pos:end="38:24">-&gt;</operator><name pos:start="38:25" pos:end="38:33">pict_type</name></name> <operator pos:start="38:35" pos:end="38:35">=</operator> <name pos:start="38:37" pos:end="38:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:38"><expr pos:start="40:5" pos:end="40:37"><name pos:start="40:5" pos:end="40:33"><name pos:start="40:5" pos:end="40:9">avctx</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:22">coded_frame</name><operator pos:start="40:23" pos:end="40:24">-&gt;</operator><name pos:start="40:25" pos:end="40:33">key_frame</name></name> <operator pos:start="40:35" pos:end="40:35">=</operator> <literal type="number" pos:start="40:37" pos:end="40:37">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="44:5" pos:end="44:72"><expr pos:start="44:5" pos:end="44:71"><name pos:start="44:5" pos:end="44:14"><name pos:start="44:5" pos:end="44:5">s</name><operator pos:start="44:6" pos:end="44:7">-&gt;</operator><name pos:start="44:8" pos:end="44:14">scratch</name></name> <operator pos:start="44:16" pos:end="44:16">=</operator> <call pos:start="44:18" pos:end="44:71"><name pos:start="44:18" pos:end="44:32">av_malloc_array</name><argument_list pos:start="44:33" pos:end="44:71">(<argument pos:start="44:34" pos:end="44:49"><expr pos:start="44:34" pos:end="44:49"><name pos:start="44:34" pos:end="44:45"><name pos:start="44:34" pos:end="44:38">avctx</name><operator pos:start="44:39" pos:end="44:40">-&gt;</operator><name pos:start="44:41" pos:end="44:45">width</name></name> <operator pos:start="44:47" pos:end="44:47">+</operator> <literal type="number" pos:start="44:49" pos:end="44:49">1</literal></expr></argument>, <argument pos:start="44:52" pos:end="44:70"><expr pos:start="44:52" pos:end="44:70"><sizeof pos:start="44:52" pos:end="44:70">sizeof<argument_list pos:start="44:58" pos:end="44:70">(<argument pos:start="44:59" pos:end="44:69"><expr pos:start="44:59" pos:end="44:69"><operator pos:start="44:59" pos:end="44:59">*</operator><name pos:start="44:60" pos:end="44:69"><name pos:start="44:60" pos:end="44:60">s</name><operator pos:start="44:61" pos:end="44:62">-&gt;</operator><name pos:start="44:63" pos:end="44:69">scratch</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="46:5" pos:end="48:18"><if pos:start="46:5" pos:end="48:18">if <condition pos:start="46:8" pos:end="46:20">(<expr pos:start="46:9" pos:end="46:19"><operator pos:start="46:9" pos:end="46:9">!</operator><name pos:start="46:10" pos:end="46:19"><name pos:start="46:10" pos:end="46:10">s</name><operator pos:start="46:11" pos:end="46:12">-&gt;</operator><name pos:start="46:13" pos:end="46:19">scratch</name></name></expr>)</condition><block type="pseudo" pos:start="48:9" pos:end="48:18"><block_content pos:start="48:9" pos:end="48:18">

        <goto pos:start="48:9" pos:end="48:18">goto <name pos:start="48:14" pos:end="48:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="52:5" pos:end="52:37"><expr pos:start="52:5" pos:end="52:36"><call pos:start="52:5" pos:end="52:36"><name pos:start="52:5" pos:end="52:19">ff_idctdsp_init</name><argument_list pos:start="52:20" pos:end="52:36">(<argument pos:start="52:21" pos:end="52:28"><expr pos:start="52:21" pos:end="52:28"><operator pos:start="52:21" pos:end="52:21">&amp;</operator><name pos:start="52:22" pos:end="52:28"><name pos:start="52:22" pos:end="52:22">s</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:28">idsp</name></name></expr></argument>, <argument pos:start="52:31" pos:end="52:35"><expr pos:start="52:31" pos:end="52:35"><name pos:start="52:31" pos:end="52:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="56:40"><expr pos:start="54:5" pos:end="56:39"><call pos:start="54:5" pos:end="56:39"><name pos:start="54:5" pos:end="54:21">ff_init_scantable</name><argument_list pos:start="54:22" pos:end="56:39">(<argument pos:start="54:23" pos:end="54:46"><expr pos:start="54:23" pos:end="54:46"><name pos:start="54:23" pos:end="54:46"><name pos:start="54:23" pos:end="54:23">s</name><operator pos:start="54:24" pos:end="54:25">-&gt;</operator><name pos:start="54:26" pos:end="54:29">idsp</name><operator pos:start="54:30" pos:end="54:30">.</operator><name pos:start="54:31" pos:end="54:46">idct_permutation</name></name></expr></argument>, <argument pos:start="54:49" pos:end="54:61"><expr pos:start="54:49" pos:end="54:61"><operator pos:start="54:49" pos:end="54:49">&amp;</operator><name pos:start="54:50" pos:end="54:61"><name pos:start="54:50" pos:end="54:50">s</name><operator pos:start="54:51" pos:end="54:52">-&gt;</operator><name pos:start="54:53" pos:end="54:61">scantable</name></name></expr></argument>,

                      <argument pos:start="56:23" pos:end="56:38"><expr pos:start="56:23" pos:end="56:38"><name pos:start="56:23" pos:end="56:38">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="60:5" pos:end="60:58"><expr pos:start="60:5" pos:end="60:57"><call pos:start="60:5" pos:end="60:57"><name pos:start="60:5" pos:end="60:26">ff_mjpeg_init_hvsample</name><argument_list pos:start="60:27" pos:end="60:57">(<argument pos:start="60:28" pos:end="60:32"><expr pos:start="60:28" pos:end="60:32"><name pos:start="60:28" pos:end="60:32">avctx</name></expr></argument>, <argument pos:start="60:35" pos:end="60:44"><expr pos:start="60:35" pos:end="60:44"><name pos:start="60:35" pos:end="60:44"><name pos:start="60:35" pos:end="60:35">s</name><operator pos:start="60:36" pos:end="60:37">-&gt;</operator><name pos:start="60:38" pos:end="60:44">hsample</name></name></expr></argument>, <argument pos:start="60:47" pos:end="60:56"><expr pos:start="60:47" pos:end="60:56"><name pos:start="60:47" pos:end="60:56"><name pos:start="60:47" pos:end="60:47">s</name><operator pos:start="60:48" pos:end="60:49">-&gt;</operator><name pos:start="60:50" pos:end="60:56">vsample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="64:5" pos:end="70:54"><expr pos:start="64:5" pos:end="70:53"><call pos:start="64:5" pos:end="70:53"><name pos:start="64:5" pos:end="64:32">ff_mjpeg_build_huffman_codes</name><argument_list pos:start="64:33" pos:end="70:53">(<argument pos:start="64:34" pos:end="64:58"><expr pos:start="64:34" pos:end="64:58"><name pos:start="64:34" pos:end="64:58"><name pos:start="64:34" pos:end="64:34">s</name><operator pos:start="64:35" pos:end="64:36">-&gt;</operator><name pos:start="64:37" pos:end="64:58">huff_size_dc_luminance</name></name></expr></argument>,

                                 <argument pos:start="66:34" pos:end="66:58"><expr pos:start="66:34" pos:end="66:58"><name pos:start="66:34" pos:end="66:58"><name pos:start="66:34" pos:end="66:34">s</name><operator pos:start="66:35" pos:end="66:36">-&gt;</operator><name pos:start="66:37" pos:end="66:58">huff_code_dc_luminance</name></name></expr></argument>,

                                 <argument pos:start="68:34" pos:end="68:63"><expr pos:start="68:34" pos:end="68:63"><name pos:start="68:34" pos:end="68:63">avpriv_mjpeg_bits_dc_luminance</name></expr></argument>,

                                 <argument pos:start="70:34" pos:end="70:52"><expr pos:start="70:34" pos:end="70:52"><name pos:start="70:34" pos:end="70:52">avpriv_mjpeg_val_dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="78:54"><expr pos:start="72:5" pos:end="78:53"><call pos:start="72:5" pos:end="78:53"><name pos:start="72:5" pos:end="72:32">ff_mjpeg_build_huffman_codes</name><argument_list pos:start="72:33" pos:end="78:53">(<argument pos:start="72:34" pos:end="72:60"><expr pos:start="72:34" pos:end="72:60"><name pos:start="72:34" pos:end="72:60"><name pos:start="72:34" pos:end="72:34">s</name><operator pos:start="72:35" pos:end="72:36">-&gt;</operator><name pos:start="72:37" pos:end="72:60">huff_size_dc_chrominance</name></name></expr></argument>,

                                 <argument pos:start="74:34" pos:end="74:60"><expr pos:start="74:34" pos:end="74:60"><name pos:start="74:34" pos:end="74:60"><name pos:start="74:34" pos:end="74:34">s</name><operator pos:start="74:35" pos:end="74:36">-&gt;</operator><name pos:start="74:37" pos:end="74:60">huff_code_dc_chrominance</name></name></expr></argument>,

                                 <argument pos:start="76:34" pos:end="76:65"><expr pos:start="76:34" pos:end="76:65"><name pos:start="76:34" pos:end="76:65">avpriv_mjpeg_bits_dc_chrominance</name></expr></argument>,

                                 <argument pos:start="78:34" pos:end="78:52"><expr pos:start="78:34" pos:end="78:52"><name pos:start="78:34" pos:end="78:52">avpriv_mjpeg_val_dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="82:5" pos:end="82:13">return <expr pos:start="82:12" pos:end="82:12"><literal type="number" pos:start="82:12" pos:end="82:12">0</literal></expr>;</return>




</block_content>}</block></function></unit>
