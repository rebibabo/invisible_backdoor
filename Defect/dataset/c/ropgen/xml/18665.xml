<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18665.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:53"><name pos:start="1:1" pos:end="1:19">iscsi_aio_read16_cb</name><argument_list pos:start="1:20" pos:end="3:53">(<argument pos:start="1:21" pos:end="1:47">struct iscsi_context *iscsi</argument>, <argument pos:start="1:50" pos:end="1:59">int status</argument>,

                    <argument pos:start="3:21" pos:end="3:38">void *command_data</argument>, <argument pos:start="3:41" pos:end="3:52">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:27">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IscsiAIOCB</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">acb</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:65"><expr pos:start="11:5" pos:end="11:64"><call pos:start="11:5" pos:end="11:64"><name pos:start="11:5" pos:end="11:29">trace_iscsi_aio_read16_cb</name><argument_list pos:start="11:30" pos:end="11:64">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">iscsi</name></expr></argument>, <argument pos:start="11:38" pos:end="11:43"><expr pos:start="11:38" pos:end="11:43"><name pos:start="11:38" pos:end="11:43">status</name></expr></argument>, <argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">acb</name></expr></argument>, <argument pos:start="11:51" pos:end="11:63"><expr pos:start="11:51" pos:end="11:63"><name pos:start="11:51" pos:end="11:63"><name pos:start="11:51" pos:end="11:53">acb</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:63">canceled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">acb</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">canceled</name></name> <operator pos:start="15:23" pos:end="15:24">!=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>)</condition> <block pos:start="15:29" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:7">acb</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:15">status</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="57:5"><if pos:start="25:5" pos:end="57:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:14">status</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="57:5">{<block_content pos:start="27:9" pos:end="55:27">

        <if_stmt pos:start="27:9" pos:end="49:9"><if pos:start="27:9" pos:end="49:9">if <condition pos:start="27:12" pos:end="31:34">(<expr pos:start="27:13" pos:end="31:33"><name pos:start="27:13" pos:end="27:18">status</name> <operator pos:start="27:20" pos:end="27:21">==</operator> <name pos:start="27:23" pos:end="27:49">SCSI_STATUS_CHECK_CONDITION</name>

            <operator pos:start="29:13" pos:end="29:14">&amp;&amp;</operator> <name pos:start="29:16" pos:end="29:35"><name pos:start="29:16" pos:end="29:18">acb</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">task</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">sense</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:35">key</name></name> <operator pos:start="29:37" pos:end="29:38">==</operator> <name pos:start="29:40" pos:end="29:64">SCSI_SENSE_UNIT_ATTENTION</name>

            <operator pos:start="31:13" pos:end="31:14">&amp;&amp;</operator> <name pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:18">acb</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:27">retries</name></name><operator pos:start="31:28" pos:end="31:29">--</operator> <operator pos:start="31:31" pos:end="31:31">&gt;</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>)</condition> <block pos:start="31:36" pos:end="49:9">{<block_content pos:start="33:13" pos:end="47:13">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:34">(<expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:19">acb</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">task</name></name> <operator pos:start="33:27" pos:end="33:28">!=</operator> <name pos:start="33:30" pos:end="33:33">NULL</name></expr>)</condition> <block pos:start="33:36" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:33">

                <expr_stmt pos:start="35:17" pos:end="35:47"><expr pos:start="35:17" pos:end="35:46"><call pos:start="35:17" pos:end="35:46"><name pos:start="35:17" pos:end="35:35">scsi_free_scsi_task</name><argument_list pos:start="35:36" pos:end="35:46">(<argument pos:start="35:37" pos:end="35:45"><expr pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:39">acb</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:45">task</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:33"><expr pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:19">acb</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">task</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:32">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:46">(<expr pos:start="41:17" pos:end="41:45"><call pos:start="41:17" pos:end="41:40"><name pos:start="41:17" pos:end="41:35">iscsi_aio_readv_acb</name><argument_list pos:start="41:36" pos:end="41:40">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">acb</name></expr></argument>)</argument_list></call> <operator pos:start="41:42" pos:end="41:43">==</operator> <literal type="number" pos:start="41:45" pos:end="41:45">0</literal></expr>)</condition> <block pos:start="41:48" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:23">

                <expr_stmt pos:start="43:17" pos:end="43:48"><expr pos:start="43:17" pos:end="43:47"><call pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:32">iscsi_set_events</name><argument_list pos:start="43:33" pos:end="43:47">(<argument pos:start="43:34" pos:end="43:46"><expr pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:36">acb</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:46">iscsilun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:45"><expr pos:start="51:9" pos:end="53:44"><call pos:start="51:9" pos:end="53:44"><name pos:start="51:9" pos:end="51:20">error_report</name><argument_list pos:start="51:21" pos:end="53:44">(<argument pos:start="51:22" pos:end="51:63"><expr pos:start="51:22" pos:end="51:63"><literal type="string" pos:start="51:22" pos:end="51:63">"Failed to read16 data from iSCSI lun. %s"</literal></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:43"><expr pos:start="53:22" pos:end="53:43"><call pos:start="53:22" pos:end="53:43"><name pos:start="53:22" pos:end="53:36">iscsi_get_error</name><argument_list pos:start="53:37" pos:end="53:43">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:11">acb</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:19">status</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <operator pos:start="55:23" pos:end="55:23">-</operator><name pos:start="55:24" pos:end="55:26">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:21">iscsi_schedule_bh</name><argument_list pos:start="61:22" pos:end="61:26">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
