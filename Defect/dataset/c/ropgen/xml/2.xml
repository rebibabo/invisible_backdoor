<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">v4l2_free_buffer</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:14">V4L2Buffer</name><modifier pos:start="5:15" pos:end="5:15">*</modifier></type> <name pos:start="5:17" pos:end="5:21">avbuf</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">V4L2m2mContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:44">= <expr pos:start="7:25" pos:end="7:44"><call pos:start="7:25" pos:end="7:44"><name pos:start="7:25" pos:end="7:37">buf_to_m2mctx</name><argument_list pos:start="7:38" pos:end="7:44">(<argument pos:start="7:39" pos:end="7:43"><expr pos:start="7:39" pos:end="7:43"><name pos:start="7:39" pos:end="7:43">avbuf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="31:5">if <condition pos:start="11:8" pos:end="11:59">(<expr pos:start="11:9" pos:end="11:58"><call pos:start="11:9" pos:end="11:53"><name pos:start="11:9" pos:end="11:24">atomic_fetch_sub</name><argument_list pos:start="11:25" pos:end="11:53">(<argument pos:start="11:26" pos:end="11:49"><expr pos:start="11:26" pos:end="11:49"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:49"><name pos:start="11:27" pos:end="11:31">avbuf</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:49">context_refcount</name></name></expr></argument>, <argument pos:start="11:52" pos:end="11:52"><expr pos:start="11:52" pos:end="11:52"><literal type="number" pos:start="11:52" pos:end="11:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="11:55" pos:end="11:56">==</operator> <literal type="number" pos:start="11:58" pos:end="11:58">1</literal></expr>)</condition> <block pos:start="11:61" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:45">

        <expr_stmt pos:start="13:9" pos:end="13:73"><expr pos:start="13:9" pos:end="13:72"><call pos:start="13:9" pos:end="13:72"><name pos:start="13:9" pos:end="13:33">atomic_fetch_sub_explicit</name><argument_list pos:start="13:34" pos:end="13:72">(<argument pos:start="13:35" pos:end="13:46"><expr pos:start="13:35" pos:end="13:46"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:46"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:46">refcount</name></name></expr></argument>, <argument pos:start="13:49" pos:end="13:49"><expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">1</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:71"><expr pos:start="13:52" pos:end="13:71"><name pos:start="13:52" pos:end="13:71">memory_order_acq_rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="17:9" pos:end="25:42"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:21">reinit</name></name></expr>)</condition> <block pos:start="17:24" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:38">

            <if_stmt pos:start="19:13" pos:end="21:38"><if pos:start="19:13" pos:end="21:38">if <condition pos:start="19:16" pos:end="19:43">(<expr pos:start="19:17" pos:end="19:42"><operator pos:start="19:17" pos:end="19:17">!</operator><call pos:start="19:18" pos:end="19:42"><name pos:start="19:18" pos:end="19:28">atomic_load</name><argument_list pos:start="19:29" pos:end="19:42">(<argument pos:start="19:30" pos:end="19:41"><expr pos:start="19:30" pos:end="19:41"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">refcount</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:38"><block_content pos:start="21:17" pos:end="21:38">

                <expr_stmt pos:start="21:17" pos:end="21:38"><expr pos:start="21:17" pos:end="21:37"><call pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:24">sem_post</name><argument_list pos:start="21:25" pos:end="21:37">(<argument pos:start="21:26" pos:end="21:36"><expr pos:start="21:26" pos:end="21:36"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:36">refsync</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="23:11" pos:end="25:42">else if <condition pos:start="23:19" pos:end="23:44">(<expr pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:24">avbuf</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">context</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:43">streamon</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:42"><block_content pos:start="25:13" pos:end="25:42">

            <expr_stmt pos:start="25:13" pos:end="25:42"><expr pos:start="25:13" pos:end="25:41"><call pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:34">ff_v4l2_buffer_enqueue</name><argument_list pos:start="25:35" pos:end="25:41">(<argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">avbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:23">av_buffer_unref</name><argument_list pos:start="29:24" pos:end="29:44">(<argument pos:start="29:25" pos:end="29:43"><expr pos:start="29:25" pos:end="29:43"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:30">avbuf</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:43">context_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
