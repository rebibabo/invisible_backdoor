<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15994.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">mov_rewrite_dvd_sub_extradata</name><parameter_list pos:start="1:41" pos:end="1:54">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:49">AVStream</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:19"><name pos:start="5:10" pos:end="5:14">pal_s</name><index pos:start="5:15" pos:end="5:19">[<expr pos:start="5:16" pos:end="5:18"><literal type="number" pos:start="5:16" pos:end="5:18">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">pal_s_pos</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">src</name> <init pos:start="11:18" pos:end="11:39">= <expr pos:start="11:20" pos:end="11:39"><name pos:start="11:20" pos:end="11:39"><name pos:start="11:20" pos:end="11:21">st</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:28">codec</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:40">(<expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:10">st</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:17">codec</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:33">extradata_size</name></name> <operator pos:start="17:35" pos:end="17:36">!=</operator> <literal type="number" pos:start="17:38" pos:end="17:39">64</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="23:5" pos:end="41:5">for <control pos:start="23:9" pos:end="23:28">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:23"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:22">16</literal></expr>;</condition> <incr pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:25">i</name><operator pos:start="23:26" pos:end="23:27">++</operator></expr></incr>)</control> <block pos:start="23:30" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:21">

        <decl_stmt pos:start="25:9" pos:end="25:44"><decl pos:start="25:9" pos:end="25:43"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">uint32_t</name></type> <name pos:start="25:18" pos:end="25:20">yuv</name> <init pos:start="25:22" pos:end="25:43">= <expr pos:start="25:24" pos:end="25:43"><call pos:start="25:24" pos:end="25:43"><name pos:start="25:24" pos:end="25:30">AV_RB32</name><argument_list pos:start="25:31" pos:end="25:43">(<argument pos:start="25:32" pos:end="25:42"><expr pos:start="25:32" pos:end="25:42"><name pos:start="25:32" pos:end="25:34">src</name> <operator pos:start="25:36" pos:end="25:36">+</operator> <name pos:start="25:38" pos:end="25:38">i</name> <operator pos:start="25:40" pos:end="25:40">*</operator> <literal type="number" pos:start="25:42" pos:end="25:42">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:41"><decl pos:start="27:9" pos:end="27:40"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:16">uint32_t</name></type> <name pos:start="27:18" pos:end="27:21">rgba</name> <init pos:start="27:23" pos:end="27:40">= <expr pos:start="27:25" pos:end="27:40"><call pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:35">yuv_to_rgba</name><argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">yuv</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="33:38"><expr pos:start="31:9" pos:end="33:37"><call pos:start="31:9" pos:end="33:37"><name pos:start="31:9" pos:end="31:16">snprintf</name><argument_list pos:start="31:17" pos:end="33:37">(<argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><name pos:start="31:18" pos:end="31:22">pal_s</name> <operator pos:start="31:24" pos:end="31:24">+</operator> <name pos:start="31:26" pos:end="31:34">pal_s_pos</name></expr></argument>, <argument pos:start="31:37" pos:end="31:61"><expr pos:start="31:37" pos:end="31:61"><sizeof pos:start="31:37" pos:end="31:49">sizeof<argument_list pos:start="31:43" pos:end="31:49">(<argument pos:start="31:44" pos:end="31:48"><expr pos:start="31:44" pos:end="31:48"><name pos:start="31:44" pos:end="31:48">pal_s</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:51" pos:end="31:51">-</operator> <name pos:start="31:53" pos:end="31:61">pal_s_pos</name></expr></argument>, <argument pos:start="31:64" pos:end="31:71"><expr pos:start="31:64" pos:end="31:71"><literal type="string" pos:start="31:64" pos:end="31:71">"%06x%s"</literal></expr></argument>, <argument pos:start="31:74" pos:end="31:77"><expr pos:start="31:74" pos:end="31:77"><name pos:start="31:74" pos:end="31:77">rgba</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:36"><expr pos:start="33:18" pos:end="33:36"><ternary pos:start="33:18" pos:end="33:36"><condition pos:start="33:18" pos:end="33:26"><expr pos:start="33:18" pos:end="33:24"><name pos:start="33:18" pos:end="33:18">i</name> <operator pos:start="33:20" pos:end="33:21">!=</operator> <literal type="number" pos:start="33:23" pos:end="33:24">15</literal></expr> ?</condition><then pos:start="33:28" pos:end="33:31"> <expr pos:start="33:28" pos:end="33:31"><literal type="string" pos:start="33:28" pos:end="33:31">", "</literal></expr> </then><else pos:start="33:33" pos:end="33:36">: <expr pos:start="33:35" pos:end="33:36"><literal type="string" pos:start="33:35" pos:end="33:36">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:17">pal_s_pos</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:26">strlen</name><argument_list pos:start="35:27" pos:end="35:33">(<argument pos:start="35:28" pos:end="35:32"><expr pos:start="35:28" pos:end="35:32"><name pos:start="35:28" pos:end="35:32">pal_s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:39">(<expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:21">pal_s_pos</name> <operator pos:start="37:23" pos:end="37:24">&gt;=</operator> <sizeof pos:start="37:26" pos:end="37:38">sizeof<argument_list pos:start="37:32" pos:end="37:38">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">pal_s</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="47:57"><expr pos:start="45:5" pos:end="47:56"><call pos:start="45:5" pos:end="47:56"><name pos:start="45:5" pos:end="45:12">snprintf</name><argument_list pos:start="45:13" pos:end="47:56">(<argument pos:start="45:14" pos:end="45:16"><expr pos:start="45:14" pos:end="45:16"><name pos:start="45:14" pos:end="45:16">buf</name></expr></argument>, <argument pos:start="45:19" pos:end="45:29"><expr pos:start="45:19" pos:end="45:29"><sizeof pos:start="45:19" pos:end="45:29">sizeof<argument_list pos:start="45:25" pos:end="45:29">(<argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:32" pos:end="45:59"><expr pos:start="45:32" pos:end="45:59"><literal type="string" pos:start="45:32" pos:end="45:59">"size: %dx%d\npalette: %s\n"</literal></expr></argument>,

             <argument pos:start="47:14" pos:end="47:29"><expr pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:15">st</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">codec</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:29">width</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:48"><expr pos:start="47:32" pos:end="47:48"><name pos:start="47:32" pos:end="47:48"><name pos:start="47:32" pos:end="47:33">st</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">codec</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:48">height</name></name></expr></argument>, <argument pos:start="47:51" pos:end="47:55"><expr pos:start="47:51" pos:end="47:55"><name pos:start="47:51" pos:end="47:55">pal_s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:12">av_freep</name><argument_list pos:start="51:13" pos:end="51:35">(<argument pos:start="51:14" pos:end="51:34"><expr pos:start="51:14" pos:end="51:34"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:34"><name pos:start="51:15" pos:end="51:16">st</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:23">codec</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:34">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:29">extradata_size</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:82"><expr pos:start="55:5" pos:end="55:81"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:13">codec</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">extradata</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:81"><name pos:start="55:28" pos:end="55:37">av_mallocz</name><argument_list pos:start="55:38" pos:end="55:81">(<argument pos:start="55:39" pos:end="55:80"><expr pos:start="55:39" pos:end="55:80"><call pos:start="55:39" pos:end="55:49"><name pos:start="55:39" pos:end="55:44">strlen</name><argument_list pos:start="55:45" pos:end="55:49">(<argument pos:start="55:46" pos:end="55:48"><expr pos:start="55:46" pos:end="55:48"><name pos:start="55:46" pos:end="55:48">buf</name></expr></argument>)</argument_list></call> <operator pos:start="55:51" pos:end="55:51">+</operator> <name pos:start="55:53" pos:end="55:80">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:31"><if pos:start="57:5" pos:end="59:31">if <condition pos:start="57:8" pos:end="57:30">(<expr pos:start="57:9" pos:end="57:29"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:29"><name pos:start="57:10" pos:end="57:11">st</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:18">codec</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:29">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:31"><block_content pos:start="59:9" pos:end="59:31">

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:13">codec</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:29">extradata_size</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <call pos:start="61:33" pos:end="61:43"><name pos:start="61:33" pos:end="61:38">strlen</name><argument_list pos:start="61:39" pos:end="61:43">(<argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:65"><expr pos:start="63:5" pos:end="63:64"><call pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:10">memcpy</name><argument_list pos:start="63:11" pos:end="63:64">(<argument pos:start="63:12" pos:end="63:31"><expr pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:13">st</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">codec</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:31">extradata</name></name></expr></argument>, <argument pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><name pos:start="63:34" pos:end="63:36">buf</name></expr></argument>, <argument pos:start="63:39" pos:end="63:63"><expr pos:start="63:39" pos:end="63:63"><name pos:start="63:39" pos:end="63:63"><name pos:start="63:39" pos:end="63:40">st</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:47">codec</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:63">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
