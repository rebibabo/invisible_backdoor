<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17487.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:23"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">ff_read_packet</name><parameter_list pos:start="1:19" pos:end="1:53">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><name pos:start="1:20" pos:end="1:34">AVFormatContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">AVPacket</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="76:23">{<block_content pos:start="3:5" pos:end="76:23">
    <decl_stmt pos:start="3:5" pos:end="3:20"><decl pos:start="3:5" pos:end="3:11"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">ret</name></decl>, <decl pos:start="3:14" pos:end="3:14"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:14" pos:end="3:14">i</name></decl>, <decl pos:start="3:17" pos:end="3:19"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:17" pos:end="3:19">err</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">AVStream</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:16">st</name></decl>;</decl_stmt>
    <for pos:start="5:5" pos:end="76:23">for <control pos:start="5:9" pos:end="5:12">(<init pos:start="5:10" pos:end="5:10">;</init><condition pos:start="5:11" pos:end="5:11">;</condition><incr/>)</control> <block pos:start="5:14" pos:end="76:23">{<block_content pos:start="6:9" pos:end="76:23">
        <decl_stmt pos:start="6:9" pos:end="6:60"><decl pos:start="6:9" pos:end="6:59"><type pos:start="6:9" pos:end="6:22"><name pos:start="6:9" pos:end="6:20">AVPacketList</name> <modifier pos:start="6:22" pos:end="6:22">*</modifier></type><name pos:start="6:23" pos:end="6:26">pktl</name> <init pos:start="6:28" pos:end="6:59">= <expr pos:start="6:30" pos:end="6:59"><name pos:start="6:30" pos:end="6:59"><name pos:start="6:30" pos:end="6:30">s</name><operator pos:start="6:31" pos:end="6:32">-&gt;</operator><name pos:start="6:33" pos:end="6:40">internal</name><operator pos:start="6:41" pos:end="6:42">-&gt;</operator><name pos:start="6:43" pos:end="6:59">raw_packet_buffer</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="7:9" pos:end="76:23"><if pos:start="7:9" pos:end="76:23">if <condition pos:start="7:12" pos:end="7:17">(<expr pos:start="7:13" pos:end="7:16"><name pos:start="7:13" pos:end="7:16">pktl</name></expr>)</condition> <block pos:start="7:19" pos:end="76:23">{<block_content pos:start="8:13" pos:end="76:23">
            <expr_stmt pos:start="8:13" pos:end="8:29"><expr pos:start="8:13" pos:end="8:28"><operator pos:start="8:13" pos:end="8:13">*</operator><name pos:start="8:14" pos:end="8:16">pkt</name> <operator pos:start="8:18" pos:end="8:18">=</operator> <name pos:start="8:20" pos:end="8:28"><name pos:start="8:20" pos:end="8:23">pktl</name><operator pos:start="8:24" pos:end="8:25">-&gt;</operator><name pos:start="8:26" pos:end="8:28">pkt</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:49"><expr pos:start="9:13" pos:end="9:48"><name pos:start="9:13" pos:end="9:14">st</name>   <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:48">[<expr pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:33">pkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="10:13" pos:end="12:31"><if pos:start="10:13" pos:end="12:31">if <condition pos:start="10:16" pos:end="10:67">(<expr pos:start="10:17" pos:end="10:66"><name pos:start="10:17" pos:end="10:61"><name pos:start="10:17" pos:end="10:17">s</name><operator pos:start="10:18" pos:end="10:19">-&gt;</operator><name pos:start="10:20" pos:end="10:27">internal</name><operator pos:start="10:28" pos:end="10:29">-&gt;</operator><name pos:start="10:30" pos:end="10:61">raw_packet_buffer_remaining_size</name></name> <operator pos:start="10:63" pos:end="10:64">&lt;=</operator> <literal type="number" pos:start="10:66" pos:end="10:66">0</literal></expr>)</condition><block type="pseudo" pos:start="11:17" pos:end="12:31"><block_content pos:start="11:17" pos:end="12:31">
                <if_stmt pos:start="11:17" pos:end="12:31"><if pos:start="11:17" pos:end="12:31">if <condition pos:start="11:20" pos:end="11:57">(<expr pos:start="11:21" pos:end="11:56"><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:24">err</name> <operator pos:start="11:26" pos:end="11:26">=</operator> <call pos:start="11:28" pos:end="11:51"><name pos:start="11:28" pos:end="11:38">probe_codec</name><argument_list pos:start="11:39" pos:end="11:51">(<argument pos:start="11:40" pos:end="11:40"><expr pos:start="11:40" pos:end="11:40"><name pos:start="11:40" pos:end="11:40">s</name></expr></argument>, <argument pos:start="11:43" pos:end="11:44"><expr pos:start="11:43" pos:end="11:44"><name pos:start="11:43" pos:end="11:44">st</name></expr></argument>, <argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">NULL</name></expr></argument>)</argument_list></call><operator pos:start="11:52" pos:end="11:52">)</operator> <operator pos:start="11:54" pos:end="11:54">&lt;</operator> <literal type="number" pos:start="11:56" pos:end="11:56">0</literal></expr>)</condition><block type="pseudo" pos:start="12:21" pos:end="12:31"><block_content pos:start="12:21" pos:end="12:31">
                    <return pos:start="12:21" pos:end="12:31">return <expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:30">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="13:13" pos:end="76:23"><if pos:start="13:13" pos:end="76:23">if <condition pos:start="13:16" pos:end="13:39">(<expr pos:start="13:17" pos:end="13:38"><name pos:start="13:17" pos:end="13:33"><name pos:start="13:17" pos:end="13:18">st</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:33">request_probe</name></name> <operator pos:start="13:35" pos:end="13:36">&lt;=</operator> <literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr>)</condition> <block pos:start="13:41" pos:end="76:23">{<block_content pos:start="14:17" pos:end="76:23">
                <expr_stmt pos:start="14:17" pos:end="14:76"><expr pos:start="14:17" pos:end="14:75"><name pos:start="14:17" pos:end="14:46"><name pos:start="14:17" pos:end="14:17">s</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:27">internal</name><operator pos:start="14:28" pos:end="14:29">-&gt;</operator><name pos:start="14:30" pos:end="14:46">raw_packet_buffer</name></name>                 <operator pos:start="14:64" pos:end="14:64">=</operator> <name pos:start="14:66" pos:end="14:75"><name pos:start="14:66" pos:end="14:69">pktl</name><operator pos:start="14:70" pos:end="14:71">-&gt;</operator><name pos:start="14:72" pos:end="14:75">next</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:75"><expr pos:start="15:17" pos:end="15:74"><name pos:start="15:17" pos:end="15:61"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">internal</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:61">raw_packet_buffer_remaining_size</name></name> <operator pos:start="15:63" pos:end="15:64">+=</operator> <name pos:start="15:66" pos:end="15:74"><name pos:start="15:66" pos:end="15:68">pkt</name><operator pos:start="15:69" pos:end="15:70">-&gt;</operator><name pos:start="15:71" pos:end="15:74">size</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="16:17" pos:end="16:30"><expr pos:start="16:17" pos:end="16:29"><call pos:start="16:17" pos:end="16:29"><name pos:start="16:17" pos:end="16:23">av_free</name><argument_list pos:start="16:24" pos:end="16:29">(<argument pos:start="16:25" pos:end="16:28"><expr pos:start="16:25" pos:end="16:28"><name pos:start="16:25" pos:end="16:28">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="17:17" pos:end="17:25">return <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>;</return>
        <expr_stmt pos:start="18:9" pos:end="18:25"><expr pos:start="18:9" pos:end="18:24"><name pos:start="18:9" pos:end="18:17"><name pos:start="18:9" pos:end="18:11">pkt</name><operator pos:start="18:12" pos:end="18:13">-&gt;</operator><name pos:start="18:14" pos:end="18:17">data</name></name> <operator pos:start="18:19" pos:end="18:19">=</operator> <name pos:start="18:21" pos:end="18:24">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">pkt</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">size</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:28"><expr pos:start="20:9" pos:end="20:27"><call pos:start="20:9" pos:end="20:27"><name pos:start="20:9" pos:end="20:22">av_init_packet</name><argument_list pos:start="20:23" pos:end="20:27">(<argument pos:start="20:24" pos:end="20:26"><expr pos:start="20:24" pos:end="20:26"><name pos:start="20:24" pos:end="20:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:45"><name pos:start="21:15" pos:end="21:37"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">iformat</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:37">read_packet</name></name><argument_list pos:start="21:38" pos:end="21:45">(<argument pos:start="21:39" pos:end="21:39"><expr pos:start="21:39" pos:end="21:39"><name pos:start="21:39" pos:end="21:39">s</name></expr></argument>, <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="22:9" pos:end="76:23"><if pos:start="22:9" pos:end="76:23">if <condition pos:start="22:12" pos:end="22:20">(<expr pos:start="22:13" pos:end="22:19"><name pos:start="22:13" pos:end="22:15">ret</name> <operator pos:start="22:17" pos:end="22:17">&lt;</operator> <literal type="number" pos:start="22:19" pos:end="22:19">0</literal></expr>)</condition> <block pos:start="22:22" pos:end="76:23">{<block_content pos:start="26:13" pos:end="76:23">
            <comment type="block" pos:start="23:13" pos:end="25:69">/* Some demuxers return FFERROR_REDO when they consume
               data and discard it (ignored streams, junk, extradata).
               We must re-call the demuxer to get the real packet. */</comment>
            <if_stmt pos:start="26:13" pos:end="27:25"><if pos:start="26:13" pos:end="27:25">if <condition pos:start="26:16" pos:end="26:36">(<expr pos:start="26:17" pos:end="26:35"><name pos:start="26:17" pos:end="26:19">ret</name> <operator pos:start="26:21" pos:end="26:22">==</operator> <name pos:start="26:24" pos:end="26:35">FFERROR_REDO</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:25"><block_content pos:start="27:17" pos:end="27:25">
                <continue pos:start="27:17" pos:end="27:25">continue;</continue></block_content></block></if></if_stmt>
            <if_stmt pos:start="28:13" pos:end="29:27"><if pos:start="28:13" pos:end="29:27">if <condition pos:start="28:16" pos:end="28:48">(<expr pos:start="28:17" pos:end="28:47"><operator pos:start="28:17" pos:end="28:17">!</operator><name pos:start="28:18" pos:end="28:21">pktl</name> <operator pos:start="28:23" pos:end="28:24">||</operator> <name pos:start="28:26" pos:end="28:28">ret</name> <operator pos:start="28:30" pos:end="28:31">==</operator> <call pos:start="28:33" pos:end="28:47"><name pos:start="28:33" pos:end="28:39">AVERROR</name><argument_list pos:start="28:40" pos:end="28:47">(<argument pos:start="28:41" pos:end="28:46"><expr pos:start="28:41" pos:end="28:46"><name pos:start="28:41" pos:end="28:46">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:27"><block_content pos:start="29:17" pos:end="29:27">
                <return pos:start="29:17" pos:end="29:27">return <expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <for pos:start="30:13" pos:end="76:23">for <control pos:start="30:17" pos:end="30:47">(<init pos:start="30:18" pos:end="30:23"><expr pos:start="30:18" pos:end="30:22"><name pos:start="30:18" pos:end="30:18">i</name> <operator pos:start="30:20" pos:end="30:20">=</operator> <literal type="number" pos:start="30:22" pos:end="30:22">0</literal></expr>;</init> <condition pos:start="30:25" pos:end="30:42"><expr pos:start="30:25" pos:end="30:41"><name pos:start="30:25" pos:end="30:25">i</name> <operator pos:start="30:27" pos:end="30:27">&lt;</operator> <name pos:start="30:29" pos:end="30:41"><name pos:start="30:29" pos:end="30:29">s</name><operator pos:start="30:30" pos:end="30:31">-&gt;</operator><name pos:start="30:32" pos:end="30:41">nb_streams</name></name></expr>;</condition> <incr pos:start="30:44" pos:end="30:46"><expr pos:start="30:44" pos:end="30:46"><name pos:start="30:44" pos:end="30:44">i</name><operator pos:start="30:45" pos:end="30:46">++</operator></expr></incr>)</control> <block pos:start="30:49" pos:end="76:23">{<block_content pos:start="31:17" pos:end="76:23">
                <expr_stmt pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:18">st</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:31">streams</name><index pos:start="31:32" pos:end="31:34">[<expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">i</name></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="32:17" pos:end="34:35"><if pos:start="32:17" pos:end="34:35">if <condition pos:start="32:20" pos:end="32:63">(<expr pos:start="32:21" pos:end="32:62"><name pos:start="32:21" pos:end="32:37"><name pos:start="32:21" pos:end="32:22">st</name><operator pos:start="32:23" pos:end="32:24">-&gt;</operator><name pos:start="32:25" pos:end="32:37">probe_packets</name></name> <operator pos:start="32:39" pos:end="32:40">||</operator> <name pos:start="32:42" pos:end="32:58"><name pos:start="32:42" pos:end="32:43">st</name><operator pos:start="32:44" pos:end="32:45">-&gt;</operator><name pos:start="32:46" pos:end="32:58">request_probe</name></name> <operator pos:start="32:60" pos:end="32:60">&gt;</operator> <literal type="number" pos:start="32:62" pos:end="32:62">0</literal></expr>)</condition><block type="pseudo" pos:start="33:21" pos:end="34:35"><block_content pos:start="33:21" pos:end="34:35">
                    <if_stmt pos:start="33:21" pos:end="34:35"><if pos:start="33:21" pos:end="34:35">if <condition pos:start="33:24" pos:end="33:61">(<expr pos:start="33:25" pos:end="33:60"><operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:28">err</name> <operator pos:start="33:30" pos:end="33:30">=</operator> <call pos:start="33:32" pos:end="33:55"><name pos:start="33:32" pos:end="33:42">probe_codec</name><argument_list pos:start="33:43" pos:end="33:55">(<argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">s</name></expr></argument>, <argument pos:start="33:47" pos:end="33:48"><expr pos:start="33:47" pos:end="33:48"><name pos:start="33:47" pos:end="33:48">st</name></expr></argument>, <argument pos:start="33:51" pos:end="33:54"><expr pos:start="33:51" pos:end="33:54"><name pos:start="33:51" pos:end="33:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="33:56" pos:end="33:56">)</operator> <operator pos:start="33:58" pos:end="33:58">&lt;</operator> <literal type="number" pos:start="33:60" pos:end="33:60">0</literal></expr>)</condition><block type="pseudo" pos:start="34:25" pos:end="34:35"><block_content pos:start="34:25" pos:end="34:35">
                        <return pos:start="34:25" pos:end="34:35">return <expr pos:start="34:32" pos:end="34:34"><name pos:start="34:32" pos:end="34:34">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:50"><call pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:26">av_assert0</name><argument_list pos:start="35:27" pos:end="35:50">(<argument pos:start="35:28" pos:end="35:49"><expr pos:start="35:28" pos:end="35:49"><name pos:start="35:28" pos:end="35:44"><name pos:start="35:28" pos:end="35:29">st</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:44">request_probe</name></name> <operator pos:start="35:46" pos:end="35:47">&lt;=</operator> <literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue pos:start="36:13" pos:end="36:21">continue;</continue>
        <if_stmt pos:start="37:9" pos:end="76:23"><if pos:start="37:9" pos:end="76:23">if <condition pos:start="37:12" pos:end="37:22">(<expr pos:start="37:13" pos:end="37:21"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:21"><name pos:start="37:14" pos:end="37:16">pkt</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">buf</name></name></expr>)</condition> <block pos:start="37:24" pos:end="76:23">{<block_content pos:start="38:13" pos:end="76:23">
            <decl_stmt pos:start="38:13" pos:end="38:33"><decl pos:start="38:13" pos:end="38:32"><type pos:start="38:13" pos:end="38:20"><name pos:start="38:13" pos:end="38:20">AVPacket</name></type> <name pos:start="38:22" pos:end="38:24">tmp</name> <init pos:start="38:26" pos:end="38:32">= <expr pos:start="38:28" pos:end="38:32"><block pos:start="38:28" pos:end="38:32">{ <expr pos:start="38:30" pos:end="38:30"><literal type="number" pos:start="38:30" pos:end="38:30">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="39:13" pos:end="39:43"><expr pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:42"><name pos:start="39:19" pos:end="39:31">av_packet_ref</name><argument_list pos:start="39:32" pos:end="39:42">(<argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:36">tmp</name></expr></argument>, <argument pos:start="39:39" pos:end="39:41"><expr pos:start="39:39" pos:end="39:41"><name pos:start="39:39" pos:end="39:41">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="40:13" pos:end="41:27"><if pos:start="40:13" pos:end="41:27">if <condition pos:start="40:16" pos:end="40:24">(<expr pos:start="40:17" pos:end="40:23"><name pos:start="40:17" pos:end="40:19">ret</name> <operator pos:start="40:21" pos:end="40:21">&lt;</operator> <literal type="number" pos:start="40:23" pos:end="40:23">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:27"><block_content pos:start="41:17" pos:end="41:27">
                <return pos:start="41:17" pos:end="41:27">return <expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:23"><expr pos:start="42:13" pos:end="42:22"><operator pos:start="42:13" pos:end="42:13">*</operator><name pos:start="42:14" pos:end="42:16">pkt</name> <operator pos:start="42:18" pos:end="42:18">=</operator> <name pos:start="42:20" pos:end="42:22">tmp</name></expr>;</expr_stmt>
        <if_stmt pos:start="43:9" pos:end="76:23"><if pos:start="43:9" pos:end="76:23">if <condition pos:start="43:12" pos:end="44:47">(<expr pos:start="43:13" pos:end="44:46"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:14">s</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">flags</name></name> <operator pos:start="43:23" pos:end="43:23">&amp;</operator> <name pos:start="43:25" pos:end="43:50">AVFMT_FLAG_DISCARD_CORRUPT</name><operator pos:start="43:51" pos:end="43:51">)</operator> <operator pos:start="43:53" pos:end="43:54">&amp;&amp;</operator>
            <operator pos:start="44:13" pos:end="44:13">(</operator><name pos:start="44:14" pos:end="44:23"><name pos:start="44:14" pos:end="44:16">pkt</name><operator pos:start="44:17" pos:end="44:18">-&gt;</operator><name pos:start="44:19" pos:end="44:23">flags</name></name> <operator pos:start="44:25" pos:end="44:25">&amp;</operator> <name pos:start="44:27" pos:end="44:45">AV_PKT_FLAG_CORRUPT</name><operator pos:start="44:46" pos:end="44:46">)</operator></expr>)</condition> <block pos:start="44:49" pos:end="76:23">{<block_content pos:start="45:13" pos:end="76:23">
            <expr_stmt pos:start="45:13" pos:end="47:38"><expr pos:start="45:13" pos:end="47:37"><call pos:start="45:13" pos:end="47:37"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="47:37">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">s</name></expr></argument>, <argument pos:start="45:23" pos:end="45:36"><expr pos:start="45:23" pos:end="45:36"><name pos:start="45:23" pos:end="45:36">AV_LOG_WARNING</name></expr></argument>,
                   <argument pos:start="46:20" pos:end="46:61"><expr pos:start="46:20" pos:end="46:61"><literal type="string" pos:start="46:20" pos:end="46:61">"Dropped corrupted packet (stream = %d)\n"</literal></expr></argument>,
                   <argument pos:start="47:20" pos:end="47:36"><expr pos:start="47:20" pos:end="47:36"><name pos:start="47:20" pos:end="47:36"><name pos:start="47:20" pos:end="47:22">pkt</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:36">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:33"><expr pos:start="48:13" pos:end="48:32"><call pos:start="48:13" pos:end="48:32"><name pos:start="48:13" pos:end="48:27">av_packet_unref</name><argument_list pos:start="48:28" pos:end="48:32">(<argument pos:start="48:29" pos:end="48:31"><expr pos:start="48:29" pos:end="48:31"><name pos:start="48:29" pos:end="48:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue pos:start="49:13" pos:end="49:21">continue;</continue>
        <if_stmt pos:start="50:9" pos:end="76:23"><if pos:start="50:9" pos:end="76:23">if <condition pos:start="50:12" pos:end="50:57">(<expr pos:start="50:13" pos:end="50:56"><name pos:start="50:13" pos:end="50:29"><name pos:start="50:13" pos:end="50:15">pkt</name><operator pos:start="50:16" pos:end="50:17">-&gt;</operator><name pos:start="50:18" pos:end="50:29">stream_index</name></name> <operator pos:start="50:31" pos:end="50:32">&gt;=</operator> <operator pos:start="50:34" pos:end="50:34">(</operator><name pos:start="50:35" pos:end="50:42">unsigned</name><operator pos:start="50:43" pos:end="50:43">)</operator><name pos:start="50:44" pos:end="50:56"><name pos:start="50:44" pos:end="50:44">s</name><operator pos:start="50:45" pos:end="50:46">-&gt;</operator><name pos:start="50:47" pos:end="50:56">nb_streams</name></name></expr>)</condition> <block pos:start="50:59" pos:end="76:23">{<block_content pos:start="51:13" pos:end="76:23">
            <expr_stmt pos:start="51:13" pos:end="51:84"><expr pos:start="51:13" pos:end="51:83"><call pos:start="51:13" pos:end="51:83"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:83">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:63"><expr pos:start="51:37" pos:end="51:63"><literal type="string" pos:start="51:37" pos:end="51:63">"Invalid stream index %d\n"</literal></expr></argument>, <argument pos:start="51:66" pos:end="51:82"><expr pos:start="51:66" pos:end="51:82"><name pos:start="51:66" pos:end="51:82"><name pos:start="51:66" pos:end="51:68">pkt</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:82">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue pos:start="52:13" pos:end="52:21">continue;</continue>
        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:10">st</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:42"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:23">streams</name><index pos:start="53:24" pos:end="53:42">[<expr pos:start="53:25" pos:end="53:41"><name pos:start="53:25" pos:end="53:41"><name pos:start="53:25" pos:end="53:27">pkt</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:41">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="54:9" pos:end="76:23"><if pos:start="54:9" pos:end="76:23">if <condition pos:start="54:12" pos:end="54:116">(<expr pos:start="54:13" pos:end="54:115"><call pos:start="54:13" pos:end="54:64"><name pos:start="54:13" pos:end="54:33">update_wrap_reference</name><argument_list pos:start="54:34" pos:end="54:64">(<argument pos:start="54:35" pos:end="54:35"><expr pos:start="54:35" pos:end="54:35"><name pos:start="54:35" pos:end="54:35">s</name></expr></argument>, <argument pos:start="54:38" pos:end="54:39"><expr pos:start="54:38" pos:end="54:39"><name pos:start="54:38" pos:end="54:39">st</name></expr></argument>, <argument pos:start="54:42" pos:end="54:58"><expr pos:start="54:42" pos:end="54:58"><name pos:start="54:42" pos:end="54:58"><name pos:start="54:42" pos:end="54:44">pkt</name><operator pos:start="54:45" pos:end="54:46">-&gt;</operator><name pos:start="54:47" pos:end="54:58">stream_index</name></name></expr></argument>, <argument pos:start="54:61" pos:end="54:63"><expr pos:start="54:61" pos:end="54:63"><name pos:start="54:61" pos:end="54:63">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="54:66" pos:end="54:67">&amp;&amp;</operator> <name pos:start="54:69" pos:end="54:89"><name pos:start="54:69" pos:end="54:70">st</name><operator pos:start="54:71" pos:end="54:72">-&gt;</operator><name pos:start="54:73" pos:end="54:89">pts_wrap_behavior</name></name> <operator pos:start="54:91" pos:end="54:92">==</operator> <name pos:start="54:94" pos:end="54:115">AV_PTS_WRAP_SUB_OFFSET</name></expr>)</condition> <block pos:start="54:118" pos:end="76:23">{<block_content pos:start="56:13" pos:end="76:23">
            <comment type="line" pos:start="55:13" pos:end="55:59">// correct first time stamps to negative values</comment>
            <if_stmt pos:start="56:13" pos:end="57:66"><if pos:start="56:13" pos:end="57:66">if <condition pos:start="56:16" pos:end="56:44">(<expr pos:start="56:17" pos:end="56:43"><operator pos:start="56:17" pos:end="56:17">!</operator><call pos:start="56:18" pos:end="56:43"><name pos:start="56:18" pos:end="56:28">is_relative</name><argument_list pos:start="56:29" pos:end="56:43">(<argument pos:start="56:30" pos:end="56:42"><expr pos:start="56:30" pos:end="56:42"><name pos:start="56:30" pos:end="56:42"><name pos:start="56:30" pos:end="56:31">st</name><operator pos:start="56:32" pos:end="56:33">-&gt;</operator><name pos:start="56:34" pos:end="56:42">first_dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:66"><block_content pos:start="57:17" pos:end="57:66">
                <expr_stmt pos:start="57:17" pos:end="57:66"><expr pos:start="57:17" pos:end="57:65"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:18">st</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:29">first_dts</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="57:65"><name pos:start="57:33" pos:end="57:46">wrap_timestamp</name><argument_list pos:start="57:47" pos:end="57:65">(<argument pos:start="57:48" pos:end="57:49"><expr pos:start="57:48" pos:end="57:49"><name pos:start="57:48" pos:end="57:49">st</name></expr></argument>, <argument pos:start="57:52" pos:end="57:64"><expr pos:start="57:52" pos:end="57:64"><name pos:start="57:52" pos:end="57:64"><name pos:start="57:52" pos:end="57:53">st</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:64">first_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="58:13" pos:end="59:68"><if pos:start="58:13" pos:end="59:68">if <condition pos:start="58:16" pos:end="58:45">(<expr pos:start="58:17" pos:end="58:44"><operator pos:start="58:17" pos:end="58:17">!</operator><call pos:start="58:18" pos:end="58:44"><name pos:start="58:18" pos:end="58:28">is_relative</name><argument_list pos:start="58:29" pos:end="58:44">(<argument pos:start="58:30" pos:end="58:43"><expr pos:start="58:30" pos:end="58:43"><name pos:start="58:30" pos:end="58:43"><name pos:start="58:30" pos:end="58:31">st</name><operator pos:start="58:32" pos:end="58:33">-&gt;</operator><name pos:start="58:34" pos:end="58:43">start_time</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:68"><block_content pos:start="59:17" pos:end="59:68">
                <expr_stmt pos:start="59:17" pos:end="59:68"><expr pos:start="59:17" pos:end="59:67"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:18">st</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:30">start_time</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <call pos:start="59:34" pos:end="59:67"><name pos:start="59:34" pos:end="59:47">wrap_timestamp</name><argument_list pos:start="59:48" pos:end="59:67">(<argument pos:start="59:49" pos:end="59:50"><expr pos:start="59:49" pos:end="59:50"><name pos:start="59:49" pos:end="59:50">st</name></expr></argument>, <argument pos:start="59:53" pos:end="59:66"><expr pos:start="59:53" pos:end="59:66"><name pos:start="59:53" pos:end="59:66"><name pos:start="59:53" pos:end="59:54">st</name><operator pos:start="59:55" pos:end="59:56">-&gt;</operator><name pos:start="59:57" pos:end="59:66">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="60:13" pos:end="61:62"><if pos:start="60:13" pos:end="61:62">if <condition pos:start="60:16" pos:end="60:42">(<expr pos:start="60:17" pos:end="60:41"><operator pos:start="60:17" pos:end="60:17">!</operator><call pos:start="60:18" pos:end="60:41"><name pos:start="60:18" pos:end="60:28">is_relative</name><argument_list pos:start="60:29" pos:end="60:41">(<argument pos:start="60:30" pos:end="60:40"><expr pos:start="60:30" pos:end="60:40"><name pos:start="60:30" pos:end="60:40"><name pos:start="60:30" pos:end="60:31">st</name><operator pos:start="60:32" pos:end="60:33">-&gt;</operator><name pos:start="60:34" pos:end="60:40">cur_dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:62"><block_content pos:start="61:17" pos:end="61:62">
                <expr_stmt pos:start="61:17" pos:end="61:62"><expr pos:start="61:17" pos:end="61:61"><name pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:18">st</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:27">cur_dts</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:61"><name pos:start="61:31" pos:end="61:44">wrap_timestamp</name><argument_list pos:start="61:45" pos:end="61:61">(<argument pos:start="61:46" pos:end="61:47"><expr pos:start="61:46" pos:end="61:47"><name pos:start="61:46" pos:end="61:47">st</name></expr></argument>, <argument pos:start="61:50" pos:end="61:60"><expr pos:start="61:50" pos:end="61:60"><name pos:start="61:50" pos:end="61:60"><name pos:start="61:50" pos:end="61:51">st</name><operator pos:start="61:52" pos:end="61:53">-&gt;</operator><name pos:start="61:54" pos:end="61:60">cur_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:48"><expr pos:start="62:9" pos:end="62:47"><name pos:start="62:9" pos:end="62:16"><name pos:start="62:9" pos:end="62:11">pkt</name><operator pos:start="62:12" pos:end="62:13">-&gt;</operator><name pos:start="62:14" pos:end="62:16">dts</name></name> <operator pos:start="62:18" pos:end="62:18">=</operator> <call pos:start="62:20" pos:end="62:47"><name pos:start="62:20" pos:end="62:33">wrap_timestamp</name><argument_list pos:start="62:34" pos:end="62:47">(<argument pos:start="62:35" pos:end="62:36"><expr pos:start="62:35" pos:end="62:36"><name pos:start="62:35" pos:end="62:36">st</name></expr></argument>, <argument pos:start="62:39" pos:end="62:46"><expr pos:start="62:39" pos:end="62:46"><name pos:start="62:39" pos:end="62:46"><name pos:start="62:39" pos:end="62:41">pkt</name><operator pos:start="62:42" pos:end="62:43">-&gt;</operator><name pos:start="62:44" pos:end="62:46">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">pkt</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">pts</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:47"><name pos:start="63:20" pos:end="63:33">wrap_timestamp</name><argument_list pos:start="63:34" pos:end="63:47">(<argument pos:start="63:35" pos:end="63:36"><expr pos:start="63:35" pos:end="63:36"><name pos:start="63:35" pos:end="63:36">st</name></expr></argument>, <argument pos:start="63:39" pos:end="63:46"><expr pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:41">pkt</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:46">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:31"><expr pos:start="64:9" pos:end="64:30"><call pos:start="64:9" pos:end="64:30"><name pos:start="64:9" pos:end="64:23">force_codec_ids</name><argument_list pos:start="64:24" pos:end="64:30">(<argument pos:start="64:25" pos:end="64:25"><expr pos:start="64:25" pos:end="64:25"><name pos:start="64:25" pos:end="64:25">s</name></expr></argument>, <argument pos:start="64:28" pos:end="64:29"><expr pos:start="64:28" pos:end="64:29"><name pos:start="64:28" pos:end="64:29">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="65:9" pos:end="65:76">/* TODO: audio: time filter; video: frame reordering (pts != dts) */</comment>
        <if_stmt pos:start="66:9" pos:end="67:92"><if pos:start="66:9" pos:end="67:92">if <condition pos:start="66:12" pos:end="66:43">(<expr pos:start="66:13" pos:end="66:42"><name pos:start="66:13" pos:end="66:42"><name pos:start="66:13" pos:end="66:13">s</name><operator pos:start="66:14" pos:end="66:15">-&gt;</operator><name pos:start="66:16" pos:end="66:42">use_wallclock_as_timestamps</name></name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:92"><block_content pos:start="67:13" pos:end="67:92">
            <expr_stmt pos:start="67:13" pos:end="67:92"><expr pos:start="67:13" pos:end="67:91"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:15">pkt</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:20">dts</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:26">pkt</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:31">pts</name></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <call pos:start="67:35" pos:end="67:91"><name pos:start="67:35" pos:end="67:46">av_rescale_q</name><argument_list pos:start="67:47" pos:end="67:91">(<argument pos:start="67:48" pos:end="67:59"><expr pos:start="67:48" pos:end="67:59"><call pos:start="67:48" pos:end="67:59"><name pos:start="67:48" pos:end="67:57">av_gettime</name><argument_list pos:start="67:58" pos:end="67:59">()</argument_list></call></expr></argument>, <argument pos:start="67:62" pos:end="67:75"><expr pos:start="67:62" pos:end="67:75"><name pos:start="67:62" pos:end="67:75">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="67:78" pos:end="67:90"><expr pos:start="67:78" pos:end="67:90"><name pos:start="67:78" pos:end="67:90"><name pos:start="67:78" pos:end="67:79">st</name><operator pos:start="67:80" pos:end="67:81">-&gt;</operator><name pos:start="67:82" pos:end="67:90">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="68:9" pos:end="69:23"><if pos:start="68:9" pos:end="69:23">if <condition pos:start="68:12" pos:end="68:44">(<expr pos:start="68:13" pos:end="68:43"><operator pos:start="68:13" pos:end="68:13">!</operator><name pos:start="68:14" pos:end="68:17">pktl</name> <operator pos:start="68:19" pos:end="68:20">&amp;&amp;</operator> <name pos:start="68:22" pos:end="68:38"><name pos:start="68:22" pos:end="68:23">st</name><operator pos:start="68:24" pos:end="68:25">-&gt;</operator><name pos:start="68:26" pos:end="68:38">request_probe</name></name> <operator pos:start="68:40" pos:end="68:41">&lt;=</operator> <literal type="number" pos:start="68:43" pos:end="68:43">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:23"><block_content pos:start="69:13" pos:end="69:23">
            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="70:9" pos:end="71:68"><expr pos:start="70:9" pos:end="71:67"><name pos:start="70:9" pos:end="70:11">err</name> <operator pos:start="70:13" pos:end="70:13">=</operator> <call pos:start="70:15" pos:end="71:67"><name pos:start="70:15" pos:end="70:27">add_to_pktbuf</name><argument_list pos:start="70:28" pos:end="71:67">(<argument pos:start="70:29" pos:end="70:59"><expr pos:start="70:29" pos:end="70:59"><operator pos:start="70:29" pos:end="70:29">&amp;</operator><name pos:start="70:30" pos:end="70:59"><name pos:start="70:30" pos:end="70:30">s</name><operator pos:start="70:31" pos:end="70:32">-&gt;</operator><name pos:start="70:33" pos:end="70:40">internal</name><operator pos:start="70:41" pos:end="70:42">-&gt;</operator><name pos:start="70:43" pos:end="70:59">raw_packet_buffer</name></name></expr></argument>, <argument pos:start="70:62" pos:end="70:64"><expr pos:start="70:62" pos:end="70:64"><name pos:start="70:62" pos:end="70:64">pkt</name></expr></argument>,
                            <argument pos:start="71:29" pos:end="71:63"><expr pos:start="71:29" pos:end="71:63"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:63"><name pos:start="71:30" pos:end="71:30">s</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">internal</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:63">raw_packet_buffer_end</name></name></expr></argument>, <argument pos:start="71:66" pos:end="71:66"><expr pos:start="71:66" pos:end="71:66"><literal type="number" pos:start="71:66" pos:end="71:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="72:9" pos:end="73:23"><if pos:start="72:9" pos:end="73:23">if <condition pos:start="72:12" pos:end="72:16">(<expr pos:start="72:13" pos:end="72:15"><name pos:start="72:13" pos:end="72:15">err</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">
            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">err</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:67"><expr pos:start="74:9" pos:end="74:66"><name pos:start="74:9" pos:end="74:53"><name pos:start="74:9" pos:end="74:9">s</name><operator pos:start="74:10" pos:end="74:11">-&gt;</operator><name pos:start="74:12" pos:end="74:19">internal</name><operator pos:start="74:20" pos:end="74:21">-&gt;</operator><name pos:start="74:22" pos:end="74:53">raw_packet_buffer_remaining_size</name></name> <operator pos:start="74:55" pos:end="74:56">-=</operator> <name pos:start="74:58" pos:end="74:66"><name pos:start="74:58" pos:end="74:60">pkt</name><operator pos:start="74:61" pos:end="74:62">-&gt;</operator><name pos:start="74:63" pos:end="74:66">size</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="75:9" pos:end="76:23"><if pos:start="75:9" pos:end="76:23">if <condition pos:start="75:12" pos:end="75:48">(<expr pos:start="75:13" pos:end="75:47"><operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:16">err</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:42"><name pos:start="75:20" pos:end="75:30">probe_codec</name><argument_list pos:start="75:31" pos:end="75:42">(<argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><name pos:start="75:32" pos:end="75:32">s</name></expr></argument>, <argument pos:start="75:35" pos:end="75:36"><expr pos:start="75:35" pos:end="75:36"><name pos:start="75:35" pos:end="75:36">st</name></expr></argument>, <argument pos:start="75:39" pos:end="75:41"><expr pos:start="75:39" pos:end="75:41"><name pos:start="75:39" pos:end="75:41">pkt</name></expr></argument>)</argument_list></call><operator pos:start="75:43" pos:end="75:43">)</operator> <operator pos:start="75:45" pos:end="75:45">&lt;</operator> <literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>)</condition><block type="pseudo" pos:start="76:13" pos:end="76:23"><block_content pos:start="76:13" pos:end="76:23">
            <return pos:start="76:13" pos:end="76:23">return <expr pos:start="76:20" pos:end="76:22"><name pos:start="76:20" pos:end="76:22">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></unit>
