<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14845.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">qcow2_invalidate_cache</name><parameter_list pos:start="1:35" pos:end="1:70">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:23">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVQcow2State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name> <init pos:start="7:15" pos:end="7:24">= <expr pos:start="7:17" pos:end="7:24"><name pos:start="7:17" pos:end="7:24"><name pos:start="7:17" pos:end="7:17">s</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:24">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QCryptoCipher</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">cipher</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">QDict</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">options</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="25:7">/*

     * Backing files are read-only which makes all of their metadata immutable,

     * that means we don't have to worry about reopening them here.

     */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:10">cipher</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:22"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">cipher</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">cipher</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:20">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><call pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:15">qcow2_close</name><argument_list pos:start="35:16" pos:end="35:19">(<argument pos:start="35:17" pos:end="35:18"><expr pos:start="35:17" pos:end="35:18"><name pos:start="35:17" pos:end="35:18">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><call pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:25">bdrv_invalidate_cache</name><argument_list pos:start="39:26" pos:end="39:51">(<argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:28">bs</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">file</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:38">bs</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:50"><expr pos:start="39:41" pos:end="39:50"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">local_err</name></expr>)</condition> <block pos:start="41:20" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:15">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:23">error_propagate</name><argument_list pos:start="43:24" pos:end="43:40">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">errp</name></expr></argument>, <argument pos:start="43:31" pos:end="43:39"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:10">bs</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:15">drv</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><call pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:10">memset</name><argument_list pos:start="53:11" pos:end="53:40">(<argument pos:start="53:12" pos:end="53:12"><expr pos:start="53:12" pos:end="53:12"><name pos:start="53:12" pos:end="53:12">s</name></expr></argument>, <argument pos:start="53:15" pos:end="53:15"><expr pos:start="53:15" pos:end="53:15"><literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr></argument>, <argument pos:start="53:18" pos:end="53:39"><expr pos:start="53:18" pos:end="53:39"><sizeof pos:start="53:18" pos:end="53:39">sizeof<argument_list pos:start="53:24" pos:end="53:39">(<argument pos:start="53:25" pos:end="53:38"><expr pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:38">BDRVQcow2State</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:11">options</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:46"><name pos:start="55:15" pos:end="55:33">qdict_clone_shallow</name><argument_list pos:start="55:34" pos:end="55:46">(<argument pos:start="55:35" pos:end="55:45"><expr pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:45"><name pos:start="55:35" pos:end="55:36">bs</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:45">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:9">flags</name> <operator pos:start="59:11" pos:end="59:12">&amp;=</operator> <operator pos:start="59:14" pos:end="59:14">~</operator><name pos:start="59:15" pos:end="59:29">BDRV_O_INACTIVE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:53"><expr pos:start="61:5" pos:end="61:52"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:52"><name pos:start="61:11" pos:end="61:20">qcow2_open</name><argument_list pos:start="61:21" pos:end="61:52">(<argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">bs</name></expr></argument>, <argument pos:start="61:26" pos:end="61:32"><expr pos:start="61:26" pos:end="61:32"><name pos:start="61:26" pos:end="61:32">options</name></expr></argument>, <argument pos:start="61:35" pos:end="61:39"><expr pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:39">flags</name></expr></argument>, <argument pos:start="61:42" pos:end="61:51"><expr pos:start="61:42" pos:end="61:51"><operator pos:start="61:42" pos:end="61:42">&amp;</operator><name pos:start="61:43" pos:end="61:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:11">QDECREF</name><argument_list pos:start="63:12" pos:end="63:20">(<argument pos:start="63:13" pos:end="63:19"><expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="83:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:17">local_err</name></expr>)</condition> <block pos:start="65:20" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:15">

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><call pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:23">error_propagate</name><argument_list pos:start="67:24" pos:end="67:40">(<argument pos:start="67:25" pos:end="67:28"><expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:28">errp</name></expr></argument>, <argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><call pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:21">error_prepend</name><argument_list pos:start="69:22" pos:end="69:61">(<argument pos:start="69:23" pos:end="69:26"><expr pos:start="69:23" pos:end="69:26"><name pos:start="69:23" pos:end="69:26">errp</name></expr></argument>, <argument pos:start="69:29" pos:end="69:60"><expr pos:start="69:29" pos:end="69:60"><literal type="string" pos:start="69:29" pos:end="69:60">"Could not reopen qcow2 layer: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:10">bs</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:15">drv</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:22">NULL</name></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="83:5">else if <condition pos:start="75:15" pos:end="75:23">(<expr pos:start="75:16" pos:end="75:22"><name pos:start="75:16" pos:end="75:18">ret</name> <operator pos:start="75:20" pos:end="75:20">&lt;</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>)</condition> <block pos:start="75:25" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:15">

        <expr_stmt pos:start="77:9" pos:end="77:69"><expr pos:start="77:9" pos:end="77:68"><call pos:start="77:9" pos:end="77:68"><name pos:start="77:9" pos:end="77:24">error_setg_errno</name><argument_list pos:start="77:25" pos:end="77:68">(<argument pos:start="77:26" pos:end="77:29"><expr pos:start="77:26" pos:end="77:29"><name pos:start="77:26" pos:end="77:29">errp</name></expr></argument>, <argument pos:start="77:32" pos:end="77:35"><expr pos:start="77:32" pos:end="77:35"><operator pos:start="77:32" pos:end="77:32">-</operator><name pos:start="77:33" pos:end="77:35">ret</name></expr></argument>, <argument pos:start="77:38" pos:end="77:67"><expr pos:start="77:38" pos:end="77:67"><literal type="string" pos:start="77:38" pos:end="77:67">"Could not reopen qcow2 layer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:23"><expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:10">bs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:15">drv</name></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:22">NULL</name></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:23"><expr pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:13">cipher</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:22">cipher</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
