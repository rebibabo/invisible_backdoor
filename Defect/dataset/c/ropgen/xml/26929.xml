<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26929.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">build_file_streams</name><parameter_list pos:start="1:31" pos:end="1:36">(<parameter pos:start="1:32" pos:end="1:35"><decl pos:start="1:32" pos:end="1:35"><type pos:start="1:32" pos:end="1:35"><name pos:start="1:32" pos:end="1:35">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">FFStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">stream</name></decl>, <decl pos:start="5:23" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:14"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:34">stream_next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:27">infile</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:28">/* gather all streams */</comment>

    <for pos:start="15:5" pos:end="91:5">for<control pos:start="15:8" pos:end="15:68">(<init pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:14">stream</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:29">first_stream</name></expr>;</init> <condition pos:start="15:32" pos:end="15:46"><expr pos:start="15:32" pos:end="15:45"><name pos:start="15:32" pos:end="15:37">stream</name> <operator pos:start="15:39" pos:end="15:40">!=</operator> <name pos:start="15:42" pos:end="15:45">NULL</name></expr>;</condition> <incr pos:start="15:48" pos:end="15:67"><expr pos:start="15:48" pos:end="15:67"><name pos:start="15:48" pos:end="15:53">stream</name> <operator pos:start="15:55" pos:end="15:55">=</operator> <name pos:start="15:57" pos:end="15:67">stream_next</name></expr></incr>)</control> <block pos:start="15:70" pos:end="91:5">{<block_content pos:start="17:9" pos:end="89:9">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:19">stream_next</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:28">stream</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:34">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="89:9"><if pos:start="19:9" pos:end="89:9">if <condition pos:start="19:12" pos:end="21:26">(<expr pos:start="19:13" pos:end="21:25"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:18">stream</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:31">stream_type</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <name pos:start="19:36" pos:end="19:51">STREAM_TYPE_LIVE</name> <operator pos:start="19:53" pos:end="19:54">&amp;&amp;</operator>

            <operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:25"><name pos:start="21:14" pos:end="21:19">stream</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">feed</name></name></expr>)</condition> <block pos:start="21:28" pos:end="89:9">{<block_content pos:start="29:13" pos:end="87:13">

            <comment type="block" pos:start="23:13" pos:end="23:46">/* the stream comes from a file */</comment>

            <comment type="block" pos:start="25:13" pos:end="25:38">/* try to open the file */</comment>

            <comment type="block" pos:start="27:13" pos:end="27:29">/* open stream */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:67"><expr pos:start="29:13" pos:end="29:66"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:18">stream</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">ap_in</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <call pos:start="29:29" pos:end="29:66"><name pos:start="29:29" pos:end="29:38">av_mallocz</name><argument_list pos:start="29:39" pos:end="29:66">(<argument pos:start="29:40" pos:end="29:65"><expr pos:start="29:40" pos:end="29:65"><sizeof pos:start="29:40" pos:end="29:65">sizeof<argument_list pos:start="29:46" pos:end="29:65">(<argument pos:start="29:47" pos:end="29:64"><expr pos:start="29:47" pos:end="29:64"><name pos:start="29:47" pos:end="29:64">AVFormatParameters</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="41:13"><if pos:start="31:13" pos:end="41:13">if <condition pos:start="31:16" pos:end="31:50">(<expr pos:start="31:17" pos:end="31:49"><operator pos:start="31:17" pos:end="31:17">!</operator><call pos:start="31:18" pos:end="31:49"><name pos:start="31:18" pos:end="31:23">strcmp</name><argument_list pos:start="31:24" pos:end="31:49">(<argument pos:start="31:25" pos:end="31:41"><expr pos:start="31:25" pos:end="31:41"><name pos:start="31:25" pos:end="31:41"><name pos:start="31:25" pos:end="31:30">stream</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:35">fmt</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">name</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:48"><expr pos:start="31:44" pos:end="31:48"><literal type="string" pos:start="31:44" pos:end="31:48">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:52" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:55">

                <comment type="block" pos:start="33:17" pos:end="35:58">/* specific case : if transport stream output to RTP,

                   we use a raw transport stream reader */</comment>

                <expr_stmt pos:start="37:17" pos:end="37:47"><expr pos:start="37:17" pos:end="37:46"><name pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:22">stream</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">ap_in</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:42">mpeg2ts_raw</name></name> <operator pos:start="37:44" pos:end="37:44">=</operator> <literal type="number" pos:start="37:46" pos:end="37:46">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:55"><expr pos:start="39:17" pos:end="39:54"><name pos:start="39:17" pos:end="39:50"><name pos:start="39:17" pos:end="39:22">stream</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:29">ap_in</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:50">mpeg2ts_compute_pcr</name></name> <operator pos:start="39:52" pos:end="39:52">=</operator> <literal type="number" pos:start="39:54" pos:end="39:54">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="45:13" pos:end="87:13"><if pos:start="45:13" pos:end="57:13">if <condition pos:start="45:16" pos:end="47:71">(<expr pos:start="45:17" pos:end="47:70"><call pos:start="45:17" pos:end="47:66"><name pos:start="45:17" pos:end="45:34">av_open_input_file</name><argument_list pos:start="45:35" pos:end="47:66">(<argument pos:start="45:36" pos:end="45:42"><expr pos:start="45:36" pos:end="45:42"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:42">infile</name></expr></argument>, <argument pos:start="45:45" pos:end="45:65"><expr pos:start="45:45" pos:end="45:65"><name pos:start="45:45" pos:end="45:65"><name pos:start="45:45" pos:end="45:50">stream</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:65">feed_filename</name></name></expr></argument>,

                                   <argument pos:start="47:36" pos:end="47:47"><expr pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:41">stream</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">ifmt</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:50"><expr pos:start="47:50" pos:end="47:50"><literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr></argument>, <argument pos:start="47:53" pos:end="47:65"><expr pos:start="47:53" pos:end="47:65"><name pos:start="47:53" pos:end="47:65"><name pos:start="47:53" pos:end="47:58">stream</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:65">ap_in</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:68" pos:end="47:68">&lt;</operator> <literal type="number" pos:start="47:70" pos:end="47:70">0</literal></expr>)</condition> <block pos:start="47:73" pos:end="57:13">{<block_content pos:start="49:17" pos:end="55:38">

                <expr_stmt pos:start="49:17" pos:end="49:64"><expr pos:start="49:17" pos:end="49:63"><call pos:start="49:17" pos:end="49:63"><name pos:start="49:17" pos:end="49:24">http_log</name><argument_list pos:start="49:25" pos:end="49:63">(<argument pos:start="49:26" pos:end="49:39"><expr pos:start="49:26" pos:end="49:39"><literal type="string" pos:start="49:26" pos:end="49:39">"%s not found"</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:62"><expr pos:start="49:42" pos:end="49:62"><name pos:start="49:42" pos:end="49:62"><name pos:start="49:42" pos:end="49:47">stream</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:62">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="51:17" pos:end="51:70">/* remove stream (no need to spend more time on it) */</comment>

            <label pos:start="53:13" pos:end="53:17"><name pos:start="53:13" pos:end="53:16">fail</name>:</label>

                <expr_stmt pos:start="55:17" pos:end="55:38"><expr pos:start="55:17" pos:end="55:37"><call pos:start="55:17" pos:end="55:37"><name pos:start="55:17" pos:end="55:29">remove_stream</name><argument_list pos:start="55:30" pos:end="55:37">(<argument pos:start="55:31" pos:end="55:36"><expr pos:start="55:31" pos:end="55:36"><name pos:start="55:31" pos:end="55:36">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="87:13">else <block pos:start="57:20" pos:end="87:13">{<block_content pos:start="63:17" pos:end="85:44">

                <comment type="block" pos:start="59:17" pos:end="61:30">/* find all the AVStreams inside and reference them in

                   'stream' */</comment>

                <if_stmt pos:start="63:17" pos:end="73:17"><if pos:start="63:17" pos:end="73:17">if <condition pos:start="63:20" pos:end="63:52">(<expr pos:start="63:21" pos:end="63:51"><call pos:start="63:21" pos:end="63:47"><name pos:start="63:21" pos:end="63:39">av_find_stream_info</name><argument_list pos:start="63:40" pos:end="63:47">(<argument pos:start="63:41" pos:end="63:46"><expr pos:start="63:41" pos:end="63:46"><name pos:start="63:41" pos:end="63:46">infile</name></expr></argument>)</argument_list></call> <operator pos:start="63:49" pos:end="63:49">&lt;</operator> <literal type="number" pos:start="63:51" pos:end="63:51">0</literal></expr>)</condition> <block pos:start="63:54" pos:end="73:17">{<block_content pos:start="65:21" pos:end="71:30">

                    <expr_stmt pos:start="65:21" pos:end="67:52"><expr pos:start="65:21" pos:end="67:51"><call pos:start="65:21" pos:end="67:51"><name pos:start="65:21" pos:end="65:28">http_log</name><argument_list pos:start="65:29" pos:end="67:51">(<argument pos:start="65:30" pos:end="65:72"><expr pos:start="65:30" pos:end="65:72"><literal type="string" pos:start="65:30" pos:end="65:72">"Could not find codec parameters from '%s'"</literal></expr></argument>,

                             <argument pos:start="67:30" pos:end="67:50"><expr pos:start="67:30" pos:end="67:50"><name pos:start="67:30" pos:end="67:50"><name pos:start="67:30" pos:end="67:35">stream</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:50">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:48"><expr pos:start="69:21" pos:end="69:47"><call pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:39">av_close_input_file</name><argument_list pos:start="69:40" pos:end="69:47">(<argument pos:start="69:41" pos:end="69:46"><expr pos:start="69:41" pos:end="69:46"><name pos:start="69:41" pos:end="69:46">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="71:21" pos:end="71:30">goto <name pos:start="71:26" pos:end="71:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><call pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:36">extract_mpeg4_header</name><argument_list pos:start="75:37" pos:end="75:44">(<argument pos:start="75:38" pos:end="75:43"><expr pos:start="75:38" pos:end="75:43"><name pos:start="75:38" pos:end="75:43">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="79:17" pos:end="81:70">for<control pos:start="79:20" pos:end="79:49">(<init pos:start="79:21" pos:end="79:24"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:21">i</name><operator pos:start="79:22" pos:end="79:22">=</operator><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>;</init><condition pos:start="79:25" pos:end="79:45"><expr pos:start="79:25" pos:end="79:44"><name pos:start="79:25" pos:end="79:25">i</name><operator pos:start="79:26" pos:end="79:26">&lt;</operator><name pos:start="79:27" pos:end="79:44"><name pos:start="79:27" pos:end="79:32">infile</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:44">nb_streams</name></name></expr>;</condition><incr pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:46">i</name><operator pos:start="79:47" pos:end="79:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:21" pos:end="81:70"><block_content pos:start="81:21" pos:end="81:70">

                    <expr_stmt pos:start="81:21" pos:end="81:70"><expr pos:start="81:21" pos:end="81:69"><call pos:start="81:21" pos:end="81:69"><name pos:start="81:21" pos:end="81:34">add_av_stream1</name><argument_list pos:start="81:35" pos:end="81:69">(<argument pos:start="81:36" pos:end="81:41"><expr pos:start="81:36" pos:end="81:41"><name pos:start="81:36" pos:end="81:41">stream</name></expr></argument>, <argument pos:start="81:44" pos:end="81:68"><expr pos:start="81:44" pos:end="81:68"><name pos:start="81:44" pos:end="81:61"><name pos:start="81:44" pos:end="81:49">infile</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:58">streams</name><index pos:start="81:59" pos:end="81:61">[<expr pos:start="81:60" pos:end="81:60"><name pos:start="81:60" pos:end="81:60">i</name></expr>]</index></name><operator pos:start="81:62" pos:end="81:63">-&gt;</operator><name pos:start="81:64" pos:end="81:68">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="85:17" pos:end="85:44"><expr pos:start="85:17" pos:end="85:43"><call pos:start="85:17" pos:end="85:43"><name pos:start="85:17" pos:end="85:35">av_close_input_file</name><argument_list pos:start="85:36" pos:end="85:43">(<argument pos:start="85:37" pos:end="85:42"><expr pos:start="85:37" pos:end="85:42"><name pos:start="85:37" pos:end="85:42">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
