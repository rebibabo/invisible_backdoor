<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7714.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">handle_connection</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="307:1">{<block_content pos:start="5:5" pos:end="305:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">ret</name></decl>;</decl_stmt>

    

    <switch pos:start="9:5" pos:end="303:5">switch<condition pos:start="9:11" pos:end="9:20">(<expr pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:12">c</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:19">state</name></name></expr>)</condition> <block pos:start="9:22" pos:end="303:5">{<block_content pos:start="11:5" pos:end="301:18">

    <case pos:start="11:5" pos:end="11:32">case <expr pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:31">HTTPSTATE_WAIT_REQUEST</name></expr>:</case>

    <case pos:start="13:5" pos:end="13:32">case <expr pos:start="13:10" pos:end="13:31"><name pos:start="13:10" pos:end="13:31">RTSPSTATE_WAIT_REQUEST</name></expr>:</case>

        <comment type="block" pos:start="15:9" pos:end="15:23">/* timeout ? */</comment>

        <if_stmt pos:start="17:9" pos:end="19:22"><if pos:start="17:9" pos:end="19:22">if <condition pos:start="17:12" pos:end="17:40">(<expr pos:start="17:13" pos:end="17:39"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:23"><name pos:start="17:14" pos:end="17:14">c</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">timeout</name></name> <operator pos:start="17:25" pos:end="17:25">-</operator> <name pos:start="17:27" pos:end="17:34">cur_time</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:37">&lt;</operator> <literal type="number" pos:start="17:39" pos:end="17:39">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:22"><block_content pos:start="19:13" pos:end="19:22">

            <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">-</operator><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:57">(<expr pos:start="21:13" pos:end="21:56"><name pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:13">c</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">poll_entry</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:34">revents</name></name> <operator pos:start="21:36" pos:end="21:36">&amp;</operator> <operator pos:start="21:38" pos:end="21:38">(</operator><name pos:start="21:39" pos:end="21:45">POLLERR</name> <operator pos:start="21:47" pos:end="21:47">|</operator> <name pos:start="21:49" pos:end="21:55">POLLHUP</name><operator pos:start="21:56" pos:end="21:56">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="29:9" pos:end="31:21"><if pos:start="29:9" pos:end="31:21">if <condition pos:start="29:12" pos:end="29:47">(<expr pos:start="29:13" pos:end="29:46"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:36"><name pos:start="29:15" pos:end="29:15">c</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:27">poll_entry</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:36">revents</name></name> <operator pos:start="29:38" pos:end="29:38">&amp;</operator> <name pos:start="29:40" pos:end="29:45">POLLIN</name><operator pos:start="29:46" pos:end="29:46">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <return pos:start="31:13" pos:end="31:21">return <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:27">/* read the data */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:43"><name pos:start="35:15" pos:end="35:18">read</name><argument_list pos:start="35:19" pos:end="35:43">(<argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">c</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">fd</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:27">c</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:39">buffer_ptr</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><literal type="number" pos:start="35:42" pos:end="35:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="85:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:26">

            <if_stmt pos:start="39:13" pos:end="41:26"><if pos:start="39:13" pos:end="41:26">if <condition pos:start="39:16" pos:end="39:50">(<expr pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:21">errno</name> <operator pos:start="39:23" pos:end="39:24">!=</operator> <name pos:start="39:26" pos:end="39:31">EAGAIN</name> <operator pos:start="39:33" pos:end="39:34">&amp;&amp;</operator> <name pos:start="39:36" pos:end="39:40">errno</name> <operator pos:start="39:42" pos:end="39:43">!=</operator> <name pos:start="39:45" pos:end="39:49">EINTR</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:26"><block_content pos:start="41:17" pos:end="41:26">

                <return pos:start="41:17" pos:end="41:26">return <expr pos:start="41:24" pos:end="41:25"><operator pos:start="41:24" pos:end="41:24">-</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="47:9">else if <condition pos:start="43:19" pos:end="43:28">(<expr pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:22">len</name> <operator pos:start="43:24" pos:end="43:25">==</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>)</condition> <block pos:start="43:30" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:22">

            <return pos:start="45:13" pos:end="45:22">return <expr pos:start="45:20" pos:end="45:21"><operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="85:9">else <block pos:start="47:16" pos:end="85:9">{<block_content pos:start="51:13" pos:end="83:13">

            <comment type="block" pos:start="49:13" pos:end="49:44">/* search for end of request. */</comment>

            <decl_stmt pos:start="51:13" pos:end="51:25"><decl pos:start="51:13" pos:end="51:24"><type pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:19">uint8_t</name> <modifier pos:start="51:21" pos:end="51:21">*</modifier></type><name pos:start="51:22" pos:end="51:24">ptr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">buffer_ptr</name></name> <operator pos:start="53:27" pos:end="53:28">+=</operator> <name pos:start="53:30" pos:end="53:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:15">ptr</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:19">c</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:31">buffer_ptr</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="83:13"><if pos:start="57:13" pos:end="77:13">if <condition pos:start="57:16" pos:end="59:72">(<expr pos:start="57:17" pos:end="59:71"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:20">ptr</name> <operator pos:start="57:22" pos:end="57:23">&gt;=</operator> <name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">c</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">buffer</name></name> <operator pos:start="57:35" pos:end="57:35">+</operator> <literal type="number" pos:start="57:37" pos:end="57:37">2</literal> <operator pos:start="57:39" pos:end="57:40">&amp;&amp;</operator> <operator pos:start="57:42" pos:end="57:42">!</operator><call pos:start="57:43" pos:end="57:66"><name pos:start="57:43" pos:end="57:48">memcmp</name><argument_list pos:start="57:49" pos:end="57:66">(<argument pos:start="57:50" pos:end="57:54"><expr pos:start="57:50" pos:end="57:54"><name pos:start="57:50" pos:end="57:52">ptr</name><operator pos:start="57:53" pos:end="57:53">-</operator><literal type="number" pos:start="57:54" pos:end="57:54">2</literal></expr></argument>, <argument pos:start="57:57" pos:end="57:62"><expr pos:start="57:57" pos:end="57:62"><literal type="string" pos:start="57:57" pos:end="57:62">"\n\n"</literal></expr></argument>, <argument pos:start="57:65" pos:end="57:65"><expr pos:start="57:65" pos:end="57:65"><literal type="number" pos:start="57:65" pos:end="57:65">2</literal></expr></argument>)</argument_list></call><operator pos:start="57:67" pos:end="57:67">)</operator> <operator pos:start="57:69" pos:end="57:70">||</operator>

                <operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:20">ptr</name> <operator pos:start="59:22" pos:end="59:23">&gt;=</operator> <name pos:start="59:25" pos:end="59:33"><name pos:start="59:25" pos:end="59:25">c</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:33">buffer</name></name> <operator pos:start="59:35" pos:end="59:35">+</operator> <literal type="number" pos:start="59:37" pos:end="59:37">4</literal> <operator pos:start="59:39" pos:end="59:40">&amp;&amp;</operator> <operator pos:start="59:42" pos:end="59:42">!</operator><call pos:start="59:43" pos:end="59:70"><name pos:start="59:43" pos:end="59:48">memcmp</name><argument_list pos:start="59:49" pos:end="59:70">(<argument pos:start="59:50" pos:end="59:54"><expr pos:start="59:50" pos:end="59:54"><name pos:start="59:50" pos:end="59:52">ptr</name><operator pos:start="59:53" pos:end="59:53">-</operator><literal type="number" pos:start="59:54" pos:end="59:54">4</literal></expr></argument>, <argument pos:start="59:57" pos:end="59:66"><expr pos:start="59:57" pos:end="59:66"><literal type="string" pos:start="59:57" pos:end="59:66">"\r\n\r\n"</literal></expr></argument>, <argument pos:start="59:69" pos:end="59:69"><expr pos:start="59:69" pos:end="59:69"><literal type="number" pos:start="59:69" pos:end="59:69">4</literal></expr></argument>)</argument_list></call><operator pos:start="59:71" pos:end="59:71">)</operator></expr>)</condition> <block pos:start="59:74" pos:end="77:13">{<block_content pos:start="63:17" pos:end="75:30">

                <comment type="block" pos:start="61:17" pos:end="61:56">/* request found : parse it and reply */</comment>

                <if_stmt pos:start="63:17" pos:end="71:17"><if pos:start="63:17" pos:end="67:17">if <condition pos:start="63:20" pos:end="63:55">(<expr pos:start="63:21" pos:end="63:54"><name pos:start="63:21" pos:end="63:28"><name pos:start="63:21" pos:end="63:21">c</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:28">state</name></name> <operator pos:start="63:30" pos:end="63:31">==</operator> <name pos:start="63:33" pos:end="63:54">HTTPSTATE_WAIT_REQUEST</name></expr>)</condition> <block pos:start="63:57" pos:end="67:17">{<block_content pos:start="65:21" pos:end="65:48">

                    <expr_stmt pos:start="65:21" pos:end="65:48"><expr pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:23">ret</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:47"><name pos:start="65:27" pos:end="65:44">http_parse_request</name><argument_list pos:start="65:45" pos:end="65:47">(<argument pos:start="65:46" pos:end="65:46"><expr pos:start="65:46" pos:end="65:46"><name pos:start="65:46" pos:end="65:46">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="67:19" pos:end="71:17">else <block pos:start="67:24" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:48">

                    <expr_stmt pos:start="69:21" pos:end="69:48"><expr pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:23">ret</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:47"><name pos:start="69:27" pos:end="69:44">rtsp_parse_request</name><argument_list pos:start="69:45" pos:end="69:47">(<argument pos:start="69:46" pos:end="69:46"><expr pos:start="69:46" pos:end="69:46"><name pos:start="69:46" pos:end="69:46">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="73:17" pos:end="75:30"><if pos:start="73:17" pos:end="75:30">if <condition pos:start="73:20" pos:end="73:28">(<expr pos:start="73:21" pos:end="73:27"><name pos:start="73:21" pos:end="73:23">ret</name> <operator pos:start="73:25" pos:end="73:25">&lt;</operator> <literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:30"><block_content pos:start="75:21" pos:end="75:30">

                    <return pos:start="75:21" pos:end="75:30">return <expr pos:start="75:28" pos:end="75:29"><operator pos:start="75:28" pos:end="75:28">-</operator><literal type="number" pos:start="75:29" pos:end="75:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="83:13">else if <condition pos:start="77:23" pos:end="77:44">(<expr pos:start="77:24" pos:end="77:43"><name pos:start="77:24" pos:end="77:26">ptr</name> <operator pos:start="77:28" pos:end="77:29">&gt;=</operator> <name pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:31">c</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:43">buffer_end</name></name></expr>)</condition> <block pos:start="77:46" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:26">

                <comment type="block" pos:start="79:17" pos:end="79:58">/* request too long: cannot do anything */</comment>

                <return pos:start="81:17" pos:end="81:26">return <expr pos:start="81:24" pos:end="81:25"><operator pos:start="81:24" pos:end="81:24">-</operator><literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <case pos:start="91:5" pos:end="91:31">case <expr pos:start="91:10" pos:end="91:30"><name pos:start="91:10" pos:end="91:30">HTTPSTATE_SEND_HEADER</name></expr>:</case>

        <if_stmt pos:start="93:9" pos:end="95:22"><if pos:start="93:9" pos:end="95:22">if <condition pos:start="93:12" pos:end="93:57">(<expr pos:start="93:13" pos:end="93:56"><name pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:13">c</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:25">poll_entry</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:34">revents</name></name> <operator pos:start="93:36" pos:end="93:36">&amp;</operator> <operator pos:start="93:38" pos:end="93:38">(</operator><name pos:start="93:39" pos:end="93:45">POLLERR</name> <operator pos:start="93:47" pos:end="93:47">|</operator> <name pos:start="93:49" pos:end="93:55">POLLHUP</name><operator pos:start="93:56" pos:end="93:56">)</operator></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <return pos:start="95:13" pos:end="95:22">return <expr pos:start="95:20" pos:end="95:21"><operator pos:start="95:20" pos:end="95:20">-</operator><literal type="number" pos:start="95:21" pos:end="95:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:43">/* no need to write if no events */</comment>

        <if_stmt pos:start="101:9" pos:end="103:21"><if pos:start="101:9" pos:end="103:21">if <condition pos:start="101:12" pos:end="101:48">(<expr pos:start="101:13" pos:end="101:47"><operator pos:start="101:13" pos:end="101:13">!</operator><operator pos:start="101:14" pos:end="101:14">(</operator><name pos:start="101:15" pos:end="101:36"><name pos:start="101:15" pos:end="101:15">c</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:27">poll_entry</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:36">revents</name></name> <operator pos:start="101:38" pos:end="101:38">&amp;</operator> <name pos:start="101:40" pos:end="101:46">POLLOUT</name><operator pos:start="101:47" pos:end="101:47">)</operator></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:21"><block_content pos:start="103:13" pos:end="103:21">

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:73"><expr pos:start="105:9" pos:end="105:72"><name pos:start="105:9" pos:end="105:11">len</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:72"><name pos:start="105:15" pos:end="105:19">write</name><argument_list pos:start="105:20" pos:end="105:72">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:21">c</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:25">fd</name></name></expr></argument>, <argument pos:start="105:28" pos:end="105:40"><expr pos:start="105:28" pos:end="105:40"><name pos:start="105:28" pos:end="105:40"><name pos:start="105:28" pos:end="105:28">c</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:40">buffer_ptr</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:71"><expr pos:start="105:43" pos:end="105:71"><name pos:start="105:43" pos:end="105:55"><name pos:start="105:43" pos:end="105:43">c</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:55">buffer_end</name></name> <operator pos:start="105:57" pos:end="105:57">-</operator> <name pos:start="105:59" pos:end="105:71"><name pos:start="105:59" pos:end="105:59">c</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:71">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="149:9"><if pos:start="107:9" pos:end="119:9">if <condition pos:start="107:12" pos:end="107:20">(<expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:15">len</name> <operator pos:start="107:17" pos:end="107:17">&lt;</operator> <literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>)</condition> <block pos:start="107:22" pos:end="119:9">{<block_content pos:start="109:13" pos:end="117:13">

            <if_stmt pos:start="109:13" pos:end="117:13"><if pos:start="109:13" pos:end="117:13">if <condition pos:start="109:16" pos:end="109:50">(<expr pos:start="109:17" pos:end="109:49"><name pos:start="109:17" pos:end="109:21">errno</name> <operator pos:start="109:23" pos:end="109:24">!=</operator> <name pos:start="109:26" pos:end="109:31">EAGAIN</name> <operator pos:start="109:33" pos:end="109:34">&amp;&amp;</operator> <name pos:start="109:36" pos:end="109:40">errno</name> <operator pos:start="109:42" pos:end="109:43">!=</operator> <name pos:start="109:45" pos:end="109:49">EINTR</name></expr>)</condition> <block pos:start="109:52" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:26">

                <comment type="block" pos:start="111:17" pos:end="111:46">/* error : close connection */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:39"><call pos:start="113:17" pos:end="113:39"><name pos:start="113:17" pos:end="113:24">av_freep</name><argument_list pos:start="113:25" pos:end="113:39">(<argument pos:start="113:26" pos:end="113:38"><expr pos:start="113:26" pos:end="113:38"><operator pos:start="113:26" pos:end="113:26">&amp;</operator><name pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:27">c</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:38">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:26">return <expr pos:start="115:24" pos:end="115:25"><operator pos:start="115:24" pos:end="115:24">-</operator><literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="149:9">else <block pos:start="119:16" pos:end="149:9">{<block_content pos:start="121:13" pos:end="147:13">

            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:13">c</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:25">buffer_ptr</name></name> <operator pos:start="121:27" pos:end="121:28">+=</operator> <name pos:start="121:30" pos:end="121:32">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="125:47"><if pos:start="123:13" pos:end="125:47">if <condition pos:start="123:16" pos:end="123:26">(<expr pos:start="123:17" pos:end="123:25"><name pos:start="123:17" pos:end="123:25"><name pos:start="123:17" pos:end="123:17">c</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:25">stream</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:47"><block_content pos:start="125:17" pos:end="125:47">

                <expr_stmt pos:start="125:17" pos:end="125:47"><expr pos:start="125:17" pos:end="125:46"><name pos:start="125:17" pos:end="125:39"><name pos:start="125:17" pos:end="125:17">c</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:25">stream</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:39">bytes_served</name></name> <operator pos:start="125:41" pos:end="125:42">+=</operator> <name pos:start="125:44" pos:end="125:46">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:33"><expr pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:13">c</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:25">data_count</name></name> <operator pos:start="127:27" pos:end="127:28">+=</operator> <name pos:start="127:30" pos:end="127:32">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="147:13"><if pos:start="129:13" pos:end="147:13">if <condition pos:start="129:16" pos:end="129:47">(<expr pos:start="129:17" pos:end="129:46"><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:17">c</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:29">buffer_ptr</name></name> <operator pos:start="129:31" pos:end="129:32">&gt;=</operator> <name pos:start="129:34" pos:end="129:46"><name pos:start="129:34" pos:end="129:34">c</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:46">buffer_end</name></name></expr>)</condition> <block pos:start="129:49" pos:end="147:13">{<block_content pos:start="131:17" pos:end="145:58">

                <expr_stmt pos:start="131:17" pos:end="131:40"><expr pos:start="131:17" pos:end="131:39"><call pos:start="131:17" pos:end="131:39"><name pos:start="131:17" pos:end="131:24">av_freep</name><argument_list pos:start="131:25" pos:end="131:39">(<argument pos:start="131:26" pos:end="131:38"><expr pos:start="131:26" pos:end="131:38"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:38"><name pos:start="131:27" pos:end="131:27">c</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:38">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="133:17" pos:end="133:36">/* if error, exit */</comment>

                <if_stmt pos:start="135:17" pos:end="139:17"><if pos:start="135:17" pos:end="139:17">if <condition pos:start="135:20" pos:end="135:34">(<expr pos:start="135:21" pos:end="135:33"><name pos:start="135:21" pos:end="135:33"><name pos:start="135:21" pos:end="135:21">c</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:33">http_error</name></name></expr>)</condition> <block pos:start="135:36" pos:end="139:17">{<block_content pos:start="137:21" pos:end="137:30">

                    <return pos:start="137:21" pos:end="137:30">return <expr pos:start="137:28" pos:end="137:29"><operator pos:start="137:28" pos:end="137:28">-</operator><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="141:17" pos:end="141:82">/* all the buffer was sent : synchronize to the incoming stream */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:54"><expr pos:start="143:17" pos:end="143:53"><name pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:17">c</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:24">state</name></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:53">HTTPSTATE_SEND_DATA_HEADER</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:58"><expr pos:start="145:17" pos:end="145:57"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:17">c</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:29">buffer_ptr</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:45"><name pos:start="145:33" pos:end="145:33">c</name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:45">buffer_end</name></name> <operator pos:start="145:47" pos:end="145:47">=</operator> <name pos:start="145:49" pos:end="145:57"><name pos:start="145:49" pos:end="145:49">c</name><operator pos:start="145:50" pos:end="145:51">-&gt;</operator><name pos:start="145:52" pos:end="145:57">buffer</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>



    <case pos:start="155:5" pos:end="155:29">case <expr pos:start="155:10" pos:end="155:28"><name pos:start="155:10" pos:end="155:28">HTTPSTATE_SEND_DATA</name></expr>:</case>

    <case pos:start="157:5" pos:end="157:36">case <expr pos:start="157:10" pos:end="157:35"><name pos:start="157:10" pos:end="157:35">HTTPSTATE_SEND_DATA_HEADER</name></expr>:</case>

    <case pos:start="159:5" pos:end="159:37">case <expr pos:start="159:10" pos:end="159:36"><name pos:start="159:10" pos:end="159:36">HTTPSTATE_SEND_DATA_TRAILER</name></expr>:</case>

        <comment type="block" pos:start="161:9" pos:end="165:63">/* for packetized output, we consider we can always write (the

           input streams sets the speed). It may be better to verify

           that we do not rely too much on the kernel queues */</comment>

        <if_stmt pos:start="167:9" pos:end="181:9"><if pos:start="167:9" pos:end="181:9">if <condition pos:start="167:12" pos:end="167:30">(<expr pos:start="167:13" pos:end="167:29"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:29"><name pos:start="167:14" pos:end="167:14">c</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:29">is_packetized</name></name></expr>)</condition> <block pos:start="167:32" pos:end="181:9">{<block_content pos:start="169:13" pos:end="179:25">

            <if_stmt pos:start="169:13" pos:end="171:26"><if pos:start="169:13" pos:end="171:26">if <condition pos:start="169:16" pos:end="169:61">(<expr pos:start="169:17" pos:end="169:60"><name pos:start="169:17" pos:end="169:38"><name pos:start="169:17" pos:end="169:17">c</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:29">poll_entry</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:38">revents</name></name> <operator pos:start="169:40" pos:end="169:40">&amp;</operator> <operator pos:start="169:42" pos:end="169:42">(</operator><name pos:start="169:43" pos:end="169:49">POLLERR</name> <operator pos:start="169:51" pos:end="169:51">|</operator> <name pos:start="169:53" pos:end="169:59">POLLHUP</name><operator pos:start="169:60" pos:end="169:60">)</operator></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:26"><block_content pos:start="171:17" pos:end="171:26">

                <return pos:start="171:17" pos:end="171:26">return <expr pos:start="171:24" pos:end="171:25"><operator pos:start="171:24" pos:end="171:24">-</operator><literal type="number" pos:start="171:25" pos:end="171:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            

            <comment type="block" pos:start="175:13" pos:end="175:46">/* no need to read if no events */</comment>

            <if_stmt pos:start="177:13" pos:end="179:25"><if pos:start="177:13" pos:end="179:25">if <condition pos:start="177:16" pos:end="177:52">(<expr pos:start="177:17" pos:end="177:51"><operator pos:start="177:17" pos:end="177:17">!</operator><operator pos:start="177:18" pos:end="177:18">(</operator><name pos:start="177:19" pos:end="177:40"><name pos:start="177:19" pos:end="177:19">c</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:31">poll_entry</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:40">revents</name></name> <operator pos:start="177:42" pos:end="177:42">&amp;</operator> <name pos:start="177:44" pos:end="177:50">POLLOUT</name><operator pos:start="177:51" pos:end="177:51">)</operator></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:25"><block_content pos:start="179:17" pos:end="179:25">

                <return pos:start="179:17" pos:end="179:25">return <expr pos:start="179:24" pos:end="179:24"><literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="183:9" pos:end="185:22"><if pos:start="183:9" pos:end="185:22">if <condition pos:start="183:12" pos:end="183:34">(<expr pos:start="183:13" pos:end="183:33"><call pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:26">http_send_data</name><argument_list pos:start="183:27" pos:end="183:29">(<argument pos:start="183:28" pos:end="183:28"><expr pos:start="183:28" pos:end="183:28"><name pos:start="183:28" pos:end="183:28">c</name></expr></argument>)</argument_list></call> <operator pos:start="183:31" pos:end="183:31">&lt;</operator> <literal type="number" pos:start="183:33" pos:end="183:33">0</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:22"><block_content pos:start="185:13" pos:end="185:22">

            <return pos:start="185:13" pos:end="185:22">return <expr pos:start="185:20" pos:end="185:21"><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:32">case <expr pos:start="189:10" pos:end="189:31"><name pos:start="189:10" pos:end="189:31">HTTPSTATE_RECEIVE_DATA</name></expr>:</case>

        <comment type="block" pos:start="191:9" pos:end="191:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="193:9" pos:end="195:22"><if pos:start="193:9" pos:end="195:22">if <condition pos:start="193:12" pos:end="193:57">(<expr pos:start="193:13" pos:end="193:56"><name pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:13">c</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:25">poll_entry</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:34">revents</name></name> <operator pos:start="193:36" pos:end="193:36">&amp;</operator> <operator pos:start="193:38" pos:end="193:38">(</operator><name pos:start="193:39" pos:end="193:45">POLLERR</name> <operator pos:start="193:47" pos:end="193:47">|</operator> <name pos:start="193:49" pos:end="193:55">POLLHUP</name><operator pos:start="193:56" pos:end="193:56">)</operator></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:22"><block_content pos:start="195:13" pos:end="195:22">

            <return pos:start="195:13" pos:end="195:22">return <expr pos:start="195:20" pos:end="195:21"><operator pos:start="195:20" pos:end="195:20">-</operator><literal type="number" pos:start="195:21" pos:end="195:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="197:9" pos:end="199:21"><if pos:start="197:9" pos:end="199:21">if <condition pos:start="197:12" pos:end="197:47">(<expr pos:start="197:13" pos:end="197:46"><operator pos:start="197:13" pos:end="197:13">!</operator><operator pos:start="197:14" pos:end="197:14">(</operator><name pos:start="197:15" pos:end="197:36"><name pos:start="197:15" pos:end="197:15">c</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:27">poll_entry</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:36">revents</name></name> <operator pos:start="197:38" pos:end="197:38">&amp;</operator> <name pos:start="197:40" pos:end="197:45">POLLIN</name><operator pos:start="197:46" pos:end="197:46">)</operator></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:21"><block_content pos:start="199:13" pos:end="199:21">

            <return pos:start="199:13" pos:end="199:21">return <expr pos:start="199:20" pos:end="199:20"><literal type="number" pos:start="199:20" pos:end="199:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="201:9" pos:end="203:22"><if pos:start="201:9" pos:end="203:22">if <condition pos:start="201:12" pos:end="201:37">(<expr pos:start="201:13" pos:end="201:36"><call pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:29">http_receive_data</name><argument_list pos:start="201:30" pos:end="201:32">(<argument pos:start="201:31" pos:end="201:31"><expr pos:start="201:31" pos:end="201:31"><name pos:start="201:31" pos:end="201:31">c</name></expr></argument>)</argument_list></call> <operator pos:start="201:34" pos:end="201:34">&lt;</operator> <literal type="number" pos:start="201:36" pos:end="201:36">0</literal></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:22"><block_content pos:start="203:13" pos:end="203:22">

            <return pos:start="203:13" pos:end="203:22">return <expr pos:start="203:20" pos:end="203:21"><operator pos:start="203:20" pos:end="203:20">-</operator><literal type="number" pos:start="203:21" pos:end="203:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <case pos:start="207:5" pos:end="207:29">case <expr pos:start="207:10" pos:end="207:28"><name pos:start="207:10" pos:end="207:28">HTTPSTATE_WAIT_FEED</name></expr>:</case>

        <comment type="block" pos:start="209:9" pos:end="209:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="211:9" pos:end="213:22"><if pos:start="211:9" pos:end="213:22">if <condition pos:start="211:12" pos:end="211:66">(<expr pos:start="211:13" pos:end="211:65"><name pos:start="211:13" pos:end="211:34"><name pos:start="211:13" pos:end="211:13">c</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:25">poll_entry</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:34">revents</name></name> <operator pos:start="211:36" pos:end="211:36">&amp;</operator> <operator pos:start="211:38" pos:end="211:38">(</operator><name pos:start="211:39" pos:end="211:44">POLLIN</name> <operator pos:start="211:46" pos:end="211:46">|</operator> <name pos:start="211:48" pos:end="211:54">POLLERR</name> <operator pos:start="211:56" pos:end="211:56">|</operator> <name pos:start="211:58" pos:end="211:64">POLLHUP</name><operator pos:start="211:65" pos:end="211:65">)</operator></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:22"><block_content pos:start="213:13" pos:end="213:22">

            <return pos:start="213:13" pos:end="213:22">return <expr pos:start="213:20" pos:end="213:21"><operator pos:start="213:20" pos:end="213:20">-</operator><literal type="number" pos:start="213:21" pos:end="213:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="217:9" pos:end="217:71">/* nothing to do, we'll be waken up by incoming feed packets */</comment>

        <break pos:start="219:9" pos:end="219:14">break;</break>



    <case pos:start="223:5" pos:end="223:24">case <expr pos:start="223:10" pos:end="223:23"><name pos:start="223:10" pos:end="223:23">HTTPSTATE_WAIT</name></expr>:</case>

        <comment type="block" pos:start="225:9" pos:end="225:59">/* if the delay expired, we can send new packets */</comment>

        <if_stmt pos:start="227:9" pos:end="229:43"><if pos:start="227:9" pos:end="229:43">if <condition pos:start="227:12" pos:end="227:39">(<expr pos:start="227:13" pos:end="227:38"><call pos:start="227:13" pos:end="227:33"><name pos:start="227:13" pos:end="227:30">compute_send_delay</name><argument_list pos:start="227:31" pos:end="227:33">(<argument pos:start="227:32" pos:end="227:32"><expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">c</name></expr></argument>)</argument_list></call> <operator pos:start="227:35" pos:end="227:36">&lt;=</operator> <literal type="number" pos:start="227:38" pos:end="227:38">0</literal></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:43"><block_content pos:start="229:13" pos:end="229:43">

            <expr_stmt pos:start="229:13" pos:end="229:43"><expr pos:start="229:13" pos:end="229:42"><name pos:start="229:13" pos:end="229:20"><name pos:start="229:13" pos:end="229:13">c</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:20">state</name></name> <operator pos:start="229:22" pos:end="229:22">=</operator> <name pos:start="229:24" pos:end="229:42">HTTPSTATE_SEND_DATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:30">case <expr pos:start="233:10" pos:end="233:29"><name pos:start="233:10" pos:end="233:29">HTTPSTATE_WAIT_SHORT</name></expr>:</case>

        <comment type="block" pos:start="235:9" pos:end="235:43">/* just return back to send data */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:39"><expr pos:start="237:9" pos:end="237:38"><name pos:start="237:9" pos:end="237:16"><name pos:start="237:9" pos:end="237:9">c</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:16">state</name></name> <operator pos:start="237:18" pos:end="237:18">=</operator> <name pos:start="237:20" pos:end="237:38">HTTPSTATE_SEND_DATA</name></expr>;</expr_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>



    <case pos:start="243:5" pos:end="243:30">case <expr pos:start="243:10" pos:end="243:29"><name pos:start="243:10" pos:end="243:29">RTSPSTATE_SEND_REPLY</name></expr>:</case>

        <if_stmt pos:start="245:9" pos:end="251:9"><if pos:start="245:9" pos:end="251:9">if <condition pos:start="245:12" pos:end="245:57">(<expr pos:start="245:13" pos:end="245:56"><name pos:start="245:13" pos:end="245:34"><name pos:start="245:13" pos:end="245:13">c</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:25">poll_entry</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:34">revents</name></name> <operator pos:start="245:36" pos:end="245:36">&amp;</operator> <operator pos:start="245:38" pos:end="245:38">(</operator><name pos:start="245:39" pos:end="245:45">POLLERR</name> <operator pos:start="245:47" pos:end="245:47">|</operator> <name pos:start="245:49" pos:end="245:55">POLLHUP</name><operator pos:start="245:56" pos:end="245:56">)</operator></expr>)</condition> <block pos:start="245:59" pos:end="251:9">{<block_content pos:start="247:13" pos:end="249:22">

            <expr_stmt pos:start="247:13" pos:end="247:36"><expr pos:start="247:13" pos:end="247:35"><call pos:start="247:13" pos:end="247:35"><name pos:start="247:13" pos:end="247:20">av_freep</name><argument_list pos:start="247:21" pos:end="247:35">(<argument pos:start="247:22" pos:end="247:34"><expr pos:start="247:22" pos:end="247:34"><operator pos:start="247:22" pos:end="247:22">&amp;</operator><name pos:start="247:23" pos:end="247:34"><name pos:start="247:23" pos:end="247:23">c</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:34">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="249:13" pos:end="249:22">return <expr pos:start="249:20" pos:end="249:21"><operator pos:start="249:20" pos:end="249:20">-</operator><literal type="number" pos:start="249:21" pos:end="249:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="253:9" pos:end="253:43">/* no need to write if no events */</comment>

        <if_stmt pos:start="255:9" pos:end="257:21"><if pos:start="255:9" pos:end="257:21">if <condition pos:start="255:12" pos:end="255:48">(<expr pos:start="255:13" pos:end="255:47"><operator pos:start="255:13" pos:end="255:13">!</operator><operator pos:start="255:14" pos:end="255:14">(</operator><name pos:start="255:15" pos:end="255:36"><name pos:start="255:15" pos:end="255:15">c</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:27">poll_entry</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:36">revents</name></name> <operator pos:start="255:38" pos:end="255:38">&amp;</operator> <name pos:start="255:40" pos:end="255:46">POLLOUT</name><operator pos:start="255:47" pos:end="255:47">)</operator></expr>)</condition><block type="pseudo" pos:start="257:13" pos:end="257:21"><block_content pos:start="257:13" pos:end="257:21">

            <return pos:start="257:13" pos:end="257:21">return <expr pos:start="257:20" pos:end="257:20"><literal type="number" pos:start="257:20" pos:end="257:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:73"><expr pos:start="259:9" pos:end="259:72"><name pos:start="259:9" pos:end="259:11">len</name> <operator pos:start="259:13" pos:end="259:13">=</operator> <call pos:start="259:15" pos:end="259:72"><name pos:start="259:15" pos:end="259:19">write</name><argument_list pos:start="259:20" pos:end="259:72">(<argument pos:start="259:21" pos:end="259:25"><expr pos:start="259:21" pos:end="259:25"><name pos:start="259:21" pos:end="259:25"><name pos:start="259:21" pos:end="259:21">c</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:25">fd</name></name></expr></argument>, <argument pos:start="259:28" pos:end="259:40"><expr pos:start="259:28" pos:end="259:40"><name pos:start="259:28" pos:end="259:40"><name pos:start="259:28" pos:end="259:28">c</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:40">buffer_ptr</name></name></expr></argument>, <argument pos:start="259:43" pos:end="259:71"><expr pos:start="259:43" pos:end="259:71"><name pos:start="259:43" pos:end="259:55"><name pos:start="259:43" pos:end="259:43">c</name><operator pos:start="259:44" pos:end="259:45">-&gt;</operator><name pos:start="259:46" pos:end="259:55">buffer_end</name></name> <operator pos:start="259:57" pos:end="259:57">-</operator> <name pos:start="259:59" pos:end="259:71"><name pos:start="259:59" pos:end="259:59">c</name><operator pos:start="259:60" pos:end="259:61">-&gt;</operator><name pos:start="259:62" pos:end="259:71">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="289:9"><if pos:start="261:9" pos:end="273:9">if <condition pos:start="261:12" pos:end="261:20">(<expr pos:start="261:13" pos:end="261:19"><name pos:start="261:13" pos:end="261:15">len</name> <operator pos:start="261:17" pos:end="261:17">&lt;</operator> <literal type="number" pos:start="261:19" pos:end="261:19">0</literal></expr>)</condition> <block pos:start="261:22" pos:end="273:9">{<block_content pos:start="263:13" pos:end="271:13">

            <if_stmt pos:start="263:13" pos:end="271:13"><if pos:start="263:13" pos:end="271:13">if <condition pos:start="263:16" pos:end="263:50">(<expr pos:start="263:17" pos:end="263:49"><name pos:start="263:17" pos:end="263:21">errno</name> <operator pos:start="263:23" pos:end="263:24">!=</operator> <name pos:start="263:26" pos:end="263:31">EAGAIN</name> <operator pos:start="263:33" pos:end="263:34">&amp;&amp;</operator> <name pos:start="263:36" pos:end="263:40">errno</name> <operator pos:start="263:42" pos:end="263:43">!=</operator> <name pos:start="263:45" pos:end="263:49">EINTR</name></expr>)</condition> <block pos:start="263:52" pos:end="271:13">{<block_content pos:start="267:17" pos:end="269:26">

                <comment type="block" pos:start="265:17" pos:end="265:46">/* error : close connection */</comment>

                <expr_stmt pos:start="267:17" pos:end="267:40"><expr pos:start="267:17" pos:end="267:39"><call pos:start="267:17" pos:end="267:39"><name pos:start="267:17" pos:end="267:24">av_freep</name><argument_list pos:start="267:25" pos:end="267:39">(<argument pos:start="267:26" pos:end="267:38"><expr pos:start="267:26" pos:end="267:38"><operator pos:start="267:26" pos:end="267:26">&amp;</operator><name pos:start="267:27" pos:end="267:38"><name pos:start="267:27" pos:end="267:27">c</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:38">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="269:17" pos:end="269:26">return <expr pos:start="269:24" pos:end="269:25"><operator pos:start="269:24" pos:end="269:24">-</operator><literal type="number" pos:start="269:25" pos:end="269:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="273:11" pos:end="289:9">else <block pos:start="273:16" pos:end="289:9">{<block_content pos:start="275:13" pos:end="287:13">

            <expr_stmt pos:start="275:13" pos:end="275:33"><expr pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:25"><name pos:start="275:13" pos:end="275:13">c</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:25">buffer_ptr</name></name> <operator pos:start="275:27" pos:end="275:28">+=</operator> <name pos:start="275:30" pos:end="275:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:33"><expr pos:start="277:13" pos:end="277:32"><name pos:start="277:13" pos:end="277:25"><name pos:start="277:13" pos:end="277:13">c</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:25">data_count</name></name> <operator pos:start="277:27" pos:end="277:28">+=</operator> <name pos:start="277:30" pos:end="277:32">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="279:13" pos:end="287:13"><if pos:start="279:13" pos:end="287:13">if <condition pos:start="279:16" pos:end="279:47">(<expr pos:start="279:17" pos:end="279:46"><name pos:start="279:17" pos:end="279:29"><name pos:start="279:17" pos:end="279:17">c</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:29">buffer_ptr</name></name> <operator pos:start="279:31" pos:end="279:32">&gt;=</operator> <name pos:start="279:34" pos:end="279:46"><name pos:start="279:34" pos:end="279:34">c</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:46">buffer_end</name></name></expr>)</condition> <block pos:start="279:49" pos:end="287:13">{<block_content pos:start="283:17" pos:end="285:41">

                <comment type="block" pos:start="281:17" pos:end="281:70">/* all the buffer was sent : wait for a new request */</comment>

                <expr_stmt pos:start="283:17" pos:end="283:40"><expr pos:start="283:17" pos:end="283:39"><call pos:start="283:17" pos:end="283:39"><name pos:start="283:17" pos:end="283:24">av_freep</name><argument_list pos:start="283:25" pos:end="283:39">(<argument pos:start="283:26" pos:end="283:38"><expr pos:start="283:26" pos:end="283:38"><operator pos:start="283:26" pos:end="283:26">&amp;</operator><name pos:start="283:27" pos:end="283:38"><name pos:start="283:27" pos:end="283:27">c</name><operator pos:start="283:28" pos:end="283:29">-&gt;</operator><name pos:start="283:30" pos:end="283:38">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:41"><expr pos:start="285:17" pos:end="285:40"><call pos:start="285:17" pos:end="285:40"><name pos:start="285:17" pos:end="285:34">start_wait_request</name><argument_list pos:start="285:35" pos:end="285:40">(<argument pos:start="285:36" pos:end="285:36"><expr pos:start="285:36" pos:end="285:36"><name pos:start="285:36" pos:end="285:36">c</name></expr></argument>, <argument pos:start="285:39" pos:end="285:39"><expr pos:start="285:39" pos:end="285:39"><literal type="number" pos:start="285:39" pos:end="285:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    <case pos:start="293:5" pos:end="293:25">case <expr pos:start="293:10" pos:end="293:24"><name pos:start="293:10" pos:end="293:24">HTTPSTATE_READY</name></expr>:</case>

        <comment type="block" pos:start="295:9" pos:end="295:27">/* nothing to do */</comment>

        <break pos:start="297:9" pos:end="297:14">break;</break>

    <default pos:start="299:5" pos:end="299:12">default:</default>

        <return pos:start="301:9" pos:end="301:18">return <expr pos:start="301:16" pos:end="301:17"><operator pos:start="301:16" pos:end="301:16">-</operator><literal type="number" pos:start="301:17" pos:end="301:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="305:5" pos:end="305:13">return <expr pos:start="305:12" pos:end="305:12"><literal type="number" pos:start="305:12" pos:end="305:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
