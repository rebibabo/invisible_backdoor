<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2077.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:56"><name pos:start="1:1" pos:end="1:15">process_tx_desc</name><argument_list pos:start="1:16" pos:end="1:56">(<argument pos:start="1:17" pos:end="1:29">E1000State *s</argument>, <argument pos:start="1:32" pos:end="1:55">struct e1000_tx_desc *dp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:24">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><call pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:29">PCI_DEVICE</name><argument_list pos:start="5:30" pos:end="5:32">(<argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><name pos:start="5:31" pos:end="5:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22">txd_lower</name> <init pos:start="7:24" pos:end="7:52">= <expr pos:start="7:26" pos:end="7:52"><call pos:start="7:26" pos:end="7:52"><name pos:start="7:26" pos:end="7:36">le32_to_cpu</name><argument_list pos:start="7:37" pos:end="7:52">(<argument pos:start="7:38" pos:end="7:51"><expr pos:start="7:38" pos:end="7:51"><name pos:start="7:38" pos:end="7:51"><name pos:start="7:38" pos:end="7:39">dp</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:46">lower</name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:51">data</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:73"><decl pos:start="9:5" pos:end="9:72"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">dtype</name> <init pos:start="9:20" pos:end="9:72">= <expr pos:start="9:22" pos:end="9:72"><name pos:start="9:22" pos:end="9:30">txd_lower</name> <operator pos:start="9:32" pos:end="9:32">&amp;</operator> <operator pos:start="9:34" pos:end="9:34">(</operator><name pos:start="9:35" pos:end="9:52">E1000_TXD_CMD_DEXT</name> <operator pos:start="9:54" pos:end="9:54">|</operator> <name pos:start="9:56" pos:end="9:71">E1000_TXD_DTYP_D</name><operator pos:start="9:72" pos:end="9:72">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">split_size</name> <init pos:start="11:29" pos:end="11:48">= <expr pos:start="11:31" pos:end="11:48"><name pos:start="11:31" pos:end="11:39">txd_lower</name> <operator pos:start="11:41" pos:end="11:41">&amp;</operator> <literal type="number" pos:start="11:43" pos:end="11:48">0xffff</literal></expr></init></decl>, <decl pos:start="11:51" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:51" pos:end="11:55">bytes</name></decl>, <decl pos:start="11:58" pos:end="11:59"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:58" pos:end="11:59">sz</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:20">msh</name> <init pos:start="13:22" pos:end="13:30">= <expr pos:start="13:24" pos:end="13:30"><literal type="number" pos:start="13:24" pos:end="13:30">0xfffff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:68"><decl pos:start="17:5" pos:end="17:67"><type pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:29">e1000_context_desc</name></name> <modifier pos:start="17:31" pos:end="17:31">*</modifier></type><name pos:start="17:32" pos:end="17:33">xp</name> <init pos:start="17:35" pos:end="17:67">= <expr pos:start="17:37" pos:end="17:67"><operator pos:start="17:37" pos:end="17:37">(</operator>struct <name pos:start="17:45" pos:end="17:62">e1000_context_desc</name> <operator pos:start="17:64" pos:end="17:64">*</operator><operator pos:start="17:65" pos:end="17:65">)</operator><name pos:start="17:66" pos:end="17:67">dp</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:19">e1000_tx</name></name> <modifier pos:start="19:21" pos:end="19:21">*</modifier></type><name pos:start="19:22" pos:end="19:23">tp</name> <init pos:start="19:25" pos:end="19:32">= <expr pos:start="19:27" pos:end="19:32"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:32">tx</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">mit_ide</name></name> <operator pos:start="23:16" pos:end="23:17">|=</operator> <operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:28">txd_lower</name> <operator pos:start="23:30" pos:end="23:30">&amp;</operator> <name pos:start="23:32" pos:end="23:48">E1000_TXD_CMD_IDE</name><operator pos:start="23:49" pos:end="23:49">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="59:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:13">dtype</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <name pos:start="25:18" pos:end="25:35">E1000_TXD_CMD_DEXT</name></expr>)</condition> <block pos:start="25:38" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:15">    <comment type="block" pos:start="25:43" pos:end="25:66">/* context descriptor */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:49"><expr pos:start="27:9" pos:end="27:48"><call pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:32">e1000x_read_tx_ctx_descr</name><argument_list pos:start="27:33" pos:end="27:48">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">xp</name></expr></argument>, <argument pos:start="27:38" pos:end="27:47"><expr pos:start="27:38" pos:end="27:47"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:40">tp</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:47">props</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:10">tp</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:22">tso_frames</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:33">(<expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:14">tp</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">props</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:27">tucso</name></name> <operator pos:start="31:29" pos:end="31:30">==</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr>)</condition> <block pos:start="31:35" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:73">    <comment type="block" pos:start="31:40" pos:end="31:67">/* this is probably wrong */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:18">DBGOUT</name><argument_list pos:start="33:19" pos:end="33:46">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">TXSUM</name></expr></argument>, <argument pos:start="33:27" pos:end="33:45"><expr pos:start="33:27" pos:end="33:45"><literal type="string" pos:start="33:27" pos:end="33:45">"TCP/UDP: cso 0!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:73"><expr pos:start="35:13" pos:end="35:72"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:14">tp</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">props</name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:27">tucso</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:32">tp</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:39">props</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:45">tucss</name></name> <operator pos:start="35:47" pos:end="35:47">+</operator> <operator pos:start="35:49" pos:end="35:49">(</operator><ternary pos:start="35:50" pos:end="35:71"><condition pos:start="35:50" pos:end="35:64"><expr pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:51">tp</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:58">props</name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:62">tcp</name></name></expr> ?</condition><then pos:start="35:66" pos:end="35:67"> <expr pos:start="35:66" pos:end="35:67"><literal type="number" pos:start="35:66" pos:end="35:67">16</literal></expr> </then><else pos:start="35:69" pos:end="35:71">: <expr pos:start="35:71" pos:end="35:71"><literal type="number" pos:start="35:71" pos:end="35:71">6</literal></expr></else></ternary><operator pos:start="35:72" pos:end="35:72">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="53:5">else if <condition pos:start="41:15" pos:end="41:64">(<expr pos:start="41:16" pos:end="41:63"><name pos:start="41:16" pos:end="41:20">dtype</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:43">E1000_TXD_CMD_DEXT</name> <operator pos:start="41:45" pos:end="41:45">|</operator> <name pos:start="41:47" pos:end="41:62">E1000_TXD_DTYP_D</name><operator pos:start="41:63" pos:end="41:63">)</operator></expr>)</condition> <block pos:start="41:66" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:66">

        <comment type="line" pos:start="43:9" pos:end="43:26">// data descriptor</comment>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:26">(<expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:14">tp</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">size</name></name> <operator pos:start="45:22" pos:end="45:23">==</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>)</condition> <block pos:start="45:28" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:68">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:14">tp</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">props</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:32">sum_needed</name></name> <operator pos:start="47:34" pos:end="47:34">=</operator> <call pos:start="47:36" pos:end="47:62"><name pos:start="47:36" pos:end="47:46">le32_to_cpu</name><argument_list pos:start="47:47" pos:end="47:62">(<argument pos:start="47:48" pos:end="47:61"><expr pos:start="47:48" pos:end="47:61"><name pos:start="47:48" pos:end="47:61"><name pos:start="47:48" pos:end="47:49">dp</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:56">upper</name><operator pos:start="47:57" pos:end="47:57">.</operator><name pos:start="47:58" pos:end="47:61">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:64" pos:end="47:65">&gt;&gt;</operator> <literal type="number" pos:start="47:67" pos:end="47:67">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:66"><expr pos:start="51:9" pos:end="51:65"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:10">tp</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">props</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:23">cptse</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <ternary pos:start="51:27" pos:end="51:65"><condition pos:start="51:27" pos:end="51:59"><expr pos:start="51:27" pos:end="51:57"><operator pos:start="51:27" pos:end="51:27">(</operator><name pos:start="51:28" pos:end="51:36">txd_lower</name> <operator pos:start="51:38" pos:end="51:38">&amp;</operator> <name pos:start="51:40" pos:end="51:56">E1000_TXD_CMD_TSE</name><operator pos:start="51:57" pos:end="51:57">)</operator></expr> ?</condition><then pos:start="51:61" pos:end="51:61"> <expr pos:start="51:61" pos:end="51:61"><literal type="number" pos:start="51:61" pos:end="51:61">1</literal></expr> </then><else pos:start="51:63" pos:end="51:65">: <expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="59:5">else <block pos:start="53:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:28">

        <comment type="line" pos:start="55:9" pos:end="55:28">// legacy descriptor</comment>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:10">tp</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">props</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:23">cptse</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <literal type="number" pos:start="57:27" pos:end="57:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="79:5"><if pos:start="63:5" pos:end="79:5">if <condition pos:start="63:8" pos:end="67:59">(<expr pos:start="63:9" pos:end="67:58"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:27">e1000x_vlan_enabled</name><argument_list pos:start="63:28" pos:end="63:39">(<argument pos:start="63:29" pos:end="63:38"><expr pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:38">mac_reg</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:41" pos:end="63:42">&amp;&amp;</operator>

        <call pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:26">e1000x_is_vlan_txd</name><argument_list pos:start="65:27" pos:end="65:37">(<argument pos:start="65:28" pos:end="65:36"><expr pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:36">txd_lower</name></expr></argument>)</argument_list></call> <operator pos:start="65:39" pos:end="65:40">&amp;&amp;</operator>

        <operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:24"><name pos:start="67:10" pos:end="67:11">tp</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">props</name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:24">cptse</name></name> <operator pos:start="67:26" pos:end="67:27">||</operator> <name pos:start="67:29" pos:end="67:37">txd_lower</name> <operator pos:start="67:39" pos:end="67:39">&amp;</operator> <name pos:start="67:41" pos:end="67:57">E1000_TXD_CMD_EOP</name><operator pos:start="67:58" pos:end="67:58">)</operator></expr>)</condition> <block pos:start="67:61" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:61">

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:10">tp</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:23">vlan_needed</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="73:52"><expr pos:start="71:9" pos:end="73:51"><call pos:start="71:9" pos:end="73:51"><name pos:start="71:9" pos:end="71:16">stw_be_p</name><argument_list pos:start="71:17" pos:end="73:51">(<argument pos:start="71:18" pos:end="71:32"><expr pos:start="71:18" pos:end="71:32"><name pos:start="71:18" pos:end="71:32"><name pos:start="71:18" pos:end="71:19">tp</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:32">vlan_header</name></name></expr></argument>,

                      <argument pos:start="73:23" pos:end="73:50"><expr pos:start="73:23" pos:end="73:50"><call pos:start="73:23" pos:end="73:50"><name pos:start="73:23" pos:end="73:33">le16_to_cpu</name><argument_list pos:start="73:34" pos:end="73:50">(<argument pos:start="73:35" pos:end="73:49"><expr pos:start="73:35" pos:end="73:49"><name pos:start="73:35" pos:end="73:49"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:44">mac_reg</name><index pos:start="73:45" pos:end="73:49">[<expr pos:start="73:46" pos:end="73:48"><name pos:start="73:46" pos:end="73:48">VET</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:61"><expr pos:start="75:9" pos:end="77:60"><call pos:start="75:9" pos:end="77:60"><name pos:start="75:9" pos:end="75:16">stw_be_p</name><argument_list pos:start="75:17" pos:end="77:60">(<argument pos:start="75:18" pos:end="75:36"><expr pos:start="75:18" pos:end="75:36"><name pos:start="75:18" pos:end="75:32"><name pos:start="75:18" pos:end="75:19">tp</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:32">vlan_header</name></name> <operator pos:start="75:34" pos:end="75:34">+</operator> <literal type="number" pos:start="75:36" pos:end="75:36">2</literal></expr></argument>,

                      <argument pos:start="77:23" pos:end="77:59"><expr pos:start="77:23" pos:end="77:59"><call pos:start="77:23" pos:end="77:59"><name pos:start="77:23" pos:end="77:33">le16_to_cpu</name><argument_list pos:start="77:34" pos:end="77:59">(<argument pos:start="77:35" pos:end="77:58"><expr pos:start="77:35" pos:end="77:58"><name pos:start="77:35" pos:end="77:58"><name pos:start="77:35" pos:end="77:36">dp</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:43">upper</name><operator pos:start="77:44" pos:end="77:44">.</operator><name pos:start="77:45" pos:end="77:50">fields</name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:58">special</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:8">addr</name> <operator pos:start="83:10" pos:end="83:10">=</operator> <call pos:start="83:12" pos:end="83:39"><name pos:start="83:12" pos:end="83:22">le64_to_cpu</name><argument_list pos:start="83:23" pos:end="83:39">(<argument pos:start="83:24" pos:end="83:38"><expr pos:start="83:24" pos:end="83:38"><name pos:start="83:24" pos:end="83:38"><name pos:start="83:24" pos:end="83:25">dp</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:38">buffer_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="143:5"><if pos:start="85:5" pos:end="129:5">if <condition pos:start="85:8" pos:end="85:41">(<expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:10">tp</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:17">props</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:21">tse</name></name> <operator pos:start="85:23" pos:end="85:24">&amp;&amp;</operator> <name pos:start="85:26" pos:end="85:40"><name pos:start="85:26" pos:end="85:27">tp</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:34">props</name><operator pos:start="85:35" pos:end="85:35">.</operator><name pos:start="85:36" pos:end="85:40">cptse</name></name></expr>)</condition> <block pos:start="85:43" pos:end="129:5">{<block_content pos:start="87:9" pos:end="127:38">

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:11">msh</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <name pos:start="87:15" pos:end="87:31"><name pos:start="87:15" pos:end="87:16">tp</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">props</name><operator pos:start="87:24" pos:end="87:24">.</operator><name pos:start="87:25" pos:end="87:31">hdr_len</name></name> <operator pos:start="87:33" pos:end="87:33">+</operator> <name pos:start="87:35" pos:end="87:47"><name pos:start="87:35" pos:end="87:36">tp</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:43">props</name><operator pos:start="87:44" pos:end="87:44">.</operator><name pos:start="87:45" pos:end="87:47">mss</name></name></expr>;</expr_stmt>

        <do pos:start="89:9" pos:end="127:38">do <block pos:start="89:12" pos:end="127:9">{<block_content pos:start="91:13" pos:end="125:32">

            <expr_stmt pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:17">bytes</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:30">split_size</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:39"><if pos:start="93:13" pos:end="95:39">if <condition pos:start="93:16" pos:end="93:39">(<expr pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:18">tp</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:24">size</name></name> <operator pos:start="93:26" pos:end="93:26">+</operator> <name pos:start="93:28" pos:end="93:32">bytes</name> <operator pos:start="93:34" pos:end="93:34">&gt;</operator> <name pos:start="93:36" pos:end="93:38">msh</name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:39"><block_content pos:start="95:17" pos:end="95:39">

                <expr_stmt pos:start="95:17" pos:end="95:39"><expr pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:21">bytes</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:27">msh</name> <operator pos:start="95:29" pos:end="95:29">-</operator> <name pos:start="95:31" pos:end="95:38"><name pos:start="95:31" pos:end="95:32">tp</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:38">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:17">bytes</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <call pos:start="99:21" pos:end="99:59"><name pos:start="99:21" pos:end="99:23">MIN</name><argument_list pos:start="99:24" pos:end="99:59">(<argument pos:start="99:25" pos:end="99:51"><expr pos:start="99:25" pos:end="99:51"><sizeof pos:start="99:25" pos:end="99:40">sizeof<argument_list pos:start="99:31" pos:end="99:40">(<argument pos:start="99:32" pos:end="99:39"><expr pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:33">tp</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:39">data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="99:42" pos:end="99:42">-</operator> <name pos:start="99:44" pos:end="99:51"><name pos:start="99:44" pos:end="99:45">tp</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:51">size</name></name></expr></argument>, <argument pos:start="99:54" pos:end="99:58"><expr pos:start="99:54" pos:end="99:58"><name pos:start="99:54" pos:end="99:58">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:62"><expr pos:start="101:13" pos:end="101:61"><call pos:start="101:13" pos:end="101:61"><name pos:start="101:13" pos:end="101:24">pci_dma_read</name><argument_list pos:start="101:25" pos:end="101:61">(<argument pos:start="101:26" pos:end="101:26"><expr pos:start="101:26" pos:end="101:26"><name pos:start="101:26" pos:end="101:26">d</name></expr></argument>, <argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><name pos:start="101:29" pos:end="101:32">addr</name></expr></argument>, <argument pos:start="101:35" pos:end="101:53"><expr pos:start="101:35" pos:end="101:53"><name pos:start="101:35" pos:end="101:42"><name pos:start="101:35" pos:end="101:36">tp</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:42">data</name></name> <operator pos:start="101:44" pos:end="101:44">+</operator> <name pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:47">tp</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:53">size</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:60"><expr pos:start="101:56" pos:end="101:60"><name pos:start="101:56" pos:end="101:60">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:14">sz</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:25"><name pos:start="103:18" pos:end="103:19">tp</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:25">size</name></name> <operator pos:start="103:27" pos:end="103:27">+</operator> <name pos:start="103:29" pos:end="103:33">bytes</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="109:13"><if pos:start="105:13" pos:end="109:13">if <condition pos:start="105:16" pos:end="105:72">(<expr pos:start="105:17" pos:end="105:71"><name pos:start="105:17" pos:end="105:18">sz</name> <operator pos:start="105:20" pos:end="105:21">&gt;=</operator> <name pos:start="105:23" pos:end="105:39"><name pos:start="105:23" pos:end="105:24">tp</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">props</name><operator pos:start="105:32" pos:end="105:32">.</operator><name pos:start="105:33" pos:end="105:39">hdr_len</name></name> <operator pos:start="105:41" pos:end="105:42">&amp;&amp;</operator> <name pos:start="105:44" pos:end="105:51"><name pos:start="105:44" pos:end="105:45">tp</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:51">size</name></name> <operator pos:start="105:53" pos:end="105:53">&lt;</operator> <name pos:start="105:55" pos:end="105:71"><name pos:start="105:55" pos:end="105:56">tp</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:63">props</name><operator pos:start="105:64" pos:end="105:64">.</operator><name pos:start="105:65" pos:end="105:71">hdr_len</name></name></expr>)</condition> <block pos:start="105:74" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:65">

                <expr_stmt pos:start="107:17" pos:end="107:65"><expr pos:start="107:17" pos:end="107:64"><call pos:start="107:17" pos:end="107:64"><name pos:start="107:17" pos:end="107:23">memmove</name><argument_list pos:start="107:24" pos:end="107:64">(<argument pos:start="107:25" pos:end="107:34"><expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:26">tp</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:34">header</name></name></expr></argument>, <argument pos:start="107:37" pos:end="107:44"><expr pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:38">tp</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:44">data</name></name></expr></argument>, <argument pos:start="107:47" pos:end="107:63"><expr pos:start="107:47" pos:end="107:63"><name pos:start="107:47" pos:end="107:63"><name pos:start="107:47" pos:end="107:48">tp</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:55">props</name><operator pos:start="107:56" pos:end="107:56">.</operator><name pos:start="107:57" pos:end="107:63">hdr_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:14">tp</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:20">size</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:25">sz</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:26"><expr pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:16">addr</name> <operator pos:start="113:18" pos:end="113:19">+=</operator> <name pos:start="113:21" pos:end="113:25">bytes</name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="123:13"><if pos:start="115:13" pos:end="123:13">if <condition pos:start="115:16" pos:end="115:26">(<expr pos:start="115:17" pos:end="115:25"><name pos:start="115:17" pos:end="115:18">sz</name> <operator pos:start="115:20" pos:end="115:21">==</operator> <name pos:start="115:23" pos:end="115:25">msh</name></expr>)</condition> <block pos:start="115:28" pos:end="123:13">{<block_content pos:start="117:17" pos:end="121:45">

                <expr_stmt pos:start="117:17" pos:end="117:28"><expr pos:start="117:17" pos:end="117:27"><call pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:24">xmit_seg</name><argument_list pos:start="117:25" pos:end="117:27">(<argument pos:start="117:26" pos:end="117:26"><expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:65"><expr pos:start="119:17" pos:end="119:64"><call pos:start="119:17" pos:end="119:64"><name pos:start="119:17" pos:end="119:23">memmove</name><argument_list pos:start="119:24" pos:end="119:64">(<argument pos:start="119:25" pos:end="119:32"><expr pos:start="119:25" pos:end="119:32"><name pos:start="119:25" pos:end="119:32"><name pos:start="119:25" pos:end="119:26">tp</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:32">data</name></name></expr></argument>, <argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:36">tp</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:44">header</name></name></expr></argument>, <argument pos:start="119:47" pos:end="119:63"><expr pos:start="119:47" pos:end="119:63"><name pos:start="119:47" pos:end="119:63"><name pos:start="119:47" pos:end="119:48">tp</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:55">props</name><operator pos:start="119:56" pos:end="119:56">.</operator><name pos:start="119:57" pos:end="119:63">hdr_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:45"><expr pos:start="121:17" pos:end="121:44"><name pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:18">tp</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:24">size</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:44"><name pos:start="121:28" pos:end="121:29">tp</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:36">props</name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:44">hdr_len</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:22">split_size</name> <operator pos:start="125:24" pos:end="125:25">-=</operator> <name pos:start="125:27" pos:end="125:31">bytes</name></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="127:17" pos:end="127:37">(<expr pos:start="127:18" pos:end="127:36"><name pos:start="127:18" pos:end="127:22">bytes</name> <operator pos:start="127:24" pos:end="127:25">&amp;&amp;</operator> <name pos:start="127:27" pos:end="127:36">split_size</name></expr>)</condition>;</do>

    </block_content>}</block></if> <if type="elseif" pos:start="129:7" pos:end="135:5">else if <condition pos:start="129:15" pos:end="129:49">(<expr pos:start="129:16" pos:end="129:48"><operator pos:start="129:16" pos:end="129:16">!</operator><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:18">tp</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:25">props</name><operator pos:start="129:26" pos:end="129:26">.</operator><name pos:start="129:27" pos:end="129:29">tse</name></name> <operator pos:start="129:31" pos:end="129:32">&amp;&amp;</operator> <name pos:start="129:34" pos:end="129:48"><name pos:start="129:34" pos:end="129:35">tp</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:42">props</name><operator pos:start="129:43" pos:end="129:43">.</operator><name pos:start="129:44" pos:end="129:48">cptse</name></name></expr>)</condition> <block pos:start="129:51" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:50">

        <comment type="line" pos:start="131:9" pos:end="131:78">// context descriptor TSE is not set, while data descriptor TSE is set</comment>

        <expr_stmt pos:start="133:9" pos:end="133:50"><expr pos:start="133:9" pos:end="133:49"><call pos:start="133:9" pos:end="133:49"><name pos:start="133:9" pos:end="133:14">DBGOUT</name><argument_list pos:start="133:15" pos:end="133:49">(<argument pos:start="133:16" pos:end="133:20"><expr pos:start="133:16" pos:end="133:20"><name pos:start="133:16" pos:end="133:20">TXERR</name></expr></argument>, <argument pos:start="133:23" pos:end="133:48"><expr pos:start="133:23" pos:end="133:48"><literal type="string" pos:start="133:23" pos:end="133:48">"TCP segmentation error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="143:5">else <block pos:start="135:12" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:31">

        <expr_stmt pos:start="137:9" pos:end="137:66"><expr pos:start="137:9" pos:end="137:65"><name pos:start="137:9" pos:end="137:18">split_size</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <call pos:start="137:22" pos:end="137:65"><name pos:start="137:22" pos:end="137:24">MIN</name><argument_list pos:start="137:25" pos:end="137:65">(<argument pos:start="137:26" pos:end="137:52"><expr pos:start="137:26" pos:end="137:52"><sizeof pos:start="137:26" pos:end="137:41">sizeof<argument_list pos:start="137:32" pos:end="137:41">(<argument pos:start="137:33" pos:end="137:40"><expr pos:start="137:33" pos:end="137:40"><name pos:start="137:33" pos:end="137:40"><name pos:start="137:33" pos:end="137:34">tp</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:40">data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="137:43" pos:end="137:43">-</operator> <name pos:start="137:45" pos:end="137:52"><name pos:start="137:45" pos:end="137:46">tp</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:52">size</name></name></expr></argument>, <argument pos:start="137:55" pos:end="137:64"><expr pos:start="137:55" pos:end="137:64"><name pos:start="137:55" pos:end="137:64">split_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:63"><expr pos:start="139:9" pos:end="139:62"><call pos:start="139:9" pos:end="139:62"><name pos:start="139:9" pos:end="139:20">pci_dma_read</name><argument_list pos:start="139:21" pos:end="139:62">(<argument pos:start="139:22" pos:end="139:22"><expr pos:start="139:22" pos:end="139:22"><name pos:start="139:22" pos:end="139:22">d</name></expr></argument>, <argument pos:start="139:25" pos:end="139:28"><expr pos:start="139:25" pos:end="139:28"><name pos:start="139:25" pos:end="139:28">addr</name></expr></argument>, <argument pos:start="139:31" pos:end="139:49"><expr pos:start="139:31" pos:end="139:49"><name pos:start="139:31" pos:end="139:38"><name pos:start="139:31" pos:end="139:32">tp</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:38">data</name></name> <operator pos:start="139:40" pos:end="139:40">+</operator> <name pos:start="139:42" pos:end="139:49"><name pos:start="139:42" pos:end="139:43">tp</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:49">size</name></name></expr></argument>, <argument pos:start="139:52" pos:end="139:61"><expr pos:start="139:52" pos:end="139:61"><name pos:start="139:52" pos:end="139:61">split_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:31"><expr pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:16"><name pos:start="141:9" pos:end="141:10">tp</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:16">size</name></name> <operator pos:start="141:18" pos:end="141:19">+=</operator> <name pos:start="141:21" pos:end="141:30">split_size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="147:5" pos:end="149:15"><if pos:start="147:5" pos:end="149:15">if <condition pos:start="147:8" pos:end="147:41">(<expr pos:start="147:9" pos:end="147:40"><operator pos:start="147:9" pos:end="147:9">!</operator><operator pos:start="147:10" pos:end="147:10">(</operator><name pos:start="147:11" pos:end="147:19">txd_lower</name> <operator pos:start="147:21" pos:end="147:21">&amp;</operator> <name pos:start="147:23" pos:end="147:39">E1000_TXD_CMD_EOP</name><operator pos:start="147:40" pos:end="147:40">)</operator></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:15"><block_content pos:start="149:9" pos:end="149:15">

        <return pos:start="149:9" pos:end="149:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="155:5"><if pos:start="151:5" pos:end="155:5">if <condition pos:start="151:8" pos:end="151:76">(<expr pos:start="151:9" pos:end="151:75"><operator pos:start="151:9" pos:end="151:9">!</operator><operator pos:start="151:10" pos:end="151:10">(</operator><name pos:start="151:11" pos:end="151:23"><name pos:start="151:11" pos:end="151:12">tp</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:19">props</name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:23">tse</name></name> <operator pos:start="151:25" pos:end="151:26">&amp;&amp;</operator> <name pos:start="151:28" pos:end="151:42"><name pos:start="151:28" pos:end="151:29">tp</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:36">props</name><operator pos:start="151:37" pos:end="151:37">.</operator><name pos:start="151:38" pos:end="151:42">cptse</name></name> <operator pos:start="151:44" pos:end="151:45">&amp;&amp;</operator> <name pos:start="151:47" pos:end="151:54"><name pos:start="151:47" pos:end="151:48">tp</name><operator pos:start="151:49" pos:end="151:50">-&gt;</operator><name pos:start="151:51" pos:end="151:54">size</name></name> <operator pos:start="151:56" pos:end="151:56">&lt;</operator> <name pos:start="151:58" pos:end="151:74"><name pos:start="151:58" pos:end="151:59">tp</name><operator pos:start="151:60" pos:end="151:61">-&gt;</operator><name pos:start="151:62" pos:end="151:66">props</name><operator pos:start="151:67" pos:end="151:67">.</operator><name pos:start="151:68" pos:end="151:74">hdr_len</name></name><operator pos:start="151:75" pos:end="151:75">)</operator></expr>)</condition> <block pos:start="151:78" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:20">

        <expr_stmt pos:start="153:9" pos:end="153:20"><expr pos:start="153:9" pos:end="153:19"><call pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:16">xmit_seg</name><argument_list pos:start="153:17" pos:end="153:19">(<argument pos:start="153:18" pos:end="153:18"><expr pos:start="153:18" pos:end="153:18"><name pos:start="153:18" pos:end="153:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:23"><expr pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:18"><name pos:start="157:5" pos:end="157:6">tp</name><operator pos:start="157:7" pos:end="157:8">-&gt;</operator><name pos:start="157:9" pos:end="157:18">tso_frames</name></name> <operator pos:start="157:20" pos:end="157:20">=</operator> <literal type="number" pos:start="157:22" pos:end="157:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:29"><expr pos:start="159:5" pos:end="159:28"><name pos:start="159:5" pos:end="159:24"><name pos:start="159:5" pos:end="159:6">tp</name><operator pos:start="159:7" pos:end="159:8">-&gt;</operator><name pos:start="159:9" pos:end="159:13">props</name><operator pos:start="159:14" pos:end="159:14">.</operator><name pos:start="159:15" pos:end="159:24">sum_needed</name></name> <operator pos:start="159:26" pos:end="159:26">=</operator> <literal type="number" pos:start="159:28" pos:end="159:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:24"><expr pos:start="161:5" pos:end="161:23"><name pos:start="161:5" pos:end="161:19"><name pos:start="161:5" pos:end="161:6">tp</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:19">vlan_needed</name></name> <operator pos:start="161:21" pos:end="161:21">=</operator> <literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:17"><expr pos:start="163:5" pos:end="163:16"><name pos:start="163:5" pos:end="163:12"><name pos:start="163:5" pos:end="163:6">tp</name><operator pos:start="163:7" pos:end="163:8">-&gt;</operator><name pos:start="163:9" pos:end="163:12">size</name></name> <operator pos:start="163:14" pos:end="163:14">=</operator> <literal type="number" pos:start="163:16" pos:end="163:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:24"><expr pos:start="165:5" pos:end="165:23"><name pos:start="165:5" pos:end="165:19"><name pos:start="165:5" pos:end="165:6">tp</name><operator pos:start="165:7" pos:end="165:8">-&gt;</operator><name pos:start="165:9" pos:end="165:13">props</name><operator pos:start="165:14" pos:end="165:14">.</operator><name pos:start="165:15" pos:end="165:19">cptse</name></name> <operator pos:start="165:21" pos:end="165:21">=</operator> <literal type="number" pos:start="165:23" pos:end="165:23">0</literal></expr>;</expr_stmt>

</block_content>}</block>
</unit>
