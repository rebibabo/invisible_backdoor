<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7566.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">cris_evaluate_flags</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:9" pos:end="127:9">

	<if_stmt pos:start="5:9" pos:end="127:9"><if pos:start="5:9" pos:end="127:9">if <condition pos:start="5:12" pos:end="5:32">(<expr pos:start="5:13" pos:end="5:31"><operator pos:start="5:13" pos:end="5:13">!</operator><name pos:start="5:14" pos:end="5:31"><name pos:start="5:14" pos:end="5:15">dc</name><operator pos:start="5:16" pos:end="5:17">-&gt;</operator><name pos:start="5:18" pos:end="5:31">flags_uptodate</name></name></expr>)</condition> <block pos:start="5:34" pos:end="127:9">{<block_content pos:start="7:17" pos:end="125:39">

		<expr_stmt pos:start="7:17" pos:end="7:40"><expr pos:start="7:17" pos:end="7:39"><call pos:start="7:17" pos:end="7:39"><name pos:start="7:17" pos:end="7:35">cris_flush_cc_state</name><argument_list pos:start="7:36" pos:end="7:39">(<argument pos:start="7:37" pos:end="7:38"><expr pos:start="7:37" pos:end="7:38"><name pos:start="7:37" pos:end="7:38">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<switch pos:start="11:17" pos:end="105:17">switch <condition pos:start="11:24" pos:end="11:34">(<expr pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:26">dc</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:33">cc_op</name></name></expr>)</condition>

		<block pos:start="13:17" pos:end="105:17">{<block_content pos:start="15:25" pos:end="103:30">

			<case pos:start="15:25" pos:end="15:39">case <expr pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:38">CC_OP_MCP</name></expr>:</case>

				<expr_stmt pos:start="17:33" pos:end="17:64"><expr pos:start="17:33" pos:end="17:63"><call pos:start="17:33" pos:end="17:63"><name pos:start="17:33" pos:end="17:61">gen_helper_evaluate_flags_mcp</name><argument_list pos:start="17:62" pos:end="17:63">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="19:33" pos:end="19:38">break;</break>

			<case pos:start="21:25" pos:end="21:40">case <expr pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:39">CC_OP_MULS</name></expr>:</case>

				<expr_stmt pos:start="23:33" pos:end="23:65"><expr pos:start="23:33" pos:end="23:64"><call pos:start="23:33" pos:end="23:64"><name pos:start="23:33" pos:end="23:62">gen_helper_evaluate_flags_muls</name><argument_list pos:start="23:63" pos:end="23:64">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="25:33" pos:end="25:38">break;</break>

			<case pos:start="27:25" pos:end="27:40">case <expr pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:39">CC_OP_MULU</name></expr>:</case>

				<expr_stmt pos:start="29:33" pos:end="29:65"><expr pos:start="29:33" pos:end="29:64"><call pos:start="29:33" pos:end="29:64"><name pos:start="29:33" pos:end="29:62">gen_helper_evaluate_flags_mulu</name><argument_list pos:start="29:63" pos:end="29:64">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="31:33" pos:end="31:38">break;</break>

			<case pos:start="33:25" pos:end="33:40">case <expr pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:39">CC_OP_MOVE</name></expr>:</case>

			<case pos:start="35:25" pos:end="35:39">case <expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38">CC_OP_AND</name></expr>:</case>

			<case pos:start="37:25" pos:end="37:38">case <expr pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:37">CC_OP_OR</name></expr>:</case>

			<case pos:start="39:25" pos:end="39:39">case <expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38">CC_OP_XOR</name></expr>:</case>

			<case pos:start="41:25" pos:end="41:39">case <expr pos:start="41:30" pos:end="41:38"><name pos:start="41:30" pos:end="41:38">CC_OP_ASR</name></expr>:</case>

			<case pos:start="43:25" pos:end="43:39">case <expr pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:38">CC_OP_LSR</name></expr>:</case>

			<case pos:start="45:25" pos:end="45:39">case <expr pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:38">CC_OP_LSL</name></expr>:</case>

				<switch pos:start="47:33" pos:end="69:33">switch <condition pos:start="47:40" pos:end="47:52">(<expr pos:start="47:41" pos:end="47:51"><name pos:start="47:41" pos:end="47:51"><name pos:start="47:41" pos:end="47:42">dc</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:51">cc_size</name></name></expr>)</condition>

				<block pos:start="49:33" pos:end="69:33">{<block_content pos:start="51:41" pos:end="67:54">

					<case pos:start="51:41" pos:end="51:47">case <expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">4</literal></expr>:</case>

						<expr_stmt pos:start="53:49" pos:end="53:83"><expr pos:start="53:49" pos:end="53:82"><call pos:start="53:49" pos:end="53:82"><name pos:start="53:49" pos:end="53:80">gen_helper_evaluate_flags_move_4</name><argument_list pos:start="53:81" pos:end="53:82">()</argument_list></call></expr>;</expr_stmt>

						<break pos:start="55:49" pos:end="55:54">break;</break>

					<case pos:start="57:41" pos:end="57:47">case <expr pos:start="57:46" pos:end="57:46"><literal type="number" pos:start="57:46" pos:end="57:46">2</literal></expr>:</case>

						<expr_stmt pos:start="59:49" pos:end="59:83"><expr pos:start="59:49" pos:end="59:82"><call pos:start="59:49" pos:end="59:82"><name pos:start="59:49" pos:end="59:80">gen_helper_evaluate_flags_move_2</name><argument_list pos:start="59:81" pos:end="59:82">()</argument_list></call></expr>;</expr_stmt>

						<break pos:start="61:49" pos:end="61:54">break;</break>

					<default pos:start="63:41" pos:end="63:48">default:</default>

						<expr_stmt pos:start="65:49" pos:end="65:76"><expr pos:start="65:49" pos:end="65:75"><call pos:start="65:49" pos:end="65:75"><name pos:start="65:49" pos:end="65:73">gen_helper_evaluate_flags</name><argument_list pos:start="65:74" pos:end="65:75">()</argument_list></call></expr>;</expr_stmt>

						<break pos:start="67:49" pos:end="67:54">break;</break>

				</block_content>}</block></switch>

				<break pos:start="71:33" pos:end="71:38">break;</break>

			<case pos:start="73:25" pos:end="73:41">case <expr pos:start="73:30" pos:end="73:40"><name pos:start="73:30" pos:end="73:40">CC_OP_FLAGS</name></expr>:</case>

				<comment type="block" pos:start="75:33" pos:end="75:44">/* live.  */</comment>

				<break pos:start="77:33" pos:end="77:38">break;</break>

			<default pos:start="79:25" pos:end="79:32">default:</default>

			<block pos:start="81:25" pos:end="101:25">{<block_content pos:start="83:33" pos:end="99:33">

				<switch pos:start="83:33" pos:end="99:33">switch <condition pos:start="83:40" pos:end="83:52">(<expr pos:start="83:41" pos:end="83:51"><name pos:start="83:41" pos:end="83:51"><name pos:start="83:41" pos:end="83:42">dc</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:51">cc_size</name></name></expr>)</condition>

				<block pos:start="85:33" pos:end="99:33">{<block_content pos:start="87:41" pos:end="97:54">

					<case pos:start="87:41" pos:end="87:47">case <expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">4</literal></expr>:</case>

						<expr_stmt pos:start="89:49" pos:end="89:82"><expr pos:start="89:49" pos:end="89:81"><call pos:start="89:49" pos:end="89:81"><name pos:start="89:49" pos:end="89:79">gen_helper_evaluate_flags_alu_4</name><argument_list pos:start="89:80" pos:end="89:81">()</argument_list></call></expr>;</expr_stmt>

						<break pos:start="91:49" pos:end="91:54">break;</break>

					<default pos:start="93:41" pos:end="93:48">default:</default>

						<expr_stmt pos:start="95:49" pos:end="95:76"><expr pos:start="95:49" pos:end="95:75"><call pos:start="95:49" pos:end="95:75"><name pos:start="95:49" pos:end="95:73">gen_helper_evaluate_flags</name><argument_list pos:start="95:74" pos:end="95:75">()</argument_list></call></expr>;</expr_stmt>

						<break pos:start="97:49" pos:end="97:54">break;</break>

				</block_content>}</block></switch>

			</block_content>}</block>

			<break pos:start="103:25" pos:end="103:30">break;</break>

		</block_content>}</block></switch>

		<if_stmt pos:start="107:17" pos:end="121:17"><if pos:start="107:17" pos:end="121:17">if <condition pos:start="107:20" pos:end="107:36">(<expr pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:22">dc</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:35">flagx_known</name></name></expr>)</condition> <block pos:start="107:38" pos:end="121:17">{<block_content pos:start="109:25" pos:end="119:73">

			<if_stmt pos:start="109:25" pos:end="119:73"><if pos:start="109:25" pos:end="113:71">if <condition pos:start="109:28" pos:end="109:40">(<expr pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:30">dc</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:39">flags_x</name></name></expr>)</condition><block type="pseudo" pos:start="111:33" pos:end="113:71"><block_content pos:start="111:33" pos:end="113:71">

				<expr_stmt pos:start="111:33" pos:end="113:71"><expr pos:start="111:33" pos:end="113:70"><call pos:start="111:33" pos:end="113:70"><name pos:start="111:33" pos:end="111:46">tcg_gen_ori_tl</name><argument_list pos:start="111:47" pos:end="113:70">(<argument pos:start="111:48" pos:end="111:61"><expr pos:start="111:48" pos:end="111:61"><name pos:start="111:48" pos:end="111:61"><name pos:start="111:48" pos:end="111:53">cpu_PR</name><index pos:start="111:54" pos:end="111:61">[<expr pos:start="111:55" pos:end="111:60"><name pos:start="111:55" pos:end="111:60">PR_CCS</name></expr>]</index></name></expr></argument>, 

					       <argument pos:start="113:48" pos:end="113:61"><expr pos:start="113:48" pos:end="113:61"><name pos:start="113:48" pos:end="113:61"><name pos:start="113:48" pos:end="113:53">cpu_PR</name><index pos:start="113:54" pos:end="113:61">[<expr pos:start="113:55" pos:end="113:60"><name pos:start="113:55" pos:end="113:60">PR_CCS</name></expr>]</index></name></expr></argument>, <argument pos:start="113:64" pos:end="113:69"><expr pos:start="113:64" pos:end="113:69"><name pos:start="113:64" pos:end="113:69">X_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

			<else pos:start="115:25" pos:end="119:73">else<block type="pseudo" pos:start="117:33" pos:end="119:73"><block_content pos:start="117:33" pos:end="119:73">

				<expr_stmt pos:start="117:33" pos:end="119:73"><expr pos:start="117:33" pos:end="119:72"><call pos:start="117:33" pos:end="119:72"><name pos:start="117:33" pos:end="117:47">tcg_gen_andi_tl</name><argument_list pos:start="117:48" pos:end="119:72">(<argument pos:start="117:49" pos:end="117:62"><expr pos:start="117:49" pos:end="117:62"><name pos:start="117:49" pos:end="117:62"><name pos:start="117:49" pos:end="117:54">cpu_PR</name><index pos:start="117:55" pos:end="117:62">[<expr pos:start="117:56" pos:end="117:61"><name pos:start="117:56" pos:end="117:61">PR_CCS</name></expr>]</index></name></expr></argument>, 

						<argument pos:start="119:49" pos:end="119:62"><expr pos:start="119:49" pos:end="119:62"><name pos:start="119:49" pos:end="119:62"><name pos:start="119:49" pos:end="119:54">cpu_PR</name><index pos:start="119:55" pos:end="119:62">[<expr pos:start="119:56" pos:end="119:61"><name pos:start="119:56" pos:end="119:61">PR_CCS</name></expr>]</index></name></expr></argument>, <argument pos:start="119:65" pos:end="119:71"><expr pos:start="119:65" pos:end="119:71"><operator pos:start="119:65" pos:end="119:65">~</operator><name pos:start="119:66" pos:end="119:71">X_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

	        </block_content>}</block></if></if_stmt>



		<expr_stmt pos:start="125:17" pos:end="125:39"><expr pos:start="125:17" pos:end="125:38"><name pos:start="125:17" pos:end="125:34"><name pos:start="125:17" pos:end="125:18">dc</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:34">flags_uptodate</name></name> <operator pos:start="125:36" pos:end="125:36">=</operator> <literal type="number" pos:start="125:38" pos:end="125:38">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
