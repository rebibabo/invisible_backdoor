<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13474.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">aux_slave_dev_print</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">Monitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">mon</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:57">DeviceState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">dev</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:74"><decl pos:start="1:65" pos:end="1:74"><type pos:start="1:65" pos:end="1:74"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:74">indent</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:48">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">AUXBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:51">= <expr pos:start="5:19" pos:end="5:51"><call pos:start="5:19" pos:end="5:51"><name pos:start="5:19" pos:end="5:25">AUX_BUS</name><argument_list pos:start="5:26" pos:end="5:51">(<argument pos:start="5:27" pos:end="5:50"><expr pos:start="5:27" pos:end="5:50"><call pos:start="5:27" pos:end="5:50"><name pos:start="5:27" pos:end="5:45">qdev_get_parent_bus</name><argument_list pos:start="5:46" pos:end="5:50">(<argument pos:start="5:47" pos:end="5:49"><expr pos:start="5:47" pos:end="5:49"><name pos:start="5:47" pos:end="5:49">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AUXSlave</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:61">/* Don't print anything if the device is I2C "bridge". */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:25">aux_bus_is_bridge</name><argument_list pos:start="13:26" pos:end="13:35">(<argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">bus</name></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:38" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:17">AUX_SLAVE</name><argument_list pos:start="21:18" pos:end="21:22">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:21">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="31:48"><expr pos:start="25:5" pos:end="31:47"><call pos:start="25:5" pos:end="31:47"><name pos:start="25:5" pos:end="25:18">monitor_printf</name><argument_list pos:start="25:19" pos:end="31:47">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">mon</name></expr></argument>, <argument pos:start="25:25" pos:end="25:75"><expr pos:start="25:25" pos:end="25:75"><literal type="string" pos:start="25:25" pos:end="25:36">"%*smemory "</literal> <name pos:start="25:38" pos:end="25:51">TARGET_FMT_plx</name> <literal type="string" pos:start="25:53" pos:end="25:55">"/"</literal> <name pos:start="25:57" pos:end="25:70">TARGET_FMT_plx</name> <literal type="string" pos:start="25:72" pos:end="25:75">"\n"</literal></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:25">indent</name></expr></argument>, <argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><literal type="string" pos:start="27:28" pos:end="27:29">""</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:73"><expr pos:start="29:20" pos:end="29:73"><call pos:start="29:20" pos:end="29:73"><name pos:start="29:20" pos:end="29:42">object_property_get_int</name><argument_list pos:start="29:43" pos:end="29:73">(<argument pos:start="29:44" pos:end="29:58"><expr pos:start="29:44" pos:end="29:58"><call pos:start="29:44" pos:end="29:58"><name pos:start="29:44" pos:end="29:49">OBJECT</name><argument_list pos:start="29:50" pos:end="29:58">(<argument pos:start="29:51" pos:end="29:57"><expr pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:57"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:57">mmio</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:61" pos:end="29:66"><expr pos:start="29:61" pos:end="29:66"><literal type="string" pos:start="29:61" pos:end="29:66">"addr"</literal></expr></argument>, <argument pos:start="29:69" pos:end="29:72"><expr pos:start="29:69" pos:end="29:72"><name pos:start="29:69" pos:end="29:72">NULL</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:46"><expr pos:start="31:20" pos:end="31:46"><call pos:start="31:20" pos:end="31:46"><name pos:start="31:20" pos:end="31:37">memory_region_size</name><argument_list pos:start="31:38" pos:end="31:46">(<argument pos:start="31:39" pos:end="31:45"><expr pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:39">s</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">mmio</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
