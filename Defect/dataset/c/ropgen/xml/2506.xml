<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2506.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">mtree_print_flatview</name><parameter_list pos:start="1:33" pos:end="3:50">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:49">fprintf_function</name></type> <name pos:start="1:51" pos:end="1:51">p</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">f</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:45">AddressSpace</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">as</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:25">

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">FlatView</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">view</name> <init pos:start="7:20" pos:end="7:51">= <expr pos:start="7:22" pos:end="7:51"><call pos:start="7:22" pos:end="7:51"><name pos:start="7:22" pos:end="7:47">address_space_get_flatview</name><argument_list pos:start="7:48" pos:end="7:51">(<argument pos:start="7:49" pos:end="7:50"><expr pos:start="7:49" pos:end="7:50"><name pos:start="7:49" pos:end="7:50">as</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">FlatRange</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">range</name> <init pos:start="9:22" pos:end="9:39">= <expr pos:start="9:24" pos:end="9:39"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:39"><name pos:start="9:25" pos:end="9:28">view</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">ranges</name><index pos:start="9:37" pos:end="9:39">[<expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">mr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name> <init pos:start="13:11" pos:end="13:20">= <expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:16">view</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:20">nr</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">n</name> <operator pos:start="17:11" pos:end="17:12">&lt;=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>)</condition> <block pos:start="17:17" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:15">

        <expr_stmt pos:start="19:9" pos:end="21:44"><expr pos:start="19:9" pos:end="21:43"><call pos:start="19:9" pos:end="21:43"><name pos:start="19:9" pos:end="19:9">p</name><argument_list pos:start="19:10" pos:end="21:43">(<argument pos:start="19:11" pos:end="19:11"><expr pos:start="19:11" pos:end="19:11"><name pos:start="19:11" pos:end="19:11">f</name></expr></argument>, <argument pos:start="19:14" pos:end="21:32"><expr pos:start="19:14" pos:end="21:32"><name pos:start="19:14" pos:end="19:25">MTREE_INDENT</name> <literal type="string" pos:start="19:27" pos:end="19:53">"No rendered FlatView for "</literal>

          <literal type="string" pos:start="21:11" pos:end="21:32">"address space '%s'\n"</literal></expr></argument>, <argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:36">as</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:42">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:22">flatview_unref</name><argument_list pos:start="23:23" pos:end="23:28">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="31:5" pos:end="51:5">while <condition pos:start="31:11" pos:end="31:15">(<expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:12">n</name><operator pos:start="31:13" pos:end="31:14">--</operator></expr>)</condition> <block pos:start="31:17" pos:end="51:5">{<block_content pos:start="33:9" pos:end="49:16">

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:10">mr</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:18">range</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:22">mr</name></name></expr>;</expr_stmt>

        <macro pos:start="35:9" pos:end="47:33"><name pos:start="35:9" pos:end="35:9">p</name><argument_list pos:start="35:10" pos:end="47:33">(<argument pos:start="35:11" pos:end="35:11">f</argument>, <argument pos:start="35:14" pos:end="37:47">MTREE_INDENT TARGET_FMT_plx <literal type="string" pos:start="35:42" pos:end="35:44">"-"</literal>

          TARGET_FMT_plx <literal type="string" pos:start="37:26" pos:end="37:47">" (prio %d, %s): %s\n"</literal></argument>,

          <argument pos:start="39:11" pos:end="39:41">int128_get64(range-&gt;addr.start)</argument>,

          <argument pos:start="41:11" pos:end="41:69">int128_get64(range-&gt;addr.start) + MR_SIZE(range-&gt;addr.size)</argument>,

          <argument pos:start="43:11" pos:end="43:22">mr-&gt;priority</argument>,

          <argument pos:start="45:11" pos:end="45:32">memory_region_type(mr)</argument>,

          <argument pos:start="47:11" pos:end="47:32">memory_region_name(mr)</argument>)</argument_list></macro><empty_stmt pos:start="47:34" pos:end="47:34">;</empty_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:13">range</name><operator pos:start="49:14" pos:end="49:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:18">flatview_unref</name><argument_list pos:start="55:19" pos:end="55:24">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
