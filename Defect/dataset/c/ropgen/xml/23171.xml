<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23171.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">oss_run_out</name> <parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:34">HWVoiceOut</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:16">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">OSSVoiceOut</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">oss</name> <init pos:start="5:22" pos:end="5:41">= <expr pos:start="5:24" pos:end="5:41"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:35">OSSVoiceOut</name> <operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator> <name pos:start="5:40" pos:end="5:41">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>, <decl pos:start="7:14" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">rpos</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:23">live</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:29">decr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">st_sample_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:25">audio_buf_info</name></name></type> <name pos:start="15:27" pos:end="15:32">abinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:21">count_info</name></name></type> <name pos:start="17:23" pos:end="17:29">cntinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">bufsize</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:8">live</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:41"><name pos:start="23:12" pos:end="23:36">audio_pcm_hw_get_live_out</name> <argument_list pos:start="23:38" pos:end="23:41">(<argument pos:start="23:39" pos:end="23:40"><expr pos:start="23:39" pos:end="23:40"><name pos:start="23:39" pos:end="23:40">hw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:13">live</name></expr>)</condition> <block pos:start="25:16" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:11">bufsize</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:25"><name pos:start="33:15" pos:end="33:16">hw</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">samples</name></name> <operator pos:start="33:27" pos:end="33:28">&lt;&lt;</operator> <name pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:31">hw</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">info</name><operator pos:start="33:38" pos:end="33:38">.</operator><name pos:start="33:39" pos:end="33:43">shift</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="143:5"><if pos:start="37:5" pos:end="85:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">oss</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:20">mmapped</name></name></expr>)</condition> <block pos:start="37:23" pos:end="85:5">{<block_content pos:start="39:9" pos:end="83:57">

        <decl_stmt pos:start="39:9" pos:end="39:18"><decl pos:start="39:9" pos:end="39:17"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:17">bytes</name></decl>;</decl_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:59"><name pos:start="43:15" pos:end="43:19">ioctl</name> <argument_list pos:start="43:21" pos:end="43:59">(<argument pos:start="43:22" pos:end="43:28"><expr pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:24">oss</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">fd</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:48"><expr pos:start="43:31" pos:end="43:48"><name pos:start="43:31" pos:end="43:48">SNDCTL_DSP_GETOPTR</name></expr></argument>, <argument pos:start="43:51" pos:end="43:58"><expr pos:start="43:51" pos:end="43:58"><operator pos:start="43:51" pos:end="43:51">&amp;</operator><name pos:start="43:52" pos:end="43:58">cntinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">err</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:62"><expr pos:start="47:13" pos:end="47:61"><call pos:start="47:13" pos:end="47:61"><name pos:start="47:13" pos:end="47:22">oss_logerr</name> <argument_list pos:start="47:24" pos:end="47:61">(<argument pos:start="47:25" pos:end="47:29"><expr pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:29">errno</name></expr></argument>, <argument pos:start="47:32" pos:end="47:60"><expr pos:start="47:32" pos:end="47:60"><literal type="string" pos:start="47:32" pos:end="47:60">"SNDCTL_DSP_GETOPTR failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:41">(<expr pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:19">cntinfo</name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:23">ptr</name></name> <operator pos:start="55:25" pos:end="55:26">==</operator> <name pos:start="55:28" pos:end="55:40"><name pos:start="55:28" pos:end="55:30">oss</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:40">old_optr</name></name></expr>)</condition> <block pos:start="55:43" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:21">

            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:46">(<expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:19">abs</name> <argument_list pos:start="57:21" pos:end="57:40">(<argument pos:start="57:22" pos:end="57:39"><expr pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:23">hw</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">samples</name></name> <operator pos:start="57:34" pos:end="57:34">-</operator> <name pos:start="57:36" pos:end="57:39">live</name></expr></argument>)</argument_list></call> <operator pos:start="57:42" pos:end="57:42">&lt;</operator> <literal type="number" pos:start="57:44" pos:end="57:45">64</literal></expr>)</condition> <block pos:start="57:48" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:45">

                <expr_stmt pos:start="59:17" pos:end="59:45"><expr pos:start="59:17" pos:end="59:44"><call pos:start="59:17" pos:end="59:44"><name pos:start="59:17" pos:end="59:21">dolog</name> <argument_list pos:start="59:23" pos:end="59:44">(<argument pos:start="59:24" pos:end="59:43"><expr pos:start="59:24" pos:end="59:43"><literal type="string" pos:start="59:24" pos:end="59:43">"warning: Overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="63:13" pos:end="63:21">return <expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:40">(<expr pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19">cntinfo</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:23">ptr</name></name> <operator pos:start="69:25" pos:end="69:25">&gt;</operator> <name pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:29">oss</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:39">old_optr</name></name></expr>)</condition> <block pos:start="69:42" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:48">

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:17">bytes</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:31"><name pos:start="71:21" pos:end="71:27">cntinfo</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:31">ptr</name></name> <operator pos:start="71:33" pos:end="71:33">-</operator> <name pos:start="71:35" pos:end="71:47"><name pos:start="71:35" pos:end="71:37">oss</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:47">old_optr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="75:9" pos:end="79:9">else <block pos:start="75:14" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:58">

            <expr_stmt pos:start="77:13" pos:end="77:58"><expr pos:start="77:13" pos:end="77:57"><name pos:start="77:13" pos:end="77:17">bytes</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:27">bufsize</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:41"><name pos:start="77:31" pos:end="77:37">cntinfo</name><operator pos:start="77:38" pos:end="77:38">.</operator><name pos:start="77:39" pos:end="77:41">ptr</name></name> <operator pos:start="77:43" pos:end="77:43">-</operator> <name pos:start="77:45" pos:end="77:57"><name pos:start="77:45" pos:end="77:47">oss</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:57">old_optr</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:12">decr</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:56"><name pos:start="83:16" pos:end="83:24">audio_MIN</name> <argument_list pos:start="83:26" pos:end="83:56">(<argument pos:start="83:27" pos:end="83:49"><expr pos:start="83:27" pos:end="83:49"><name pos:start="83:27" pos:end="83:31">bytes</name> <operator pos:start="83:33" pos:end="83:34">&gt;&gt;</operator> <name pos:start="83:36" pos:end="83:49"><name pos:start="83:36" pos:end="83:37">hw</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:43">info</name><operator pos:start="83:44" pos:end="83:44">.</operator><name pos:start="83:45" pos:end="83:49">shift</name></name></expr></argument>, <argument pos:start="83:52" pos:end="83:55"><expr pos:start="83:52" pos:end="83:55"><name pos:start="83:52" pos:end="83:55">live</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="87:5" pos:end="143:5">else <block pos:start="87:10" pos:end="143:5">{<block_content pos:start="89:9" pos:end="141:9">

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:11">err</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:60"><name pos:start="89:15" pos:end="89:19">ioctl</name> <argument_list pos:start="89:21" pos:end="89:60">(<argument pos:start="89:22" pos:end="89:28"><expr pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:24">oss</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:28">fd</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:50"><expr pos:start="89:31" pos:end="89:50"><name pos:start="89:31" pos:end="89:50">SNDCTL_DSP_GETOSPACE</name></expr></argument>, <argument pos:start="89:53" pos:end="89:59"><expr pos:start="89:53" pos:end="89:59"><operator pos:start="89:53" pos:end="89:53">&amp;</operator><name pos:start="89:54" pos:end="89:59">abinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">err</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition> <block pos:start="91:22" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:21">

            <expr_stmt pos:start="93:13" pos:end="93:62"><expr pos:start="93:13" pos:end="93:61"><call pos:start="93:13" pos:end="93:61"><name pos:start="93:13" pos:end="93:22">oss_logerr</name> <argument_list pos:start="93:24" pos:end="93:61">(<argument pos:start="93:25" pos:end="93:29"><expr pos:start="93:25" pos:end="93:29"><name pos:start="93:25" pos:end="93:29">errno</name></expr></argument>, <argument pos:start="93:32" pos:end="93:60"><expr pos:start="93:32" pos:end="93:60"><literal type="string" pos:start="93:32" pos:end="93:60">"SNDCTL_DSP_GETOPTR failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="95:13" pos:end="95:21">return <expr pos:start="95:20" pos:end="95:20"><literal type="number" pos:start="95:20" pos:end="95:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="101:9" pos:end="115:9"><if pos:start="101:9" pos:end="115:9">if <condition pos:start="101:12" pos:end="101:35">(<expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:18">abinfo</name><operator pos:start="101:19" pos:end="101:19">.</operator><name pos:start="101:20" pos:end="101:24">bytes</name></name> <operator pos:start="101:26" pos:end="101:26">&gt;</operator> <name pos:start="101:28" pos:end="101:34">bufsize</name></expr>)</condition> <block pos:start="101:37" pos:end="115:9">{<block_content pos:start="103:13" pos:end="113:35">

            <if_stmt pos:start="103:13" pos:end="111:13"><if pos:start="103:13" pos:end="111:13">if <condition pos:start="103:16" pos:end="103:27">(<expr pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:20">conf</name><operator pos:start="103:21" pos:end="103:21">.</operator><name pos:start="103:22" pos:end="103:26">debug</name></name></expr>)</condition> <block pos:start="103:29" pos:end="111:13">{<block_content pos:start="105:17" pos:end="109:46">

                <expr_stmt pos:start="105:17" pos:end="109:46"><expr pos:start="105:17" pos:end="109:45"><call pos:start="105:17" pos:end="109:45"><name pos:start="105:17" pos:end="105:21">dolog</name> <argument_list pos:start="105:23" pos:end="109:45">(<argument pos:start="105:24" pos:end="107:79"><expr pos:start="105:24" pos:end="107:79"><literal type="string" pos:start="105:24" pos:end="105:78">"warning: Invalid available size, size=%d bufsize=%d\n"</literal>

                       <literal type="string" pos:start="107:24" pos:end="107:79">"please report your OS/audio hw to malc@pulsesoft.com\n"</literal></expr></argument>,

                       <argument pos:start="109:24" pos:end="109:35"><expr pos:start="109:24" pos:end="109:35"><name pos:start="109:24" pos:end="109:35"><name pos:start="109:24" pos:end="109:29">abinfo</name><operator pos:start="109:30" pos:end="109:30">.</operator><name pos:start="109:31" pos:end="109:35">bytes</name></name></expr></argument>, <argument pos:start="109:38" pos:end="109:44"><expr pos:start="109:38" pos:end="109:44"><name pos:start="109:38" pos:end="109:44">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:18">abinfo</name><operator pos:start="113:19" pos:end="113:19">.</operator><name pos:start="113:20" pos:end="113:24">bytes</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:34">bufsize</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="131:9"><if pos:start="119:9" pos:end="131:9">if <condition pos:start="119:12" pos:end="119:29">(<expr pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:18">abinfo</name><operator pos:start="119:19" pos:end="119:19">.</operator><name pos:start="119:20" pos:end="119:24">bytes</name></name> <operator pos:start="119:26" pos:end="119:26">&lt;</operator> <literal type="number" pos:start="119:28" pos:end="119:28">0</literal></expr>)</condition> <block pos:start="119:31" pos:end="131:9">{<block_content pos:start="121:13" pos:end="129:21">

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:27">(<expr pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:20">conf</name><operator pos:start="121:21" pos:end="121:21">.</operator><name pos:start="121:22" pos:end="121:26">debug</name></name></expr>)</condition> <block pos:start="121:29" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:46">

                <expr_stmt pos:start="123:17" pos:end="125:46"><expr pos:start="123:17" pos:end="125:45"><call pos:start="123:17" pos:end="125:45"><name pos:start="123:17" pos:end="123:21">dolog</name> <argument_list pos:start="123:23" pos:end="125:45">(<argument pos:start="123:24" pos:end="123:78"><expr pos:start="123:24" pos:end="123:78"><literal type="string" pos:start="123:24" pos:end="123:78">"warning: Invalid available size, size=%d bufsize=%d\n"</literal></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:35"><expr pos:start="125:24" pos:end="125:35"><name pos:start="125:24" pos:end="125:35"><name pos:start="125:24" pos:end="125:29">abinfo</name><operator pos:start="125:30" pos:end="125:30">.</operator><name pos:start="125:31" pos:end="125:35">bytes</name></name></expr></argument>, <argument pos:start="125:38" pos:end="125:44"><expr pos:start="125:38" pos:end="125:44"><name pos:start="125:38" pos:end="125:44">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="129:13" pos:end="129:21">return <expr pos:start="129:20" pos:end="129:20"><literal type="number" pos:start="129:20" pos:end="129:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:64"><expr pos:start="135:9" pos:end="135:63"><name pos:start="135:9" pos:end="135:12">decr</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <call pos:start="135:16" pos:end="135:63"><name pos:start="135:16" pos:end="135:24">audio_MIN</name> <argument_list pos:start="135:26" pos:end="135:63">(<argument pos:start="135:27" pos:end="135:56"><expr pos:start="135:27" pos:end="135:56"><name pos:start="135:27" pos:end="135:38"><name pos:start="135:27" pos:end="135:32">abinfo</name><operator pos:start="135:33" pos:end="135:33">.</operator><name pos:start="135:34" pos:end="135:38">bytes</name></name> <operator pos:start="135:40" pos:end="135:41">&gt;&gt;</operator> <name pos:start="135:43" pos:end="135:56"><name pos:start="135:43" pos:end="135:44">hw</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:50">info</name><operator pos:start="135:51" pos:end="135:51">.</operator><name pos:start="135:52" pos:end="135:56">shift</name></name></expr></argument>, <argument pos:start="135:59" pos:end="135:62"><expr pos:start="135:59" pos:end="135:62"><name pos:start="135:59" pos:end="135:62">live</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:18">(<expr pos:start="137:13" pos:end="137:17"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:17">decr</name></expr>)</condition> <block pos:start="137:20" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:21">

            <return pos:start="139:13" pos:end="139:21">return <expr pos:start="139:20" pos:end="139:20"><literal type="number" pos:start="139:20" pos:end="139:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:19"><expr pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:11">samples</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:18">decr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:20"><expr pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:8">rpos</name> <operator pos:start="149:10" pos:end="149:10">=</operator> <name pos:start="149:12" pos:end="149:19"><name pos:start="149:12" pos:end="149:13">hw</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:19">rpos</name></name></expr>;</expr_stmt>

    <while pos:start="151:5" pos:end="229:5">while <condition pos:start="151:11" pos:end="151:19">(<expr pos:start="151:12" pos:end="151:18"><name pos:start="151:12" pos:end="151:18">samples</name></expr>)</condition> <block pos:start="151:21" pos:end="229:5">{<block_content pos:start="153:9" pos:end="227:35">

        <decl_stmt pos:start="153:9" pos:end="153:55"><decl pos:start="153:9" pos:end="153:54"><type pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">int</name></type> <name pos:start="153:13" pos:end="153:33">left_till_end_samples</name> <init pos:start="153:35" pos:end="153:54">= <expr pos:start="153:37" pos:end="153:54"><name pos:start="153:37" pos:end="153:47"><name pos:start="153:37" pos:end="153:38">hw</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:47">samples</name></name> <operator pos:start="153:49" pos:end="153:49">-</operator> <name pos:start="153:51" pos:end="153:54">rpos</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:73"><decl pos:start="155:9" pos:end="155:72"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:27">convert_samples</name> <init pos:start="155:29" pos:end="155:72">= <expr pos:start="155:31" pos:end="155:72"><call pos:start="155:31" pos:end="155:72"><name pos:start="155:31" pos:end="155:39">audio_MIN</name> <argument_list pos:start="155:41" pos:end="155:72">(<argument pos:start="155:42" pos:end="155:48"><expr pos:start="155:42" pos:end="155:48"><name pos:start="155:42" pos:end="155:48">samples</name></expr></argument>, <argument pos:start="155:51" pos:end="155:71"><expr pos:start="155:51" pos:end="155:71"><name pos:start="155:51" pos:end="155:71">left_till_end_samples</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:33"><expr pos:start="159:9" pos:end="159:32"><name pos:start="159:9" pos:end="159:11">src</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:25"><name pos:start="159:15" pos:end="159:16">hw</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:25">mix_buf</name></name> <operator pos:start="159:27" pos:end="159:27">+</operator> <name pos:start="159:29" pos:end="159:32">rpos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:61"><expr pos:start="161:9" pos:end="161:60"><name pos:start="161:9" pos:end="161:11">dst</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <call pos:start="161:15" pos:end="161:60"><name pos:start="161:15" pos:end="161:21">advance</name> <argument_list pos:start="161:23" pos:end="161:60">(<argument pos:start="161:24" pos:end="161:35"><expr pos:start="161:24" pos:end="161:35"><name pos:start="161:24" pos:end="161:35"><name pos:start="161:24" pos:end="161:26">oss</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:35">pcm_buf</name></name></expr></argument>, <argument pos:start="161:38" pos:end="161:59"><expr pos:start="161:38" pos:end="161:59"><name pos:start="161:38" pos:end="161:41">rpos</name> <operator pos:start="161:43" pos:end="161:44">&lt;&lt;</operator> <name pos:start="161:46" pos:end="161:59"><name pos:start="161:46" pos:end="161:47">hw</name><operator pos:start="161:48" pos:end="161:49">-&gt;</operator><name pos:start="161:50" pos:end="161:53">info</name><operator pos:start="161:54" pos:end="161:54">.</operator><name pos:start="161:55" pos:end="161:59">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:45"><expr pos:start="165:9" pos:end="165:44"><call pos:start="165:9" pos:end="165:44"><name pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:10">hw</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:16">clip</name></name> <argument_list pos:start="165:18" pos:end="165:44">(<argument pos:start="165:19" pos:end="165:21"><expr pos:start="165:19" pos:end="165:21"><name pos:start="165:19" pos:end="165:21">dst</name></expr></argument>, <argument pos:start="165:24" pos:end="165:26"><expr pos:start="165:24" pos:end="165:26"><name pos:start="165:24" pos:end="165:26">src</name></expr></argument>, <argument pos:start="165:29" pos:end="165:43"><expr pos:start="165:29" pos:end="165:43"><name pos:start="165:29" pos:end="165:43">convert_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="221:9"><if pos:start="167:9" pos:end="221:9">if <condition pos:start="167:12" pos:end="167:26">(<expr pos:start="167:13" pos:end="167:25"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:25"><name pos:start="167:14" pos:end="167:16">oss</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:25">mmapped</name></name></expr>)</condition> <block pos:start="167:28" pos:end="221:9">{<block_content pos:start="169:13" pos:end="219:13">

            <decl_stmt pos:start="169:13" pos:end="169:24"><decl pos:start="169:13" pos:end="169:23"><type pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">int</name></type> <name pos:start="169:17" pos:end="169:23">written</name></decl>;</decl_stmt>



            <expr_stmt pos:start="173:13" pos:end="173:78"><expr pos:start="173:13" pos:end="173:77"><name pos:start="173:13" pos:end="173:19">written</name> <operator pos:start="173:21" pos:end="173:21">=</operator> <call pos:start="173:23" pos:end="173:77"><name pos:start="173:23" pos:end="173:27">write</name> <argument_list pos:start="173:29" pos:end="173:77">(<argument pos:start="173:30" pos:end="173:36"><expr pos:start="173:30" pos:end="173:36"><name pos:start="173:30" pos:end="173:36"><name pos:start="173:30" pos:end="173:32">oss</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:36">fd</name></name></expr></argument>, <argument pos:start="173:39" pos:end="173:41"><expr pos:start="173:39" pos:end="173:41"><name pos:start="173:39" pos:end="173:41">dst</name></expr></argument>, <argument pos:start="173:44" pos:end="173:76"><expr pos:start="173:44" pos:end="173:76"><name pos:start="173:44" pos:end="173:58">convert_samples</name> <operator pos:start="173:60" pos:end="173:61">&lt;&lt;</operator> <name pos:start="173:63" pos:end="173:76"><name pos:start="173:63" pos:end="173:64">hw</name><operator pos:start="173:65" pos:end="173:66">-&gt;</operator><name pos:start="173:67" pos:end="173:70">info</name><operator pos:start="173:71" pos:end="173:71">.</operator><name pos:start="173:72" pos:end="173:76">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="175:13" pos:end="175:53">/* XXX: follow errno recommendations ? */</comment>

            <if_stmt pos:start="177:13" pos:end="193:13"><if pos:start="177:13" pos:end="193:13">if <condition pos:start="177:16" pos:end="177:30">(<expr pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:23">written</name> <operator pos:start="177:25" pos:end="177:26">==</operator> <operator pos:start="177:28" pos:end="177:28">-</operator><literal type="number" pos:start="177:29" pos:end="177:29">1</literal></expr>)</condition> <block pos:start="177:32" pos:end="193:13">{<block_content pos:start="179:17" pos:end="191:25">

                <expr_stmt pos:start="179:17" pos:end="189:22"><expr pos:start="179:17" pos:end="189:21"><call pos:start="179:17" pos:end="189:21"><name pos:start="179:17" pos:end="179:26">oss_logerr</name> <argument_list pos:start="179:28" pos:end="189:21">(

                    <argument pos:start="181:21" pos:end="181:25"><expr pos:start="181:21" pos:end="181:25"><name pos:start="181:21" pos:end="181:25">errno</name></expr></argument>,

                    <argument pos:start="183:21" pos:end="183:70"><expr pos:start="183:21" pos:end="183:70"><literal type="string" pos:start="183:21" pos:end="183:70">"Failed to write %d bytes of audio data from %p\n"</literal></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:53"><expr pos:start="185:21" pos:end="185:53"><name pos:start="185:21" pos:end="185:35">convert_samples</name> <operator pos:start="185:37" pos:end="185:38">&lt;&lt;</operator> <name pos:start="185:40" pos:end="185:53"><name pos:start="185:40" pos:end="185:41">hw</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:47">info</name><operator pos:start="185:48" pos:end="185:48">.</operator><name pos:start="185:49" pos:end="185:53">shift</name></name></expr></argument>,

                    <argument pos:start="187:21" pos:end="187:23"><expr pos:start="187:21" pos:end="187:23"><name pos:start="187:21" pos:end="187:23">dst</name></expr></argument>

                    )</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="191:17" pos:end="191:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="197:13" pos:end="219:13"><if pos:start="197:13" pos:end="219:13">if <condition pos:start="197:16" pos:end="197:61">(<expr pos:start="197:17" pos:end="197:60"><name pos:start="197:17" pos:end="197:23">written</name> <operator pos:start="197:25" pos:end="197:26">!=</operator> <name pos:start="197:28" pos:end="197:42">convert_samples</name> <operator pos:start="197:44" pos:end="197:45">&lt;&lt;</operator> <name pos:start="197:47" pos:end="197:60"><name pos:start="197:47" pos:end="197:48">hw</name><operator pos:start="197:49" pos:end="197:50">-&gt;</operator><name pos:start="197:51" pos:end="197:54">info</name><operator pos:start="197:55" pos:end="197:55">.</operator><name pos:start="197:56" pos:end="197:60">shift</name></name></expr>)</condition> <block pos:start="197:63" pos:end="219:13">{<block_content pos:start="199:17" pos:end="217:22">

                <decl_stmt pos:start="199:17" pos:end="199:57"><decl pos:start="199:17" pos:end="199:56"><type pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:19">int</name></type> <name pos:start="199:21" pos:end="199:28">wsamples</name> <init pos:start="199:30" pos:end="199:56">= <expr pos:start="199:32" pos:end="199:56"><name pos:start="199:32" pos:end="199:38">written</name> <operator pos:start="199:40" pos:end="199:41">&gt;&gt;</operator> <name pos:start="199:43" pos:end="199:56"><name pos:start="199:43" pos:end="199:44">hw</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:50">info</name><operator pos:start="199:51" pos:end="199:51">.</operator><name pos:start="199:52" pos:end="199:56">shift</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="201:17" pos:end="201:56"><decl pos:start="201:17" pos:end="201:55"><type pos:start="201:17" pos:end="201:19"><name pos:start="201:17" pos:end="201:19">int</name></type> <name pos:start="201:21" pos:end="201:26">wbytes</name> <init pos:start="201:28" pos:end="201:55">= <expr pos:start="201:30" pos:end="201:55"><name pos:start="201:30" pos:end="201:37">wsamples</name> <operator pos:start="201:39" pos:end="201:40">&lt;&lt;</operator> <name pos:start="201:42" pos:end="201:55"><name pos:start="201:42" pos:end="201:43">hw</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:49">info</name><operator pos:start="201:50" pos:end="201:50">.</operator><name pos:start="201:51" pos:end="201:55">shift</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="203:17" pos:end="211:17"><if pos:start="203:17" pos:end="211:17">if <condition pos:start="203:20" pos:end="203:38">(<expr pos:start="203:21" pos:end="203:37"><name pos:start="203:21" pos:end="203:26">wbytes</name> <operator pos:start="203:28" pos:end="203:29">!=</operator> <name pos:start="203:31" pos:end="203:37">written</name></expr>)</condition> <block pos:start="203:40" pos:end="211:17">{<block_content pos:start="205:21" pos:end="209:64">

                    <expr_stmt pos:start="205:21" pos:end="209:64"><expr pos:start="205:21" pos:end="209:63"><call pos:start="205:21" pos:end="209:63"><name pos:start="205:21" pos:end="205:25">dolog</name> <argument_list pos:start="205:27" pos:end="209:63">(<argument pos:start="205:28" pos:end="207:43"><expr pos:start="205:28" pos:end="207:43"><literal type="string" pos:start="205:28" pos:end="205:74">"warning: Misaligned write %d (requested %d), "</literal>

                           <literal type="string" pos:start="207:28" pos:end="207:43">"alignment %d\n"</literal></expr></argument>,

                           <argument pos:start="209:28" pos:end="209:33"><expr pos:start="209:28" pos:end="209:33"><name pos:start="209:28" pos:end="209:33">wbytes</name></expr></argument>, <argument pos:start="209:36" pos:end="209:42"><expr pos:start="209:36" pos:end="209:42"><name pos:start="209:36" pos:end="209:42">written</name></expr></argument>, <argument pos:start="209:45" pos:end="209:62"><expr pos:start="209:45" pos:end="209:62"><name pos:start="209:45" pos:end="209:58"><name pos:start="209:45" pos:end="209:46">hw</name><operator pos:start="209:47" pos:end="209:48">-&gt;</operator><name pos:start="209:49" pos:end="209:52">info</name><operator pos:start="209:53" pos:end="209:53">.</operator><name pos:start="209:54" pos:end="209:58">align</name></name> <operator pos:start="209:60" pos:end="209:60">+</operator> <literal type="number" pos:start="209:62" pos:end="209:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:33"><expr pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:20">decr</name> <operator pos:start="213:22" pos:end="213:23">-=</operator> <name pos:start="213:25" pos:end="213:32">wsamples</name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:55"><expr pos:start="215:17" pos:end="215:54"><name pos:start="215:17" pos:end="215:20">rpos</name> <operator pos:start="215:22" pos:end="215:22">=</operator> <operator pos:start="215:24" pos:end="215:24">(</operator><name pos:start="215:25" pos:end="215:28">rpos</name> <operator pos:start="215:30" pos:end="215:30">+</operator> <name pos:start="215:32" pos:end="215:39">wsamples</name><operator pos:start="215:40" pos:end="215:40">)</operator> <operator pos:start="215:42" pos:end="215:42">%</operator> <name pos:start="215:44" pos:end="215:54"><name pos:start="215:44" pos:end="215:45">hw</name><operator pos:start="215:46" pos:end="215:47">-&gt;</operator><name pos:start="215:48" pos:end="215:54">samples</name></name></expr>;</expr_stmt>

                <break pos:start="217:17" pos:end="217:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:54"><expr pos:start="225:9" pos:end="225:53"><name pos:start="225:9" pos:end="225:12">rpos</name> <operator pos:start="225:14" pos:end="225:14">=</operator> <operator pos:start="225:16" pos:end="225:16">(</operator><name pos:start="225:17" pos:end="225:20">rpos</name> <operator pos:start="225:22" pos:end="225:22">+</operator> <name pos:start="225:24" pos:end="225:38">convert_samples</name><operator pos:start="225:39" pos:end="225:39">)</operator> <operator pos:start="225:41" pos:end="225:41">%</operator> <name pos:start="225:43" pos:end="225:53"><name pos:start="225:43" pos:end="225:44">hw</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:53">samples</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:35"><expr pos:start="227:9" pos:end="227:34"><name pos:start="227:9" pos:end="227:15">samples</name> <operator pos:start="227:17" pos:end="227:18">-=</operator> <name pos:start="227:20" pos:end="227:34">convert_samples</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="231:5" pos:end="235:5"><if pos:start="231:5" pos:end="235:5">if <condition pos:start="231:8" pos:end="231:21">(<expr pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:11">oss</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:20">mmapped</name></name></expr>)</condition> <block pos:start="231:23" pos:end="235:5">{<block_content pos:start="233:9" pos:end="233:36">

        <expr_stmt pos:start="233:9" pos:end="233:36"><expr pos:start="233:9" pos:end="233:35"><name pos:start="233:9" pos:end="233:21"><name pos:start="233:9" pos:end="233:11">oss</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:21">old_optr</name></name> <operator pos:start="233:23" pos:end="233:23">=</operator> <name pos:start="233:25" pos:end="233:35"><name pos:start="233:25" pos:end="233:31">cntinfo</name><operator pos:start="233:32" pos:end="233:32">.</operator><name pos:start="233:33" pos:end="233:35">ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:20"><expr pos:start="239:5" pos:end="239:19"><name pos:start="239:5" pos:end="239:12"><name pos:start="239:5" pos:end="239:6">hw</name><operator pos:start="239:7" pos:end="239:8">-&gt;</operator><name pos:start="239:9" pos:end="239:12">rpos</name></name> <operator pos:start="239:14" pos:end="239:14">=</operator> <name pos:start="239:16" pos:end="239:19">rpos</name></expr>;</expr_stmt>

    <return pos:start="241:5" pos:end="241:16">return <expr pos:start="241:12" pos:end="241:15"><name pos:start="241:12" pos:end="241:15">decr</name></expr>;</return>

</block_content>}</block></function>
</unit>
