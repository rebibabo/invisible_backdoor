<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1966.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">ff_wms_parse_sdp_a_line</name><parameter_list pos:start="1:29" pos:end="1:63">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <if_stmt pos:start="5:5" pos:end="43:5"><if pos:start="5:5" pos:end="43:5">if <condition pos:start="5:8" pos:end="5:82">(<expr pos:start="5:9" pos:end="5:81"><call pos:start="5:9" pos:end="5:81"><name pos:start="5:9" pos:end="5:19">av_strstart</name><argument_list pos:start="5:20" pos:end="5:81">(<argument pos:start="5:21" pos:end="5:21"><expr pos:start="5:21" pos:end="5:21"><name pos:start="5:21" pos:end="5:21">p</name></expr></argument>, <argument pos:start="5:24" pos:end="5:76"><expr pos:start="5:24" pos:end="5:76"><literal type="string" pos:start="5:24" pos:end="5:76">"pgmpu:data:application/vnd.ms.wms-hdr.asfv1;base64,"</literal></expr></argument>, <argument pos:start="5:79" pos:end="5:80"><expr pos:start="5:79" pos:end="5:80"><operator pos:start="5:79" pos:end="5:79">&amp;</operator><name pos:start="5:80" pos:end="5:80">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:84" pos:end="43:5">{<block_content pos:start="7:9" pos:end="41:31">

        <decl_stmt pos:start="7:9" pos:end="7:25"><decl pos:start="7:9" pos:end="7:24"><type pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:21">ByteIOContext</name></type> <name pos:start="7:23" pos:end="7:24">pb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:37"><decl pos:start="9:9" pos:end="9:36"><type pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:17">RTSPState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">rt</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:36"><decl pos:start="11:9" pos:end="11:35"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">len</name> <init pos:start="11:17" pos:end="11:35">= <expr pos:start="11:19" pos:end="11:35"><call pos:start="11:19" pos:end="11:27"><name pos:start="11:19" pos:end="11:24">strlen</name><argument_list pos:start="11:25" pos:end="11:27">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">p</name></expr></argument>)</argument_list></call> <operator pos:start="11:29" pos:end="11:29">*</operator> <literal type="number" pos:start="11:31" pos:end="11:31">6</literal> <operator pos:start="11:33" pos:end="11:33">/</operator> <literal type="number" pos:start="11:35" pos:end="11:35">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:36"><decl pos:start="13:9" pos:end="13:35"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">buf</name> <init pos:start="13:19" pos:end="13:35">= <expr pos:start="13:21" pos:end="13:35"><call pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:30">av_mallocz</name><argument_list pos:start="13:31" pos:end="13:35">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><call pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:24">av_base64_decode</name><argument_list pos:start="15:25" pos:end="15:37">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">buf</name></expr></argument>, <argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">p</name></expr></argument>, <argument pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:36">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="23:70"><if pos:start="19:9" pos:end="23:70">if <condition pos:start="19:12" pos:end="19:45">(<expr pos:start="19:13" pos:end="19:44"><call pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:30">rtp_asf_fix_header</name><argument_list pos:start="19:31" pos:end="19:40">(<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">buf</name></expr></argument>, <argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><name pos:start="19:37" pos:end="19:39">len</name></expr></argument>)</argument_list></call> <operator pos:start="19:42" pos:end="19:42">&lt;</operator> <literal type="number" pos:start="19:44" pos:end="19:44">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="23:70"><block_content pos:start="21:13" pos:end="23:70">

            <expr_stmt pos:start="21:13" pos:end="23:70"><expr pos:start="21:13" pos:end="23:69"><call pos:start="21:13" pos:end="23:69"><name pos:start="21:13" pos:end="21:18">av_log</name><argument_list pos:start="21:19" pos:end="23:69">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">s</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:68"><expr pos:start="23:20" pos:end="23:68"><literal type="string" pos:start="23:20" pos:end="23:68">"Failed to fix invalid RTSP-MS/ASF min_pktsize\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:23">init_packetizer</name><argument_list pos:start="25:24" pos:end="25:38">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:27">pb</name></expr></argument>, <argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">buf</name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:24">(<expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:14">rt</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">asf_ctx</name></name></expr>)</condition> <block pos:start="27:26" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:31">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:33">av_close_input_stream</name><argument_list pos:start="29:34" pos:end="29:46">(<argument pos:start="29:35" pos:end="29:45"><expr pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:36">rt</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:45">asf_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:14">rt</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">asf_ctx</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:72"><expr pos:start="35:9" pos:end="35:71"><call pos:start="35:9" pos:end="35:71"><name pos:start="35:9" pos:end="35:28">av_open_input_stream</name><argument_list pos:start="35:29" pos:end="35:71">(<argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:32">rt</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:41">asf_ctx</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><operator pos:start="35:44" pos:end="35:44">&amp;</operator><name pos:start="35:45" pos:end="35:46">pb</name></expr></argument>, <argument pos:start="35:49" pos:end="35:50"><expr pos:start="35:49" pos:end="35:50"><literal type="string" pos:start="35:49" pos:end="35:50">""</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:64"><expr pos:start="35:53" pos:end="35:64"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:64">asf_demuxer</name></expr></argument>, <argument pos:start="35:67" pos:end="35:70"><expr pos:start="35:67" pos:end="35:70"><name pos:start="35:67" pos:end="35:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:10">rt</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:22">asf_pb_pos</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:34">url_ftell</name><argument_list pos:start="37:35" pos:end="37:39">(<argument pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><operator pos:start="37:36" pos:end="37:36">&amp;</operator><name pos:start="37:37" pos:end="37:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:15">av_free</name><argument_list pos:start="39:16" pos:end="39:20">(<argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:10">rt</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">asf_ctx</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:30">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
