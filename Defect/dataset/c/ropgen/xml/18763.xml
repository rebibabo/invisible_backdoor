<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18763.c" pos:tabs="8"><function pos:start="1:1" pos:end="335:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:36">initFilter</name>)<parameter_list pos:start="1:38" pos:end="3:83">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:45">int16_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">filter</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:62">int16_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">filterPos</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:90"><decl pos:start="1:76" pos:end="1:90"><type pos:start="1:76" pos:end="1:90"><name pos:start="1:76" pos:end="1:78">int</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:90">filterSize</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:100"><decl pos:start="1:93" pos:end="1:100"><type pos:start="1:93" pos:end="1:100"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:100">xInc</name></decl></parameter>,

				      <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">srcW</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">dstW</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:73"><decl pos:start="3:59" pos:end="3:73"><type pos:start="3:59" pos:end="3:73"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:73">filterAlign</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:82"><decl pos:start="3:76" pos:end="3:82"><type pos:start="3:76" pos:end="3:82"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:82">one</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="335:1">{<block_content pos:start="7:9" pos:end="333:9">

	<decl_stmt pos:start="7:9" pos:end="10:0"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:15">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:15">HAVE_MMX</name></cpp:ifdef>

	<asm pos:start="11:9" pos:end="14:0">asm <specifier pos:start="11:13" pos:end="11:20">volatile</specifier>("emms\n\t"::: "memory");</asm> <comment type="line" pos:start="11:47" pos:end="11:118">//FIXME this shouldnt be required but it IS (even for non mmx versions) </comment>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>



	<if_stmt pos:start="17:9" pos:end="233:9"><if pos:start="17:9" pos:end="41:9">if<condition pos:start="17:11" pos:end="17:35">(<expr pos:start="17:12" pos:end="17:34"><call pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:14">ABS</name><argument_list pos:start="17:15" pos:end="17:30">(<argument pos:start="17:16" pos:end="17:29"><expr pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:19">xInc</name> <operator pos:start="17:21" pos:end="17:21">-</operator> <literal type="number" pos:start="17:23" pos:end="17:29">0x10000</literal></expr></argument>)</argument_list></call> <operator pos:start="17:32" pos:end="17:32">&lt;</operator><literal type="number" pos:start="17:33" pos:end="17:34">10</literal></expr>)</condition> <comment type="line" pos:start="17:37" pos:end="17:47">// unscaled</comment>

	<block pos:start="19:9" pos:end="41:9">{<block_content pos:start="21:17" pos:end="37:17">

		<decl_stmt pos:start="21:17" pos:end="21:22"><decl pos:start="21:17" pos:end="21:21"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">i</name></decl>;</decl_stmt>

		<expr_stmt pos:start="23:17" pos:end="23:71"><expr pos:start="23:17" pos:end="23:70"><operator pos:start="23:17" pos:end="23:17">*</operator><name pos:start="23:18" pos:end="23:27">filterSize</name><operator pos:start="23:28" pos:end="23:28">=</operator> <operator pos:start="23:30" pos:end="23:30">(</operator><literal type="number" pos:start="23:31" pos:end="23:33">1</literal> <operator pos:start="23:33" pos:end="23:33">+</operator><operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:45">filterAlign</name><operator pos:start="23:46" pos:end="23:46">-</operator><literal type="number" pos:start="23:47" pos:end="23:47">1</literal><operator pos:start="23:48" pos:end="23:48">)</operator><operator pos:start="23:49" pos:end="23:49">)</operator> <operator pos:start="23:51" pos:end="23:51">&amp;</operator> <operator pos:start="23:53" pos:end="23:53">(</operator><operator pos:start="23:54" pos:end="23:54">~</operator><operator pos:start="23:55" pos:end="23:55">(</operator><name pos:start="23:56" pos:end="23:66">filterAlign</name><operator pos:start="23:67" pos:end="23:67">-</operator><literal type="number" pos:start="23:68" pos:end="23:68">1</literal><operator pos:start="23:69" pos:end="23:69">)</operator><operator pos:start="23:70" pos:end="23:70">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="23:73" pos:end="23:89">// 1 or 4 normaly</comment>

		<for pos:start="25:17" pos:end="25:64">for<control pos:start="25:20" pos:end="25:51">(<init pos:start="25:21" pos:end="25:24"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:21">i</name><operator pos:start="25:22" pos:end="25:22">=</operator><literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>;</init> <condition pos:start="25:26" pos:end="25:46"><expr pos:start="25:26" pos:end="25:45"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:27">&lt;</operator><name pos:start="25:28" pos:end="25:31">dstW</name><operator pos:start="25:32" pos:end="25:32">*</operator><operator pos:start="25:33" pos:end="25:33">(</operator><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:44">filterSize</name><operator pos:start="25:45" pos:end="25:45">)</operator></expr>;</condition> <incr pos:start="25:48" pos:end="25:50"><expr pos:start="25:48" pos:end="25:50"><name pos:start="25:48" pos:end="25:48">i</name><operator pos:start="25:49" pos:end="25:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:53" pos:end="25:64"><block_content pos:start="25:53" pos:end="25:64"> <expr_stmt pos:start="25:53" pos:end="25:64"><expr pos:start="25:53" pos:end="25:63"><name pos:start="25:53" pos:end="25:61"><name pos:start="25:53" pos:end="25:58">filter</name><index pos:start="25:59" pos:end="25:61">[<expr pos:start="25:60" pos:end="25:60"><name pos:start="25:60" pos:end="25:60">i</name></expr>]</index></name><operator pos:start="25:62" pos:end="25:62">=</operator><literal type="number" pos:start="25:63" pos:end="25:63">0</literal></expr>;</expr_stmt></block_content></block></for>



		<for pos:start="29:17" pos:end="37:17">for<control pos:start="29:20" pos:end="29:37">(<init pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:21">i</name><operator pos:start="29:22" pos:end="29:22">=</operator><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</init> <condition pos:start="29:26" pos:end="29:32"><expr pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:26">i</name><operator pos:start="29:27" pos:end="29:27">&lt;</operator><name pos:start="29:28" pos:end="29:31">dstW</name></expr>;</condition> <incr pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:34">i</name><operator pos:start="29:35" pos:end="29:36">++</operator></expr></incr>)</control>

		<block pos:start="31:17" pos:end="37:17">{<block_content pos:start="33:25" pos:end="35:39">

			<expr_stmt pos:start="33:25" pos:end="33:50"><expr pos:start="33:25" pos:end="33:49"><name pos:start="33:25" pos:end="33:47"><name pos:start="33:25" pos:end="33:30">filter</name><index pos:start="33:31" pos:end="33:47">[<expr pos:start="33:32" pos:end="33:46"><name pos:start="33:32" pos:end="33:32">i</name><operator pos:start="33:33" pos:end="33:33">*</operator><operator pos:start="33:34" pos:end="33:34">(</operator><operator pos:start="33:35" pos:end="33:35">*</operator><name pos:start="33:36" pos:end="33:45">filterSize</name><operator pos:start="33:46" pos:end="33:46">)</operator></expr>]</index></name><operator pos:start="33:48" pos:end="33:48">=</operator><literal type="number" pos:start="33:49" pos:end="33:49">1</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="35:25" pos:end="35:39"><expr pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:33">filterPos</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">i</name></expr>]</index></name><operator pos:start="35:37" pos:end="35:37">=</operator><name pos:start="35:38" pos:end="35:38">i</name></expr>;</expr_stmt>

		</block_content>}</block></for>



	</block_content>}</block></if>

	<if type="elseif" pos:start="43:9" pos:end="143:9">else if<condition pos:start="43:16" pos:end="43:64">(<expr pos:start="43:17" pos:end="43:63"><name pos:start="43:17" pos:end="43:20">xInc</name> <operator pos:start="43:22" pos:end="43:23">&lt;=</operator> <operator pos:start="43:25" pos:end="43:25">(</operator><literal type="number" pos:start="43:26" pos:end="43:26">1</literal><operator pos:start="43:27" pos:end="43:28">&lt;&lt;</operator><literal type="number" pos:start="43:29" pos:end="43:30">16</literal><operator pos:start="43:31" pos:end="43:31">)</operator> <operator pos:start="43:33" pos:end="43:34">||</operator> <name pos:start="43:36" pos:end="43:44">sws_flags</name><operator pos:start="43:45" pos:end="43:46">==</operator><name pos:start="43:47" pos:end="43:63">SWS_FAST_BILINEAR</name></expr>)</condition> <comment type="line" pos:start="43:66" pos:end="43:75">// upscale</comment>

	<block pos:start="45:9" pos:end="143:9">{<block_content pos:start="47:17" pos:end="141:17">

		<decl_stmt pos:start="47:17" pos:end="47:22"><decl pos:start="47:17" pos:end="47:21"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:21">i</name></decl>;</decl_stmt>

		<decl_stmt pos:start="49:17" pos:end="49:30"><decl pos:start="49:17" pos:end="49:29"><type pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">int</name></type> <name pos:start="49:21" pos:end="49:29">xDstInSrc</name></decl>;</decl_stmt>

		<if_stmt pos:start="51:17" pos:end="53:58"><if pos:start="51:17" pos:end="51:58">if<condition pos:start="51:19" pos:end="51:42">(<expr pos:start="51:20" pos:end="51:41"><name pos:start="51:20" pos:end="51:28">sws_flags</name><operator pos:start="51:29" pos:end="51:30">==</operator><name pos:start="51:31" pos:end="51:41">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="51:44" pos:end="51:58"><block_content pos:start="51:44" pos:end="51:58"> <expr_stmt pos:start="51:44" pos:end="51:58"><expr pos:start="51:44" pos:end="51:57"><operator pos:start="51:44" pos:end="51:44">*</operator><name pos:start="51:45" pos:end="51:54">filterSize</name><operator pos:start="51:55" pos:end="51:55">=</operator> <literal type="number" pos:start="51:57" pos:end="51:57">4</literal></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="53:17" pos:end="53:58">else<block type="pseudo" pos:start="53:44" pos:end="53:58"><block_content pos:start="53:44" pos:end="53:58">			   <expr_stmt pos:start="53:44" pos:end="53:58"><expr pos:start="53:44" pos:end="53:57"><operator pos:start="53:44" pos:end="53:44">*</operator><name pos:start="53:45" pos:end="53:54">filterSize</name><operator pos:start="53:55" pos:end="53:55">=</operator> <literal type="number" pos:start="53:57" pos:end="53:57">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<comment type="line" pos:start="55:1" pos:end="55:61">//		printf("%d %d %d\n", filterSize, srcW, dstW);</comment>

		<expr_stmt pos:start="57:17" pos:end="57:81"><expr pos:start="57:17" pos:end="57:80"><operator pos:start="57:17" pos:end="57:17">*</operator><name pos:start="57:18" pos:end="57:27">filterSize</name><operator pos:start="57:28" pos:end="57:28">=</operator> <operator pos:start="57:30" pos:end="57:30">(</operator><operator pos:start="57:31" pos:end="57:31">*</operator><name pos:start="57:32" pos:end="57:41">filterSize</name> <operator pos:start="57:43" pos:end="57:43">+</operator><operator pos:start="57:44" pos:end="57:44">(</operator><name pos:start="57:45" pos:end="57:55">filterAlign</name><operator pos:start="57:56" pos:end="57:56">-</operator><literal type="number" pos:start="57:57" pos:end="57:57">1</literal><operator pos:start="57:58" pos:end="57:58">)</operator><operator pos:start="57:59" pos:end="57:59">)</operator> <operator pos:start="57:61" pos:end="57:61">&amp;</operator> <operator pos:start="57:63" pos:end="57:63">(</operator><operator pos:start="57:64" pos:end="57:64">~</operator><operator pos:start="57:65" pos:end="57:65">(</operator><name pos:start="57:66" pos:end="57:76">filterAlign</name><operator pos:start="57:77" pos:end="57:77">-</operator><literal type="number" pos:start="57:78" pos:end="57:78">1</literal><operator pos:start="57:79" pos:end="57:79">)</operator><operator pos:start="57:80" pos:end="57:80">)</operator></expr>;</expr_stmt>



		<expr_stmt pos:start="61:17" pos:end="61:41"><expr pos:start="61:17" pos:end="61:40"><name pos:start="61:17" pos:end="61:25">xDstInSrc</name><operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:31">xInc</name> <operator pos:start="61:33" pos:end="61:33">-</operator> <literal type="number" pos:start="61:35" pos:end="61:40">0x8000</literal></expr>;</expr_stmt>

		<for pos:start="63:17" pos:end="141:17">for<control pos:start="63:20" pos:end="63:37">(<init pos:start="63:21" pos:end="63:24"><expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:21">i</name><operator pos:start="63:22" pos:end="63:22">=</operator><literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>;</init> <condition pos:start="63:26" pos:end="63:32"><expr pos:start="63:26" pos:end="63:31"><name pos:start="63:26" pos:end="63:26">i</name><operator pos:start="63:27" pos:end="63:27">&lt;</operator><name pos:start="63:28" pos:end="63:31">dstW</name></expr>;</condition> <incr pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><name pos:start="63:34" pos:end="63:34">i</name><operator pos:start="63:35" pos:end="63:36">++</operator></expr></incr>)</control>

		<block pos:start="65:17" pos:end="141:17">{<block_content pos:start="67:25" pos:end="139:41">

			<decl_stmt pos:start="67:25" pos:end="67:71"><decl pos:start="67:25" pos:end="67:70"><type pos:start="67:25" pos:end="67:27"><name pos:start="67:25" pos:end="67:27">int</name></type> <name pos:start="67:29" pos:end="67:30">xx</name><init pos:start="67:31" pos:end="67:70">= <expr pos:start="67:33" pos:end="67:70"><operator pos:start="67:33" pos:end="67:33">(</operator><name pos:start="67:34" pos:end="67:42">xDstInSrc</name><operator pos:start="67:43" pos:end="67:44">&gt;&gt;</operator><literal type="number" pos:start="67:45" pos:end="67:46">16</literal><operator pos:start="67:47" pos:end="67:47">)</operator> <operator pos:start="67:49" pos:end="67:49">-</operator> <operator pos:start="67:51" pos:end="67:51">(</operator><operator pos:start="67:52" pos:end="67:52">*</operator><name pos:start="67:53" pos:end="67:62">filterSize</name><operator pos:start="67:63" pos:end="67:64">&gt;&gt;</operator><literal type="number" pos:start="67:65" pos:end="67:65">1</literal><operator pos:start="67:66" pos:end="67:66">)</operator> <operator pos:start="67:68" pos:end="67:68">+</operator> <literal type="number" pos:start="67:70" pos:end="67:70">1</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="69:25" pos:end="69:30"><decl pos:start="69:25" pos:end="69:29"><type pos:start="69:25" pos:end="69:27"><name pos:start="69:25" pos:end="69:27">int</name></type> <name pos:start="69:29" pos:end="69:29">j</name></decl>;</decl_stmt>



			<expr_stmt pos:start="73:25" pos:end="73:41"><expr pos:start="73:25" pos:end="73:40"><name pos:start="73:25" pos:end="73:36"><name pos:start="73:25" pos:end="73:33">filterPos</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">i</name></expr>]</index></name><operator pos:start="73:37" pos:end="73:37">=</operator> <name pos:start="73:39" pos:end="73:40">xx</name></expr>;</expr_stmt>

			<if_stmt pos:start="75:25" pos:end="137:25"><if pos:start="75:25" pos:end="111:25">if<condition pos:start="75:27" pos:end="75:52">(<expr pos:start="75:28" pos:end="75:51"><name pos:start="75:28" pos:end="75:36">sws_flags</name> <operator pos:start="75:38" pos:end="75:39">==</operator> <name pos:start="75:41" pos:end="75:51">SWS_BICUBIC</name></expr>)</condition>

			<block pos:start="77:25" pos:end="111:25">{<block_content pos:start="79:33" pos:end="107:64">

				<decl_stmt pos:start="79:33" pos:end="79:88"><decl pos:start="79:33" pos:end="79:87"><type pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:38">double</name></type> <name pos:start="79:40" pos:end="79:40">d</name><init pos:start="79:41" pos:end="79:87">= <expr pos:start="79:43" pos:end="79:87"><call pos:start="79:43" pos:end="79:71"><name pos:start="79:43" pos:end="79:45">ABS</name><argument_list pos:start="79:46" pos:end="79:71">(<argument pos:start="79:47" pos:end="79:70"><expr pos:start="79:47" pos:end="79:70"><operator pos:start="79:47" pos:end="79:47">(</operator><operator pos:start="79:48" pos:end="79:48">(</operator><name pos:start="79:49" pos:end="79:50">xx</name><operator pos:start="79:51" pos:end="79:51">+</operator><literal type="number" pos:start="79:52" pos:end="79:52">1</literal><operator pos:start="79:53" pos:end="79:53">)</operator><operator pos:start="79:54" pos:end="79:55">&lt;&lt;</operator><literal type="number" pos:start="79:56" pos:end="79:57">16</literal><operator pos:start="79:58" pos:end="79:58">)</operator> <operator pos:start="79:60" pos:end="79:60">-</operator> <name pos:start="79:62" pos:end="79:70">xDstInSrc</name></expr></argument>)</argument_list></call><operator pos:start="79:72" pos:end="79:72">/</operator><operator pos:start="79:73" pos:end="79:73">(</operator><name pos:start="79:74" pos:end="79:79">double</name><operator pos:start="79:80" pos:end="79:80">)</operator><operator pos:start="79:81" pos:end="79:81">(</operator><literal type="number" pos:start="79:82" pos:end="79:82">1</literal><operator pos:start="79:83" pos:end="79:84">&lt;&lt;</operator><literal type="number" pos:start="79:85" pos:end="79:86">16</literal><operator pos:start="79:87" pos:end="79:87">)</operator></expr></init></decl>;</decl_stmt>

<comment type="line" pos:start="81:1" pos:end="81:42">//				int coeff;</comment>

				<decl_stmt pos:start="83:33" pos:end="83:48"><decl pos:start="83:33" pos:end="83:38"><type pos:start="83:33" pos:end="83:35"><name pos:start="83:33" pos:end="83:35">int</name></type> <name pos:start="83:37" pos:end="83:38">y1</name></decl>,<decl pos:start="83:40" pos:end="83:41"><type ref="prev" pos:start="83:33" pos:end="83:35"/><name pos:start="83:40" pos:end="83:41">y2</name></decl>,<decl pos:start="83:43" pos:end="83:44"><type ref="prev" pos:start="83:33" pos:end="83:35"/><name pos:start="83:43" pos:end="83:44">y3</name></decl>,<decl pos:start="83:46" pos:end="83:47"><type ref="prev" pos:start="83:33" pos:end="83:35"/><name pos:start="83:46" pos:end="83:47">y4</name></decl>;</decl_stmt>

				<decl_stmt pos:start="85:33" pos:end="85:48"><decl pos:start="85:33" pos:end="85:47"><type pos:start="85:33" pos:end="85:38"><name pos:start="85:33" pos:end="85:38">double</name></type> <name pos:start="85:40" pos:end="85:40">A</name><init pos:start="85:41" pos:end="85:47">= <expr pos:start="85:43" pos:end="85:47"><operator pos:start="85:43" pos:end="85:43">-</operator><literal type="number" pos:start="85:44" pos:end="85:47">0.75</literal></expr></init></decl>;</decl_stmt>

					<comment type="line" pos:start="87:41" pos:end="87:70">// Equation is from VirtualDub</comment>

		<expr_stmt pos:start="89:17" pos:end="89:103"><expr pos:start="89:17" pos:end="89:102"><name pos:start="89:17" pos:end="89:18">y1</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <operator pos:start="89:22" pos:end="89:22">(</operator><name pos:start="89:23" pos:end="89:25">int</name><operator pos:start="89:26" pos:end="89:26">)</operator><call pos:start="89:27" pos:end="89:102"><name pos:start="89:27" pos:end="89:31">floor</name><argument_list pos:start="89:32" pos:end="89:102">(<argument pos:start="89:33" pos:end="89:101"><expr pos:start="89:33" pos:end="89:101"><literal type="number" pos:start="89:33" pos:end="89:37">0.5</literal> <operator pos:start="89:37" pos:end="89:37">+</operator> <operator pos:start="89:39" pos:end="89:39">(</operator>        <operator pos:start="89:48" pos:end="89:48">+</operator>     <name pos:start="89:54" pos:end="89:54">A</name><operator pos:start="89:55" pos:end="89:55">*</operator><name pos:start="89:56" pos:end="89:56">d</name> <operator pos:start="89:58" pos:end="89:58">-</operator>       <literal type="number" pos:start="89:66" pos:end="89:68">2.0</literal><operator pos:start="89:69" pos:end="89:69">*</operator><name pos:start="89:70" pos:end="89:70">A</name><operator pos:start="89:71" pos:end="89:71">*</operator><name pos:start="89:72" pos:end="89:72">d</name><operator pos:start="89:73" pos:end="89:73">*</operator><name pos:start="89:74" pos:end="89:74">d</name> <operator pos:start="89:76" pos:end="89:76">+</operator>       <name pos:start="89:84" pos:end="89:84">A</name><operator pos:start="89:85" pos:end="89:85">*</operator><name pos:start="89:86" pos:end="89:86">d</name><operator pos:start="89:87" pos:end="89:87">*</operator><name pos:start="89:88" pos:end="89:88">d</name><operator pos:start="89:89" pos:end="89:89">*</operator><name pos:start="89:90" pos:end="89:90">d</name><operator pos:start="89:91" pos:end="89:91">)</operator> <operator pos:start="89:93" pos:end="89:93">*</operator> <literal type="number" pos:start="89:95" pos:end="89:101">16384.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="91:17" pos:end="91:103"><expr pos:start="91:17" pos:end="91:102"><name pos:start="91:17" pos:end="91:18">y2</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <operator pos:start="91:22" pos:end="91:22">(</operator><name pos:start="91:23" pos:end="91:25">int</name><operator pos:start="91:26" pos:end="91:26">)</operator><call pos:start="91:27" pos:end="91:102"><name pos:start="91:27" pos:end="91:31">floor</name><argument_list pos:start="91:32" pos:end="91:102">(<argument pos:start="91:33" pos:end="91:101"><expr pos:start="91:33" pos:end="91:101"><literal type="number" pos:start="91:33" pos:end="91:37">0.5</literal> <operator pos:start="91:37" pos:end="91:37">+</operator> <operator pos:start="91:39" pos:end="91:39">(</operator><operator pos:start="91:40" pos:end="91:40">+</operator> <literal type="number" pos:start="91:42" pos:end="91:58">1.0</literal>             <operator pos:start="91:58" pos:end="91:58">-</operator>     <operator pos:start="91:64" pos:end="91:64">(</operator><name pos:start="91:65" pos:end="91:65">A</name><operator pos:start="91:66" pos:end="91:66">+</operator><literal type="number" pos:start="91:67" pos:end="91:69">3.0</literal><operator pos:start="91:70" pos:end="91:70">)</operator><operator pos:start="91:71" pos:end="91:71">*</operator><name pos:start="91:72" pos:end="91:72">d</name><operator pos:start="91:73" pos:end="91:73">*</operator><name pos:start="91:74" pos:end="91:74">d</name> <operator pos:start="91:76" pos:end="91:76">+</operator> <operator pos:start="91:78" pos:end="91:78">(</operator><name pos:start="91:79" pos:end="91:79">A</name><operator pos:start="91:80" pos:end="91:80">+</operator><literal type="number" pos:start="91:81" pos:end="91:83">2.0</literal><operator pos:start="91:84" pos:end="91:84">)</operator><operator pos:start="91:85" pos:end="91:85">*</operator><name pos:start="91:86" pos:end="91:86">d</name><operator pos:start="91:87" pos:end="91:87">*</operator><name pos:start="91:88" pos:end="91:88">d</name><operator pos:start="91:89" pos:end="91:89">*</operator><name pos:start="91:90" pos:end="91:90">d</name><operator pos:start="91:91" pos:end="91:91">)</operator> <operator pos:start="91:93" pos:end="91:93">*</operator> <literal type="number" pos:start="91:95" pos:end="91:101">16384.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="93:17" pos:end="93:103"><expr pos:start="93:17" pos:end="93:102"><name pos:start="93:17" pos:end="93:18">y3</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <operator pos:start="93:22" pos:end="93:22">(</operator><name pos:start="93:23" pos:end="93:25">int</name><operator pos:start="93:26" pos:end="93:26">)</operator><call pos:start="93:27" pos:end="93:102"><name pos:start="93:27" pos:end="93:31">floor</name><argument_list pos:start="93:32" pos:end="93:102">(<argument pos:start="93:33" pos:end="93:101"><expr pos:start="93:33" pos:end="93:101"><literal type="number" pos:start="93:33" pos:end="93:37">0.5</literal> <operator pos:start="93:37" pos:end="93:37">+</operator> <operator pos:start="93:39" pos:end="93:39">(</operator>        <operator pos:start="93:48" pos:end="93:48">-</operator>     <name pos:start="93:54" pos:end="93:54">A</name><operator pos:start="93:55" pos:end="93:55">*</operator><name pos:start="93:56" pos:end="93:56">d</name> <operator pos:start="93:58" pos:end="93:58">+</operator> <operator pos:start="93:60" pos:end="93:60">(</operator><literal type="number" pos:start="93:61" pos:end="93:63">2.0</literal><operator pos:start="93:64" pos:end="93:64">*</operator><name pos:start="93:65" pos:end="93:65">A</name><operator pos:start="93:66" pos:end="93:66">+</operator><literal type="number" pos:start="93:67" pos:end="93:69">3.0</literal><operator pos:start="93:70" pos:end="93:70">)</operator><operator pos:start="93:71" pos:end="93:71">*</operator><name pos:start="93:72" pos:end="93:72">d</name><operator pos:start="93:73" pos:end="93:73">*</operator><name pos:start="93:74" pos:end="93:74">d</name> <operator pos:start="93:76" pos:end="93:76">-</operator> <operator pos:start="93:78" pos:end="93:78">(</operator><name pos:start="93:79" pos:end="93:79">A</name><operator pos:start="93:80" pos:end="93:80">+</operator><literal type="number" pos:start="93:81" pos:end="93:83">2.0</literal><operator pos:start="93:84" pos:end="93:84">)</operator><operator pos:start="93:85" pos:end="93:85">*</operator><name pos:start="93:86" pos:end="93:86">d</name><operator pos:start="93:87" pos:end="93:87">*</operator><name pos:start="93:88" pos:end="93:88">d</name><operator pos:start="93:89" pos:end="93:89">*</operator><name pos:start="93:90" pos:end="93:90">d</name><operator pos:start="93:91" pos:end="93:91">)</operator> <operator pos:start="93:93" pos:end="93:93">*</operator> <literal type="number" pos:start="93:95" pos:end="93:101">16384.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="95:17" pos:end="95:103"><expr pos:start="95:17" pos:end="95:102"><name pos:start="95:17" pos:end="95:18">y4</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:25">int</name><operator pos:start="95:26" pos:end="95:26">)</operator><call pos:start="95:27" pos:end="95:102"><name pos:start="95:27" pos:end="95:31">floor</name><argument_list pos:start="95:32" pos:end="95:102">(<argument pos:start="95:33" pos:end="95:101"><expr pos:start="95:33" pos:end="95:101"><literal type="number" pos:start="95:33" pos:end="95:37">0.5</literal> <operator pos:start="95:37" pos:end="95:37">+</operator> <operator pos:start="95:39" pos:end="95:39">(</operator>                  <operator pos:start="95:58" pos:end="95:58">+</operator>           <name pos:start="95:70" pos:end="95:70">A</name><operator pos:start="95:71" pos:end="95:71">*</operator><name pos:start="95:72" pos:end="95:72">d</name><operator pos:start="95:73" pos:end="95:73">*</operator><name pos:start="95:74" pos:end="95:74">d</name> <operator pos:start="95:76" pos:end="95:76">-</operator>       <name pos:start="95:84" pos:end="95:84">A</name><operator pos:start="95:85" pos:end="95:85">*</operator><name pos:start="95:86" pos:end="95:86">d</name><operator pos:start="95:87" pos:end="95:87">*</operator><name pos:start="95:88" pos:end="95:88">d</name><operator pos:start="95:89" pos:end="95:89">*</operator><name pos:start="95:90" pos:end="95:90">d</name><operator pos:start="95:91" pos:end="95:91">)</operator> <operator pos:start="95:93" pos:end="95:93">*</operator> <literal type="number" pos:start="95:95" pos:end="95:101">16384.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="99:1" pos:end="99:80">//				printf("%d %d %d \n", coeff, (int)d, xDstInSrc);</comment>

				<expr_stmt pos:start="101:33" pos:end="101:64"><expr pos:start="101:33" pos:end="101:63"><name pos:start="101:33" pos:end="101:59"><name pos:start="101:33" pos:end="101:38">filter</name><index pos:start="101:39" pos:end="101:59">[<expr pos:start="101:40" pos:end="101:58"><name pos:start="101:40" pos:end="101:40">i</name><operator pos:start="101:41" pos:end="101:41">*</operator><operator pos:start="101:42" pos:end="101:42">(</operator><operator pos:start="101:43" pos:end="101:43">*</operator><name pos:start="101:44" pos:end="101:53">filterSize</name><operator pos:start="101:54" pos:end="101:54">)</operator> <operator pos:start="101:56" pos:end="101:56">+</operator> <literal type="number" pos:start="101:58" pos:end="101:58">0</literal></expr>]</index></name><operator pos:start="101:60" pos:end="101:60">=</operator> <name pos:start="101:62" pos:end="101:63">y1</name></expr>;</expr_stmt>

				<expr_stmt pos:start="103:33" pos:end="103:64"><expr pos:start="103:33" pos:end="103:63"><name pos:start="103:33" pos:end="103:59"><name pos:start="103:33" pos:end="103:38">filter</name><index pos:start="103:39" pos:end="103:59">[<expr pos:start="103:40" pos:end="103:58"><name pos:start="103:40" pos:end="103:40">i</name><operator pos:start="103:41" pos:end="103:41">*</operator><operator pos:start="103:42" pos:end="103:42">(</operator><operator pos:start="103:43" pos:end="103:43">*</operator><name pos:start="103:44" pos:end="103:53">filterSize</name><operator pos:start="103:54" pos:end="103:54">)</operator> <operator pos:start="103:56" pos:end="103:56">+</operator> <literal type="number" pos:start="103:58" pos:end="103:58">1</literal></expr>]</index></name><operator pos:start="103:60" pos:end="103:60">=</operator> <name pos:start="103:62" pos:end="103:63">y2</name></expr>;</expr_stmt>

				<expr_stmt pos:start="105:33" pos:end="105:64"><expr pos:start="105:33" pos:end="105:63"><name pos:start="105:33" pos:end="105:59"><name pos:start="105:33" pos:end="105:38">filter</name><index pos:start="105:39" pos:end="105:59">[<expr pos:start="105:40" pos:end="105:58"><name pos:start="105:40" pos:end="105:40">i</name><operator pos:start="105:41" pos:end="105:41">*</operator><operator pos:start="105:42" pos:end="105:42">(</operator><operator pos:start="105:43" pos:end="105:43">*</operator><name pos:start="105:44" pos:end="105:53">filterSize</name><operator pos:start="105:54" pos:end="105:54">)</operator> <operator pos:start="105:56" pos:end="105:56">+</operator> <literal type="number" pos:start="105:58" pos:end="105:58">2</literal></expr>]</index></name><operator pos:start="105:60" pos:end="105:60">=</operator> <name pos:start="105:62" pos:end="105:63">y3</name></expr>;</expr_stmt>

				<expr_stmt pos:start="107:33" pos:end="107:64"><expr pos:start="107:33" pos:end="107:63"><name pos:start="107:33" pos:end="107:59"><name pos:start="107:33" pos:end="107:38">filter</name><index pos:start="107:39" pos:end="107:59">[<expr pos:start="107:40" pos:end="107:58"><name pos:start="107:40" pos:end="107:40">i</name><operator pos:start="107:41" pos:end="107:41">*</operator><operator pos:start="107:42" pos:end="107:42">(</operator><operator pos:start="107:43" pos:end="107:43">*</operator><name pos:start="107:44" pos:end="107:53">filterSize</name><operator pos:start="107:54" pos:end="107:54">)</operator> <operator pos:start="107:56" pos:end="107:56">+</operator> <literal type="number" pos:start="107:58" pos:end="107:58">3</literal></expr>]</index></name><operator pos:start="107:60" pos:end="107:60">=</operator> <name pos:start="107:62" pos:end="107:63">y4</name></expr>;</expr_stmt>

<comment type="line" pos:start="109:1" pos:end="109:84">//				printf("%1.3f %d, %d, %d, %d\n",d , y1, y2, y3, y4);</comment>

			</block_content>}</block></if>

			<else pos:start="113:25" pos:end="137:25">else

			<block pos:start="115:25" pos:end="137:25">{<block_content pos:start="117:33" pos:end="135:33">

				<for pos:start="117:33" pos:end="135:33">for<control pos:start="117:36" pos:end="117:60">(<init pos:start="117:37" pos:end="117:40"><expr pos:start="117:37" pos:end="117:39"><name pos:start="117:37" pos:end="117:37">j</name><operator pos:start="117:38" pos:end="117:38">=</operator><literal type="number" pos:start="117:39" pos:end="117:39">0</literal></expr>;</init> <condition pos:start="117:42" pos:end="117:55"><expr pos:start="117:42" pos:end="117:54"><name pos:start="117:42" pos:end="117:42">j</name><operator pos:start="117:43" pos:end="117:43">&lt;</operator><operator pos:start="117:44" pos:end="117:44">*</operator><name pos:start="117:45" pos:end="117:54">filterSize</name></expr>;</condition> <incr pos:start="117:57" pos:end="117:59"><expr pos:start="117:57" pos:end="117:59"><name pos:start="117:57" pos:end="117:57">j</name><operator pos:start="117:58" pos:end="117:59">++</operator></expr></incr>)</control>

				<block pos:start="119:33" pos:end="135:33">{<block_content pos:start="121:41" pos:end="133:45">

					<decl_stmt pos:start="121:41" pos:end="121:92"><decl pos:start="121:41" pos:end="121:91"><type pos:start="121:41" pos:end="121:46"><name pos:start="121:41" pos:end="121:46">double</name></type> <name pos:start="121:48" pos:end="121:48">d</name><init pos:start="121:49" pos:end="121:91">= <expr pos:start="121:51" pos:end="121:91"><call pos:start="121:51" pos:end="121:75"><name pos:start="121:51" pos:end="121:53">ABS</name><argument_list pos:start="121:54" pos:end="121:75">(<argument pos:start="121:55" pos:end="121:74"><expr pos:start="121:55" pos:end="121:74"><operator pos:start="121:55" pos:end="121:55">(</operator><name pos:start="121:56" pos:end="121:57">xx</name><operator pos:start="121:58" pos:end="121:59">&lt;&lt;</operator><literal type="number" pos:start="121:60" pos:end="121:61">16</literal><operator pos:start="121:62" pos:end="121:62">)</operator> <operator pos:start="121:64" pos:end="121:64">-</operator> <name pos:start="121:66" pos:end="121:74">xDstInSrc</name></expr></argument>)</argument_list></call><operator pos:start="121:76" pos:end="121:76">/</operator><operator pos:start="121:77" pos:end="121:77">(</operator><name pos:start="121:78" pos:end="121:83">double</name><operator pos:start="121:84" pos:end="121:84">)</operator><operator pos:start="121:85" pos:end="121:85">(</operator><literal type="number" pos:start="121:86" pos:end="121:86">1</literal><operator pos:start="121:87" pos:end="121:88">&lt;&lt;</operator><literal type="number" pos:start="121:89" pos:end="121:90">16</literal><operator pos:start="121:91" pos:end="121:91">)</operator></expr></init></decl>;</decl_stmt>

					<decl_stmt pos:start="123:41" pos:end="123:50"><decl pos:start="123:41" pos:end="123:49"><type pos:start="123:41" pos:end="123:43"><name pos:start="123:41" pos:end="123:43">int</name></type> <name pos:start="123:45" pos:end="123:49">coeff</name></decl>;</decl_stmt>

					<expr_stmt pos:start="125:41" pos:end="125:78"><expr pos:start="125:41" pos:end="125:77"><name pos:start="125:41" pos:end="125:45">coeff</name><operator pos:start="125:46" pos:end="125:46">=</operator> <operator pos:start="125:48" pos:end="125:48">(</operator><name pos:start="125:49" pos:end="125:51">int</name><operator pos:start="125:52" pos:end="125:52">)</operator><operator pos:start="125:53" pos:end="125:53">(</operator><literal type="number" pos:start="125:54" pos:end="125:58">0.5</literal> <operator pos:start="125:58" pos:end="125:58">+</operator> <operator pos:start="125:60" pos:end="125:60">(</operator><literal type="number" pos:start="125:61" pos:end="125:65">1.0</literal> <operator pos:start="125:65" pos:end="125:65">-</operator> <name pos:start="125:67" pos:end="125:67">d</name><operator pos:start="125:68" pos:end="125:68">)</operator><operator pos:start="125:69" pos:end="125:69">*</operator><operator pos:start="125:70" pos:end="125:70">(</operator><literal type="number" pos:start="125:71" pos:end="125:71">1</literal><operator pos:start="125:72" pos:end="125:73">&lt;&lt;</operator><literal type="number" pos:start="125:74" pos:end="125:75">14</literal><operator pos:start="125:76" pos:end="125:76">)</operator><operator pos:start="125:77" pos:end="125:77">)</operator></expr>;</expr_stmt>

					<if_stmt pos:start="127:41" pos:end="127:60"><if pos:start="127:41" pos:end="127:60">if<condition pos:start="127:43" pos:end="127:51">(<expr pos:start="127:44" pos:end="127:50"><name pos:start="127:44" pos:end="127:48">coeff</name><operator pos:start="127:49" pos:end="127:49">&lt;</operator><literal type="number" pos:start="127:50" pos:end="127:50">0</literal></expr>)</condition><block type="pseudo" pos:start="127:53" pos:end="127:60"><block_content pos:start="127:53" pos:end="127:60"> <expr_stmt pos:start="127:53" pos:end="127:60"><expr pos:start="127:53" pos:end="127:59"><name pos:start="127:53" pos:end="127:57">coeff</name><operator pos:start="127:58" pos:end="127:58">=</operator><literal type="number" pos:start="127:59" pos:end="127:59">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="line" pos:start="129:9" pos:end="129:88">//				printf("%d %d %d \n", coeff, (int)d, xDstInSrc);</comment>

					<expr_stmt pos:start="131:41" pos:end="131:75"><expr pos:start="131:41" pos:end="131:74"><name pos:start="131:41" pos:end="131:67"><name pos:start="131:41" pos:end="131:46">filter</name><index pos:start="131:47" pos:end="131:67">[<expr pos:start="131:48" pos:end="131:66"><name pos:start="131:48" pos:end="131:48">i</name><operator pos:start="131:49" pos:end="131:49">*</operator><operator pos:start="131:50" pos:end="131:50">(</operator><operator pos:start="131:51" pos:end="131:51">*</operator><name pos:start="131:52" pos:end="131:61">filterSize</name><operator pos:start="131:62" pos:end="131:62">)</operator> <operator pos:start="131:64" pos:end="131:64">+</operator> <name pos:start="131:66" pos:end="131:66">j</name></expr>]</index></name><operator pos:start="131:68" pos:end="131:68">=</operator> <name pos:start="131:70" pos:end="131:74">coeff</name></expr>;</expr_stmt>

					<expr_stmt pos:start="133:41" pos:end="133:45"><expr pos:start="133:41" pos:end="133:44"><name pos:start="133:41" pos:end="133:42">xx</name><operator pos:start="133:43" pos:end="133:44">++</operator></expr>;</expr_stmt>

				</block_content>}</block></for>

			</block_content>}</block></else></if_stmt>

			<expr_stmt pos:start="139:25" pos:end="139:41"><expr pos:start="139:25" pos:end="139:40"><name pos:start="139:25" pos:end="139:33">xDstInSrc</name><operator pos:start="139:34" pos:end="139:35">+=</operator> <name pos:start="139:37" pos:end="139:40">xInc</name></expr>;</expr_stmt>

		</block_content>}</block></for>

	</block_content>}</block></if>

	<else pos:start="145:9" pos:end="233:9">else <comment type="line" pos:start="145:14" pos:end="145:25">// downscale</comment>

	<block pos:start="147:9" pos:end="233:9">{<block_content pos:start="149:17" pos:end="231:17">

		<decl_stmt pos:start="149:17" pos:end="149:30"><decl pos:start="149:17" pos:end="149:29"><type pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">int</name></type> <name pos:start="149:21" pos:end="149:29">xDstInSrc</name></decl>;</decl_stmt>

		<if_stmt pos:start="151:17" pos:end="153:95"><if pos:start="151:17" pos:end="151:95">if<condition pos:start="151:19" pos:end="151:42">(<expr pos:start="151:20" pos:end="151:41"><name pos:start="151:20" pos:end="151:28">sws_flags</name><operator pos:start="151:29" pos:end="151:30">==</operator><name pos:start="151:31" pos:end="151:41">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="151:44" pos:end="151:95"><block_content pos:start="151:44" pos:end="151:95"> <expr_stmt pos:start="151:44" pos:end="151:95"><expr pos:start="151:44" pos:end="151:94"><operator pos:start="151:44" pos:end="151:44">*</operator><name pos:start="151:45" pos:end="151:54">filterSize</name><operator pos:start="151:55" pos:end="151:55">=</operator> <operator pos:start="151:57" pos:end="151:57">(</operator><name pos:start="151:58" pos:end="151:60">int</name><operator pos:start="151:61" pos:end="151:61">)</operator><call pos:start="151:62" pos:end="151:94"><name pos:start="151:62" pos:end="151:65">ceil</name><argument_list pos:start="151:66" pos:end="151:94">(<argument pos:start="151:67" pos:end="151:93"><expr pos:start="151:67" pos:end="151:93"><literal type="number" pos:start="151:67" pos:end="151:69">1</literal> <operator pos:start="151:69" pos:end="151:69">+</operator> <literal type="number" pos:start="151:71" pos:end="151:73">4.0</literal><operator pos:start="151:74" pos:end="151:74">*</operator><name pos:start="151:75" pos:end="151:78">srcW</name> <operator pos:start="151:80" pos:end="151:80">/</operator> <operator pos:start="151:82" pos:end="151:82">(</operator><name pos:start="151:83" pos:end="151:88">double</name><operator pos:start="151:89" pos:end="151:89">)</operator><name pos:start="151:90" pos:end="151:93">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="153:17" pos:end="153:95">else<block type="pseudo" pos:start="153:44" pos:end="153:95"><block_content pos:start="153:44" pos:end="153:95">			   <expr_stmt pos:start="153:44" pos:end="153:95"><expr pos:start="153:44" pos:end="153:94"><operator pos:start="153:44" pos:end="153:44">*</operator><name pos:start="153:45" pos:end="153:54">filterSize</name><operator pos:start="153:55" pos:end="153:55">=</operator> <operator pos:start="153:57" pos:end="153:57">(</operator><name pos:start="153:58" pos:end="153:60">int</name><operator pos:start="153:61" pos:end="153:61">)</operator><call pos:start="153:62" pos:end="153:94"><name pos:start="153:62" pos:end="153:65">ceil</name><argument_list pos:start="153:66" pos:end="153:94">(<argument pos:start="153:67" pos:end="153:93"><expr pos:start="153:67" pos:end="153:93"><literal type="number" pos:start="153:67" pos:end="153:69">1</literal> <operator pos:start="153:69" pos:end="153:69">+</operator> <literal type="number" pos:start="153:71" pos:end="153:73">2.0</literal><operator pos:start="153:74" pos:end="153:74">*</operator><name pos:start="153:75" pos:end="153:78">srcW</name> <operator pos:start="153:80" pos:end="153:80">/</operator> <operator pos:start="153:82" pos:end="153:82">(</operator><name pos:start="153:83" pos:end="153:88">double</name><operator pos:start="153:89" pos:end="153:89">)</operator><name pos:start="153:90" pos:end="153:93">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<comment type="line" pos:start="155:1" pos:end="155:62">//		printf("%d %d %d\n", *filterSize, srcW, dstW);</comment>

		<expr_stmt pos:start="157:17" pos:end="157:81"><expr pos:start="157:17" pos:end="157:80"><operator pos:start="157:17" pos:end="157:17">*</operator><name pos:start="157:18" pos:end="157:27">filterSize</name><operator pos:start="157:28" pos:end="157:28">=</operator> <operator pos:start="157:30" pos:end="157:30">(</operator><operator pos:start="157:31" pos:end="157:31">*</operator><name pos:start="157:32" pos:end="157:41">filterSize</name> <operator pos:start="157:43" pos:end="157:43">+</operator><operator pos:start="157:44" pos:end="157:44">(</operator><name pos:start="157:45" pos:end="157:55">filterAlign</name><operator pos:start="157:56" pos:end="157:56">-</operator><literal type="number" pos:start="157:57" pos:end="157:57">1</literal><operator pos:start="157:58" pos:end="157:58">)</operator><operator pos:start="157:59" pos:end="157:59">)</operator> <operator pos:start="157:61" pos:end="157:61">&amp;</operator> <operator pos:start="157:63" pos:end="157:63">(</operator><operator pos:start="157:64" pos:end="157:64">~</operator><operator pos:start="157:65" pos:end="157:65">(</operator><name pos:start="157:66" pos:end="157:76">filterAlign</name><operator pos:start="157:77" pos:end="157:77">-</operator><literal type="number" pos:start="157:78" pos:end="157:78">1</literal><operator pos:start="157:79" pos:end="157:79">)</operator><operator pos:start="157:80" pos:end="157:80">)</operator></expr>;</expr_stmt>



		<expr_stmt pos:start="161:17" pos:end="161:41"><expr pos:start="161:17" pos:end="161:40"><name pos:start="161:17" pos:end="161:25">xDstInSrc</name><operator pos:start="161:26" pos:end="161:26">=</operator> <name pos:start="161:28" pos:end="161:31">xInc</name> <operator pos:start="161:33" pos:end="161:33">-</operator> <literal type="number" pos:start="161:35" pos:end="161:40">0x8000</literal></expr>;</expr_stmt>

		<for pos:start="163:17" pos:end="231:17">for<control pos:start="163:20" pos:end="163:37">(<init pos:start="163:21" pos:end="163:24"><expr pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:21">i</name><operator pos:start="163:22" pos:end="163:22">=</operator><literal type="number" pos:start="163:23" pos:end="163:23">0</literal></expr>;</init> <condition pos:start="163:26" pos:end="163:32"><expr pos:start="163:26" pos:end="163:31"><name pos:start="163:26" pos:end="163:26">i</name><operator pos:start="163:27" pos:end="163:27">&lt;</operator><name pos:start="163:28" pos:end="163:31">dstW</name></expr>;</condition> <incr pos:start="163:34" pos:end="163:36"><expr pos:start="163:34" pos:end="163:36"><name pos:start="163:34" pos:end="163:34">i</name><operator pos:start="163:35" pos:end="163:36">++</operator></expr></incr>)</control>

		<block pos:start="165:17" pos:end="231:17">{<block_content pos:start="167:25" pos:end="229:41">

			<decl_stmt pos:start="167:25" pos:end="167:97"><decl pos:start="167:25" pos:end="167:96"><type pos:start="167:25" pos:end="167:27"><name pos:start="167:25" pos:end="167:27">int</name></type> <name pos:start="167:29" pos:end="167:30">xx</name><init pos:start="167:31" pos:end="167:96">= <expr pos:start="167:33" pos:end="167:96"><operator pos:start="167:33" pos:end="167:33">(</operator><name pos:start="167:34" pos:end="167:36">int</name><operator pos:start="167:37" pos:end="167:37">)</operator><operator pos:start="167:38" pos:end="167:38">(</operator><operator pos:start="167:39" pos:end="167:39">(</operator><name pos:start="167:40" pos:end="167:45">double</name><operator pos:start="167:46" pos:end="167:46">)</operator><name pos:start="167:47" pos:end="167:55">xDstInSrc</name><operator pos:start="167:56" pos:end="167:56">/</operator><operator pos:start="167:57" pos:end="167:57">(</operator><name pos:start="167:58" pos:end="167:63">double</name><operator pos:start="167:64" pos:end="167:64">)</operator><operator pos:start="167:65" pos:end="167:65">(</operator><literal type="number" pos:start="167:66" pos:end="167:66">1</literal><operator pos:start="167:67" pos:end="167:68">&lt;&lt;</operator><literal type="number" pos:start="167:69" pos:end="167:70">16</literal><operator pos:start="167:71" pos:end="167:71">)</operator> <operator pos:start="167:73" pos:end="167:73">-</operator> <operator pos:start="167:75" pos:end="167:75">*</operator><name pos:start="167:76" pos:end="167:85">filterSize</name><operator pos:start="167:86" pos:end="167:86">*</operator><literal type="number" pos:start="167:87" pos:end="167:91">0.5</literal> <operator pos:start="167:91" pos:end="167:91">+</operator> <literal type="number" pos:start="167:93" pos:end="167:95">0.5</literal><operator pos:start="167:96" pos:end="167:96">)</operator></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="169:25" pos:end="169:30"><decl pos:start="169:25" pos:end="169:29"><type pos:start="169:25" pos:end="169:27"><name pos:start="169:25" pos:end="169:27">int</name></type> <name pos:start="169:29" pos:end="169:29">j</name></decl>;</decl_stmt>



			<expr_stmt pos:start="173:25" pos:end="173:41"><expr pos:start="173:25" pos:end="173:40"><name pos:start="173:25" pos:end="173:36"><name pos:start="173:25" pos:end="173:33">filterPos</name><index pos:start="173:34" pos:end="173:36">[<expr pos:start="173:35" pos:end="173:35"><name pos:start="173:35" pos:end="173:35">i</name></expr>]</index></name><operator pos:start="173:37" pos:end="173:37">=</operator> <name pos:start="173:39" pos:end="173:40">xx</name></expr>;</expr_stmt>

			<for pos:start="175:25" pos:end="227:25">for<control pos:start="175:28" pos:end="175:52">(<init pos:start="175:29" pos:end="175:32"><expr pos:start="175:29" pos:end="175:31"><name pos:start="175:29" pos:end="175:29">j</name><operator pos:start="175:30" pos:end="175:30">=</operator><literal type="number" pos:start="175:31" pos:end="175:31">0</literal></expr>;</init> <condition pos:start="175:34" pos:end="175:47"><expr pos:start="175:34" pos:end="175:46"><name pos:start="175:34" pos:end="175:34">j</name><operator pos:start="175:35" pos:end="175:35">&lt;</operator><operator pos:start="175:36" pos:end="175:36">*</operator><name pos:start="175:37" pos:end="175:46">filterSize</name></expr>;</condition> <incr pos:start="175:49" pos:end="175:51"><expr pos:start="175:49" pos:end="175:51"><name pos:start="175:49" pos:end="175:49">j</name><operator pos:start="175:50" pos:end="175:51">++</operator></expr></incr>)</control>

			<block pos:start="177:25" pos:end="227:25">{<block_content pos:start="179:33" pos:end="225:37">

				<decl_stmt pos:start="179:33" pos:end="179:81"><decl pos:start="179:33" pos:end="179:80"><type pos:start="179:33" pos:end="179:38"><name pos:start="179:33" pos:end="179:38">double</name></type> <name pos:start="179:40" pos:end="179:40">d</name><init pos:start="179:41" pos:end="179:80">= <expr pos:start="179:43" pos:end="179:80"><call pos:start="179:43" pos:end="179:67"><name pos:start="179:43" pos:end="179:45">ABS</name><argument_list pos:start="179:46" pos:end="179:67">(<argument pos:start="179:47" pos:end="179:66"><expr pos:start="179:47" pos:end="179:66"><operator pos:start="179:47" pos:end="179:47">(</operator><name pos:start="179:48" pos:end="179:49">xx</name><operator pos:start="179:50" pos:end="179:51">&lt;&lt;</operator><literal type="number" pos:start="179:52" pos:end="179:53">16</literal><operator pos:start="179:54" pos:end="179:54">)</operator> <operator pos:start="179:56" pos:end="179:56">-</operator> <name pos:start="179:58" pos:end="179:66">xDstInSrc</name></expr></argument>)</argument_list></call><operator pos:start="179:68" pos:end="179:68">/</operator><operator pos:start="179:69" pos:end="179:69">(</operator><name pos:start="179:70" pos:end="179:75">double</name><operator pos:start="179:76" pos:end="179:76">)</operator><name pos:start="179:77" pos:end="179:80">xInc</name></expr></init></decl>;</decl_stmt>

				<decl_stmt pos:start="181:33" pos:end="181:42"><decl pos:start="181:33" pos:end="181:41"><type pos:start="181:33" pos:end="181:35"><name pos:start="181:33" pos:end="181:35">int</name></type> <name pos:start="181:37" pos:end="181:41">coeff</name></decl>;</decl_stmt>

				<if_stmt pos:start="183:33" pos:end="219:33"><if pos:start="183:33" pos:end="209:33">if<condition pos:start="183:35" pos:end="183:60">(<expr pos:start="183:36" pos:end="183:59"><name pos:start="183:36" pos:end="183:44">sws_flags</name> <operator pos:start="183:46" pos:end="183:47">==</operator> <name pos:start="183:49" pos:end="183:59">SWS_BICUBIC</name></expr>)</condition>

				<block pos:start="185:33" pos:end="209:33">{<block_content pos:start="187:41" pos:end="207:56">

					<decl_stmt pos:start="187:41" pos:end="187:56"><decl pos:start="187:41" pos:end="187:55"><type pos:start="187:41" pos:end="187:46"><name pos:start="187:41" pos:end="187:46">double</name></type> <name pos:start="187:48" pos:end="187:48">A</name><init pos:start="187:49" pos:end="187:55">= <expr pos:start="187:51" pos:end="187:55"><operator pos:start="187:51" pos:end="187:51">-</operator><literal type="number" pos:start="187:52" pos:end="187:55">0.75</literal></expr></init></decl>;</decl_stmt>

<comment type="line" pos:start="189:1" pos:end="189:45">//					d*=2;</comment>

					<comment type="line" pos:start="191:41" pos:end="191:70">// Equation is from VirtualDub</comment>

					<if_stmt pos:start="193:41" pos:end="207:56"><if pos:start="193:41" pos:end="197:84">if<condition pos:start="193:43" pos:end="193:49">(<expr pos:start="193:44" pos:end="193:48"><name pos:start="193:44" pos:end="193:44">d</name><operator pos:start="193:45" pos:end="193:45">&lt;</operator><literal type="number" pos:start="193:46" pos:end="193:48">1.0</literal></expr>)</condition><block type="pseudo" pos:start="195:49" pos:end="197:84"><block_content pos:start="195:49" pos:end="197:84">

						<expr_stmt pos:start="195:49" pos:end="197:84"><expr pos:start="195:49" pos:end="197:83"><name pos:start="195:49" pos:end="195:53">coeff</name> <operator pos:start="195:55" pos:end="195:55">=</operator> <operator pos:start="195:57" pos:end="195:57">(</operator><name pos:start="195:58" pos:end="195:60">int</name><operator pos:start="195:61" pos:end="195:61">)</operator><call pos:start="195:62" pos:end="197:83"><name pos:start="195:62" pos:end="195:66">floor</name><argument_list pos:start="195:67" pos:end="197:83">(<argument pos:start="195:68" pos:end="197:82"><expr pos:start="195:68" pos:end="197:82"><literal type="number" pos:start="195:68" pos:end="195:72">0.5</literal> <operator pos:start="195:72" pos:end="195:72">+</operator> <operator pos:start="195:74" pos:end="195:74">(</operator><literal type="number" pos:start="195:75" pos:end="195:79">1.0</literal> <operator pos:start="195:79" pos:end="195:79">-</operator> <operator pos:start="195:81" pos:end="195:81">(</operator><name pos:start="195:82" pos:end="195:82">A</name><operator pos:start="195:83" pos:end="195:83">+</operator><literal type="number" pos:start="195:84" pos:end="195:86">3.0</literal><operator pos:start="195:87" pos:end="195:87">)</operator><operator pos:start="195:88" pos:end="195:88">*</operator><name pos:start="195:89" pos:end="195:89">d</name><operator pos:start="195:90" pos:end="195:90">*</operator><name pos:start="195:91" pos:end="195:91">d</name>

						        <operator pos:start="197:57" pos:end="197:57">+</operator> <operator pos:start="197:59" pos:end="197:59">(</operator><name pos:start="197:60" pos:end="197:60">A</name><operator pos:start="197:61" pos:end="197:61">+</operator><literal type="number" pos:start="197:62" pos:end="197:64">2.0</literal><operator pos:start="197:65" pos:end="197:65">)</operator><operator pos:start="197:66" pos:end="197:66">*</operator><name pos:start="197:67" pos:end="197:67">d</name><operator pos:start="197:68" pos:end="197:68">*</operator><name pos:start="197:69" pos:end="197:69">d</name><operator pos:start="197:70" pos:end="197:70">*</operator><name pos:start="197:71" pos:end="197:71">d</name><operator pos:start="197:72" pos:end="197:72">)</operator> <operator pos:start="197:74" pos:end="197:74">*</operator> <operator pos:start="197:76" pos:end="197:76">(</operator><literal type="number" pos:start="197:77" pos:end="197:77">1</literal><operator pos:start="197:78" pos:end="197:79">&lt;&lt;</operator><literal type="number" pos:start="197:80" pos:end="197:81">14</literal><operator pos:start="197:82" pos:end="197:82">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

					<if type="elseif" pos:start="199:41" pos:end="203:90">else if<condition pos:start="199:48" pos:end="199:54">(<expr pos:start="199:49" pos:end="199:53"><name pos:start="199:49" pos:end="199:49">d</name><operator pos:start="199:50" pos:end="199:50">&lt;</operator><literal type="number" pos:start="199:51" pos:end="199:53">2.0</literal></expr>)</condition><block type="pseudo" pos:start="201:49" pos:end="203:90"><block_content pos:start="201:49" pos:end="203:90">

						<expr_stmt pos:start="201:49" pos:end="203:90"><expr pos:start="201:49" pos:end="203:89"><name pos:start="201:49" pos:end="201:53">coeff</name> <operator pos:start="201:55" pos:end="201:55">=</operator> <operator pos:start="201:57" pos:end="201:57">(</operator><name pos:start="201:58" pos:end="201:60">int</name><operator pos:start="201:61" pos:end="201:61">)</operator><call pos:start="201:62" pos:end="203:89"><name pos:start="201:62" pos:end="201:66">floor</name><argument_list pos:start="201:67" pos:end="203:89">(<argument pos:start="201:68" pos:end="203:88"><expr pos:start="201:68" pos:end="203:88"><literal type="number" pos:start="201:68" pos:end="201:72">0.5</literal> <operator pos:start="201:72" pos:end="201:72">+</operator> <operator pos:start="201:74" pos:end="201:74">(</operator><operator pos:start="201:75" pos:end="201:75">-</operator><literal type="number" pos:start="201:76" pos:end="201:78">4.0</literal><operator pos:start="201:79" pos:end="201:79">*</operator><name pos:start="201:80" pos:end="201:80">A</name> <operator pos:start="201:82" pos:end="201:82">+</operator> <literal type="number" pos:start="201:84" pos:end="201:86">8.0</literal><operator pos:start="201:87" pos:end="201:87">*</operator><name pos:start="201:88" pos:end="201:88">A</name><operator pos:start="201:89" pos:end="201:89">*</operator><name pos:start="201:90" pos:end="201:90">d</name>

						        <operator pos:start="203:57" pos:end="203:57">-</operator> <literal type="number" pos:start="203:59" pos:end="203:61">5.0</literal><operator pos:start="203:62" pos:end="203:62">*</operator><name pos:start="203:63" pos:end="203:63">A</name><operator pos:start="203:64" pos:end="203:64">*</operator><name pos:start="203:65" pos:end="203:65">d</name><operator pos:start="203:66" pos:end="203:66">*</operator><name pos:start="203:67" pos:end="203:67">d</name> <operator pos:start="203:69" pos:end="203:69">+</operator> <name pos:start="203:71" pos:end="203:71">A</name><operator pos:start="203:72" pos:end="203:72">*</operator><name pos:start="203:73" pos:end="203:73">d</name><operator pos:start="203:74" pos:end="203:74">*</operator><name pos:start="203:75" pos:end="203:75">d</name><operator pos:start="203:76" pos:end="203:76">*</operator><name pos:start="203:77" pos:end="203:77">d</name><operator pos:start="203:78" pos:end="203:78">)</operator> <operator pos:start="203:80" pos:end="203:80">*</operator> <operator pos:start="203:82" pos:end="203:82">(</operator><literal type="number" pos:start="203:83" pos:end="203:83">1</literal><operator pos:start="203:84" pos:end="203:85">&lt;&lt;</operator><literal type="number" pos:start="203:86" pos:end="203:87">14</literal><operator pos:start="203:88" pos:end="203:88">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

					<else pos:start="205:41" pos:end="207:56">else<block type="pseudo" pos:start="207:49" pos:end="207:56"><block_content pos:start="207:49" pos:end="207:56">

						<expr_stmt pos:start="207:49" pos:end="207:56"><expr pos:start="207:49" pos:end="207:55"><name pos:start="207:49" pos:end="207:53">coeff</name><operator pos:start="207:54" pos:end="207:54">=</operator><literal type="number" pos:start="207:55" pos:end="207:55">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

				</block_content>}</block></if>

				<else pos:start="211:33" pos:end="219:33">else

				<block pos:start="213:33" pos:end="219:33">{<block_content pos:start="215:41" pos:end="217:60">

					<expr_stmt pos:start="215:41" pos:end="215:78"><expr pos:start="215:41" pos:end="215:77"><name pos:start="215:41" pos:end="215:45">coeff</name><operator pos:start="215:46" pos:end="215:46">=</operator> <operator pos:start="215:48" pos:end="215:48">(</operator><name pos:start="215:49" pos:end="215:51">int</name><operator pos:start="215:52" pos:end="215:52">)</operator><operator pos:start="215:53" pos:end="215:53">(</operator><literal type="number" pos:start="215:54" pos:end="215:58">0.5</literal> <operator pos:start="215:58" pos:end="215:58">+</operator> <operator pos:start="215:60" pos:end="215:60">(</operator><literal type="number" pos:start="215:61" pos:end="215:65">1.0</literal> <operator pos:start="215:65" pos:end="215:65">-</operator> <name pos:start="215:67" pos:end="215:67">d</name><operator pos:start="215:68" pos:end="215:68">)</operator><operator pos:start="215:69" pos:end="215:69">*</operator><operator pos:start="215:70" pos:end="215:70">(</operator><literal type="number" pos:start="215:71" pos:end="215:71">1</literal><operator pos:start="215:72" pos:end="215:73">&lt;&lt;</operator><literal type="number" pos:start="215:74" pos:end="215:75">14</literal><operator pos:start="215:76" pos:end="215:76">)</operator><operator pos:start="215:77" pos:end="215:77">)</operator></expr>;</expr_stmt>

					<if_stmt pos:start="217:41" pos:end="217:60"><if pos:start="217:41" pos:end="217:60">if<condition pos:start="217:43" pos:end="217:51">(<expr pos:start="217:44" pos:end="217:50"><name pos:start="217:44" pos:end="217:48">coeff</name><operator pos:start="217:49" pos:end="217:49">&lt;</operator><literal type="number" pos:start="217:50" pos:end="217:50">0</literal></expr>)</condition><block type="pseudo" pos:start="217:53" pos:end="217:60"><block_content pos:start="217:53" pos:end="217:60"> <expr_stmt pos:start="217:53" pos:end="217:60"><expr pos:start="217:53" pos:end="217:59"><name pos:start="217:53" pos:end="217:57">coeff</name><operator pos:start="217:58" pos:end="217:58">=</operator><literal type="number" pos:start="217:59" pos:end="217:59">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

				</block_content>}</block></else></if_stmt>

<comment type="line" pos:start="221:1" pos:end="221:99">//				if(filterAlign==1) printf("%d %d %d \n", coeff, (int)d, xDstInSrc);</comment>

				<expr_stmt pos:start="223:33" pos:end="223:67"><expr pos:start="223:33" pos:end="223:66"><name pos:start="223:33" pos:end="223:59"><name pos:start="223:33" pos:end="223:38">filter</name><index pos:start="223:39" pos:end="223:59">[<expr pos:start="223:40" pos:end="223:58"><name pos:start="223:40" pos:end="223:40">i</name><operator pos:start="223:41" pos:end="223:41">*</operator><operator pos:start="223:42" pos:end="223:42">(</operator><operator pos:start="223:43" pos:end="223:43">*</operator><name pos:start="223:44" pos:end="223:53">filterSize</name><operator pos:start="223:54" pos:end="223:54">)</operator> <operator pos:start="223:56" pos:end="223:56">+</operator> <name pos:start="223:58" pos:end="223:58">j</name></expr>]</index></name><operator pos:start="223:60" pos:end="223:60">=</operator> <name pos:start="223:62" pos:end="223:66">coeff</name></expr>;</expr_stmt>

				<expr_stmt pos:start="225:33" pos:end="225:37"><expr pos:start="225:33" pos:end="225:36"><name pos:start="225:33" pos:end="225:34">xx</name><operator pos:start="225:35" pos:end="225:36">++</operator></expr>;</expr_stmt>

			</block_content>}</block></for>

			<expr_stmt pos:start="229:25" pos:end="229:41"><expr pos:start="229:25" pos:end="229:40"><name pos:start="229:25" pos:end="229:33">xDstInSrc</name><operator pos:start="229:34" pos:end="229:35">+=</operator> <name pos:start="229:37" pos:end="229:40">xInc</name></expr>;</expr_stmt>

		</block_content>}</block></for>

	</block_content>}</block></else></if_stmt>



	<comment type="line" pos:start="237:9" pos:end="237:21">//fix borders</comment>

	<for pos:start="239:9" pos:end="293:9">for<control pos:start="239:12" pos:end="239:29">(<init pos:start="239:13" pos:end="239:16"><expr pos:start="239:13" pos:end="239:15"><name pos:start="239:13" pos:end="239:13">i</name><operator pos:start="239:14" pos:end="239:14">=</operator><literal type="number" pos:start="239:15" pos:end="239:15">0</literal></expr>;</init> <condition pos:start="239:18" pos:end="239:24"><expr pos:start="239:18" pos:end="239:23"><name pos:start="239:18" pos:end="239:18">i</name><operator pos:start="239:19" pos:end="239:19">&lt;</operator><name pos:start="239:20" pos:end="239:23">dstW</name></expr>;</condition> <incr pos:start="239:26" pos:end="239:28"><expr pos:start="239:26" pos:end="239:28"><name pos:start="239:26" pos:end="239:26">i</name><operator pos:start="239:27" pos:end="239:28">++</operator></expr></incr>)</control>

	<block pos:start="241:9" pos:end="293:9">{<block_content pos:start="243:17" pos:end="291:17">

		<decl_stmt pos:start="243:17" pos:end="243:22"><decl pos:start="243:17" pos:end="243:21"><type pos:start="243:17" pos:end="243:19"><name pos:start="243:17" pos:end="243:19">int</name></type> <name pos:start="243:21" pos:end="243:21">j</name></decl>;</decl_stmt>

		<if_stmt pos:start="245:17" pos:end="265:17"><if pos:start="245:17" pos:end="265:17">if<condition pos:start="245:19" pos:end="245:36">(<expr pos:start="245:20" pos:end="245:35"><name pos:start="245:20" pos:end="245:31"><name pos:start="245:20" pos:end="245:28">filterPos</name><index pos:start="245:29" pos:end="245:31">[<expr pos:start="245:30" pos:end="245:30"><name pos:start="245:30" pos:end="245:30">i</name></expr>]</index></name> <operator pos:start="245:33" pos:end="245:33">&lt;</operator> <literal type="number" pos:start="245:35" pos:end="245:35">0</literal></expr>)</condition>

		<block pos:start="247:17" pos:end="265:17">{<block_content pos:start="251:25" pos:end="263:40">

			<comment type="line" pos:start="249:25" pos:end="249:78">// Move filter coeffs left to compensate for filterPos</comment>

			<for pos:start="251:25" pos:end="261:25">for<control pos:start="251:28" pos:end="251:52">(<init pos:start="251:29" pos:end="251:32"><expr pos:start="251:29" pos:end="251:31"><name pos:start="251:29" pos:end="251:29">j</name><operator pos:start="251:30" pos:end="251:30">=</operator><literal type="number" pos:start="251:31" pos:end="251:31">1</literal></expr>;</init> <condition pos:start="251:34" pos:end="251:47"><expr pos:start="251:34" pos:end="251:46"><name pos:start="251:34" pos:end="251:34">j</name><operator pos:start="251:35" pos:end="251:35">&lt;</operator><operator pos:start="251:36" pos:end="251:36">*</operator><name pos:start="251:37" pos:end="251:46">filterSize</name></expr>;</condition> <incr pos:start="251:49" pos:end="251:51"><expr pos:start="251:49" pos:end="251:51"><name pos:start="251:49" pos:end="251:49">j</name><operator pos:start="251:50" pos:end="251:51">++</operator></expr></incr>)</control>

			<block pos:start="253:25" pos:end="261:25">{<block_content pos:start="255:33" pos:end="259:62">

				<decl_stmt pos:start="255:33" pos:end="255:67"><decl pos:start="255:33" pos:end="255:66"><type pos:start="255:33" pos:end="255:35"><name pos:start="255:33" pos:end="255:35">int</name></type> <name pos:start="255:37" pos:end="255:40">left</name><init pos:start="255:41" pos:end="255:66">= <expr pos:start="255:43" pos:end="255:66"><call pos:start="255:43" pos:end="255:66"><name pos:start="255:43" pos:end="255:45">MAX</name><argument_list pos:start="255:46" pos:end="255:66">(<argument pos:start="255:47" pos:end="255:62"><expr pos:start="255:47" pos:end="255:62"><name pos:start="255:47" pos:end="255:47">j</name> <operator pos:start="255:49" pos:end="255:49">+</operator> <name pos:start="255:51" pos:end="255:62"><name pos:start="255:51" pos:end="255:59">filterPos</name><index pos:start="255:60" pos:end="255:62">[<expr pos:start="255:61" pos:end="255:61"><name pos:start="255:61" pos:end="255:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="255:65" pos:end="255:65"><expr pos:start="255:65" pos:end="255:65"><literal type="number" pos:start="255:65" pos:end="255:65">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt pos:start="257:33" pos:end="257:94"><expr pos:start="257:33" pos:end="257:93"><name pos:start="257:33" pos:end="257:62"><name pos:start="257:33" pos:end="257:38">filter</name><index pos:start="257:39" pos:end="257:62">[<expr pos:start="257:40" pos:end="257:61"><name pos:start="257:40" pos:end="257:40">i</name><operator pos:start="257:41" pos:end="257:41">*</operator><operator pos:start="257:42" pos:end="257:42">(</operator><operator pos:start="257:43" pos:end="257:43">*</operator><name pos:start="257:44" pos:end="257:53">filterSize</name><operator pos:start="257:54" pos:end="257:54">)</operator> <operator pos:start="257:56" pos:end="257:56">+</operator> <name pos:start="257:58" pos:end="257:61">left</name></expr>]</index></name> <operator pos:start="257:64" pos:end="257:65">+=</operator> <name pos:start="257:67" pos:end="257:93"><name pos:start="257:67" pos:end="257:72">filter</name><index pos:start="257:73" pos:end="257:93">[<expr pos:start="257:74" pos:end="257:92"><name pos:start="257:74" pos:end="257:74">i</name><operator pos:start="257:75" pos:end="257:75">*</operator><operator pos:start="257:76" pos:end="257:76">(</operator><operator pos:start="257:77" pos:end="257:77">*</operator><name pos:start="257:78" pos:end="257:87">filterSize</name><operator pos:start="257:88" pos:end="257:88">)</operator> <operator pos:start="257:90" pos:end="257:90">+</operator> <name pos:start="257:92" pos:end="257:92">j</name></expr>]</index></name></expr>;</expr_stmt>

				<expr_stmt pos:start="259:33" pos:end="259:62"><expr pos:start="259:33" pos:end="259:61"><name pos:start="259:33" pos:end="259:59"><name pos:start="259:33" pos:end="259:38">filter</name><index pos:start="259:39" pos:end="259:59">[<expr pos:start="259:40" pos:end="259:58"><name pos:start="259:40" pos:end="259:40">i</name><operator pos:start="259:41" pos:end="259:41">*</operator><operator pos:start="259:42" pos:end="259:42">(</operator><operator pos:start="259:43" pos:end="259:43">*</operator><name pos:start="259:44" pos:end="259:53">filterSize</name><operator pos:start="259:54" pos:end="259:54">)</operator> <operator pos:start="259:56" pos:end="259:56">+</operator> <name pos:start="259:58" pos:end="259:58">j</name></expr>]</index></name><operator pos:start="259:60" pos:end="259:60">=</operator><literal type="number" pos:start="259:61" pos:end="259:61">0</literal></expr>;</expr_stmt>

			</block_content>}</block></for>

			<expr_stmt pos:start="263:25" pos:end="263:40"><expr pos:start="263:25" pos:end="263:39"><name pos:start="263:25" pos:end="263:36"><name pos:start="263:25" pos:end="263:33">filterPos</name><index pos:start="263:34" pos:end="263:36">[<expr pos:start="263:35" pos:end="263:35"><name pos:start="263:35" pos:end="263:35">i</name></expr>]</index></name><operator pos:start="263:37" pos:end="263:37">=</operator> <literal type="number" pos:start="263:39" pos:end="263:39">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>



		<if_stmt pos:start="269:17" pos:end="291:17"><if pos:start="269:17" pos:end="291:17">if<condition pos:start="269:19" pos:end="269:53">(<expr pos:start="269:20" pos:end="269:52"><name pos:start="269:20" pos:end="269:31"><name pos:start="269:20" pos:end="269:28">filterPos</name><index pos:start="269:29" pos:end="269:31">[<expr pos:start="269:30" pos:end="269:30"><name pos:start="269:30" pos:end="269:30">i</name></expr>]</index></name> <operator pos:start="269:33" pos:end="269:33">+</operator> <operator pos:start="269:35" pos:end="269:35">*</operator><name pos:start="269:36" pos:end="269:45">filterSize</name> <operator pos:start="269:47" pos:end="269:47">&gt;</operator> <name pos:start="269:49" pos:end="269:52">srcW</name></expr>)</condition>

		<block pos:start="271:17" pos:end="291:17">{<block_content pos:start="273:25" pos:end="289:57">

			<decl_stmt pos:start="273:25" pos:end="273:69"><decl pos:start="273:25" pos:end="273:68"><type pos:start="273:25" pos:end="273:27"><name pos:start="273:25" pos:end="273:27">int</name></type> <name pos:start="273:29" pos:end="273:33">shift</name><init pos:start="273:34" pos:end="273:68">= <expr pos:start="273:36" pos:end="273:68"><name pos:start="273:36" pos:end="273:47"><name pos:start="273:36" pos:end="273:44">filterPos</name><index pos:start="273:45" pos:end="273:47">[<expr pos:start="273:46" pos:end="273:46"><name pos:start="273:46" pos:end="273:46">i</name></expr>]</index></name> <operator pos:start="273:49" pos:end="273:49">+</operator> <operator pos:start="273:51" pos:end="273:51">*</operator><name pos:start="273:52" pos:end="273:61">filterSize</name> <operator pos:start="273:63" pos:end="273:63">-</operator> <name pos:start="273:65" pos:end="273:68">srcW</name></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="275:25" pos:end="275:79">// Move filter coeffs right to compensate for filterPos</comment>

			<for pos:start="277:25" pos:end="287:25">for<control pos:start="277:28" pos:end="277:55">(<init pos:start="277:29" pos:end="277:44"><expr pos:start="277:29" pos:end="277:43"><name pos:start="277:29" pos:end="277:29">j</name><operator pos:start="277:30" pos:end="277:30">=</operator><operator pos:start="277:31" pos:end="277:31">*</operator><name pos:start="277:32" pos:end="277:41">filterSize</name><operator pos:start="277:42" pos:end="277:42">-</operator><literal type="number" pos:start="277:43" pos:end="277:43">2</literal></expr>;</init> <condition pos:start="277:46" pos:end="277:50"><expr pos:start="277:46" pos:end="277:49"><name pos:start="277:46" pos:end="277:46">j</name><operator pos:start="277:47" pos:end="277:48">&gt;=</operator><literal type="number" pos:start="277:49" pos:end="277:49">0</literal></expr>;</condition> <incr pos:start="277:52" pos:end="277:54"><expr pos:start="277:52" pos:end="277:54"><name pos:start="277:52" pos:end="277:52">j</name><operator pos:start="277:53" pos:end="277:54">--</operator></expr></incr>)</control>

			<block pos:start="279:25" pos:end="287:25">{<block_content pos:start="281:33" pos:end="285:61">

				<decl_stmt pos:start="281:33" pos:end="281:73"><decl pos:start="281:33" pos:end="281:72"><type pos:start="281:33" pos:end="281:35"><name pos:start="281:33" pos:end="281:35">int</name></type> <name pos:start="281:37" pos:end="281:41">right</name><init pos:start="281:42" pos:end="281:72">= <expr pos:start="281:44" pos:end="281:72"><call pos:start="281:44" pos:end="281:72"><name pos:start="281:44" pos:end="281:46">MIN</name><argument_list pos:start="281:47" pos:end="281:72">(<argument pos:start="281:48" pos:end="281:56"><expr pos:start="281:48" pos:end="281:56"><name pos:start="281:48" pos:end="281:48">j</name> <operator pos:start="281:50" pos:end="281:50">+</operator> <name pos:start="281:52" pos:end="281:56">shift</name></expr></argument>, <argument pos:start="281:59" pos:end="281:71"><expr pos:start="281:59" pos:end="281:71"><operator pos:start="281:59" pos:end="281:59">*</operator><name pos:start="281:60" pos:end="281:69">filterSize</name><operator pos:start="281:70" pos:end="281:70">-</operator><literal type="number" pos:start="281:71" pos:end="281:71">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt pos:start="283:33" pos:end="283:93"><expr pos:start="283:33" pos:end="283:92"><name pos:start="283:33" pos:end="283:62"><name pos:start="283:33" pos:end="283:38">filter</name><index pos:start="283:39" pos:end="283:62">[<expr pos:start="283:40" pos:end="283:61"><name pos:start="283:40" pos:end="283:40">i</name><operator pos:start="283:41" pos:end="283:41">*</operator><operator pos:start="283:42" pos:end="283:42">(</operator><operator pos:start="283:43" pos:end="283:43">*</operator><name pos:start="283:44" pos:end="283:53">filterSize</name><operator pos:start="283:54" pos:end="283:54">)</operator> <operator pos:start="283:56" pos:end="283:56">+</operator><name pos:start="283:57" pos:end="283:61">right</name></expr>]</index></name> <operator pos:start="283:64" pos:end="283:65">+=</operator> <name pos:start="283:67" pos:end="283:92"><name pos:start="283:67" pos:end="283:72">filter</name><index pos:start="283:73" pos:end="283:92">[<expr pos:start="283:74" pos:end="283:91"><name pos:start="283:74" pos:end="283:74">i</name><operator pos:start="283:75" pos:end="283:75">*</operator><operator pos:start="283:76" pos:end="283:76">(</operator><operator pos:start="283:77" pos:end="283:77">*</operator><name pos:start="283:78" pos:end="283:87">filterSize</name><operator pos:start="283:88" pos:end="283:88">)</operator> <operator pos:start="283:90" pos:end="283:90">+</operator><name pos:start="283:91" pos:end="283:91">j</name></expr>]</index></name></expr>;</expr_stmt>

				<expr_stmt pos:start="285:33" pos:end="285:61"><expr pos:start="285:33" pos:end="285:60"><name pos:start="285:33" pos:end="285:58"><name pos:start="285:33" pos:end="285:38">filter</name><index pos:start="285:39" pos:end="285:58">[<expr pos:start="285:40" pos:end="285:57"><name pos:start="285:40" pos:end="285:40">i</name><operator pos:start="285:41" pos:end="285:41">*</operator><operator pos:start="285:42" pos:end="285:42">(</operator><operator pos:start="285:43" pos:end="285:43">*</operator><name pos:start="285:44" pos:end="285:53">filterSize</name><operator pos:start="285:54" pos:end="285:54">)</operator> <operator pos:start="285:56" pos:end="285:56">+</operator><name pos:start="285:57" pos:end="285:57">j</name></expr>]</index></name><operator pos:start="285:59" pos:end="285:59">=</operator><literal type="number" pos:start="285:60" pos:end="285:60">0</literal></expr>;</expr_stmt>

			</block_content>}</block></for>

			<expr_stmt pos:start="289:25" pos:end="289:57"><expr pos:start="289:25" pos:end="289:56"><name pos:start="289:25" pos:end="289:36"><name pos:start="289:25" pos:end="289:33">filterPos</name><index pos:start="289:34" pos:end="289:36">[<expr pos:start="289:35" pos:end="289:35"><name pos:start="289:35" pos:end="289:35">i</name></expr>]</index></name><operator pos:start="289:37" pos:end="289:37">=</operator> <name pos:start="289:39" pos:end="289:42">srcW</name> <operator pos:start="289:44" pos:end="289:44">-</operator> <operator pos:start="289:46" pos:end="289:46">*</operator><name pos:start="289:47" pos:end="289:56">filterSize</name></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	</block_content>}</block></for>



	<comment type="line" pos:start="297:9" pos:end="297:99">//FIXME try to align filterpos if possible / try to shift filterpos to put zeros at the end</comment>

	<comment type="line" pos:start="299:9" pos:end="299:36">// and skip these than later</comment>



	<comment type="line" pos:start="303:9" pos:end="303:19">//Normalize</comment>

	<for pos:start="305:9" pos:end="333:9">for<control pos:start="305:12" pos:end="305:29">(<init pos:start="305:13" pos:end="305:16"><expr pos:start="305:13" pos:end="305:15"><name pos:start="305:13" pos:end="305:13">i</name><operator pos:start="305:14" pos:end="305:14">=</operator><literal type="number" pos:start="305:15" pos:end="305:15">0</literal></expr>;</init> <condition pos:start="305:18" pos:end="305:24"><expr pos:start="305:18" pos:end="305:23"><name pos:start="305:18" pos:end="305:18">i</name><operator pos:start="305:19" pos:end="305:19">&lt;</operator><name pos:start="305:20" pos:end="305:23">dstW</name></expr>;</condition> <incr pos:start="305:26" pos:end="305:28"><expr pos:start="305:26" pos:end="305:28"><name pos:start="305:26" pos:end="305:26">i</name><operator pos:start="305:27" pos:end="305:28">++</operator></expr></incr>)</control>

	<block pos:start="307:9" pos:end="333:9">{<block_content pos:start="309:17" pos:end="331:17">

		<decl_stmt pos:start="309:17" pos:end="309:22"><decl pos:start="309:17" pos:end="309:21"><type pos:start="309:17" pos:end="309:19"><name pos:start="309:17" pos:end="309:19">int</name></type> <name pos:start="309:21" pos:end="309:21">j</name></decl>;</decl_stmt>

		<decl_stmt pos:start="311:17" pos:end="311:29"><decl pos:start="311:17" pos:end="311:28"><type pos:start="311:17" pos:end="311:22"><name pos:start="311:17" pos:end="311:22">double</name></type> <name pos:start="311:24" pos:end="311:26">sum</name><init pos:start="311:27" pos:end="311:28">=<expr pos:start="311:28" pos:end="311:28"><literal type="number" pos:start="311:28" pos:end="311:28">0</literal></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="313:17" pos:end="313:34"><decl pos:start="313:17" pos:end="313:33"><type pos:start="313:17" pos:end="313:22"><name pos:start="313:17" pos:end="313:22">double</name></type> <name pos:start="313:24" pos:end="313:28">scale</name><init pos:start="313:29" pos:end="313:33">= <expr pos:start="313:31" pos:end="313:33"><name pos:start="313:31" pos:end="313:33">one</name></expr></init></decl>;</decl_stmt>

		<for pos:start="315:17" pos:end="321:17">for<control pos:start="315:20" pos:end="315:44">(<init pos:start="315:21" pos:end="315:24"><expr pos:start="315:21" pos:end="315:23"><name pos:start="315:21" pos:end="315:21">j</name><operator pos:start="315:22" pos:end="315:22">=</operator><literal type="number" pos:start="315:23" pos:end="315:23">0</literal></expr>;</init> <condition pos:start="315:26" pos:end="315:39"><expr pos:start="315:26" pos:end="315:38"><name pos:start="315:26" pos:end="315:26">j</name><operator pos:start="315:27" pos:end="315:27">&lt;</operator><operator pos:start="315:28" pos:end="315:28">*</operator><name pos:start="315:29" pos:end="315:38">filterSize</name></expr>;</condition> <incr pos:start="315:41" pos:end="315:43"><expr pos:start="315:41" pos:end="315:43"><name pos:start="315:41" pos:end="315:41">j</name><operator pos:start="315:42" pos:end="315:43">++</operator></expr></incr>)</control>

		<block pos:start="317:17" pos:end="321:17">{<block_content pos:start="319:25" pos:end="319:58">

			<expr_stmt pos:start="319:25" pos:end="319:58"><expr pos:start="319:25" pos:end="319:57"><name pos:start="319:25" pos:end="319:27">sum</name><operator pos:start="319:28" pos:end="319:29">+=</operator> <name pos:start="319:31" pos:end="319:57"><name pos:start="319:31" pos:end="319:36">filter</name><index pos:start="319:37" pos:end="319:57">[<expr pos:start="319:38" pos:end="319:56"><name pos:start="319:38" pos:end="319:38">i</name><operator pos:start="319:39" pos:end="319:39">*</operator><operator pos:start="319:40" pos:end="319:40">(</operator><operator pos:start="319:41" pos:end="319:41">*</operator><name pos:start="319:42" pos:end="319:51">filterSize</name><operator pos:start="319:52" pos:end="319:52">)</operator> <operator pos:start="319:54" pos:end="319:54">+</operator> <name pos:start="319:56" pos:end="319:56">j</name></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="323:17" pos:end="323:28"><expr pos:start="323:17" pos:end="323:27"><name pos:start="323:17" pos:end="323:21">scale</name><operator pos:start="323:22" pos:end="323:23">/=</operator> <name pos:start="323:25" pos:end="323:27">sum</name></expr>;</expr_stmt>

		<for pos:start="325:17" pos:end="331:17">for<control pos:start="325:20" pos:end="325:44">(<init pos:start="325:21" pos:end="325:24"><expr pos:start="325:21" pos:end="325:23"><name pos:start="325:21" pos:end="325:21">j</name><operator pos:start="325:22" pos:end="325:22">=</operator><literal type="number" pos:start="325:23" pos:end="325:23">0</literal></expr>;</init> <condition pos:start="325:26" pos:end="325:39"><expr pos:start="325:26" pos:end="325:38"><name pos:start="325:26" pos:end="325:26">j</name><operator pos:start="325:27" pos:end="325:27">&lt;</operator><operator pos:start="325:28" pos:end="325:28">*</operator><name pos:start="325:29" pos:end="325:38">filterSize</name></expr>;</condition> <incr pos:start="325:41" pos:end="325:43"><expr pos:start="325:41" pos:end="325:43"><name pos:start="325:41" pos:end="325:41">j</name><operator pos:start="325:42" pos:end="325:43">++</operator></expr></incr>)</control>

		<block pos:start="327:17" pos:end="331:17">{<block_content pos:start="329:25" pos:end="329:94">

			<expr_stmt pos:start="329:25" pos:end="329:94"><expr pos:start="329:25" pos:end="329:93"><name pos:start="329:25" pos:end="329:51"><name pos:start="329:25" pos:end="329:30">filter</name><index pos:start="329:31" pos:end="329:51">[<expr pos:start="329:32" pos:end="329:50"><name pos:start="329:32" pos:end="329:32">i</name><operator pos:start="329:33" pos:end="329:33">*</operator><operator pos:start="329:34" pos:end="329:34">(</operator><operator pos:start="329:35" pos:end="329:35">*</operator><name pos:start="329:36" pos:end="329:45">filterSize</name><operator pos:start="329:46" pos:end="329:46">)</operator> <operator pos:start="329:48" pos:end="329:48">+</operator> <name pos:start="329:50" pos:end="329:50">j</name></expr>]</index></name><operator pos:start="329:52" pos:end="329:52">=</operator> <operator pos:start="329:54" pos:end="329:54">(</operator><name pos:start="329:55" pos:end="329:57">int</name><operator pos:start="329:58" pos:end="329:58">)</operator><operator pos:start="329:59" pos:end="329:59">(</operator><name pos:start="329:60" pos:end="329:86"><name pos:start="329:60" pos:end="329:65">filter</name><index pos:start="329:66" pos:end="329:86">[<expr pos:start="329:67" pos:end="329:85"><name pos:start="329:67" pos:end="329:67">i</name><operator pos:start="329:68" pos:end="329:68">*</operator><operator pos:start="329:69" pos:end="329:69">(</operator><operator pos:start="329:70" pos:end="329:70">*</operator><name pos:start="329:71" pos:end="329:80">filterSize</name><operator pos:start="329:81" pos:end="329:81">)</operator> <operator pos:start="329:83" pos:end="329:83">+</operator> <name pos:start="329:85" pos:end="329:85">j</name></expr>]</index></name><operator pos:start="329:87" pos:end="329:87">*</operator><name pos:start="329:88" pos:end="329:92">scale</name><operator pos:start="329:93" pos:end="329:93">)</operator></expr>;</expr_stmt>

		</block_content>}</block></for>

	</block_content>}</block></for>

</block_content>}</block></function>
</unit>
