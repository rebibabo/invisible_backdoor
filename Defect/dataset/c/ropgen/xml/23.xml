<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">dma_blk_cb</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:44"><decl pos:start="1:38" pos:end="1:44"><type pos:start="1:38" pos:end="1:44"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:44">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:21">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">DMAAIOCB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">dbs</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:29">DMAAIOCB</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">dma_addr_t</name></type> <name pos:start="7:16" pos:end="7:23">cur_addr</name></decl>, <decl pos:start="7:26" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:26" pos:end="7:32">cur_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">mem</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:20">trace_dma_blk_cb</name><argument_list pos:start="13:21" pos:end="13:30">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">dbs</name></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">dbs</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">acb</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:7">dbs</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:19">sector_num</name></name> <operator pos:start="19:21" pos:end="19:22">+=</operator> <name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:26">dbs</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:31">iov</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:36">size</name></name> <operator pos:start="19:38" pos:end="19:38">/</operator> <literal type="number" pos:start="19:40" pos:end="19:42">512</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:53">(<expr pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">dbs</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:25">sg_cur_index</name></name> <operator pos:start="23:27" pos:end="23:28">==</operator> <name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:32">dbs</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:36">sg</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:41">nsg</name></name> <operator pos:start="23:43" pos:end="23:44">||</operator> <name pos:start="23:46" pos:end="23:48">ret</name> <operator pos:start="23:50" pos:end="23:50">&lt;</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr>)</condition> <block pos:start="23:55" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><call pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:20">dma_complete</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">dbs</name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:17">dma_blk_unmap</name><argument_list pos:start="31:18" pos:end="31:22">(<argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="35:5" pos:end="59:5">while <condition pos:start="35:11" pos:end="35:44">(<expr pos:start="35:12" pos:end="35:43"><name pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:14">dbs</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">sg_cur_index</name></name> <operator pos:start="35:30" pos:end="35:30">&lt;</operator> <name pos:start="35:32" pos:end="35:43"><name pos:start="35:32" pos:end="35:34">dbs</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:38">sg</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:43">nsg</name></name></expr>)</condition> <block pos:start="35:46" pos:end="59:5">{<block_content pos:start="37:9" pos:end="57:9">

        <expr_stmt pos:start="37:9" pos:end="37:74"><expr pos:start="37:9" pos:end="37:73"><name pos:start="37:9" pos:end="37:16">cur_addr</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:49"><name pos:start="37:20" pos:end="37:22">dbs</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:26">sg</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:30">sg</name><index pos:start="37:31" pos:end="37:49">[<expr pos:start="37:32" pos:end="37:48"><name pos:start="37:32" pos:end="37:48"><name pos:start="37:32" pos:end="37:34">dbs</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:48">sg_cur_index</name></name></expr>]</index></name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:54">base</name> <operator pos:start="37:56" pos:end="37:56">+</operator> <name pos:start="37:58" pos:end="37:73"><name pos:start="37:58" pos:end="37:60">dbs</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:73">sg_cur_byte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:15">cur_len</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:48"><name pos:start="39:19" pos:end="39:21">dbs</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:25">sg</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:29">sg</name><index pos:start="39:30" pos:end="39:48">[<expr pos:start="39:31" pos:end="39:47"><name pos:start="39:31" pos:end="39:47"><name pos:start="39:31" pos:end="39:33">dbs</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:47">sg_cur_index</name></name></expr>]</index></name><operator pos:start="39:49" pos:end="39:49">.</operator><name pos:start="39:50" pos:end="39:52">len</name> <operator pos:start="39:54" pos:end="39:54">-</operator> <name pos:start="39:56" pos:end="39:71"><name pos:start="39:56" pos:end="39:58">dbs</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:71">sg_cur_byte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:11">mem</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:71"><name pos:start="41:15" pos:end="41:28">dma_memory_map</name><argument_list pos:start="41:29" pos:end="41:71">(<argument pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:32">dbs</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:36">sg</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:40">as</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50">cur_addr</name></expr></argument>, <argument pos:start="41:53" pos:end="41:60"><expr pos:start="41:53" pos:end="41:60"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:60">cur_len</name></expr></argument>, <argument pos:start="41:63" pos:end="41:70"><expr pos:start="41:63" pos:end="41:70"><name pos:start="41:63" pos:end="41:70"><name pos:start="41:63" pos:end="41:65">dbs</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:70">dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:17">(<expr pos:start="43:13" pos:end="43:16"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:16">mem</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><call pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:22">qemu_iovec_add</name><argument_list pos:start="47:23" pos:end="47:47">(<argument pos:start="47:24" pos:end="47:32"><expr pos:start="47:24" pos:end="47:32"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:32"><name pos:start="47:25" pos:end="47:27">dbs</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:32">iov</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">mem</name></expr></argument>, <argument pos:start="47:40" pos:end="47:46"><expr pos:start="47:40" pos:end="47:46"><name pos:start="47:40" pos:end="47:46">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:11">dbs</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:24">sg_cur_byte</name></name> <operator pos:start="49:26" pos:end="49:27">+=</operator> <name pos:start="49:29" pos:end="49:35">cur_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:67">(<expr pos:start="51:13" pos:end="51:66"><name pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">dbs</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:28">sg_cur_byte</name></name> <operator pos:start="51:30" pos:end="51:31">==</operator> <name pos:start="51:33" pos:end="51:62"><name pos:start="51:33" pos:end="51:35">dbs</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:39">sg</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:43">sg</name><index pos:start="51:44" pos:end="51:62">[<expr pos:start="51:45" pos:end="51:61"><name pos:start="51:45" pos:end="51:61"><name pos:start="51:45" pos:end="51:47">dbs</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:61">sg_cur_index</name></name></expr>]</index></name><operator pos:start="51:63" pos:end="51:63">.</operator><name pos:start="51:64" pos:end="51:66">len</name></expr>)</condition> <block pos:start="51:69" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:32">

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:15">dbs</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:28">sg_cur_byte</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><operator pos:start="55:13" pos:end="55:14">++</operator><name pos:start="55:15" pos:end="55:31"><name pos:start="55:15" pos:end="55:17">dbs</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:31">sg_cur_index</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:27">(<expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">dbs</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">iov</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:21">size</name></name> <operator pos:start="63:23" pos:end="63:24">==</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>)</condition> <block pos:start="63:29" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:15">

        <expr_stmt pos:start="65:9" pos:end="65:32"><expr pos:start="65:9" pos:end="65:31"><call pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:26">trace_dma_map_wait</name><argument_list pos:start="65:27" pos:end="65:31">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:31">cpu_register_map_client</name><argument_list pos:start="67:32" pos:end="67:64">(<argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">dbs</name></expr></argument>, <argument pos:start="67:38" pos:end="67:63"><expr pos:start="67:38" pos:end="67:63"><name pos:start="67:38" pos:end="67:63">continue_after_map_failure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:42">(<expr pos:start="75:9" pos:end="75:41"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:11">dbs</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">iov</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:21">size</name></name> <operator pos:start="75:23" pos:end="75:23">&amp;</operator> <operator pos:start="75:25" pos:end="75:25">~</operator><name pos:start="75:26" pos:end="75:41">BDRV_SECTOR_MASK</name></expr>)</condition> <block pos:start="75:44" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:78">

        <expr_stmt pos:start="77:9" pos:end="77:78"><expr pos:start="77:9" pos:end="77:77"><call pos:start="77:9" pos:end="77:77"><name pos:start="77:9" pos:end="77:31">qemu_iovec_discard_back</name><argument_list pos:start="77:32" pos:end="77:77">(<argument pos:start="77:33" pos:end="77:41"><expr pos:start="77:33" pos:end="77:41"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:41"><name pos:start="77:34" pos:end="77:36">dbs</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:41">iov</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:76"><expr pos:start="77:44" pos:end="77:76"><name pos:start="77:44" pos:end="77:56"><name pos:start="77:44" pos:end="77:46">dbs</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:51">iov</name><operator pos:start="77:52" pos:end="77:52">.</operator><name pos:start="77:53" pos:end="77:56">size</name></name> <operator pos:start="77:58" pos:end="77:58">&amp;</operator> <operator pos:start="77:60" pos:end="77:60">~</operator><name pos:start="77:61" pos:end="77:76">BDRV_SECTOR_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="85:66"><expr pos:start="83:5" pos:end="85:65"><name pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:7">dbs</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:12">acb</name></name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="85:65"><name pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:18">dbs</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:27">io_func</name></name><argument_list pos:start="83:28" pos:end="85:65">(<argument pos:start="83:29" pos:end="83:36"><expr pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:31">dbs</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">blk</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:53"><expr pos:start="83:39" pos:end="83:53"><name pos:start="83:39" pos:end="83:53"><name pos:start="83:39" pos:end="83:41">dbs</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:53">sector_num</name></name></expr></argument>, <argument pos:start="83:56" pos:end="83:64"><expr pos:start="83:56" pos:end="83:64"><operator pos:start="83:56" pos:end="83:56">&amp;</operator><name pos:start="83:57" pos:end="83:64"><name pos:start="83:57" pos:end="83:59">dbs</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:64">iov</name></name></expr></argument>,

                            <argument pos:start="85:29" pos:end="85:47"><expr pos:start="85:29" pos:end="85:47"><name pos:start="85:29" pos:end="85:41"><name pos:start="85:29" pos:end="85:31">dbs</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:36">iov</name><operator pos:start="85:37" pos:end="85:37">.</operator><name pos:start="85:38" pos:end="85:41">size</name></name> <operator pos:start="85:43" pos:end="85:43">/</operator> <literal type="number" pos:start="85:45" pos:end="85:47">512</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:59"><expr pos:start="85:50" pos:end="85:59"><name pos:start="85:50" pos:end="85:59">dma_blk_cb</name></expr></argument>, <argument pos:start="85:62" pos:end="85:64"><expr pos:start="85:62" pos:end="85:64"><name pos:start="85:62" pos:end="85:64">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:21"><expr pos:start="87:5" pos:end="87:20"><call pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:10">assert</name><argument_list pos:start="87:11" pos:end="87:20">(<argument pos:start="87:12" pos:end="87:19"><expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:14">dbs</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:19">acb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
