<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26999.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">data_plane_remove_op_blockers</name><parameter_list pos:start="1:42" pos:end="1:66">(<parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:64"><name pos:start="1:43" pos:end="1:62">VirtIOBlockDataPlane</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:18">blocker</name></name></expr>)</condition> <block pos:start="5:21" pos:end="13:5">{<block_content pos:start="7:9" pos:end="11:26">

        <expr_stmt pos:start="7:9" pos:end="7:58"><expr pos:start="7:9" pos:end="7:57"><call pos:start="7:9" pos:end="7:57"><name pos:start="7:9" pos:end="7:26">blk_op_unblock_all</name><argument_list pos:start="7:27" pos:end="7:57">(<argument pos:start="7:28" pos:end="7:44"><expr pos:start="7:28" pos:end="7:44"><name pos:start="7:28" pos:end="7:44"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:34">conf</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:40">conf</name><operator pos:start="7:41" pos:end="7:41">.</operator><name pos:start="7:42" pos:end="7:44">blk</name></name></expr></argument>, <argument pos:start="7:47" pos:end="7:56"><expr pos:start="7:47" pos:end="7:56"><name pos:start="7:47" pos:end="7:56"><name pos:start="7:47" pos:end="7:47">s</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:56">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:31"><expr pos:start="9:9" pos:end="9:30"><call pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:18">error_free</name><argument_list pos:start="9:19" pos:end="9:30">(<argument pos:start="9:20" pos:end="9:29"><expr pos:start="9:20" pos:end="9:29"><name pos:start="9:20" pos:end="9:29"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:26"><expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">blocker</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
