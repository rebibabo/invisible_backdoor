<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14712.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">virtio_scsi_command_complete</name><parameter_list pos:start="1:41" pos:end="3:54">(<parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:52">SCSIRequest</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">r</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:65">uint32_t</name></type> <name pos:start="1:67" pos:end="1:72">status</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:47">size_t</name></type> <name pos:start="3:49" pos:end="3:53">resid</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:38">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VirtIOSCSIReq</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">req</name> <init pos:start="7:24" pos:end="7:39">= <expr pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:26">r</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:39">hba_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:17">sense</name><index pos:start="9:18" pos:end="9:38">[<expr pos:start="9:19" pos:end="9:37"><name pos:start="9:19" pos:end="9:37">SCSI_SENSE_BUF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:22">sense_len</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:9">r</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">io_canceled</name></name></expr>)</condition> <block pos:start="15:25" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:7">req</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">resp</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:17">cmd</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">response</name></name> <operator pos:start="23:29" pos:end="23:29">=</operator> <name pos:start="23:31" pos:end="23:46">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:7">req</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">resp</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:17">cmd</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:25">status</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:34">status</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="43:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">req</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:17">resp</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:21">cmd</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:29">status</name></name> <operator pos:start="27:31" pos:end="27:32">==</operator> <name pos:start="27:34" pos:end="27:37">GOOD</name></expr>)</condition> <block pos:start="27:40" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:46">

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:11">req</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">resp</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:21">cmd</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">resid</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <call pos:start="29:32" pos:end="29:45"><name pos:start="29:32" pos:end="29:38">tswap32</name><argument_list pos:start="29:39" pos:end="29:45">(<argument pos:start="29:40" pos:end="29:44"><expr pos:start="29:40" pos:end="29:44"><name pos:start="29:40" pos:end="29:44">resid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="43:5">else <block pos:start="31:12" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:54">

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:11">req</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">resp</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:21">cmd</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:28">resid</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:17">sense_len</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:63"><name pos:start="35:21" pos:end="35:38">scsi_req_get_sense</name><argument_list pos:start="35:39" pos:end="35:63">(<argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">r</name></expr></argument>, <argument pos:start="35:43" pos:end="35:47"><expr pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:47">sense</name></expr></argument>, <argument pos:start="35:50" pos:end="35:62"><expr pos:start="35:50" pos:end="35:62"><sizeof pos:start="35:50" pos:end="35:62">sizeof<argument_list pos:start="35:56" pos:end="35:62">(<argument pos:start="35:57" pos:end="35:61"><expr pos:start="35:57" pos:end="35:61"><name pos:start="35:57" pos:end="35:61">sense</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:75"><expr pos:start="37:9" pos:end="37:74"><name pos:start="37:9" pos:end="37:17">sense_len</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:74"><name pos:start="37:21" pos:end="37:23">MIN</name><argument_list pos:start="37:24" pos:end="37:74">(<argument pos:start="37:25" pos:end="37:33"><expr pos:start="37:25" pos:end="37:33"><name pos:start="37:25" pos:end="37:33">sense_len</name></expr></argument>, <argument pos:start="37:36" pos:end="37:73"><expr pos:start="37:36" pos:end="37:73"><name pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:38">req</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:49">resp_size</name></name> <operator pos:start="37:51" pos:end="37:51">-</operator> <sizeof pos:start="37:53" pos:end="37:73">sizeof<argument_list pos:start="37:59" pos:end="37:73">(<argument pos:start="37:60" pos:end="37:72"><expr pos:start="37:60" pos:end="37:72"><name pos:start="37:60" pos:end="37:72"><name pos:start="37:60" pos:end="37:62">req</name><operator pos:start="37:63" pos:end="37:64">-&gt;</operator><name pos:start="37:65" pos:end="37:68">resp</name><operator pos:start="37:69" pos:end="37:69">.</operator><name pos:start="37:70" pos:end="37:72">cmd</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:54">(<argument pos:start="39:16" pos:end="39:35"><expr pos:start="39:16" pos:end="39:35"><name pos:start="39:16" pos:end="39:35"><name pos:start="39:16" pos:end="39:18">req</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:24">resp</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:28">cmd</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">sense</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">sense</name></expr></argument>, <argument pos:start="39:45" pos:end="39:53"><expr pos:start="39:45" pos:end="39:53"><name pos:start="39:45" pos:end="39:53">sense_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:11">req</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:17">resp</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:21">cmd</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">sense_len</name></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <call pos:start="41:36" pos:end="41:53"><name pos:start="41:36" pos:end="41:42">tswap32</name><argument_list pos:start="41:43" pos:end="41:53">(<argument pos:start="41:44" pos:end="41:52"><expr pos:start="41:44" pos:end="41:52"><name pos:start="41:44" pos:end="41:52">sense_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><call pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:32">virtio_scsi_complete_cmd_req</name><argument_list pos:start="45:33" pos:end="45:37">(<argument pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><name pos:start="45:34" pos:end="45:36">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
