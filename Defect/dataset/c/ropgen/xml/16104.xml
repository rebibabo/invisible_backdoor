<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16104.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">gif_video_probe</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">AVProbeData</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:43">pd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">p</name></decl>, <decl pos:start="5:23" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">bits_per_pixel</name></decl>, <decl pos:start="7:25" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:42">has_global_palette</name></decl>, <decl pos:start="7:45" pos:end="7:52"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:52">ext_code</name></decl>, <decl pos:start="7:55" pos:end="7:61"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:55" pos:end="7:61">ext_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">gce_flags</name></decl>, <decl pos:start="9:20" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:31">gce_disposal</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:17"><if pos:start="13:5" pos:end="17:17">if <condition pos:start="13:8" pos:end="15:44">(<expr pos:start="13:9" pos:end="15:43"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:10">pd</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:20">buf_size</name></name> <operator pos:start="13:22" pos:end="13:22">&lt;</operator> <literal type="number" pos:start="13:24" pos:end="13:25">24</literal> <operator pos:start="13:27" pos:end="13:28">||</operator>

        <call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:14">memcmp</name><argument_list pos:start="15:15" pos:end="15:38">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:17">pd</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:22">buf</name></name></expr></argument>, <argument pos:start="15:25" pos:end="15:34"><expr pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:34">gif89a_sig</name></expr></argument>, <argument pos:start="15:37" pos:end="15:37"><expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">6</literal></expr></argument>)</argument_list></call> <operator pos:start="15:40" pos:end="15:41">!=</operator> <literal type="number" pos:start="15:43" pos:end="15:43">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:9">p_end</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:14">pd</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:19">buf</name></name> <operator pos:start="19:21" pos:end="19:21">+</operator> <name pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:24">pd</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:34">buf_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">pd</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:15">buf</name></name> <operator pos:start="21:17" pos:end="21:17">+</operator> <literal type="number" pos:start="21:19" pos:end="21:19">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:18">bits_per_pixel</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <operator pos:start="23:22" pos:end="23:22">(</operator><name pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:23">p</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">4</literal></expr>]</index></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <literal type="number" pos:start="23:30" pos:end="23:33">0x07</literal><operator pos:start="23:34" pos:end="23:34">)</operator> <operator pos:start="23:36" pos:end="23:36">+</operator> <literal type="number" pos:start="23:38" pos:end="23:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:22">has_global_palette</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:27">p</name><index pos:start="25:28" pos:end="25:30">[<expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">4</literal></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <literal type="number" pos:start="25:34" pos:end="25:37">0x80</literal><operator pos:start="25:38" pos:end="25:38">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:11"><expr pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:8">+=</operator> <literal type="number" pos:start="27:10" pos:end="27:10">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:39"><if pos:start="29:5" pos:end="31:39">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:26">has_global_palette</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:39"><block_content pos:start="31:9" pos:end="31:39">

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:9">p</name> <operator pos:start="31:11" pos:end="31:12">+=</operator> <operator pos:start="31:14" pos:end="31:14">(</operator><literal type="number" pos:start="31:15" pos:end="31:15">1</literal> <operator pos:start="31:17" pos:end="31:18">&lt;&lt;</operator> <name pos:start="31:20" pos:end="31:33">bits_per_pixel</name><operator pos:start="31:34" pos:end="31:34">)</operator> <operator pos:start="31:36" pos:end="31:36">*</operator> <literal type="number" pos:start="31:38" pos:end="31:38">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="33:5" pos:end="97:5">for<control pos:start="33:8" pos:end="33:11">(<init pos:start="33:9" pos:end="33:9">;</init><condition pos:start="33:10" pos:end="33:10">;</condition><incr/>)</control> <block pos:start="33:13" pos:end="97:5">{<block_content pos:start="35:9" pos:end="95:9">

        <if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if <condition pos:start="35:12" pos:end="35:23">(<expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">p</name> <operator pos:start="35:15" pos:end="35:16">&gt;=</operator> <name pos:start="35:18" pos:end="35:22">p_end</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="41:18"><if pos:start="39:9" pos:end="41:18">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:14">p</name> <operator pos:start="39:16" pos:end="39:17">!=</operator> <literal type="char" pos:start="39:19" pos:end="39:21">'!'</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:18"><block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">p</name><operator pos:start="43:10" pos:end="43:11">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">p</name> <operator pos:start="45:15" pos:end="45:16">&gt;=</operator> <name pos:start="45:18" pos:end="45:22">p_end</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <return pos:start="47:13" pos:end="47:21">return <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:16">ext_code</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <operator pos:start="49:20" pos:end="49:20">*</operator><name pos:start="49:21" pos:end="49:21">p</name><operator pos:start="49:22" pos:end="49:23">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:21"><if pos:start="51:9" pos:end="53:21">if <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">p</name> <operator pos:start="51:15" pos:end="51:16">&gt;=</operator> <name pos:start="51:18" pos:end="51:22">p_end</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:21"><block_content pos:start="53:13" pos:end="53:21">

            <return pos:start="53:13" pos:end="53:21">return <expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:15">ext_len</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">*</operator><name pos:start="55:20" pos:end="55:20">p</name><operator pos:start="55:21" pos:end="55:22">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="79:9"><if pos:start="57:9" pos:end="79:9">if <condition pos:start="57:12" pos:end="57:29">(<expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:20">ext_code</name> <operator pos:start="57:22" pos:end="57:23">==</operator> <literal type="number" pos:start="57:25" pos:end="57:28">0xf9</literal></expr>)</condition> <block pos:start="57:31" pos:end="79:9">{<block_content pos:start="59:13" pos:end="77:25">

            <if_stmt pos:start="59:13" pos:end="61:25"><if pos:start="59:13" pos:end="61:25">if <condition pos:start="59:16" pos:end="59:27">(<expr pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:17">p</name> <operator pos:start="59:19" pos:end="59:20">&gt;=</operator> <name pos:start="59:22" pos:end="59:26">p_end</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:25"><block_content pos:start="61:17" pos:end="61:25">

                <return pos:start="61:17" pos:end="61:25">return <expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="63:13" pos:end="65:43">/* if GCE extension found with gce_disposal != 0: it is

               likely to be an animation */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:21">gce_flags</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <operator pos:start="67:25" pos:end="67:25">*</operator><name pos:start="67:26" pos:end="67:26">p</name><operator pos:start="67:27" pos:end="67:28">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:50"><expr pos:start="69:13" pos:end="69:49"><name pos:start="69:13" pos:end="69:24">gce_disposal</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <operator pos:start="69:28" pos:end="69:28">(</operator><name pos:start="69:29" pos:end="69:37">gce_flags</name> <operator pos:start="69:39" pos:end="69:40">&gt;&gt;</operator> <literal type="number" pos:start="69:42" pos:end="69:42">2</literal><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:45">&amp;</operator> <literal type="number" pos:start="69:47" pos:end="69:49">0x7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="77:25"><if pos:start="71:13" pos:end="73:41">if <condition pos:start="71:16" pos:end="71:34">(<expr pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:28">gce_disposal</name> <operator pos:start="71:30" pos:end="71:31">!=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:41"><block_content pos:start="73:17" pos:end="73:41">

                <return pos:start="73:17" pos:end="73:41">return <expr pos:start="73:24" pos:end="73:40"><name pos:start="73:24" pos:end="73:40">AVPROBE_SCORE_MAX</name></expr>;</return></block_content></block></if>

            <else pos:start="75:13" pos:end="77:25">else<block type="pseudo" pos:start="77:17" pos:end="77:25"><block_content pos:start="77:17" pos:end="77:25">

                <return pos:start="77:17" pos:end="77:25">return <expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="81:9" pos:end="95:9">for<control pos:start="81:12" pos:end="81:15">(<init pos:start="81:13" pos:end="81:13">;</init><condition pos:start="81:14" pos:end="81:14">;</condition><incr/>)</control> <block pos:start="81:17" pos:end="95:9">{<block_content pos:start="83:13" pos:end="93:27">

            <if_stmt pos:start="83:13" pos:end="85:22"><if pos:start="83:13" pos:end="85:22">if <condition pos:start="83:16" pos:end="83:29">(<expr pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:23">ext_len</name> <operator pos:start="83:25" pos:end="83:26">==</operator> <literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:22"><block_content pos:start="85:17" pos:end="85:22">

                <break pos:start="85:17" pos:end="85:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:25"><expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:13">p</name> <operator pos:start="87:15" pos:end="87:16">+=</operator> <name pos:start="87:18" pos:end="87:24">ext_len</name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:25"><if pos:start="89:13" pos:end="91:25">if <condition pos:start="89:16" pos:end="89:27">(<expr pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:17">p</name> <operator pos:start="89:19" pos:end="89:20">&gt;=</operator> <name pos:start="89:22" pos:end="89:26">p_end</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:25"><block_content pos:start="91:17" pos:end="91:25">

                <return pos:start="91:17" pos:end="91:25">return <expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:27"><expr pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:19">ext_len</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <operator pos:start="93:23" pos:end="93:23">*</operator><name pos:start="93:24" pos:end="93:24">p</name><operator pos:start="93:25" pos:end="93:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
