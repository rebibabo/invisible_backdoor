<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16841.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">tftp_send_next_block</name><parameter_list pos:start="1:33" pos:end="3:56">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:52">tftp_session</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">spt</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:55"><decl pos:start="3:34" pos:end="3:55"><type pos:start="3:34" pos:end="3:55"><name pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:39">struct</name> <name pos:start="3:41" pos:end="3:46">tftp_t</name></name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:55">recv_tp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:3" pos:end="107:18">

  <decl_stmt pos:start="7:3" pos:end="7:34"><decl pos:start="7:3" pos:end="7:26"><type pos:start="7:3" pos:end="7:20"><name pos:start="7:3" pos:end="7:20"><name pos:start="7:3" pos:end="7:8">struct</name> <name pos:start="7:10" pos:end="7:20">sockaddr_in</name></name></type> <name pos:start="7:22" pos:end="7:26">saddr</name></decl>, <decl pos:start="7:29" pos:end="7:33"><type ref="prev" pos:start="7:3" pos:end="7:20"/><name pos:start="7:29" pos:end="7:33">daddr</name></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:17"><decl pos:start="9:3" pos:end="9:16"><type pos:start="9:3" pos:end="9:15"><name pos:start="9:3" pos:end="9:13"><name pos:start="9:3" pos:end="9:8">struct</name> <name pos:start="9:10" pos:end="9:13">mbuf</name></name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">m</name></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:20"><decl pos:start="11:3" pos:end="11:19"><type pos:start="11:3" pos:end="11:17"><name pos:start="11:3" pos:end="11:15"><name pos:start="11:3" pos:end="11:8">struct</name> <name pos:start="11:10" pos:end="11:15">tftp_t</name></name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">tp</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:14"><decl pos:start="13:3" pos:end="13:13"><type pos:start="13:3" pos:end="13:5"><name pos:start="13:3" pos:end="13:5">int</name></type> <name pos:start="13:7" pos:end="13:13">nobytes</name></decl>;</decl_stmt>



  <expr_stmt pos:start="17:3" pos:end="17:24"><expr pos:start="17:3" pos:end="17:23"><name pos:start="17:3" pos:end="17:3">m</name> <operator pos:start="17:5" pos:end="17:5">=</operator> <call pos:start="17:7" pos:end="17:23"><name pos:start="17:7" pos:end="17:11">m_get</name><argument_list pos:start="17:12" pos:end="17:23">(<argument pos:start="17:13" pos:end="17:22"><expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">spt</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:22">slirp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="21:3" pos:end="25:3"><if pos:start="21:3" pos:end="25:3">if <condition pos:start="21:6" pos:end="21:9">(<expr pos:start="21:7" pos:end="21:8"><operator pos:start="21:7" pos:end="21:7">!</operator><name pos:start="21:8" pos:end="21:8">m</name></expr>)</condition> <block pos:start="21:11" pos:end="25:3">{<block_content pos:start="23:5" pos:end="23:11">

    <return pos:start="23:5" pos:end="23:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="29:3" pos:end="29:34"><expr pos:start="29:3" pos:end="29:33"><call pos:start="29:3" pos:end="29:33"><name pos:start="29:3" pos:end="29:8">memset</name><argument_list pos:start="29:9" pos:end="29:33">(<argument pos:start="29:10" pos:end="29:18"><expr pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:10">m</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">m_data</name></name></expr></argument>, <argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr></argument>, <argument pos:start="29:24" pos:end="29:32"><expr pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:24">m</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:32">m_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <expr_stmt pos:start="33:3" pos:end="33:29"><expr pos:start="33:3" pos:end="33:28"><name pos:start="33:3" pos:end="33:11"><name pos:start="33:3" pos:end="33:3">m</name><operator pos:start="33:4" pos:end="33:5">-&gt;</operator><name pos:start="33:6" pos:end="33:11">m_data</name></name> <operator pos:start="33:13" pos:end="33:14">+=</operator> <name pos:start="33:16" pos:end="33:28">IF_MAXLINKHDR</name></expr>;</expr_stmt>

  <expr_stmt pos:start="35:3" pos:end="35:25"><expr pos:start="35:3" pos:end="35:24"><name pos:start="35:3" pos:end="35:4">tp</name> <operator pos:start="35:6" pos:end="35:6">=</operator> <operator pos:start="35:8" pos:end="35:8">(</operator><name pos:start="35:9" pos:end="35:12">void</name> <operator pos:start="35:14" pos:end="35:14">*</operator><operator pos:start="35:15" pos:end="35:15">)</operator><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">m</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:24">m_data</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="37:3" pos:end="37:39"><expr pos:start="37:3" pos:end="37:38"><name pos:start="37:3" pos:end="37:11"><name pos:start="37:3" pos:end="37:3">m</name><operator pos:start="37:4" pos:end="37:5">-&gt;</operator><name pos:start="37:6" pos:end="37:11">m_data</name></name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <sizeof pos:start="37:16" pos:end="37:38">sizeof<argument_list pos:start="37:22" pos:end="37:38">(<argument pos:start="37:23" pos:end="37:37"><expr pos:start="37:23" pos:end="37:37">struct <name pos:start="37:30" pos:end="37:37">udpiphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



  <expr_stmt pos:start="41:3" pos:end="41:31"><expr pos:start="41:3" pos:end="41:30"><name pos:start="41:3" pos:end="41:11"><name pos:start="41:3" pos:end="41:4">tp</name><operator pos:start="41:5" pos:end="41:6">-&gt;</operator><name pos:start="41:7" pos:end="41:11">tp_op</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:30"><name pos:start="41:15" pos:end="41:19">htons</name><argument_list pos:start="41:20" pos:end="41:30">(<argument pos:start="41:21" pos:end="41:29"><expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:29">TFTP_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="43:3" pos:end="43:66"><expr pos:start="43:3" pos:end="43:65"><name pos:start="43:3" pos:end="43:27"><name pos:start="43:3" pos:end="43:4">tp</name><operator pos:start="43:5" pos:end="43:6">-&gt;</operator><name pos:start="43:7" pos:end="43:7">x</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:15">tp_data</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:27">tp_block_nr</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <call pos:start="43:31" pos:end="43:65"><name pos:start="43:31" pos:end="43:35">htons</name><argument_list pos:start="43:36" pos:end="43:65">(<argument pos:start="43:37" pos:end="43:64"><expr pos:start="43:37" pos:end="43:64"><operator pos:start="43:37" pos:end="43:37">(</operator><name pos:start="43:38" pos:end="43:50"><name pos:start="43:38" pos:end="43:40">spt</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:50">block_nr</name></name> <operator pos:start="43:52" pos:end="43:52">+</operator> <literal type="number" pos:start="43:54" pos:end="43:54">1</literal><operator pos:start="43:55" pos:end="43:55">)</operator> <operator pos:start="43:57" pos:end="43:57">&amp;</operator> <literal type="number" pos:start="43:59" pos:end="43:64">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <expr_stmt pos:start="47:3" pos:end="47:38"><expr pos:start="47:3" pos:end="47:37"><name pos:start="47:3" pos:end="47:16"><name pos:start="47:3" pos:end="47:7">saddr</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:16">sin_addr</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:26">recv_tp</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:30">ip</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:37">ip_dst</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="49:3" pos:end="49:41"><expr pos:start="49:3" pos:end="49:40"><name pos:start="49:3" pos:end="49:16"><name pos:start="49:3" pos:end="49:7">saddr</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:16">sin_port</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:40"><name pos:start="49:20" pos:end="49:26">recv_tp</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:31">udp</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:40">uh_dport</name></name></expr>;</expr_stmt>



  <expr_stmt pos:start="53:3" pos:end="53:34"><expr pos:start="53:3" pos:end="53:33"><name pos:start="53:3" pos:end="53:16"><name pos:start="53:3" pos:end="53:7">daddr</name><operator pos:start="53:8" pos:end="53:8">.</operator><name pos:start="53:9" pos:end="53:16">sin_addr</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:33"><name pos:start="53:20" pos:end="53:22">spt</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:33">client_ip</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="55:3" pos:end="55:36"><expr pos:start="55:3" pos:end="55:35"><name pos:start="55:3" pos:end="55:16"><name pos:start="55:3" pos:end="55:7">daddr</name><operator pos:start="55:8" pos:end="55:8">.</operator><name pos:start="55:9" pos:end="55:16">sin_port</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:35"><name pos:start="55:20" pos:end="55:22">spt</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:35">client_port</name></name></expr>;</expr_stmt>



  <expr_stmt pos:start="59:3" pos:end="59:74"><expr pos:start="59:3" pos:end="59:73"><name pos:start="59:3" pos:end="59:9">nobytes</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:26">tftp_read_data</name><argument_list pos:start="59:27" pos:end="59:73">(<argument pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:30">spt</name></expr></argument>, <argument pos:start="59:33" pos:end="59:45"><expr pos:start="59:33" pos:end="59:45"><name pos:start="59:33" pos:end="59:45"><name pos:start="59:33" pos:end="59:35">spt</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:45">block_nr</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:67"><expr pos:start="59:48" pos:end="59:67"><name pos:start="59:48" pos:end="59:67"><name pos:start="59:48" pos:end="59:49">tp</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:52">x</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:60">tp_data</name><operator pos:start="59:61" pos:end="59:61">.</operator><name pos:start="59:62" pos:end="59:67">tp_buf</name></name></expr></argument>, <argument pos:start="59:70" pos:end="59:72"><expr pos:start="59:70" pos:end="59:72"><literal type="number" pos:start="59:70" pos:end="59:72">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="63:3" pos:end="79:3"><if pos:start="63:3" pos:end="79:3">if <condition pos:start="63:6" pos:end="63:18">(<expr pos:start="63:7" pos:end="63:17"><name pos:start="63:7" pos:end="63:13">nobytes</name> <operator pos:start="63:15" pos:end="63:15">&lt;</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>)</condition> <block pos:start="63:20" pos:end="79:3">{<block_content pos:start="65:5" pos:end="77:11">

    <expr_stmt pos:start="65:5" pos:end="65:14"><expr pos:start="65:5" pos:end="65:13"><call pos:start="65:5" pos:end="65:13"><name pos:start="65:5" pos:end="65:10">m_free</name><argument_list pos:start="65:11" pos:end="65:13">(<argument pos:start="65:12" pos:end="65:12"><expr pos:start="65:12" pos:end="65:12"><name pos:start="65:12" pos:end="65:12">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:42">/* send "file not found" error back */</comment>



    <expr_stmt pos:start="73:5" pos:end="73:50"><expr pos:start="73:5" pos:end="73:49"><call pos:start="73:5" pos:end="73:49"><name pos:start="73:5" pos:end="73:19">tftp_send_error</name><argument_list pos:start="73:20" pos:end="73:49">(<argument pos:start="73:21" pos:end="73:23"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">spt</name></expr></argument>, <argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr></argument>, <argument pos:start="73:29" pos:end="73:44"><expr pos:start="73:29" pos:end="73:44"><literal type="string" pos:start="73:29" pos:end="73:44">"File not found"</literal></expr></argument>, <argument pos:start="73:47" pos:end="73:48"><expr pos:start="73:47" pos:end="73:48"><name pos:start="73:47" pos:end="73:48">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="83:3" pos:end="85:50"><expr pos:start="83:3" pos:end="85:49"><name pos:start="83:3" pos:end="83:10"><name pos:start="83:3" pos:end="83:3">m</name><operator pos:start="83:4" pos:end="83:5">-&gt;</operator><name pos:start="83:6" pos:end="83:10">m_len</name></name> <operator pos:start="83:12" pos:end="83:12">=</operator> <sizeof pos:start="83:14" pos:end="83:34">sizeof<argument_list pos:start="83:20" pos:end="83:34">(<argument pos:start="83:21" pos:end="83:33"><expr pos:start="83:21" pos:end="83:33">struct <name pos:start="83:28" pos:end="83:33">tftp_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="83:36" pos:end="83:36">-</operator> <operator pos:start="83:38" pos:end="83:38">(</operator><literal type="number" pos:start="83:39" pos:end="83:43">512</literal> <operator pos:start="83:43" pos:end="83:43">-</operator> <name pos:start="83:45" pos:end="83:51">nobytes</name><operator pos:start="83:52" pos:end="83:52">)</operator> <operator pos:start="83:54" pos:end="83:54">-</operator>

        <sizeof pos:start="85:9" pos:end="85:25">sizeof<argument_list pos:start="85:15" pos:end="85:25">(<argument pos:start="85:16" pos:end="85:24"><expr pos:start="85:16" pos:end="85:24">struct <name pos:start="85:23" pos:end="85:24">ip</name></expr></argument>)</argument_list></sizeof> <operator pos:start="85:27" pos:end="85:27">-</operator> <sizeof pos:start="85:29" pos:end="85:49">sizeof<argument_list pos:start="85:35" pos:end="85:49">(<argument pos:start="85:36" pos:end="85:48"><expr pos:start="85:36" pos:end="85:48">struct <name pos:start="85:43" pos:end="85:48">udphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



  <expr_stmt pos:start="89:3" pos:end="89:55"><expr pos:start="89:3" pos:end="89:54"><call pos:start="89:3" pos:end="89:54"><name pos:start="89:3" pos:end="89:13">udp_output2</name><argument_list pos:start="89:14" pos:end="89:54">(<argument pos:start="89:15" pos:end="89:18"><expr pos:start="89:15" pos:end="89:18"><name pos:start="89:15" pos:end="89:18">NULL</name></expr></argument>, <argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">m</name></expr></argument>, <argument pos:start="89:24" pos:end="89:29"><expr pos:start="89:24" pos:end="89:29"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:29">saddr</name></expr></argument>, <argument pos:start="89:32" pos:end="89:37"><expr pos:start="89:32" pos:end="89:37"><operator pos:start="89:32" pos:end="89:32">&amp;</operator><name pos:start="89:33" pos:end="89:37">daddr</name></expr></argument>, <argument pos:start="89:40" pos:end="89:53"><expr pos:start="89:40" pos:end="89:53"><name pos:start="89:40" pos:end="89:53">IPTOS_LOWDELAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="93:3" pos:end="103:3"><if pos:start="93:3" pos:end="97:3">if <condition pos:start="93:6" pos:end="93:21">(<expr pos:start="93:7" pos:end="93:20"><name pos:start="93:7" pos:end="93:13">nobytes</name> <operator pos:start="93:15" pos:end="93:16">==</operator> <literal type="number" pos:start="93:18" pos:end="93:20">512</literal></expr>)</condition> <block pos:start="93:23" pos:end="97:3">{<block_content pos:start="95:5" pos:end="95:29">

    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><call pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:23">tftp_session_update</name><argument_list pos:start="95:24" pos:end="95:28">(<argument pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:27">spt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if>

  <else pos:start="99:3" pos:end="103:3">else <block pos:start="99:8" pos:end="103:3">{<block_content pos:start="101:5" pos:end="101:32">

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><call pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:26">tftp_session_terminate</name><argument_list pos:start="101:27" pos:end="101:31">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">spt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></else></if_stmt>



  <expr_stmt pos:start="107:3" pos:end="107:18"><expr pos:start="107:3" pos:end="107:17"><name pos:start="107:3" pos:end="107:15"><name pos:start="107:3" pos:end="107:5">spt</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:15">block_nr</name></name><operator pos:start="107:16" pos:end="107:17">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
