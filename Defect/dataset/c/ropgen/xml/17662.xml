<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17662.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">handle_sync</name><parameter_list pos:start="1:24" pos:end="3:77">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:54">insn</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:32">unsigned</name> <name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:40">op1</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:58"><decl pos:start="3:43" pos:end="3:58"><type pos:start="3:43" pos:end="3:58"><name pos:start="3:43" pos:end="3:50">unsigned</name> <name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:58">op2</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:76"><decl pos:start="3:61" pos:end="3:76"><type pos:start="3:61" pos:end="3:76"><name pos:start="3:61" pos:end="3:68">unsigned</name> <name pos:start="3:70" pos:end="3:72">int</name></type> <name pos:start="3:74" pos:end="3:76">crm</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:5">

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:17">(<expr pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:11">op1</name> <operator pos:start="7:13" pos:end="7:14">!=</operator> <literal type="number" pos:start="7:16" pos:end="7:16">3</literal></expr>)</condition> <block pos:start="7:19" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:15">

        <expr_stmt pos:start="9:9" pos:end="9:32"><expr pos:start="9:9" pos:end="9:31"><call pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:28">unallocated_encoding</name><argument_list pos:start="9:29" pos:end="9:31">(<argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="17:5" pos:end="41:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">op2</name></expr>)</condition> <block pos:start="17:18" pos:end="41:5">{<block_content pos:start="19:5" pos:end="39:15">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">2</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:23">/* CLREX */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><call pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:17">gen_clrex</name><argument_list pos:start="21:18" pos:end="21:26">(<argument pos:start="21:19" pos:end="21:19"><expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">s</name></expr></argument>, <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">4</literal></expr>:</case> <comment type="block" pos:start="25:13" pos:end="25:21">/* DSB */</comment>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">5</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:21">/* DMB */</comment>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">6</literal></expr>:</case> <comment type="block" pos:start="29:13" pos:end="29:21">/* ISB */</comment>

        <comment type="block" pos:start="31:9" pos:end="31:60">/* We don't emulate caches so barriers are no-ops */</comment>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:28">unallocated_encoding</name><argument_list pos:start="37:29" pos:end="37:31">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
