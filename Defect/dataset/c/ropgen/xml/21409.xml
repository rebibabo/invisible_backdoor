<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21409.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">configure_video_filters</name><parameter_list pos:start="1:35" pos:end="1:51">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:46">FilterGraph</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">fg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:15">InputStream</name>  <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ist</name> <init pos:start="5:23" pos:end="5:42">= <expr pos:start="5:25" pos:end="5:42"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">fg</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">inputs</name><index pos:start="5:35" pos:end="5:37">[<expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr>]</index></name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:42">ist</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OutputStream</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ost</name> <init pos:start="7:23" pos:end="7:43">= <expr pos:start="7:25" pos:end="7:43"><name pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:26">fg</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">outputs</name><index pos:start="7:36" pos:end="7:38">[<expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr>]</index></name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:43">ost</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFilterContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:30">in_filter</name></decl>, <decl pos:start="9:33" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:43">out_filter</name></decl>, <decl pos:start="9:46" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:21"><modifier pos:start="9:46" pos:end="9:46">*</modifier></type><name pos:start="9:47" pos:end="9:52">filter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name> <init pos:start="11:27" pos:end="11:42">= <expr pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:31">ost</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:35">st</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:42">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:73"><decl pos:start="13:5" pos:end="13:72"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">AVBufferSinkParams</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:41">buffersink_params</name> <init pos:start="13:43" pos:end="13:72">= <expr pos:start="13:45" pos:end="13:72"><call pos:start="13:45" pos:end="13:72"><name pos:start="13:45" pos:end="13:70">av_buffersink_params_alloc</name><argument_list pos:start="13:71" pos:end="13:72">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:18">pix_fmts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">AVRational</name></type> <name pos:start="17:16" pos:end="17:34">sample_aspect_ratio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:13">args</name><index pos:start="19:14" pos:end="19:18">[<expr pos:start="19:15" pos:end="19:17"><literal type="number" pos:start="19:15" pos:end="19:17">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:23">avfilter_graph_free</name><argument_list pos:start="25:24" pos:end="25:35">(<argument pos:start="25:25" pos:end="25:34"><expr pos:start="25:25" pos:end="25:34"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:34"><name pos:start="25:26" pos:end="25:27">fg</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:34">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:6">fg</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:13">graph</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:36">avfilter_graph_alloc</name><argument_list pos:start="27:37" pos:end="27:38">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:11">fg</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:18">graph</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:66"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:41">(<expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">ist</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:15">st</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:36">sample_aspect_ratio</name><operator pos:start="35:37" pos:end="35:37">.</operator><name pos:start="35:38" pos:end="35:40">num</name></name></expr>)</condition> <block pos:start="35:43" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:59">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:27">sample_aspect_ratio</name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:58"><name pos:start="37:31" pos:end="37:33">ist</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">st</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:58">sample_aspect_ratio</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:66">else<block type="pseudo" pos:start="41:9" pos:end="41:66"><block_content pos:start="41:9" pos:end="41:66">

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:27">sample_aspect_ratio</name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:65"><name pos:start="41:31" pos:end="41:33">ist</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:37">st</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:44">codec</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:65">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="49:142"><expr pos:start="45:5" pos:end="49:141"><call pos:start="45:5" pos:end="49:141"><name pos:start="45:5" pos:end="45:12">snprintf</name><argument_list pos:start="45:13" pos:end="49:141">(<argument pos:start="45:14" pos:end="45:17"><expr pos:start="45:14" pos:end="45:17"><name pos:start="45:14" pos:end="45:17">args</name></expr></argument>, <argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><literal type="number" pos:start="45:20" pos:end="45:22">255</literal></expr></argument>, <argument pos:start="45:25" pos:end="45:55"><expr pos:start="45:25" pos:end="45:55"><literal type="string" pos:start="45:25" pos:end="45:55">"%d:%d:%d:%d:%d:%d:%d:flags=%d"</literal></expr></argument>, <argument pos:start="45:58" pos:end="45:78"><expr pos:start="45:58" pos:end="45:78"><name pos:start="45:58" pos:end="45:78"><name pos:start="45:58" pos:end="45:60">ist</name><operator pos:start="45:61" pos:end="45:62">-&gt;</operator><name pos:start="45:63" pos:end="45:64">st</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:71">codec</name><operator pos:start="45:72" pos:end="45:73">-&gt;</operator><name pos:start="45:74" pos:end="45:78">width</name></name></expr></argument>,

             <argument pos:start="47:14" pos:end="47:35"><expr pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:16">ist</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:20">st</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:27">codec</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:35">height</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:60"><expr pos:start="47:38" pos:end="47:60"><name pos:start="47:38" pos:end="47:60"><name pos:start="47:38" pos:end="47:40">ist</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:44">st</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:51">codec</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:60">pix_fmt</name></name></expr></argument>, <argument pos:start="47:63" pos:end="47:63"><expr pos:start="47:63" pos:end="47:63"><literal type="number" pos:start="47:63" pos:end="47:63">1</literal></expr></argument>, <argument pos:start="47:66" pos:end="47:77"><expr pos:start="47:66" pos:end="47:77"><name pos:start="47:66" pos:end="47:77">AV_TIME_BASE</name></expr></argument>,

             <argument pos:start="49:14" pos:end="49:36"><expr pos:start="49:14" pos:end="49:36"><name pos:start="49:14" pos:end="49:36"><name pos:start="49:14" pos:end="49:32">sample_aspect_ratio</name><operator pos:start="49:33" pos:end="49:33">.</operator><name pos:start="49:34" pos:end="49:36">num</name></name></expr></argument>, <argument pos:start="49:39" pos:end="49:61"><expr pos:start="49:39" pos:end="49:61"><name pos:start="49:39" pos:end="49:61"><name pos:start="49:39" pos:end="49:57">sample_aspect_ratio</name><operator pos:start="49:58" pos:end="49:58">.</operator><name pos:start="49:59" pos:end="49:61">den</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:140"><expr pos:start="49:64" pos:end="49:140"><name pos:start="49:64" pos:end="49:75">SWS_BILINEAR</name> <operator pos:start="49:77" pos:end="49:77">+</operator> <operator pos:start="49:79" pos:end="49:79">(</operator><ternary pos:start="49:80" pos:end="49:139"><condition pos:start="49:80" pos:end="49:124"><expr pos:start="49:80" pos:end="49:122"><operator pos:start="49:80" pos:end="49:80">(</operator><name pos:start="49:81" pos:end="49:101"><name pos:start="49:81" pos:end="49:83">ist</name><operator pos:start="49:84" pos:end="49:85">-&gt;</operator><name pos:start="49:86" pos:end="49:87">st</name><operator pos:start="49:88" pos:end="49:89">-&gt;</operator><name pos:start="49:90" pos:end="49:94">codec</name><operator pos:start="49:95" pos:end="49:96">-&gt;</operator><name pos:start="49:97" pos:end="49:101">flags</name></name><operator pos:start="49:102" pos:end="49:102">&amp;</operator><name pos:start="49:103" pos:end="49:121">CODEC_FLAG_BITEXACT</name><operator pos:start="49:122" pos:end="49:122">)</operator></expr> ?</condition><then pos:start="49:126" pos:end="49:137"> <expr pos:start="49:126" pos:end="49:137"><name pos:start="49:126" pos:end="49:137">SWS_BITEXACT</name></expr></then><else pos:start="49:138" pos:end="49:139">:<expr pos:start="49:139" pos:end="49:139"><literal type="number" pos:start="49:139" pos:end="49:139">0</literal></expr></else></ternary><operator pos:start="49:140" pos:end="49:140">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:69"><expr pos:start="53:5" pos:end="57:68"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="57:68"><name pos:start="53:11" pos:end="53:38">avfilter_graph_create_filter</name><argument_list pos:start="53:39" pos:end="57:68">(<argument pos:start="53:40" pos:end="53:61"><expr pos:start="53:40" pos:end="53:61"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:53"><name pos:start="53:41" pos:end="53:42">fg</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:50">inputs</name><index pos:start="53:51" pos:end="53:53">[<expr pos:start="53:52" pos:end="53:52"><literal type="number" pos:start="53:52" pos:end="53:52">0</literal></expr>]</index></name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:61">filter</name></expr></argument>,

                                       <argument pos:start="55:40" pos:end="55:69"><expr pos:start="55:40" pos:end="55:69"><call pos:start="55:40" pos:end="55:69"><name pos:start="55:40" pos:end="55:59">avfilter_get_by_name</name><argument_list pos:start="55:60" pos:end="55:69">(<argument pos:start="55:61" pos:end="55:68"><expr pos:start="55:61" pos:end="55:68"><literal type="string" pos:start="55:61" pos:end="55:68">"buffer"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="57:40" pos:end="57:44"><expr pos:start="57:40" pos:end="57:44"><literal type="string" pos:start="57:40" pos:end="57:44">"src"</literal></expr></argument>, <argument pos:start="57:47" pos:end="57:50"><expr pos:start="57:47" pos:end="57:50"><name pos:start="57:47" pos:end="57:50">args</name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><name pos:start="57:53" pos:end="57:56">NULL</name></expr></argument>, <argument pos:start="57:59" pos:end="57:67"><expr pos:start="57:59" pos:end="57:67"><name pos:start="57:59" pos:end="57:67"><name pos:start="57:59" pos:end="57:60">fg</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:67">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="66:0"><if pos:start="59:5" pos:end="66:0">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="66:0"><block_content pos:start="61:9" pos:end="66:0">

        <return pos:start="61:9" pos:end="66:0">return <expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="65:1" pos:end="65:24">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:24">FF_API_OLD_VSINK_API</name></expr></cpp:if>

    <expr_stmt pos:start="67:5" pos:end="74:0"><expr pos:start="67:5" pos:end="71:68"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="71:68"><name pos:start="67:11" pos:end="67:38">avfilter_graph_create_filter</name><argument_list pos:start="67:39" pos:end="71:68">(<argument pos:start="67:40" pos:end="67:62"><expr pos:start="67:40" pos:end="67:62"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:54"><name pos:start="67:41" pos:end="67:42">fg</name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:51">outputs</name><index pos:start="67:52" pos:end="67:54">[<expr pos:start="67:53" pos:end="67:53"><literal type="number" pos:start="67:53" pos:end="67:53">0</literal></expr>]</index></name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:62">filter</name></expr></argument>,

                                       <argument pos:start="69:40" pos:end="69:73"><expr pos:start="69:40" pos:end="69:73"><call pos:start="69:40" pos:end="69:73"><name pos:start="69:40" pos:end="69:59">avfilter_get_by_name</name><argument_list pos:start="69:60" pos:end="69:73">(<argument pos:start="69:61" pos:end="69:72"><expr pos:start="69:61" pos:end="69:72"><literal type="string" pos:start="69:61" pos:end="69:72">"buffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><literal type="string" pos:start="71:40" pos:end="71:44">"out"</literal></expr></argument>, <argument pos:start="71:47" pos:end="71:50"><expr pos:start="71:47" pos:end="71:50"><name pos:start="71:47" pos:end="71:50">NULL</name></expr></argument>, <argument pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><name pos:start="71:53" pos:end="71:56">NULL</name></expr></argument>, <argument pos:start="71:59" pos:end="71:67"><expr pos:start="71:59" pos:end="71:67"><name pos:start="71:59" pos:end="71:67"><name pos:start="71:59" pos:end="71:60">fg</name><operator pos:start="71:61" pos:end="71:62">-&gt;</operator><name pos:start="71:63" pos:end="71:67">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="73:1" pos:end="73:5">#<cpp:directive pos:start="73:2" pos:end="73:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="75:5" pos:end="82:0"><expr pos:start="75:5" pos:end="79:81"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="79:81"><name pos:start="75:11" pos:end="75:38">avfilter_graph_create_filter</name><argument_list pos:start="75:39" pos:end="79:81">(<argument pos:start="75:40" pos:end="75:62"><expr pos:start="75:40" pos:end="75:62"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:54"><name pos:start="75:41" pos:end="75:42">fg</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:51">outputs</name><index pos:start="75:52" pos:end="75:54">[<expr pos:start="75:53" pos:end="75:53"><literal type="number" pos:start="75:53" pos:end="75:53">0</literal></expr>]</index></name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:62">filter</name></expr></argument>,

                                       <argument pos:start="77:40" pos:end="77:73"><expr pos:start="77:40" pos:end="77:73"><call pos:start="77:40" pos:end="77:73"><name pos:start="77:40" pos:end="77:59">avfilter_get_by_name</name><argument_list pos:start="77:60" pos:end="77:73">(<argument pos:start="77:61" pos:end="77:72"><expr pos:start="77:61" pos:end="77:72"><literal type="string" pos:start="77:61" pos:end="77:72">"buffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="79:40" pos:end="79:44"><expr pos:start="79:40" pos:end="79:44"><literal type="string" pos:start="79:40" pos:end="79:44">"out"</literal></expr></argument>, <argument pos:start="79:47" pos:end="79:50"><expr pos:start="79:47" pos:end="79:50"><name pos:start="79:47" pos:end="79:50">NULL</name></expr></argument>, <argument pos:start="79:53" pos:end="79:69"><expr pos:start="79:53" pos:end="79:69"><name pos:start="79:53" pos:end="79:69">buffersink_params</name></expr></argument>, <argument pos:start="79:72" pos:end="79:80"><expr pos:start="79:72" pos:end="79:80"><name pos:start="79:72" pos:end="79:80"><name pos:start="79:72" pos:end="79:73">fg</name><operator pos:start="79:74" pos:end="79:75">-&gt;</operator><name pos:start="79:76" pos:end="79:80">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><call pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:12">av_freep</name><argument_list pos:start="83:13" pos:end="83:32">(<argument pos:start="83:14" pos:end="83:31"><expr pos:start="83:14" pos:end="83:31"><operator pos:start="83:14" pos:end="83:14">&amp;</operator><name pos:start="83:15" pos:end="83:31">buffersink_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="89:19"><if pos:start="87:5" pos:end="89:19">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <literal type="number" pos:start="87:15" pos:end="87:15">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:19"><block_content pos:start="89:9" pos:end="89:19">

        <return pos:start="89:9" pos:end="89:19">return <expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:13">in_filter</name>  <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:30"><name pos:start="91:18" pos:end="91:19">fg</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:27">inputs</name><index pos:start="91:28" pos:end="91:30">[<expr pos:start="91:29" pos:end="91:29"><literal type="number" pos:start="91:29" pos:end="91:29">0</literal></expr>]</index></name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:38">filter</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:40"><expr pos:start="93:5" pos:end="93:39"><name pos:start="93:5" pos:end="93:14">out_filter</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:31"><name pos:start="93:18" pos:end="93:19">fg</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:28">outputs</name><index pos:start="93:29" pos:end="93:31">[<expr pos:start="93:30" pos:end="93:30"><literal type="number" pos:start="93:30" pos:end="93:30">0</literal></expr>]</index></name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:39">filter</name></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="119:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:38">(<expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:13">codec</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:20">width</name></name> <operator pos:start="97:22" pos:end="97:23">||</operator> <name pos:start="97:25" pos:end="97:37"><name pos:start="97:25" pos:end="97:29">codec</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:37">height</name></name></expr>)</condition> <block pos:start="97:40" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:27">

        <expr_stmt pos:start="99:9" pos:end="105:43"><expr pos:start="99:9" pos:end="105:42"><call pos:start="99:9" pos:end="105:42"><name pos:start="99:9" pos:end="99:16">snprintf</name><argument_list pos:start="99:17" pos:end="105:42">(<argument pos:start="99:18" pos:end="99:21"><expr pos:start="99:18" pos:end="99:21"><name pos:start="99:18" pos:end="99:21">args</name></expr></argument>, <argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><literal type="number" pos:start="99:24" pos:end="99:26">255</literal></expr></argument>, <argument pos:start="99:29" pos:end="99:46"><expr pos:start="99:29" pos:end="99:46"><literal type="string" pos:start="99:29" pos:end="99:46">"%d:%d:flags=0x%X"</literal></expr></argument>,

                 <argument pos:start="101:18" pos:end="101:29"><expr pos:start="101:18" pos:end="101:29"><name pos:start="101:18" pos:end="101:29"><name pos:start="101:18" pos:end="101:22">codec</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:29">width</name></name></expr></argument>,

                 <argument pos:start="103:18" pos:end="103:30"><expr pos:start="103:18" pos:end="103:30"><name pos:start="103:18" pos:end="103:30"><name pos:start="103:18" pos:end="103:22">codec</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:30">height</name></name></expr></argument>,

                 <argument pos:start="105:18" pos:end="105:41"><expr pos:start="105:18" pos:end="105:41"><operator pos:start="105:18" pos:end="105:18">(</operator><name pos:start="105:19" pos:end="105:26">unsigned</name><operator pos:start="105:27" pos:end="105:27">)</operator><name pos:start="105:28" pos:end="105:41"><name pos:start="105:28" pos:end="105:30">ost</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:41">sws_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="111:23"><if pos:start="107:9" pos:end="111:23">if <condition pos:start="107:12" pos:end="109:82">(<expr pos:start="107:13" pos:end="109:81"><operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:16">ret</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="109:76"><name pos:start="107:20" pos:end="107:47">avfilter_graph_create_filter</name><argument_list pos:start="107:48" pos:end="109:76">(<argument pos:start="107:49" pos:end="107:55"><expr pos:start="107:49" pos:end="107:55"><operator pos:start="107:49" pos:end="107:49">&amp;</operator><name pos:start="107:50" pos:end="107:55">filter</name></expr></argument>, <argument pos:start="107:58" pos:end="107:86"><expr pos:start="107:58" pos:end="107:86"><call pos:start="107:58" pos:end="107:86"><name pos:start="107:58" pos:end="107:77">avfilter_get_by_name</name><argument_list pos:start="107:78" pos:end="107:86">(<argument pos:start="107:79" pos:end="107:85"><expr pos:start="107:79" pos:end="107:85"><literal type="string" pos:start="107:79" pos:end="107:85">"scale"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="109:49" pos:end="109:52"><expr pos:start="109:49" pos:end="109:52"><name pos:start="109:49" pos:end="109:52">NULL</name></expr></argument>, <argument pos:start="109:55" pos:end="109:58"><expr pos:start="109:55" pos:end="109:58"><name pos:start="109:55" pos:end="109:58">args</name></expr></argument>, <argument pos:start="109:61" pos:end="109:64"><expr pos:start="109:61" pos:end="109:64"><name pos:start="109:61" pos:end="109:64">NULL</name></expr></argument>, <argument pos:start="109:67" pos:end="109:75"><expr pos:start="109:67" pos:end="109:75"><name pos:start="109:67" pos:end="109:75"><name pos:start="109:67" pos:end="109:68">fg</name><operator pos:start="109:69" pos:end="109:70">-&gt;</operator><name pos:start="109:71" pos:end="109:75">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="109:77" pos:end="109:77">)</operator> <operator pos:start="109:79" pos:end="109:79">&lt;</operator> <literal type="number" pos:start="109:81" pos:end="109:81">0</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:23"><block_content pos:start="111:13" pos:end="111:23">

            <return pos:start="111:13" pos:end="111:23">return <expr pos:start="111:20" pos:end="111:22"><name pos:start="111:20" pos:end="111:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="115:23"><if pos:start="113:9" pos:end="115:23">if <condition pos:start="113:12" pos:end="113:63">(<expr pos:start="113:13" pos:end="113:62"><operator pos:start="113:13" pos:end="113:13">(</operator><name pos:start="113:14" pos:end="113:16">ret</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:57"><name pos:start="113:20" pos:end="113:32">avfilter_link</name><argument_list pos:start="113:33" pos:end="113:57">(<argument pos:start="113:34" pos:end="113:42"><expr pos:start="113:34" pos:end="113:42"><name pos:start="113:34" pos:end="113:42">in_filter</name></expr></argument>, <argument pos:start="113:45" pos:end="113:45"><expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">0</literal></expr></argument>, <argument pos:start="113:48" pos:end="113:53"><expr pos:start="113:48" pos:end="113:53"><name pos:start="113:48" pos:end="113:53">filter</name></expr></argument>, <argument pos:start="113:56" pos:end="113:56"><expr pos:start="113:56" pos:end="113:56"><literal type="number" pos:start="113:56" pos:end="113:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="113:58" pos:end="113:58">)</operator> <operator pos:start="113:60" pos:end="113:60">&lt;</operator> <literal type="number" pos:start="113:62" pos:end="113:62">0</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:23"><block_content pos:start="115:13" pos:end="115:23">

            <return pos:start="115:13" pos:end="115:23">return <expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:17">in_filter</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:26">filter</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="145:5"><if pos:start="123:5" pos:end="145:5">if <condition pos:start="123:8" pos:end="123:44">(<expr pos:start="123:9" pos:end="123:43"><operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:17">pix_fmts</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:42"><name pos:start="123:21" pos:end="123:37">choose_pixel_fmts</name><argument_list pos:start="123:38" pos:end="123:42">(<argument pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:41">ost</name></expr></argument>)</argument_list></call><operator pos:start="123:43" pos:end="123:43">)</operator></expr>)</condition> <block pos:start="123:46" pos:end="145:5">{<block_content pos:start="125:9" pos:end="143:28">

        <if_stmt pos:start="125:9" pos:end="133:23"><if pos:start="125:9" pos:end="133:23">if <condition pos:start="125:12" pos:end="131:64">(<expr pos:start="125:13" pos:end="131:63"><operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:16">ret</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <call pos:start="125:20" pos:end="131:58"><name pos:start="125:20" pos:end="125:47">avfilter_graph_create_filter</name><argument_list pos:start="125:48" pos:end="131:58">(<argument pos:start="125:49" pos:end="125:55"><expr pos:start="125:49" pos:end="125:55"><operator pos:start="125:49" pos:end="125:49">&amp;</operator><name pos:start="125:50" pos:end="125:55">filter</name></expr></argument>,

                                                <argument pos:start="127:49" pos:end="127:78"><expr pos:start="127:49" pos:end="127:78"><call pos:start="127:49" pos:end="127:78"><name pos:start="127:49" pos:end="127:68">avfilter_get_by_name</name><argument_list pos:start="127:69" pos:end="127:78">(<argument pos:start="127:70" pos:end="127:77"><expr pos:start="127:70" pos:end="127:77"><literal type="string" pos:start="127:70" pos:end="127:77">"format"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="129:49" pos:end="129:56"><expr pos:start="129:49" pos:end="129:56"><literal type="string" pos:start="129:49" pos:end="129:56">"format"</literal></expr></argument>, <argument pos:start="129:59" pos:end="129:66"><expr pos:start="129:59" pos:end="129:66"><name pos:start="129:59" pos:end="129:66">pix_fmts</name></expr></argument>, <argument pos:start="129:69" pos:end="129:72"><expr pos:start="129:69" pos:end="129:72"><name pos:start="129:69" pos:end="129:72">NULL</name></expr></argument>,

                                                <argument pos:start="131:49" pos:end="131:57"><expr pos:start="131:49" pos:end="131:57"><name pos:start="131:49" pos:end="131:57"><name pos:start="131:49" pos:end="131:50">fg</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:57">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="131:59" pos:end="131:59">)</operator> <operator pos:start="131:61" pos:end="131:61">&lt;</operator> <literal type="number" pos:start="131:63" pos:end="131:63">0</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:23"><block_content pos:start="133:13" pos:end="133:23">

            <return pos:start="133:13" pos:end="133:23">return <expr pos:start="133:20" pos:end="133:22"><name pos:start="133:20" pos:end="133:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="135:9" pos:end="137:23"><if pos:start="135:9" pos:end="137:23">if <condition pos:start="135:12" pos:end="135:64">(<expr pos:start="135:13" pos:end="135:63"><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:16">ret</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:58"><name pos:start="135:20" pos:end="135:32">avfilter_link</name><argument_list pos:start="135:33" pos:end="135:58">(<argument pos:start="135:34" pos:end="135:39"><expr pos:start="135:34" pos:end="135:39"><name pos:start="135:34" pos:end="135:39">filter</name></expr></argument>, <argument pos:start="135:42" pos:end="135:42"><expr pos:start="135:42" pos:end="135:42"><literal type="number" pos:start="135:42" pos:end="135:42">0</literal></expr></argument>, <argument pos:start="135:45" pos:end="135:54"><expr pos:start="135:45" pos:end="135:54"><name pos:start="135:45" pos:end="135:54">out_filter</name></expr></argument>, <argument pos:start="135:57" pos:end="135:57"><expr pos:start="135:57" pos:end="135:57"><literal type="number" pos:start="135:57" pos:end="135:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="135:59" pos:end="135:59">)</operator> <operator pos:start="135:61" pos:end="135:61">&lt;</operator> <literal type="number" pos:start="135:63" pos:end="135:63">0</literal></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:23"><block_content pos:start="137:13" pos:end="137:23">

            <return pos:start="137:13" pos:end="137:23">return <expr pos:start="137:20" pos:end="137:22"><name pos:start="137:20" pos:end="137:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:18">out_filter</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <name pos:start="141:22" pos:end="141:27">filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:28"><expr pos:start="143:9" pos:end="143:27"><call pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:16">av_freep</name><argument_list pos:start="143:17" pos:end="143:27">(<argument pos:start="143:18" pos:end="143:26"><expr pos:start="143:18" pos:end="143:26"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:26">pix_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:73"><expr pos:start="149:5" pos:end="149:72"><call pos:start="149:5" pos:end="149:72"><name pos:start="149:5" pos:end="149:12">snprintf</name><argument_list pos:start="149:13" pos:end="149:72">(<argument pos:start="149:14" pos:end="149:17"><expr pos:start="149:14" pos:end="149:17"><name pos:start="149:14" pos:end="149:17">args</name></expr></argument>, <argument pos:start="149:20" pos:end="149:31"><expr pos:start="149:20" pos:end="149:31"><sizeof pos:start="149:20" pos:end="149:31">sizeof<argument_list pos:start="149:26" pos:end="149:31">(<argument pos:start="149:27" pos:end="149:30"><expr pos:start="149:27" pos:end="149:30"><name pos:start="149:27" pos:end="149:30">args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="149:34" pos:end="149:45"><expr pos:start="149:34" pos:end="149:45"><literal type="string" pos:start="149:34" pos:end="149:45">"flags=0x%X"</literal></expr></argument>, <argument pos:start="149:48" pos:end="149:71"><expr pos:start="149:48" pos:end="149:71"><operator pos:start="149:48" pos:end="149:48">(</operator><name pos:start="149:49" pos:end="149:56">unsigned</name><operator pos:start="149:57" pos:end="149:57">)</operator><name pos:start="149:58" pos:end="149:71"><name pos:start="149:58" pos:end="149:60">ost</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:71">sws_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:48"><expr pos:start="151:5" pos:end="151:47"><name pos:start="151:5" pos:end="151:29"><name pos:start="151:5" pos:end="151:6">fg</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:13">graph</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:29">scale_sws_opts</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:47"><name pos:start="151:33" pos:end="151:41">av_strdup</name><argument_list pos:start="151:42" pos:end="151:47">(<argument pos:start="151:43" pos:end="151:46"><expr pos:start="151:43" pos:end="151:46"><name pos:start="151:43" pos:end="151:46">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="195:5"><if pos:start="155:5" pos:end="189:5">if <condition pos:start="155:8" pos:end="155:22">(<expr pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:11">ost</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:21">avfilter</name></name></expr>)</condition> <block pos:start="155:24" pos:end="189:5">{<block_content pos:start="157:9" pos:end="187:33">

        <decl_stmt pos:start="157:9" pos:end="157:56"><decl pos:start="157:9" pos:end="157:55"><type pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:21">AVFilterInOut</name> <modifier pos:start="157:23" pos:end="157:23">*</modifier></type><name pos:start="157:24" pos:end="157:30">outputs</name> <init pos:start="157:32" pos:end="157:55">= <expr pos:start="157:34" pos:end="157:55"><call pos:start="157:34" pos:end="157:55"><name pos:start="157:34" pos:end="157:53">avfilter_inout_alloc</name><argument_list pos:start="157:54" pos:end="157:55">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="159:56"><decl pos:start="159:9" pos:end="159:55"><type pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:21">AVFilterInOut</name> <modifier pos:start="159:23" pos:end="159:23">*</modifier></type><name pos:start="159:24" pos:end="159:29">inputs</name>  <init pos:start="159:32" pos:end="159:55">= <expr pos:start="159:34" pos:end="159:55"><call pos:start="159:34" pos:end="159:55"><name pos:start="159:34" pos:end="159:53">avfilter_inout_alloc</name><argument_list pos:start="159:54" pos:end="159:55">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:43"><expr pos:start="163:9" pos:end="163:42"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:15">outputs</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:21">name</name></name>    <operator pos:start="163:26" pos:end="163:26">=</operator> <call pos:start="163:28" pos:end="163:42"><name pos:start="163:28" pos:end="163:36">av_strdup</name><argument_list pos:start="163:37" pos:end="163:42">(<argument pos:start="163:38" pos:end="163:41"><expr pos:start="163:38" pos:end="163:41"><literal type="string" pos:start="163:38" pos:end="163:41">"in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:40"><expr pos:start="165:9" pos:end="165:39"><name pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:15">outputs</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:27">filter_ctx</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:39">in_filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:29"><expr pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:15">outputs</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:24">pad_idx</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:32"><expr pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:15">outputs</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:21">next</name></name>    <operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:31">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:43"><expr pos:start="173:9" pos:end="173:42"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:14">inputs</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:20">name</name></name>    <operator pos:start="173:25" pos:end="173:25">=</operator> <call pos:start="173:27" pos:end="173:42"><name pos:start="173:27" pos:end="173:35">av_strdup</name><argument_list pos:start="173:36" pos:end="173:42">(<argument pos:start="173:37" pos:end="173:41"><expr pos:start="173:37" pos:end="173:41"><literal type="string" pos:start="173:37" pos:end="173:41">"out"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:40"><expr pos:start="175:9" pos:end="175:39"><name pos:start="175:9" pos:end="175:26"><name pos:start="175:9" pos:end="175:14">inputs</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:26">filter_ctx</name></name> <operator pos:start="175:28" pos:end="175:28">=</operator> <name pos:start="175:30" pos:end="175:39">out_filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:28"><expr pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:23"><name pos:start="177:9" pos:end="177:14">inputs</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:23">pad_idx</name></name> <operator pos:start="177:25" pos:end="177:25">=</operator> <literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:31"><expr pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:20"><name pos:start="179:9" pos:end="179:14">inputs</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:20">next</name></name>    <operator pos:start="179:25" pos:end="179:25">=</operator> <name pos:start="179:27" pos:end="179:30">NULL</name></expr>;</expr_stmt>



        <if_stmt pos:start="183:9" pos:end="185:23"><if pos:start="183:9" pos:end="185:23">if <condition pos:start="183:12" pos:end="183:96">(<expr pos:start="183:13" pos:end="183:95"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:16">ret</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="183:90"><name pos:start="183:20" pos:end="183:39">avfilter_graph_parse</name><argument_list pos:start="183:40" pos:end="183:90">(<argument pos:start="183:41" pos:end="183:49"><expr pos:start="183:41" pos:end="183:49"><name pos:start="183:41" pos:end="183:49"><name pos:start="183:41" pos:end="183:42">fg</name><operator pos:start="183:43" pos:end="183:44">-&gt;</operator><name pos:start="183:45" pos:end="183:49">graph</name></name></expr></argument>, <argument pos:start="183:52" pos:end="183:64"><expr pos:start="183:52" pos:end="183:64"><name pos:start="183:52" pos:end="183:64"><name pos:start="183:52" pos:end="183:54">ost</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:64">avfilter</name></name></expr></argument>, <argument pos:start="183:67" pos:end="183:73"><expr pos:start="183:67" pos:end="183:73"><operator pos:start="183:67" pos:end="183:67">&amp;</operator><name pos:start="183:68" pos:end="183:73">inputs</name></expr></argument>, <argument pos:start="183:76" pos:end="183:83"><expr pos:start="183:76" pos:end="183:83"><operator pos:start="183:76" pos:end="183:76">&amp;</operator><name pos:start="183:77" pos:end="183:83">outputs</name></expr></argument>, <argument pos:start="183:86" pos:end="183:89"><expr pos:start="183:86" pos:end="183:89"><name pos:start="183:86" pos:end="183:89">NULL</name></expr></argument>)</argument_list></call><operator pos:start="183:91" pos:end="183:91">)</operator> <operator pos:start="183:93" pos:end="183:93">&lt;</operator> <literal type="number" pos:start="183:95" pos:end="183:95">0</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:23"><block_content pos:start="185:13" pos:end="185:23">

            <return pos:start="185:13" pos:end="185:23">return <expr pos:start="185:20" pos:end="185:22"><name pos:start="185:20" pos:end="185:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:33"><expr pos:start="187:9" pos:end="187:32"><call pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:16">av_freep</name><argument_list pos:start="187:17" pos:end="187:32">(<argument pos:start="187:18" pos:end="187:31"><expr pos:start="187:18" pos:end="187:31"><operator pos:start="187:18" pos:end="187:18">&amp;</operator><name pos:start="187:19" pos:end="187:31"><name pos:start="187:19" pos:end="187:21">ost</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:31">avfilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="195:5">else <block pos:start="189:12" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:23">

        <if_stmt pos:start="191:9" pos:end="193:23"><if pos:start="191:9" pos:end="193:23">if <condition pos:start="191:12" pos:end="191:67">(<expr pos:start="191:13" pos:end="191:66"><operator pos:start="191:13" pos:end="191:13">(</operator><name pos:start="191:14" pos:end="191:16">ret</name> <operator pos:start="191:18" pos:end="191:18">=</operator> <call pos:start="191:20" pos:end="191:61"><name pos:start="191:20" pos:end="191:32">avfilter_link</name><argument_list pos:start="191:33" pos:end="191:61">(<argument pos:start="191:34" pos:end="191:42"><expr pos:start="191:34" pos:end="191:42"><name pos:start="191:34" pos:end="191:42">in_filter</name></expr></argument>, <argument pos:start="191:45" pos:end="191:45"><expr pos:start="191:45" pos:end="191:45"><literal type="number" pos:start="191:45" pos:end="191:45">0</literal></expr></argument>, <argument pos:start="191:48" pos:end="191:57"><expr pos:start="191:48" pos:end="191:57"><name pos:start="191:48" pos:end="191:57">out_filter</name></expr></argument>, <argument pos:start="191:60" pos:end="191:60"><expr pos:start="191:60" pos:end="191:60"><literal type="number" pos:start="191:60" pos:end="191:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="191:62" pos:end="191:62">)</operator> <operator pos:start="191:64" pos:end="191:64">&lt;</operator> <literal type="number" pos:start="191:66" pos:end="191:66">0</literal></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:23"><block_content pos:start="193:13" pos:end="193:23">

            <return pos:start="193:13" pos:end="193:23">return <expr pos:start="193:20" pos:end="193:22"><name pos:start="193:20" pos:end="193:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="199:5" pos:end="203:68"><if pos:start="199:5" pos:end="203:68">if <condition pos:start="199:8" pos:end="199:26">(<expr pos:start="199:9" pos:end="199:25"><name pos:start="199:9" pos:end="199:25"><name pos:start="199:9" pos:end="199:11">ost</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:25">keep_pix_fmt</name></name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="203:68"><block_content pos:start="201:9" pos:end="203:68">

        <expr_stmt pos:start="201:9" pos:end="203:68"><expr pos:start="201:9" pos:end="203:67"><call pos:start="201:9" pos:end="203:67"><name pos:start="201:9" pos:end="201:39">avfilter_graph_set_auto_convert</name><argument_list pos:start="201:40" pos:end="203:67">(<argument pos:start="201:41" pos:end="201:49"><expr pos:start="201:41" pos:end="201:49"><name pos:start="201:41" pos:end="201:49"><name pos:start="201:41" pos:end="201:42">fg</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:49">graph</name></name></expr></argument>,

                                        <argument pos:start="203:41" pos:end="203:66"><expr pos:start="203:41" pos:end="203:66"><name pos:start="203:41" pos:end="203:66">AVFILTER_AUTO_CONVERT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="209:19"><if pos:start="207:5" pos:end="209:19">if <condition pos:start="207:8" pos:end="207:59">(<expr pos:start="207:9" pos:end="207:58"><operator pos:start="207:9" pos:end="207:9">(</operator><name pos:start="207:10" pos:end="207:12">ret</name> <operator pos:start="207:14" pos:end="207:14">=</operator> <call pos:start="207:16" pos:end="207:53"><name pos:start="207:16" pos:end="207:36">avfilter_graph_config</name><argument_list pos:start="207:37" pos:end="207:53">(<argument pos:start="207:38" pos:end="207:46"><expr pos:start="207:38" pos:end="207:46"><name pos:start="207:38" pos:end="207:46"><name pos:start="207:38" pos:end="207:39">fg</name><operator pos:start="207:40" pos:end="207:41">-&gt;</operator><name pos:start="207:42" pos:end="207:46">graph</name></name></expr></argument>, <argument pos:start="207:49" pos:end="207:52"><expr pos:start="207:49" pos:end="207:52"><name pos:start="207:49" pos:end="207:52">NULL</name></expr></argument>)</argument_list></call><operator pos:start="207:54" pos:end="207:54">)</operator> <operator pos:start="207:56" pos:end="207:56">&lt;</operator> <literal type="number" pos:start="207:58" pos:end="207:58">0</literal></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:19"><block_content pos:start="209:9" pos:end="209:19">

        <return pos:start="209:9" pos:end="209:19">return <expr pos:start="209:16" pos:end="209:18"><name pos:start="209:16" pos:end="209:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:33"><expr pos:start="213:5" pos:end="213:32"><name pos:start="213:5" pos:end="213:15"><name pos:start="213:5" pos:end="213:7">ost</name><operator pos:start="213:8" pos:end="213:9">-&gt;</operator><name pos:start="213:10" pos:end="213:15">filter</name></name> <operator pos:start="213:17" pos:end="213:17">=</operator> <name pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:20">fg</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:29">outputs</name><index pos:start="213:30" pos:end="213:32">[<expr pos:start="213:31" pos:end="213:31"><literal type="number" pos:start="213:31" pos:end="213:31">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
