<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21617.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">ide_atapi_cmd_reply</name><parameter_list pos:start="1:32" pos:end="1:68">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:40">IDEState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">size</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:67">max_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <if_stmt pos:start="5:5" pos:end="7:24"><if pos:start="5:5" pos:end="7:24">if <condition pos:start="5:8" pos:end="5:24">(<expr pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:12">size</name> <operator pos:start="5:14" pos:end="5:14">&gt;</operator> <name pos:start="5:16" pos:end="5:23">max_size</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:24"><block_content pos:start="7:9" pos:end="7:24">

        <expr_stmt pos:start="7:9" pos:end="7:24"><expr pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:12">size</name> <operator pos:start="7:14" pos:end="7:14">=</operator> <name pos:start="7:16" pos:end="7:23">max_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:16"><expr pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:10">lba</name></name> <operator pos:start="9:12" pos:end="9:12">=</operator> <operator pos:start="9:14" pos:end="9:14">-</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="9:18" pos:end="9:37">/* no sector read */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:27">packet_transfer_size</name></name> <operator pos:start="11:29" pos:end="11:29">=</operator> <name pos:start="11:31" pos:end="11:34">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:21">io_buffer_size</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:28">size</name></expr>;</expr_stmt>    <comment type="block" pos:start="13:34" pos:end="13:76">/* dma: send the reply data as one chunk */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:31">elementary_transfer_size</name></name> <operator pos:start="15:33" pos:end="15:33">=</operator> <literal type="number" pos:start="15:35" pos:end="15:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">io_buffer_index</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">atapi_dma</name></name></expr>)</condition> <block pos:start="21:23" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:52">

        <expr_stmt pos:start="23:9" pos:end="25:42"><expr pos:start="23:9" pos:end="25:41"><call pos:start="23:9" pos:end="25:41"><name pos:start="23:9" pos:end="23:24">block_acct_start</name><argument_list pos:start="23:25" pos:end="25:41">(<argument pos:start="23:26" pos:end="23:46"><expr pos:start="23:26" pos:end="23:46"><call pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:39">bdrv_get_stats</name><argument_list pos:start="23:40" pos:end="23:46">(<argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:41">s</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:45">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:49" pos:end="23:56"><expr pos:start="23:49" pos:end="23:56"><operator pos:start="23:49" pos:end="23:49">&amp;</operator><name pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:50">s</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:56">acct</name></name></expr></argument>, <argument pos:start="23:59" pos:end="23:62"><expr pos:start="23:59" pos:end="23:62"><name pos:start="23:59" pos:end="23:62">size</name></expr></argument>,

                         <argument pos:start="25:26" pos:end="25:40"><expr pos:start="25:26" pos:end="25:40"><name pos:start="25:26" pos:end="25:40">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">status</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:30">READY_STAT</name> <operator pos:start="27:32" pos:end="27:32">|</operator> <name pos:start="27:34" pos:end="27:42">SEEK_STAT</name> <operator pos:start="27:44" pos:end="27:44">|</operator> <name pos:start="27:46" pos:end="27:53">DRQ_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:21">ide_start_dma</name><argument_list pos:start="29:22" pos:end="29:51">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">s</name></expr></argument>, <argument pos:start="29:26" pos:end="29:50"><expr pos:start="29:26" pos:end="29:50"><name pos:start="29:26" pos:end="29:50">ide_atapi_cmd_read_dma_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">status</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:30">READY_STAT</name> <operator pos:start="33:32" pos:end="33:32">|</operator> <name pos:start="33:34" pos:end="33:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:31">ide_atapi_cmd_reply_end</name><argument_list pos:start="35:32" pos:end="35:34">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
