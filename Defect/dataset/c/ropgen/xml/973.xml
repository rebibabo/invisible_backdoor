<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/973.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:27">ff_vp9dsp_init</name><parameter_list pos:start="1:28" pos:end="1:56">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:41">VP9DSPContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">dsp</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">bpp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:49">

    <if_stmt pos:start="5:5" pos:end="19:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:17">(<expr pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:11">bpp</name> <operator pos:start="5:13" pos:end="5:14">==</operator> <literal type="number" pos:start="5:16" pos:end="5:16">8</literal></expr>)</condition> <block pos:start="5:19" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:30">

        <expr_stmt pos:start="7:9" pos:end="7:30"><expr pos:start="7:9" pos:end="7:29"><call pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:24">ff_vp9dsp_init_8</name><argument_list pos:start="7:25" pos:end="7:29">(<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="9:7" pos:end="13:5">else if <condition pos:start="9:15" pos:end="9:25">(<expr pos:start="9:16" pos:end="9:24"><name pos:start="9:16" pos:end="9:18">bpp</name> <operator pos:start="9:20" pos:end="9:21">==</operator> <literal type="number" pos:start="9:23" pos:end="9:24">10</literal></expr>)</condition> <block pos:start="9:27" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:31">

        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:25">ff_vp9dsp_init_10</name><argument_list pos:start="11:26" pos:end="11:30">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="19:5">else <block pos:start="13:12" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:18">av_assert0</name><argument_list pos:start="15:19" pos:end="15:29">(<argument pos:start="15:20" pos:end="15:28"><expr pos:start="15:20" pos:end="15:28"><name pos:start="15:20" pos:end="15:22">bpp</name> <operator pos:start="15:24" pos:end="15:25">==</operator> <literal type="number" pos:start="15:27" pos:end="15:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><call pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:25">ff_vp9dsp_init_12</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="23:5" pos:end="23:47"><if pos:start="23:5" pos:end="23:47">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="23:19" pos:end="23:47"><block_content pos:start="23:19" pos:end="23:47"> <expr_stmt pos:start="23:19" pos:end="23:47"><expr pos:start="23:19" pos:end="23:46"><call pos:start="23:19" pos:end="23:46"><name pos:start="23:19" pos:end="23:36">ff_vp9dsp_init_x86</name><argument_list pos:start="23:37" pos:end="23:46">(<argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><name pos:start="23:38" pos:end="23:40">dsp</name></expr></argument>, <argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="25:49"><if pos:start="25:5" pos:end="25:49">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:17">ARCH_MIPS</name></expr>)</condition><block type="pseudo" pos:start="25:20" pos:end="25:49"><block_content pos:start="25:20" pos:end="25:49"> <expr_stmt pos:start="25:20" pos:end="25:49"><expr pos:start="25:20" pos:end="25:48"><call pos:start="25:20" pos:end="25:48"><name pos:start="25:20" pos:end="25:38">ff_vp9dsp_init_mips</name><argument_list pos:start="25:39" pos:end="25:48">(<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:42">dsp</name></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
