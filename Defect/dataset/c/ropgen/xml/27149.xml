<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27149.c" pos:tabs="8"><function pos:start="1:1" pos:end="46:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">load_refcount_block</name><parameter_list pos:start="1:31" pos:end="3:61">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:60"><decl pos:start="3:32" pos:end="3:60"><type pos:start="3:32" pos:end="3:60"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:60">refcount_block_offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="46:1">{<block_content pos:start="7:5" pos:end="44:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:30">cache_refcount_updates</name></expr>)</condition> <block pos:start="13:33" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:9">

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:38"><name pos:start="15:15" pos:end="15:34">write_refcount_block</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:16">BLKDBG_EVENT</name><argument_list pos:start="27:17" pos:end="27:48">(<argument pos:start="27:18" pos:end="27:25"><expr pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:19">bs</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">file</name></name></expr></argument>, <argument pos:start="27:28" pos:end="27:47"><expr pos:start="27:28" pos:end="27:47"><name pos:start="27:28" pos:end="27:47">BLKDBG_REFBLOCK_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:38"><expr pos:start="29:5" pos:end="31:37"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="31:37"><name pos:start="29:11" pos:end="29:20">bdrv_pread</name><argument_list pos:start="29:21" pos:end="31:37">(<argument pos:start="29:22" pos:end="29:29"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:23">bs</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:29">file</name></name></expr></argument>, <argument pos:start="29:32" pos:end="29:52"><expr pos:start="29:32" pos:end="29:52"><name pos:start="29:32" pos:end="29:52">refcount_block_offset</name></expr></argument>, <argument pos:start="29:55" pos:end="29:77"><expr pos:start="29:55" pos:end="29:77"><name pos:start="29:55" pos:end="29:77"><name pos:start="29:55" pos:end="29:55">s</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:77">refcount_block_cache</name></name></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:36"><expr pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="38:5"><if pos:start="33:5" pos:end="38:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="38:5">{<block_content pos:start="36:9" pos:end="36:19">


        <return pos:start="36:9" pos:end="36:19">return <expr pos:start="36:16" pos:end="36:18"><name pos:start="36:16" pos:end="36:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:59"><expr pos:start="42:5" pos:end="42:58"><name pos:start="42:5" pos:end="42:34"><name pos:start="42:5" pos:end="42:5">s</name><operator pos:start="42:6" pos:end="42:7">-&gt;</operator><name pos:start="42:8" pos:end="42:34">refcount_block_cache_offset</name></name> <operator pos:start="42:36" pos:end="42:36">=</operator> <name pos:start="42:38" pos:end="42:58">refcount_block_offset</name></expr>;</expr_stmt>

    <return pos:start="44:5" pos:end="44:13">return <expr pos:start="44:12" pos:end="44:12"><literal type="number" pos:start="44:12" pos:end="44:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
