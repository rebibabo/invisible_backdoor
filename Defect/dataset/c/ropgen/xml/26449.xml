<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26449.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">eightsvx_decode_frame</name><parameter_list pos:start="1:33" pos:end="3:69">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><name pos:start="3:34" pos:end="3:36">int</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:51">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">AVPacket</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:22">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">EightSvxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">esc</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>, <decl pos:start="9:12" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:24">out_data_size</name></decl>, <decl pos:start="9:27" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:29">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">src</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">dst</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:48">/* decode and interleave the first packet */</comment>

    <if_stmt pos:start="17:5" pos:end="95:5"><if pos:start="17:5" pos:end="95:5">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:12">esc</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">samples</name></name> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:30">avpkt</name></expr>)</condition> <block pos:start="17:33" pos:end="95:5">{<block_content pos:start="19:9" pos:end="93:21">

        <decl_stmt pos:start="19:9" pos:end="19:50"><decl pos:start="19:9" pos:end="19:38"><type pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:15">uint8_t</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:38">deinterleaved_samples</name></decl>, <decl pos:start="19:41" pos:end="19:49"><type ref="prev" pos:start="19:9" pos:end="19:17"><modifier pos:start="19:41" pos:end="19:41">*</modifier></type><name pos:start="19:42" pos:end="19:42">p</name> <init pos:start="19:44" pos:end="19:49">= <expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="25:78"><expr pos:start="23:9" pos:end="25:77"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">esc</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:25">samples_size</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <ternary pos:start="23:29" pos:end="25:77"><condition pos:start="23:29" pos:end="23:41"><expr pos:start="23:29" pos:end="23:39"><operator pos:start="23:29" pos:end="23:29">!</operator><name pos:start="23:30" pos:end="23:39"><name pos:start="23:30" pos:end="23:32">esc</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">table</name></name></expr> ?</condition><then pos:start="25:13" pos:end="25:23">

            <expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:17">avpkt</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">size</name></name></expr> </then><else pos:start="25:25" pos:end="25:77">: <expr pos:start="25:27" pos:end="25:77"><name pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:31">avctx</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:41">channels</name></name> <operator pos:start="25:43" pos:end="25:43">+</operator> <operator pos:start="25:45" pos:end="25:45">(</operator><name pos:start="25:46" pos:end="25:56"><name pos:start="25:46" pos:end="25:50">avpkt</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:56">size</name></name><operator pos:start="25:57" pos:end="25:57">-</operator><name pos:start="25:58" pos:end="25:72"><name pos:start="25:58" pos:end="25:62">avctx</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:72">channels</name></name><operator pos:start="25:73" pos:end="25:73">)</operator> <operator pos:start="25:75" pos:end="25:75">*</operator> <literal type="number" pos:start="25:77" pos:end="25:77">2</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:35"><if pos:start="27:9" pos:end="29:35">if <condition pos:start="27:12" pos:end="27:59">(<expr pos:start="27:13" pos:end="27:58"><operator pos:start="27:13" pos:end="27:13">!</operator><operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:17">esc</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">samples</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <call pos:start="27:30" pos:end="27:57"><name pos:start="27:30" pos:end="27:38">av_malloc</name><argument_list pos:start="27:39" pos:end="27:57">(<argument pos:start="27:40" pos:end="27:56"><expr pos:start="27:40" pos:end="27:56"><name pos:start="27:40" pos:end="27:56"><name pos:start="27:40" pos:end="27:42">esc</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:56">samples_size</name></name></expr></argument>)</argument_list></call><operator pos:start="27:58" pos:end="27:58">)</operator></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:35"><block_content pos:start="29:13" pos:end="29:35">

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="33:9" pos:end="33:24">/* decompress */</comment>

        <if_stmt pos:start="35:9" pos:end="81:9"><if pos:start="35:9" pos:end="77:9">if <condition pos:start="35:12" pos:end="35:23">(<expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">esc</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">table</name></name></expr>)</condition> <block pos:start="35:25" pos:end="77:9">{<block_content pos:start="37:13" pos:end="75:13">

            <decl_stmt pos:start="37:13" pos:end="37:45"><decl pos:start="37:13" pos:end="37:44"><type pos:start="37:13" pos:end="37:27"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:25">uint8_t</name> <modifier pos:start="37:27" pos:end="37:27">*</modifier></type><name pos:start="37:28" pos:end="37:30">buf</name> <init pos:start="37:32" pos:end="37:44">= <expr pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:44"><name pos:start="37:34" pos:end="37:38">avpkt</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:44">data</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:25"><decl pos:start="39:13" pos:end="39:24"><type pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:19">uint8_t</name> <modifier pos:start="39:21" pos:end="39:21">*</modifier></type><name pos:start="39:22" pos:end="39:24">dst</name></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:39"><decl pos:start="41:13" pos:end="41:38"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:24">buf_size</name> <init pos:start="41:26" pos:end="41:38">= <expr pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:32">avpkt</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:38">size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:41"><decl pos:start="43:13" pos:end="43:17"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:17">i</name></decl>, <decl pos:start="43:20" pos:end="43:40"><type ref="prev" pos:start="43:13" pos:end="43:15"/><name pos:start="43:20" pos:end="43:20">n</name> <init pos:start="43:22" pos:end="43:40">= <expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:26">esc</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:40">samples_size</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:29">(<expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:24">buf_size</name> <operator pos:start="47:26" pos:end="47:26">&lt;</operator> <literal type="number" pos:start="47:28" pos:end="47:28">2</literal></expr>)</condition> <block pos:start="47:31" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:39">

                <expr_stmt pos:start="49:17" pos:end="49:74"><expr pos:start="49:17" pos:end="49:73"><call pos:start="49:17" pos:end="49:73"><name pos:start="49:17" pos:end="49:22">av_log</name><argument_list pos:start="49:23" pos:end="49:73">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">avctx</name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:45" pos:end="49:72"><expr pos:start="49:45" pos:end="49:72"><literal type="string" pos:start="49:45" pos:end="49:72">"packet size is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:39">return <expr pos:start="51:24" pos:end="51:38"><call pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:30">AVERROR</name><argument_list pos:start="51:31" pos:end="51:38">(<argument pos:start="51:32" pos:end="51:37"><expr pos:start="51:32" pos:end="51:37"><name pos:start="51:32" pos:end="51:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="57:39"><if pos:start="55:13" pos:end="57:39">if <condition pos:start="55:16" pos:end="55:57">(<expr pos:start="55:17" pos:end="55:56"><operator pos:start="55:17" pos:end="55:17">!</operator><operator pos:start="55:18" pos:end="55:18">(</operator><name pos:start="55:19" pos:end="55:39">deinterleaved_samples</name> <operator pos:start="55:41" pos:end="55:41">=</operator> <call pos:start="55:43" pos:end="55:55"><name pos:start="55:43" pos:end="55:52">av_mallocz</name><argument_list pos:start="55:53" pos:end="55:55">(<argument pos:start="55:54" pos:end="55:54"><expr pos:start="55:54" pos:end="55:54"><name pos:start="55:54" pos:end="55:54">n</name></expr></argument>)</argument_list></call><operator pos:start="55:56" pos:end="55:56">)</operator></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:39"><block_content pos:start="57:17" pos:end="57:39">

                <return pos:start="57:17" pos:end="57:39">return <expr pos:start="57:24" pos:end="57:38"><call pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:30">AVERROR</name><argument_list pos:start="57:31" pos:end="57:38">(<argument pos:start="57:32" pos:end="57:37"><expr pos:start="57:32" pos:end="57:37"><name pos:start="57:32" pos:end="57:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:44"><expr pos:start="59:13" pos:end="59:43"><name pos:start="59:13" pos:end="59:15">dst</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:19">p</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:43">deinterleaved_samples</name></expr>;</expr_stmt>



            <comment type="block" pos:start="63:13" pos:end="63:80">/* the uncompressed starting value is contained in the first byte */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:40"><expr pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:15">dst</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:39">deinterleaved_samples</name></expr>;</expr_stmt>

            <for pos:start="67:13" pos:end="75:13">for <control pos:start="67:17" pos:end="67:49">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:44"><expr pos:start="67:25" pos:end="67:43"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:33">avctx</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:43">channels</name></name></expr>;</condition> <incr pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><name pos:start="67:46" pos:end="67:46">i</name><operator pos:start="67:47" pos:end="67:48">++</operator></expr></incr>)</control> <block pos:start="67:51" pos:end="75:13">{<block_content pos:start="69:17" pos:end="73:47">

                <expr_stmt pos:start="69:17" pos:end="69:95"><expr pos:start="69:17" pos:end="69:94"><call pos:start="69:17" pos:end="69:94"><name pos:start="69:17" pos:end="69:28">delta_decode</name><argument_list pos:start="69:29" pos:end="69:94">(<argument pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><name pos:start="69:30" pos:end="69:32">dst</name></expr></argument>, <argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:37">buf</name> <operator pos:start="69:39" pos:end="69:39">+</operator> <literal type="number" pos:start="69:41" pos:end="69:41">1</literal></expr></argument>, <argument pos:start="69:44" pos:end="69:73"><expr pos:start="69:44" pos:end="69:73"><name pos:start="69:44" pos:end="69:51">buf_size</name> <operator pos:start="69:53" pos:end="69:53">/</operator> <name pos:start="69:55" pos:end="69:69"><name pos:start="69:55" pos:end="69:59">avctx</name><operator pos:start="69:60" pos:end="69:61">-&gt;</operator><name pos:start="69:62" pos:end="69:69">channels</name></name> <operator pos:start="69:71" pos:end="69:71">-</operator> <literal type="number" pos:start="69:73" pos:end="69:73">1</literal></expr></argument>, <argument pos:start="69:76" pos:end="69:81"><expr pos:start="69:76" pos:end="69:81"><name pos:start="69:76" pos:end="69:81"><name pos:start="69:76" pos:end="69:78">buf</name><index pos:start="69:79" pos:end="69:81">[<expr pos:start="69:80" pos:end="69:80"><literal type="number" pos:start="69:80" pos:end="69:80">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:84" pos:end="69:93"><expr pos:start="69:84" pos:end="69:93"><name pos:start="69:84" pos:end="69:93"><name pos:start="69:84" pos:end="69:86">esc</name><operator pos:start="69:87" pos:end="69:88">-&gt;</operator><name pos:start="69:89" pos:end="69:93">table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:19">buf</name> <operator pos:start="71:21" pos:end="71:22">+=</operator> <name pos:start="71:24" pos:end="71:31">buf_size</name> <operator pos:start="71:33" pos:end="71:33">/</operator> <name pos:start="71:35" pos:end="71:49"><name pos:start="71:35" pos:end="71:39">avctx</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:49">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:47"><expr pos:start="73:17" pos:end="73:46"><name pos:start="73:17" pos:end="73:19">dst</name> <operator pos:start="73:21" pos:end="73:22">+=</operator> <name pos:start="73:24" pos:end="73:24">n</name> <operator pos:start="73:26" pos:end="73:26">/</operator> <name pos:start="73:28" pos:end="73:42"><name pos:start="73:28" pos:end="73:32">avctx</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:42">channels</name></name> <operator pos:start="73:44" pos:end="73:44">-</operator> <literal type="number" pos:start="73:46" pos:end="73:46">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:48">

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:33">deinterleaved_samples</name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:47"><name pos:start="79:37" pos:end="79:41">avpkt</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:47">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="85:9" pos:end="91:75"><if pos:start="85:9" pos:end="87:86">if <condition pos:start="85:12" pos:end="85:33">(<expr pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:17">avctx</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:27">channels</name></name> <operator pos:start="85:29" pos:end="85:30">==</operator> <literal type="number" pos:start="85:32" pos:end="85:32">2</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:86"><block_content pos:start="87:13" pos:end="87:86">

            <expr_stmt pos:start="87:13" pos:end="87:86"><expr pos:start="87:13" pos:end="87:85"><call pos:start="87:13" pos:end="87:85"><name pos:start="87:13" pos:end="87:29">interleave_stereo</name><argument_list pos:start="87:30" pos:end="87:85">(<argument pos:start="87:31" pos:end="87:42"><expr pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:33">esc</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:42">samples</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:65"><expr pos:start="87:45" pos:end="87:65"><name pos:start="87:45" pos:end="87:65">deinterleaved_samples</name></expr></argument>, <argument pos:start="87:68" pos:end="87:84"><expr pos:start="87:68" pos:end="87:84"><name pos:start="87:68" pos:end="87:84"><name pos:start="87:68" pos:end="87:70">esc</name><operator pos:start="87:71" pos:end="87:72">-&gt;</operator><name pos:start="87:73" pos:end="87:84">samples_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="89:9" pos:end="91:75">else<block type="pseudo" pos:start="91:13" pos:end="91:75"><block_content pos:start="91:13" pos:end="91:75">

            <expr_stmt pos:start="91:13" pos:end="91:75"><expr pos:start="91:13" pos:end="91:74"><call pos:start="91:13" pos:end="91:74"><name pos:start="91:13" pos:end="91:18">memcpy</name><argument_list pos:start="91:19" pos:end="91:74">(<argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:22">esc</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:31">samples</name></name></expr></argument>, <argument pos:start="91:34" pos:end="91:54"><expr pos:start="91:34" pos:end="91:54"><name pos:start="91:34" pos:end="91:54">deinterleaved_samples</name></expr></argument>, <argument pos:start="91:57" pos:end="91:73"><expr pos:start="91:57" pos:end="91:73"><name pos:start="91:57" pos:end="91:73"><name pos:start="91:57" pos:end="91:59">esc</name><operator pos:start="91:60" pos:end="91:61">-&gt;</operator><name pos:start="91:62" pos:end="91:73">samples_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:21"><expr pos:start="93:9" pos:end="93:20"><call pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:16">av_freep</name><argument_list pos:start="93:17" pos:end="93:20">(<argument pos:start="93:18" pos:end="93:19"><expr pos:start="93:18" pos:end="93:19"><operator pos:start="93:18" pos:end="93:18">&amp;</operator><name pos:start="93:19" pos:end="93:19">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:27">/* get output buffer */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:93"><expr pos:start="101:5" pos:end="101:92"><call pos:start="101:5" pos:end="101:92"><name pos:start="101:5" pos:end="101:14">av_assert1</name><argument_list pos:start="101:15" pos:end="101:92">(<argument pos:start="101:16" pos:end="101:91"><expr pos:start="101:16" pos:end="101:91"><operator pos:start="101:16" pos:end="101:16">!</operator><operator pos:start="101:17" pos:end="101:17">(</operator><name pos:start="101:18" pos:end="101:34"><name pos:start="101:18" pos:end="101:20">esc</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:34">samples_size</name></name> <operator pos:start="101:36" pos:end="101:36">%</operator> <name pos:start="101:38" pos:end="101:52"><name pos:start="101:38" pos:end="101:42">avctx</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:52">channels</name></name> <operator pos:start="101:54" pos:end="101:55">||</operator> <name pos:start="101:57" pos:end="101:72"><name pos:start="101:57" pos:end="101:59">esc</name><operator pos:start="101:60" pos:end="101:61">-&gt;</operator><name pos:start="101:62" pos:end="101:72">samples_idx</name></name> <operator pos:start="101:74" pos:end="101:74">%</operator> <name pos:start="101:76" pos:end="101:90"><name pos:start="101:76" pos:end="101:80">avctx</name><operator pos:start="101:81" pos:end="101:82">-&gt;</operator><name pos:start="101:83" pos:end="101:90">channels</name></name><operator pos:start="101:91" pos:end="101:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:107"><expr pos:start="103:5" pos:end="103:106"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:7">esc</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:14">frame</name><operator pos:start="103:15" pos:end="103:15">.</operator><name pos:start="103:16" pos:end="103:25">nb_samples</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:87"><name pos:start="103:29" pos:end="103:33">FFMIN</name><argument_list pos:start="103:34" pos:end="103:87">(<argument pos:start="103:35" pos:end="103:48"><expr pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:48">MAX_FRAME_SIZE</name></expr></argument>, <argument pos:start="103:51" pos:end="103:86"><expr pos:start="103:51" pos:end="103:86"><name pos:start="103:51" pos:end="103:67"><name pos:start="103:51" pos:end="103:53">esc</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:67">samples_size</name></name> <operator pos:start="103:69" pos:end="103:69">-</operator> <name pos:start="103:71" pos:end="103:86"><name pos:start="103:71" pos:end="103:73">esc</name><operator pos:start="103:74" pos:end="103:75">-&gt;</operator><name pos:start="103:76" pos:end="103:86">samples_idx</name></name></expr></argument>)</argument_list></call>  <operator pos:start="103:90" pos:end="103:90">/</operator> <name pos:start="103:92" pos:end="103:106"><name pos:start="103:92" pos:end="103:96">avctx</name><operator pos:start="103:97" pos:end="103:98">-&gt;</operator><name pos:start="103:99" pos:end="103:106">channels</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:58">(<expr pos:start="105:9" pos:end="105:57"><operator pos:start="105:9" pos:end="105:9">(</operator><name pos:start="105:10" pos:end="105:12">ret</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:52"><name pos:start="105:16" pos:end="105:32"><name pos:start="105:16" pos:end="105:20">avctx</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:32">get_buffer</name></name><argument_list pos:start="105:33" pos:end="105:52">(<argument pos:start="105:34" pos:end="105:38"><expr pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:38">avctx</name></expr></argument>, <argument pos:start="105:41" pos:end="105:51"><expr pos:start="105:41" pos:end="105:51"><operator pos:start="105:41" pos:end="105:41">&amp;</operator><name pos:start="105:42" pos:end="105:51"><name pos:start="105:42" pos:end="105:44">esc</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:51">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="105:53" pos:end="105:53">)</operator> <operator pos:start="105:55" pos:end="105:55">&lt;</operator> <literal type="number" pos:start="105:57" pos:end="105:57">0</literal></expr>)</condition> <block pos:start="105:60" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:19">

        <expr_stmt pos:start="107:9" pos:end="107:61"><expr pos:start="107:9" pos:end="107:60"><call pos:start="107:9" pos:end="107:60"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:60">(<argument pos:start="107:16" pos:end="107:20"><expr pos:start="107:16" pos:end="107:20"><name pos:start="107:16" pos:end="107:20">avctx</name></expr></argument>, <argument pos:start="107:23" pos:end="107:34"><expr pos:start="107:23" pos:end="107:34"><name pos:start="107:23" pos:end="107:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:37" pos:end="107:59"><expr pos:start="107:37" pos:end="107:59"><literal type="string" pos:start="107:37" pos:end="107:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:19">return <expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:25"><expr pos:start="115:5" pos:end="115:24"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:18">got_frame_ptr</name>   <operator pos:start="115:22" pos:end="115:22">=</operator> <literal type="number" pos:start="115:24" pos:end="115:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><operator pos:start="117:5" pos:end="117:5">*</operator><operator pos:start="117:6" pos:end="117:6">(</operator><name pos:start="117:7" pos:end="117:13">AVFrame</name> <operator pos:start="117:15" pos:end="117:15">*</operator><operator pos:start="117:16" pos:end="117:16">)</operator><name pos:start="117:17" pos:end="117:20">data</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:33"><name pos:start="117:24" pos:end="117:26">esc</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:33">frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:29"><expr pos:start="121:5" pos:end="121:28"><name pos:start="121:5" pos:end="121:7">dst</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <name pos:start="121:11" pos:end="121:28"><name pos:start="121:11" pos:end="121:13">esc</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:20">frame</name><operator pos:start="121:21" pos:end="121:21">.</operator><name pos:start="121:22" pos:end="121:25">data</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:42"><expr pos:start="123:5" pos:end="123:41"><name pos:start="123:5" pos:end="123:7">src</name> <operator pos:start="123:9" pos:end="123:9">=</operator> <name pos:start="123:11" pos:end="123:22"><name pos:start="123:11" pos:end="123:13">esc</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">samples</name></name> <operator pos:start="123:24" pos:end="123:24">+</operator> <name pos:start="123:26" pos:end="123:41"><name pos:start="123:26" pos:end="123:28">esc</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:41">samples_idx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:60"><expr pos:start="125:5" pos:end="125:59"><name pos:start="125:5" pos:end="125:17">out_data_size</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:41"><name pos:start="125:21" pos:end="125:23">esc</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:30">frame</name><operator pos:start="125:31" pos:end="125:31">.</operator><name pos:start="125:32" pos:end="125:41">nb_samples</name></name> <operator pos:start="125:43" pos:end="125:43">*</operator> <name pos:start="125:45" pos:end="125:59"><name pos:start="125:45" pos:end="125:49">avctx</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:59">channels</name></name></expr>;</expr_stmt>

    <for pos:start="127:5" pos:end="129:30">for <control pos:start="127:9" pos:end="127:39">(<init pos:start="127:10" pos:end="127:27"><expr pos:start="127:10" pos:end="127:26"><name pos:start="127:10" pos:end="127:10">n</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <name pos:start="127:14" pos:end="127:26">out_data_size</name></expr>;</init> <condition pos:start="127:29" pos:end="127:34"><expr pos:start="127:29" pos:end="127:33"><name pos:start="127:29" pos:end="127:29">n</name> <operator pos:start="127:31" pos:end="127:31">&gt;</operator> <literal type="number" pos:start="127:33" pos:end="127:33">0</literal></expr>;</condition> <incr pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:36">n</name><operator pos:start="127:37" pos:end="127:38">--</operator></expr></incr>)</control><block type="pseudo" pos:start="129:9" pos:end="129:30"><block_content pos:start="129:9" pos:end="129:30">

        <expr_stmt pos:start="129:9" pos:end="129:30"><expr pos:start="129:9" pos:end="129:29"><operator pos:start="129:9" pos:end="129:9">*</operator><name pos:start="129:10" pos:end="129:12">dst</name><operator pos:start="129:13" pos:end="129:14">++</operator> <operator pos:start="129:16" pos:end="129:16">=</operator> <operator pos:start="129:18" pos:end="129:18">*</operator><name pos:start="129:19" pos:end="129:21">src</name><operator pos:start="129:22" pos:end="129:23">++</operator> <operator pos:start="129:25" pos:end="129:25">+</operator> <literal type="number" pos:start="129:27" pos:end="129:29">128</literal></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="131:5" pos:end="131:38"><expr pos:start="131:5" pos:end="131:37"><name pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:7">esc</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:20">samples_idx</name></name> <operator pos:start="131:22" pos:end="131:23">+=</operator> <name pos:start="131:25" pos:end="131:37">out_data_size</name></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="139:22">return <expr pos:start="135:12" pos:end="139:21"><ternary pos:start="135:12" pos:end="139:21"><condition pos:start="135:12" pos:end="135:23"><expr pos:start="135:12" pos:end="135:21"><name pos:start="135:12" pos:end="135:21"><name pos:start="135:12" pos:end="135:14">esc</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:21">table</name></name></expr> ?</condition><then pos:start="137:9" pos:end="137:56">

        <expr pos:start="137:9" pos:end="137:56"><operator pos:start="137:9" pos:end="137:9">(</operator><name pos:start="137:10" pos:end="137:28"><name pos:start="137:10" pos:end="137:14">avctx</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:28">frame_number</name></name> <operator pos:start="137:30" pos:end="137:31">==</operator> <literal type="number" pos:start="137:33" pos:end="137:33">0</literal><operator pos:start="137:34" pos:end="137:34">)</operator><operator pos:start="137:35" pos:end="137:35">*</operator><literal type="number" pos:start="137:36" pos:end="137:38">2</literal> <operator pos:start="137:38" pos:end="137:38">+</operator> <name pos:start="137:40" pos:end="137:52">out_data_size</name> <operator pos:start="137:54" pos:end="137:54">/</operator> <literal type="number" pos:start="137:56" pos:end="137:56">2</literal></expr> </then><else pos:start="137:58" pos:end="139:21">:

        <expr pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:21">out_data_size</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
