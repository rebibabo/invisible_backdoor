<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16008.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_fxrstor</name><parameter_list pos:start="1:20" pos:end="1:67">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">CPUX86State</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:50">target_ulong</name></type> <name pos:start="1:52" pos:end="1:54">ptr</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">data64</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15">fpus</name></decl>, <decl pos:start="5:18" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:22">fptag</name></decl>, <decl pos:start="5:25" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:35">nb_xmm_regs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">floatx80</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">addr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:45">/* The operand must be 16 byte aligned */</comment>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">ptr</name> <operator pos:start="15:13" pos:end="15:13">&amp;</operator> <literal type="number" pos:start="15:15" pos:end="15:17">0xf</literal></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:41">

        <expr_stmt pos:start="17:9" pos:end="17:41"><expr pos:start="17:9" pos:end="17:40"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:23">raise_exception</name><argument_list pos:start="17:24" pos:end="17:40">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">env</name></expr></argument>, <argument pos:start="17:30" pos:end="17:39"><expr pos:start="17:30" pos:end="17:39"><name pos:start="17:30" pos:end="17:39">EXCP0D_GPF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">fpuc</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:29">cpu_lduw_data</name><argument_list pos:start="23:30" pos:end="23:39">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">env</name></expr></argument>, <argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:38">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:8">fpus</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:38"><name pos:start="25:12" pos:end="25:24">cpu_lduw_data</name><argument_list pos:start="25:25" pos:end="25:38">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">env</name></expr></argument>, <argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><name pos:start="25:31" pos:end="25:33">ptr</name> <operator pos:start="25:35" pos:end="25:35">+</operator> <literal type="number" pos:start="25:37" pos:end="25:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:9">fptag</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:39"><name pos:start="27:13" pos:end="27:25">cpu_lduw_data</name><argument_list pos:start="27:26" pos:end="27:39">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">env</name></expr></argument>, <argument pos:start="27:32" pos:end="27:38"><expr pos:start="27:32" pos:end="27:38"><name pos:start="27:32" pos:end="27:34">ptr</name> <operator pos:start="27:36" pos:end="27:36">+</operator> <literal type="number" pos:start="27:38" pos:end="27:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">fpstt</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:22">fpus</name> <operator pos:start="29:24" pos:end="29:25">&gt;&gt;</operator> <literal type="number" pos:start="29:27" pos:end="29:28">11</literal><operator pos:start="29:29" pos:end="29:29">)</operator> <operator pos:start="29:31" pos:end="29:31">&amp;</operator> <literal type="number" pos:start="29:33" pos:end="29:33">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:13">fpus</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:20">fpus</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <operator pos:start="31:24" pos:end="31:24">~</operator><literal type="number" pos:start="31:25" pos:end="31:30">0x3800</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:9">fptag</name> <operator pos:start="33:11" pos:end="33:12">^=</operator> <literal type="number" pos:start="33:14" pos:end="33:17">0xff</literal></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="39:5">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">8</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control> <block pos:start="35:29" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:44">

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">env</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">fptags</name><index pos:start="37:20" pos:end="37:22">[<expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">i</name></expr>]</index></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <operator pos:start="37:26" pos:end="37:26">(</operator><operator pos:start="37:27" pos:end="37:27">(</operator><name pos:start="37:28" pos:end="37:32">fptag</name> <operator pos:start="37:34" pos:end="37:35">&gt;&gt;</operator> <name pos:start="37:37" pos:end="37:37">i</name><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:40">&amp;</operator> <literal type="number" pos:start="37:42" pos:end="37:42">1</literal><operator pos:start="37:43" pos:end="37:43">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:22"><expr pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:8">addr</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <name pos:start="43:12" pos:end="43:14">ptr</name> <operator pos:start="43:16" pos:end="43:16">+</operator> <literal type="number" pos:start="43:18" pos:end="43:21">0x20</literal></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="53:5">for <control pos:start="45:9" pos:end="45:27">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <literal type="number" pos:start="45:21" pos:end="45:21">8</literal></expr>;</condition> <incr pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:24">i</name><operator pos:start="45:25" pos:end="45:26">++</operator></expr></incr>)</control> <block pos:start="45:29" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:19">

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:11">tmp</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:36"><name pos:start="47:15" pos:end="47:25">helper_fldt</name><argument_list pos:start="47:26" pos:end="47:36">(<argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">env</name></expr></argument>, <argument pos:start="47:32" pos:end="47:35"><expr pos:start="47:32" pos:end="47:35"><name pos:start="47:32" pos:end="47:35">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><call pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:10">ST</name><argument_list pos:start="49:11" pos:end="49:13">(<argument pos:start="49:12" pos:end="49:12"><expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">i</name></expr></argument>)</argument_list></call> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:19">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:12">addr</name> <operator pos:start="51:14" pos:end="51:15">+=</operator> <literal type="number" pos:start="51:17" pos:end="51:18">16</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="57:5" pos:end="97:5"><if pos:start="57:5" pos:end="97:5">if <condition pos:start="57:8" pos:end="57:37">(<expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:11">env</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:15">cr</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><literal type="number" pos:start="57:17" pos:end="57:17">4</literal></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">&amp;</operator> <name pos:start="57:22" pos:end="57:36">CR4_OSFXSR_MASK</name></expr>)</condition> <block pos:start="57:39" pos:end="97:5">{<block_content pos:start="61:9" pos:end="95:9">

        <comment type="block" pos:start="59:9" pos:end="59:28">/* XXX: finish it */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:51"><expr pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:18">mxcsr</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:50"><name pos:start="61:22" pos:end="61:33">cpu_ldl_data</name><argument_list pos:start="61:34" pos:end="61:50">(<argument pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:37">env</name></expr></argument>, <argument pos:start="61:40" pos:end="61:49"><expr pos:start="61:40" pos:end="61:49"><name pos:start="61:40" pos:end="61:42">ptr</name> <operator pos:start="61:44" pos:end="61:44">+</operator> <literal type="number" pos:start="61:46" pos:end="61:49">0x18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:44">/* cpu_ldl_data(env, ptr + 0x1c); */</comment>

        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:39">(<expr pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:15">env</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:23">hflags</name></name> <operator pos:start="65:25" pos:end="65:25">&amp;</operator> <name pos:start="65:27" pos:end="65:38">HF_CS64_MASK</name></expr>)</condition> <block pos:start="65:41" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:29">

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:23">nb_xmm_regs</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:28">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:28">

            <expr_stmt pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:23">nb_xmm_regs</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:12">addr</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:18">ptr</name> <operator pos:start="75:20" pos:end="75:20">+</operator> <literal type="number" pos:start="75:22" pos:end="75:25">0xa0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:57">/* Fast FXRESTORE leaves out the XMM registers */</comment>

        <if_stmt pos:start="79:9" pos:end="95:9"><if pos:start="79:9" pos:end="95:9">if <condition pos:start="79:12" pos:end="83:44">(<expr pos:start="79:13" pos:end="83:43"><operator pos:start="79:13" pos:end="79:13">!</operator><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:23"><name pos:start="79:15" pos:end="79:17">env</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:23">efer</name></name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <name pos:start="79:27" pos:end="79:40">MSR_EFER_FFXSR</name><operator pos:start="79:41" pos:end="79:41">)</operator>

            <operator pos:start="81:13" pos:end="81:14">||</operator> <operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:27">hflags</name></name> <operator pos:start="81:29" pos:end="81:29">&amp;</operator> <name pos:start="81:31" pos:end="81:41">HF_CPL_MASK</name><operator pos:start="81:42" pos:end="81:42">)</operator>

            <operator pos:start="83:13" pos:end="83:14">||</operator> <operator pos:start="83:16" pos:end="83:16">!</operator><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:20">env</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:28">hflags</name></name> <operator pos:start="83:30" pos:end="83:30">&amp;</operator> <name pos:start="83:32" pos:end="83:42">HF_LMA_MASK</name><operator pos:start="83:43" pos:end="83:43">)</operator></expr>)</condition> <block pos:start="83:46" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:13">

            <for pos:start="85:13" pos:end="93:13">for <control pos:start="85:17" pos:end="85:45">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">i</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:40"><expr pos:start="85:25" pos:end="85:39"><name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:39">nb_xmm_regs</name></expr>;</condition> <incr pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:42">i</name><operator pos:start="85:43" pos:end="85:44">++</operator></expr></incr>)</control> <block pos:start="85:47" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:27">

                <expr_stmt pos:start="87:17" pos:end="87:68"><expr pos:start="87:17" pos:end="87:67"><name pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:19">env</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:29">xmm_regs</name><index pos:start="87:30" pos:end="87:32">[<expr pos:start="87:31" pos:end="87:31"><name pos:start="87:31" pos:end="87:31">i</name></expr>]</index></name><operator pos:start="87:33" pos:end="87:33">.</operator><call pos:start="87:34" pos:end="87:41"><name pos:start="87:34" pos:end="87:38">XMM_Q</name><argument_list pos:start="87:39" pos:end="87:41">(<argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><literal type="number" pos:start="87:40" pos:end="87:40">0</literal></expr></argument>)</argument_list></call> <operator pos:start="87:43" pos:end="87:43">=</operator> <call pos:start="87:45" pos:end="87:67"><name pos:start="87:45" pos:end="87:56">cpu_ldq_data</name><argument_list pos:start="87:57" pos:end="87:67">(<argument pos:start="87:58" pos:end="87:60"><expr pos:start="87:58" pos:end="87:60"><name pos:start="87:58" pos:end="87:60">env</name></expr></argument>, <argument pos:start="87:63" pos:end="87:66"><expr pos:start="87:63" pos:end="87:66"><name pos:start="87:63" pos:end="87:66">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:72"><expr pos:start="89:17" pos:end="89:71"><name pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:19">env</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:29">xmm_regs</name><index pos:start="89:30" pos:end="89:32">[<expr pos:start="89:31" pos:end="89:31"><name pos:start="89:31" pos:end="89:31">i</name></expr>]</index></name><operator pos:start="89:33" pos:end="89:33">.</operator><call pos:start="89:34" pos:end="89:41"><name pos:start="89:34" pos:end="89:38">XMM_Q</name><argument_list pos:start="89:39" pos:end="89:41">(<argument pos:start="89:40" pos:end="89:40"><expr pos:start="89:40" pos:end="89:40"><literal type="number" pos:start="89:40" pos:end="89:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="89:43" pos:end="89:43">=</operator> <call pos:start="89:45" pos:end="89:71"><name pos:start="89:45" pos:end="89:56">cpu_ldq_data</name><argument_list pos:start="89:57" pos:end="89:71">(<argument pos:start="89:58" pos:end="89:60"><expr pos:start="89:58" pos:end="89:60"><name pos:start="89:58" pos:end="89:60">env</name></expr></argument>, <argument pos:start="89:63" pos:end="89:70"><expr pos:start="89:63" pos:end="89:70"><name pos:start="89:63" pos:end="89:66">addr</name> <operator pos:start="89:68" pos:end="89:68">+</operator> <literal type="number" pos:start="89:70" pos:end="89:70">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:27"><expr pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:20">addr</name> <operator pos:start="91:22" pos:end="91:23">+=</operator> <literal type="number" pos:start="91:25" pos:end="91:26">16</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
