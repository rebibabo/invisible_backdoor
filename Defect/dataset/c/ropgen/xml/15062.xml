<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15062.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_blk_device_realize</name><parameter_list pos:start="1:38" pos:end="1:69">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:61">Error</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:32">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:43">= <expr pos:start="5:26" pos:end="5:43"><call pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">VirtIOBlock</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><call pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:31">VIRTIO_BLK</name><argument_list pos:start="7:32" pos:end="7:36">(<argument pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:35">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VirtIOBlkConf</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">conf</name> <init pos:start="9:25" pos:end="9:34">= <expr pos:start="9:27" pos:end="9:34"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:34"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:34">conf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:28">virtio_blk_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:13">conf</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">conf</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:22">bs</name></name></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:50">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:49"><expr pos:start="19:26" pos:end="19:49"><literal type="string" pos:start="19:26" pos:end="19:49">"drive property not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:40"><name pos:start="25:10" pos:end="25:25">bdrv_is_inserted</name><argument_list pos:start="25:26" pos:end="25:40">(<argument pos:start="25:27" pos:end="25:39"><expr pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:30">conf</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">conf</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:39">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:43" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:66">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:65"><expr pos:start="27:26" pos:end="27:65"><literal type="string" pos:start="27:26" pos:end="27:65">"Device needs media, but drive is empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:18">blkconf_serial</name><argument_list pos:start="35:19" pos:end="35:46">(<argument pos:start="35:20" pos:end="35:30"><expr pos:start="35:20" pos:end="35:30"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:24">conf</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">conf</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:45"><expr pos:start="35:33" pos:end="35:45"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:37">conf</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:45">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:19">original_wce</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:60"><name pos:start="37:23" pos:end="37:45">bdrv_enable_write_cache</name><argument_list pos:start="37:46" pos:end="37:60">(<argument pos:start="37:47" pos:end="37:59"><expr pos:start="37:47" pos:end="37:59"><name pos:start="37:47" pos:end="37:59"><name pos:start="37:47" pos:end="37:50">conf</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:56">conf</name><operator pos:start="37:57" pos:end="37:57">.</operator><name pos:start="37:58" pos:end="37:59">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><call pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:20">blkconf_geometry</name><argument_list pos:start="39:21" pos:end="39:62">(<argument pos:start="39:22" pos:end="39:32"><expr pos:start="39:22" pos:end="39:32"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:26">conf</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:32">conf</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">NULL</name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><literal type="number" pos:start="39:41" pos:end="39:45">65535</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><literal type="number" pos:start="39:48" pos:end="39:50">255</literal></expr></argument>, <argument pos:start="39:53" pos:end="39:55"><expr pos:start="39:53" pos:end="39:55"><literal type="number" pos:start="39:53" pos:end="39:55">255</literal></expr></argument>, <argument pos:start="39:58" pos:end="39:61"><expr pos:start="39:58" pos:end="39:61"><operator pos:start="39:58" pos:end="39:58">&amp;</operator><name pos:start="39:59" pos:end="39:61">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">err</name></expr>)</condition> <block pos:start="41:14" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:23">error_propagate</name><argument_list pos:start="43:24" pos:end="43:34">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">errp</name></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:50"><expr pos:start="51:5" pos:end="53:49"><call pos:start="51:5" pos:end="53:49"><name pos:start="51:5" pos:end="51:15">virtio_init</name><argument_list pos:start="51:16" pos:end="53:49">(<argument pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:20"><name pos:start="51:17" pos:end="51:20">vdev</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><literal type="string" pos:start="51:23" pos:end="51:34">"virtio-blk"</literal></expr></argument>, <argument pos:start="51:37" pos:end="51:51"><expr pos:start="51:37" pos:end="51:51"><name pos:start="51:37" pos:end="51:51">VIRTIO_ID_BLOCK</name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:48"><expr pos:start="53:17" pos:end="53:48"><sizeof pos:start="53:17" pos:end="53:48">sizeof<argument_list pos:start="53:23" pos:end="53:48">(<argument pos:start="53:24" pos:end="53:47"><expr pos:start="53:24" pos:end="53:47">struct <name pos:start="53:31" pos:end="53:47">virtio_blk_config</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:9"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:9">bs</name></name> <operator pos:start="57:11" pos:end="57:11">=</operator> <name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:16">conf</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">conf</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:25">bs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:17"><expr pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:9"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:9">rq</name></name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:16">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:78"><expr pos:start="61:5" pos:end="61:77"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:18">sector_mask</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:53"><name pos:start="61:23" pos:end="61:23">s</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">conf</name><operator pos:start="61:30" pos:end="61:30">.</operator><name pos:start="61:31" pos:end="61:34">conf</name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:53">logical_block_size</name></name> <operator pos:start="61:55" pos:end="61:55">/</operator> <name pos:start="61:57" pos:end="61:72">BDRV_SECTOR_SIZE</name><operator pos:start="61:73" pos:end="61:73">)</operator> <operator pos:start="61:75" pos:end="61:75">-</operator> <literal type="number" pos:start="61:77" pos:end="61:77">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:66"><expr pos:start="65:5" pos:end="65:65"><name pos:start="65:5" pos:end="65:9"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:9">vq</name></name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="65:65"><name pos:start="65:13" pos:end="65:28">virtio_add_queue</name><argument_list pos:start="65:29" pos:end="65:65">(<argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:33">vdev</name></expr></argument>, <argument pos:start="65:36" pos:end="65:38"><expr pos:start="65:36" pos:end="65:38"><literal type="number" pos:start="65:36" pos:end="65:38">128</literal></expr></argument>, <argument pos:start="65:41" pos:end="65:64"><expr pos:start="65:41" pos:end="65:64"><name pos:start="65:41" pos:end="65:64">virtio_blk_handle_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:54"><expr pos:start="67:5" pos:end="67:53"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:23">complete_request</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:53">virtio_blk_complete_request</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:66"><expr pos:start="69:5" pos:end="69:65"><call pos:start="69:5" pos:end="69:65"><name pos:start="69:5" pos:end="69:32">virtio_blk_data_plane_create</name><argument_list pos:start="69:33" pos:end="69:65">(<argument pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:37">vdev</name></expr></argument>, <argument pos:start="69:40" pos:end="69:43"><expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">conf</name></expr></argument>, <argument pos:start="69:46" pos:end="69:58"><expr pos:start="69:46" pos:end="69:58"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:58">dataplane</name></name></expr></argument>, <argument pos:start="69:61" pos:end="69:64"><expr pos:start="69:61" pos:end="69:64"><operator pos:start="69:61" pos:end="69:61">&amp;</operator><name pos:start="69:62" pos:end="69:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:11">err</name> <operator pos:start="71:13" pos:end="71:14">!=</operator> <name pos:start="71:16" pos:end="71:19">NULL</name></expr>)</condition> <block pos:start="71:22" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:15">

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><call pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:23">error_propagate</name><argument_list pos:start="73:24" pos:end="73:34">(<argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:28">errp</name></expr></argument>, <argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><call pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:22">virtio_cleanup</name><argument_list pos:start="75:23" pos:end="75:28">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:76"><expr pos:start="81:5" pos:end="81:75"><name pos:start="81:5" pos:end="81:38"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:31">migration_state_notifier</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:38">notify</name></name> <operator pos:start="81:40" pos:end="81:40">=</operator> <name pos:start="81:42" pos:end="81:75">virtio_blk_migration_state_changed</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:70"><expr pos:start="83:5" pos:end="83:69"><call pos:start="83:5" pos:end="83:69"><name pos:start="83:5" pos:end="83:39">add_migration_state_change_notifier</name><argument_list pos:start="83:40" pos:end="83:69">(<argument pos:start="83:41" pos:end="83:68"><expr pos:start="83:41" pos:end="83:68"><operator pos:start="83:41" pos:end="83:41">&amp;</operator><name pos:start="83:42" pos:end="83:68"><name pos:start="83:42" pos:end="83:42">s</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:68">migration_state_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:79"><expr pos:start="87:5" pos:end="87:78"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:13">change</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:78"><name pos:start="87:17" pos:end="87:48">qemu_add_vm_change_state_handler</name><argument_list pos:start="87:49" pos:end="87:78">(<argument pos:start="87:50" pos:end="87:74"><expr pos:start="87:50" pos:end="87:74"><name pos:start="87:50" pos:end="87:74">virtio_blk_dma_restart_cb</name></expr></argument>, <argument pos:start="87:77" pos:end="87:77"><expr pos:start="87:77" pos:end="87:77"><name pos:start="87:77" pos:end="87:77">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="91:57"><expr pos:start="89:5" pos:end="91:56"><call pos:start="89:5" pos:end="91:56"><name pos:start="89:5" pos:end="89:19">register_savevm</name><argument_list pos:start="89:20" pos:end="91:56">(<argument pos:start="89:21" pos:end="89:23"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">dev</name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><literal type="string" pos:start="89:26" pos:end="89:37">"virtio-blk"</literal></expr></argument>, <argument pos:start="89:40" pos:end="89:54"><expr pos:start="89:40" pos:end="89:54"><name pos:start="89:40" pos:end="89:52">virtio_blk_id</name><operator pos:start="89:53" pos:end="89:54">++</operator></expr></argument>, <argument pos:start="89:57" pos:end="89:57"><expr pos:start="89:57" pos:end="89:57"><literal type="number" pos:start="89:57" pos:end="89:57">2</literal></expr></argument>,

                    <argument pos:start="91:21" pos:end="91:35"><expr pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:35">virtio_blk_save</name></expr></argument>, <argument pos:start="91:38" pos:end="91:52"><expr pos:start="91:38" pos:end="91:52"><name pos:start="91:38" pos:end="91:52">virtio_blk_load</name></expr></argument>, <argument pos:start="91:55" pos:end="91:55"><expr pos:start="91:55" pos:end="91:55"><name pos:start="91:55" pos:end="91:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:50"><expr pos:start="93:5" pos:end="93:49"><call pos:start="93:5" pos:end="93:49"><name pos:start="93:5" pos:end="93:20">bdrv_set_dev_ops</name><argument_list pos:start="93:21" pos:end="93:49">(<argument pos:start="93:22" pos:end="93:26"><expr pos:start="93:22" pos:end="93:26"><name pos:start="93:22" pos:end="93:26"><name pos:start="93:22" pos:end="93:22">s</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:26">bs</name></name></expr></argument>, <argument pos:start="93:29" pos:end="93:45"><expr pos:start="93:29" pos:end="93:45"><operator pos:start="93:29" pos:end="93:29">&amp;</operator><name pos:start="93:30" pos:end="93:45">virtio_block_ops</name></expr></argument>, <argument pos:start="93:48" pos:end="93:48"><expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:70"><expr pos:start="95:5" pos:end="95:69"><call pos:start="95:5" pos:end="95:69"><name pos:start="95:5" pos:end="95:29">bdrv_set_guest_block_size</name><argument_list pos:start="95:30" pos:end="95:69">(<argument pos:start="95:31" pos:end="95:35"><expr pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:31">s</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:35">bs</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:68"><expr pos:start="95:38" pos:end="95:68"><name pos:start="95:38" pos:end="95:68"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:44">conf</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:49">conf</name><operator pos:start="95:50" pos:end="95:50">.</operator><name pos:start="95:51" pos:end="95:68">logical_block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><call pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:24">bdrv_iostatus_enable</name><argument_list pos:start="99:25" pos:end="99:31">(<argument pos:start="99:26" pos:end="99:30"><expr pos:start="99:26" pos:end="99:30"><name pos:start="99:26" pos:end="99:30"><name pos:start="99:26" pos:end="99:26">s</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:30">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
