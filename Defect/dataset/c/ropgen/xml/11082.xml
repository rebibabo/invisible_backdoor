<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11082.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_elst</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MOVStreamContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:21">edit_count</name></decl>, <decl pos:start="7:24" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:30">version</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:52">(<expr pos:start="11:9" pos:end="11:51"><name pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:13">fc</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:25">nb_streams</name></name> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <literal type="number" pos:start="11:29" pos:end="11:29">1</literal> <operator pos:start="11:31" pos:end="11:32">||</operator> <name pos:start="11:34" pos:end="11:51"><name pos:start="11:34" pos:end="11:34">c</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:51">ignore_editlist</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:6">sc</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:44"><name pos:start="15:10" pos:end="15:10">c</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:14">fc</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">streams</name><index pos:start="15:24" pos:end="15:44">[<expr pos:start="15:25" pos:end="15:43"><name pos:start="15:25" pos:end="15:41"><name pos:start="15:25" pos:end="15:25">c</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:29">fc</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:41">nb_streams</name></name><operator pos:start="15:42" pos:end="15:42">-</operator><literal type="number" pos:start="15:43" pos:end="15:43">1</literal></expr>]</index></name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:55">priv_data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:11">version</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:25"><name pos:start="19:15" pos:end="19:21">avio_r8</name><argument_list pos:start="19:22" pos:end="19:25">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:28" pos:end="19:40">/* version */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13">avio_rb24</name><argument_list pos:start="21:14" pos:end="21:17">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:20" pos:end="21:30">/* flags */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:14">edit_count</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:26">avio_rb32</name><argument_list pos:start="23:27" pos:end="23:30">(<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:33" pos:end="23:45">/* entries */</comment>



    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19">edit_count</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:64"><if pos:start="31:5" pos:end="33:64">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:10">sc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:21">elst_data</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:64"><block_content pos:start="33:9" pos:end="33:64">

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><call pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:63">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">c</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">fc</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:36"><expr pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="33:39" pos:end="33:62"><expr pos:start="33:39" pos:end="33:62"><literal type="string" pos:start="33:39" pos:end="33:62">"Duplicated ELST atom\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:11">av_free</name><argument_list pos:start="35:12" pos:end="35:26">(<argument pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:14">sc</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:25">elst_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:6">sc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:18">elst_count</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:72"><expr pos:start="39:5" pos:end="39:71"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:6">sc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:17">elst_data</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:71"><name pos:start="39:21" pos:end="39:35">av_malloc_array</name><argument_list pos:start="39:36" pos:end="39:71">(<argument pos:start="39:37" pos:end="39:46"><expr pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:46">edit_count</name></expr></argument>, <argument pos:start="39:49" pos:end="39:70"><expr pos:start="39:49" pos:end="39:70"><sizeof pos:start="39:49" pos:end="39:70">sizeof<argument_list pos:start="39:55" pos:end="39:70">(<argument pos:start="39:56" pos:end="39:69"><expr pos:start="39:56" pos:end="39:69"><operator pos:start="39:56" pos:end="39:56">*</operator><name pos:start="39:57" pos:end="39:69"><name pos:start="39:57" pos:end="39:58">sc</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:69">elst_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:11">sc</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:22">elst_data</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:98"><expr pos:start="47:5" pos:end="47:97"><call pos:start="47:5" pos:end="47:97"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:97">(<argument pos:start="47:12" pos:end="47:16"><expr pos:start="47:12" pos:end="47:16"><name pos:start="47:12" pos:end="47:16"><name pos:start="47:12" pos:end="47:12">c</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:16">fc</name></name></expr></argument>, <argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="47:33" pos:end="47:61"><expr pos:start="47:33" pos:end="47:61"><literal type="string" pos:start="47:33" pos:end="47:61">"track[%u].edit_count = %i\n"</literal></expr></argument>, <argument pos:start="47:64" pos:end="47:84"><expr pos:start="47:64" pos:end="47:84"><name pos:start="47:64" pos:end="47:80"><name pos:start="47:64" pos:end="47:64">c</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:68">fc</name><operator pos:start="47:69" pos:end="47:70">-&gt;</operator><name pos:start="47:71" pos:end="47:80">nb_streams</name></name> <operator pos:start="47:82" pos:end="47:82">-</operator> <literal type="number" pos:start="47:84" pos:end="47:84">1</literal></expr></argument>, <argument pos:start="47:87" pos:end="47:96"><expr pos:start="47:87" pos:end="47:96"><name pos:start="47:87" pos:end="47:96">edit_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="49:5" pos:end="89:5">for <control pos:start="49:9" pos:end="49:56">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:51"><expr pos:start="49:17" pos:end="49:50"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:30">edit_count</name> <operator pos:start="49:32" pos:end="49:33">&amp;&amp;</operator> <operator pos:start="49:35" pos:end="49:35">!</operator><name pos:start="49:36" pos:end="49:50"><name pos:start="49:36" pos:end="49:37">pb</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">eof_reached</name></name></expr>;</condition> <incr pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><name pos:start="49:53" pos:end="49:53">i</name><operator pos:start="49:54" pos:end="49:55">++</operator></expr></incr>)</control> <block pos:start="49:58" pos:end="89:5">{<block_content pos:start="51:9" pos:end="87:9">

        <decl_stmt pos:start="51:9" pos:end="51:39"><decl pos:start="51:9" pos:end="51:38"><type pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:15">MOVElst</name> <modifier pos:start="51:17" pos:end="51:17">*</modifier></type><name pos:start="51:18" pos:end="51:18">e</name> <init pos:start="51:20" pos:end="51:38">= <expr pos:start="51:22" pos:end="51:38"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:38"><name pos:start="51:23" pos:end="51:24">sc</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">elst_data</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="67:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:19">version</name> <operator pos:start="55:21" pos:end="55:22">==</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>)</condition> <block pos:start="55:27" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:40">

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:13">e</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:23">duration</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:39"><name pos:start="57:27" pos:end="57:35">avio_rb64</name><argument_list pos:start="57:36" pos:end="57:39">(<argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><name pos:start="57:37" pos:end="57:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:13">e</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:19">time</name></name>     <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:39"><name pos:start="59:27" pos:end="59:35">avio_rb64</name><argument_list pos:start="59:36" pos:end="59:39">(<argument pos:start="59:37" pos:end="59:38"><expr pos:start="59:37" pos:end="59:38"><name pos:start="59:37" pos:end="59:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="67:9">else <block pos:start="61:16" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:49">

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:13">e</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">duration</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:39"><name pos:start="63:27" pos:end="63:35">avio_rb32</name><argument_list pos:start="63:36" pos:end="63:39">(<argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><name pos:start="63:37" pos:end="63:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:42" pos:end="63:63">/* segment duration */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:49"><expr pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:13">e</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:19">time</name></name>     <operator pos:start="65:25" pos:end="65:25">=</operator> <operator pos:start="65:27" pos:end="65:27">(</operator><name pos:start="65:28" pos:end="65:34">int32_t</name><operator pos:start="65:35" pos:end="65:35">)</operator><call pos:start="65:36" pos:end="65:48"><name pos:start="65:36" pos:end="65:44">avio_rb32</name><argument_list pos:start="65:45" pos:end="65:48">(<argument pos:start="65:46" pos:end="65:47"><expr pos:start="65:46" pos:end="65:47"><name pos:start="65:46" pos:end="65:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:51" pos:end="65:66">/* media time */</comment>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:9">e</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">rate</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:31"><name pos:start="69:19" pos:end="69:27">avio_rb32</name><argument_list pos:start="69:28" pos:end="69:31">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="69:33" pos:end="69:33">/</operator> <literal type="number" pos:start="69:35" pos:end="69:41">65536.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="73:46"><expr pos:start="71:9" pos:end="73:45"><call pos:start="71:9" pos:end="73:45"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:45">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:16">c</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:20">fc</name></name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="71:37" pos:end="71:81"><expr pos:start="71:37" pos:end="71:81"><literal type="string" pos:start="71:37" pos:end="71:48">"duration=%"</literal><name pos:start="71:49" pos:end="71:54">PRId64</name><literal type="string" pos:start="71:55" pos:end="71:63">" time=%"</literal><name pos:start="71:64" pos:end="71:69">PRId64</name><literal type="string" pos:start="71:70" pos:end="71:81">" rate=%f\n"</literal></expr></argument>,

               <argument pos:start="73:16" pos:end="73:26"><expr pos:start="73:16" pos:end="73:26"><name pos:start="73:16" pos:end="73:26"><name pos:start="73:16" pos:end="73:16">e</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:26">duration</name></name></expr></argument>, <argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:29">e</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:35">time</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:44"><expr pos:start="73:38" pos:end="73:44"><name pos:start="73:38" pos:end="73:44"><name pos:start="73:38" pos:end="73:38">e</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:44">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="79:65">(<expr pos:start="77:13" pos:end="79:64"><name pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:13">e</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">time</name></name> <operator pos:start="77:21" pos:end="77:21">&lt;</operator> <literal type="number" pos:start="77:23" pos:end="77:23">0</literal> <operator pos:start="77:25" pos:end="77:26">&amp;&amp;</operator> <name pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:28">e</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:34">time</name></name> <operator pos:start="77:36" pos:end="77:37">!=</operator> <operator pos:start="77:39" pos:end="77:39">-</operator><literal type="number" pos:start="77:40" pos:end="77:40">1</literal> <operator pos:start="77:42" pos:end="77:43">&amp;&amp;</operator>

            <name pos:start="79:13" pos:end="79:40"><name pos:start="79:13" pos:end="79:13">c</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:17">fc</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:40">strict_std_compliance</name></name> <operator pos:start="79:42" pos:end="79:43">&gt;=</operator> <name pos:start="79:45" pos:end="79:64">FF_COMPLIANCE_STRICT</name></expr>)</condition> <block pos:start="79:67" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:39">

            <expr_stmt pos:start="81:13" pos:end="83:52"><expr pos:start="81:13" pos:end="83:51"><call pos:start="81:13" pos:end="83:51"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="83:51">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:20">c</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:24">fc</name></name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:41" pos:end="81:101"><expr pos:start="81:41" pos:end="81:101"><literal type="string" pos:start="81:41" pos:end="81:91">"Track %d, edit %d: Invalid edit list media time=%"</literal><name pos:start="81:92" pos:end="81:97">PRId64</name><literal type="string" pos:start="81:98" pos:end="81:101">"\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:38"><expr pos:start="83:20" pos:end="83:38"><name pos:start="83:20" pos:end="83:36"><name pos:start="83:20" pos:end="83:20">c</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:24">fc</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:36">nb_streams</name></name><operator pos:start="83:37" pos:end="83:37">-</operator><literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr></argument>, <argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">i</name></expr></argument>, <argument pos:start="83:44" pos:end="83:50"><expr pos:start="83:44" pos:end="83:50"><name pos:start="83:44" pos:end="83:50"><name pos:start="83:44" pos:end="83:44">e</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:50">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:39">return <expr pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:6">sc</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:18">elst_count</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:22">i</name></expr>;</expr_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
