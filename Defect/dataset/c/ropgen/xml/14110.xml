<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14110.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ftp_passive_mode</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">FTPContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:24">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">res</name> <init pos:start="5:15" pos:end="5:20">= <expr pos:start="5:17" pos:end="5:20"><name pos:start="5:17" pos:end="5:20">NULL</name></expr></init></decl>, <decl pos:start="5:23" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:10"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">start</name></decl>, <decl pos:start="5:31" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:10"><modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:34">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">command</name> <init pos:start="9:25" pos:end="9:36">= <expr pos:start="9:27" pos:end="9:36"><literal type="string" pos:start="9:27" pos:end="9:36">"PASV\r\n"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:26"><name pos:start="11:15" pos:end="11:24">pasv_codes</name><index pos:start="11:25" pos:end="11:26">[]</index></name> <init pos:start="11:28" pos:end="11:37">= <expr pos:start="11:30" pos:end="11:37"><block pos:start="11:30" pos:end="11:37">{<expr pos:start="11:31" pos:end="11:33"><literal type="number" pos:start="11:31" pos:end="11:33">227</literal></expr>, <expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:55"><name pos:start="15:10" pos:end="15:25">ftp_send_command</name><argument_list pos:start="15:26" pos:end="15:55">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">s</name></expr></argument>, <argument pos:start="15:30" pos:end="15:36"><expr pos:start="15:30" pos:end="15:36"><name pos:start="15:30" pos:end="15:36">command</name></expr></argument>, <argument pos:start="15:39" pos:end="15:48"><expr pos:start="15:39" pos:end="15:48"><name pos:start="15:39" pos:end="15:48">pasv_codes</name></expr></argument>, <argument pos:start="15:51" pos:end="15:54"><expr pos:start="15:51" pos:end="15:54"><operator pos:start="15:51" pos:end="15:51">&amp;</operator><name pos:start="15:52" pos:end="15:54">res</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <goto pos:start="17:9" pos:end="17:18">goto <name pos:start="17:14" pos:end="17:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">start</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:16">NULL</name></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="37:5">for <control pos:start="23:9" pos:end="23:37">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:32"><expr pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <call pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:26">strlen</name><argument_list pos:start="23:27" pos:end="23:31">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">res</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><operator pos:start="23:34" pos:end="23:35">++</operator><name pos:start="23:36" pos:end="23:36">i</name></expr></incr>)</control> <block pos:start="23:39" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:26">(<expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">res</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><name pos:start="25:17" pos:end="25:17">i</name></expr>]</index></name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="char" pos:start="25:23" pos:end="25:25">'('</literal></expr>)</condition> <block pos:start="25:28" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:32">

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:17">start</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:23">res</name> <operator pos:start="27:25" pos:end="27:25">+</operator> <name pos:start="27:27" pos:end="27:27">i</name> <operator pos:start="27:29" pos:end="27:29">+</operator> <literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="35:9">else if <condition pos:start="29:19" pos:end="29:33">(<expr pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">res</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name> <operator pos:start="29:27" pos:end="29:28">==</operator> <literal type="char" pos:start="29:30" pos:end="29:32">')'</literal></expr>)</condition> <block pos:start="29:35" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:15">end</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:21">res</name> <operator pos:start="31:23" pos:end="31:23">+</operator> <name pos:start="31:25" pos:end="31:25">i</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:14">start</name> <operator pos:start="39:16" pos:end="39:17">||</operator> <operator pos:start="39:19" pos:end="39:19">!</operator><name pos:start="39:20" pos:end="39:22">end</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:17"><expr pos:start="45:5" pos:end="45:16"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:8">end</name>  <operator pos:start="45:11" pos:end="45:11">=</operator> <literal type="char" pos:start="45:13" pos:end="45:16">'\0'</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:17">/* skip ip */</comment>

    <if_stmt pos:start="49:5" pos:end="49:48"><if pos:start="49:5" pos:end="49:48">if <condition pos:start="49:8" pos:end="49:37">(<expr pos:start="49:9" pos:end="49:36"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:36"><name pos:start="49:10" pos:end="49:18">av_strtok</name><argument_list pos:start="49:19" pos:end="49:36">(<argument pos:start="49:20" pos:end="49:24"><expr pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:24">start</name></expr></argument>, <argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><literal type="string" pos:start="49:27" pos:end="49:29">","</literal></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:35">end</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:39" pos:end="49:48"><block_content pos:start="49:39" pos:end="49:48"> <goto pos:start="49:39" pos:end="49:48">goto <name pos:start="49:44" pos:end="49:47">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="51:46"><if pos:start="51:5" pos:end="51:46">if <condition pos:start="51:8" pos:end="51:35">(<expr pos:start="51:9" pos:end="51:34"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:34"><name pos:start="51:10" pos:end="51:18">av_strtok</name><argument_list pos:start="51:19" pos:end="51:34">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">end</name></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><literal type="string" pos:start="51:25" pos:end="51:27">","</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:33"><expr pos:start="51:30" pos:end="51:33"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:33">end</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:37" pos:end="51:46"><block_content pos:start="51:37" pos:end="51:46"> <goto pos:start="51:37" pos:end="51:46">goto <name pos:start="51:42" pos:end="51:45">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="53:46"><if pos:start="53:5" pos:end="53:46">if <condition pos:start="53:8" pos:end="53:35">(<expr pos:start="53:9" pos:end="53:34"><operator pos:start="53:9" pos:end="53:9">!</operator><call pos:start="53:10" pos:end="53:34"><name pos:start="53:10" pos:end="53:18">av_strtok</name><argument_list pos:start="53:19" pos:end="53:34">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">end</name></expr></argument>, <argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><literal type="string" pos:start="53:25" pos:end="53:27">","</literal></expr></argument>, <argument pos:start="53:30" pos:end="53:33"><expr pos:start="53:30" pos:end="53:33"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:33">end</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:37" pos:end="53:46"><block_content pos:start="53:37" pos:end="53:46"> <goto pos:start="53:37" pos:end="53:46">goto <name pos:start="53:42" pos:end="53:45">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="55:46"><if pos:start="55:5" pos:end="55:46">if <condition pos:start="55:8" pos:end="55:35">(<expr pos:start="55:9" pos:end="55:34"><operator pos:start="55:9" pos:end="55:9">!</operator><call pos:start="55:10" pos:end="55:34"><name pos:start="55:10" pos:end="55:18">av_strtok</name><argument_list pos:start="55:19" pos:end="55:34">(<argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">end</name></expr></argument>, <argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><literal type="string" pos:start="55:25" pos:end="55:27">","</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:33">end</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:37" pos:end="55:46"><block_content pos:start="55:37" pos:end="55:46"> <goto pos:start="55:37" pos:end="55:46">goto <name pos:start="55:42" pos:end="55:45">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:27">/* parse port number */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:9">start</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:21">av_strtok</name><argument_list pos:start="61:22" pos:end="61:37">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">end</name></expr></argument>, <argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><literal type="string" pos:start="61:28" pos:end="61:30">","</literal></expr></argument>, <argument pos:start="61:33" pos:end="61:36"><expr pos:start="61:33" pos:end="61:36"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:36">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="63:26"><if pos:start="63:5" pos:end="63:26">if <condition pos:start="63:8" pos:end="63:15">(<expr pos:start="63:9" pos:end="63:14"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:14">start</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:26"><block_content pos:start="63:17" pos:end="63:26"> <goto pos:start="63:17" pos:end="63:26">goto <name pos:start="63:22" pos:end="63:25">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:23">server_data_port</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:37"><name pos:start="65:27" pos:end="65:30">atoi</name><argument_list pos:start="65:31" pos:end="65:37">(<argument pos:start="65:32" pos:end="65:36"><expr pos:start="65:32" pos:end="65:36"><name pos:start="65:32" pos:end="65:36">start</name></expr></argument>)</argument_list></call> <operator pos:start="65:39" pos:end="65:39">*</operator> <literal type="number" pos:start="65:41" pos:end="65:43">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:38"><expr pos:start="67:5" pos:end="67:37"><name pos:start="67:5" pos:end="67:9">start</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:21">av_strtok</name><argument_list pos:start="67:22" pos:end="67:37">(<argument pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:25">end</name></expr></argument>, <argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><literal type="string" pos:start="67:28" pos:end="67:30">","</literal></expr></argument>, <argument pos:start="67:33" pos:end="67:36"><expr pos:start="67:33" pos:end="67:36"><operator pos:start="67:33" pos:end="67:33">&amp;</operator><name pos:start="67:34" pos:end="67:36">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="69:26"><if pos:start="69:5" pos:end="69:26">if <condition pos:start="69:8" pos:end="69:15">(<expr pos:start="69:9" pos:end="69:14"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:14">start</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:26"><block_content pos:start="69:17" pos:end="69:26"> <goto pos:start="69:17" pos:end="69:26">goto <name pos:start="69:22" pos:end="69:25">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:23">server_data_port</name></name> <operator pos:start="71:25" pos:end="71:26">+=</operator> <call pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:31">atoi</name><argument_list pos:start="71:32" pos:end="71:38">(<argument pos:start="71:33" pos:end="71:37"><expr pos:start="71:33" pos:end="71:37"><name pos:start="71:33" pos:end="71:37">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><call pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:11">av_dlog</name><argument_list pos:start="73:12" pos:end="73:61">(<argument pos:start="73:13" pos:end="73:13"><expr pos:start="73:13" pos:end="73:13"><name pos:start="73:13" pos:end="73:13">s</name></expr></argument>, <argument pos:start="73:16" pos:end="73:39"><expr pos:start="73:16" pos:end="73:39"><literal type="string" pos:start="73:16" pos:end="73:39">"Server data port: %d\n"</literal></expr></argument>, <argument pos:start="73:42" pos:end="73:60"><expr pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:42">s</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:60">server_data_port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:17"><expr pos:start="77:5" pos:end="77:16"><call pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:11">av_free</name><argument_list pos:start="77:12" pos:end="77:16">(<argument pos:start="77:13" pos:end="77:15"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>



  <label pos:start="83:3" pos:end="83:7"><name pos:start="83:3" pos:end="83:6">fail</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:17"><expr pos:start="85:5" pos:end="85:16"><call pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:11">av_free</name><argument_list pos:start="85:12" pos:end="85:16">(<argument pos:start="85:13" pos:end="85:15"><expr pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:23">server_data_port</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <operator pos:start="87:27" pos:end="87:27">-</operator><literal type="number" pos:start="87:28" pos:end="87:28">1</literal></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:24">return <expr pos:start="89:12" pos:end="89:23"><call pos:start="89:12" pos:end="89:23"><name pos:start="89:12" pos:end="89:18">AVERROR</name><argument_list pos:start="89:19" pos:end="89:23">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
