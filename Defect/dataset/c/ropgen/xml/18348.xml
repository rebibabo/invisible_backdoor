<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18348.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">do_multiwrite</name><parameter_list pos:start="1:26" pos:end="3:19">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:60">BlockRequest</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">blkreq</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:18">num_writes</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:53"><name pos:start="9:11" pos:end="9:29">bdrv_aio_multiwrite</name><argument_list pos:start="9:30" pos:end="9:53">(<argument pos:start="9:31" pos:end="9:32"><expr pos:start="9:31" pos:end="9:32"><name pos:start="9:31" pos:end="9:32">bs</name></expr></argument>, <argument pos:start="9:35" pos:end="9:40"><expr pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:40">blkreq</name></expr></argument>, <argument pos:start="9:43" pos:end="9:52"><expr pos:start="9:43" pos:end="9:52"><name pos:start="9:43" pos:end="9:52">num_writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:14">!=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>)</condition> <block pos:start="13:19" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <for pos:start="15:9" pos:end="23:9">for <control pos:start="15:13" pos:end="15:40">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:35"><expr pos:start="15:21" pos:end="15:34"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:34">num_writes</name></expr>;</condition> <incr pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:37">i</name><operator pos:start="15:38" pos:end="15:39">++</operator></expr></incr>)</control> <block pos:start="15:42" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:13">

            <if_stmt pos:start="17:13" pos:end="21:13"><if pos:start="17:13" pos:end="21:13">if <condition pos:start="17:16" pos:end="17:32">(<expr pos:start="17:17" pos:end="17:31"><name pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:22">blkreq</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">i</name></expr>]</index></name><operator pos:start="17:26" pos:end="17:26">.</operator><name pos:start="17:27" pos:end="17:31">error</name></expr>)</condition> <block pos:start="17:34" pos:end="21:13">{<block_content pos:start="19:17" pos:end="19:63">

                <expr_stmt pos:start="19:17" pos:end="19:63"><expr pos:start="19:17" pos:end="19:62"><call pos:start="19:17" pos:end="19:62"><name pos:start="19:17" pos:end="19:38">virtio_blk_rw_complete</name><argument_list pos:start="19:39" pos:end="19:62">(<argument pos:start="19:40" pos:end="19:55"><expr pos:start="19:40" pos:end="19:55"><name pos:start="19:40" pos:end="19:48"><name pos:start="19:40" pos:end="19:45">blkreq</name><index pos:start="19:46" pos:end="19:48">[<expr pos:start="19:47" pos:end="19:47"><name pos:start="19:47" pos:end="19:47">i</name></expr>]</index></name><operator pos:start="19:49" pos:end="19:49">.</operator><name pos:start="19:50" pos:end="19:55">opaque</name></expr></argument>, <argument pos:start="19:58" pos:end="19:61"><expr pos:start="19:58" pos:end="19:61"><operator pos:start="19:58" pos:end="19:58">-</operator><name pos:start="19:59" pos:end="19:61">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
