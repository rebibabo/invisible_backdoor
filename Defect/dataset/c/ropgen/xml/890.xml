<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/890.c" pos:tabs="8"><macro pos:start="1:1" pos:end="11:66"><name pos:start="1:1" pos:end="1:23">yuv2gray16_1_c_template</name><argument_list pos:start="1:24" pos:end="11:66">(<argument pos:start="1:25" pos:end="1:37">SwsContext *c</argument>, <argument pos:start="1:40" pos:end="1:59">const uint16_t *buf0</argument>,

                        <argument pos:start="3:25" pos:end="3:45">const uint16_t *ubuf0</argument>, <argument pos:start="3:48" pos:end="3:68">const uint16_t *ubuf1</argument>,

                        <argument pos:start="5:25" pos:end="5:45">const uint16_t *vbuf0</argument>, <argument pos:start="5:48" pos:end="5:68">const uint16_t *vbuf1</argument>,

                        <argument pos:start="7:25" pos:end="7:45">const uint16_t *abuf0</argument>, <argument pos:start="7:48" pos:end="7:60">uint8_t *dest</argument>, <argument pos:start="7:63" pos:end="7:70">int dstW</argument>,

                        <argument pos:start="9:25" pos:end="9:35">int uvalpha</argument>, <argument pos:start="9:38" pos:end="9:63">enum PixelFormat dstFormat</argument>,

                        <argument pos:start="11:25" pos:end="11:33">int flags</argument>, <argument pos:start="11:36" pos:end="11:40">int y</argument>, <argument pos:start="11:43" pos:end="11:65">enum PixelFormat target</argument>)</argument_list></macro>

<block pos:start="13:1" pos:end="35:1">{<block_content pos:start="15:5" pos:end="33:5">

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="33:5">for <control pos:start="19:9" pos:end="19:37">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:25">dstW</name> <operator pos:start="19:27" pos:end="19:28">&gt;&gt;</operator> <literal type="number" pos:start="19:30" pos:end="19:30">1</literal><operator pos:start="19:31" pos:end="19:31">)</operator></expr>;</condition> <incr pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:34">i</name><operator pos:start="19:35" pos:end="19:36">++</operator></expr></incr>)</control> <block pos:start="19:39" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:44">

        <decl_stmt pos:start="21:9" pos:end="21:29"><decl pos:start="21:9" pos:end="21:28"><type pos:start="21:9" pos:end="21:17"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:17">int</name></type> <name pos:start="21:19" pos:end="21:20">i2</name> <init pos:start="21:22" pos:end="21:28">= <expr pos:start="21:24" pos:end="21:28"><literal type="number" pos:start="21:24" pos:end="21:24">2</literal> <operator pos:start="21:26" pos:end="21:26">*</operator> <name pos:start="21:28" pos:end="21:28">i</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:33"><decl pos:start="23:9" pos:end="23:32"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">Y1</name> <init pos:start="23:16" pos:end="23:32">= <expr pos:start="23:18" pos:end="23:32"><name pos:start="23:18" pos:end="23:27"><name pos:start="23:18" pos:end="23:21">buf0</name><index pos:start="23:22" pos:end="23:27">[<expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">i2</name></expr>  ]</index></name> <operator pos:start="23:29" pos:end="23:30">&lt;&lt;</operator> <literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:33"><decl pos:start="25:9" pos:end="25:32"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:14">Y2</name> <init pos:start="25:16" pos:end="25:32">= <expr pos:start="25:18" pos:end="25:32"><name pos:start="25:18" pos:end="25:27"><name pos:start="25:18" pos:end="25:21">buf0</name><index pos:start="25:22" pos:end="25:27">[<expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:24">i2</name><operator pos:start="25:25" pos:end="25:25">+</operator><literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>]</index></name> <operator pos:start="25:29" pos:end="25:30">&lt;&lt;</operator> <literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:20">output_pixel</name><argument_list pos:start="29:21" pos:end="29:43">(<argument pos:start="29:22" pos:end="29:38"><expr pos:start="29:22" pos:end="29:38"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:38"><name pos:start="29:23" pos:end="29:26">dest</name><index pos:start="29:27" pos:end="29:38">[<expr pos:start="29:28" pos:end="29:37"><literal type="number" pos:start="29:28" pos:end="29:28">2</literal> <operator pos:start="29:30" pos:end="29:30">*</operator> <name pos:start="29:32" pos:end="29:33">i2</name> <operator pos:start="29:35" pos:end="29:35">+</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:41" pos:end="29:42"><expr pos:start="29:41" pos:end="29:42"><name pos:start="29:41" pos:end="29:42">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:20">output_pixel</name><argument_list pos:start="31:21" pos:end="31:43">(<argument pos:start="31:22" pos:end="31:38"><expr pos:start="31:22" pos:end="31:38"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:26">dest</name><index pos:start="31:27" pos:end="31:38">[<expr pos:start="31:28" pos:end="31:37"><literal type="number" pos:start="31:28" pos:end="31:28">2</literal> <operator pos:start="31:30" pos:end="31:30">*</operator> <name pos:start="31:32" pos:end="31:33">i2</name> <operator pos:start="31:35" pos:end="31:35">+</operator> <literal type="number" pos:start="31:37" pos:end="31:37">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><name pos:start="31:41" pos:end="31:42">Y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
