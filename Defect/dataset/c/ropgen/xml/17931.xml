<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17931.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">av_parse_color</name><parameter_list pos:start="1:19" pos:end="1:80">(<parameter pos:start="1:20" pos:end="1:38"><decl pos:start="1:20" pos:end="1:38"><type pos:start="1:20" pos:end="1:38"><name pos:start="1:20" pos:end="1:26">uint8_t</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:38">rgba_color</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:64"><decl pos:start="1:41" pos:end="1:64"><type pos:start="1:41" pos:end="1:64"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:64">color_string</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:70">void</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:79">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <if_stmt pos:start="5:5" pos:end="73:5"><if pos:start="5:5" pos:end="17:5">if <condition pos:start="5:8" pos:end="5:85">(<expr pos:start="5:9" pos:end="5:84"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:43"><name pos:start="5:10" pos:end="5:19">strcasecmp</name><argument_list pos:start="5:20" pos:end="5:43">(<argument pos:start="5:21" pos:end="5:32"><expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32">color_string</name></expr></argument>, <argument pos:start="5:35" pos:end="5:42"><expr pos:start="5:35" pos:end="5:42"><literal type="string" pos:start="5:35" pos:end="5:42">"random"</literal></expr></argument>)</argument_list></call> <operator pos:start="5:45" pos:end="5:46">||</operator> <operator pos:start="5:48" pos:end="5:48">!</operator><call pos:start="5:49" pos:end="5:84"><name pos:start="5:49" pos:end="5:58">strcasecmp</name><argument_list pos:start="5:59" pos:end="5:84">(<argument pos:start="5:60" pos:end="5:71"><expr pos:start="5:60" pos:end="5:71"><name pos:start="5:60" pos:end="5:71">color_string</name></expr></argument>, <argument pos:start="5:74" pos:end="5:83"><expr pos:start="5:74" pos:end="5:83"><literal type="string" pos:start="5:74" pos:end="5:83">"bikeshed"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:87" pos:end="17:5">{<block_content pos:start="7:9" pos:end="15:29">

        <decl_stmt pos:start="7:9" pos:end="7:40"><decl pos:start="7:9" pos:end="7:39"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:16">rgba</name> <init pos:start="7:18" pos:end="7:39">= <expr pos:start="7:20" pos:end="7:39"><call pos:start="7:20" pos:end="7:39"><name pos:start="7:20" pos:end="7:37">ff_random_get_seed</name><argument_list pos:start="7:38" pos:end="7:39">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:35"><expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:18">rgba_color</name><index pos:start="9:19" pos:end="9:21">[<expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr>]</index></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <name pos:start="9:25" pos:end="9:28">rgba</name> <operator pos:start="9:30" pos:end="9:31">&gt;&gt;</operator> <literal type="number" pos:start="9:33" pos:end="9:34">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:18">rgba_color</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr>]</index></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:28">rgba</name> <operator pos:start="11:30" pos:end="11:31">&gt;&gt;</operator> <literal type="number" pos:start="11:33" pos:end="11:34">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:34"><expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:18">rgba_color</name><index pos:start="13:19" pos:end="13:21">[<expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">2</literal></expr>]</index></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:28">rgba</name> <operator pos:start="13:30" pos:end="13:31">&gt;&gt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:18">rgba_color</name><index pos:start="15:19" pos:end="15:21">[<expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">3</literal></expr>]</index></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:28">rgba</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="51:5">else

    if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:39"><name pos:start="19:10" pos:end="19:16">strncmp</name><argument_list pos:start="19:17" pos:end="19:39">(<argument pos:start="19:18" pos:end="19:29"><expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29">color_string</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><literal type="string" pos:start="19:32" pos:end="19:35">"0x"</literal></expr></argument>, <argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:42" pos:end="51:5">{<block_content pos:start="21:9" pos:end="49:29">

        <decl_stmt pos:start="21:9" pos:end="21:19"><decl pos:start="21:9" pos:end="21:18"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:12">char</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:18">tail</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:39"><decl pos:start="23:9" pos:end="23:38"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">len</name> <init pos:start="23:17" pos:end="23:38">= <expr pos:start="23:19" pos:end="23:38"><call pos:start="23:19" pos:end="23:38"><name pos:start="23:19" pos:end="23:24">strlen</name><argument_list pos:start="23:25" pos:end="23:38">(<argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">color_string</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:51"><decl pos:start="25:9" pos:end="25:50"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">rgba</name> <init pos:start="25:18" pos:end="25:50">= <expr pos:start="25:20" pos:end="25:50"><call pos:start="25:20" pos:end="25:50"><name pos:start="25:20" pos:end="25:25">strtol</name><argument_list pos:start="25:26" pos:end="25:50">(<argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:38">color_string</name></expr></argument>, <argument pos:start="25:41" pos:end="25:45"><expr pos:start="25:41" pos:end="25:45"><operator pos:start="25:41" pos:end="25:41">&amp;</operator><name pos:start="25:42" pos:end="25:45">tail</name></expr></argument>, <argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><literal type="number" pos:start="25:48" pos:end="25:49">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:45">(<expr pos:start="29:13" pos:end="29:44"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:17">tail</name> <operator pos:start="29:19" pos:end="29:20">||</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:25">len</name> <operator pos:start="29:27" pos:end="29:28">!=</operator> <literal type="number" pos:start="29:30" pos:end="29:30">8</literal> <operator pos:start="29:32" pos:end="29:33">&amp;&amp;</operator> <name pos:start="29:35" pos:end="29:37">len</name> <operator pos:start="29:39" pos:end="29:40">!=</operator> <literal type="number" pos:start="29:42" pos:end="29:43">10</literal><operator pos:start="29:44" pos:end="29:44">)</operator></expr>)</condition> <block pos:start="29:47" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:101"><expr pos:start="31:13" pos:end="31:100"><call pos:start="31:13" pos:end="31:100"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:100">(<argument pos:start="31:20" pos:end="31:26"><expr pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:26">log_ctx</name></expr></argument>, <argument pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:43" pos:end="31:85"><expr pos:start="31:43" pos:end="31:85"><literal type="string" pos:start="31:43" pos:end="31:85">"Invalid 0xRRGGBB[AA] color string: '%s'\n"</literal></expr></argument>, <argument pos:start="31:88" pos:end="31:99"><expr pos:start="31:88" pos:end="31:99"><name pos:start="31:88" pos:end="31:99">color_string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:22">(<expr pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:18">==</operator> <literal type="number" pos:start="37:20" pos:end="37:21">10</literal></expr>)</condition> <block pos:start="37:24" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:23">

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:22">rgba_color</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">3</literal></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:32">rgba</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:16">rgba</name> <operator pos:start="41:18" pos:end="41:20">&gt;&gt;=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:18">rgba_color</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:28">rgba</name> <operator pos:start="45:30" pos:end="45:31">&gt;&gt;</operator> <literal type="number" pos:start="45:33" pos:end="45:34">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:18">rgba_color</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">1</literal></expr>]</index></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:28">rgba</name> <operator pos:start="47:30" pos:end="47:31">&gt;&gt;</operator> <literal type="number" pos:start="47:33" pos:end="47:33">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:18">rgba_color</name><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">2</literal></expr>]</index></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:28">rgba</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="73:5">else <block pos:start="51:12" pos:end="73:5">{<block_content pos:start="53:9" pos:end="71:49">

        <decl_stmt pos:start="53:9" pos:end="61:63"><decl pos:start="53:9" pos:end="61:62"><type pos:start="53:9" pos:end="53:26"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:24">ColorEntry</name> <modifier pos:start="53:26" pos:end="53:26">*</modifier></type><name pos:start="53:27" pos:end="53:31">entry</name> <init pos:start="53:33" pos:end="61:62">= <expr pos:start="53:35" pos:end="61:62"><call pos:start="53:35" pos:end="61:62"><name pos:start="53:35" pos:end="53:41">bsearch</name><argument_list pos:start="53:42" pos:end="61:62">(<argument pos:start="53:43" pos:end="53:54"><expr pos:start="53:43" pos:end="53:54"><name pos:start="53:43" pos:end="53:54">color_string</name></expr></argument>,

                                          <argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:53">color_table</name></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:69"><expr pos:start="57:43" pos:end="57:69"><call pos:start="57:43" pos:end="57:69"><name pos:start="57:43" pos:end="57:56">FF_ARRAY_ELEMS</name><argument_list pos:start="57:57" pos:end="57:69">(<argument pos:start="57:58" pos:end="57:68"><expr pos:start="57:58" pos:end="57:68"><name pos:start="57:58" pos:end="57:68">color_table</name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="59:43" pos:end="59:60"><expr pos:start="59:43" pos:end="59:60"><sizeof pos:start="59:43" pos:end="59:60">sizeof<argument_list pos:start="59:49" pos:end="59:60">(<argument pos:start="59:50" pos:end="59:59"><expr pos:start="59:50" pos:end="59:59"><name pos:start="59:50" pos:end="59:59">ColorEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:61"><expr pos:start="61:43" pos:end="61:61"><name pos:start="61:43" pos:end="61:61">color_table_compare</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:19">(<expr pos:start="63:13" pos:end="63:18"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:18">entry</name></expr>)</condition> <block pos:start="63:21" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:84"><expr pos:start="65:13" pos:end="65:83"><call pos:start="65:13" pos:end="65:83"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:83">(<argument pos:start="65:20" pos:end="65:26"><expr pos:start="65:20" pos:end="65:26"><name pos:start="65:20" pos:end="65:26">log_ctx</name></expr></argument>, <argument pos:start="65:29" pos:end="65:40"><expr pos:start="65:29" pos:end="65:40"><name pos:start="65:29" pos:end="65:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:43" pos:end="65:68"><expr pos:start="65:43" pos:end="65:68"><literal type="string" pos:start="65:43" pos:end="65:68">"Cannot find color '%s'\n"</literal></expr></argument>, <argument pos:start="65:71" pos:end="65:82"><expr pos:start="65:71" pos:end="65:82"><name pos:start="65:71" pos:end="65:82">color_string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:49"><expr pos:start="71:9" pos:end="71:48"><call pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:14">memcpy</name><argument_list pos:start="71:15" pos:end="71:48">(<argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25">rgba_color</name></expr></argument>, <argument pos:start="71:28" pos:end="71:44"><expr pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:32">entry</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:44">rgba_color</name></name></expr></argument>, <argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
