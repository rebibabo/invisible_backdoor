<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20468.c" pos:tabs="8"><function pos:start="1:1" pos:end="475:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ohci_service_iso_td</name><parameter_list pos:start="1:31" pos:end="3:46">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:40">OHCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">ohci</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:54">struct</name> <name pos:start="1:56" pos:end="1:62">ohci_ed</name></name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">ed</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:45">completion</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="475:1">{<block_content pos:start="7:5" pos:end="473:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:14">len</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="11:1" pos:end="11:18">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:18">DEBUG_ISOCH</name></cpp:ifdef>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">str</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">USBDevice</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:10">struct</name> <name pos:start="25:12" pos:end="25:22">ohci_iso_td</name></name></type> <name pos:start="25:24" pos:end="25:29">iso_td</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:28"><decl pos:start="29:5" pos:end="29:27"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint16_t</name></type> <name pos:start="29:14" pos:end="29:27">starting_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:33"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int16_t</name></type> <name pos:start="31:13" pos:end="31:33">relative_frame_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:20"><decl pos:start="33:5" pos:end="33:19"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:19">frame_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:55"><decl pos:start="35:5" pos:end="35:25"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">uint32_t</name></type> <name pos:start="35:14" pos:end="35:25">start_offset</name></decl>, <decl pos:start="35:28" pos:end="35:38"><type ref="prev" pos:start="35:5" pos:end="35:12"/><name pos:start="35:28" pos:end="35:38">next_offset</name></decl>, <decl pos:start="35:41" pos:end="35:54"><type ref="prev" pos:start="35:5" pos:end="35:12"/><name pos:start="35:41" pos:end="35:50">end_offset</name> <init pos:start="35:52" pos:end="35:54">= <expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:34"><decl pos:start="37:5" pos:end="37:23"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:23">start_addr</name></decl>, <decl pos:start="37:26" pos:end="37:33"><type ref="prev" pos:start="37:5" pos:end="37:12"/><name pos:start="37:26" pos:end="37:33">end_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:8">addr</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <name pos:start="41:12" pos:end="41:19"><name pos:start="41:12" pos:end="41:13">ed</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">head</name></name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <name pos:start="41:23" pos:end="41:36">OHCI_DPTR_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:47">(<expr pos:start="45:9" pos:end="45:46"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:46"><name pos:start="45:10" pos:end="45:25">ohci_read_iso_td</name><argument_list pos:start="45:26" pos:end="45:46">(<argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">ohci</name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">addr</name></expr></argument>, <argument pos:start="45:39" pos:end="45:45"><expr pos:start="45:39" pos:end="45:45"><operator pos:start="45:39" pos:end="45:39">&amp;</operator><name pos:start="45:40" pos:end="45:45">iso_td</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:49" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">printf</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:52"><expr pos:start="47:16" pos:end="47:52"><literal type="string" pos:start="47:16" pos:end="47:52">"usb-ohci: ISO_TD read error at %x\n"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><name pos:start="47:55" pos:end="47:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:50"><expr pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:18">starting_frame</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:49"><name pos:start="55:22" pos:end="55:28">OHCI_BM</name><argument_list pos:start="55:29" pos:end="55:49">(<argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:35">iso_td</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:41">flags</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:48"><expr pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:48">TD_SF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:15">frame_count</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:46"><name pos:start="57:19" pos:end="57:25">OHCI_BM</name><argument_list pos:start="57:26" pos:end="57:46">(<argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:32">iso_td</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:38">flags</name></name></expr></argument>, <argument pos:start="57:41" pos:end="57:45"><expr pos:start="57:41" pos:end="57:45"><name pos:start="57:41" pos:end="57:45">TD_FC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="64:0"><expr pos:start="59:5" pos:end="59:68"><name pos:start="59:5" pos:end="59:25">relative_frame_number</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:68"><name pos:start="59:29" pos:end="59:32">USUB</name><argument_list pos:start="59:33" pos:end="59:68">(<argument pos:start="59:34" pos:end="59:51"><expr pos:start="59:34" pos:end="59:51"><name pos:start="59:34" pos:end="59:51"><name pos:start="59:34" pos:end="59:37">ohci</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:51">frame_number</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:67"><expr pos:start="59:54" pos:end="59:67"><name pos:start="59:54" pos:end="59:67">starting_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<cpp:ifdef pos:start="63:1" pos:end="63:18">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:18">DEBUG_ISOCH</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="94:0"><expr pos:start="65:5" pos:end="91:70"><call pos:start="65:5" pos:end="91:70"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="91:70">(<argument pos:start="65:12" pos:end="77:34"><expr pos:start="65:12" pos:end="77:34"><literal type="string" pos:start="65:12" pos:end="65:53">"--- ISO_TD ED head 0x%.8x tailp 0x%.8x\n"</literal>

           <literal type="string" pos:start="67:12" pos:end="67:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="69:12" pos:end="69:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="71:12" pos:end="71:42">"0x%.8x 0x%.8x 0x%.8x 0x%.8x\n"</literal>

           <literal type="string" pos:start="73:12" pos:end="73:56">"frame_number 0x%.8x starting_frame 0x%.8x\n"</literal>

           <literal type="string" pos:start="75:12" pos:end="75:46">"frame_count  0x%.8x relative %d\n"</literal>

           <literal type="string" pos:start="77:12" pos:end="77:34">"di 0x%.8x cc 0x%.8x\n"</literal></expr></argument>,

           <argument pos:start="79:12" pos:end="79:36"><expr pos:start="79:12" pos:end="79:36"><name pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:13">ed</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">head</name></name> <operator pos:start="79:21" pos:end="79:21">&amp;</operator> <name pos:start="79:23" pos:end="79:36">OHCI_DPTR_MASK</name></expr></argument>, <argument pos:start="79:39" pos:end="79:63"><expr pos:start="79:39" pos:end="79:63"><name pos:start="79:39" pos:end="79:46"><name pos:start="79:39" pos:end="79:40">ed</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:46">tail</name></name> <operator pos:start="79:48" pos:end="79:48">&amp;</operator> <name pos:start="79:50" pos:end="79:63">OHCI_DPTR_MASK</name></expr></argument>,

           <argument pos:start="81:12" pos:end="81:23"><expr pos:start="81:12" pos:end="81:23"><name pos:start="81:12" pos:end="81:23"><name pos:start="81:12" pos:end="81:17">iso_td</name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:23">flags</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:34"><expr pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:31">iso_td</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:34">bp</name></name></expr></argument>, <argument pos:start="81:37" pos:end="81:47"><expr pos:start="81:37" pos:end="81:47"><name pos:start="81:37" pos:end="81:47"><name pos:start="81:37" pos:end="81:42">iso_td</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:47">next</name></name></expr></argument>, <argument pos:start="81:50" pos:end="81:58"><expr pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:55">iso_td</name><operator pos:start="81:56" pos:end="81:56">.</operator><name pos:start="81:57" pos:end="81:58">be</name></name></expr></argument>,

           <argument pos:start="83:12" pos:end="83:27"><expr pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:17">iso_td</name><operator pos:start="83:18" pos:end="83:18">.</operator><name pos:start="83:19" pos:end="83:24">offset</name><index pos:start="83:25" pos:end="83:27">[<expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:30" pos:end="83:45"><expr pos:start="83:30" pos:end="83:45"><name pos:start="83:30" pos:end="83:45"><name pos:start="83:30" pos:end="83:35">iso_td</name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:42">offset</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:48" pos:end="83:63"><expr pos:start="83:48" pos:end="83:63"><name pos:start="83:48" pos:end="83:63"><name pos:start="83:48" pos:end="83:53">iso_td</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:60">offset</name><index pos:start="83:61" pos:end="83:63">[<expr pos:start="83:62" pos:end="83:62"><literal type="number" pos:start="83:62" pos:end="83:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:66" pos:end="83:81"><expr pos:start="83:66" pos:end="83:81"><name pos:start="83:66" pos:end="83:81"><name pos:start="83:66" pos:end="83:71">iso_td</name><operator pos:start="83:72" pos:end="83:72">.</operator><name pos:start="83:73" pos:end="83:78">offset</name><index pos:start="83:79" pos:end="83:81">[<expr pos:start="83:80" pos:end="83:80"><literal type="number" pos:start="83:80" pos:end="83:80">3</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="85:12" pos:end="85:27"><expr pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:17">iso_td</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:24">offset</name><index pos:start="85:25" pos:end="85:27">[<expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:30" pos:end="85:45"><expr pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:35">iso_td</name><operator pos:start="85:36" pos:end="85:36">.</operator><name pos:start="85:37" pos:end="85:42">offset</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:48" pos:end="85:63"><expr pos:start="85:48" pos:end="85:63"><name pos:start="85:48" pos:end="85:63"><name pos:start="85:48" pos:end="85:53">iso_td</name><operator pos:start="85:54" pos:end="85:54">.</operator><name pos:start="85:55" pos:end="85:60">offset</name><index pos:start="85:61" pos:end="85:63">[<expr pos:start="85:62" pos:end="85:62"><literal type="number" pos:start="85:62" pos:end="85:62">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:66" pos:end="85:81"><expr pos:start="85:66" pos:end="85:81"><name pos:start="85:66" pos:end="85:81"><name pos:start="85:66" pos:end="85:71">iso_td</name><operator pos:start="85:72" pos:end="85:72">.</operator><name pos:start="85:73" pos:end="85:78">offset</name><index pos:start="85:79" pos:end="85:81">[<expr pos:start="85:80" pos:end="85:80"><literal type="number" pos:start="85:80" pos:end="85:80">7</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="87:12" pos:end="87:29"><expr pos:start="87:12" pos:end="87:29"><name pos:start="87:12" pos:end="87:29"><name pos:start="87:12" pos:end="87:15">ohci</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:29">frame_number</name></name></expr></argument>, <argument pos:start="87:32" pos:end="87:45"><expr pos:start="87:32" pos:end="87:45"><name pos:start="87:32" pos:end="87:45">starting_frame</name></expr></argument>, 

           <argument pos:start="89:12" pos:end="89:22"><expr pos:start="89:12" pos:end="89:22"><name pos:start="89:12" pos:end="89:22">frame_count</name></expr></argument>, <argument pos:start="89:25" pos:end="89:45"><expr pos:start="89:25" pos:end="89:45"><name pos:start="89:25" pos:end="89:45">relative_frame_number</name></expr></argument>,         

           <argument pos:start="91:12" pos:end="91:39"><expr pos:start="91:12" pos:end="91:39"><call pos:start="91:12" pos:end="91:39"><name pos:start="91:12" pos:end="91:18">OHCI_BM</name><argument_list pos:start="91:19" pos:end="91:39">(<argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:25">iso_td</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:31">flags</name></name></expr></argument>, <argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38">TD_DI</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:42" pos:end="91:69"><expr pos:start="91:42" pos:end="91:69"><call pos:start="91:42" pos:end="91:69"><name pos:start="91:42" pos:end="91:48">OHCI_BM</name><argument_list pos:start="91:49" pos:end="91:69">(<argument pos:start="91:50" pos:end="91:61"><expr pos:start="91:50" pos:end="91:61"><name pos:start="91:50" pos:end="91:61"><name pos:start="91:50" pos:end="91:55">iso_td</name><operator pos:start="91:56" pos:end="91:56">.</operator><name pos:start="91:57" pos:end="91:61">flags</name></name></expr></argument>, <argument pos:start="91:64" pos:end="91:68"><expr pos:start="91:64" pos:end="91:68"><name pos:start="91:64" pos:end="91:68">TD_CC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="97:5" pos:end="133:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:34">(<expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:29">relative_frame_number</name> <operator pos:start="97:31" pos:end="97:31">&lt;</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>)</condition> <block pos:start="97:36" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:17">

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><call pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:15">DPRINTF</name><argument_list pos:start="99:16" pos:end="99:69">(<argument pos:start="99:17" pos:end="99:45"><expr pos:start="99:17" pos:end="99:45"><literal type="string" pos:start="99:17" pos:end="99:45">"usb-ohci: ISO_TD R=%d &lt; 0\n"</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:68"><expr pos:start="99:48" pos:end="99:68"><name pos:start="99:48" pos:end="99:68">relative_frame_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="103:7" pos:end="133:5">else if <condition pos:start="103:15" pos:end="103:51">(<expr pos:start="103:16" pos:end="103:50"><name pos:start="103:16" pos:end="103:36">relative_frame_number</name> <operator pos:start="103:38" pos:end="103:38">&gt;</operator> <name pos:start="103:40" pos:end="103:50">frame_count</name></expr>)</condition> <block pos:start="103:53" pos:end="133:5">{<block_content pos:start="109:9" pos:end="131:17">

        <comment type="block" pos:start="105:9" pos:end="107:44">/* ISO TD expired - retire the TD to the Done Queue and continue with

           the next ISO TD of the same ED */</comment>

        <expr_stmt pos:start="109:9" pos:end="111:28"><expr pos:start="109:9" pos:end="111:27"><call pos:start="109:9" pos:end="111:27"><name pos:start="109:9" pos:end="109:15">DPRINTF</name><argument_list pos:start="109:16" pos:end="111:27">(<argument pos:start="109:17" pos:end="109:49"><expr pos:start="109:17" pos:end="109:49"><literal type="string" pos:start="109:17" pos:end="109:49">"usb-ohci: ISO_TD R=%d &gt; FC=%d\n"</literal></expr></argument>, <argument pos:start="109:52" pos:end="109:72"><expr pos:start="109:52" pos:end="109:72"><name pos:start="109:52" pos:end="109:72">relative_frame_number</name></expr></argument>, 

               <argument pos:start="111:16" pos:end="111:26"><expr pos:start="111:16" pos:end="111:26"><name pos:start="111:16" pos:end="111:26">frame_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:19">OHCI_SET_BM</name><argument_list pos:start="113:20" pos:end="113:61">(<argument pos:start="113:21" pos:end="113:32"><expr pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:26">iso_td</name><operator pos:start="113:27" pos:end="113:27">.</operator><name pos:start="113:28" pos:end="113:32">flags</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><name pos:start="113:35" pos:end="113:39">TD_CC</name></expr></argument>, <argument pos:start="113:42" pos:end="113:60"><expr pos:start="113:42" pos:end="113:60"><name pos:start="113:42" pos:end="113:60">OHCI_CC_DATAOVERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:10">ed</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:16">head</name></name> <operator pos:start="115:18" pos:end="115:19">&amp;=</operator> <operator pos:start="115:21" pos:end="115:21">~</operator><name pos:start="115:22" pos:end="115:35">OHCI_DPTR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:51"><expr pos:start="117:9" pos:end="117:50"><name pos:start="117:9" pos:end="117:16"><name pos:start="117:9" pos:end="117:10">ed</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:16">head</name></name> <operator pos:start="117:18" pos:end="117:19">|=</operator> <operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:32"><name pos:start="117:22" pos:end="117:27">iso_td</name><operator pos:start="117:28" pos:end="117:28">.</operator><name pos:start="117:29" pos:end="117:32">next</name></name> <operator pos:start="117:34" pos:end="117:34">&amp;</operator> <name pos:start="117:36" pos:end="117:49">OHCI_DPTR_MASK</name><operator pos:start="117:50" pos:end="117:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:14">iso_td</name><operator pos:start="119:15" pos:end="119:15">.</operator><name pos:start="119:16" pos:end="119:19">next</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:32"><name pos:start="119:23" pos:end="119:26">ohci</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:32">done</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:12">ohci</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:18">done</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:25">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:9">i</name> <operator pos:start="123:11" pos:end="123:11">=</operator> <call pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:19">OHCI_BM</name><argument_list pos:start="123:20" pos:end="123:40">(<argument pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:26">iso_td</name><operator pos:start="123:27" pos:end="123:27">.</operator><name pos:start="123:28" pos:end="123:32">flags</name></name></expr></argument>, <argument pos:start="123:35" pos:end="123:39"><expr pos:start="123:35" pos:end="123:39"><name pos:start="123:35" pos:end="123:39">TD_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:33"><if pos:start="125:9" pos:end="127:33">if <condition pos:start="125:12" pos:end="125:33">(<expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:13">i</name> <operator pos:start="125:15" pos:end="125:15">&lt;</operator> <name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:20">ohci</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:32">done_count</name></name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:33"><block_content pos:start="127:13" pos:end="127:33">

            <expr_stmt pos:start="127:13" pos:end="127:33"><expr pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:16">ohci</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:28">done_count</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:32">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:45"><expr pos:start="129:9" pos:end="129:44"><call pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:23">ohci_put_iso_td</name><argument_list pos:start="129:24" pos:end="129:44">(<argument pos:start="129:25" pos:end="129:28"><expr pos:start="129:25" pos:end="129:28"><name pos:start="129:25" pos:end="129:28">ohci</name></expr></argument>, <argument pos:start="129:31" pos:end="129:34"><expr pos:start="129:31" pos:end="129:34"><name pos:start="129:31" pos:end="129:34">addr</name></expr></argument>, <argument pos:start="129:37" pos:end="129:43"><expr pos:start="129:37" pos:end="129:43"><operator pos:start="129:37" pos:end="129:37">&amp;</operator><name pos:start="129:38" pos:end="129:43">iso_td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:17">return <expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:35"><expr pos:start="137:5" pos:end="137:34"><name pos:start="137:5" pos:end="137:7">dir</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:34"><name pos:start="137:11" pos:end="137:17">OHCI_BM</name><argument_list pos:start="137:18" pos:end="137:34">(<argument pos:start="137:19" pos:end="137:27"><expr pos:start="137:19" pos:end="137:27"><name pos:start="137:19" pos:end="137:27"><name pos:start="137:19" pos:end="137:20">ed</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:27">flags</name></name></expr></argument>, <argument pos:start="137:30" pos:end="137:33"><expr pos:start="137:30" pos:end="137:33"><name pos:start="137:30" pos:end="137:33">ED_D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="139:5" pos:end="183:5">switch <condition pos:start="139:12" pos:end="139:16">(<expr pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">dir</name></expr>)</condition> <block pos:start="139:18" pos:end="183:5">{<block_content pos:start="141:5" pos:end="181:17">

    <case pos:start="141:5" pos:end="144:0">case <expr pos:start="141:10" pos:end="141:23"><name pos:start="141:10" pos:end="141:23">OHCI_TD_DIR_IN</name></expr>:</case>

<cpp:ifdef pos:start="143:1" pos:end="143:18">#<cpp:directive pos:start="143:2" pos:end="143:6">ifdef</cpp:directive> <name pos:start="143:8" pos:end="143:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="145:9" pos:end="148:0"><expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:11">str</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <literal type="string" pos:start="145:15" pos:end="145:18">"in"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="149:9" pos:end="149:27"><expr pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:11">pid</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:26">USB_TOKEN_IN</name></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="156:0">case <expr pos:start="153:10" pos:end="153:24"><name pos:start="153:10" pos:end="153:24">OHCI_TD_DIR_OUT</name></expr>:</case>

<cpp:ifdef pos:start="155:1" pos:end="155:18">#<cpp:directive pos:start="155:2" pos:end="155:6">ifdef</cpp:directive> <name pos:start="155:8" pos:end="155:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="157:9" pos:end="160:0"><expr pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:11">str</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <literal type="string" pos:start="157:15" pos:end="157:19">"out"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="161:9" pos:end="161:28"><expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:11">pid</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <name pos:start="161:15" pos:end="161:27">USB_TOKEN_OUT</name></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    <case pos:start="165:5" pos:end="168:0">case <expr pos:start="165:10" pos:end="165:26"><name pos:start="165:10" pos:end="165:26">OHCI_TD_DIR_SETUP</name></expr>:</case>

<cpp:ifdef pos:start="167:1" pos:end="167:18">#<cpp:directive pos:start="167:2" pos:end="167:6">ifdef</cpp:directive> <name pos:start="167:8" pos:end="167:18">DEBUG_ISOCH</name></cpp:ifdef>

        <expr_stmt pos:start="169:9" pos:end="172:0"><expr pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:11">str</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <literal type="string" pos:start="169:15" pos:end="169:21">"setup"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="173:9" pos:end="173:30"><expr pos:start="173:9" pos:end="173:29"><name pos:start="173:9" pos:end="173:11">pid</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <name pos:start="173:15" pos:end="173:29">USB_TOKEN_SETUP</name></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <default pos:start="177:5" pos:end="177:12">default:</default>

        <expr_stmt pos:start="179:9" pos:end="179:52"><expr pos:start="179:9" pos:end="179:51"><call pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:14">printf</name><argument_list pos:start="179:15" pos:end="179:51">(<argument pos:start="179:16" pos:end="179:45"><expr pos:start="179:16" pos:end="179:45"><literal type="string" pos:start="179:16" pos:end="179:45">"usb-ohci: Bad direction %d\n"</literal></expr></argument>, <argument pos:start="179:48" pos:end="179:50"><expr pos:start="179:48" pos:end="179:50"><name pos:start="179:48" pos:end="179:50">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:17">return <expr pos:start="181:16" pos:end="181:16"><literal type="number" pos:start="181:16" pos:end="181:16">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:33">(<expr pos:start="187:9" pos:end="187:32"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:18"><name pos:start="187:10" pos:end="187:15">iso_td</name><operator pos:start="187:16" pos:end="187:16">.</operator><name pos:start="187:17" pos:end="187:18">bp</name></name> <operator pos:start="187:20" pos:end="187:21">||</operator> <operator pos:start="187:23" pos:end="187:23">!</operator><name pos:start="187:24" pos:end="187:32"><name pos:start="187:24" pos:end="187:29">iso_td</name><operator pos:start="187:30" pos:end="187:30">.</operator><name pos:start="187:31" pos:end="187:32">be</name></name></expr>)</condition> <block pos:start="187:35" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:17">

        <expr_stmt pos:start="189:9" pos:end="189:79"><expr pos:start="189:9" pos:end="189:78"><call pos:start="189:9" pos:end="189:78"><name pos:start="189:9" pos:end="189:14">printf</name><argument_list pos:start="189:15" pos:end="189:78">(<argument pos:start="189:16" pos:end="189:55"><expr pos:start="189:16" pos:end="189:55"><literal type="string" pos:start="189:16" pos:end="189:55">"usb-ohci: ISO_TD bp 0x%.8x be 0x%.8x\n"</literal></expr></argument>, <argument pos:start="189:58" pos:end="189:66"><expr pos:start="189:58" pos:end="189:66"><name pos:start="189:58" pos:end="189:66"><name pos:start="189:58" pos:end="189:63">iso_td</name><operator pos:start="189:64" pos:end="189:64">.</operator><name pos:start="189:65" pos:end="189:66">bp</name></name></expr></argument>, <argument pos:start="189:69" pos:end="189:77"><expr pos:start="189:69" pos:end="189:77"><name pos:start="189:69" pos:end="189:77"><name pos:start="189:69" pos:end="189:74">iso_td</name><operator pos:start="189:75" pos:end="189:75">.</operator><name pos:start="189:76" pos:end="189:77">be</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:17">return <expr pos:start="191:16" pos:end="191:16"><literal type="number" pos:start="191:16" pos:end="191:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:56"><expr pos:start="197:5" pos:end="197:55"><name pos:start="197:5" pos:end="197:16">start_offset</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:55"><name pos:start="197:20" pos:end="197:25">iso_td</name><operator pos:start="197:26" pos:end="197:26">.</operator><name pos:start="197:27" pos:end="197:32">offset</name><index pos:start="197:33" pos:end="197:55">[<expr pos:start="197:34" pos:end="197:54"><name pos:start="197:34" pos:end="197:54">relative_frame_number</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:59"><expr pos:start="199:5" pos:end="199:58"><name pos:start="199:5" pos:end="199:15">next_offset</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <name pos:start="199:19" pos:end="199:58"><name pos:start="199:19" pos:end="199:24">iso_td</name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:31">offset</name><index pos:start="199:32" pos:end="199:58">[<expr pos:start="199:33" pos:end="199:57"><name pos:start="199:33" pos:end="199:53">relative_frame_number</name> <operator pos:start="199:55" pos:end="199:55">+</operator> <literal type="number" pos:start="199:57" pos:end="199:57">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="215:5"><if pos:start="203:5" pos:end="215:5">if <condition pos:start="203:8" pos:end="207:51">(<expr pos:start="203:9" pos:end="207:50"><operator pos:start="203:9" pos:end="203:9">!</operator><operator pos:start="203:10" pos:end="203:10">(</operator><call pos:start="203:11" pos:end="203:42"><name pos:start="203:11" pos:end="203:17">OHCI_BM</name><argument_list pos:start="203:18" pos:end="203:42">(<argument pos:start="203:19" pos:end="203:30"><expr pos:start="203:19" pos:end="203:30"><name pos:start="203:19" pos:end="203:30">start_offset</name></expr></argument>, <argument pos:start="203:33" pos:end="203:41"><expr pos:start="203:33" pos:end="203:41"><name pos:start="203:33" pos:end="203:41">TD_PSW_CC</name></expr></argument>)</argument_list></call> <operator pos:start="203:44" pos:end="203:44">&amp;</operator> <literal type="number" pos:start="203:46" pos:end="203:48">0xe</literal><operator pos:start="203:49" pos:end="203:49">)</operator> <operator pos:start="203:51" pos:end="203:52">||</operator> 

        <operator pos:start="205:9" pos:end="205:9">(</operator><operator pos:start="205:10" pos:end="205:10">(</operator><name pos:start="205:11" pos:end="205:31">relative_frame_number</name> <operator pos:start="205:33" pos:end="205:33">&lt;</operator> <name pos:start="205:35" pos:end="205:45">frame_count</name><operator pos:start="205:46" pos:end="205:46">)</operator> <operator pos:start="205:48" pos:end="205:49">&amp;&amp;</operator> 

         <operator pos:start="207:10" pos:end="207:10">!</operator><operator pos:start="207:11" pos:end="207:11">(</operator><call pos:start="207:12" pos:end="207:42"><name pos:start="207:12" pos:end="207:18">OHCI_BM</name><argument_list pos:start="207:19" pos:end="207:42">(<argument pos:start="207:20" pos:end="207:30"><expr pos:start="207:20" pos:end="207:30"><name pos:start="207:20" pos:end="207:30">next_offset</name></expr></argument>, <argument pos:start="207:33" pos:end="207:41"><expr pos:start="207:33" pos:end="207:41"><name pos:start="207:33" pos:end="207:41">TD_PSW_CC</name></expr></argument>)</argument_list></call> <operator pos:start="207:44" pos:end="207:44">&amp;</operator> <literal type="number" pos:start="207:46" pos:end="207:48">0xe</literal><operator pos:start="207:49" pos:end="207:49">)</operator><operator pos:start="207:50" pos:end="207:50">)</operator></expr>)</condition> <block pos:start="207:53" pos:end="215:5">{<block_content pos:start="209:9" pos:end="213:17">

        <expr_stmt pos:start="209:9" pos:end="211:42"><expr pos:start="209:9" pos:end="211:41"><call pos:start="209:9" pos:end="211:41"><name pos:start="209:9" pos:end="209:14">printf</name><argument_list pos:start="209:15" pos:end="211:41">(<argument pos:start="209:16" pos:end="209:68"><expr pos:start="209:16" pos:end="209:68"><literal type="string" pos:start="209:16" pos:end="209:68">"usb-ohci: ISO_TD cc != not accessed 0x%.8x 0x%.8x\n"</literal></expr></argument>,

               <argument pos:start="211:16" pos:end="211:27"><expr pos:start="211:16" pos:end="211:27"><name pos:start="211:16" pos:end="211:27">start_offset</name></expr></argument>, <argument pos:start="211:30" pos:end="211:40"><expr pos:start="211:30" pos:end="211:40"><name pos:start="211:30" pos:end="211:40">next_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="213:9" pos:end="213:17">return <expr pos:start="213:16" pos:end="213:16"><literal type="number" pos:start="213:16" pos:end="213:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="227:5"><if pos:start="219:5" pos:end="227:5">if <condition pos:start="219:8" pos:end="219:78">(<expr pos:start="219:9" pos:end="219:77"><operator pos:start="219:9" pos:end="219:9">(</operator><name pos:start="219:10" pos:end="219:30">relative_frame_number</name> <operator pos:start="219:32" pos:end="219:32">&lt;</operator> <name pos:start="219:34" pos:end="219:44">frame_count</name><operator pos:start="219:45" pos:end="219:45">)</operator> <operator pos:start="219:47" pos:end="219:48">&amp;&amp;</operator> <operator pos:start="219:50" pos:end="219:50">(</operator><name pos:start="219:51" pos:end="219:62">start_offset</name> <operator pos:start="219:64" pos:end="219:64">&gt;</operator> <name pos:start="219:66" pos:end="219:76">next_offset</name><operator pos:start="219:77" pos:end="219:77">)</operator></expr>)</condition> <block pos:start="219:80" pos:end="227:5">{<block_content pos:start="221:9" pos:end="225:17">

        <expr_stmt pos:start="221:9" pos:end="223:43"><expr pos:start="221:9" pos:end="223:42"><call pos:start="221:9" pos:end="223:42"><name pos:start="221:9" pos:end="221:14">printf</name><argument_list pos:start="221:15" pos:end="223:42">(<argument pos:start="221:16" pos:end="221:76"><expr pos:start="221:16" pos:end="221:76"><literal type="string" pos:start="221:16" pos:end="221:76">"usb-ohci: ISO_TD start_offset=0x%.8x &gt; next_offset=0x%.8x\n"</literal></expr></argument>,

                <argument pos:start="223:17" pos:end="223:28"><expr pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:28">start_offset</name></expr></argument>, <argument pos:start="223:31" pos:end="223:41"><expr pos:start="223:31" pos:end="223:41"><name pos:start="223:31" pos:end="223:41">next_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="225:9" pos:end="225:17">return <expr pos:start="225:16" pos:end="225:16"><literal type="number" pos:start="225:16" pos:end="225:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="243:5"><if pos:start="231:5" pos:end="237:5">if <condition pos:start="231:8" pos:end="231:37">(<expr pos:start="231:9" pos:end="231:36"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:21">start_offset</name> <operator pos:start="231:23" pos:end="231:23">&amp;</operator> <literal type="number" pos:start="231:25" pos:end="231:30">0x1000</literal><operator pos:start="231:31" pos:end="231:31">)</operator> <operator pos:start="231:33" pos:end="231:34">==</operator> <literal type="number" pos:start="231:36" pos:end="231:36">0</literal></expr>)</condition> <block pos:start="231:39" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:46">

        <expr_stmt pos:start="233:9" pos:end="235:46"><expr pos:start="233:9" pos:end="235:45"><name pos:start="233:9" pos:end="233:18">start_addr</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <operator pos:start="233:22" pos:end="233:22">(</operator><name pos:start="233:23" pos:end="233:31"><name pos:start="233:23" pos:end="233:28">iso_td</name><operator pos:start="233:29" pos:end="233:29">.</operator><name pos:start="233:30" pos:end="233:31">bp</name></name> <operator pos:start="233:33" pos:end="233:33">&amp;</operator> <name pos:start="233:35" pos:end="233:48">OHCI_PAGE_MASK</name><operator pos:start="233:49" pos:end="233:49">)</operator> <operator pos:start="233:51" pos:end="233:51">|</operator>

            <operator pos:start="235:13" pos:end="235:13">(</operator><name pos:start="235:14" pos:end="235:25">start_offset</name> <operator pos:start="235:27" pos:end="235:27">&amp;</operator> <name pos:start="235:29" pos:end="235:44">OHCI_OFFSET_MASK</name><operator pos:start="235:45" pos:end="235:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="237:7" pos:end="243:5">else <block pos:start="237:12" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:46">

        <expr_stmt pos:start="239:9" pos:end="241:46"><expr pos:start="239:9" pos:end="241:45"><name pos:start="239:9" pos:end="239:18">start_addr</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <operator pos:start="239:22" pos:end="239:22">(</operator><name pos:start="239:23" pos:end="239:31"><name pos:start="239:23" pos:end="239:28">iso_td</name><operator pos:start="239:29" pos:end="239:29">.</operator><name pos:start="239:30" pos:end="239:31">be</name></name> <operator pos:start="239:33" pos:end="239:33">&amp;</operator> <name pos:start="239:35" pos:end="239:48">OHCI_PAGE_MASK</name><operator pos:start="239:49" pos:end="239:49">)</operator> <operator pos:start="239:51" pos:end="239:51">|</operator>

            <operator pos:start="241:13" pos:end="241:13">(</operator><name pos:start="241:14" pos:end="241:25">start_offset</name> <operator pos:start="241:27" pos:end="241:27">&amp;</operator> <name pos:start="241:29" pos:end="241:44">OHCI_OFFSET_MASK</name><operator pos:start="241:45" pos:end="241:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="247:5" pos:end="271:5"><if pos:start="247:5" pos:end="265:5">if <condition pos:start="247:8" pos:end="247:44">(<expr pos:start="247:9" pos:end="247:43"><name pos:start="247:9" pos:end="247:29">relative_frame_number</name> <operator pos:start="247:31" pos:end="247:31">&lt;</operator> <name pos:start="247:33" pos:end="247:43">frame_count</name></expr>)</condition> <block pos:start="247:46" pos:end="265:5">{<block_content pos:start="249:9" pos:end="263:9">

        <expr_stmt pos:start="249:9" pos:end="249:37"><expr pos:start="249:9" pos:end="249:36"><name pos:start="249:9" pos:end="249:18">end_offset</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:32">next_offset</name> <operator pos:start="249:34" pos:end="249:34">-</operator> <literal type="number" pos:start="249:36" pos:end="249:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="263:9"><if pos:start="251:9" pos:end="257:9">if <condition pos:start="251:12" pos:end="251:39">(<expr pos:start="251:13" pos:end="251:38"><operator pos:start="251:13" pos:end="251:13">(</operator><name pos:start="251:14" pos:end="251:23">end_offset</name> <operator pos:start="251:25" pos:end="251:25">&amp;</operator> <literal type="number" pos:start="251:27" pos:end="251:32">0x1000</literal><operator pos:start="251:33" pos:end="251:33">)</operator> <operator pos:start="251:35" pos:end="251:36">==</operator> <literal type="number" pos:start="251:38" pos:end="251:38">0</literal></expr>)</condition> <block pos:start="251:41" pos:end="257:9">{<block_content pos:start="253:13" pos:end="255:48">

            <expr_stmt pos:start="253:13" pos:end="255:48"><expr pos:start="253:13" pos:end="255:47"><name pos:start="253:13" pos:end="253:20">end_addr</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <operator pos:start="253:24" pos:end="253:24">(</operator><name pos:start="253:25" pos:end="253:33"><name pos:start="253:25" pos:end="253:30">iso_td</name><operator pos:start="253:31" pos:end="253:31">.</operator><name pos:start="253:32" pos:end="253:33">bp</name></name> <operator pos:start="253:35" pos:end="253:35">&amp;</operator> <name pos:start="253:37" pos:end="253:50">OHCI_PAGE_MASK</name><operator pos:start="253:51" pos:end="253:51">)</operator> <operator pos:start="253:53" pos:end="253:53">|</operator>

                <operator pos:start="255:17" pos:end="255:17">(</operator><name pos:start="255:18" pos:end="255:27">end_offset</name> <operator pos:start="255:29" pos:end="255:29">&amp;</operator> <name pos:start="255:31" pos:end="255:46">OHCI_OFFSET_MASK</name><operator pos:start="255:47" pos:end="255:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="263:9">else <block pos:start="257:16" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:48">

            <expr_stmt pos:start="259:13" pos:end="261:48"><expr pos:start="259:13" pos:end="261:47"><name pos:start="259:13" pos:end="259:20">end_addr</name> <operator pos:start="259:22" pos:end="259:22">=</operator> <operator pos:start="259:24" pos:end="259:24">(</operator><name pos:start="259:25" pos:end="259:33"><name pos:start="259:25" pos:end="259:30">iso_td</name><operator pos:start="259:31" pos:end="259:31">.</operator><name pos:start="259:32" pos:end="259:33">be</name></name> <operator pos:start="259:35" pos:end="259:35">&amp;</operator> <name pos:start="259:37" pos:end="259:50">OHCI_PAGE_MASK</name><operator pos:start="259:51" pos:end="259:51">)</operator> <operator pos:start="259:53" pos:end="259:53">|</operator>

                <operator pos:start="261:17" pos:end="261:17">(</operator><name pos:start="261:18" pos:end="261:27">end_offset</name> <operator pos:start="261:29" pos:end="261:29">&amp;</operator> <name pos:start="261:31" pos:end="261:46">OHCI_OFFSET_MASK</name><operator pos:start="261:47" pos:end="261:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="271:5">else <block pos:start="265:12" pos:end="271:5">{<block_content pos:start="269:9" pos:end="269:29">

        <comment type="block" pos:start="267:9" pos:end="267:39">/* Last packet in the ISO TD */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:16">end_addr</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <name pos:start="269:20" pos:end="269:28"><name pos:start="269:20" pos:end="269:25">iso_td</name><operator pos:start="269:26" pos:end="269:26">.</operator><name pos:start="269:27" pos:end="269:28">be</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="275:5" pos:end="285:5"><if pos:start="275:5" pos:end="281:5">if <condition pos:start="275:8" pos:end="275:69">(<expr pos:start="275:9" pos:end="275:68"><operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:19">start_addr</name> <operator pos:start="275:21" pos:end="275:21">&amp;</operator> <name pos:start="275:23" pos:end="275:36">OHCI_PAGE_MASK</name><operator pos:start="275:37" pos:end="275:37">)</operator> <operator pos:start="275:39" pos:end="275:40">!=</operator> <operator pos:start="275:42" pos:end="275:42">(</operator><name pos:start="275:43" pos:end="275:50">end_addr</name> <operator pos:start="275:52" pos:end="275:52">&amp;</operator> <name pos:start="275:54" pos:end="275:67">OHCI_PAGE_MASK</name><operator pos:start="275:68" pos:end="275:68">)</operator></expr>)</condition> <block pos:start="275:71" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:46">

        <expr_stmt pos:start="277:9" pos:end="279:46"><expr pos:start="277:9" pos:end="279:45"><name pos:start="277:9" pos:end="277:11">len</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <operator pos:start="277:15" pos:end="277:15">(</operator><name pos:start="277:16" pos:end="277:23">end_addr</name> <operator pos:start="277:25" pos:end="277:25">&amp;</operator> <name pos:start="277:27" pos:end="277:42">OHCI_OFFSET_MASK</name><operator pos:start="277:43" pos:end="277:43">)</operator> <operator pos:start="277:45" pos:end="277:45">+</operator> <literal type="number" pos:start="277:47" pos:end="279:13">0x1001</literal>

            <operator pos:start="279:13" pos:end="279:13">-</operator> <operator pos:start="279:15" pos:end="279:15">(</operator><name pos:start="279:16" pos:end="279:25">start_addr</name> <operator pos:start="279:27" pos:end="279:27">&amp;</operator> <name pos:start="279:29" pos:end="279:44">OHCI_OFFSET_MASK</name><operator pos:start="279:45" pos:end="279:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="285:5">else <block pos:start="281:12" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:40">

        <expr_stmt pos:start="283:9" pos:end="283:40"><expr pos:start="283:9" pos:end="283:39"><name pos:start="283:9" pos:end="283:11">len</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <name pos:start="283:15" pos:end="283:22">end_addr</name> <operator pos:start="283:24" pos:end="283:24">-</operator> <name pos:start="283:26" pos:end="283:35">start_addr</name> <operator pos:start="283:37" pos:end="283:37">+</operator> <literal type="number" pos:start="283:39" pos:end="283:39">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="289:5" pos:end="293:5"><if pos:start="289:5" pos:end="293:5">if <condition pos:start="289:8" pos:end="289:37">(<expr pos:start="289:9" pos:end="289:36"><name pos:start="289:9" pos:end="289:11">len</name> <operator pos:start="289:13" pos:end="289:14">&amp;&amp;</operator> <name pos:start="289:16" pos:end="289:18">dir</name> <operator pos:start="289:20" pos:end="289:21">!=</operator> <name pos:start="289:23" pos:end="289:36">OHCI_TD_DIR_IN</name></expr>)</condition> <block pos:start="289:39" pos:end="293:5">{<block_content pos:start="291:9" pos:end="291:76">

        <expr_stmt pos:start="291:9" pos:end="291:76"><expr pos:start="291:9" pos:end="291:75"><call pos:start="291:9" pos:end="291:75"><name pos:start="291:9" pos:end="291:24">ohci_copy_iso_td</name><argument_list pos:start="291:25" pos:end="291:75">(<argument pos:start="291:26" pos:end="291:29"><expr pos:start="291:26" pos:end="291:29"><name pos:start="291:26" pos:end="291:29">ohci</name></expr></argument>, <argument pos:start="291:32" pos:end="291:41"><expr pos:start="291:32" pos:end="291:41"><name pos:start="291:32" pos:end="291:41">start_addr</name></expr></argument>, <argument pos:start="291:44" pos:end="291:51"><expr pos:start="291:44" pos:end="291:51"><name pos:start="291:44" pos:end="291:51">end_addr</name></expr></argument>, <argument pos:start="291:54" pos:end="291:66"><expr pos:start="291:54" pos:end="291:66"><name pos:start="291:54" pos:end="291:66"><name pos:start="291:54" pos:end="291:57">ohci</name><operator pos:start="291:58" pos:end="291:59">-&gt;</operator><name pos:start="291:60" pos:end="291:66">usb_buf</name></name></expr></argument>, <argument pos:start="291:69" pos:end="291:71"><expr pos:start="291:69" pos:end="291:71"><name pos:start="291:69" pos:end="291:71">len</name></expr></argument>, <argument pos:start="291:74" pos:end="291:74"><expr pos:start="291:74" pos:end="291:74"><literal type="number" pos:start="291:74" pos:end="291:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="297:5" pos:end="344:0"><if pos:start="297:5" pos:end="301:5">if <condition pos:start="297:8" pos:end="297:19">(<expr pos:start="297:9" pos:end="297:18"><name pos:start="297:9" pos:end="297:18">completion</name></expr>)</condition> <block pos:start="297:21" pos:end="301:5">{<block_content pos:start="299:9" pos:end="299:35">

        <expr_stmt pos:start="299:9" pos:end="299:35"><expr pos:start="299:9" pos:end="299:34"><name pos:start="299:9" pos:end="299:11">ret</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <name pos:start="299:15" pos:end="299:34"><name pos:start="299:15" pos:end="299:18">ohci</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:30">usb_packet</name><operator pos:start="299:31" pos:end="299:31">.</operator><name pos:start="299:32" pos:end="299:34">len</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="301:7" pos:end="344:0">else <block pos:start="301:12" pos:end="344:0">{<block_content pos:start="303:9" pos:end="337:9">

        <expr_stmt pos:start="303:9" pos:end="303:28"><expr pos:start="303:9" pos:end="303:27"><name pos:start="303:9" pos:end="303:11">ret</name> <operator pos:start="303:13" pos:end="303:13">=</operator> <name pos:start="303:15" pos:end="303:27">USB_RET_NODEV</name></expr>;</expr_stmt>

        <for pos:start="305:9" pos:end="329:9">for <control pos:start="305:13" pos:end="305:45">(<init pos:start="305:14" pos:end="305:19"><expr pos:start="305:14" pos:end="305:18"><name pos:start="305:14" pos:end="305:14">i</name> <operator pos:start="305:16" pos:end="305:16">=</operator> <literal type="number" pos:start="305:18" pos:end="305:18">0</literal></expr>;</init> <condition pos:start="305:21" pos:end="305:40"><expr pos:start="305:21" pos:end="305:39"><name pos:start="305:21" pos:end="305:21">i</name> <operator pos:start="305:23" pos:end="305:23">&lt;</operator> <name pos:start="305:25" pos:end="305:39"><name pos:start="305:25" pos:end="305:28">ohci</name><operator pos:start="305:29" pos:end="305:30">-&gt;</operator><name pos:start="305:31" pos:end="305:39">num_ports</name></name></expr>;</condition> <incr pos:start="305:42" pos:end="305:44"><expr pos:start="305:42" pos:end="305:44"><name pos:start="305:42" pos:end="305:42">i</name><operator pos:start="305:43" pos:end="305:44">++</operator></expr></incr>)</control> <block pos:start="305:47" pos:end="329:9">{<block_content pos:start="307:13" pos:end="327:22">

            <expr_stmt pos:start="307:13" pos:end="307:43"><expr pos:start="307:13" pos:end="307:42"><name pos:start="307:13" pos:end="307:15">dev</name> <operator pos:start="307:17" pos:end="307:17">=</operator> <name pos:start="307:19" pos:end="307:33"><name pos:start="307:19" pos:end="307:22">ohci</name><operator pos:start="307:23" pos:end="307:24">-&gt;</operator><name pos:start="307:25" pos:end="307:30">rhport</name><index pos:start="307:31" pos:end="307:33">[<expr pos:start="307:32" pos:end="307:32"><name pos:start="307:32" pos:end="307:32">i</name></expr>]</index></name><operator pos:start="307:34" pos:end="307:34">.</operator><name pos:start="307:35" pos:end="307:42"><name pos:start="307:35" pos:end="307:38">port</name><operator pos:start="307:39" pos:end="307:39">.</operator><name pos:start="307:40" pos:end="307:42">dev</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="309:13" pos:end="311:25"><if pos:start="309:13" pos:end="311:25">if <condition pos:start="309:16" pos:end="309:60">(<expr pos:start="309:17" pos:end="309:59"><operator pos:start="309:17" pos:end="309:17">(</operator><name pos:start="309:18" pos:end="309:32"><name pos:start="309:18" pos:end="309:21">ohci</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:29">rhport</name><index pos:start="309:30" pos:end="309:32">[<expr pos:start="309:31" pos:end="309:31"><name pos:start="309:31" pos:end="309:31">i</name></expr>]</index></name><operator pos:start="309:33" pos:end="309:33">.</operator><name pos:start="309:34" pos:end="309:37">ctrl</name> <operator pos:start="309:39" pos:end="309:39">&amp;</operator> <name pos:start="309:41" pos:end="309:53">OHCI_PORT_PES</name><operator pos:start="309:54" pos:end="309:54">)</operator> <operator pos:start="309:56" pos:end="309:57">==</operator> <literal type="number" pos:start="309:59" pos:end="309:59">0</literal></expr>)</condition><block type="pseudo" pos:start="311:17" pos:end="311:25"><block_content pos:start="311:17" pos:end="311:25">

                <continue pos:start="311:17" pos:end="311:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:39"><expr pos:start="313:13" pos:end="313:38"><name pos:start="313:13" pos:end="313:32"><name pos:start="313:13" pos:end="313:16">ohci</name><operator pos:start="313:17" pos:end="313:18">-&gt;</operator><name pos:start="313:19" pos:end="313:28">usb_packet</name><operator pos:start="313:29" pos:end="313:29">.</operator><name pos:start="313:30" pos:end="313:32">pid</name></name> <operator pos:start="313:34" pos:end="313:34">=</operator> <name pos:start="313:36" pos:end="313:38">pid</name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:65"><expr pos:start="315:13" pos:end="315:64"><name pos:start="315:13" pos:end="315:36"><name pos:start="315:13" pos:end="315:16">ohci</name><operator pos:start="315:17" pos:end="315:18">-&gt;</operator><name pos:start="315:19" pos:end="315:28">usb_packet</name><operator pos:start="315:29" pos:end="315:29">.</operator><name pos:start="315:30" pos:end="315:36">devaddr</name></name> <operator pos:start="315:38" pos:end="315:38">=</operator> <call pos:start="315:40" pos:end="315:64"><name pos:start="315:40" pos:end="315:46">OHCI_BM</name><argument_list pos:start="315:47" pos:end="315:64">(<argument pos:start="315:48" pos:end="315:56"><expr pos:start="315:48" pos:end="315:56"><name pos:start="315:48" pos:end="315:56"><name pos:start="315:48" pos:end="315:49">ed</name><operator pos:start="315:50" pos:end="315:51">-&gt;</operator><name pos:start="315:52" pos:end="315:56">flags</name></name></expr></argument>, <argument pos:start="315:59" pos:end="315:63"><expr pos:start="315:59" pos:end="315:63"><name pos:start="315:59" pos:end="315:63">ED_FA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:63"><expr pos:start="317:13" pos:end="317:62"><name pos:start="317:13" pos:end="317:34"><name pos:start="317:13" pos:end="317:16">ohci</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:28">usb_packet</name><operator pos:start="317:29" pos:end="317:29">.</operator><name pos:start="317:30" pos:end="317:34">devep</name></name> <operator pos:start="317:36" pos:end="317:36">=</operator> <call pos:start="317:38" pos:end="317:62"><name pos:start="317:38" pos:end="317:44">OHCI_BM</name><argument_list pos:start="317:45" pos:end="317:62">(<argument pos:start="317:46" pos:end="317:54"><expr pos:start="317:46" pos:end="317:54"><name pos:start="317:46" pos:end="317:54"><name pos:start="317:46" pos:end="317:47">ed</name><operator pos:start="317:48" pos:end="317:49">-&gt;</operator><name pos:start="317:50" pos:end="317:54">flags</name></name></expr></argument>, <argument pos:start="317:57" pos:end="317:61"><expr pos:start="317:57" pos:end="317:61"><name pos:start="317:57" pos:end="317:61">ED_EN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:50"><expr pos:start="319:13" pos:end="319:49"><name pos:start="319:13" pos:end="319:33"><name pos:start="319:13" pos:end="319:16">ohci</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:28">usb_packet</name><operator pos:start="319:29" pos:end="319:29">.</operator><name pos:start="319:30" pos:end="319:33">data</name></name> <operator pos:start="319:35" pos:end="319:35">=</operator> <name pos:start="319:37" pos:end="319:49"><name pos:start="319:37" pos:end="319:40">ohci</name><operator pos:start="319:41" pos:end="319:42">-&gt;</operator><name pos:start="319:43" pos:end="319:49">usb_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:39"><expr pos:start="321:13" pos:end="321:38"><name pos:start="321:13" pos:end="321:32"><name pos:start="321:13" pos:end="321:16">ohci</name><operator pos:start="321:17" pos:end="321:18">-&gt;</operator><name pos:start="321:19" pos:end="321:28">usb_packet</name><operator pos:start="321:29" pos:end="321:29">.</operator><name pos:start="321:30" pos:end="321:32">len</name></name> <operator pos:start="321:34" pos:end="321:34">=</operator> <name pos:start="321:36" pos:end="321:38">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:60"><expr pos:start="323:13" pos:end="323:59"><name pos:start="323:13" pos:end="323:15">ret</name> <operator pos:start="323:17" pos:end="323:17">=</operator> <call pos:start="323:19" pos:end="323:59"><name pos:start="323:19" pos:end="323:35">usb_handle_packet</name><argument_list pos:start="323:36" pos:end="323:59">(<argument pos:start="323:37" pos:end="323:39"><expr pos:start="323:37" pos:end="323:39"><name pos:start="323:37" pos:end="323:39">dev</name></expr></argument>, <argument pos:start="323:42" pos:end="323:58"><expr pos:start="323:42" pos:end="323:58"><operator pos:start="323:42" pos:end="323:42">&amp;</operator><name pos:start="323:43" pos:end="323:58"><name pos:start="323:43" pos:end="323:46">ohci</name><operator pos:start="323:47" pos:end="323:48">-&gt;</operator><name pos:start="323:49" pos:end="323:58">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="325:13" pos:end="327:22"><if pos:start="325:13" pos:end="327:22">if <condition pos:start="325:16" pos:end="325:37">(<expr pos:start="325:17" pos:end="325:36"><name pos:start="325:17" pos:end="325:19">ret</name> <operator pos:start="325:21" pos:end="325:22">!=</operator> <name pos:start="325:24" pos:end="325:36">USB_RET_NODEV</name></expr>)</condition><block type="pseudo" pos:start="327:17" pos:end="327:22"><block_content pos:start="327:17" pos:end="327:22">

                <break pos:start="327:17" pos:end="327:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    

        <if_stmt pos:start="333:9" pos:end="337:9"><if pos:start="333:9" pos:end="337:9">if <condition pos:start="333:12" pos:end="333:33">(<expr pos:start="333:13" pos:end="333:32"><name pos:start="333:13" pos:end="333:15">ret</name> <operator pos:start="333:17" pos:end="333:18">==</operator> <name pos:start="333:20" pos:end="333:32">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="333:35" pos:end="337:9">{<block_content pos:start="335:13" pos:end="335:21">

            <return pos:start="335:13" pos:end="335:21">return <expr pos:start="335:20" pos:end="335:20"><literal type="number" pos:start="335:20" pos:end="335:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="343:1" pos:end="343:18">#<cpp:directive pos:start="343:2" pos:end="343:6">ifdef</cpp:directive> <name pos:start="343:8" pos:end="343:18">DEBUG_ISOCH</name></cpp:ifdef>

    <expr_stmt pos:start="345:5" pos:end="350:0"><expr pos:start="345:5" pos:end="347:73"><call pos:start="345:5" pos:end="347:73"><name pos:start="345:5" pos:end="345:10">printf</name><argument_list pos:start="345:11" pos:end="347:73">(<argument pos:start="345:12" pos:end="345:78"><expr pos:start="345:12" pos:end="345:78"><literal type="string" pos:start="345:12" pos:end="345:78">"so 0x%.8x eo 0x%.8x\nsa 0x%.8x ea 0x%.8x\ndir %s len %zu ret %d\n"</literal></expr></argument>,

           <argument pos:start="347:12" pos:end="347:23"><expr pos:start="347:12" pos:end="347:23"><name pos:start="347:12" pos:end="347:23">start_offset</name></expr></argument>, <argument pos:start="347:26" pos:end="347:35"><expr pos:start="347:26" pos:end="347:35"><name pos:start="347:26" pos:end="347:35">end_offset</name></expr></argument>, <argument pos:start="347:38" pos:end="347:47"><expr pos:start="347:38" pos:end="347:47"><name pos:start="347:38" pos:end="347:47">start_addr</name></expr></argument>, <argument pos:start="347:50" pos:end="347:57"><expr pos:start="347:50" pos:end="347:57"><name pos:start="347:50" pos:end="347:57">end_addr</name></expr></argument>, <argument pos:start="347:60" pos:end="347:62"><expr pos:start="347:60" pos:end="347:62"><name pos:start="347:60" pos:end="347:62">str</name></expr></argument>, <argument pos:start="347:65" pos:end="347:67"><expr pos:start="347:65" pos:end="347:67"><name pos:start="347:65" pos:end="347:67">len</name></expr></argument>, <argument pos:start="347:70" pos:end="347:72"><expr pos:start="347:70" pos:end="347:72"><name pos:start="347:70" pos:end="347:72">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="349:1" pos:end="349:6">#<cpp:directive pos:start="349:2" pos:end="349:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="353:5" pos:end="353:19">/* Writeback */</comment>

    <if_stmt pos:start="355:5" pos:end="445:5"><if pos:start="355:5" pos:end="367:5">if <condition pos:start="355:8" pos:end="355:56">(<expr pos:start="355:9" pos:end="355:55"><name pos:start="355:9" pos:end="355:11">dir</name> <operator pos:start="355:13" pos:end="355:14">==</operator> <name pos:start="355:16" pos:end="355:29">OHCI_TD_DIR_IN</name> <operator pos:start="355:31" pos:end="355:32">&amp;&amp;</operator> <name pos:start="355:34" pos:end="355:36">ret</name> <operator pos:start="355:38" pos:end="355:39">&gt;=</operator> <literal type="number" pos:start="355:41" pos:end="355:41">0</literal> <operator pos:start="355:43" pos:end="355:44">&amp;&amp;</operator> <name pos:start="355:46" pos:end="355:48">ret</name> <operator pos:start="355:50" pos:end="355:51">&lt;=</operator> <name pos:start="355:53" pos:end="355:55">len</name></expr>)</condition> <block pos:start="355:58" pos:end="367:5">{<block_content pos:start="359:9" pos:end="365:76">

        <comment type="block" pos:start="357:9" pos:end="357:35">/* IN transfer succeeded */</comment>

        <expr_stmt pos:start="359:9" pos:end="359:76"><expr pos:start="359:9" pos:end="359:75"><call pos:start="359:9" pos:end="359:75"><name pos:start="359:9" pos:end="359:24">ohci_copy_iso_td</name><argument_list pos:start="359:25" pos:end="359:75">(<argument pos:start="359:26" pos:end="359:29"><expr pos:start="359:26" pos:end="359:29"><name pos:start="359:26" pos:end="359:29">ohci</name></expr></argument>, <argument pos:start="359:32" pos:end="359:41"><expr pos:start="359:32" pos:end="359:41"><name pos:start="359:32" pos:end="359:41">start_addr</name></expr></argument>, <argument pos:start="359:44" pos:end="359:51"><expr pos:start="359:44" pos:end="359:51"><name pos:start="359:44" pos:end="359:51">end_addr</name></expr></argument>, <argument pos:start="359:54" pos:end="359:66"><expr pos:start="359:54" pos:end="359:66"><name pos:start="359:54" pos:end="359:66"><name pos:start="359:54" pos:end="359:57">ohci</name><operator pos:start="359:58" pos:end="359:59">-&gt;</operator><name pos:start="359:60" pos:end="359:66">usb_buf</name></name></expr></argument>, <argument pos:start="359:69" pos:end="359:71"><expr pos:start="359:69" pos:end="359:71"><name pos:start="359:69" pos:end="359:71">ret</name></expr></argument>, <argument pos:start="359:74" pos:end="359:74"><expr pos:start="359:74" pos:end="359:74"><literal type="number" pos:start="359:74" pos:end="359:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="363:37"><expr pos:start="361:9" pos:end="363:36"><call pos:start="361:9" pos:end="363:36"><name pos:start="361:9" pos:end="361:19">OHCI_SET_BM</name><argument_list pos:start="361:20" pos:end="363:36">(<argument pos:start="361:21" pos:end="361:56"><expr pos:start="361:21" pos:end="361:56"><name pos:start="361:21" pos:end="361:56"><name pos:start="361:21" pos:end="361:26">iso_td</name><operator pos:start="361:27" pos:end="361:27">.</operator><name pos:start="361:28" pos:end="361:33">offset</name><index pos:start="361:34" pos:end="361:56">[<expr pos:start="361:35" pos:end="361:55"><name pos:start="361:35" pos:end="361:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="361:59" pos:end="361:67"><expr pos:start="361:59" pos:end="361:67"><name pos:start="361:59" pos:end="361:67">TD_PSW_CC</name></expr></argument>,

                    <argument pos:start="363:21" pos:end="363:35"><expr pos:start="363:21" pos:end="363:35"><name pos:start="363:21" pos:end="363:35">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:76"><expr pos:start="365:9" pos:end="365:75"><call pos:start="365:9" pos:end="365:75"><name pos:start="365:9" pos:end="365:19">OHCI_SET_BM</name><argument_list pos:start="365:20" pos:end="365:75">(<argument pos:start="365:21" pos:end="365:56"><expr pos:start="365:21" pos:end="365:56"><name pos:start="365:21" pos:end="365:56"><name pos:start="365:21" pos:end="365:26">iso_td</name><operator pos:start="365:27" pos:end="365:27">.</operator><name pos:start="365:28" pos:end="365:33">offset</name><index pos:start="365:34" pos:end="365:56">[<expr pos:start="365:35" pos:end="365:55"><name pos:start="365:35" pos:end="365:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="365:59" pos:end="365:69"><expr pos:start="365:59" pos:end="365:69"><name pos:start="365:59" pos:end="365:69">TD_PSW_SIZE</name></expr></argument>, <argument pos:start="365:72" pos:end="365:74"><expr pos:start="365:72" pos:end="365:74"><name pos:start="365:72" pos:end="365:74">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="367:7" pos:end="377:5">else if <condition pos:start="367:15" pos:end="367:52">(<expr pos:start="367:16" pos:end="367:51"><name pos:start="367:16" pos:end="367:18">dir</name> <operator pos:start="367:20" pos:end="367:21">==</operator> <name pos:start="367:23" pos:end="367:37">OHCI_TD_DIR_OUT</name> <operator pos:start="367:39" pos:end="367:40">&amp;&amp;</operator> <name pos:start="367:42" pos:end="367:44">ret</name> <operator pos:start="367:46" pos:end="367:47">==</operator> <name pos:start="367:49" pos:end="367:51">len</name></expr>)</condition> <block pos:start="367:54" pos:end="377:5">{<block_content pos:start="371:9" pos:end="375:74">

        <comment type="block" pos:start="369:9" pos:end="369:36">/* OUT transfer succeeded */</comment>

        <expr_stmt pos:start="371:9" pos:end="373:37"><expr pos:start="371:9" pos:end="373:36"><call pos:start="371:9" pos:end="373:36"><name pos:start="371:9" pos:end="371:19">OHCI_SET_BM</name><argument_list pos:start="371:20" pos:end="373:36">(<argument pos:start="371:21" pos:end="371:56"><expr pos:start="371:21" pos:end="371:56"><name pos:start="371:21" pos:end="371:56"><name pos:start="371:21" pos:end="371:26">iso_td</name><operator pos:start="371:27" pos:end="371:27">.</operator><name pos:start="371:28" pos:end="371:33">offset</name><index pos:start="371:34" pos:end="371:56">[<expr pos:start="371:35" pos:end="371:55"><name pos:start="371:35" pos:end="371:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="371:59" pos:end="371:67"><expr pos:start="371:59" pos:end="371:67"><name pos:start="371:59" pos:end="371:67">TD_PSW_CC</name></expr></argument>,

                    <argument pos:start="373:21" pos:end="373:35"><expr pos:start="373:21" pos:end="373:35"><name pos:start="373:21" pos:end="373:35">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:74"><expr pos:start="375:9" pos:end="375:73"><call pos:start="375:9" pos:end="375:73"><name pos:start="375:9" pos:end="375:19">OHCI_SET_BM</name><argument_list pos:start="375:20" pos:end="375:73">(<argument pos:start="375:21" pos:end="375:56"><expr pos:start="375:21" pos:end="375:56"><name pos:start="375:21" pos:end="375:56"><name pos:start="375:21" pos:end="375:26">iso_td</name><operator pos:start="375:27" pos:end="375:27">.</operator><name pos:start="375:28" pos:end="375:33">offset</name><index pos:start="375:34" pos:end="375:56">[<expr pos:start="375:35" pos:end="375:55"><name pos:start="375:35" pos:end="375:55">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="375:59" pos:end="375:69"><expr pos:start="375:59" pos:end="375:69"><name pos:start="375:59" pos:end="375:69">TD_PSW_SIZE</name></expr></argument>, <argument pos:start="375:72" pos:end="375:72"><expr pos:start="375:72" pos:end="375:72"><literal type="number" pos:start="375:72" pos:end="375:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="377:7" pos:end="445:5">else <block pos:start="377:12" pos:end="445:5">{<block_content pos:start="379:9" pos:end="443:9">

        <if_stmt pos:start="379:9" pos:end="443:9"><if pos:start="379:9" pos:end="391:9">if <condition pos:start="379:12" pos:end="379:32">(<expr pos:start="379:13" pos:end="379:31"><name pos:start="379:13" pos:end="379:15">ret</name> <operator pos:start="379:17" pos:end="379:17">&gt;</operator> <operator pos:start="379:19" pos:end="379:19">(</operator><name pos:start="379:20" pos:end="379:26">ssize_t</name><operator pos:start="379:27" pos:end="379:27">)</operator> <name pos:start="379:29" pos:end="379:31">len</name></expr>)</condition> <block pos:start="379:34" pos:end="391:9">{<block_content pos:start="381:13" pos:end="389:29">

            <expr_stmt pos:start="381:13" pos:end="381:65"><expr pos:start="381:13" pos:end="381:64"><call pos:start="381:13" pos:end="381:64"><name pos:start="381:13" pos:end="381:18">printf</name><argument_list pos:start="381:19" pos:end="381:64">(<argument pos:start="381:20" pos:end="381:53"><expr pos:start="381:20" pos:end="381:53"><literal type="string" pos:start="381:20" pos:end="381:53">"usb-ohci: DataOverrun %d &gt; %zu\n"</literal></expr></argument>, <argument pos:start="381:56" pos:end="381:58"><expr pos:start="381:56" pos:end="381:58"><name pos:start="381:56" pos:end="381:58">ret</name></expr></argument>, <argument pos:start="381:61" pos:end="381:63"><expr pos:start="381:61" pos:end="381:63"><name pos:start="381:61" pos:end="381:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="385:45"><expr pos:start="383:13" pos:end="385:44"><call pos:start="383:13" pos:end="385:44"><name pos:start="383:13" pos:end="383:23">OHCI_SET_BM</name><argument_list pos:start="383:24" pos:end="385:44">(<argument pos:start="383:25" pos:end="383:60"><expr pos:start="383:25" pos:end="383:60"><name pos:start="383:25" pos:end="383:60"><name pos:start="383:25" pos:end="383:30">iso_td</name><operator pos:start="383:31" pos:end="383:31">.</operator><name pos:start="383:32" pos:end="383:37">offset</name><index pos:start="383:38" pos:end="383:60">[<expr pos:start="383:39" pos:end="383:59"><name pos:start="383:39" pos:end="383:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="383:63" pos:end="383:71"><expr pos:start="383:63" pos:end="383:71"><name pos:start="383:63" pos:end="383:71">TD_PSW_CC</name></expr></argument>,

                        <argument pos:start="385:25" pos:end="385:43"><expr pos:start="385:25" pos:end="385:43"><name pos:start="385:25" pos:end="385:43">OHCI_CC_DATAOVERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="389:29"><expr pos:start="387:13" pos:end="389:28"><call pos:start="387:13" pos:end="389:28"><name pos:start="387:13" pos:end="387:23">OHCI_SET_BM</name><argument_list pos:start="387:24" pos:end="389:28">(<argument pos:start="387:25" pos:end="387:60"><expr pos:start="387:25" pos:end="387:60"><name pos:start="387:25" pos:end="387:60"><name pos:start="387:25" pos:end="387:30">iso_td</name><operator pos:start="387:31" pos:end="387:31">.</operator><name pos:start="387:32" pos:end="387:37">offset</name><index pos:start="387:38" pos:end="387:60">[<expr pos:start="387:39" pos:end="387:59"><name pos:start="387:39" pos:end="387:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="387:63" pos:end="387:73"><expr pos:start="387:63" pos:end="387:73"><name pos:start="387:63" pos:end="387:73">TD_PSW_SIZE</name></expr></argument>,

                        <argument pos:start="389:25" pos:end="389:27"><expr pos:start="389:25" pos:end="389:27"><name pos:start="389:25" pos:end="389:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="391:11" pos:end="399:9">else if <condition pos:start="391:19" pos:end="391:28">(<expr pos:start="391:20" pos:end="391:27"><name pos:start="391:20" pos:end="391:22">ret</name> <operator pos:start="391:24" pos:end="391:25">&gt;=</operator> <literal type="number" pos:start="391:27" pos:end="391:27">0</literal></expr>)</condition> <block pos:start="391:30" pos:end="399:9">{<block_content pos:start="393:13" pos:end="397:46">

            <expr_stmt pos:start="393:13" pos:end="393:55"><expr pos:start="393:13" pos:end="393:54"><call pos:start="393:13" pos:end="393:54"><name pos:start="393:13" pos:end="393:18">printf</name><argument_list pos:start="393:19" pos:end="393:54">(<argument pos:start="393:20" pos:end="393:48"><expr pos:start="393:20" pos:end="393:48"><literal type="string" pos:start="393:20" pos:end="393:48">"usb-ohci: DataUnderrun %d\n"</literal></expr></argument>, <argument pos:start="393:51" pos:end="393:53"><expr pos:start="393:51" pos:end="393:53"><name pos:start="393:51" pos:end="393:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="397:46"><expr pos:start="395:13" pos:end="397:45"><call pos:start="395:13" pos:end="397:45"><name pos:start="395:13" pos:end="395:23">OHCI_SET_BM</name><argument_list pos:start="395:24" pos:end="397:45">(<argument pos:start="395:25" pos:end="395:60"><expr pos:start="395:25" pos:end="395:60"><name pos:start="395:25" pos:end="395:60"><name pos:start="395:25" pos:end="395:30">iso_td</name><operator pos:start="395:31" pos:end="395:31">.</operator><name pos:start="395:32" pos:end="395:37">offset</name><index pos:start="395:38" pos:end="395:60">[<expr pos:start="395:39" pos:end="395:59"><name pos:start="395:39" pos:end="395:59">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="395:63" pos:end="395:71"><expr pos:start="395:63" pos:end="395:71"><name pos:start="395:63" pos:end="395:71">TD_PSW_CC</name></expr></argument>,

                        <argument pos:start="397:25" pos:end="397:44"><expr pos:start="397:25" pos:end="397:44"><name pos:start="397:25" pos:end="397:44">OHCI_CC_DATAUNDERRUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="399:11" pos:end="443:9">else <block pos:start="399:16" pos:end="443:9">{<block_content pos:start="401:13" pos:end="441:13">

            <switch pos:start="401:13" pos:end="441:13">switch <condition pos:start="401:20" pos:end="401:24">(<expr pos:start="401:21" pos:end="401:23"><name pos:start="401:21" pos:end="401:23">ret</name></expr>)</condition> <block pos:start="401:26" pos:end="441:13">{<block_content pos:start="403:13" pos:end="439:22">

            <case pos:start="403:13" pos:end="403:31">case <expr pos:start="403:18" pos:end="403:30"><name pos:start="403:18" pos:end="403:30">USB_RET_NODEV</name></expr>:</case>

                <expr_stmt pos:start="405:17" pos:end="407:57"><expr pos:start="405:17" pos:end="407:56"><call pos:start="405:17" pos:end="407:56"><name pos:start="405:17" pos:end="405:27">OHCI_SET_BM</name><argument_list pos:start="405:28" pos:end="407:56">(<argument pos:start="405:29" pos:end="405:64"><expr pos:start="405:29" pos:end="405:64"><name pos:start="405:29" pos:end="405:64"><name pos:start="405:29" pos:end="405:34">iso_td</name><operator pos:start="405:35" pos:end="405:35">.</operator><name pos:start="405:36" pos:end="405:41">offset</name><index pos:start="405:42" pos:end="405:64">[<expr pos:start="405:43" pos:end="405:63"><name pos:start="405:43" pos:end="405:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="405:67" pos:end="405:75"><expr pos:start="405:67" pos:end="405:75"><name pos:start="405:67" pos:end="405:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="407:29" pos:end="407:55"><expr pos:start="407:29" pos:end="407:55"><name pos:start="407:29" pos:end="407:55">OHCI_CC_DEVICENOTRESPONDING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="411:31"><expr pos:start="409:17" pos:end="411:30"><call pos:start="409:17" pos:end="411:30"><name pos:start="409:17" pos:end="409:27">OHCI_SET_BM</name><argument_list pos:start="409:28" pos:end="411:30">(<argument pos:start="409:29" pos:end="409:64"><expr pos:start="409:29" pos:end="409:64"><name pos:start="409:29" pos:end="409:64"><name pos:start="409:29" pos:end="409:34">iso_td</name><operator pos:start="409:35" pos:end="409:35">.</operator><name pos:start="409:36" pos:end="409:41">offset</name><index pos:start="409:42" pos:end="409:64">[<expr pos:start="409:43" pos:end="409:63"><name pos:start="409:43" pos:end="409:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="409:67" pos:end="409:77"><expr pos:start="409:67" pos:end="409:77"><name pos:start="409:67" pos:end="409:77">TD_PSW_SIZE</name></expr></argument>,

                            <argument pos:start="411:29" pos:end="411:29"><expr pos:start="411:29" pos:end="411:29"><literal type="number" pos:start="411:29" pos:end="411:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="413:17" pos:end="413:22">break;</break>

            <case pos:start="415:13" pos:end="415:29">case <expr pos:start="415:18" pos:end="415:28"><name pos:start="415:18" pos:end="415:28">USB_RET_NAK</name></expr>:</case>

            <case pos:start="417:13" pos:end="417:31">case <expr pos:start="417:18" pos:end="417:30"><name pos:start="417:18" pos:end="417:30">USB_RET_STALL</name></expr>:</case>

                <expr_stmt pos:start="419:17" pos:end="419:60"><expr pos:start="419:17" pos:end="419:59"><call pos:start="419:17" pos:end="419:59"><name pos:start="419:17" pos:end="419:22">printf</name><argument_list pos:start="419:23" pos:end="419:59">(<argument pos:start="419:24" pos:end="419:53"><expr pos:start="419:24" pos:end="419:53"><literal type="string" pos:start="419:24" pos:end="419:53">"usb-ohci: got NAK/STALL %d\n"</literal></expr></argument>, <argument pos:start="419:56" pos:end="419:58"><expr pos:start="419:56" pos:end="419:58"><name pos:start="419:56" pos:end="419:58">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="423:43"><expr pos:start="421:17" pos:end="423:42"><call pos:start="421:17" pos:end="423:42"><name pos:start="421:17" pos:end="421:27">OHCI_SET_BM</name><argument_list pos:start="421:28" pos:end="423:42">(<argument pos:start="421:29" pos:end="421:64"><expr pos:start="421:29" pos:end="421:64"><name pos:start="421:29" pos:end="421:64"><name pos:start="421:29" pos:end="421:34">iso_td</name><operator pos:start="421:35" pos:end="421:35">.</operator><name pos:start="421:36" pos:end="421:41">offset</name><index pos:start="421:42" pos:end="421:64">[<expr pos:start="421:43" pos:end="421:63"><name pos:start="421:43" pos:end="421:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="421:67" pos:end="421:75"><expr pos:start="421:67" pos:end="421:75"><name pos:start="421:67" pos:end="421:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="423:29" pos:end="423:41"><expr pos:start="423:29" pos:end="423:41"><name pos:start="423:29" pos:end="423:41">OHCI_CC_STALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="427:31"><expr pos:start="425:17" pos:end="427:30"><call pos:start="425:17" pos:end="427:30"><name pos:start="425:17" pos:end="425:27">OHCI_SET_BM</name><argument_list pos:start="425:28" pos:end="427:30">(<argument pos:start="425:29" pos:end="425:64"><expr pos:start="425:29" pos:end="425:64"><name pos:start="425:29" pos:end="425:64"><name pos:start="425:29" pos:end="425:34">iso_td</name><operator pos:start="425:35" pos:end="425:35">.</operator><name pos:start="425:36" pos:end="425:41">offset</name><index pos:start="425:42" pos:end="425:64">[<expr pos:start="425:43" pos:end="425:63"><name pos:start="425:43" pos:end="425:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="425:67" pos:end="425:77"><expr pos:start="425:67" pos:end="425:77"><name pos:start="425:67" pos:end="425:77">TD_PSW_SIZE</name></expr></argument>,

                            <argument pos:start="427:29" pos:end="427:29"><expr pos:start="427:29" pos:end="427:29"><literal type="number" pos:start="427:29" pos:end="427:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="429:17" pos:end="429:22">break;</break>

            <default pos:start="431:13" pos:end="431:20">default:</default>

                <expr_stmt pos:start="433:17" pos:end="433:66"><expr pos:start="433:17" pos:end="433:65"><call pos:start="433:17" pos:end="433:65"><name pos:start="433:17" pos:end="433:22">printf</name><argument_list pos:start="433:23" pos:end="433:65">(<argument pos:start="433:24" pos:end="433:59"><expr pos:start="433:24" pos:end="433:59"><literal type="string" pos:start="433:24" pos:end="433:59">"usb-ohci: Bad device response %d\n"</literal></expr></argument>, <argument pos:start="433:62" pos:end="433:64"><expr pos:start="433:62" pos:end="433:64"><name pos:start="433:62" pos:end="433:64">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="435:17" pos:end="437:51"><expr pos:start="435:17" pos:end="437:50"><call pos:start="435:17" pos:end="437:50"><name pos:start="435:17" pos:end="435:27">OHCI_SET_BM</name><argument_list pos:start="435:28" pos:end="437:50">(<argument pos:start="435:29" pos:end="435:64"><expr pos:start="435:29" pos:end="435:64"><name pos:start="435:29" pos:end="435:64"><name pos:start="435:29" pos:end="435:34">iso_td</name><operator pos:start="435:35" pos:end="435:35">.</operator><name pos:start="435:36" pos:end="435:41">offset</name><index pos:start="435:42" pos:end="435:64">[<expr pos:start="435:43" pos:end="435:63"><name pos:start="435:43" pos:end="435:63">relative_frame_number</name></expr>]</index></name></expr></argument>, <argument pos:start="435:67" pos:end="435:75"><expr pos:start="435:67" pos:end="435:75"><name pos:start="435:67" pos:end="435:75">TD_PSW_CC</name></expr></argument>,

                            <argument pos:start="437:29" pos:end="437:49"><expr pos:start="437:29" pos:end="437:49"><name pos:start="437:29" pos:end="437:49">OHCI_CC_UNDEXPETEDPID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="439:17" pos:end="439:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="449:5" pos:end="469:5"><if pos:start="449:5" pos:end="469:5">if <condition pos:start="449:8" pos:end="449:45">(<expr pos:start="449:9" pos:end="449:44"><name pos:start="449:9" pos:end="449:29">relative_frame_number</name> <operator pos:start="449:31" pos:end="449:32">==</operator> <name pos:start="449:34" pos:end="449:44">frame_count</name></expr>)</condition> <block pos:start="449:47" pos:end="469:5">{<block_content pos:start="453:9" pos:end="467:33">

        <comment type="block" pos:start="451:9" pos:end="451:74">/* Last data packet of ISO TD - retire the TD to the Done Queue */</comment>

        <expr_stmt pos:start="453:9" pos:end="453:58"><expr pos:start="453:9" pos:end="453:57"><call pos:start="453:9" pos:end="453:57"><name pos:start="453:9" pos:end="453:19">OHCI_SET_BM</name><argument_list pos:start="453:20" pos:end="453:57">(<argument pos:start="453:21" pos:end="453:32"><expr pos:start="453:21" pos:end="453:32"><name pos:start="453:21" pos:end="453:32"><name pos:start="453:21" pos:end="453:26">iso_td</name><operator pos:start="453:27" pos:end="453:27">.</operator><name pos:start="453:28" pos:end="453:32">flags</name></name></expr></argument>, <argument pos:start="453:35" pos:end="453:39"><expr pos:start="453:35" pos:end="453:39"><name pos:start="453:35" pos:end="453:39">TD_CC</name></expr></argument>, <argument pos:start="453:42" pos:end="453:56"><expr pos:start="453:42" pos:end="453:56"><name pos:start="453:42" pos:end="453:56">OHCI_CC_NOERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:36"><expr pos:start="455:9" pos:end="455:35"><name pos:start="455:9" pos:end="455:16"><name pos:start="455:9" pos:end="455:10">ed</name><operator pos:start="455:11" pos:end="455:12">-&gt;</operator><name pos:start="455:13" pos:end="455:16">head</name></name> <operator pos:start="455:18" pos:end="455:19">&amp;=</operator> <operator pos:start="455:21" pos:end="455:21">~</operator><name pos:start="455:22" pos:end="455:35">OHCI_DPTR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:51"><expr pos:start="457:9" pos:end="457:50"><name pos:start="457:9" pos:end="457:16"><name pos:start="457:9" pos:end="457:10">ed</name><operator pos:start="457:11" pos:end="457:12">-&gt;</operator><name pos:start="457:13" pos:end="457:16">head</name></name> <operator pos:start="457:18" pos:end="457:19">|=</operator> <operator pos:start="457:21" pos:end="457:21">(</operator><name pos:start="457:22" pos:end="457:32"><name pos:start="457:22" pos:end="457:27">iso_td</name><operator pos:start="457:28" pos:end="457:28">.</operator><name pos:start="457:29" pos:end="457:32">next</name></name> <operator pos:start="457:34" pos:end="457:34">&amp;</operator> <name pos:start="457:36" pos:end="457:49">OHCI_DPTR_MASK</name><operator pos:start="457:50" pos:end="457:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:33"><expr pos:start="459:9" pos:end="459:32"><name pos:start="459:9" pos:end="459:19"><name pos:start="459:9" pos:end="459:14">iso_td</name><operator pos:start="459:15" pos:end="459:15">.</operator><name pos:start="459:16" pos:end="459:19">next</name></name> <operator pos:start="459:21" pos:end="459:21">=</operator> <name pos:start="459:23" pos:end="459:32"><name pos:start="459:23" pos:end="459:26">ohci</name><operator pos:start="459:27" pos:end="459:28">-&gt;</operator><name pos:start="459:29" pos:end="459:32">done</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:26"><expr pos:start="461:9" pos:end="461:25"><name pos:start="461:9" pos:end="461:18"><name pos:start="461:9" pos:end="461:12">ohci</name><operator pos:start="461:13" pos:end="461:14">-&gt;</operator><name pos:start="461:15" pos:end="461:18">done</name></name> <operator pos:start="461:20" pos:end="461:20">=</operator> <name pos:start="461:22" pos:end="461:25">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:41"><expr pos:start="463:9" pos:end="463:40"><name pos:start="463:9" pos:end="463:9">i</name> <operator pos:start="463:11" pos:end="463:11">=</operator> <call pos:start="463:13" pos:end="463:40"><name pos:start="463:13" pos:end="463:19">OHCI_BM</name><argument_list pos:start="463:20" pos:end="463:40">(<argument pos:start="463:21" pos:end="463:32"><expr pos:start="463:21" pos:end="463:32"><name pos:start="463:21" pos:end="463:32"><name pos:start="463:21" pos:end="463:26">iso_td</name><operator pos:start="463:27" pos:end="463:27">.</operator><name pos:start="463:28" pos:end="463:32">flags</name></name></expr></argument>, <argument pos:start="463:35" pos:end="463:39"><expr pos:start="463:35" pos:end="463:39"><name pos:start="463:35" pos:end="463:39">TD_DI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="465:9" pos:end="467:33"><if pos:start="465:9" pos:end="467:33">if <condition pos:start="465:12" pos:end="465:33">(<expr pos:start="465:13" pos:end="465:32"><name pos:start="465:13" pos:end="465:13">i</name> <operator pos:start="465:15" pos:end="465:15">&lt;</operator> <name pos:start="465:17" pos:end="465:32"><name pos:start="465:17" pos:end="465:20">ohci</name><operator pos:start="465:21" pos:end="465:22">-&gt;</operator><name pos:start="465:23" pos:end="465:32">done_count</name></name></expr>)</condition><block type="pseudo" pos:start="467:13" pos:end="467:33"><block_content pos:start="467:13" pos:end="467:33">

            <expr_stmt pos:start="467:13" pos:end="467:33"><expr pos:start="467:13" pos:end="467:32"><name pos:start="467:13" pos:end="467:28"><name pos:start="467:13" pos:end="467:16">ohci</name><operator pos:start="467:17" pos:end="467:18">-&gt;</operator><name pos:start="467:19" pos:end="467:28">done_count</name></name> <operator pos:start="467:30" pos:end="467:30">=</operator> <name pos:start="467:32" pos:end="467:32">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:41"><expr pos:start="471:5" pos:end="471:40"><call pos:start="471:5" pos:end="471:40"><name pos:start="471:5" pos:end="471:19">ohci_put_iso_td</name><argument_list pos:start="471:20" pos:end="471:40">(<argument pos:start="471:21" pos:end="471:24"><expr pos:start="471:21" pos:end="471:24"><name pos:start="471:21" pos:end="471:24">ohci</name></expr></argument>, <argument pos:start="471:27" pos:end="471:30"><expr pos:start="471:27" pos:end="471:30"><name pos:start="471:27" pos:end="471:30">addr</name></expr></argument>, <argument pos:start="471:33" pos:end="471:39"><expr pos:start="471:33" pos:end="471:39"><operator pos:start="471:33" pos:end="471:33">&amp;</operator><name pos:start="471:34" pos:end="471:39">iso_td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="473:5" pos:end="473:13">return <expr pos:start="473:12" pos:end="473:12"><literal type="number" pos:start="473:12" pos:end="473:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
