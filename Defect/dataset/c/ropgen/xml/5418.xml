<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5418.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vfio_msix_setup</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:40">VFIOPCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">vdev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">pos</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:59"><expr pos:start="9:5" pos:end="11:58"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:8">vdev</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:14">msix</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:23">pending</name></name> <operator pos:start="9:25" pos:end="9:25">=</operator> <call pos:start="9:27" pos:end="11:58"><name pos:start="9:27" pos:end="9:35">g_malloc0</name><argument_list pos:start="9:36" pos:end="11:58">(<argument pos:start="9:37" pos:end="11:57"><expr pos:start="9:37" pos:end="11:57"><call pos:start="9:37" pos:end="9:70"><name pos:start="9:37" pos:end="9:49">BITS_TO_LONGS</name><argument_list pos:start="9:50" pos:end="9:70">(<argument pos:start="9:51" pos:end="9:69"><expr pos:start="9:51" pos:end="9:69"><name pos:start="9:51" pos:end="9:69"><name pos:start="9:51" pos:end="9:54">vdev</name><operator pos:start="9:55" pos:end="9:56">-&gt;</operator><name pos:start="9:57" pos:end="9:60">msix</name><operator pos:start="9:61" pos:end="9:62">-&gt;</operator><name pos:start="9:63" pos:end="9:69">entries</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:72" pos:end="9:72">*</operator>

                                    sizeof<operator pos:start="11:43" pos:end="11:43">(</operator><name pos:start="11:44" pos:end="11:51">unsigned</name> <name pos:start="11:53" pos:end="11:56">long</name><operator pos:start="11:57" pos:end="11:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="21:70"><expr pos:start="13:5" pos:end="21:69"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="21:69"><name pos:start="13:11" pos:end="13:19">msix_init</name><argument_list pos:start="13:20" pos:end="21:69">(<argument pos:start="13:21" pos:end="13:31"><expr pos:start="13:21" pos:end="13:31"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:31"><name pos:start="13:22" pos:end="13:25">vdev</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:31">pdev</name></name></expr></argument>, <argument pos:start="13:34" pos:end="13:52"><expr pos:start="13:34" pos:end="13:52"><name pos:start="13:34" pos:end="13:52"><name pos:start="13:34" pos:end="13:37">vdev</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:43">msix</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:52">entries</name></name></expr></argument>,

                    <argument pos:start="15:21" pos:end="15:64"><expr pos:start="15:21" pos:end="15:64"><name pos:start="15:21" pos:end="15:53"><name pos:start="15:21" pos:end="15:24">vdev</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">bars</name><index pos:start="15:31" pos:end="15:53">[<expr pos:start="15:32" pos:end="15:52"><name pos:start="15:32" pos:end="15:52"><name pos:start="15:32" pos:end="15:35">vdev</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:41">msix</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:52">table_bar</name></name></expr>]</index></name><operator pos:start="15:54" pos:end="15:54">.</operator><name pos:start="15:55" pos:end="15:64"><name pos:start="15:55" pos:end="15:60">region</name><operator pos:start="15:61" pos:end="15:61">.</operator><name pos:start="15:62" pos:end="15:64">mem</name></name></expr></argument>,

                    <argument pos:start="17:21" pos:end="17:41"><expr pos:start="17:21" pos:end="17:41"><name pos:start="17:21" pos:end="17:41"><name pos:start="17:21" pos:end="17:24">vdev</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:30">msix</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:41">table_bar</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:67"><expr pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:47">vdev</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:53">msix</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:67">table_offset</name></name></expr></argument>,

                    <argument pos:start="19:21" pos:end="19:62"><expr pos:start="19:21" pos:end="19:62"><name pos:start="19:21" pos:end="19:51"><name pos:start="19:21" pos:end="19:24">vdev</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:30">bars</name><index pos:start="19:31" pos:end="19:51">[<expr pos:start="19:32" pos:end="19:50"><name pos:start="19:32" pos:end="19:50"><name pos:start="19:32" pos:end="19:35">vdev</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">msix</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:50">pba_bar</name></name></expr>]</index></name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:62"><name pos:start="19:53" pos:end="19:58">region</name><operator pos:start="19:59" pos:end="19:59">.</operator><name pos:start="19:60" pos:end="19:62">mem</name></name></expr></argument>,

                    <argument pos:start="21:21" pos:end="21:39"><expr pos:start="21:21" pos:end="21:39"><name pos:start="21:21" pos:end="21:39"><name pos:start="21:21" pos:end="21:24">vdev</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:30">msix</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">pba_bar</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:63"><expr pos:start="21:42" pos:end="21:63"><name pos:start="21:42" pos:end="21:63"><name pos:start="21:42" pos:end="21:45">vdev</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:51">msix</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:63">pba_offset</name></name></expr></argument>, <argument pos:start="21:66" pos:end="21:68"><expr pos:start="21:66" pos:end="21:68"><name pos:start="21:66" pos:end="21:68">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:19">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:28">(<expr pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <operator pos:start="25:20" pos:end="25:20">-</operator><name pos:start="25:21" pos:end="25:27">ENOTSUP</name></expr>)</condition> <block pos:start="25:30" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="31:44">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:43"><expr pos:start="31:26" pos:end="31:43"><literal type="string" pos:start="31:26" pos:end="31:43">"msix_init failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="69:7">/*

     * The PCI spec suggests that devices provide additional alignment for

     * MSI-X structures and avoid overlapping non-MSI-X related registers.

     * For an assigned device, this hopefully means that emulation of MSI-X

     * structures does not affect the performance of the device.  If devices

     * fail to provide that alignment, a significant performance penalty may

     * result, for instance Mellanox MT27500 VFs:

     * http://www.spinics.net/lists/kvm/msg125881.html

     *

     * The PBA is simply not that important for such a serious regression and

     * most drivers do not appear to look at it.  The solution for this is to

     * disable the PBA MemoryRegion unless it's being used.  We disable it

     * here and only enable it if a masked vector fires through QEMU.  As the

     * vector-use notifier is called, which occurs on unmask, we test whether

     * PBA emulation is needed and again disable if not.

     */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><call pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:29">memory_region_set_enabled</name><argument_list pos:start="71:30" pos:end="71:63">(<argument pos:start="71:31" pos:end="71:55"><expr pos:start="71:31" pos:end="71:55"><operator pos:start="71:31" pos:end="71:31">&amp;</operator><name pos:start="71:32" pos:end="71:55"><name pos:start="71:32" pos:end="71:35">vdev</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:41">pdev</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:55">msix_pba_mmio</name></name></expr></argument>, <argument pos:start="71:58" pos:end="71:62"><expr pos:start="71:58" pos:end="71:62"><name pos:start="71:58" pos:end="71:62">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
