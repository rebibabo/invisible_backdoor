<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26863.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">long</name></type> <name pos:start="1:13" pos:end="1:27">do_sigreturn_v1</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">CPUARMState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:9" pos:end="89:17">

        <decl_stmt pos:start="5:9" pos:end="5:29"><decl pos:start="5:9" pos:end="5:28"><type pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:17">abi_ulong</name></type> <name pos:start="5:19" pos:end="5:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:34"><decl pos:start="7:9" pos:end="7:33"><type pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:26">sigframe_v1</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:23">target_sigset_t</name></type> <name pos:start="9:25" pos:end="9:27">set</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:26"><decl pos:start="11:9" pos:end="11:25"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">sigset_t</name></type> <name pos:start="11:18" pos:end="11:25">host_set</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



	<comment type="block" pos:start="17:9" pos:end="25:11">/*

	 * Since we stacked the signal on a 64-bit boundary,

	 * then 'sp' should be word aligned here.  If it's

	 * not, then the user is trying to mess with us.

	 */</comment>

	<if_stmt pos:start="27:9" pos:end="29:30"><if pos:start="27:9" pos:end="29:30">if <condition pos:start="27:12" pos:end="27:30">(<expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">env</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">regs</name><index pos:start="27:22" pos:end="27:25">[<expr pos:start="27:23" pos:end="27:24"><literal type="number" pos:start="27:23" pos:end="27:24">13</literal></expr>]</index></name> <operator pos:start="27:27" pos:end="27:27">&amp;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">7</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:30"><block_content pos:start="29:17" pos:end="29:30">

		<goto pos:start="29:17" pos:end="29:30">goto <name pos:start="29:22" pos:end="29:29">badframe</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:18">frame_addr</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:34"><name pos:start="33:22" pos:end="33:24">env</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:30">regs</name><index pos:start="33:31" pos:end="33:34">[<expr pos:start="33:32" pos:end="33:33"><literal type="number" pos:start="33:32" pos:end="33:33">13</literal></expr>]</index></name></expr>;</expr_stmt>

	<if_stmt pos:start="35:9" pos:end="37:30"><if pos:start="35:9" pos:end="37:30">if <condition pos:start="35:12" pos:end="35:65">(<expr pos:start="35:13" pos:end="35:64"><operator pos:start="35:13" pos:end="35:13">!</operator><call pos:start="35:14" pos:end="35:64"><name pos:start="35:14" pos:end="35:29">lock_user_struct</name><argument_list pos:start="35:30" pos:end="35:64">(<argument pos:start="35:31" pos:end="35:41"><expr pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:41">VERIFY_READ</name></expr></argument>, <argument pos:start="35:44" pos:end="35:48"><expr pos:start="35:44" pos:end="35:48"><name pos:start="35:44" pos:end="35:48">frame</name></expr></argument>, <argument pos:start="35:51" pos:end="35:60"><expr pos:start="35:51" pos:end="35:60"><name pos:start="35:51" pos:end="35:60">frame_addr</name></expr></argument>, <argument pos:start="35:63" pos:end="35:63"><expr pos:start="35:63" pos:end="35:63"><literal type="number" pos:start="35:63" pos:end="35:63">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:30"><block_content pos:start="37:17" pos:end="37:30">

                <goto pos:start="37:17" pos:end="37:30">goto <name pos:start="37:22" pos:end="37:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<if_stmt pos:start="41:9" pos:end="43:26"><if pos:start="41:9" pos:end="43:26">if <condition pos:start="41:12" pos:end="41:55">(<expr pos:start="41:13" pos:end="41:54"><call pos:start="41:13" pos:end="41:54"><name pos:start="41:13" pos:end="41:22">__get_user</name><argument_list pos:start="41:23" pos:end="41:54">(<argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:26">set</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:30">sig</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:36" pos:end="41:53"><expr pos:start="41:36" pos:end="41:53"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:53"><name pos:start="41:37" pos:end="41:41">frame</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:45">sc</name><operator pos:start="41:46" pos:end="41:46">.</operator><name pos:start="41:47" pos:end="41:53">oldmask</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:26"><block_content pos:start="43:13" pos:end="43:26">

            <goto pos:start="43:13" pos:end="43:26">goto <name pos:start="43:18" pos:end="43:25">badframe</name>;</goto></block_content></block></if></if_stmt>

        <for pos:start="45:9" pos:end="51:9">for<control pos:start="45:12" pos:end="45:46">(<init pos:start="45:13" pos:end="45:18"><expr pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:13">i</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</init> <condition pos:start="45:20" pos:end="45:41"><expr pos:start="45:20" pos:end="45:40"><name pos:start="45:20" pos:end="45:20">i</name> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <name pos:start="45:24" pos:end="45:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="45:43" pos:end="45:45"><expr pos:start="45:43" pos:end="45:45"><name pos:start="45:43" pos:end="45:43">i</name><operator pos:start="45:44" pos:end="45:45">++</operator></expr></incr>)</control> <block pos:start="45:48" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:30">

            <if_stmt pos:start="47:13" pos:end="49:30"><if pos:start="47:13" pos:end="49:30">if <condition pos:start="47:16" pos:end="47:65">(<expr pos:start="47:17" pos:end="47:64"><call pos:start="47:17" pos:end="47:64"><name pos:start="47:17" pos:end="47:26">__get_user</name><argument_list pos:start="47:27" pos:end="47:64">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:37"><name pos:start="47:28" pos:end="47:30">set</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:34">sig</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:40" pos:end="47:63"><expr pos:start="47:40" pos:end="47:63"><operator pos:start="47:40" pos:end="47:40">&amp;</operator><name pos:start="47:41" pos:end="47:63"><name pos:start="47:41" pos:end="47:45">frame</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:56">extramask</name><index pos:start="47:57" pos:end="47:63">[<expr pos:start="47:58" pos:end="47:62"><name pos:start="47:58" pos:end="47:58">i</name> <operator pos:start="47:60" pos:end="47:60">-</operator> <literal type="number" pos:start="47:62" pos:end="47:62">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:30"><block_content pos:start="49:17" pos:end="49:30">

                <goto pos:start="49:17" pos:end="49:30">goto <name pos:start="49:22" pos:end="49:29">badframe</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:38">target_to_host_sigset_internal</name><argument_list pos:start="55:39" pos:end="55:55">(<argument pos:start="55:40" pos:end="55:48"><expr pos:start="55:40" pos:end="55:48"><operator pos:start="55:40" pos:end="55:40">&amp;</operator><name pos:start="55:41" pos:end="55:48">host_set</name></expr></argument>, <argument pos:start="55:51" pos:end="55:54"><expr pos:start="55:51" pos:end="55:54"><operator pos:start="55:51" pos:end="55:51">&amp;</operator><name pos:start="55:52" pos:end="55:54">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:50"><expr pos:start="57:9" pos:end="57:49"><call pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:19">sigprocmask</name><argument_list pos:start="57:20" pos:end="57:49">(<argument pos:start="57:21" pos:end="57:31"><expr pos:start="57:21" pos:end="57:31"><name pos:start="57:21" pos:end="57:31">SIG_SETMASK</name></expr></argument>, <argument pos:start="57:34" pos:end="57:42"><expr pos:start="57:34" pos:end="57:42"><operator pos:start="57:34" pos:end="57:34">&amp;</operator><name pos:start="57:35" pos:end="57:42">host_set</name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="61:9" pos:end="76:0"><if pos:start="61:9" pos:end="76:0">if <condition pos:start="61:12" pos:end="61:48">(<expr pos:start="61:13" pos:end="61:47"><call pos:start="61:13" pos:end="61:47"><name pos:start="61:13" pos:end="61:30">restore_sigcontext</name><argument_list pos:start="61:31" pos:end="61:47">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">env</name></expr></argument>, <argument pos:start="61:37" pos:end="61:46"><expr pos:start="61:37" pos:end="61:46"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:46"><name pos:start="61:38" pos:end="61:42">frame</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:46">sc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="76:0"><block_content pos:start="63:17" pos:end="76:0">

		<goto pos:start="63:17" pos:end="76:0">goto <name pos:start="63:22" pos:end="63:29">badframe</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:5"><literal type="number" pos:start="67:5" pos:end="67:5">0</literal></expr></cpp:if>

	<comment type="block" pos:start="69:9" pos:end="69:51">/* Send SIGTRAP if we're single-stepping */</comment>

	if (ptrace_cancel_bpt(current))

		send_sig(SIGTRAP, current, 1);

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

	<expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><call pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:26">unlock_user_struct</name><argument_list pos:start="77:27" pos:end="77:48">(<argument pos:start="77:28" pos:end="77:32"><expr pos:start="77:28" pos:end="77:32"><name pos:start="77:28" pos:end="77:32">frame</name></expr></argument>, <argument pos:start="77:35" pos:end="77:44"><expr pos:start="77:35" pos:end="77:44"><name pos:start="77:35" pos:end="77:44">frame_addr</name></expr></argument>, <argument pos:start="77:47" pos:end="77:47"><expr pos:start="77:47" pos:end="77:47"><literal type="number" pos:start="77:47" pos:end="77:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:28">return <expr pos:start="79:16" pos:end="79:27"><name pos:start="79:16" pos:end="79:27"><name pos:start="79:16" pos:end="79:18">env</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">regs</name><index pos:start="79:25" pos:end="79:27">[<expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr>]</index></name></expr>;</return>



<label pos:start="83:1" pos:end="83:9"><name pos:start="83:1" pos:end="83:8">badframe</name>:</label>

	<expr_stmt pos:start="85:9" pos:end="85:49"><expr pos:start="85:9" pos:end="85:48"><call pos:start="85:9" pos:end="85:48"><name pos:start="85:9" pos:end="85:26">unlock_user_struct</name><argument_list pos:start="85:27" pos:end="85:48">(<argument pos:start="85:28" pos:end="85:32"><expr pos:start="85:28" pos:end="85:32"><name pos:start="85:28" pos:end="85:32">frame</name></expr></argument>, <argument pos:start="85:35" pos:end="85:44"><expr pos:start="85:35" pos:end="85:44"><name pos:start="85:35" pos:end="85:44">frame_addr</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><call pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:17">force_sig</name><argument_list pos:start="87:18" pos:end="87:49">(<argument pos:start="87:19" pos:end="87:32"><expr pos:start="87:19" pos:end="87:32"><name pos:start="87:19" pos:end="87:32">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="87:34" pos:end="87:48">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="89:9" pos:end="89:17">return <expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
