<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25647.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">QemuOpts</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:27">opts_parse</name><parameter_list pos:start="1:28" pos:end="2:61">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:40">QemuOptsList</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">list</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">params</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:45"><decl pos:start="2:29" pos:end="2:45"><type pos:start="2:29" pos:end="2:45"><name pos:start="2:29" pos:end="2:31">int</name></type> <name pos:start="2:33" pos:end="2:45">permit_abbrev</name></decl></parameter>, <parameter pos:start="2:48" pos:end="2:60"><decl pos:start="2:48" pos:end="2:60"><type pos:start="2:48" pos:end="2:60"><name pos:start="2:48" pos:end="2:51">bool</name></type> <name pos:start="2:53" pos:end="2:60">defaults</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="4:5" pos:end="30:16">
    <decl_stmt pos:start="4:5" pos:end="4:26"><decl pos:start="4:5" pos:end="4:25"><type pos:start="4:5" pos:end="4:16"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:14">char</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:25">firstname</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:20"><name pos:start="5:10" pos:end="5:14">value</name><index pos:start="5:15" pos:end="5:20">[<expr pos:start="5:16" pos:end="5:19"><literal type="number" pos:start="5:16" pos:end="5:19">1024</literal></expr>]</index></name></decl>, <decl pos:start="5:23" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:8"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:25">id</name> <init pos:start="5:27" pos:end="5:32">= <expr pos:start="5:29" pos:end="5:32"><name pos:start="5:29" pos:end="5:32">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:16"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:14">char</name> <modifier pos:start="6:16" pos:end="6:16">*</modifier></type><name pos:start="6:17" pos:end="6:17">p</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:28"><decl pos:start="8:5" pos:end="8:27"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:9">Error</name> <modifier pos:start="8:11" pos:end="8:11">*</modifier></type><name pos:start="8:12" pos:end="8:20">local_err</name> <init pos:start="8:22" pos:end="8:27">= <expr pos:start="8:24" pos:end="8:27"><name pos:start="8:24" pos:end="8:27">NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:53"><expr pos:start="9:5" pos:end="9:52"><call pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:52">(<argument pos:start="9:12" pos:end="9:51"><expr pos:start="9:12" pos:end="9:51"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:25">permit_abbrev</name> <operator pos:start="9:27" pos:end="9:28">||</operator> <name pos:start="9:30" pos:end="9:51"><name pos:start="9:30" pos:end="9:33">list</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:51">implied_opt_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:62"><expr pos:start="10:5" pos:end="10:61"><name pos:start="10:5" pos:end="10:13">firstname</name> <operator pos:start="10:15" pos:end="10:15">=</operator> <ternary pos:start="10:17" pos:end="10:61"><condition pos:start="10:17" pos:end="10:31"><expr pos:start="10:17" pos:end="10:29"><name pos:start="10:17" pos:end="10:29">permit_abbrev</name></expr> ?</condition><then pos:start="10:33" pos:end="10:54"> <expr pos:start="10:33" pos:end="10:54"><name pos:start="10:33" pos:end="10:54"><name pos:start="10:33" pos:end="10:36">list</name><operator pos:start="10:37" pos:end="10:38">-&gt;</operator><name pos:start="10:39" pos:end="10:54">implied_opt_name</name></name></expr> </then><else pos:start="10:56" pos:end="10:61">: <expr pos:start="10:58" pos:end="10:61"><name pos:start="10:58" pos:end="10:61">NULL</name></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="14:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:15">strncmp</name><argument_list pos:start="11:16" pos:end="11:33">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">params</name></expr></argument>, <argument pos:start="11:25" pos:end="11:29"><expr pos:start="11:25" pos:end="11:29"><literal type="string" pos:start="11:25" pos:end="11:29">"id="</literal></expr></argument>, <argument pos:start="11:32" pos:end="11:32"><expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">3</literal></expr></argument>)</argument_list></call> <operator pos:start="11:35" pos:end="11:36">==</operator> <literal type="number" pos:start="11:38" pos:end="11:38">0</literal></expr>)</condition> <block pos:start="11:41" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:19">
        <expr_stmt pos:start="12:9" pos:end="12:54"><expr pos:start="12:9" pos:end="12:53"><call pos:start="12:9" pos:end="12:53"><name pos:start="12:9" pos:end="12:21">get_opt_value</name><argument_list pos:start="12:22" pos:end="12:53">(<argument pos:start="12:23" pos:end="12:27"><expr pos:start="12:23" pos:end="12:27"><name pos:start="12:23" pos:end="12:27">value</name></expr></argument>, <argument pos:start="12:30" pos:end="12:42"><expr pos:start="12:30" pos:end="12:42"><sizeof pos:start="12:30" pos:end="12:42">sizeof<argument_list pos:start="12:36" pos:end="12:42">(<argument pos:start="12:37" pos:end="12:41"><expr pos:start="12:37" pos:end="12:41"><name pos:start="12:37" pos:end="12:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="12:45" pos:end="12:52"><expr pos:start="12:45" pos:end="12:52"><name pos:start="12:45" pos:end="12:50">params</name><operator pos:start="12:51" pos:end="12:51">+</operator><literal type="number" pos:start="12:52" pos:end="12:52">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:10">id</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:18">value</name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="14:7" pos:end="17:5">else if <condition pos:start="14:15" pos:end="14:52">(<expr pos:start="14:16" pos:end="14:51"><operator pos:start="14:16" pos:end="14:16">(</operator><name pos:start="14:17" pos:end="14:17">p</name> <operator pos:start="14:19" pos:end="14:19">=</operator> <call pos:start="14:21" pos:end="14:42"><name pos:start="14:21" pos:end="14:26">strstr</name><argument_list pos:start="14:27" pos:end="14:42">(<argument pos:start="14:28" pos:end="14:33"><expr pos:start="14:28" pos:end="14:33"><name pos:start="14:28" pos:end="14:33">params</name></expr></argument>, <argument pos:start="14:36" pos:end="14:41"><expr pos:start="14:36" pos:end="14:41"><literal type="string" pos:start="14:36" pos:end="14:41">",id="</literal></expr></argument>)</argument_list></call><operator pos:start="14:43" pos:end="14:43">)</operator> <operator pos:start="14:45" pos:end="14:46">!=</operator> <name pos:start="14:48" pos:end="14:51">NULL</name></expr>)</condition> <block pos:start="14:54" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:19">
        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><call pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:21">get_opt_value</name><argument_list pos:start="15:22" pos:end="15:48">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27">value</name></expr></argument>, <argument pos:start="15:30" pos:end="15:42"><expr pos:start="15:30" pos:end="15:42"><sizeof pos:start="15:30" pos:end="15:42">sizeof<argument_list pos:start="15:36" pos:end="15:42">(<argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:45">p</name><operator pos:start="15:46" pos:end="15:46">+</operator><literal type="number" pos:start="15:47" pos:end="15:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:19"><expr pos:start="16:9" pos:end="16:18"><name pos:start="16:9" pos:end="16:10">id</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <name pos:start="16:14" pos:end="16:18">value</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:61"><expr pos:start="18:5" pos:end="18:60"><name pos:start="18:5" pos:end="18:8">opts</name> <operator pos:start="18:10" pos:end="18:10">=</operator> <call pos:start="18:12" pos:end="18:60"><name pos:start="18:12" pos:end="18:27">qemu_opts_create</name><argument_list pos:start="18:28" pos:end="18:60">(<argument pos:start="18:29" pos:end="18:32"><expr pos:start="18:29" pos:end="18:32"><name pos:start="18:29" pos:end="18:32">list</name></expr></argument>, <argument pos:start="18:35" pos:end="18:36"><expr pos:start="18:35" pos:end="18:36"><name pos:start="18:35" pos:end="18:36">id</name></expr></argument>, <argument pos:start="18:39" pos:end="18:47"><expr pos:start="18:39" pos:end="18:47"><operator pos:start="18:39" pos:end="18:39">!</operator><name pos:start="18:40" pos:end="18:47">defaults</name></expr></argument>, <argument pos:start="18:50" pos:end="18:59"><expr pos:start="18:50" pos:end="18:59"><operator pos:start="18:50" pos:end="18:50">&amp;</operator><name pos:start="18:51" pos:end="18:59">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:12">opts</name> <operator pos:start="19:14" pos:end="19:15">==</operator> <name pos:start="19:17" pos:end="19:20">NULL</name></expr>)</condition> <block pos:start="19:23" pos:end="25:5">{<block_content pos:start="20:9" pos:end="24:20">
        <if_stmt pos:start="20:9" pos:end="23:9"><if pos:start="20:9" pos:end="23:9">if <condition pos:start="20:12" pos:end="20:37">(<expr pos:start="20:13" pos:end="20:36"><call pos:start="20:13" pos:end="20:36"><name pos:start="20:13" pos:end="20:24">error_is_set</name><argument_list pos:start="20:25" pos:end="20:36">(<argument pos:start="20:26" pos:end="20:35"><expr pos:start="20:26" pos:end="20:35"><operator pos:start="20:26" pos:end="20:26">&amp;</operator><name pos:start="20:27" pos:end="20:35">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="20:39" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:34">
            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:29">qerror_report_err</name><argument_list pos:start="21:30" pos:end="21:40">(<argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:34"><expr pos:start="22:13" pos:end="22:33"><call pos:start="22:13" pos:end="22:33"><name pos:start="22:13" pos:end="22:22">error_free</name><argument_list pos:start="22:23" pos:end="22:33">(<argument pos:start="22:24" pos:end="22:32"><expr pos:start="22:24" pos:end="22:32"><name pos:start="22:24" pos:end="22:32">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="24:9" pos:end="24:20">return <expr pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:19">NULL</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="26:5" pos:end="29:5"><if pos:start="26:5" pos:end="29:5">if <condition pos:start="26:8" pos:end="26:62">(<expr pos:start="26:9" pos:end="26:61"><call pos:start="26:9" pos:end="26:56"><name pos:start="26:9" pos:end="26:21">opts_do_parse</name><argument_list pos:start="26:22" pos:end="26:56">(<argument pos:start="26:23" pos:end="26:26"><expr pos:start="26:23" pos:end="26:26"><name pos:start="26:23" pos:end="26:26">opts</name></expr></argument>, <argument pos:start="26:29" pos:end="26:34"><expr pos:start="26:29" pos:end="26:34"><name pos:start="26:29" pos:end="26:34">params</name></expr></argument>, <argument pos:start="26:37" pos:end="26:45"><expr pos:start="26:37" pos:end="26:45"><name pos:start="26:37" pos:end="26:45">firstname</name></expr></argument>, <argument pos:start="26:48" pos:end="26:55"><expr pos:start="26:48" pos:end="26:55"><name pos:start="26:48" pos:end="26:55">defaults</name></expr></argument>)</argument_list></call> <operator pos:start="26:58" pos:end="26:59">!=</operator> <literal type="number" pos:start="26:61" pos:end="26:61">0</literal></expr>)</condition> <block pos:start="26:64" pos:end="29:5">{<block_content pos:start="27:9" pos:end="28:20">
        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:21">qemu_opts_del</name><argument_list pos:start="27:22" pos:end="27:27">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><name pos:start="27:23" pos:end="27:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="28:9" pos:end="28:20">return <expr pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:19">NULL</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="30:5" pos:end="30:16">return <expr pos:start="30:12" pos:end="30:15"><name pos:start="30:12" pos:end="30:15">opts</name></expr>;</return>
</block_content>}</block></function></unit>
