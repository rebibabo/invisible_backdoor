<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12297.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">test_segs</name><parameter_list pos:start="1:15" pos:end="1:20">(<parameter pos:start="1:16" pos:end="1:19"><decl pos:start="1:16" pos:end="1:19"><type pos:start="1:16" pos:end="1:19"><name pos:start="1:16" pos:end="1:19">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:58">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">modify_ldt_ldt_s</name></name></type> <name pos:start="5:29" pos:end="5:31">ldt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:8">long</name> <name pos:start="7:10" pos:end="7:13">long</name></type> <name pos:start="7:15" pos:end="7:26"><name pos:start="7:15" pos:end="7:23">ldt_table</name><index pos:start="7:24" pos:end="7:26">[<expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">res2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:12">tmp</name></decl>;</decl_stmt>

    <struct pos:start="13:5" pos:end="19:37">struct <block pos:start="13:12" pos:end="19:5">{

        <decl_stmt pos:start="15:9" pos:end="15:24"><decl pos:start="15:9" pos:end="15:23"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:23">offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:21"><decl pos:start="17:9" pos:end="17:20"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint16_t</name></type> <name pos:start="17:18" pos:end="17:20">seg</name></decl>;</decl_stmt>

    }</block> <decl pos:start="19:7" pos:end="19:36"><name pos:start="19:7" pos:end="19:19">__attribute__</name><argument_list pos:start="19:20" pos:end="19:29">(<argument pos:start="19:21" pos:end="19:28"><expr pos:start="19:21" pos:end="19:28"><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:27">packed</name><operator pos:start="19:28" pos:end="19:28">)</operator></expr></argument>)</argument_list> <name pos:start="19:31" pos:end="19:36">segoff</name></decl>;</struct>



    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:7">ldt</name><operator pos:start="23:8" pos:end="23:8">.</operator><name pos:start="23:9" pos:end="23:20">entry_number</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">ldt</name><operator pos:start="25:8" pos:end="25:8">.</operator><name pos:start="25:9" pos:end="25:17">base_addr</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:29">unsigned</name> <name pos:start="25:31" pos:end="25:34">long</name><operator pos:start="25:35" pos:end="25:35">)</operator><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:45">seg_data1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">ldt</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:13">limit</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">(</operator><sizeof pos:start="27:18" pos:end="27:34">sizeof<argument_list pos:start="27:24" pos:end="27:34">(<argument pos:start="27:25" pos:end="27:33"><expr pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:33">seg_data1</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:36" pos:end="27:36">+</operator> <literal type="number" pos:start="27:38" pos:end="27:42">0xfff</literal><operator pos:start="27:43" pos:end="27:43">)</operator> <operator pos:start="27:45" pos:end="27:46">&gt;&gt;</operator> <literal type="number" pos:start="27:48" pos:end="27:49">12</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">ldt</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:17">seg_32bit</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">ldt</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:16">contents</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:43">MODIFY_LDT_CONTENTS_DATA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:7">ldt</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:22">read_exec_only</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">ldt</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:22">limit_in_pages</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:7">ldt</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:23">seg_not_present</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:7">ldt</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:15">useable</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><call pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:14">modify_ldt</name><argument_list pos:start="41:15" pos:end="41:36">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr></argument>, <argument pos:start="41:19" pos:end="41:22"><expr pos:start="41:19" pos:end="41:22"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:22">ldt</name></expr></argument>, <argument pos:start="41:25" pos:end="41:35"><expr pos:start="41:25" pos:end="41:35"><sizeof pos:start="41:25" pos:end="41:35">sizeof<argument_list pos:start="41:31" pos:end="41:35">(<argument pos:start="41:32" pos:end="41:34"><expr pos:start="41:32" pos:end="41:34"><name pos:start="41:32" pos:end="41:34">ldt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:39" pos:end="41:59">/* write ldt entry */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:7">ldt</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:20">entry_number</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:7">ldt</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:17">base_addr</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:29">unsigned</name> <name pos:start="47:31" pos:end="47:34">long</name><operator pos:start="47:35" pos:end="47:35">)</operator><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:45">seg_data2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:7">ldt</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:13">limit</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <operator pos:start="49:17" pos:end="49:17">(</operator><sizeof pos:start="49:18" pos:end="49:34">sizeof<argument_list pos:start="49:24" pos:end="49:34">(<argument pos:start="49:25" pos:end="49:33"><expr pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:33">seg_data2</name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:36" pos:end="49:36">+</operator> <literal type="number" pos:start="49:38" pos:end="49:42">0xfff</literal><operator pos:start="49:43" pos:end="49:43">)</operator> <operator pos:start="49:45" pos:end="49:46">&gt;&gt;</operator> <literal type="number" pos:start="49:48" pos:end="49:49">12</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">ldt</name><operator pos:start="51:8" pos:end="51:8">.</operator><name pos:start="51:9" pos:end="51:17">seg_32bit</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:7">ldt</name><operator pos:start="53:8" pos:end="53:8">.</operator><name pos:start="53:9" pos:end="53:16">contents</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:43">MODIFY_LDT_CONTENTS_DATA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:7">ldt</name><operator pos:start="55:8" pos:end="55:8">.</operator><name pos:start="55:9" pos:end="55:22">read_exec_only</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:7">ldt</name><operator pos:start="57:8" pos:end="57:8">.</operator><name pos:start="57:9" pos:end="57:22">limit_in_pages</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:7">ldt</name><operator pos:start="59:8" pos:end="59:8">.</operator><name pos:start="59:9" pos:end="59:23">seg_not_present</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:20"><expr pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:7">ldt</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:15">useable</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:14">modify_ldt</name><argument_list pos:start="63:15" pos:end="63:36">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr></argument>, <argument pos:start="63:19" pos:end="63:22"><expr pos:start="63:19" pos:end="63:22"><operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:22">ldt</name></expr></argument>, <argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><sizeof pos:start="63:25" pos:end="63:35">sizeof<argument_list pos:start="63:31" pos:end="63:35">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">ldt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:39" pos:end="63:59">/* write ldt entry */</comment>



    <expr_stmt pos:start="67:5" pos:end="82:0"><expr pos:start="67:5" pos:end="67:48"><call pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:14">modify_ldt</name><argument_list pos:start="67:15" pos:end="67:48">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr></argument>, <argument pos:start="67:19" pos:end="67:28"><expr pos:start="67:19" pos:end="67:28"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:28">ldt_table</name></expr></argument>, <argument pos:start="67:31" pos:end="67:47"><expr pos:start="67:31" pos:end="67:47"><sizeof pos:start="67:31" pos:end="67:47">sizeof<argument_list pos:start="67:37" pos:end="67:47">(<argument pos:start="67:38" pos:end="67:46"><expr pos:start="67:38" pos:end="67:46"><name pos:start="67:38" pos:end="67:46">ldt_table</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:51" pos:end="67:72">/* read ldt entries */</comment>

<cpp:if pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:5"><literal type="number" pos:start="69:5" pos:end="69:5">0</literal></expr></cpp:if>

    {

        int i;

        for(i=0;i&lt;3;i++)

            printf("%d: %016Lx\n", i, ldt_table[i]);

    }

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="83:5" pos:end="83:37">/* do some tests with fs or gs */</comment>

    <asm pos:start="85:5" pos:end="85:55">asm <specifier pos:start="85:9" pos:end="85:16">volatile</specifier> ("movl %0, %%fs" : : "r" (MK_SEL(1)));</asm>



    <expr_stmt pos:start="89:5" pos:end="89:24"><expr pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:13">seg_data1</name><index pos:start="89:14" pos:end="89:16">[<expr pos:start="89:15" pos:end="89:15"><literal type="number" pos:start="89:15" pos:end="89:15">1</literal></expr>]</index></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <literal type="number" pos:start="89:20" pos:end="89:23">0xaa</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:24"><expr pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:13">seg_data2</name><index pos:start="91:14" pos:end="91:16">[<expr pos:start="91:15" pos:end="91:15"><literal type="number" pos:start="91:15" pos:end="91:15">1</literal></expr>]</index></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <literal type="number" pos:start="91:20" pos:end="91:23">0x55</literal></expr>;</expr_stmt>



    <asm pos:start="95:5" pos:end="95:52">asm <specifier pos:start="95:9" pos:end="95:16">volatile</specifier> ("fs movzbl 0x1, %0" : "=r" (res));</asm>

    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><call pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:10">printf</name><argument_list pos:start="97:11" pos:end="97:33">(<argument pos:start="97:12" pos:end="97:27"><expr pos:start="97:12" pos:end="97:27"><literal type="string" pos:start="97:12" pos:end="97:27">"FS[1] = %02x\n"</literal></expr></argument>, <argument pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><name pos:start="97:30" pos:end="97:32">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <asm pos:start="101:5" pos:end="111:37">asm <specifier pos:start="101:9" pos:end="101:16">volatile</specifier> ("pushl %%gs\n"

                  "movl %1, %%gs\n"

                  "gs movzbl 0x1, %0\n"

                  "popl %%gs\n"

                  : "=r" (res)

                  : "r" (MK_SEL(2)));</asm>

    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><call pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:10">printf</name><argument_list pos:start="113:11" pos:end="113:33">(<argument pos:start="113:12" pos:end="113:27"><expr pos:start="113:12" pos:end="113:27"><literal type="string" pos:start="113:12" pos:end="113:27">"GS[1] = %02x\n"</literal></expr></argument>, <argument pos:start="113:30" pos:end="113:32"><expr pos:start="113:30" pos:end="113:32"><name pos:start="113:30" pos:end="113:32">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:50">/* tests with ds/ss (implicit segment case) */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:15"><expr pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:7">tmp</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <literal type="number" pos:start="119:11" pos:end="119:14">0xa5</literal></expr>;</expr_stmt>

    <asm pos:start="121:5" pos:end="139:49">asm <specifier pos:start="121:9" pos:end="121:16">volatile</specifier> ("pushl %%ebp\n\t"

                  "pushl %%ds\n\t"

                  "movl %2, %%ds\n\t"

                  "movl %3, %%ebp\n\t"

                  "movzbl 0x1, %0\n\t"

                  "movzbl (%%ebp), %1\n\t"

                  "popl %%ds\n\t"

                  "popl %%ebp\n\t"

                  : "=r" (res), "=r" (res2)

                  : "r" (MK_SEL(1)), "r" (&amp;tmp));</asm>

    <expr_stmt pos:start="141:5" pos:end="141:34"><expr pos:start="141:5" pos:end="141:33"><call pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:10">printf</name><argument_list pos:start="141:11" pos:end="141:33">(<argument pos:start="141:12" pos:end="141:27"><expr pos:start="141:12" pos:end="141:27"><literal type="string" pos:start="141:12" pos:end="141:27">"DS[1] = %02x\n"</literal></expr></argument>, <argument pos:start="141:30" pos:end="141:32"><expr pos:start="141:30" pos:end="141:32"><name pos:start="141:30" pos:end="141:32">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:37"><expr pos:start="143:5" pos:end="143:36"><call pos:start="143:5" pos:end="143:36"><name pos:start="143:5" pos:end="143:10">printf</name><argument_list pos:start="143:11" pos:end="143:36">(<argument pos:start="143:12" pos:end="143:29"><expr pos:start="143:12" pos:end="143:29"><literal type="string" pos:start="143:12" pos:end="143:29">"SS[tmp] = %02x\n"</literal></expr></argument>, <argument pos:start="143:32" pos:end="143:35"><expr pos:start="143:32" pos:end="143:35"><name pos:start="143:32" pos:end="143:35">res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:27"><expr pos:start="147:5" pos:end="147:26"><name pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:10">segoff</name><operator pos:start="147:11" pos:end="147:11">.</operator><name pos:start="147:12" pos:end="147:14">seg</name></name> <operator pos:start="147:16" pos:end="147:16">=</operator> <call pos:start="147:18" pos:end="147:26"><name pos:start="147:18" pos:end="147:23">MK_SEL</name><argument_list pos:start="147:24" pos:end="147:26">(<argument pos:start="147:25" pos:end="147:25"><expr pos:start="147:25" pos:end="147:25"><literal type="number" pos:start="147:25" pos:end="147:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:31"><expr pos:start="149:5" pos:end="149:30"><name pos:start="149:5" pos:end="149:17"><name pos:start="149:5" pos:end="149:10">segoff</name><operator pos:start="149:11" pos:end="149:11">.</operator><name pos:start="149:12" pos:end="149:17">offset</name></name> <operator pos:start="149:19" pos:end="149:19">=</operator> <literal type="number" pos:start="149:21" pos:end="149:30">0xabcdef12</literal></expr>;</expr_stmt>

    <asm pos:start="151:5" pos:end="157:33">asm <specifier pos:start="151:9" pos:end="151:16">volatile</specifier>("lfs %2, %0\n\t"

                 "movl %%fs, %1\n\t"

                 : "=r" (res), "=g" (res2)

                 : "m" (segoff));</asm>

    <expr_stmt pos:start="159:5" pos:end="159:46"><expr pos:start="159:5" pos:end="159:45"><call pos:start="159:5" pos:end="159:45"><name pos:start="159:5" pos:end="159:10">printf</name><argument_list pos:start="159:11" pos:end="159:45">(<argument pos:start="159:12" pos:end="159:33"><expr pos:start="159:12" pos:end="159:33"><literal type="string" pos:start="159:12" pos:end="159:33">"FS:reg = %04x:%08x\n"</literal></expr></argument>, <argument pos:start="159:36" pos:end="159:39"><expr pos:start="159:36" pos:end="159:39"><name pos:start="159:36" pos:end="159:39">res2</name></expr></argument>, <argument pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:44">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:44"><expr pos:start="163:5" pos:end="163:43"><call pos:start="163:5" pos:end="163:43"><name pos:start="163:5" pos:end="163:11">TEST_LR</name><argument_list pos:start="163:12" pos:end="163:43">(<argument pos:start="163:13" pos:end="163:18"><expr pos:start="163:13" pos:end="163:18"><literal type="string" pos:start="163:13" pos:end="163:18">"larw"</literal></expr></argument>, <argument pos:start="163:21" pos:end="163:23"><expr pos:start="163:21" pos:end="163:23"><literal type="string" pos:start="163:21" pos:end="163:23">"w"</literal></expr></argument>, <argument pos:start="163:26" pos:end="163:34"><expr pos:start="163:26" pos:end="163:34"><call pos:start="163:26" pos:end="163:34"><name pos:start="163:26" pos:end="163:31">MK_SEL</name><argument_list pos:start="163:32" pos:end="163:34">(<argument pos:start="163:33" pos:end="163:33"><expr pos:start="163:33" pos:end="163:33"><literal type="number" pos:start="163:33" pos:end="163:33">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:37" pos:end="163:42"><expr pos:start="163:37" pos:end="163:42"><literal type="number" pos:start="163:37" pos:end="163:42">0x0100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:43"><expr pos:start="165:5" pos:end="165:42"><call pos:start="165:5" pos:end="165:42"><name pos:start="165:5" pos:end="165:11">TEST_LR</name><argument_list pos:start="165:12" pos:end="165:42">(<argument pos:start="165:13" pos:end="165:18"><expr pos:start="165:13" pos:end="165:18"><literal type="string" pos:start="165:13" pos:end="165:18">"larl"</literal></expr></argument>, <argument pos:start="165:21" pos:end="165:22"><expr pos:start="165:21" pos:end="165:22"><literal type="string" pos:start="165:21" pos:end="165:22">""</literal></expr></argument>, <argument pos:start="165:25" pos:end="165:33"><expr pos:start="165:25" pos:end="165:33"><call pos:start="165:25" pos:end="165:33"><name pos:start="165:25" pos:end="165:30">MK_SEL</name><argument_list pos:start="165:31" pos:end="165:33">(<argument pos:start="165:32" pos:end="165:32"><expr pos:start="165:32" pos:end="165:32"><literal type="number" pos:start="165:32" pos:end="165:32">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:36" pos:end="165:41"><expr pos:start="165:36" pos:end="165:41"><literal type="number" pos:start="165:36" pos:end="165:41">0x0100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:39"><expr pos:start="167:5" pos:end="167:38"><call pos:start="167:5" pos:end="167:38"><name pos:start="167:5" pos:end="167:11">TEST_LR</name><argument_list pos:start="167:12" pos:end="167:38">(<argument pos:start="167:13" pos:end="167:18"><expr pos:start="167:13" pos:end="167:18"><literal type="string" pos:start="167:13" pos:end="167:18">"lslw"</literal></expr></argument>, <argument pos:start="167:21" pos:end="167:23"><expr pos:start="167:21" pos:end="167:23"><literal type="string" pos:start="167:21" pos:end="167:23">"w"</literal></expr></argument>, <argument pos:start="167:26" pos:end="167:34"><expr pos:start="167:26" pos:end="167:34"><call pos:start="167:26" pos:end="167:34"><name pos:start="167:26" pos:end="167:31">MK_SEL</name><argument_list pos:start="167:32" pos:end="167:34">(<argument pos:start="167:33" pos:end="167:33"><expr pos:start="167:33" pos:end="167:33"><literal type="number" pos:start="167:33" pos:end="167:33">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="167:37" pos:end="167:37"><expr pos:start="167:37" pos:end="167:37"><literal type="number" pos:start="167:37" pos:end="167:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:38"><expr pos:start="169:5" pos:end="169:37"><call pos:start="169:5" pos:end="169:37"><name pos:start="169:5" pos:end="169:11">TEST_LR</name><argument_list pos:start="169:12" pos:end="169:37">(<argument pos:start="169:13" pos:end="169:18"><expr pos:start="169:13" pos:end="169:18"><literal type="string" pos:start="169:13" pos:end="169:18">"lsll"</literal></expr></argument>, <argument pos:start="169:21" pos:end="169:22"><expr pos:start="169:21" pos:end="169:22"><literal type="string" pos:start="169:21" pos:end="169:22">""</literal></expr></argument>, <argument pos:start="169:25" pos:end="169:33"><expr pos:start="169:25" pos:end="169:33"><call pos:start="169:25" pos:end="169:33"><name pos:start="169:25" pos:end="169:30">MK_SEL</name><argument_list pos:start="169:31" pos:end="169:33">(<argument pos:start="169:32" pos:end="169:32"><expr pos:start="169:32" pos:end="169:32"><literal type="number" pos:start="169:32" pos:end="169:32">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:36" pos:end="169:36"><expr pos:start="169:36" pos:end="169:36"><literal type="number" pos:start="169:36" pos:end="169:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:36"><expr pos:start="173:5" pos:end="173:35"><call pos:start="173:5" pos:end="173:35"><name pos:start="173:5" pos:end="173:11">TEST_LR</name><argument_list pos:start="173:12" pos:end="173:35">(<argument pos:start="173:13" pos:end="173:18"><expr pos:start="173:13" pos:end="173:18"><literal type="string" pos:start="173:13" pos:end="173:18">"larw"</literal></expr></argument>, <argument pos:start="173:21" pos:end="173:23"><expr pos:start="173:21" pos:end="173:23"><literal type="string" pos:start="173:21" pos:end="173:23">"w"</literal></expr></argument>, <argument pos:start="173:26" pos:end="173:31"><expr pos:start="173:26" pos:end="173:31"><literal type="number" pos:start="173:26" pos:end="173:31">0xfff8</literal></expr></argument>, <argument pos:start="173:34" pos:end="173:34"><expr pos:start="173:34" pos:end="173:34"><literal type="number" pos:start="173:34" pos:end="173:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:35"><expr pos:start="175:5" pos:end="175:34"><call pos:start="175:5" pos:end="175:34"><name pos:start="175:5" pos:end="175:11">TEST_LR</name><argument_list pos:start="175:12" pos:end="175:34">(<argument pos:start="175:13" pos:end="175:18"><expr pos:start="175:13" pos:end="175:18"><literal type="string" pos:start="175:13" pos:end="175:18">"larl"</literal></expr></argument>, <argument pos:start="175:21" pos:end="175:22"><expr pos:start="175:21" pos:end="175:22"><literal type="string" pos:start="175:21" pos:end="175:22">""</literal></expr></argument>, <argument pos:start="175:25" pos:end="175:30"><expr pos:start="175:25" pos:end="175:30"><literal type="number" pos:start="175:25" pos:end="175:30">0xfff8</literal></expr></argument>, <argument pos:start="175:33" pos:end="175:33"><expr pos:start="175:33" pos:end="175:33"><literal type="number" pos:start="175:33" pos:end="175:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:36"><expr pos:start="177:5" pos:end="177:35"><call pos:start="177:5" pos:end="177:35"><name pos:start="177:5" pos:end="177:11">TEST_LR</name><argument_list pos:start="177:12" pos:end="177:35">(<argument pos:start="177:13" pos:end="177:18"><expr pos:start="177:13" pos:end="177:18"><literal type="string" pos:start="177:13" pos:end="177:18">"lslw"</literal></expr></argument>, <argument pos:start="177:21" pos:end="177:23"><expr pos:start="177:21" pos:end="177:23"><literal type="string" pos:start="177:21" pos:end="177:23">"w"</literal></expr></argument>, <argument pos:start="177:26" pos:end="177:31"><expr pos:start="177:26" pos:end="177:31"><literal type="number" pos:start="177:26" pos:end="177:31">0xfff8</literal></expr></argument>, <argument pos:start="177:34" pos:end="177:34"><expr pos:start="177:34" pos:end="177:34"><literal type="number" pos:start="177:34" pos:end="177:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:35"><expr pos:start="179:5" pos:end="179:34"><call pos:start="179:5" pos:end="179:34"><name pos:start="179:5" pos:end="179:11">TEST_LR</name><argument_list pos:start="179:12" pos:end="179:34">(<argument pos:start="179:13" pos:end="179:18"><expr pos:start="179:13" pos:end="179:18"><literal type="string" pos:start="179:13" pos:end="179:18">"lsll"</literal></expr></argument>, <argument pos:start="179:21" pos:end="179:22"><expr pos:start="179:21" pos:end="179:22"><literal type="string" pos:start="179:21" pos:end="179:22">""</literal></expr></argument>, <argument pos:start="179:25" pos:end="179:30"><expr pos:start="179:25" pos:end="179:30"><literal type="number" pos:start="179:25" pos:end="179:30">0xfff8</literal></expr></argument>, <argument pos:start="179:33" pos:end="179:33"><expr pos:start="179:33" pos:end="179:33"><literal type="number" pos:start="179:33" pos:end="179:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:58"><expr pos:start="183:5" pos:end="183:57"><call pos:start="183:5" pos:end="183:57"><name pos:start="183:5" pos:end="183:13">TEST_ARPL</name><argument_list pos:start="183:14" pos:end="183:57">(<argument pos:start="183:15" pos:end="183:20"><expr pos:start="183:15" pos:end="183:20"><literal type="string" pos:start="183:15" pos:end="183:20">"arpl"</literal></expr></argument>, <argument pos:start="183:23" pos:end="183:25"><expr pos:start="183:23" pos:end="183:25"><literal type="string" pos:start="183:23" pos:end="183:25">"w"</literal></expr></argument>, <argument pos:start="183:28" pos:end="183:41"><expr pos:start="183:28" pos:end="183:41"><literal type="number" pos:start="183:28" pos:end="183:37">0x12345678</literal> <operator pos:start="183:39" pos:end="183:39">|</operator> <literal type="number" pos:start="183:41" pos:end="183:41">3</literal></expr></argument>, <argument pos:start="183:44" pos:end="183:56"><expr pos:start="183:44" pos:end="183:56"><literal type="number" pos:start="183:44" pos:end="183:52">0x762123c</literal> <operator pos:start="183:54" pos:end="183:54">|</operator> <literal type="number" pos:start="183:56" pos:end="183:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:58"><expr pos:start="185:5" pos:end="185:57"><call pos:start="185:5" pos:end="185:57"><name pos:start="185:5" pos:end="185:13">TEST_ARPL</name><argument_list pos:start="185:14" pos:end="185:57">(<argument pos:start="185:15" pos:end="185:20"><expr pos:start="185:15" pos:end="185:20"><literal type="string" pos:start="185:15" pos:end="185:20">"arpl"</literal></expr></argument>, <argument pos:start="185:23" pos:end="185:25"><expr pos:start="185:23" pos:end="185:25"><literal type="string" pos:start="185:23" pos:end="185:25">"w"</literal></expr></argument>, <argument pos:start="185:28" pos:end="185:41"><expr pos:start="185:28" pos:end="185:41"><literal type="number" pos:start="185:28" pos:end="185:37">0x12345678</literal> <operator pos:start="185:39" pos:end="185:39">|</operator> <literal type="number" pos:start="185:41" pos:end="185:41">1</literal></expr></argument>, <argument pos:start="185:44" pos:end="185:56"><expr pos:start="185:44" pos:end="185:56"><literal type="number" pos:start="185:44" pos:end="185:52">0x762123c</literal> <operator pos:start="185:54" pos:end="185:54">|</operator> <literal type="number" pos:start="185:56" pos:end="185:56">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:58"><expr pos:start="187:5" pos:end="187:57"><call pos:start="187:5" pos:end="187:57"><name pos:start="187:5" pos:end="187:13">TEST_ARPL</name><argument_list pos:start="187:14" pos:end="187:57">(<argument pos:start="187:15" pos:end="187:20"><expr pos:start="187:15" pos:end="187:20"><literal type="string" pos:start="187:15" pos:end="187:20">"arpl"</literal></expr></argument>, <argument pos:start="187:23" pos:end="187:25"><expr pos:start="187:23" pos:end="187:25"><literal type="string" pos:start="187:23" pos:end="187:25">"w"</literal></expr></argument>, <argument pos:start="187:28" pos:end="187:41"><expr pos:start="187:28" pos:end="187:41"><literal type="number" pos:start="187:28" pos:end="187:37">0x12345678</literal> <operator pos:start="187:39" pos:end="187:39">|</operator> <literal type="number" pos:start="187:41" pos:end="187:41">1</literal></expr></argument>, <argument pos:start="187:44" pos:end="187:56"><expr pos:start="187:44" pos:end="187:56"><literal type="number" pos:start="187:44" pos:end="187:52">0x762123c</literal> <operator pos:start="187:54" pos:end="187:54">|</operator> <literal type="number" pos:start="187:56" pos:end="187:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
