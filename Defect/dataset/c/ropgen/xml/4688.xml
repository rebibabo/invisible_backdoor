<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4688.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">kvm_set_ioeventfd_mmio</name><parameter_list pos:start="1:34" pos:end="3:77">(<parameter pos:start="1:35" pos:end="1:40"><decl pos:start="1:35" pos:end="1:40"><type pos:start="1:35" pos:end="1:40"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:40">fd</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">hwaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:67">val</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:38">bool</name></type> <name pos:start="3:40" pos:end="3:45">assign</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">uint32_t</name></type> <name pos:start="3:57" pos:end="3:60">size</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:76"><decl pos:start="3:63" pos:end="3:76"><type pos:start="3:63" pos:end="3:76"><name pos:start="3:63" pos:end="3:66">bool</name></type> <name pos:start="3:68" pos:end="3:76">datamatch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">kvm_ioeventfd</name></name></type> <name pos:start="9:26" pos:end="9:29">iofd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:8">iofd</name><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:18">datamatch</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <ternary pos:start="13:22" pos:end="13:75"><condition pos:start="13:22" pos:end="13:32"><expr pos:start="13:22" pos:end="13:30"><name pos:start="13:22" pos:end="13:30">datamatch</name></expr> ?</condition><then pos:start="13:34" pos:end="13:71"> <expr pos:start="13:34" pos:end="13:71"><call pos:start="13:34" pos:end="13:71"><name pos:start="13:34" pos:end="13:60">adjust_ioeventfd_endianness</name><argument_list pos:start="13:61" pos:end="13:71">(<argument pos:start="13:62" pos:end="13:64"><expr pos:start="13:62" pos:end="13:64"><name pos:start="13:62" pos:end="13:64">val</name></expr></argument>, <argument pos:start="13:67" pos:end="13:70"><expr pos:start="13:67" pos:end="13:70"><name pos:start="13:67" pos:end="13:70">size</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="13:73" pos:end="13:75">: <expr pos:start="13:75" pos:end="13:75"><literal type="number" pos:start="13:75" pos:end="13:75">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">iofd</name><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:13">addr</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:20">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:8">iofd</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:12">len</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:19">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">iofd</name><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:14">flags</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:8">iofd</name><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:11">fd</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:16">fd</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:20">kvm_enabled</name><argument_list pos:start="25:21" pos:end="25:22">()</argument_list></call></expr>)</condition> <block pos:start="25:25" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:23">

        <return pos:start="27:9" pos:end="27:23">return <expr pos:start="27:16" pos:end="27:22"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:22">ENOSYS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">datamatch</name></expr>)</condition> <block pos:start="33:20" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:51">

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">iofd</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:18">flags</name></name> <operator pos:start="35:20" pos:end="35:21">|=</operator> <name pos:start="35:23" pos:end="35:50">KVM_IOEVENTFD_FLAG_DATAMATCH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:15">assign</name></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:50">

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:12">iofd</name><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:18">flags</name></name> <operator pos:start="41:20" pos:end="41:21">|=</operator> <name pos:start="41:23" pos:end="41:49">KVM_IOEVENTFD_FLAG_DEASSIGN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:56"><expr pos:start="47:5" pos:end="47:55"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:55"><name pos:start="47:11" pos:end="47:22">kvm_vm_ioctl</name><argument_list pos:start="47:23" pos:end="47:55">(<argument pos:start="47:24" pos:end="47:32"><expr pos:start="47:24" pos:end="47:32"><name pos:start="47:24" pos:end="47:32">kvm_state</name></expr></argument>, <argument pos:start="47:35" pos:end="47:47"><expr pos:start="47:35" pos:end="47:47"><name pos:start="47:35" pos:end="47:47">KVM_IOEVENTFD</name></expr></argument>, <argument pos:start="47:50" pos:end="47:54"><expr pos:start="47:50" pos:end="47:54"><operator pos:start="47:50" pos:end="47:50">&amp;</operator><name pos:start="47:51" pos:end="47:54">iofd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:22">

        <return pos:start="53:9" pos:end="53:22">return <expr pos:start="53:16" pos:end="53:21"><operator pos:start="53:16" pos:end="53:16">-</operator><name pos:start="53:17" pos:end="53:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
