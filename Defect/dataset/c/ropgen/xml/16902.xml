<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16902.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:38">bonito_sbridge_pciaddr</name><parameter_list pos:start="1:39" pos:end="1:77">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">void</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">opaque</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:76"><decl pos:start="1:54" pos:end="1:76"><type pos:start="1:54" pos:end="1:76"><name pos:start="1:54" pos:end="1:71">target_phys_addr_t</name></type> <name pos:start="1:73" pos:end="1:76">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:19">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCIBonitoState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PCIHostState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">phb</name> <init pos:start="7:23" pos:end="7:51">= <expr pos:start="7:25" pos:end="7:51"><call pos:start="7:25" pos:end="7:51"><name pos:start="7:25" pos:end="7:39">PCI_HOST_BRIDGE</name><argument_list pos:start="7:40" pos:end="7:51">(<argument pos:start="7:41" pos:end="7:50"><expr pos:start="7:41" pos:end="7:50"><name pos:start="7:41" pos:end="7:50"><name pos:start="7:41" pos:end="7:41">s</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:50">pcihost</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">cfgaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">idsel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">devno</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:18">funno</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:18">regno</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">pciaddr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:34">/* support type0 pci config */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:54">(<expr pos:start="25:9" pos:end="25:53"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:35"><name pos:start="25:10" pos:end="25:10">s</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">regs</name><index pos:start="25:17" pos:end="25:35">[<expr pos:start="25:18" pos:end="25:34"><name pos:start="25:18" pos:end="25:34">BONITO_PCIMAP_CFG</name></expr>]</index></name> <operator pos:start="25:37" pos:end="25:37">&amp;</operator> <literal type="number" pos:start="25:39" pos:end="25:45">0x10000</literal><operator pos:start="25:46" pos:end="25:46">)</operator> <operator pos:start="25:48" pos:end="25:49">!=</operator> <literal type="number" pos:start="25:51" pos:end="25:53">0x0</literal></expr>)</condition> <block pos:start="25:56" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:26">

        <return pos:start="27:9" pos:end="27:26">return <expr pos:start="27:16" pos:end="27:25"><literal type="number" pos:start="27:16" pos:end="27:25">0xffffffff</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:11">cfgaddr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:18">addr</name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <literal type="number" pos:start="33:22" pos:end="33:27">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:59"><expr pos:start="35:5" pos:end="35:58"><name pos:start="35:5" pos:end="35:11">cfgaddr</name> <operator pos:start="35:13" pos:end="35:14">|=</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:23">regs</name><index pos:start="35:24" pos:end="35:42">[<expr pos:start="35:25" pos:end="35:41"><name pos:start="35:25" pos:end="35:41">BONITO_PCIMAP_CFG</name></expr>]</index></name> <operator pos:start="35:44" pos:end="35:44">&amp;</operator> <literal type="number" pos:start="35:46" pos:end="35:51">0xffff</literal><operator pos:start="35:52" pos:end="35:52">)</operator> <operator pos:start="35:54" pos:end="35:55">&lt;&lt;</operator> <literal type="number" pos:start="35:57" pos:end="35:58">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:81"><expr pos:start="39:5" pos:end="39:80"><name pos:start="39:5" pos:end="39:9">idsel</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:20">cfgaddr</name> <operator pos:start="39:22" pos:end="39:22">&amp;</operator> <name pos:start="39:24" pos:end="39:48">BONITO_PCICONF_IDSEL_MASK</name><operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:52">&gt;&gt;</operator> <name pos:start="39:54" pos:end="39:80">BONITO_PCICONF_IDSEL_OFFSET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:9">devno</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:15">ffs</name><argument_list pos:start="41:16" pos:end="41:22">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">idsel</name></expr></argument>)</argument_list></call> <operator pos:start="41:24" pos:end="41:24">-</operator> <literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:77"><expr pos:start="43:5" pos:end="43:76"><name pos:start="43:5" pos:end="43:9">funno</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:20">cfgaddr</name> <operator pos:start="43:22" pos:end="43:22">&amp;</operator> <name pos:start="43:24" pos:end="43:46">BONITO_PCICONF_FUN_MASK</name><operator pos:start="43:47" pos:end="43:47">)</operator> <operator pos:start="43:49" pos:end="43:50">&gt;&gt;</operator> <name pos:start="43:52" pos:end="43:76">BONITO_PCICONF_FUN_OFFSET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:77"><expr pos:start="45:5" pos:end="45:76"><name pos:start="45:5" pos:end="45:9">regno</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:20">cfgaddr</name> <operator pos:start="45:22" pos:end="45:22">&amp;</operator> <name pos:start="45:24" pos:end="45:46">BONITO_PCICONF_REG_MASK</name><operator pos:start="45:47" pos:end="45:47">)</operator> <operator pos:start="45:49" pos:end="45:50">&gt;&gt;</operator> <name pos:start="45:52" pos:end="45:76">BONITO_PCICONF_REG_OFFSET</name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:19">(<expr pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:13">idsel</name> <operator pos:start="49:15" pos:end="49:16">==</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>)</condition> <block pos:start="49:21" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:16">

        <expr_stmt pos:start="51:9" pos:end="53:66"><expr pos:start="51:9" pos:end="53:65"><call pos:start="51:9" pos:end="53:65"><name pos:start="51:9" pos:end="51:15">fprintf</name><argument_list pos:start="51:16" pos:end="53:65">(<argument pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:22">stderr</name></expr></argument>, <argument pos:start="51:25" pos:end="53:30"><expr pos:start="51:25" pos:end="53:30"><literal type="string" pos:start="51:25" pos:end="51:61">"error in bonito pci config address "</literal> <name pos:start="51:63" pos:end="51:76">TARGET_FMT_plx</name>

            <literal type="string" pos:start="53:13" pos:end="53:30">",pcimap_cfg=%x\n"</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:36"><expr pos:start="53:33" pos:end="53:36"><name pos:start="53:33" pos:end="53:36">addr</name></expr></argument>, <argument pos:start="53:39" pos:end="53:64"><expr pos:start="53:39" pos:end="53:64"><name pos:start="53:39" pos:end="53:64"><name pos:start="53:39" pos:end="53:39">s</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:45">regs</name><index pos:start="53:46" pos:end="53:64">[<expr pos:start="53:47" pos:end="53:63"><name pos:start="53:47" pos:end="53:63">BONITO_PCIMAP_CFG</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><call pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">exit</name><argument_list pos:start="55:13" pos:end="55:15">(<argument pos:start="55:14" pos:end="55:14"><expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:67"><expr pos:start="59:5" pos:end="59:66"><name pos:start="59:5" pos:end="59:11">pciaddr</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:66"><name pos:start="59:15" pos:end="59:22">PCI_ADDR</name><argument_list pos:start="59:23" pos:end="59:66">(<argument pos:start="59:24" pos:end="59:44"><expr pos:start="59:24" pos:end="59:44"><call pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:34">pci_bus_num</name><argument_list pos:start="59:35" pos:end="59:44">(<argument pos:start="59:36" pos:end="59:43"><expr pos:start="59:36" pos:end="59:43"><name pos:start="59:36" pos:end="59:43"><name pos:start="59:36" pos:end="59:38">phb</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:43">bus</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:47" pos:end="59:51"><expr pos:start="59:47" pos:end="59:51"><name pos:start="59:47" pos:end="59:51">devno</name></expr></argument>, <argument pos:start="59:54" pos:end="59:58"><expr pos:start="59:54" pos:end="59:58"><name pos:start="59:54" pos:end="59:58">funno</name></expr></argument>, <argument pos:start="59:61" pos:end="59:65"><expr pos:start="59:61" pos:end="59:65"><name pos:start="59:61" pos:end="59:65">regno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:70"><expr pos:start="61:5" pos:end="63:69"><call pos:start="61:5" pos:end="63:69"><name pos:start="61:5" pos:end="61:11">DPRINTF</name><argument_list pos:start="61:12" pos:end="63:69">(<argument pos:start="61:13" pos:end="61:73"><expr pos:start="61:13" pos:end="61:73"><literal type="string" pos:start="61:13" pos:end="61:73">"cfgaddr %x pciaddr %x busno %x devno %d funno %d regno %d\n"</literal></expr></argument>,

        <argument pos:start="63:9" pos:end="63:15"><expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:15">cfgaddr</name></expr></argument>, <argument pos:start="63:18" pos:end="63:24"><expr pos:start="63:18" pos:end="63:24"><name pos:start="63:18" pos:end="63:24">pciaddr</name></expr></argument>, <argument pos:start="63:27" pos:end="63:47"><expr pos:start="63:27" pos:end="63:47"><call pos:start="63:27" pos:end="63:47"><name pos:start="63:27" pos:end="63:37">pci_bus_num</name><argument_list pos:start="63:38" pos:end="63:47">(<argument pos:start="63:39" pos:end="63:46"><expr pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:41">phb</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:46">bus</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:50" pos:end="63:54"><expr pos:start="63:50" pos:end="63:54"><name pos:start="63:50" pos:end="63:54">devno</name></expr></argument>, <argument pos:start="63:57" pos:end="63:61"><expr pos:start="63:57" pos:end="63:61"><name pos:start="63:57" pos:end="63:61">funno</name></expr></argument>, <argument pos:start="63:64" pos:end="63:68"><expr pos:start="63:64" pos:end="63:68"><name pos:start="63:64" pos:end="63:68">regno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:19">return <expr pos:start="67:12" pos:end="67:18"><name pos:start="67:12" pos:end="67:18">pciaddr</name></expr>;</return>

</block_content>}</block></function>
</unit>
