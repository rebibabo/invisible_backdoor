<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/604.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">check_params</name><parameter_list pos:start="1:17" pos:end="3:61">(<parameter pos:start="1:18" pos:end="1:26"><decl pos:start="1:18" pos:end="1:26"><type pos:start="1:18" pos:end="1:26"><name pos:start="1:18" pos:end="1:21">char</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:26">buf</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:40">buf_size</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:43"><decl pos:start="3:18" pos:end="3:43"><type pos:start="3:18" pos:end="3:43"><specifier pos:start="3:18" pos:end="3:22">const</specifier> <name pos:start="3:24" pos:end="3:27">char</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier> <specifier pos:start="3:31" pos:end="3:35">const</specifier> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:43">params</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><specifier pos:start="3:46" pos:end="3:50">const</specifier> <name pos:start="3:52" pos:end="3:55">char</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:60">str</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:12"><expr pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">p</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:11">str</name></expr>;</expr_stmt>

    <while pos:start="15:5" pos:end="53:5">while <condition pos:start="15:11" pos:end="15:22">(<expr pos:start="15:12" pos:end="15:21"><operator pos:start="15:12" pos:end="15:12">*</operator><name pos:start="15:13" pos:end="15:13">p</name> <operator pos:start="15:15" pos:end="15:16">!=</operator> <literal type="char" pos:start="15:18" pos:end="15:21">'\0'</literal></expr>)</condition> <block pos:start="15:24" pos:end="53:5">{<block_content pos:start="17:9" pos:end="51:12">

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:9">p</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:24">get_opt_name</name><argument_list pos:start="17:25" pos:end="17:47">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">buf</name></expr></argument>, <argument pos:start="17:31" pos:end="17:38"><expr pos:start="17:31" pos:end="17:38"><name pos:start="17:31" pos:end="17:38">buf_size</name></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><name pos:start="17:41" pos:end="17:41">p</name></expr></argument>, <argument pos:start="17:44" pos:end="17:46"><expr pos:start="17:44" pos:end="17:46"><literal type="char" pos:start="17:44" pos:end="17:46">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:14">p</name> <operator pos:start="19:16" pos:end="19:17">!=</operator> <literal type="char" pos:start="19:19" pos:end="19:21">'='</literal></expr>)</condition> <block pos:start="19:24" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">p</name><operator pos:start="25:10" pos:end="25:11">++</operator></expr>;</expr_stmt>

        <for pos:start="27:9" pos:end="35:9">for <control pos:start="27:13" pos:end="27:43">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:38"><expr pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:26">params</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name> <operator pos:start="27:31" pos:end="27:32">!=</operator> <name pos:start="27:34" pos:end="27:37">NULL</name></expr>;</condition> <incr pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:40">i</name><operator pos:start="27:41" pos:end="27:42">++</operator></expr></incr>)</control> <block pos:start="27:45" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:13">

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:40">(<expr pos:start="29:17" pos:end="29:39"><operator pos:start="29:17" pos:end="29:17">!</operator><call pos:start="29:18" pos:end="29:39"><name pos:start="29:18" pos:end="29:23">strcmp</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:30">params</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">buf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:42" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:22">

                <break pos:start="31:17" pos:end="31:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:18">params</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">i</name></expr>]</index></name> <operator pos:start="37:23" pos:end="37:24">==</operator> <name pos:start="37:26" pos:end="37:29">NULL</name></expr>)</condition> <block pos:start="37:32" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:9">p</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:25">get_opt_value</name><argument_list pos:start="43:26" pos:end="43:37">(<argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">NULL</name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:36"><expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:14">p</name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <literal type="char" pos:start="45:19" pos:end="45:21">','</literal></expr>)</condition> <block pos:start="45:24" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:12"><expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:9">p</name><operator pos:start="51:10" pos:end="51:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
